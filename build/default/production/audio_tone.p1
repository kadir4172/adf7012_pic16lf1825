Version 3.2 HI-TECH Software Intermediate Code
<<<<<<< HEAD
=======
"51 utility.h
[v _Radio_Setup `(v ~T0 @X0 0 ef ]
"54
[v _Set_Freq `(v ~T0 @X0 0 ef1`ul ]
"52
[v _Ptt_On `(uc ~T0 @X0 0 ef ]
"25
[v _Delay_ms `(v ~T0 @X0 0 ef1`ui ]
"61
[v _Timer0_Start `(v ~T0 @X0 0 ef ]
"62
[v _Timer0_Stop `(v ~T0 @X0 0 ef ]
"30
[v _Send_Vcxo_Signal `(uc ~T0 @X0 0 ef1`uc ]
>>>>>>> 9eeb4c8... [source] audio_tone.c added
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;audio_tone.h: 21: extern uint8_t modem_packet[512];
[; ;audio_tone.h: 22: extern uint32_t modem_packet_size;
[; ;audio_tone.h: 24: void Modem_Setup(void);
[; ;audio_tone.h: 25: void Modem_Start(void);
[; ;audio_tone.h: 26: void Modem_Flush_Frame(void);
[; ;audio_tone.h: 27: void Modem_Set_Tx_Freq(uint32_t);
[; ;audio_tone.h: 28: bool Modem_Busy(void);
[; ;string.h: 4: typedef int ptrdiff_t;
[; ;string.h: 5: typedef unsigned size_t;
[; ;string.h: 6: typedef unsigned short wchar_t;
[; ;string.h: 9: extern int errno;
[; ;string.h: 22: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 23: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 24: extern void * memset(void *, int, size_t);
[; ;string.h: 28: extern void * __builtin_memcpy(void *, const void *, size_t);
[; ;string.h: 42: extern char * strcat(char *, const char *);
[; ;string.h: 43: extern char * strcpy(char *, const char *);
[; ;string.h: 44: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 45: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 46: extern char * strdup(const char *);
[; ;string.h: 47: extern char * strtok(char *, const char *);
[; ;string.h: 50: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 51: extern int strcmp(const char *, const char *);
[; ;string.h: 52: extern int stricmp(const char *, const char *);
[; ;string.h: 53: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 54: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 55: extern void * memchr(const void *, int, size_t);
[; ;string.h: 56: extern size_t strcspn(const char *, const char *);
[; ;string.h: 57: extern char * strpbrk(const char *, const char *);
[; ;string.h: 58: extern size_t strspn(const char *, const char *);
[; ;string.h: 59: extern char * strstr(const char *, const char *);
[; ;string.h: 60: extern char * stristr(const char *, const char *);
[; ;string.h: 61: extern char * strerror(int);
[; ;string.h: 62: extern size_t strlen(const char *);
[; ;string.h: 63: extern char * strchr(const char *, int);
[; ;string.h: 64: extern char * strichr(const char *, int);
[; ;string.h: 65: extern char * strrchr(const char *, int);
[; ;string.h: 66: extern char * strrichr(const char *, int);
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 23: extern int errno;
[; ;stdio.h: 54: struct __prbuf
[; ;stdio.h: 55: {
[; ;stdio.h: 56: char * ptr;
[; ;stdio.h: 57: void (* func)(char);
[; ;stdio.h: 58: };
[; ;conio.h: 17: extern int errno;
[; ;conio.h: 20: extern void init_uart(void);
[; ;conio.h: 22: extern char getch(void);
[; ;conio.h: 23: extern char getche(void);
[; ;conio.h: 24: extern void putch(char);
[; ;conio.h: 25: extern void ungetch(char);
[; ;conio.h: 27: extern __bit kbhit(void);
[; ;conio.h: 31: extern char * cgets(char *);
[; ;conio.h: 32: extern void cputs(const char *);
[; ;stdio.h: 99: extern int cprintf(char *, ...);
[; ;stdio.h: 104: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 194: extern char * gets(char *);
[; ;stdio.h: 195: extern int puts(const char *);
[; ;stdio.h: 196: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 197: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 198: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 199: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 200: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 201: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 205: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 206: extern int printf(const char *, ...);
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: int rem;
[; ;stdlib.h: 29: int quot;
[; ;stdlib.h: 30: } div_t;
[; ;stdlib.h: 31: typedef struct {
[; ;stdlib.h: 32: unsigned rem;
[; ;stdlib.h: 33: unsigned quot;
[; ;stdlib.h: 34: } udiv_t;
[; ;stdlib.h: 35: typedef struct {
[; ;stdlib.h: 36: long quot;
[; ;stdlib.h: 37: long rem;
[; ;stdlib.h: 38: } ldiv_t;
[; ;stdlib.h: 39: typedef struct {
[; ;stdlib.h: 40: unsigned long quot;
[; ;stdlib.h: 41: unsigned long rem;
[; ;stdlib.h: 42: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 70: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 72: extern int rand(void);
[; ;stdlib.h: 73: extern void srand(unsigned int);
[; ;stdlib.h: 74: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 75: extern div_t div(int numer, int denom);
[; ;stdlib.h: 76: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 77: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 78: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 79: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 80: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 81: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 82: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 87: extern void * malloc(size_t);
[; ;stdlib.h: 88: extern void free(void *);
[; ;stdlib.h: 89: extern void * realloc(void *, size_t);
[; ;stdlib.h: 91: extern void abort(void);
[; ;stdlib.h: 92: extern void exit(int);
[; ;stdlib.h: 93: extern int atexit(void (*)(void));
[; ;stdlib.h: 94: extern char * getenv(const char *);
[; ;stdlib.h: 95: extern char ** environ;
[; ;stdlib.h: 96: extern int system(char *);
[; ;stdlib.h: 97: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 98: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 99: extern int abs(int);
[; ;stdlib.h: 100: extern long labs(long);
[; ;stdlib.h: 103: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 104: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 109: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 110: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 112: extern char * ftoa(float f, int * status);
[; ;math.h: 3: extern double fabs(double);
[; ;math.h: 4: extern double floor(double);
[; ;math.h: 5: extern double ceil(double);
[; ;math.h: 6: extern double modf(double, double *);
[; ;math.h: 7: extern double sqrt(double);
[; ;math.h: 8: extern double atof(const char *);
[; ;math.h: 9: extern double sin(double);
[; ;math.h: 10: extern double cos(double);
[; ;math.h: 11: extern double tan(double);
[; ;math.h: 12: extern double asin(double);
[; ;math.h: 13: extern double acos(double);
[; ;math.h: 14: extern double atan(double);
[; ;math.h: 15: extern double atan2(double, double);
[; ;math.h: 16: extern double log(double);
[; ;math.h: 17: extern double log10(double);
[; ;math.h: 18: extern double pow(double, double);
[; ;math.h: 19: extern double exp(double);
[; ;math.h: 20: extern double sinh(double);
[; ;math.h: 21: extern double cosh(double);
[; ;math.h: 22: extern double tanh(double);
[; ;math.h: 23: extern double eval_poly(double, const double *, int);
[; ;math.h: 24: extern double frexp(double, int *);
[; ;math.h: 25: extern double ldexp(double, int);
[; ;math.h: 26: extern double fmod(double, double);
[; ;math.h: 27: extern double trunc(double);
[; ;math.h: 28: extern double round(double);
[; ;utility.h: 25: extern void Delay_ms(uint16_t);
[; ;utility.h: 26: extern bool Write_Adf7012_Reg(uint8_t*, uint8_t);
[; ;utility.h: 27: extern bool Gpio_Config(void);
[; ;utility.h: 28: extern bool Read_Adf7012_Muxout(void);
[; ;utility.h: 29: extern bool Reverse_Array(uint8_t* ,uint8_t);
[; ;utility.h: 30: extern bool Send_Vcxo_Signal(uint8_t);
[; ;utility.h: 45: extern uint32_t timeout_check;
[; ;utility.h: 46: extern uint8_t timeout_flag;
[; ;utility.h: 47: extern uint16_t Systick_Counter;
[; ;utility.h: 51: extern void Radio_Setup(void);
[; ;utility.h: 52: extern bool Ptt_On(void);
[; ;utility.h: 53: extern void Ptt_Off(void);
[; ;utility.h: 54: extern void Set_Freq(uint32_t);
[; ;utility.h: 55: extern bool Spi_Byte_Send(uint8_t);
[; ;utility.h: 61: extern void Timer0_Start(void);
[; ;utility.h: 62: extern void Timer0_Stop(void);
[; ;utility.h: 63: extern void Timer1_Start(void);
[; ;utility.h: 64: extern void Timer1_Stop(void);
[; ;utility.h: 65: extern void Dac0_Start(void);
[; ;utility.h: 66: extern void Dac0_Stop(void);
[; ;utility.h: 67: extern void Adc1_Start(void);
[; ;utility.h: 68: extern void Adc1_Stop(void);
[; ;stdlib.h: 103: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 104: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 109: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 110: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 112: extern char * ftoa(float f, int * status);
[; ;string.h: 22: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 23: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 24: extern void * memset(void *, int, size_t);
[; ;string.h: 28: extern void * __builtin_memcpy(void *, const void *, size_t);
[; ;string.h: 42: extern char * strcat(char *, const char *);
[; ;string.h: 43: extern char * strcpy(char *, const char *);
[; ;string.h: 44: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 45: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 46: extern char * strdup(const char *);
[; ;string.h: 47: extern char * strtok(char *, const char *);
[; ;string.h: 50: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 51: extern int strcmp(const char *, const char *);
[; ;string.h: 52: extern int stricmp(const char *, const char *);
[; ;string.h: 53: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 54: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 55: extern void * memchr(const void *, int, size_t);
[; ;string.h: 56: extern size_t strcspn(const char *, const char *);
[; ;string.h: 57: extern char * strpbrk(const char *, const char *);
[; ;string.h: 58: extern size_t strspn(const char *, const char *);
[; ;string.h: 59: extern char * strstr(const char *, const char *);
[; ;string.h: 60: extern char * stristr(const char *, const char *);
[; ;string.h: 61: extern char * strerror(int);
[; ;string.h: 62: extern size_t strlen(const char *);
[; ;string.h: 63: extern char * strchr(const char *, int);
[; ;string.h: 64: extern char * strichr(const char *, int);
[; ;string.h: 65: extern char * strrchr(const char *, int);
[; ;string.h: 66: extern char * strrichr(const char *, int);
<<<<<<< HEAD
"87 audio_tone.c
=======
"13 audio_tone.c
[v _sine_table `Cuc ~T0 @X0 -> 512 `i e ]
[i _sine_table
:U ..
"14
-> -> 127 `i `uc
-> -> 129 `i `uc
-> -> 130 `i `uc
-> -> 132 `i `uc
-> -> 133 `i `uc
-> -> 135 `i `uc
-> -> 136 `i `uc
-> -> 138 `i `uc
-> -> 139 `i `uc
-> -> 141 `i `uc
-> -> 143 `i `uc
-> -> 144 `i `uc
-> -> 146 `i `uc
-> -> 147 `i `uc
-> -> 149 `i `uc
-> -> 150 `i `uc
-> -> 152 `i `uc
-> -> 153 `i `uc
-> -> 155 `i `uc
-> -> 156 `i `uc
-> -> 158 `i `uc
"15
-> -> 159 `i `uc
-> -> 161 `i `uc
-> -> 163 `i `uc
-> -> 164 `i `uc
-> -> 166 `i `uc
-> -> 167 `i `uc
-> -> 168 `i `uc
-> -> 170 `i `uc
-> -> 171 `i `uc
-> -> 173 `i `uc
-> -> 174 `i `uc
-> -> 176 `i `uc
-> -> 177 `i `uc
-> -> 179 `i `uc
-> -> 180 `i `uc
-> -> 182 `i `uc
-> -> 183 `i `uc
-> -> 184 `i `uc
-> -> 186 `i `uc
-> -> 187 `i `uc
-> -> 188 `i `uc
"16
-> -> 190 `i `uc
-> -> 191 `i `uc
-> -> 193 `i `uc
-> -> 194 `i `uc
-> -> 195 `i `uc
-> -> 197 `i `uc
-> -> 198 `i `uc
-> -> 199 `i `uc
-> -> 200 `i `uc
-> -> 202 `i `uc
-> -> 203 `i `uc
-> -> 204 `i `uc
-> -> 205 `i `uc
-> -> 207 `i `uc
-> -> 208 `i `uc
-> -> 209 `i `uc
-> -> 210 `i `uc
-> -> 211 `i `uc
-> -> 213 `i `uc
-> -> 214 `i `uc
-> -> 215 `i `uc
"17
-> -> 216 `i `uc
-> -> 217 `i `uc
-> -> 218 `i `uc
-> -> 219 `i `uc
-> -> 220 `i `uc
-> -> 221 `i `uc
-> -> 223 `i `uc
-> -> 224 `i `uc
-> -> 225 `i `uc
-> -> 226 `i `uc
-> -> 227 `i `uc
-> -> 228 `i `uc
-> -> 228 `i `uc
-> -> 229 `i `uc
-> -> 230 `i `uc
-> -> 231 `i `uc
-> -> 232 `i `uc
-> -> 233 `i `uc
-> -> 234 `i `uc
-> -> 235 `i `uc
-> -> 236 `i `uc
"18
-> -> 236 `i `uc
-> -> 237 `i `uc
-> -> 238 `i `uc
-> -> 239 `i `uc
-> -> 239 `i `uc
-> -> 240 `i `uc
-> -> 241 `i `uc
-> -> 242 `i `uc
-> -> 242 `i `uc
-> -> 243 `i `uc
-> -> 244 `i `uc
-> -> 244 `i `uc
-> -> 245 `i `uc
-> -> 245 `i `uc
-> -> 246 `i `uc
-> -> 247 `i `uc
-> -> 247 `i `uc
-> -> 248 `i `uc
-> -> 248 `i `uc
-> -> 249 `i `uc
-> -> 249 `i `uc
"19
-> -> 249 `i `uc
-> -> 250 `i `uc
-> -> 250 `i `uc
-> -> 251 `i `uc
-> -> 251 `i `uc
-> -> 251 `i `uc
-> -> 252 `i `uc
-> -> 252 `i `uc
-> -> 252 `i `uc
-> -> 253 `i `uc
-> -> 253 `i `uc
-> -> 253 `i `uc
-> -> 253 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
"20
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 255 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 254 `i `uc
-> -> 253 `i `uc
-> -> 253 `i `uc
-> -> 253 `i `uc
-> -> 253 `i `uc
-> -> 252 `i `uc
-> -> 252 `i `uc
-> -> 252 `i `uc
-> -> 251 `i `uc
"21
-> -> 251 `i `uc
-> -> 251 `i `uc
-> -> 250 `i `uc
-> -> 250 `i `uc
-> -> 249 `i `uc
-> -> 249 `i `uc
-> -> 249 `i `uc
-> -> 248 `i `uc
-> -> 248 `i `uc
-> -> 247 `i `uc
-> -> 247 `i `uc
-> -> 246 `i `uc
-> -> 245 `i `uc
-> -> 245 `i `uc
-> -> 244 `i `uc
-> -> 244 `i `uc
-> -> 243 `i `uc
-> -> 242 `i `uc
-> -> 242 `i `uc
-> -> 241 `i `uc
-> -> 240 `i `uc
"22
-> -> 239 `i `uc
-> -> 239 `i `uc
-> -> 238 `i `uc
-> -> 237 `i `uc
-> -> 236 `i `uc
-> -> 236 `i `uc
-> -> 235 `i `uc
-> -> 234 `i `uc
-> -> 233 `i `uc
-> -> 232 `i `uc
-> -> 231 `i `uc
-> -> 230 `i `uc
-> -> 229 `i `uc
-> -> 228 `i `uc
-> -> 228 `i `uc
-> -> 227 `i `uc
-> -> 226 `i `uc
-> -> 225 `i `uc
-> -> 224 `i `uc
-> -> 223 `i `uc
-> -> 221 `i `uc
"23
-> -> 220 `i `uc
-> -> 219 `i `uc
-> -> 218 `i `uc
-> -> 217 `i `uc
-> -> 216 `i `uc
-> -> 215 `i `uc
-> -> 214 `i `uc
-> -> 213 `i `uc
-> -> 211 `i `uc
-> -> 210 `i `uc
-> -> 209 `i `uc
-> -> 208 `i `uc
-> -> 207 `i `uc
-> -> 205 `i `uc
-> -> 204 `i `uc
-> -> 203 `i `uc
-> -> 202 `i `uc
-> -> 200 `i `uc
-> -> 199 `i `uc
-> -> 198 `i `uc
-> -> 197 `i `uc
"24
-> -> 195 `i `uc
-> -> 194 `i `uc
-> -> 193 `i `uc
-> -> 191 `i `uc
-> -> 190 `i `uc
-> -> 188 `i `uc
-> -> 187 `i `uc
-> -> 186 `i `uc
-> -> 184 `i `uc
-> -> 183 `i `uc
-> -> 182 `i `uc
-> -> 180 `i `uc
-> -> 179 `i `uc
-> -> 177 `i `uc
-> -> 176 `i `uc
-> -> 174 `i `uc
-> -> 173 `i `uc
-> -> 171 `i `uc
-> -> 170 `i `uc
-> -> 168 `i `uc
-> -> 167 `i `uc
"25
-> -> 166 `i `uc
-> -> 164 `i `uc
-> -> 163 `i `uc
-> -> 161 `i `uc
-> -> 159 `i `uc
-> -> 158 `i `uc
-> -> 156 `i `uc
-> -> 155 `i `uc
-> -> 153 `i `uc
-> -> 152 `i `uc
-> -> 150 `i `uc
-> -> 149 `i `uc
-> -> 147 `i `uc
-> -> 146 `i `uc
-> -> 144 `i `uc
-> -> 143 `i `uc
-> -> 141 `i `uc
-> -> 139 `i `uc
-> -> 138 `i `uc
-> -> 136 `i `uc
-> -> 135 `i `uc
"26
-> -> 133 `i `uc
-> -> 132 `i `uc
-> -> 130 `i `uc
-> -> 129 `i `uc
-> -> 127 `i `uc
-> -> 125 `i `uc
-> -> 124 `i `uc
-> -> 122 `i `uc
-> -> 121 `i `uc
-> -> 119 `i `uc
-> -> 118 `i `uc
-> -> 116 `i `uc
-> -> 115 `i `uc
-> -> 113 `i `uc
-> -> 111 `i `uc
-> -> 110 `i `uc
-> -> 108 `i `uc
-> -> 107 `i `uc
-> -> 105 `i `uc
-> -> 104 `i `uc
-> -> 102 `i `uc
"27
-> -> 101 `i `uc
-> -> 99 `i `uc
-> -> 98 `i `uc
-> -> 96 `i `uc
-> -> 95 `i `uc
-> -> 93 `i `uc
-> -> 91 `i `uc
-> -> 90 `i `uc
-> -> 88 `i `uc
-> -> 87 `i `uc
-> -> 86 `i `uc
-> -> 84 `i `uc
-> -> 83 `i `uc
-> -> 81 `i `uc
-> -> 80 `i `uc
-> -> 78 `i `uc
-> -> 77 `i `uc
-> -> 75 `i `uc
-> -> 74 `i `uc
-> -> 72 `i `uc
-> -> 71 `i `uc
"28
-> -> 70 `i `uc
-> -> 68 `i `uc
-> -> 67 `i `uc
-> -> 66 `i `uc
-> -> 64 `i `uc
-> -> 63 `i `uc
-> -> 61 `i `uc
-> -> 60 `i `uc
-> -> 59 `i `uc
-> -> 57 `i `uc
-> -> 56 `i `uc
-> -> 55 `i `uc
-> -> 54 `i `uc
-> -> 52 `i `uc
-> -> 51 `i `uc
-> -> 50 `i `uc
-> -> 49 `i `uc
-> -> 47 `i `uc
-> -> 46 `i `uc
-> -> 45 `i `uc
-> -> 44 `i `uc
"29
-> -> 43 `i `uc
-> -> 41 `i `uc
-> -> 40 `i `uc
-> -> 39 `i `uc
-> -> 38 `i `uc
-> -> 37 `i `uc
-> -> 36 `i `uc
-> -> 35 `i `uc
-> -> 34 `i `uc
-> -> 33 `i `uc
-> -> 31 `i `uc
-> -> 30 `i `uc
-> -> 29 `i `uc
-> -> 28 `i `uc
-> -> 27 `i `uc
-> -> 26 `i `uc
-> -> 26 `i `uc
-> -> 25 `i `uc
-> -> 24 `i `uc
-> -> 23 `i `uc
-> -> 22 `i `uc
"30
-> -> 21 `i `uc
-> -> 20 `i `uc
-> -> 19 `i `uc
-> -> 18 `i `uc
-> -> 18 `i `uc
-> -> 17 `i `uc
-> -> 16 `i `uc
-> -> 15 `i `uc
-> -> 15 `i `uc
-> -> 14 `i `uc
-> -> 13 `i `uc
-> -> 12 `i `uc
-> -> 12 `i `uc
-> -> 11 `i `uc
-> -> 10 `i `uc
-> -> 10 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 8 `i `uc
-> -> 7 `i `uc
-> -> 7 `i `uc
"31
-> -> 6 `i `uc
-> -> 6 `i `uc
-> -> 5 `i `uc
-> -> 5 `i `uc
-> -> 5 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
"32
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
"33
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 2 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
-> -> 4 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 5 `i `uc
-> -> 5 `i `uc
-> -> 6 `i `uc
-> -> 6 `i `uc
-> -> 7 `i `uc
-> -> 7 `i `uc
-> -> 8 `i `uc
-> -> 9 `i `uc
-> -> 9 `i `uc
-> -> 10 `i `uc
-> -> 10 `i `uc
-> -> 11 `i `uc
"34
-> -> 12 `i `uc
-> -> 12 `i `uc
-> -> 13 `i `uc
-> -> 14 `i `uc
-> -> 15 `i `uc
-> -> 15 `i `uc
-> -> 16 `i `uc
-> -> 17 `i `uc
-> -> 18 `i `uc
-> -> 18 `i `uc
-> -> 19 `i `uc
-> -> 20 `i `uc
-> -> 21 `i `uc
-> -> 22 `i `uc
-> -> 23 `i `uc
-> -> 24 `i `uc
-> -> 25 `i `uc
-> -> 26 `i `uc
-> -> 26 `i `uc
-> -> 27 `i `uc
-> -> 28 `i `uc
"35
-> -> 29 `i `uc
-> -> 30 `i `uc
-> -> 31 `i `uc
-> -> 33 `i `uc
-> -> 34 `i `uc
-> -> 35 `i `uc
-> -> 36 `i `uc
-> -> 37 `i `uc
-> -> 38 `i `uc
-> -> 39 `i `uc
-> -> 40 `i `uc
-> -> 41 `i `uc
-> -> 43 `i `uc
-> -> 44 `i `uc
-> -> 45 `i `uc
-> -> 46 `i `uc
-> -> 47 `i `uc
-> -> 49 `i `uc
-> -> 50 `i `uc
-> -> 51 `i `uc
-> -> 52 `i `uc
"36
-> -> 54 `i `uc
-> -> 55 `i `uc
-> -> 56 `i `uc
-> -> 57 `i `uc
-> -> 59 `i `uc
-> -> 60 `i `uc
-> -> 61 `i `uc
-> -> 63 `i `uc
-> -> 64 `i `uc
-> -> 66 `i `uc
-> -> 67 `i `uc
-> -> 68 `i `uc
-> -> 70 `i `uc
-> -> 71 `i `uc
-> -> 72 `i `uc
-> -> 74 `i `uc
-> -> 75 `i `uc
-> -> 77 `i `uc
-> -> 78 `i `uc
-> -> 80 `i `uc
-> -> 81 `i `uc
"37
-> -> 83 `i `uc
-> -> 84 `i `uc
-> -> 86 `i `uc
-> -> 87 `i `uc
-> -> 88 `i `uc
-> -> 90 `i `uc
-> -> 91 `i `uc
-> -> 93 `i `uc
-> -> 95 `i `uc
-> -> 96 `i `uc
-> -> 98 `i `uc
-> -> 99 `i `uc
-> -> 101 `i `uc
-> -> 102 `i `uc
-> -> 104 `i `uc
-> -> 105 `i `uc
-> -> 107 `i `uc
-> -> 108 `i `uc
-> -> 110 `i `uc
-> -> 111 `i `uc
-> -> 113 `i `uc
"38
-> -> 115 `i `uc
-> -> 116 `i `uc
-> -> 118 `i `uc
-> -> 119 `i `uc
-> -> 121 `i `uc
-> -> 122 `i `uc
-> -> 124 `i `uc
"39
-> -> 125 `i `uc
..
]
[; ;audio_tone.c: 13: const uint8_t sine_table[512] = {
[; ;audio_tone.c: 14: 127, 129, 130, 132, 133, 135, 136, 138, 139, 141, 143, 144, 146, 147, 149, 150, 152, 153, 155, 156, 158,
[; ;audio_tone.c: 15: 159, 161, 163, 164, 166, 167, 168, 170, 171, 173, 174, 176, 177, 179, 180, 182, 183, 184, 186, 187, 188,
[; ;audio_tone.c: 16: 190, 191, 193, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215,
[; ;audio_tone.c: 17: 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 228, 229, 230, 231, 232, 233, 234, 235, 236,
[; ;audio_tone.c: 18: 236, 237, 238, 239, 239, 240, 241, 242, 242, 243, 244, 244, 245, 245, 246, 247, 247, 248, 248, 249, 249,
[; ;audio_tone.c: 19: 249, 250, 250, 251, 251, 251, 252, 252, 252, 253, 253, 253, 253, 254, 254, 254, 254, 254, 254, 254, 254,
[; ;audio_tone.c: 20: 254, 254, 255, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 253, 253, 253, 253, 252, 252, 252, 251,
[; ;audio_tone.c: 21: 251, 251, 250, 250, 249, 249, 249, 248, 248, 247, 247, 246, 245, 245, 244, 244, 243, 242, 242, 241, 240,
[; ;audio_tone.c: 22: 239, 239, 238, 237, 236, 236, 235, 234, 233, 232, 231, 230, 229, 228, 228, 227, 226, 225, 224, 223, 221,
[; ;audio_tone.c: 23: 220, 219, 218, 217, 216, 215, 214, 213, 211, 210, 209, 208, 207, 205, 204, 203, 202, 200, 199, 198, 197,
[; ;audio_tone.c: 24: 195, 194, 193, 191, 190, 188, 187, 186, 184, 183, 182, 180, 179, 177, 176, 174, 173, 171, 170, 168, 167,
[; ;audio_tone.c: 25: 166, 164, 163, 161, 159, 158, 156, 155, 153, 152, 150, 149, 147, 146, 144, 143, 141, 139, 138, 136, 135,
[; ;audio_tone.c: 26: 133, 132, 130, 129, 127, 125, 124, 122, 121, 119, 118, 116, 115, 113, 111, 110, 108, 107, 105, 104, 102,
[; ;audio_tone.c: 27: 101, 99, 98, 96, 95, 93, 91, 90, 88, 87, 86, 84, 83, 81, 80, 78, 77, 75, 74, 72, 71,
[; ;audio_tone.c: 28: 70, 68, 67, 66, 64, 63, 61, 60, 59, 57, 56, 55, 54, 52, 51, 50, 49, 47, 46, 45, 44,
[; ;audio_tone.c: 29: 43, 41, 40, 39, 38, 37, 36, 35, 34, 33, 31, 30, 29, 28, 27, 26, 26, 25, 24, 23, 22,
[; ;audio_tone.c: 30: 21, 20, 19, 18, 18, 17, 16, 15, 15, 14, 13, 12, 12, 11, 10, 10, 9, 9, 8, 7, 7,
[; ;audio_tone.c: 31: 6, 6, 5, 5, 5, 4, 4, 3, 3, 3, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0,
[; ;audio_tone.c: 32: 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
[; ;audio_tone.c: 33: 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 9, 9, 10, 10, 11,
[; ;audio_tone.c: 34: 12, 12, 13, 14, 15, 15, 16, 17, 18, 18, 19, 20, 21, 22, 23, 24, 25, 26, 26, 27, 28,
[; ;audio_tone.c: 35: 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52,
[; ;audio_tone.c: 36: 54, 55, 56, 57, 59, 60, 61, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 77, 78, 80, 81,
[; ;audio_tone.c: 37: 83, 84, 86, 87, 88, 90, 91, 93, 95, 96, 98, 99, 101, 102, 104, 105, 107, 108, 110, 111, 113,
[; ;audio_tone.c: 38: 115, 116, 118, 119, 121, 122, 124, 125
[; ;audio_tone.c: 39: };
"87
>>>>>>> 9eeb4c8... [source] audio_tone.c added
[v _PTT_OFF `uc ~T0 @X0 1 e ]
[i _PTT_OFF
-> -> 0 `i `uc
]
[; ;audio_tone.c: 87: bool PTT_OFF = 0;
"88
[v _modem_packet_size `ul ~T0 @X0 1 e ]
[i _modem_packet_size
-> -> -> 0 `i `l `ul
]
[; ;audio_tone.c: 88: uint32_t modem_packet_size = 0;
"89
[v _modem_packet `uc ~T0 @X0 -> 512 `i e ]
[; ;audio_tone.c: 89: uint8_t modem_packet[512];
<<<<<<< HEAD
=======
"93
[v _TABLE_SIZE `Ci ~T0 @X0 1 s ]
[i _TABLE_SIZE
-> -> # _sine_table `ui `i
]
[; ;audio_tone.c: 93: static const int TABLE_SIZE = sizeof(sine_table);
"94
[v _PLAYBACK_RATE `Cul ~T0 @X0 1 s ]
[i _PLAYBACK_RATE
-> -> 100000 `l `ul
]
[; ;audio_tone.c: 94: static const uint32_t PLAYBACK_RATE = 100000;
"95
[v _BAUD_RATE `Ci ~T0 @X0 1 s ]
[i _BAUD_RATE
-> 1200 `i
]
[; ;audio_tone.c: 95: static const int BAUD_RATE = 1200;
"96
[v _SAMPLES_PER_BAUD `uc ~T0 @X0 1 s ]
[; ;audio_tone.c: 96: static uint8_t SAMPLES_PER_BAUD ;
"98
[v _PHASE_DELTA_1200 `ul ~T0 @X0 1 s ]
[; ;audio_tone.c: 98: static uint32_t PHASE_DELTA_1200;
"99
[v _PHASE_DELTA_2200 `ul ~T0 @X0 1 s ]
[; ;audio_tone.c: 99: static uint32_t PHASE_DELTA_2200;
"101
[v _current_byte `uc ~T0 @X0 1 s ]
[; ;audio_tone.c: 101: static uint8_t current_byte;
"102
[v _current_sample_in_baud `uc ~T0 @X0 1 s ]
[; ;audio_tone.c: 102: static uint8_t current_sample_in_baud;
"104
[v _MODEM_TRANSMITTING `uc ~T0 @X0 1 s ]
[i _MODEM_TRANSMITTING
-> -> 0 `i `uc
]
[; ;audio_tone.c: 104: static bool MODEM_TRANSMITTING = 0;
"106
[v _phase_delta `ul ~T0 @X0 1 s ]
[; ;audio_tone.c: 106: static uint32_t phase_delta;
"107
[v _phase `ul ~T0 @X0 1 s ]
[; ;audio_tone.c: 107: static uint32_t phase;
"108
[v _packet_pos `ul ~T0 @X0 1 s ]
[; ;audio_tone.c: 108: static uint32_t packet_pos;
"110
[v _Modem_Init `(v ~T0 @X0 1 ef ]
{
[; ;audio_tone.c: 110: void Modem_Init(void){
[e :U _Modem_Init ]
[f ]
[; ;audio_tone.c: 111: SAMPLES_PER_BAUD = (PLAYBACK_RATE / BAUD_RATE);
"111
[e = _SAMPLES_PER_BAUD -> / _PLAYBACK_RATE -> -> _BAUD_RATE `l `ul `uc ]
[; ;audio_tone.c: 112: PHASE_DELTA_1200 = (((TABLE_SIZE * 1200L) << 7) / PLAYBACK_RATE);
"112
[e = _PHASE_DELTA_1200 / -> << * -> _TABLE_SIZE `l -> 1200 `l -> 7 `i `ul _PLAYBACK_RATE ]
[; ;audio_tone.c: 113: PHASE_DELTA_2200 = (((TABLE_SIZE * 2200L) << 7) / PLAYBACK_RATE);
"113
[e = _PHASE_DELTA_2200 / -> << * -> _TABLE_SIZE `l -> 2200 `l -> 7 `i `ul _PLAYBACK_RATE ]
[; ;audio_tone.c: 114: }
"114
[e :UE 6 ]
}
"116
[v _Modem_Setup `(v ~T0 @X0 1 ef ]
"117
{
[; ;audio_tone.c: 116: void Modem_Setup(void)
[; ;audio_tone.c: 117: {
[e :U _Modem_Setup ]
[f ]
[; ;audio_tone.c: 118: Modem_Init();
"118
[e ( _Modem_Init ..  ]
[; ;audio_tone.c: 119: Radio_Setup();
"119
[e ( _Radio_Setup ..  ]
[; ;audio_tone.c: 120: }
"120
[e :UE 7 ]
}
"122
[v _Modem_Busy `(uc ~T0 @X0 1 ef ]
"123
{
[; ;audio_tone.c: 122: bool Modem_Busy(void)
[; ;audio_tone.c: 123: {
[e :U _Modem_Busy ]
[f ]
[; ;audio_tone.c: 124: return MODEM_TRANSMITTING;
"124
[e ) _MODEM_TRANSMITTING ]
[e $UE 8  ]
[; ;audio_tone.c: 125: }
"125
[e :UE 8 ]
}
"128
[v _Modem_Set_Tx_Freq `(v ~T0 @X0 1 ef1`ul ]
"129
{
[; ;audio_tone.c: 128: void Modem_Set_Tx_Freq(uint32_t freq)
[; ;audio_tone.c: 129: {
[e :U _Modem_Set_Tx_Freq ]
"128
[v _freq `ul ~T0 @X0 1 r1 ]
"129
[f ]
[; ;audio_tone.c: 130: Set_Freq(freq);
"130
[e ( _Set_Freq (1 _freq ]
[; ;audio_tone.c: 131: }
"131
[e :UE 9 ]
}
"133
[v _Modem_Flush_Frame `(v ~T0 @X0 1 ef ]
"134
{
[; ;audio_tone.c: 133: void Modem_Flush_Frame(void)
[; ;audio_tone.c: 134: {
[e :U _Modem_Flush_Frame ]
[f ]
[; ;audio_tone.c: 135: phase_delta = PHASE_DELTA_1200;
"135
[e = _phase_delta _PHASE_DELTA_1200 ]
[; ;audio_tone.c: 136: phase = 0;
"136
[e = _phase -> -> -> 0 `i `l `ul ]
[; ;audio_tone.c: 137: packet_pos = 0;
"137
[e = _packet_pos -> -> -> 0 `i `l `ul ]
[; ;audio_tone.c: 138: current_sample_in_baud = 0;
"138
[e = _current_sample_in_baud -> -> 0 `i `uc ]
[; ;audio_tone.c: 139: MODEM_TRANSMITTING = 1;
"139
[e = _MODEM_TRANSMITTING -> -> 1 `i `uc ]
[; ;audio_tone.c: 142: Ptt_On();
"142
[e ( _Ptt_On ..  ]
[; ;audio_tone.c: 144: Delay_ms(100);
"144
[e ( _Delay_ms (1 -> -> 100 `i `ui ]
[; ;audio_tone.c: 146: Timer0_Start();
"146
[e ( _Timer0_Start ..  ]
[; ;audio_tone.c: 147: }
"147
[e :UE 10 ]
}
"150
[v _Sinus_Generator `(v ~T0 @X0 1 ef ]
{
[; ;audio_tone.c: 150: void Sinus_Generator(void) {
[e :U _Sinus_Generator ]
[f ]
"152
[v _Audio_Signal `uc ~T0 @X0 1 a ]
[; ;audio_tone.c: 152: uint8_t Audio_Signal;
[; ;audio_tone.c: 154: if (MODEM_TRANSMITTING) {
"154
[e $ ! != -> _MODEM_TRANSMITTING `i -> -> -> 0 `i `uc `i 12  ]
{
[; ;audio_tone.c: 157: if (packet_pos == modem_packet_size) {
"157
[e $ ! == _packet_pos _modem_packet_size 13  ]
{
[; ;audio_tone.c: 158: MODEM_TRANSMITTING = 0;
"158
[e = _MODEM_TRANSMITTING -> -> 0 `i `uc ]
[; ;audio_tone.c: 159: Timer0_Stop();
"159
[e ( _Timer0_Stop ..  ]
[; ;audio_tone.c: 161: Send_Vcxo_Signal(0x10);
"161
[e ( _Send_Vcxo_Signal (1 -> -> 16 `i `uc ]
[; ;audio_tone.c: 163: PTT_OFF = 1;
"163
[e = _PTT_OFF -> -> 1 `i `uc ]
[; ;audio_tone.c: 164: goto end_generator;
"164
[e $U 14  ]
"165
}
[e :U 13 ]
[; ;audio_tone.c: 165: }
[; ;audio_tone.c: 168: if (current_sample_in_baud == 0) {
"168
[e $ ! == -> _current_sample_in_baud `i -> 0 `i 15  ]
{
[; ;audio_tone.c: 169: if ((packet_pos & 7) == 0)
"169
[e $ ! == & _packet_pos -> -> -> 7 `i `l `ul -> -> -> 0 `i `l `ul 16  ]
[; ;audio_tone.c: 170: current_byte = modem_packet[packet_pos >> 3];
"170
[e = _current_byte *U + &U _modem_packet * -> >> _packet_pos -> 3 `i `ux -> -> # *U &U _modem_packet `ui `ux ]
[e $U 17  ]
"171
[e :U 16 ]
[; ;audio_tone.c: 171: else
[; ;audio_tone.c: 172: current_byte = current_byte / 2;
"172
[e = _current_byte -> / -> _current_byte `i -> 2 `i `uc ]
[e :U 17 ]
[; ;audio_tone.c: 173: if ((current_byte & 1) == 0) {
"173
[e $ ! == & -> _current_byte `i -> 1 `i -> 0 `i 18  ]
{
[; ;audio_tone.c: 175: phase_delta ^= (PHASE_DELTA_1200 ^ PHASE_DELTA_2200);
"175
[e =^ _phase_delta ^ _PHASE_DELTA_1200 _PHASE_DELTA_2200 ]
"176
}
[e :U 18 ]
"177
}
[e :U 15 ]
[; ;audio_tone.c: 176: }
[; ;audio_tone.c: 177: }
[; ;audio_tone.c: 179: phase += phase_delta;
"179
[e =+ _phase _phase_delta ]
[; ;audio_tone.c: 181: Audio_Signal = *(sine_table + ((phase >> 7) & (TABLE_SIZE - 1)));
"181
[e = _Audio_Signal *U + &U _sine_table * -> & >> _phase -> 7 `i -> -> - _TABLE_SIZE -> 1 `i `l `ul `ux -> -> # *U &U _sine_table `ui `ux ]
[; ;audio_tone.c: 183: Send_Vcxo_Signal(Audio_Signal);
"183
[e ( _Send_Vcxo_Signal (1 _Audio_Signal ]
[; ;audio_tone.c: 184: if(++current_sample_in_baud == SAMPLES_PER_BAUD) {
"184
[e $ ! == -> =+ _current_sample_in_baud -> -> 1 `i `uc `i -> _SAMPLES_PER_BAUD `i 19  ]
{
[; ;audio_tone.c: 185: current_sample_in_baud = 0;
"185
[e = _current_sample_in_baud -> -> 0 `i `uc ]
[; ;audio_tone.c: 186: packet_pos++;
"186
[e ++ _packet_pos -> -> -> 1 `i `l `ul ]
"187
}
[e :U 19 ]
"188
}
[e :U 12 ]
[; ;audio_tone.c: 187: }
[; ;audio_tone.c: 188: }
[; ;audio_tone.c: 190: end_generator:
"190
[e :U 14 ]
[; ;audio_tone.c: 192: return;
"192
[e $UE 11  ]
[; ;audio_tone.c: 193: }
"193
[e :UE 11 ]
}
>>>>>>> 9eeb4c8... [source] audio_tone.c added
