

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Oct 01 12:33:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000E                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  018C                     	;# 
   123  018E                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  020E                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  038C                     	;# 
   183  038E                     	;# 
   184  0391                     	;# 
   185  0392                     	;# 
   186  0393                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000E                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  010C                     	;# 
   254  010E                     	;# 
   255  0111                     	;# 
   256  0112                     	;# 
   257  0113                     	;# 
   258  0114                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011A                     	;# 
   265  011B                     	;# 
   266  011D                     	;# 
   267  011E                     	;# 
   268  018C                     	;# 
   269  018E                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0194                     	;# 
   277  0195                     	;# 
   278  0196                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020E                     	;# 
   289  0211                     	;# 
   290  0211                     	;# 
   291  0212                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0298                     	;# 
   313  0298                     	;# 
   314  0299                     	;# 
   315  029A                     	;# 
   316  029B                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  0311                     	;# 
   321  0311                     	;# 
   322  0312                     	;# 
   323  0313                     	;# 
   324  0318                     	;# 
   325  0318                     	;# 
   326  0319                     	;# 
   327  031A                     	;# 
   328  038C                     	;# 
   329  038E                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  039A                     	;# 
   334  039C                     	;# 
   335  039D                     	;# 
   336  039E                     	;# 
   337  039F                     	;# 
   338  0415                     	;# 
   339  0416                     	;# 
   340  0417                     	;# 
   341  041C                     	;# 
   342  041D                     	;# 
   343  041E                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000E                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  008C                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  010C                     	;# 
   400  010E                     	;# 
   401  0111                     	;# 
   402  0112                     	;# 
   403  0113                     	;# 
   404  0114                     	;# 
   405  0115                     	;# 
   406  0116                     	;# 
   407  0117                     	;# 
   408  0118                     	;# 
   409  0119                     	;# 
   410  011A                     	;# 
   411  011B                     	;# 
   412  011D                     	;# 
   413  011E                     	;# 
   414  018C                     	;# 
   415  018E                     	;# 
   416  0191                     	;# 
   417  0191                     	;# 
   418  0192                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0194                     	;# 
   423  0195                     	;# 
   424  0196                     	;# 
   425  0199                     	;# 
   426  019A                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019C                     	;# 
   430  019D                     	;# 
   431  019E                     	;# 
   432  019F                     	;# 
   433  020C                     	;# 
   434  020E                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  0212                     	;# 
   438  0212                     	;# 
   439  0213                     	;# 
   440  0213                     	;# 
   441  0214                     	;# 
   442  0214                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0216                     	;# 
   447  0216                     	;# 
   448  0217                     	;# 
   449  0217                     	;# 
   450  0291                     	;# 
   451  0291                     	;# 
   452  0292                     	;# 
   453  0293                     	;# 
   454  0294                     	;# 
   455  0295                     	;# 
   456  0295                     	;# 
   457  0296                     	;# 
   458  0298                     	;# 
   459  0298                     	;# 
   460  0299                     	;# 
   461  029A                     	;# 
   462  029B                     	;# 
   463  029C                     	;# 
   464  029D                     	;# 
   465  029E                     	;# 
   466  0311                     	;# 
   467  0311                     	;# 
   468  0312                     	;# 
   469  0313                     	;# 
   470  0318                     	;# 
   471  0318                     	;# 
   472  0319                     	;# 
   473  031A                     	;# 
   474  038C                     	;# 
   475  038E                     	;# 
   476  0391                     	;# 
   477  0392                     	;# 
   478  0393                     	;# 
   479  039A                     	;# 
   480  039C                     	;# 
   481  039D                     	;# 
   482  039E                     	;# 
   483  039F                     	;# 
   484  0415                     	;# 
   485  0416                     	;# 
   486  0417                     	;# 
   487  041C                     	;# 
   488  041D                     	;# 
   489  041E                     	;# 
   490  0FE4                     	;# 
   491  0FE5                     	;# 
   492  0FE6                     	;# 
   493  0FE7                     	;# 
   494  0FE8                     	;# 
   495  0FE9                     	;# 
   496  0FEA                     	;# 
   497  0FEB                     	;# 
   498  0FED                     	;# 
   499  0FEE                     	;# 
   500  0FEF                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  0008                     	;# 
   510  0009                     	;# 
   511  000A                     	;# 
   512  000B                     	;# 
   513  000C                     	;# 
   514  000E                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  008C                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  010C                     	;# 
   546  010E                     	;# 
   547  0111                     	;# 
   548  0112                     	;# 
   549  0113                     	;# 
   550  0114                     	;# 
   551  0115                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  0118                     	;# 
   555  0119                     	;# 
   556  011A                     	;# 
   557  011B                     	;# 
   558  011D                     	;# 
   559  011E                     	;# 
   560  018C                     	;# 
   561  018E                     	;# 
   562  0191                     	;# 
   563  0191                     	;# 
   564  0192                     	;# 
   565  0193                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0199                     	;# 
   572  019A                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019D                     	;# 
   577  019E                     	;# 
   578  019F                     	;# 
   579  020C                     	;# 
   580  020E                     	;# 
   581  0211                     	;# 
   582  0211                     	;# 
   583  0212                     	;# 
   584  0212                     	;# 
   585  0213                     	;# 
   586  0213                     	;# 
   587  0214                     	;# 
   588  0214                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0216                     	;# 
   593  0216                     	;# 
   594  0217                     	;# 
   595  0217                     	;# 
   596  0291                     	;# 
   597  0291                     	;# 
   598  0292                     	;# 
   599  0293                     	;# 
   600  0294                     	;# 
   601  0295                     	;# 
   602  0295                     	;# 
   603  0296                     	;# 
   604  0298                     	;# 
   605  0298                     	;# 
   606  0299                     	;# 
   607  029A                     	;# 
   608  029B                     	;# 
   609  029C                     	;# 
   610  029D                     	;# 
   611  029E                     	;# 
   612  0311                     	;# 
   613  0311                     	;# 
   614  0312                     	;# 
   615  0313                     	;# 
   616  0318                     	;# 
   617  0318                     	;# 
   618  0319                     	;# 
   619  031A                     	;# 
   620  038C                     	;# 
   621  038E                     	;# 
   622  0391                     	;# 
   623  0392                     	;# 
   624  0393                     	;# 
   625  039A                     	;# 
   626  039C                     	;# 
   627  039D                     	;# 
   628  039E                     	;# 
   629  039F                     	;# 
   630  0415                     	;# 
   631  0416                     	;# 
   632  0417                     	;# 
   633  041C                     	;# 
   634  041D                     	;# 
   635  041E                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000E                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008E                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009A                     	;# 
   686  009B                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  010C                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011A                     	;# 
   703  011B                     	;# 
   704  011D                     	;# 
   705  011E                     	;# 
   706  018C                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0193                     	;# 
   714  0194                     	;# 
   715  0195                     	;# 
   716  0196                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  020E                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0213                     	;# 
   733  0214                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  0291                     	;# 
   743  0291                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0294                     	;# 
   747  0295                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0298                     	;# 
   751  0298                     	;# 
   752  0299                     	;# 
   753  029A                     	;# 
   754  029B                     	;# 
   755  029C                     	;# 
   756  029D                     	;# 
   757  029E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  0318                     	;# 
   763  0318                     	;# 
   764  0319                     	;# 
   765  031A                     	;# 
   766  038C                     	;# 
   767  038E                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  0393                     	;# 
   771  039A                     	;# 
   772  039C                     	;# 
   773  039D                     	;# 
   774  039E                     	;# 
   775  039F                     	;# 
   776  0415                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  041C                     	;# 
   780  041D                     	;# 
   781  041E                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793                           
   794                           	psect	idataBANK2
   795  07F0                     __pidataBANK2:	
   796                           
   797                           ;initializer for main@F3169
   798  07F0  3443               	retlw	67
   799  07F1  3455               	retlw	85
   800  07F2  3442               	retlw	66
   801  07F3  3445               	retlw	69
   802  07F4  3459               	retlw	89
   803  07F5  3459               	retlw	89
   804  07F6  3400               	retlw	0
   805  07F7  3405               	retlw	5
   806  07F8  3443               	retlw	67
   807  07F9  3455               	retlw	85
   808  07FA  3442               	retlw	66
   809  07FB  3445               	retlw	69
   810  07FC  3458               	retlw	88
   811  07FD  3458               	retlw	88
   812  07FE  3400               	retlw	0
   813  07FF  3406               	retlw	6
   814                           
   815                           	psect	stringtext
   816  0400                     __pstringtext:	
   817  0400                     _sine_table2:	
   818  0400  3410               	retlw	16
   819  0401  3410               	retlw	16
   820  0402  3411               	retlw	17
   821  0403  3411               	retlw	17
   822  0404  3412               	retlw	18
   823  0405  3412               	retlw	18
   824  0406  3413               	retlw	19
   825  0407  3413               	retlw	19
   826  0408  3414               	retlw	20
   827  0409  3414               	retlw	20
   828  040A  3415               	retlw	21
   829  040B  3415               	retlw	21
   830  040C  3416               	retlw	22
   831  040D  3416               	retlw	22
   832  040E  3417               	retlw	23
   833  040F  3417               	retlw	23
   834  0410  3418               	retlw	24
   835  0411  3418               	retlw	24
   836  0412  3419               	retlw	25
   837  0413  3419               	retlw	25
   838  0414  3419               	retlw	25
   839  0415  341A               	retlw	26
   840  0416  341A               	retlw	26
   841  0417  341B               	retlw	27
   842  0418  341B               	retlw	27
   843  0419  341B               	retlw	27
   844  041A  341C               	retlw	28
   845  041B  341C               	retlw	28
   846  041C  341C               	retlw	28
   847  041D  341D               	retlw	29
   848  041E  341D               	retlw	29
   849  041F  341D               	retlw	29
   850  0420  341D               	retlw	29
   851  0421  341E               	retlw	30
   852  0422  341E               	retlw	30
   853  0423  341E               	retlw	30
   854  0424  341E               	retlw	30
   855  0425  341E               	retlw	30
   856  0426  341E               	retlw	30
   857  0427  341F               	retlw	31
   858  0428  341F               	retlw	31
   859  0429  341F               	retlw	31
   860  042A  341F               	retlw	31
   861  042B  341F               	retlw	31
   862  042C  341F               	retlw	31
   863  042D  341F               	retlw	31
   864  042E  341F               	retlw	31
   865  042F  341F               	retlw	31
   866  0430  341F               	retlw	31
   867  0431  341F               	retlw	31
   868  0432  341F               	retlw	31
   869  0433  341F               	retlw	31
   870  0434  341F               	retlw	31
   871  0435  341E               	retlw	30
   872  0436  341E               	retlw	30
   873  0437  341E               	retlw	30
   874  0438  341E               	retlw	30
   875  0439  341E               	retlw	30
   876  043A  341E               	retlw	30
   877  043B  341D               	retlw	29
   878  043C  341D               	retlw	29
   879  043D  341D               	retlw	29
   880  043E  341D               	retlw	29
   881  043F  341C               	retlw	28
   882  0440  341C               	retlw	28
   883  0441  341C               	retlw	28
   884  0442  341B               	retlw	27
   885  0443  341B               	retlw	27
   886  0444  341B               	retlw	27
   887  0445  341A               	retlw	26
   888  0446  341A               	retlw	26
   889  0447  3419               	retlw	25
   890  0448  3419               	retlw	25
   891  0449  3419               	retlw	25
   892  044A  3418               	retlw	24
   893  044B  3418               	retlw	24
   894  044C  3417               	retlw	23
   895  044D  3417               	retlw	23
   896  044E  3416               	retlw	22
   897  044F  3416               	retlw	22
   898  0450  3415               	retlw	21
   899  0451  3415               	retlw	21
   900  0452  3414               	retlw	20
   901  0453  3414               	retlw	20
   902  0454  3413               	retlw	19
   903  0455  3413               	retlw	19
   904  0456  3412               	retlw	18
   905  0457  3412               	retlw	18
   906  0458  3411               	retlw	17
   907  0459  3411               	retlw	17
   908  045A  3410               	retlw	16
   909  045B  3410               	retlw	16
   910  045C  340F               	retlw	15
   911  045D  340E               	retlw	14
   912  045E  340E               	retlw	14
   913  045F  340D               	retlw	13
   914  0460  340D               	retlw	13
   915  0461  340C               	retlw	12
   916  0462  340C               	retlw	12
   917  0463  340B               	retlw	11
   918  0464  340B               	retlw	11
   919  0465  340A               	retlw	10
   920  0466  340A               	retlw	10
   921  0467  3409               	retlw	9
   922  0468  3409               	retlw	9
   923  0469  3408               	retlw	8
   924  046A  3408               	retlw	8
   925  046B  3407               	retlw	7
   926  046C  3407               	retlw	7
   927  046D  3406               	retlw	6
   928  046E  3406               	retlw	6
   929  046F  3406               	retlw	6
   930  0470  3405               	retlw	5
   931  0471  3405               	retlw	5
   932  0472  3404               	retlw	4
   933  0473  3404               	retlw	4
   934  0474  3404               	retlw	4
   935  0475  3403               	retlw	3
   936  0476  3403               	retlw	3
   937  0477  3403               	retlw	3
   938  0478  3402               	retlw	2
   939  0479  3402               	retlw	2
   940  047A  3402               	retlw	2
   941  047B  3402               	retlw	2
   942  047C  3401               	retlw	1
   943  047D  3401               	retlw	1
   944  047E  3401               	retlw	1
   945  047F  3401               	retlw	1
   946  0480  3401               	retlw	1
   947  0481  3401               	retlw	1
   948  0482  3400               	retlw	0
   949  0483  3400               	retlw	0
   950  0484  3400               	retlw	0
   951  0485  3400               	retlw	0
   952  0486  3400               	retlw	0
   953  0487  3400               	retlw	0
   954  0488  3400               	retlw	0
   955  0489  3400               	retlw	0
   956  048A  3400               	retlw	0
   957  048B  3400               	retlw	0
   958  048C  3400               	retlw	0
   959  048D  3400               	retlw	0
   960  048E  3400               	retlw	0
   961  048F  3400               	retlw	0
   962  0490  3401               	retlw	1
   963  0491  3401               	retlw	1
   964  0492  3401               	retlw	1
   965  0493  3401               	retlw	1
   966  0494  3401               	retlw	1
   967  0495  3401               	retlw	1
   968  0496  3402               	retlw	2
   969  0497  3402               	retlw	2
   970  0498  3402               	retlw	2
   971  0499  3402               	retlw	2
   972  049A  3403               	retlw	3
   973  049B  3403               	retlw	3
   974  049C  3403               	retlw	3
   975  049D  3404               	retlw	4
   976  049E  3404               	retlw	4
   977  049F  3404               	retlw	4
   978  04A0  3405               	retlw	5
   979  04A1  3405               	retlw	5
   980  04A2  3406               	retlw	6
   981  04A3  3406               	retlw	6
   982  04A4  3406               	retlw	6
   983  04A5  3407               	retlw	7
   984  04A6  3407               	retlw	7
   985  04A7  3408               	retlw	8
   986  04A8  3408               	retlw	8
   987  04A9  3409               	retlw	9
   988  04AA  3409               	retlw	9
   989  04AB  340A               	retlw	10
   990  04AC  340A               	retlw	10
   991  04AD  340B               	retlw	11
   992  04AE  340B               	retlw	11
   993  04AF  340C               	retlw	12
   994  04B0  340C               	retlw	12
   995  04B1  340D               	retlw	13
   996  04B2  340D               	retlw	13
   997  04B3  340E               	retlw	14
   998  04B4  340E               	retlw	14
   999  04B5  340F               	retlw	15
  1000  04B6                     __end_of_sine_table2:	
  1001  04B6                     _PLAYBACK_RATE:	
  1002  04B6  3412               	retlw	18
  1003  04B7  347A               	retlw	122
  1004  04B8  3400               	retlw	0
  1005  04B9  3400               	retlw	0
  1006  04BA                     __end_of_PLAYBACK_RATE:	
  1007  04BA                     _BAUD_RATE:	
  1008  04BA  34B0               	retlw	176
  1009  04BB  3404               	retlw	4
  1010  04BC                     __end_of_BAUD_RATE:	
  1011  04BC                     _TABLE_SIZE:	
  1012  04BC  34B6               	retlw	182
  1013  04BD  3400               	retlw	0
  1014  04BE                     __end_of_TABLE_SIZE:	
  1015  000B                     _INTCON	set	11
  1016  0011                     _PIR1	set	17
  1017  000C                     _PORTAbits	set	12
  1018  000E                     _PORTCbits	set	14
  1019  0015                     _TMR0	set	21
  1020  0017                     _TMR1H	set	23
  1021  0016                     _TMR1L	set	22
  1022  008E                     _ADIF	set	142
  1023  008A                     _CCP1IF	set	138
  1024  00C4                     _T1CKPS0	set	196
  1025  00C5                     _T1CKPS1	set	197
  1026  005D                     _TMR0IE	set	93
  1027  005A                     _TMR0IF	set	90
  1028  00C6                     _TMR1CS0	set	198
  1029  00C7                     _TMR1CS1	set	199
  1030  00CF                     _TMR1GE	set	207
  1031  0088                     _TMR1IF	set	136
  1032  00C0                     _TMR1ON	set	192
  1033  009D                     _ADCON0	set	157
  1034  009C                     _ADRESH	set	156
  1035  009B                     _ADRESL	set	155
  1036  0099                     _OSCCON	set	153
  1037  009A                     _OSCSTAT	set	154
  1038  0098                     _OSCTUNE	set	152
  1039  008C                     _TRISA	set	140
  1040  008E                     _TRISC	set	142
  1041  04F4                     _ADCS0	set	1268
  1042  04F5                     _ADCS1	set	1269
  1043  04F6                     _ADCS2	set	1270
  1044  04F7                     _ADFM	set	1271
  1045  048E                     _ADIE	set	1166
  1046  04F2                     _ADNREF	set	1266
  1047  04E8                     _ADON	set	1256
  1048  04F0                     _ADPREF0	set	1264
  1049  04F1                     _ADPREF1	set	1265
  1050  048A                     _CCP1IE	set	1162
  1051  04AB                     _PSA	set	1195
  1052  04AD                     _TMR0CS	set	1197
  1053  0488                     _TMR1IE	set	1160
  1054  04B9                     _WDTPS0	set	1209
  1055  04BA                     _WDTPS1	set	1210
  1056  04BB                     _WDTPS2	set	1211
  1057  04BC                     _WDTPS3	set	1212
  1058  04BD                     _WDTPS4	set	1213
  1059  0119                     _DACCON1	set	281
  1060  08C7                     _DACEN	set	2247
  1061  08C0                     _DACNSS	set	2240
  1062  08C5                     _DACOE	set	2245
  1063  08C2                     _DACPSS0	set	2242
  1064  08C3                     _DACPSS1	set	2243
  1065  0C61                     _ANSA1	set	3169
  1066  0292                     _CCPR1H	set	658
  1067  0291                     _CCPR1L	set	657
  1068  1499                     _CCP1M1	set	5273
  1069  149A                     _CCP1M2	set	5274
  1070  149B                     _CCP1M3	set	5275
  1071  04BE                     __stringdata:	
  1072  04BE                     STR_1:	
  1073  04BE  3448               	retlw	72	;'H'
  1074  04BF  3445               	retlw	69	;'E'
  1075  04C0  344C               	retlw	76	;'L'
  1076  04C1  344C               	retlw	76	;'L'
  1077  04C2  344F               	retlw	79	;'O'
  1078  04C3  3400               	retlw	0
  1079  04C4                     __end_of__stringdata:	
  1080                           
  1081                           ; #config settings
  1082  0000                     
  1083                           	psect	cinit
  1084  005B                     start_initialization:	
  1085  005B                     __initialization:	
  1086                           
  1087                           ; Clear objects allocated to COMMON
  1088  005B  01F9               	clrf	__pbssCOMMON& (0+127)
  1089  005C  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1090  005D  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1091  005E  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1092  005F  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1093                           
  1094                           ; Clear objects allocated to BANK0
  1095  0060  01EE               	clrf	__pbssBANK0& (0+127)
  1096  0061  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1097                           
  1098                           ; Clear objects allocated to BANK1
  1099  0062  30A0               	movlw	low __pbssBANK1
  1100  0063  0084               	movwf	4
  1101  0064  3000               	movlw	high __pbssBANK1
  1102  0065  0085               	movwf	5
  1103  0066  3033               	movlw	51
  1104  0067  318C  2412  3180   	fcall	clear_ram0
  1105                           
  1106                           ; Clear objects allocated to BANK2
  1107  006A  3020               	movlw	low __pbssBANK2
  1108  006B  0084               	movwf	4
  1109  006C  3001               	movlw	high __pbssBANK2
  1110  006D  0085               	movwf	5
  1111  006E  3014               	movlw	20
  1112  006F  318C  2412  3180   	fcall	clear_ram0
  1113                           
  1114                           ; Clear objects allocated to BANK3
  1115  0072  30A0               	movlw	low __pbssBANK3
  1116  0073  0084               	movwf	4
  1117  0074  3001               	movlw	high __pbssBANK3
  1118  0075  0085               	movwf	5
  1119  0076  3040               	movlw	64
  1120  0077  318C  2412  3180   	fcall	clear_ram0
  1121                           
  1122                           ; Initialize objects allocated to BANK2
  1123  007A  30F0               	movlw	low __pidataBANK2
  1124  007B  0084               	movwf	4
  1125  007C  3087               	movlw	(high __pidataBANK2)| (0+128)
  1126  007D  0085               	movwf	5
  1127  007E  3034               	movlw	low __pdataBANK2
  1128  007F  0086               	movwf	6
  1129  0080  3001               	movlw	high __pdataBANK2
  1130  0081  0087               	movwf	7
  1131  0082  3010               	movlw	16
  1132  0083  318C  240C         	fcall	init_ram
  1133  0085                     end_of_initialization:	
  1134                           ;End of C runtime variable initialization code
  1135                           
  1136  0085                     __end_of__initialization:	
  1137  0085  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1138  0086  0020               	movlb	0
  1139  0087  3186  2EE4         	ljmp	_main	;jump to C main() function
  1140                           
  1141                           	psect	bssCOMMON
  1142  0079                     __pbssCOMMON:	
  1143  0079                     _modem_packet_size:	
  1144  0079                     	ds	4
  1145  007D                     _phase:	
  1146  007D                     	ds	1
  1147                           
  1148                           	psect	bssBANK0
  1149  006E                     __pbssBANK0:	
  1150  006E                     _Change_to_New_Baud:	
  1151  006E                     	ds	1
  1152  006F                     _current_byte:	
  1153  006F                     	ds	1
  1154                           
  1155                           	psect	bssBANK1
  1156  00A0                     __pbssBANK1:	
  1157  00A0                     _adf_config:	
  1158  00A0                     	ds	39
  1159  00C7                     _crc:	
  1160  00C7                     	ds	2
  1161  00C9                     _ones_in_a_row:	
  1162  00C9                     	ds	2
  1163  00CB                     Sinus_Generator@tone_index:	
  1164  00CB                     	ds	1
  1165  00CC                     _MODEM_TRANSMITTING:	
  1166  00CC                     	ds	1
  1167  00CD                     _PTT_OFF:	
  1168  00CD                     	ds	1
  1169  00CE                     _SAMPLES_PER_BAUD:	
  1170  00CE                     	ds	1
  1171  00CF                     _adc__high:	
  1172  00CF                     	ds	1
  1173  00D0                     _adc__low:	
  1174  00D0                     	ds	1
  1175  00D1                     _current_sample_in_baud:	
  1176  00D1                     	ds	1
  1177  00D2                     _phase_delta:	
  1178  00D2                     	ds	1
  1179                           
  1180                           	psect	bssBANK2
  1181  0120                     __pbssBANK2:	
  1182  0120                     Reverse_Array@F3148:	
  1183  0120                     	ds	4
  1184  0124                     _PHASE_DELTA_1200:	
  1185  0124                     	ds	4
  1186  0128                     _PHASE_DELTA_2200:	
  1187  0128                     	ds	4
  1188  012C                     _Systick_Counter:	
  1189  012C                     	ds	4
  1190  0130                     _packet_pos:	
  1191  0130                     	ds	4
  1192                           
  1193                           	psect	dataBANK2
  1194  0134                     __pdataBANK2:	
  1195  0134                     main@F3169:	
  1196  0134                     	ds	16
  1197                           
  1198                           	psect	bssBANK3
  1199  01A0                     __pbssBANK3:	
  1200  01A0                     _modem_packet:	
  1201  01A0                     	ds	64
  1202                           
  1203                           	psect	clrtext
  1204  0C12                     clear_ram0:	
  1205                           ;	Called with FSR0 containing the base address, and
  1206                           ;	WREG with the size to clear
  1207                           
  1208  0C12  0064               	clrwdt	;clear the watchdog before getting into this loop
  1209  0C13                     clrloop0:	
  1210  0C13  0180               	clrf	0	;clear RAM location pointed to by FSR
  1211  0C14  3101               	addfsr 0,1
  1212  0C15  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1213  0C16  2C13               	goto	clrloop0	;have we reached the end yet?
  1214  0C17  3400               	retlw	0	;all done for this memory range, return
  1215                           
  1216                           	psect	inittext
  1217  0C0C                     init_ram:	
  1218  0C0C  00FE               	movwf	126
  1219  0C0D                     initloop:	
  1220  0C0D  0012               	moviw fsr0++
  1221  0C0E  001E               	movwi fsr1++
  1222  0C0F  0BFE               	decfsz	126,f
  1223  0C10  2C0D               	goto	initloop
  1224  0C11  3400               	retlw	0
  1225                           
  1226                           	psect	cstackBANK1
  1227  00D3                     __pcstackBANK1:	
  1228  00D3                     Adf_Write_Register_Three@reg_ptr:	
  1229                           
  1230                           ; 4 bytes @ 0x0
  1231  00D3                     	ds	4
  1232  00D7                     Adf_Write_Register_Three@reg:	
  1233                           
  1234                           ; 4 bytes @ 0x4
  1235  00D7                     	ds	4
  1236  00DB                     Adf_Lock@adj:	
  1237                           
  1238                           ; 2 bytes @ 0x8
  1239  00DB                     	ds	2
  1240  00DD                     Adf_Lock@bias:	
  1241                           
  1242                           ; 2 bytes @ 0xA
  1243  00DD                     	ds	2
  1244  00DF                     main@beacon_address:	
  1245                           
  1246                           ; 16 bytes @ 0xC
  1247  00DF                     	ds	16
  1248                           
  1249                           	psect	cstackCOMMON
  1250  0070                     __pcstackCOMMON:	
  1251  0070                     ?_Sinus_Generator:	
  1252  0070                     ?_Timer1_Start:	
  1253                           ; 0 bytes @ 0x0
  1254                           
  1255  0070                     ?_Dac0_Start_Hold:	
  1256                           ; 0 bytes @ 0x0
  1257                           
  1258  0070                     ?_Adc1_Start:	
  1259                           ; 0 bytes @ 0x0
  1260                           
  1261  0070                     ?_Ax25_Send_Footer:	
  1262                           ; 0 bytes @ 0x0
  1263                           
  1264  0070                     ?_Modem_Setup:	
  1265                           ; 0 bytes @ 0x0
  1266                           
  1267  0070                     ?_Ptt_Off:	
  1268                           ; 0 bytes @ 0x0
  1269                           
  1270  0070                     ?_Modem_Flush_Frame:	
  1271                           ; 0 bytes @ 0x0
  1272                           
  1273  0070                     ?_Adf_Reset_Register_Zero:	
  1274                           ; 0 bytes @ 0x0
  1275                           
  1276  0070                     ?_Adf_Reset_Register_One:	
  1277                           ; 0 bytes @ 0x0
  1278                           
  1279  0070                     ?_Adf_Reset_Register_Two:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0070                     ?_Adf_Reset_Register_Three:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0070                     ?_Adf_Reset:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0070                     ?_Adf_Write_Register_Zero:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0070                     ?_Adf_Write_Register_One:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0070                     ?_Adf_Write_Register_Two:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0070                     ?_Adf_Write_Register_Three:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0070                     ?_global_interrupt:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0070                     ?_System_Start:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0070                     ??_Send_Vcxo_Signal:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0070                     ?_Timer0_Start:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0070                     ?_Timer0_Stop:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0070                     ??_Timer0_Stop:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0070                     ?_Adf_Reset_Config:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0070                     ?_Adf_Write_Config:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0070                     ?_Radio_Setup:	
  1325                           ; 0 bytes @ 0x0
  1326                           
  1327  0070                     ?_Configure_Audio:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0070                     ?_Update_Crc:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0070                     ?_Send_Byte:	
  1334                           ; 0 bytes @ 0x0
  1335                           
  1336  0070                     ?_Ax25_Send_Byte:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0070                     ?_Ax25_Send_Sync:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0070                     ?_Ax25_Send_Flag:	
  1343                           ; 0 bytes @ 0x0
  1344                           
  1345  0070                     ?_Gpio_Config:	
  1346                           ; 0 bytes @ 0x0
  1347                           
  1348  0070                     ?_Adf_Lock:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_Spi_Byte_Send:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_Adf_Locked:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_Read_Adf7012_Muxout:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_Send_Vcxo_Signal:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_Ptt_On:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_main:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     Send_Vcxo_Signal@value:	
  1370                           ; 2 bytes @ 0x0
  1371                           
  1372                           
  1373                           ; 1 bytes @ 0x0
  1374  0070                     	ds	1
  1375  0071                     ??_Sinus_Generator:	
  1376                           
  1377                           ; 0 bytes @ 0x1
  1378  0071                     	ds	5
  1379  0076                     Sinus_Generator@Audio_Signal:	
  1380                           
  1381                           ; 1 bytes @ 0x6
  1382  0076                     	ds	1
  1383  0077                     ??_global_interrupt:	
  1384                           
  1385                           ; 0 bytes @ 0x7
  1386  0077                     	ds	2
  1387                           
  1388                           	psect	cstackBANK0
  1389  0020                     __pcstackBANK0:	
  1390  0020                     ??_Gpio_Config:	
  1391  0020                     ??_Timer1_Start:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0020                     ??_Dac0_Start_Hold:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0020                     ??_Adc1_Start:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0020                     ?_Delay_ms:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403  0020                     ??_Adf_Reset_Register_Zero:	
  1404                           ; 0 bytes @ 0x0
  1405                           
  1406  0020                     ??_Adf_Reset_Register_One:	
  1407                           ; 0 bytes @ 0x0
  1408                           
  1409  0020                     ??_Adf_Reset_Register_Two:	
  1410                           ; 0 bytes @ 0x0
  1411                           
  1412  0020                     ??_Adf_Reset_Register_Three:	
  1413                           ; 0 bytes @ 0x0
  1414                           
  1415  0020                     ??_Adf_Locked:	
  1416                           ; 0 bytes @ 0x0
  1417                           
  1418  0020                     ??_System_Start:	
  1419                           ; 0 bytes @ 0x0
  1420                           
  1421  0020                     ??_Read_Adf7012_Muxout:	
  1422                           ; 0 bytes @ 0x0
  1423                           
  1424  0020                     ??_Timer0_Start:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0020                     ??_Configure_Audio:	
  1428                           ; 0 bytes @ 0x0
  1429                           
  1430  0020                     ??_Update_Crc:	
  1431                           ; 0 bytes @ 0x0
  1432                           
  1433  0020                     ??_Ax25_Send_Sync:	
  1434                           ; 0 bytes @ 0x0
  1435                           
  1436  0020                     ??_Ax25_Send_Flag:	
  1437                           ; 0 bytes @ 0x0
  1438                           
  1439  0020                     ?_memcpy:	
  1440                           ; 0 bytes @ 0x0
  1441                           
  1442  0020                     memcpy@s1:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0020                     Delay_ms@time_to_delay:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448                           
  1449                           ; 2 bytes @ 0x0
  1450  0020                     	ds	1
  1451  0021                     memcpy@n:	
  1452                           
  1453                           ; 2 bytes @ 0x1
  1454  0021                     	ds	1
  1455  0022                     ??_Delay_ms:	
  1456  0022                     Update_Crc@input_bit:	
  1457                           ; 0 bytes @ 0x2
  1458                           
  1459                           
  1460                           ; 1 bytes @ 0x2
  1461  0022                     	ds	1
  1462  0023                     ??_memcpy:	
  1463  0023                     ??_Send_Byte:	
  1464                           ; 0 bytes @ 0x3
  1465                           
  1466                           
  1467                           ; 0 bytes @ 0x3
  1468  0023                     	ds	1
  1469  0024                     memcpy@d:	
  1470  0024                     Delay_ms@i:	
  1471                           ; 1 bytes @ 0x4
  1472                           
  1473                           
  1474                           ; 2 bytes @ 0x4
  1475  0024                     	ds	1
  1476  0025                     memcpy@s:	
  1477                           
  1478                           ; 1 bytes @ 0x5
  1479  0025                     	ds	1
  1480  0026                     ??_Spi_Byte_Send:	
  1481  0026                     ??_Adf_Reset:	
  1482                           ; 0 bytes @ 0x6
  1483                           
  1484  0026                     ??_Adf_Reset_Config:	
  1485                           ; 0 bytes @ 0x6
  1486                           
  1487  0026                     Ax25_Send_Sync@byte:	
  1488                           ; 0 bytes @ 0x6
  1489                           
  1490  0026                     Ax25_Send_Flag@byte:	
  1491                           ; 1 bytes @ 0x6
  1492                           
  1493  0026                     memcpy@d1:	
  1494                           ; 1 bytes @ 0x6
  1495                           
  1496                           
  1497                           ; 1 bytes @ 0x6
  1498  0026                     	ds	1
  1499  0027                     ?_Reverse_Array:	
  1500  0027                     Reverse_Array@length:	
  1501                           ; 1 bytes @ 0x7
  1502                           
  1503  0027                     Spi_Byte_Send@data:	
  1504                           ; 1 bytes @ 0x7
  1505                           
  1506  0027                     Ax25_Send_Sync@i:	
  1507                           ; 1 bytes @ 0x7
  1508                           
  1509  0027                     Ax25_Send_Flag@i:	
  1510                           ; 2 bytes @ 0x7
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0x7
  1514  0027                     	ds	1
  1515  0028                     ??_Reverse_Array:	
  1516  0028                     Spi_Byte_Send@data_to_send:	
  1517                           ; 0 bytes @ 0x8
  1518                           
  1519                           
  1520                           ; 1 bytes @ 0x8
  1521  0028                     	ds	1
  1522  0029                     Spi_Byte_Send@i:	
  1523  0029                     Send_Byte@byte:	
  1524                           ; 1 bytes @ 0x9
  1525                           
  1526                           
  1527                           ; 1 bytes @ 0x9
  1528  0029                     	ds	1
  1529  002A                     ?_Write_Adf7012_Reg:	
  1530  002A                     Write_Adf7012_Reg@size_of_reg:	
  1531                           ; 1 bytes @ 0xA
  1532                           
  1533  002A                     Send_Byte@i:	
  1534                           ; 1 bytes @ 0xA
  1535                           
  1536                           
  1537                           ; 2 bytes @ 0xA
  1538  002A                     	ds	1
  1539  002B                     ??_Write_Adf7012_Reg:	
  1540                           
  1541                           ; 0 bytes @ 0xB
  1542  002B                     	ds	1
  1543  002C                     ?_Ax25_Send_Header:	
  1544  002C                     ??_Ax25_Send_Footer:	
  1545                           ; 0 bytes @ 0xC
  1546                           
  1547  002C                     ??_Ax25_Send_Byte:	
  1548                           ; 0 bytes @ 0xC
  1549                           
  1550  002C                     Write_Adf7012_Reg@reg_value:	
  1551                           ; 0 bytes @ 0xC
  1552                           
  1553  002C                     Ax25_Send_Byte@byte:	
  1554                           ; 1 bytes @ 0xC
  1555                           
  1556  002C                     Ax25_Send_Header@num_addresses:	
  1557                           ; 1 bytes @ 0xC
  1558                           
  1559  002C                     Ax25_Send_Footer@final_crc:	
  1560                           ; 2 bytes @ 0xC
  1561                           
  1562                           
  1563                           ; 2 bytes @ 0xC
  1564  002C                     	ds	1
  1565  002D                     ?_Ax25_Send_String:	
  1566  002D                     Write_Adf7012_Reg@i:	
  1567                           ; 0 bytes @ 0xD
  1568                           
  1569  002D                     Ax25_Send_String@string:	
  1570                           ; 1 bytes @ 0xD
  1571                           
  1572  002D                     Reverse_Array@buffer_array:	
  1573                           ; 2 bytes @ 0xD
  1574                           
  1575                           
  1576                           ; 4 bytes @ 0xD
  1577  002D                     	ds	1
  1578  002E                     ??_Ax25_Send_Header:	
  1579                           
  1580                           ; 0 bytes @ 0xE
  1581  002E                     	ds	1
  1582  002F                     ??_Ax25_Send_String:	
  1583  002F                     Ax25_Send_String@i:	
  1584                           ; 0 bytes @ 0xF
  1585                           
  1586                           
  1587                           ; 2 bytes @ 0xF
  1588  002F                     	ds	2
  1589  0031                     Reverse_Array@input:	
  1590  0031                     Ax25_Send_Header@j:	
  1591                           ; 1 bytes @ 0x11
  1592                           
  1593                           
  1594                           ; 2 bytes @ 0x11
  1595  0031                     	ds	1
  1596  0032                     Reverse_Array@i:	
  1597                           
  1598                           ; 1 bytes @ 0x12
  1599  0032                     	ds	1
  1600  0033                     ??_Adf_Write_Register_Zero:	
  1601  0033                     ??_Adf_Write_Register_One:	
  1602                           ; 0 bytes @ 0x13
  1603                           
  1604  0033                     ??_Adf_Write_Register_Two:	
  1605                           ; 0 bytes @ 0x13
  1606                           
  1607  0033                     ??_Adf_Write_Register_Three:	
  1608                           ; 0 bytes @ 0x13
  1609                           
  1610  0033                     Ax25_Send_Header@addresses:	
  1611                           ; 0 bytes @ 0x13
  1612                           
  1613                           
  1614                           ; 1 bytes @ 0x13
  1615  0033                     	ds	1
  1616  0034                     Ax25_Send_Header@i:	
  1617                           
  1618                           ; 2 bytes @ 0x14
  1619  0034                     	ds	11
  1620  003F                     Adf_Write_Register_One@reg:	
  1621                           
  1622                           ; 4 bytes @ 0x1F
  1623  003F                     	ds	4
  1624  0043                     Adf_Write_Register_One@reg_ptr:	
  1625                           
  1626                           ; 3 bytes @ 0x23
  1627  0043                     	ds	8
  1628  004B                     Adf_Write_Register_Two@reg_ptr:	
  1629                           
  1630                           ; 4 bytes @ 0x2B
  1631  004B                     	ds	4
  1632  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1633  004F                     Adf_Write_Register_Two@reg:	
  1634                           ; 4 bytes @ 0x2F
  1635                           
  1636                           
  1637                           ; 4 bytes @ 0x2F
  1638  004F                     	ds	4
  1639  0053                     Adf_Write_Register_Zero@reg:	
  1640                           
  1641                           ; 4 bytes @ 0x33
  1642  0053                     	ds	24
  1643  006B                     ??_Modem_Setup:	
  1644  006B                     ??_Adf_Lock:	
  1645                           ; 0 bytes @ 0x4B
  1646                           
  1647  006B                     ??_Ptt_Off:	
  1648                           ; 0 bytes @ 0x4B
  1649                           
  1650  006B                     ??_Adf_Write_Config:	
  1651                           ; 0 bytes @ 0x4B
  1652                           
  1653  006B                     ??_Radio_Setup:	
  1654                           ; 0 bytes @ 0x4B
  1655                           
  1656  006B                     ??_Ptt_On:	
  1657                           ; 0 bytes @ 0x4B
  1658                           
  1659                           
  1660                           ; 0 bytes @ 0x4B
  1661  006B                     	ds	1
  1662  006C                     ??_Modem_Flush_Frame:	
  1663                           
  1664                           ; 0 bytes @ 0x4C
  1665  006C                     	ds	1
  1666  006D                     ??_main:	
  1667                           
  1668                           ; 0 bytes @ 0x4D
  1669  006D                     	ds	1
  1670                           
  1671                           	psect	maintext
  1672  06E4                     __pmaintext:	
  1673 ;;
  1674 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1675 ;;
  1676 ;; *************** function _main *****************
  1677 ;; Defined at:
  1678 ;;		line 168 in file "main.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2  138[COMMON] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 17F/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;Total ram usage:       17 bytes
  1697 ;; Hardware stack levels required when called:   11
  1698 ;; This function calls:
  1699 ;;		_Adc1_Start
  1700 ;;		_Adf_Lock
  1701 ;;		_Ax25_Send_Footer
  1702 ;;		_Ax25_Send_Header
  1703 ;;		_Ax25_Send_String
  1704 ;;		_Dac0_Start_Hold
  1705 ;;		_Delay_ms
  1706 ;;		_Gpio_Config
  1707 ;;		_Modem_Flush_Frame
  1708 ;;		_Modem_Setup
  1709 ;;		_Ptt_Off
  1710 ;;		_System_Start
  1711 ;;		_Timer1_Start
  1712 ;; This function is called by:
  1713 ;;		Startup code after reset
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _main
  1719  06E4                     _main:	
  1720                           
  1721                           ;main.c: 169: System_Start();
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1725  06E4  318E  2666  3186   	fcall	_System_Start
  1726  06E7                     l139:	
  1727                           ;main.c: 170: while (!(OSCSTAT & (0x01))){}
  1728                           
  1729  06E7  0021               	movlb	1	; select bank1
  1730  06E8  1C1A               	btfss	26,0	;volatile
  1731  06E9  2EE7               	goto	l139
  1732                           
  1733                           ;main.c: 173: Gpio_Config();
  1734  06EA  318C  248A  3186   	fcall	_Gpio_Config
  1735                           
  1736                           ;main.c: 175: Timer1_Start();
  1737  06ED  318C  2448  3186   	fcall	_Timer1_Start
  1738                           
  1739                           ;main.c: 177: Dac0_Start_Hold();
  1740  06F0  318B  23F0  3186   	fcall	_Dac0_Start_Hold
  1741                           
  1742                           ;main.c: 179: Adc1_Start();
  1743  06F3  318B  23FA  3186   	fcall	_Adc1_Start
  1744                           
  1745                           ;main.c: 181: PORTAbits.RA5 = 0;;
  1746  06F6  0020               	movlb	0	; select bank0
  1747  06F7  128C               	bcf	12,5	;volatile
  1748                           
  1749                           ;main.c: 182: Delay_ms(10);
  1750  06F8  300A               	movlw	10
  1751  06F9  00A0               	movwf	Delay_ms@time_to_delay
  1752  06FA  3000               	movlw	0
  1753  06FB  00A1               	movwf	Delay_ms@time_to_delay+1
  1754  06FC  318D  2526  3186   	fcall	_Delay_ms
  1755                           
  1756                           ;main.c: 183: PORTAbits.RA4 = 1;;
  1757  06FF  0020               	movlb	0	; select bank0
  1758  0700  160C               	bsf	12,4	;volatile
  1759                           
  1760                           ;main.c: 184: Delay_ms(10);
  1761  0701  300A               	movlw	10
  1762  0702  00A0               	movwf	Delay_ms@time_to_delay
  1763  0703  3000               	movlw	0
  1764  0704  00A1               	movwf	Delay_ms@time_to_delay+1
  1765  0705  318D  2526  3186   	fcall	_Delay_ms
  1766                           
  1767                           ;main.c: 185: PORTAbits.RA5 = 1;;
  1768  0708  0020               	movlb	0	; select bank0
  1769  0709  168C               	bsf	12,5	;volatile
  1770                           
  1771                           ;main.c: 186: Delay_ms(10);
  1772  070A  300A               	movlw	10
  1773  070B  00A0               	movwf	Delay_ms@time_to_delay
  1774  070C  3000               	movlw	0
  1775  070D  00A1               	movwf	Delay_ms@time_to_delay+1
  1776  070E  318D  2526  3186   	fcall	_Delay_ms
  1777                           
  1778                           ;main.c: 188: Delay_ms(200);
  1779  0711  30C8               	movlw	200
  1780  0712  0020               	movlb	0	; select bank0
  1781  0713  00A0               	movwf	Delay_ms@time_to_delay
  1782  0714  3000               	movlw	0
  1783  0715  00A1               	movwf	Delay_ms@time_to_delay+1
  1784  0716  318D  2526  3186   	fcall	_Delay_ms
  1785                           
  1786                           ;main.c: 191: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1787  0719  3034               	movlw	low main@F3169
  1788  071A  0086               	movwf	6
  1789  071B  3001               	movlw	high main@F3169
  1790  071C  0087               	movwf	7
  1791  071D  30DF               	movlw	low main@beacon_address
  1792  071E  0084               	movwf	4
  1793  071F  3000               	movlw	high main@beacon_address
  1794  0720  0085               	movwf	5
  1795  0721  3010               	movlw	16
  1796  0722  0020               	movlb	0	; select bank0
  1797  0723  00ED               	movwf	??_main
  1798  0724                     u2410:	
  1799  0724  0016               	moviw fsr1++
  1800  0725  001A               	movwi fsr0++
  1801  0726  0BED               	decfsz	??_main,f
  1802  0727  2F24               	goto	u2410
  1803                           
  1804                           ;main.c: 193: Ax25_Send_Header(beacon_address,2);
  1805  0728  3002               	movlw	2
  1806  0729  00AC               	movwf	Ax25_Send_Header@num_addresses
  1807  072A  3000               	movlw	0
  1808  072B  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  1809  072C  30DF               	movlw	main@beacon_address& (0+255)
  1810  072D  3181  21F5  3186   	fcall	_Ax25_Send_Header
  1811                           
  1812                           ;main.c: 194: Ax25_Send_String("HELLO");
  1813  0730  30BE               	movlw	low (STR_1| (0+32768))
  1814  0731  0020               	movlb	0	; select bank0
  1815  0732  00AD               	movwf	Ax25_Send_String@string
  1816  0733  3084               	movlw	high (STR_1| (0+32768))
  1817  0734  00AE               	movwf	Ax25_Send_String@string+1
  1818  0735  318C  24EA  3186   	fcall	_Ax25_Send_String
  1819                           
  1820                           ;main.c: 195: Ax25_Send_Footer();
  1821  0738  318C  24CF  3186   	fcall	_Ax25_Send_Footer
  1822                           
  1823                           ;main.c: 197: Modem_Setup();
  1824  073B  318C  2406  3186   	fcall	_Modem_Setup
  1825                           
  1826                           ;main.c: 198: PORTCbits.RC3 = 1;;
  1827  073E  0020               	movlb	0	; select bank0
  1828  073F  158E               	bsf	14,3	;volatile
  1829                           
  1830                           ;main.c: 199: Delay_ms(100);
  1831  0740  3064               	movlw	100
  1832  0741  00A0               	movwf	Delay_ms@time_to_delay
  1833  0742  3000               	movlw	0
  1834  0743  00A1               	movwf	Delay_ms@time_to_delay+1
  1835  0744  318D  2526  3186   	fcall	_Delay_ms
  1836                           
  1837                           ;main.c: 200: Adf_Lock();
  1838  0747  318F  2712  3186   	fcall	_Adf_Lock
  1839                           
  1840                           ;main.c: 201: Delay_ms(100);
  1841  074A  3064               	movlw	100
  1842  074B  0020               	movlb	0	; select bank0
  1843  074C  00A0               	movwf	Delay_ms@time_to_delay
  1844  074D  3000               	movlw	0
  1845  074E  00A1               	movwf	Delay_ms@time_to_delay+1
  1846  074F  318D  2526  3186   	fcall	_Delay_ms
  1847  0752                     l2445:	
  1848                           ;main.c: 204: while(1){
  1849                           
  1850                           
  1851                           ;main.c: 205: if(PTT_OFF){
  1852  0752  0021               	movlb	1	; select bank1
  1853  0753  084D               	movf	_PTT_OFF^(0+128),w
  1854  0754  1903               	btfsc	3,2
  1855  0755  2F5B               	goto	l2451
  1856                           
  1857                           ;main.c: 206: Ptt_Off();
  1858  0756  318C  2457  3186   	fcall	_Ptt_Off
  1859                           
  1860                           ;main.c: 207: PTT_OFF = 0;
  1861  0759  0021               	movlb	1	; select bank1
  1862  075A  01CD               	clrf	_PTT_OFF^(0+128)
  1863  075B                     l2451:	
  1864                           
  1865                           ;main.c: 208: }
  1866                           ;main.c: 209: Delay_ms(2000);
  1867  075B  30D0               	movlw	208
  1868  075C  0020               	movlb	0	; select bank0
  1869  075D  00A0               	movwf	Delay_ms@time_to_delay
  1870  075E  3007               	movlw	7
  1871  075F  00A1               	movwf	Delay_ms@time_to_delay+1
  1872  0760  318D  2526  3186   	fcall	_Delay_ms
  1873                           
  1874                           ;main.c: 211: Modem_Flush_Frame();
  1875  0763  318D  2599  3186   	fcall	_Modem_Flush_Frame
  1876  0766                     l2455:	
  1877                           ;main.c: 212: while(MODEM_TRANSMITTING);
  1878                           
  1879  0766  0021               	movlb	1	; select bank1
  1880  0767  08CC               	movf	_MODEM_TRANSMITTING^(0+128),f
  1881  0768  1D03               	skipz
  1882  0769  2F66               	goto	l2455
  1883                           
  1884                           ;main.c: 213: Delay_ms(2000);
  1885  076A  30D0               	movlw	208
  1886  076B  0020               	movlb	0	; select bank0
  1887  076C  00A0               	movwf	Delay_ms@time_to_delay
  1888  076D  3007               	movlw	7
  1889  076E  00A1               	movwf	Delay_ms@time_to_delay+1
  1890  076F  318D  2526  3186   	fcall	_Delay_ms
  1891  0772  0064               	clrwdt	;# 
  1892  0773  2F52               	goto	l2445
  1893  0774                     __end_of_main:	
  1894                           ;main.c: 226: }
  1895                           ;main.c: 227: return (0);
  1896                           ;	Return value of _main is never used
  1897                           
  1898                           
  1899                           	psect	text1
  1900  0C48                     __ptext1:	
  1901 ;; *************** function _Timer1_Start *****************
  1902 ;; Defined at:
  1903 ;;		line 254 in file "utility.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;		None               void
  1910 ;; Registers used:
  1911 ;;		wreg, status,2
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    3
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _Timer1_Start
  1933  0C48                     _Timer1_Start:	
  1934                           
  1935                           ;utility.c: 255: TMR1H = 0x00;
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _Timer1_Start: [wreg+status,2]
  1939  0C48  0020               	movlb	0	; select bank0
  1940  0C49  0197               	clrf	23	;volatile
  1941                           
  1942                           ;utility.c: 256: TMR1L = 0x00;
  1943  0C4A  0196               	clrf	22	;volatile
  1944                           
  1945                           ;utility.c: 258: TMR1IE = 0;
  1946  0C4B  0021               	movlb	1	; select bank1
  1947  0C4C  1011               	bcf	17,0	;volatile
  1948                           
  1949                           ;utility.c: 261: CCPR1H = 0x03;
  1950  0C4D  3003               	movlw	3
  1951  0C4E  0025               	movlb	5	; select bank5
  1952  0C4F  0092               	movwf	18	;volatile
  1953                           
  1954                           ;utility.c: 262: CCPR1L = 0x41;
  1955  0C50  3041               	movlw	65
  1956  0C51  0091               	movwf	17	;volatile
  1957                           
  1958                           ;utility.c: 264: CCP1IF = 0;
  1959  0C52  0020               	movlb	0	; select bank0
  1960  0C53  1111               	bcf	17,2	;volatile
  1961                           
  1962                           ;utility.c: 265: CCP1IE = 1;
  1963  0C54  0021               	movlb	1	; select bank1
  1964  0C55  1511               	bsf	17,2	;volatile
  1965  0C56  0008               	return
  1966  0C57                     __end_of_Timer1_Start:	
  1967                           
  1968                           	psect	text2
  1969  0E66                     __ptext2:	
  1970 ;; *************** function _System_Start *****************
  1971 ;; Defined at:
  1972 ;;		line 97 in file "main.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;		None               void
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1988 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1989 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1990 ;;Total ram usage:        1 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    3
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _System_Start
  2002  0E66                     _System_Start:	
  2003                           
  2004                           ;main.c: 100: WDTPS4 = 1;
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2008  0E66  0021               	movlb	1	; select bank1
  2009  0E67  1697               	bsf	23,5	;volatile
  2010                           
  2011                           ;main.c: 101: WDTPS3 = 0;
  2012  0E68  1217               	bcf	23,4	;volatile
  2013                           
  2014                           ;main.c: 102: WDTPS2 = 0;
  2015  0E69  1197               	bcf	23,3	;volatile
  2016                           
  2017                           ;main.c: 103: WDTPS1 = 0;
  2018  0E6A  1117               	bcf	23,2	;volatile
  2019                           
  2020                           ;main.c: 104: WDTPS0 = 1;
  2021  0E6B  1497               	bsf	23,1	;volatile
  2022                           
  2023                           ;main.c: 108: OSCCON = 0x00;
  2024  0E6C  0199               	clrf	25	;volatile
  2025                           
  2026                           ;main.c: 109: OSCCON |= 0b11110000;
  2027  0E6D  30F0               	movlw	240
  2028  0E6E  0020               	movlb	0	; select bank0
  2029  0E6F  00A0               	movwf	??_System_Start
  2030  0E70  0820               	movf	??_System_Start,w
  2031  0E71  0021               	movlb	1	; select bank1
  2032  0E72  0499               	iorwf	25,f	;volatile
  2033                           
  2034                           ;main.c: 110: OSCTUNE = 0x00;
  2035  0E73  0198               	clrf	24	;volatile
  2036                           
  2037                           ;main.c: 114: TMR0CS = 0;
  2038  0E74  1295               	bcf	21,5	;volatile
  2039                           
  2040                           ;main.c: 115: PSA = 1;
  2041  0E75  1595               	bsf	21,3	;volatile
  2042                           
  2043                           ;main.c: 119: TMR1ON = 1;
  2044  0E76  0020               	movlb	0	; select bank0
  2045  0E77  1418               	bsf	24,0	;volatile
  2046                           
  2047                           ;main.c: 120: TMR1GE = 0;
  2048  0E78  1399               	bcf	25,7	;volatile
  2049                           
  2050                           ;main.c: 122: TMR1CS1 = 0;
  2051  0E79  1398               	bcf	24,7	;volatile
  2052                           
  2053                           ;main.c: 123: TMR1CS0 = 0;
  2054  0E7A  1318               	bcf	24,6	;volatile
  2055                           
  2056                           ;main.c: 125: T1CKPS1 = 1;
  2057  0E7B  1698               	bsf	24,5	;volatile
  2058                           
  2059                           ;main.c: 126: T1CKPS0 = 1;
  2060  0E7C  1618               	bsf	24,4	;volatile
  2061                           
  2062                           ;main.c: 128: CCP1M3 = 1;
  2063  0E7D  0025               	movlb	5	; select bank5
  2064  0E7E  1593               	bsf	19,3	;volatile
  2065                           
  2066                           ;main.c: 129: CCP1M2 = 0;
  2067  0E7F  1113               	bcf	19,2	;volatile
  2068                           
  2069                           ;main.c: 130: CCP1M1 = 1;
  2070  0E80  1493               	bsf	19,1	;volatile
  2071                           
  2072                           ;main.c: 131: CCP1M1 = 0;
  2073  0E81  1093               	bcf	19,1	;volatile
  2074                           
  2075                           ;main.c: 135: DACOE = 1;
  2076  0E82  0022               	movlb	2	; select bank2
  2077  0E83  1698               	bsf	24,5	;volatile
  2078                           
  2079                           ;main.c: 136: DACPSS1 = 0;
  2080  0E84  1198               	bcf	24,3	;volatile
  2081                           
  2082                           ;main.c: 137: DACPSS0 = 0;
  2083  0E85  1118               	bcf	24,2	;volatile
  2084                           
  2085                           ;main.c: 138: DACNSS = 0;
  2086  0E86  1018               	bcf	24,0	;volatile
  2087                           
  2088                           ;main.c: 143: ANSA1 = 1;
  2089  0E87  0023               	movlb	3	; select bank3
  2090  0E88  148C               	bsf	12,1	;volatile
  2091                           
  2092                           ;main.c: 144: ADCON0 &= 0b10000011;
  2093  0E89  3083               	movlw	131
  2094  0E8A  0020               	movlb	0	; select bank0
  2095  0E8B  00A0               	movwf	??_System_Start
  2096  0E8C  0820               	movf	??_System_Start,w
  2097  0E8D  0021               	movlb	1	; select bank1
  2098  0E8E  059D               	andwf	29,f	;volatile
  2099                           
  2100                           ;main.c: 145: ADCON0 |= 0b00000100;
  2101  0E8F  151D               	bsf	29,2	;volatile
  2102                           
  2103                           ;main.c: 146: ADNREF = 0;
  2104  0E90  111E               	bcf	30,2	;volatile
  2105                           
  2106                           ;main.c: 147: ADPREF1 = 0;
  2107  0E91  109E               	bcf	30,1	;volatile
  2108                           
  2109                           ;main.c: 148: ADPREF0 = 0;
  2110  0E92  101E               	bcf	30,0	;volatile
  2111                           
  2112                           ;main.c: 149: ADCS2 = 1;
  2113  0E93  171E               	bsf	30,6	;volatile
  2114                           
  2115                           ;main.c: 150: ADCS1 = 1;
  2116  0E94  169E               	bsf	30,5	;volatile
  2117                           
  2118                           ;main.c: 151: ADCS0 = 0;
  2119  0E95  121E               	bcf	30,4	;volatile
  2120                           
  2121                           ;main.c: 152: ADFM = 1;
  2122  0E96  179E               	bsf	30,7	;volatile
  2123                           
  2124                           ;main.c: 157: TMR0IF = 0;
  2125  0E97  110B               	bcf	11,2	;volatile
  2126                           
  2127                           ;main.c: 158: TMR1IF = 0;
  2128  0E98  0020               	movlb	0	; select bank0
  2129  0E99  1011               	bcf	17,0	;volatile
  2130                           
  2131                           ;main.c: 159: CCP1IF = 0;
  2132  0E9A  1111               	bcf	17,2	;volatile
  2133                           
  2134                           ;main.c: 160: ADIF = 0;
  2135  0E9B  1311               	bcf	17,6	;volatile
  2136                           
  2137                           ;main.c: 164: INTCON |= 0xC0;
  2138  0E9C  30C0               	movlw	192
  2139  0E9D  00A0               	movwf	??_System_Start
  2140  0E9E  0820               	movf	??_System_Start,w
  2141  0E9F  048B               	iorwf	11,f	;volatile
  2142  0EA0  0008               	return
  2143  0EA1                     __end_of_System_Start:	
  2144                           
  2145                           	psect	text3
  2146  0C57                     __ptext3:	
  2147 ;; *************** function _Ptt_Off *****************
  2148 ;; Defined at:
  2149 ;;		line 339 in file "adf7012.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;		None               void
  2156 ;; Registers used:
  2157 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    9
  2170 ;; This function calls:
  2171 ;;		_Adf_Write_Config
  2172 ;;		_Delay_ms
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           
  2179                           ;psect for function _Ptt_Off
  2180  0C57                     _Ptt_Off:	
  2181                           
  2182                           ;adf7012.c: 341: PORTCbits.RC3 = 1;;
  2183                           
  2184                           ;incstack = 0
  2185                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2186  0C57  0020               	movlb	0	; select bank0
  2187  0C58  158E               	bsf	14,3	;volatile
  2188                           
  2189                           ;adf7012.c: 342: adf_config.r3.pa_enable = 0;
  2190  0C59  0021               	movlb	1	; select bank1
  2191  0C5A  01BA               	clrf	(_adf_config^(0+128)+26)
  2192                           
  2193                           ;adf7012.c: 343: adf_config.r2.power_amplifier_level = 0;
  2194  0C5B  01B2               	clrf	(_adf_config^(0+128)+18)
  2195                           
  2196                           ;adf7012.c: 344: Adf_Write_Config();
  2197  0C5C  318C  241F  318C   	fcall	_Adf_Write_Config
  2198                           
  2199                           ;adf7012.c: 345: Delay_ms(10);
  2200  0C5F  300A               	movlw	10
  2201  0C60  0020               	movlb	0	; select bank0
  2202  0C61  00A0               	movwf	Delay_ms@time_to_delay
  2203  0C62  3000               	movlw	0
  2204  0C63  00A1               	movwf	Delay_ms@time_to_delay+1
  2205  0C64  318D  2526         	fcall	_Delay_ms
  2206  0C66  0008               	return
  2207  0C67                     __end_of_Ptt_Off:	
  2208                           
  2209                           	psect	text4
  2210  0C06                     __ptext4:	
  2211 ;; *************** function _Modem_Setup *****************
  2212 ;; Defined at:
  2213 ;;		line 53 in file "audio_tone.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;		None               void
  2220 ;; Registers used:
  2221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;Total ram usage:        0 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:   10
  2234 ;; This function calls:
  2235 ;;		_Configure_Audio
  2236 ;;		_Radio_Setup
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function _Modem_Setup
  2244  0C06                     _Modem_Setup:	
  2245                           
  2246                           ;audio_tone.c: 55: Configure_Audio();
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2250  0C06  318C  249F  318C   	fcall	_Configure_Audio
  2251                           
  2252                           ;audio_tone.c: 56: Radio_Setup();
  2253  0C09  318C  242B         	fcall	_Radio_Setup
  2254  0C0B  0008               	return
  2255  0C0C                     __end_of_Modem_Setup:	
  2256                           
  2257                           	psect	text5
  2258  0C2B                     __ptext5:	
  2259 ;; *************** function _Radio_Setup *****************
  2260 ;; Defined at:
  2261 ;;		line 299 in file "adf7012.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;		None               void
  2268 ;; Registers used:
  2269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2279 ;;Total ram usage:        0 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    9
  2282 ;; This function calls:
  2283 ;;		_Adf_Reset_Config
  2284 ;;		_Adf_Write_Config
  2285 ;;		_Delay_ms
  2286 ;; This function is called by:
  2287 ;;		_Modem_Setup
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _Radio_Setup
  2293  0C2B                     _Radio_Setup:	
  2294                           
  2295                           ;adf7012.c: 302: Adf_Reset_Config();
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2299  0C2B  318C  2439  318C   	fcall	_Adf_Reset_Config
  2300                           
  2301                           ;adf7012.c: 304: Adf_Write_Config();
  2302  0C2E  318C  241F  318C   	fcall	_Adf_Write_Config
  2303                           
  2304                           ;adf7012.c: 306: Delay_ms(10);
  2305  0C31  300A               	movlw	10
  2306  0C32  0020               	movlb	0	; select bank0
  2307  0C33  00A0               	movwf	Delay_ms@time_to_delay
  2308  0C34  3000               	movlw	0
  2309  0C35  00A1               	movwf	Delay_ms@time_to_delay+1
  2310  0C36  318D  2526         	fcall	_Delay_ms
  2311  0C38  0008               	return
  2312  0C39                     __end_of_Radio_Setup:	
  2313                           
  2314                           	psect	text6
  2315  0C39                     __ptext6:	
  2316 ;; *************** function _Adf_Reset_Config *****************
  2317 ;; Defined at:
  2318 ;;		line 84 in file "adf7012.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;		None
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;		None               void
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;Total ram usage:        0 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    6
  2339 ;; This function calls:
  2340 ;;		_Adf_Reset
  2341 ;;		_Adf_Reset_Register_One
  2342 ;;		_Adf_Reset_Register_Three
  2343 ;;		_Adf_Reset_Register_Two
  2344 ;;		_Adf_Reset_Register_Zero
  2345 ;; This function is called by:
  2346 ;;		_Radio_Setup
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           
  2351                           ;psect for function _Adf_Reset_Config
  2352  0C39                     _Adf_Reset_Config:	
  2353                           
  2354                           ;adf7012.c: 87: Adf_Reset_Register_Zero();
  2355                           
  2356                           ;incstack = 0
  2357                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  2358  0C39  318D  2507  318C   	fcall	_Adf_Reset_Register_Zero
  2359                           
  2360                           ;adf7012.c: 88: Adf_Reset_Register_One();
  2361  0C3C  318C  2467  318C   	fcall	_Adf_Reset_Register_One
  2362                           
  2363                           ;adf7012.c: 89: Adf_Reset_Register_Two();
  2364  0C3F  318C  24B7  318C   	fcall	_Adf_Reset_Register_Two
  2365                           
  2366                           ;adf7012.c: 90: Adf_Reset_Register_Three();
  2367  0C42  3183  23D8  318C   	fcall	_Adf_Reset_Register_Three
  2368                           
  2369                           ;adf7012.c: 92: Adf_Reset();
  2370  0C45  318C  2478         	fcall	_Adf_Reset
  2371  0C47  0008               	return
  2372  0C48                     __end_of_Adf_Reset_Config:	
  2373                           
  2374                           	psect	text7
  2375  0D07                     __ptext7:	
  2376 ;; *************** function _Adf_Reset_Register_Zero *****************
  2377 ;; Defined at:
  2378 ;;		line 96 in file "adf7012.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;		None
  2383 ;; Return value:  Size  Location     Type
  2384 ;;		None               void
  2385 ;; Registers used:
  2386 ;;		wreg, status,2
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2394 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;Total ram usage:        1 bytes
  2397 ;; Hardware stack levels used:    1
  2398 ;; Hardware stack levels required when called:    3
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_Adf_Reset_Config
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _Adf_Reset_Register_Zero
  2408  0D07                     _Adf_Reset_Register_Zero:	
  2409                           
  2410                           ;adf7012.c: 97: adf_config.r0.frequency_error_correction = 0;
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  2414  0D07  3000               	movlw	0
  2415  0D08  0021               	movlb	1	; select bank1
  2416  0D09  00A3               	movwf	(_adf_config+3)^(0+128)
  2417  0D0A  3000               	movlw	0
  2418  0D0B  00A2               	movwf	(_adf_config+2)^(0+128)
  2419  0D0C  3000               	movlw	0
  2420  0D0D  00A1               	movwf	(_adf_config+1)^(0+128)
  2421  0D0E  3000               	movlw	0
  2422  0D0F  00A0               	movwf	_adf_config^(0+128)
  2423                           
  2424                           ;adf7012.c: 98: adf_config.r0.r_divider = 15;
  2425  0D10  300F               	movlw	15
  2426  0D11  0020               	movlb	0	; select bank0
  2427  0D12  00A0               	movwf	??_Adf_Reset_Register_Zero
  2428  0D13  0820               	movf	??_Adf_Reset_Register_Zero,w
  2429  0D14  0021               	movlb	1	; select bank1
  2430  0D15  00A4               	movwf	(_adf_config^(0+128)+4)
  2431                           
  2432                           ;adf7012.c: 99: adf_config.r0.crystal_doubler = 0;
  2433  0D16  01A5               	clrf	(_adf_config^(0+128)+5)
  2434                           
  2435                           ;adf7012.c: 100: adf_config.r0.crystal_oscillator_disable = 0;
  2436  0D17  01A6               	clrf	(_adf_config^(0+128)+6)
  2437                           
  2438                           ;adf7012.c: 101: adf_config.r0.clock_out_divider = 2;
  2439  0D18  3002               	movlw	2
  2440  0D19  0020               	movlb	0	; select bank0
  2441  0D1A  00A0               	movwf	??_Adf_Reset_Register_Zero
  2442  0D1B  0820               	movf	??_Adf_Reset_Register_Zero,w
  2443  0D1C  0021               	movlb	1	; select bank1
  2444  0D1D  00A7               	movwf	(_adf_config^(0+128)+7)
  2445                           
  2446                           ;adf7012.c: 102: adf_config.r0.vco_adjust = 0;
  2447  0D1E  01A8               	clrf	(_adf_config^(0+128)+8)
  2448                           
  2449                           ;adf7012.c: 103: adf_config.r0.output_divider = 2;
  2450  0D1F  3002               	movlw	2
  2451  0D20  0020               	movlb	0	; select bank0
  2452  0D21  00A0               	movwf	??_Adf_Reset_Register_Zero
  2453  0D22  0820               	movf	??_Adf_Reset_Register_Zero,w
  2454  0D23  0021               	movlb	1	; select bank1
  2455  0D24  00A9               	movwf	(_adf_config^(0+128)+9)
  2456  0D25  0008               	return
  2457  0D26                     __end_of_Adf_Reset_Register_Zero:	
  2458                           
  2459                           	psect	text8
  2460  0CB7                     __ptext8:	
  2461 ;; *************** function _Adf_Reset_Register_Two *****************
  2462 ;; Defined at:
  2463 ;;		line 112 in file "adf7012.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;		None               void
  2470 ;; Registers used:
  2471 ;;		wreg, status,2
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2479 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2480 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2481 ;;Total ram usage:        1 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:    3
  2484 ;; This function calls:
  2485 ;;		Nothing
  2486 ;; This function is called by:
  2487 ;;		_Adf_Reset_Config
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           
  2492                           ;psect for function _Adf_Reset_Register_Two
  2493  0CB7                     _Adf_Reset_Register_Two:	
  2494                           
  2495                           ;adf7012.c: 113: adf_config.r2.mod_control = 3;
  2496                           
  2497                           ;incstack = 0
  2498                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  2499  0CB7  3003               	movlw	3
  2500  0CB8  0020               	movlb	0	; select bank0
  2501  0CB9  00A0               	movwf	??_Adf_Reset_Register_Two
  2502  0CBA  0820               	movf	??_Adf_Reset_Register_Two,w
  2503  0CBB  0021               	movlb	1	; select bank1
  2504  0CBC  00B0               	movwf	(_adf_config^(0+128)+16)
  2505                           
  2506                           ;adf7012.c: 114: adf_config.r2.gook = 0;
  2507  0CBD  01B1               	clrf	(_adf_config^(0+128)+17)
  2508                           
  2509                           ;adf7012.c: 115: adf_config.r2.power_amplifier_level = 15;
  2510  0CBE  300F               	movlw	15
  2511  0CBF  0020               	movlb	0	; select bank0
  2512  0CC0  00A0               	movwf	??_Adf_Reset_Register_Two
  2513  0CC1  0820               	movf	??_Adf_Reset_Register_Two,w
  2514  0CC2  0021               	movlb	1	; select bank1
  2515  0CC3  00B2               	movwf	(_adf_config^(0+128)+18)
  2516                           
  2517                           ;adf7012.c: 116: adf_config.r2.modulation_deviation = 16;
  2518  0CC4  3000               	movlw	0
  2519  0CC5  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  2520  0CC6  3000               	movlw	0
  2521  0CC7  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  2522  0CC8  3000               	movlw	0
  2523  0CC9  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  2524  0CCA  3010               	movlw	16
  2525  0CCB  00B3               	movwf	(_adf_config^(0+128)+19)
  2526                           
  2527                           ;adf7012.c: 117: adf_config.r2.gfsk_modulation_control = 0;
  2528  0CCC  01B7               	clrf	(_adf_config^(0+128)+23)
  2529                           
  2530                           ;adf7012.c: 118: adf_config.r2.index_counter = 0;
  2531  0CCD  01B8               	clrf	(_adf_config^(0+128)+24)
  2532  0CCE  0008               	return
  2533  0CCF                     __end_of_Adf_Reset_Register_Two:	
  2534                           
  2535                           	psect	text9
  2536  03D8                     __ptext9:	
  2537 ;; *************** function _Adf_Reset_Register_Three *****************
  2538 ;; Defined at:
  2539 ;;		line 121 in file "adf7012.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;		None               void
  2546 ;; Registers used:
  2547 ;;		wreg, status,2
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;Total ram usage:        1 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    3
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_Adf_Reset_Config
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           
  2568                           ;psect for function _Adf_Reset_Register_Three
  2569  03D8                     _Adf_Reset_Register_Three:	
  2570                           
  2571                           ;adf7012.c: 122: adf_config.r3.pll_enable = 0;
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  2575  03D8  0021               	movlb	1	; select bank1
  2576  03D9  01B9               	clrf	(_adf_config^(0+128)+25)
  2577                           
  2578                           ;adf7012.c: 123: adf_config.r3.pa_enable = 0;
  2579  03DA  01BA               	clrf	(_adf_config^(0+128)+26)
  2580                           
  2581                           ;adf7012.c: 124: adf_config.r3.clkout_enable = 1;
  2582  03DB  01BB               	clrf	(_adf_config^(0+128)+27)
  2583  03DC  0ABB               	incf	(_adf_config^(0+128)+27),f
  2584                           
  2585                           ;adf7012.c: 125: adf_config.r3.data_invert = 1;
  2586  03DD  01BC               	clrf	(_adf_config^(0+128)+28)
  2587  03DE  0ABC               	incf	(_adf_config^(0+128)+28),f
  2588                           
  2589                           ;adf7012.c: 126: adf_config.r3.charge_pump_current = 3;
  2590  03DF  3003               	movlw	3
  2591  03E0  0020               	movlb	0	; select bank0
  2592  03E1  00A0               	movwf	??_Adf_Reset_Register_Three
  2593  03E2  0820               	movf	??_Adf_Reset_Register_Three,w
  2594  03E3  0021               	movlb	1	; select bank1
  2595  03E4  00BD               	movwf	(_adf_config^(0+128)+29)
  2596                           
  2597                           ;adf7012.c: 127: adf_config.r3.bleed_up = 0;
  2598  03E5  01BE               	clrf	(_adf_config^(0+128)+30)
  2599                           
  2600                           ;adf7012.c: 128: adf_config.r3.bleed_down = 0;
  2601  03E6  01BF               	clrf	(_adf_config^(0+128)+31)
  2602                           
  2603                           ;adf7012.c: 129: adf_config.r3.vco_disable = 0;
  2604  03E7  01C0               	clrf	(_adf_config^(0+128)+32)
  2605                           
  2606                           ;adf7012.c: 131: adf_config.r3.muxout = 3;
  2607  03E8  3003               	movlw	3
  2608  03E9  0020               	movlb	0	; select bank0
  2609  03EA  00A0               	movwf	??_Adf_Reset_Register_Three
  2610  03EB  0820               	movf	??_Adf_Reset_Register_Three,w
  2611  03EC  0021               	movlb	1	; select bank1
  2612  03ED  00C1               	movwf	(_adf_config^(0+128)+33)
  2613                           
  2614                           ;adf7012.c: 133: adf_config.r3.ld_precision = 0;
  2615  03EE  01C2               	clrf	(_adf_config^(0+128)+34)
  2616                           
  2617                           ;adf7012.c: 134: adf_config.r3.vco_bias = 6;
  2618  03EF  3006               	movlw	6
  2619  03F0  0020               	movlb	0	; select bank0
  2620  03F1  00A0               	movwf	??_Adf_Reset_Register_Three
  2621  03F2  0820               	movf	??_Adf_Reset_Register_Three,w
  2622  03F3  0021               	movlb	1	; select bank1
  2623  03F4  00C3               	movwf	(_adf_config^(0+128)+35)
  2624                           
  2625                           ;adf7012.c: 135: adf_config.r3.pa_bias = 4;
  2626  03F5  3004               	movlw	4
  2627  03F6  0020               	movlb	0	; select bank0
  2628  03F7  00A0               	movwf	??_Adf_Reset_Register_Three
  2629  03F8  0820               	movf	??_Adf_Reset_Register_Three,w
  2630  03F9  0021               	movlb	1	; select bank1
  2631  03FA  00C4               	movwf	(_adf_config^(0+128)+36)
  2632                           
  2633                           ;adf7012.c: 136: adf_config.r3.pll_test_mode = 0;
  2634  03FB  01C5               	clrf	(_adf_config^(0+128)+37)
  2635                           
  2636                           ;adf7012.c: 137: adf_config.r3.sd_test_mode = 0;
  2637  03FC  01C6               	clrf	(_adf_config^(0+128)+38)
  2638  03FD  0008               	return
  2639  03FE                     __end_of_Adf_Reset_Register_Three:	
  2640                           
  2641                           	psect	text10
  2642  0C67                     __ptext10:	
  2643 ;; *************** function _Adf_Reset_Register_One *****************
  2644 ;; Defined at:
  2645 ;;		line 106 in file "adf7012.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;		None
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;		None               void
  2652 ;; Registers used:
  2653 ;;		wreg
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2663 ;;Total ram usage:        1 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    3
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_Adf_Reset_Config
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _Adf_Reset_Register_One
  2675  0C67                     _Adf_Reset_Register_One:	
  2676                           
  2677                           ;adf7012.c: 107: adf_config.r1.integer_n = 109;
  2678                           
  2679                           ;incstack = 0
  2680                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  2681  0C67  306D               	movlw	109
  2682  0C68  0020               	movlb	0	; select bank0
  2683  0C69  00A0               	movwf	??_Adf_Reset_Register_One
  2684  0C6A  0820               	movf	??_Adf_Reset_Register_One,w
  2685  0C6B  0021               	movlb	1	; select bank1
  2686  0C6C  00AE               	movwf	(_adf_config^(0+128)+14)
  2687                           
  2688                           ;adf7012.c: 108: adf_config.r1.fractional_n = 0;
  2689  0C6D  3000               	movlw	0
  2690  0C6E  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  2691  0C6F  3000               	movlw	0
  2692  0C70  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  2693  0C71  3000               	movlw	0
  2694  0C72  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  2695  0C73  3000               	movlw	0
  2696  0C74  00AA               	movwf	(_adf_config^(0+128)+10)
  2697                           
  2698                           ;adf7012.c: 109: adf_config.r1.prescaler = 1;
  2699  0C75  01AF               	clrf	(_adf_config^(0+128)+15)
  2700  0C76  0AAF               	incf	(_adf_config^(0+128)+15),f
  2701  0C77  0008               	return
  2702  0C78                     __end_of_Adf_Reset_Register_One:	
  2703                           
  2704                           	psect	text11
  2705  0C78                     __ptext11:	
  2706 ;; *************** function _Adf_Reset *****************
  2707 ;; Defined at:
  2708 ;;		line 140 in file "adf7012.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;		None               void
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0, pclath, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    5
  2729 ;; This function calls:
  2730 ;;		_Delay_ms
  2731 ;; This function is called by:
  2732 ;;		_Adf_Reset_Config
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function _Adf_Reset
  2738  0C78                     _Adf_Reset:	
  2739                           
  2740                           ;adf7012.c: 142: PORTAbits.RA5 = 0;;
  2741                           
  2742                           ;incstack = 0
  2743                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  2744  0C78  0020               	movlb	0	; select bank0
  2745  0C79  128C               	bcf	12,5	;volatile
  2746                           
  2747                           ;adf7012.c: 143: Delay_ms(10);
  2748  0C7A  300A               	movlw	10
  2749  0C7B  00A0               	movwf	Delay_ms@time_to_delay
  2750  0C7C  3000               	movlw	0
  2751  0C7D  00A1               	movwf	Delay_ms@time_to_delay+1
  2752  0C7E  318D  2526  318C   	fcall	_Delay_ms
  2753                           
  2754                           ;adf7012.c: 144: PORTAbits.RA5 = 1;;
  2755  0C81  0020               	movlb	0	; select bank0
  2756  0C82  168C               	bsf	12,5	;volatile
  2757                           
  2758                           ;adf7012.c: 145: Delay_ms(10);
  2759  0C83  300A               	movlw	10
  2760  0C84  00A0               	movwf	Delay_ms@time_to_delay
  2761  0C85  3000               	movlw	0
  2762  0C86  00A1               	movwf	Delay_ms@time_to_delay+1
  2763  0C87  318D  2526         	fcall	_Delay_ms
  2764  0C89  0008               	return
  2765  0C8A                     __end_of_Adf_Reset:	
  2766                           
  2767                           	psect	text12
  2768  0C9F                     __ptext12:	
  2769 ;; *************** function _Configure_Audio *****************
  2770 ;; Defined at:
  2771 ;;		line 47 in file "audio_tone.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;		None               void
  2778 ;; Registers used:
  2779 ;;		wreg
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2789 ;;Total ram usage:        1 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    3
  2792 ;; This function calls:
  2793 ;;		Nothing
  2794 ;; This function is called by:
  2795 ;;		_Modem_Setup
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _Configure_Audio
  2801  0C9F                     _Configure_Audio:	
  2802                           
  2803                           ;audio_tone.c: 48: SAMPLES_PER_BAUD = 26;
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _Configure_Audio: [wreg]
  2807  0C9F  301A               	movlw	26
  2808  0CA0  0020               	movlb	0	; select bank0
  2809  0CA1  00A0               	movwf	??_Configure_Audio
  2810  0CA2  0820               	movf	??_Configure_Audio,w
  2811  0CA3  0021               	movlb	1	; select bank1
  2812  0CA4  00CE               	movwf	_SAMPLES_PER_BAUD^(0+128)
  2813                           
  2814                           ;audio_tone.c: 49: PHASE_DELTA_1200 = 7;
  2815  0CA5  3000               	movlw	0
  2816  0CA6  0022               	movlb	2	; select bank2
  2817  0CA7  00A7               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  2818  0CA8  3000               	movlw	0
  2819  0CA9  00A6               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  2820  0CAA  3000               	movlw	0
  2821  0CAB  00A5               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  2822  0CAC  3007               	movlw	7
  2823  0CAD  00A4               	movwf	_PHASE_DELTA_1200^(0+256)
  2824                           
  2825                           ;audio_tone.c: 50: PHASE_DELTA_2200 = 13;
  2826  0CAE  3000               	movlw	0
  2827  0CAF  00AB               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  2828  0CB0  3000               	movlw	0
  2829  0CB1  00AA               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  2830  0CB2  3000               	movlw	0
  2831  0CB3  00A9               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  2832  0CB4  300D               	movlw	13
  2833  0CB5  00A8               	movwf	_PHASE_DELTA_2200^(0+256)
  2834  0CB6  0008               	return
  2835  0CB7                     __end_of_Configure_Audio:	
  2836                           
  2837                           	psect	text13
  2838  0D99                     __ptext13:	
  2839 ;; *************** function _Modem_Flush_Frame *****************
  2840 ;; Defined at:
  2841 ;;		line 59 in file "audio_tone.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;		None
  2846 ;; Return value:  Size  Location     Type
  2847 ;;		None               void
  2848 ;; Registers used:
  2849 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2859 ;;Total ram usage:        1 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:   10
  2862 ;; This function calls:
  2863 ;;		_Delay_ms
  2864 ;;		_Ptt_On
  2865 ;;		_Timer0_Start
  2866 ;; This function is called by:
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           
  2872                           ;psect for function _Modem_Flush_Frame
  2873  0D99                     _Modem_Flush_Frame:	
  2874                           
  2875                           ;audio_tone.c: 61: phase_delta = PHASE_DELTA_1200;
  2876                           
  2877                           ;incstack = 0
  2878                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2879  0D99  0022               	movlb	2	; select bank2
  2880  0D9A  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  2881  0D9B  0020               	movlb	0	; select bank0
  2882  0D9C  00EC               	movwf	??_Modem_Flush_Frame
  2883  0D9D  086C               	movf	??_Modem_Flush_Frame,w
  2884  0D9E  0021               	movlb	1	; select bank1
  2885  0D9F  00D2               	movwf	_phase_delta^(0+128)
  2886                           
  2887                           ;audio_tone.c: 62: phase = 0;
  2888  0DA0  01FD               	clrf	_phase
  2889                           
  2890                           ;audio_tone.c: 63: packet_pos = 0;
  2891  0DA1  3000               	movlw	0
  2892  0DA2  0022               	movlb	2	; select bank2
  2893  0DA3  00B3               	movwf	(_packet_pos+3)^(0+256)
  2894  0DA4  3000               	movlw	0
  2895  0DA5  00B2               	movwf	(_packet_pos+2)^(0+256)
  2896  0DA6  3000               	movlw	0
  2897  0DA7  00B1               	movwf	(_packet_pos+1)^(0+256)
  2898  0DA8  3000               	movlw	0
  2899  0DA9  00B0               	movwf	_packet_pos^(0+256)
  2900                           
  2901                           ;audio_tone.c: 64: current_sample_in_baud = 0;
  2902  0DAA  0021               	movlb	1	; select bank1
  2903  0DAB  01D1               	clrf	_current_sample_in_baud^(0+128)
  2904                           
  2905                           ;audio_tone.c: 65: MODEM_TRANSMITTING = 1;
  2906  0DAC  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  2907  0DAD  0ACC               	incf	_MODEM_TRANSMITTING^(0+128),f
  2908                           
  2909                           ;audio_tone.c: 67: PORTCbits.RC3 = 0;;
  2910  0DAE  0020               	movlb	0	; select bank0
  2911  0DAF  118E               	bcf	14,3	;volatile
  2912                           
  2913                           ;audio_tone.c: 68: Delay_ms(1);
  2914  0DB0  3001               	movlw	1
  2915  0DB1  00A0               	movwf	Delay_ms@time_to_delay
  2916  0DB2  3000               	movlw	0
  2917  0DB3  00A1               	movwf	Delay_ms@time_to_delay+1
  2918  0DB4  318D  2526  318D   	fcall	_Delay_ms
  2919                           
  2920                           ;audio_tone.c: 78: Ptt_On();
  2921  0DB7  318D  25F7  318D   	fcall	_Ptt_On
  2922                           
  2923                           ;audio_tone.c: 80: Delay_ms(100);
  2924  0DBA  3064               	movlw	100
  2925  0DBB  0020               	movlb	0	; select bank0
  2926  0DBC  00A0               	movwf	Delay_ms@time_to_delay
  2927  0DBD  3000               	movlw	0
  2928  0DBE  00A1               	movwf	Delay_ms@time_to_delay+1
  2929  0DBF  318D  2526  318D   	fcall	_Delay_ms
  2930                           
  2931                           ;audio_tone.c: 81: Timer0_Start();
  2932  0DC2  318B  23F5         	fcall	_Timer0_Start
  2933  0DC4  0008               	return
  2934  0DC5                     __end_of_Modem_Flush_Frame:	
  2935                           
  2936                           	psect	text14
  2937  0BF5                     __ptext14:	
  2938 ;; *************** function _Timer0_Start *****************
  2939 ;; Defined at:
  2940 ;;		line 244 in file "utility.c"
  2941 ;; Parameters:    Size  Location     Type
  2942 ;;		None
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;		None
  2945 ;; Return value:  Size  Location     Type
  2946 ;;		None               void
  2947 ;; Registers used:
  2948 ;;		status,2
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;Total ram usage:        0 bytes
  2959 ;; Hardware stack levels used:    1
  2960 ;; Hardware stack levels required when called:    3
  2961 ;; This function calls:
  2962 ;;		Nothing
  2963 ;; This function is called by:
  2964 ;;		_Modem_Flush_Frame
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           
  2969                           ;psect for function _Timer0_Start
  2970  0BF5                     _Timer0_Start:	
  2971                           
  2972                           ;utility.c: 245: TMR0 = 0x00;
  2973                           
  2974                           ;incstack = 0
  2975                           ; Regs used in _Timer0_Start: [status,2]
  2976  0BF5  0020               	movlb	0	; select bank0
  2977  0BF6  0195               	clrf	21	;volatile
  2978                           
  2979                           ;utility.c: 246: TMR0IF = 0;
  2980  0BF7  110B               	bcf	11,2	;volatile
  2981                           
  2982                           ;utility.c: 247: TMR0IE = 1;
  2983  0BF8  168B               	bsf	11,5	;volatile
  2984  0BF9  0008               	return
  2985  0BFA                     __end_of_Timer0_Start:	
  2986                           
  2987                           	psect	text15
  2988  0DF7                     __ptext15:	
  2989 ;; *************** function _Ptt_On *****************
  2990 ;; Defined at:
  2991 ;;		line 310 in file "adf7012.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;		None
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      unsigned char 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3009 ;;Total ram usage:        1 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    9
  3012 ;; This function calls:
  3013 ;;		_Adf_Write_Config
  3014 ;;		_Delay_ms
  3015 ;;		_Read_Adf7012_Muxout
  3016 ;; This function is called by:
  3017 ;;		_Modem_Flush_Frame
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           
  3022                           ;psect for function _Ptt_On
  3023  0DF7                     _Ptt_On:	
  3024                           
  3025                           ;adf7012.c: 312: adf_config.r3.pa_enable = 0;
  3026                           
  3027                           ;incstack = 0
  3028                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3029  0DF7  0021               	movlb	1	; select bank1
  3030  0DF8  01BA               	clrf	(_adf_config^(0+128)+26)
  3031                           
  3032                           ;adf7012.c: 313: adf_config.r2.power_amplifier_level = 0;
  3033  0DF9  01B2               	clrf	(_adf_config^(0+128)+18)
  3034                           
  3035                           ;adf7012.c: 314: adf_config.r3.muxout = 3;
  3036  0DFA  3003               	movlw	3
  3037  0DFB  0020               	movlb	0	; select bank0
  3038  0DFC  00EB               	movwf	??_Ptt_On
  3039  0DFD  086B               	movf	??_Ptt_On,w
  3040  0DFE  0021               	movlb	1	; select bank1
  3041  0DFF  00C1               	movwf	(_adf_config^(0+128)+33)
  3042                           
  3043                           ;adf7012.c: 316: Adf_Write_Config();
  3044  0E00  318C  241F  318D   	fcall	_Adf_Write_Config
  3045                           
  3046                           ;adf7012.c: 317: Delay_ms(10);
  3047  0E03  300A               	movlw	10
  3048  0E04  0020               	movlb	0	; select bank0
  3049  0E05  00A0               	movwf	Delay_ms@time_to_delay
  3050  0E06  3000               	movlw	0
  3051  0E07  00A1               	movwf	Delay_ms@time_to_delay+1
  3052  0E08  318D  2526  318D   	fcall	_Delay_ms
  3053                           
  3054                           ;adf7012.c: 321: if (!Read_Adf7012_Muxout())
  3055  0E0B  318C  2418  318D   	fcall	_Read_Adf7012_Muxout
  3056  0E0E  3800               	iorlw	0
  3057  0E0F  1903               	btfsc	3,2
  3058  0E10  0008               	return
  3059                           
  3060                           ;adf7012.c: 325: else
  3061                           ;adf7012.c: 326: {
  3062                           ;adf7012.c: 328: adf_config.r3.pa_enable = 1;
  3063                           
  3064                           ;adf7012.c: 324: }
  3065                           
  3066                           ;adf7012.c: 322: {
  3067                           ;adf7012.c: 323: return 0;
  3068                           ;	Return value of _Ptt_On is never used
  3069  0E11  0021               	movlb	1	; select bank1
  3070  0E12  01BA               	clrf	(_adf_config^(0+128)+26)
  3071  0E13  0ABA               	incf	(_adf_config^(0+128)+26),f
  3072                           
  3073                           ;adf7012.c: 329: adf_config.r2.power_amplifier_level = 63;
  3074  0E14  303F               	movlw	63
  3075  0E15  0020               	movlb	0	; select bank0
  3076  0E16  00EB               	movwf	??_Ptt_On
  3077  0E17  086B               	movf	??_Ptt_On,w
  3078  0E18  0021               	movlb	1	; select bank1
  3079  0E19  00B2               	movwf	(_adf_config^(0+128)+18)
  3080                           
  3081                           ;adf7012.c: 331: Delay_ms(10);
  3082  0E1A  300A               	movlw	10
  3083  0E1B  0020               	movlb	0	; select bank0
  3084  0E1C  00A0               	movwf	Delay_ms@time_to_delay
  3085  0E1D  3000               	movlw	0
  3086  0E1E  00A1               	movwf	Delay_ms@time_to_delay+1
  3087  0E1F  318D  2526  318D   	fcall	_Delay_ms
  3088                           
  3089                           ;adf7012.c: 332: Adf_Write_Config();
  3090  0E22  318C  241F  318D   	fcall	_Adf_Write_Config
  3091                           
  3092                           ;adf7012.c: 333: Delay_ms(1);
  3093  0E25  3001               	movlw	1
  3094  0E26  0020               	movlb	0	; select bank0
  3095  0E27  00A0               	movwf	Delay_ms@time_to_delay
  3096  0E28  3000               	movlw	0
  3097  0E29  00A1               	movwf	Delay_ms@time_to_delay+1
  3098  0E2A  318D  2526         	fcall	_Delay_ms
  3099                           
  3100                           ;adf7012.c: 335: return 1;
  3101                           ;	Return value of _Ptt_On is never used
  3102  0E2C  0008               	return
  3103  0E2D                     __end_of_Ptt_On:	
  3104                           
  3105                           	psect	text16
  3106  0C8A                     __ptext16:	
  3107 ;; *************** function _Gpio_Config *****************
  3108 ;; Defined at:
  3109 ;;		line 31 in file "utility.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      unsigned char 
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3125 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3126 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3127 ;;Total ram usage:        1 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    3
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           
  3138                           ;psect for function _Gpio_Config
  3139  0C8A                     _Gpio_Config:	
  3140                           
  3141                           ;utility.c: 34: TRISA |= 0b00000010;
  3142                           
  3143                           ;incstack = 0
  3144                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  3145  0C8A  0021               	movlb	1	; select bank1
  3146  0C8B  148C               	bsf	12,1	;volatile
  3147                           
  3148                           ;utility.c: 35: TRISA &= 0b11001011;
  3149  0C8C  30CB               	movlw	203
  3150  0C8D  0020               	movlb	0	; select bank0
  3151  0C8E  00A0               	movwf	??_Gpio_Config
  3152  0C8F  0820               	movf	??_Gpio_Config,w
  3153  0C90  0021               	movlb	1	; select bank1
  3154  0C91  058C               	andwf	12,f	;volatile
  3155                           
  3156                           ;utility.c: 36: TRISC |= 0b00110000;
  3157  0C92  3030               	movlw	48
  3158  0C93  0020               	movlb	0	; select bank0
  3159  0C94  00A0               	movwf	??_Gpio_Config
  3160  0C95  0820               	movf	??_Gpio_Config,w
  3161  0C96  0021               	movlb	1	; select bank1
  3162  0C97  048E               	iorwf	14,f	;volatile
  3163                           
  3164                           ;utility.c: 37: TRISC &= 0b11110000;
  3165  0C98  30F0               	movlw	240
  3166  0C99  0020               	movlb	0	; select bank0
  3167  0C9A  00A0               	movwf	??_Gpio_Config
  3168  0C9B  0820               	movf	??_Gpio_Config,w
  3169  0C9C  0021               	movlb	1	; select bank1
  3170  0C9D  058E               	andwf	14,f	;volatile
  3171  0C9E  0008               	return
  3172  0C9F                     __end_of_Gpio_Config:	
  3173                           ;utility.c: 39: return 1;
  3174                           ;	Return value of _Gpio_Config is never used
  3175                           
  3176                           
  3177                           	psect	text17
  3178  0CEA                     __ptext17:	
  3179 ;; *************** function _Ax25_Send_String *****************
  3180 ;; Defined at:
  3181 ;;		line 91 in file "ax25.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  3184 ;;		 -> STR_1(6), 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;  i               2   15[BANK0 ] int 
  3187 ;; Return value:  Size  Location     Type
  3188 ;;		None               void
  3189 ;; Registers used:
  3190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3197 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3199 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3200 ;;Total ram usage:        4 bytes
  3201 ;; Hardware stack levels used:    1
  3202 ;; Hardware stack levels required when called:    6
  3203 ;; This function calls:
  3204 ;;		_Ax25_Send_Byte
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           
  3211                           ;psect for function _Ax25_Send_String
  3212  0CEA                     _Ax25_Send_String:	
  3213                           
  3214                           ;ax25.c: 93: int i;
  3215                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  3216                           
  3217                           ;incstack = 0
  3218                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3219  0CEA  0020               	movlb	0	; select bank0
  3220  0CEB  01AF               	clrf	Ax25_Send_String@i
  3221  0CEC  01B0               	clrf	Ax25_Send_String@i+1
  3222  0CED                     l2203:	
  3223  0CED  082D               	movf	Ax25_Send_String@string,w
  3224  0CEE  072F               	addwf	Ax25_Send_String@i,w
  3225  0CEF  0084               	movwf	4
  3226  0CF0  082E               	movf	Ax25_Send_String@string+1,w
  3227  0CF1  3D30               	addwfc	Ax25_Send_String@i+1,w
  3228  0CF2  0085               	movwf	5
  3229  0CF3  0800               	movf	0,w	;code access
  3230  0CF4  3800               	iorlw	0
  3231  0CF5  1903               	btfsc	3,2
  3232  0CF6  0008               	return
  3233                           
  3234                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  3235  0CF7  082D               	movf	Ax25_Send_String@string,w
  3236  0CF8  072F               	addwf	Ax25_Send_String@i,w
  3237  0CF9  0084               	movwf	4
  3238  0CFA  082E               	movf	Ax25_Send_String@string+1,w
  3239  0CFB  3D30               	addwfc	Ax25_Send_String@i+1,w
  3240  0CFC  0085               	movwf	5
  3241  0CFD  0800               	movf	0,w	;code access
  3242  0CFE  318C  2400  318C   	fcall	_Ax25_Send_Byte
  3243  0D01  3001               	movlw	1
  3244  0D02  0020               	movlb	0	; select bank0
  3245  0D03  07AF               	addwf	Ax25_Send_String@i,f
  3246  0D04  3000               	movlw	0
  3247  0D05  3DB0               	addwfc	Ax25_Send_String@i+1,f
  3248  0D06  2CED               	goto	l2203
  3249  0D07                     __end_of_Ax25_Send_String:	
  3250                           
  3251                           	psect	text18
  3252  0C00                     __ptext18:	
  3253 ;; *************** function _Ax25_Send_Byte *****************
  3254 ;; Defined at:
  3255 ;;		line 58 in file "ax25.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  byte            1    wreg     unsigned char 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  byte            1   12[BANK0 ] unsigned char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;		None               void
  3262 ;; Registers used:
  3263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3273 ;;Total ram usage:        1 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    5
  3276 ;; This function calls:
  3277 ;;		_Send_Byte
  3278 ;; This function is called by:
  3279 ;;		_Ax25_Send_String
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _Ax25_Send_Byte
  3285  0C00                     _Ax25_Send_Byte:	
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3289                           ;Ax25_Send_Byte@byte stored from wreg
  3290  0C00  0020               	movlb	0	; select bank0
  3291  0C01  00AC               	movwf	Ax25_Send_Byte@byte
  3292                           
  3293                           ;ax25.c: 60: Send_Byte(byte);
  3294  0C02  082C               	movf	Ax25_Send_Byte@byte,w
  3295  0C03  3186  2630         	fcall	_Send_Byte
  3296  0C05  0008               	return
  3297  0C06                     __end_of_Ax25_Send_Byte:	
  3298                           
  3299                           	psect	text19
  3300  01F5                     __ptext19:	
  3301 ;; *************** function _Ax25_Send_Header *****************
  3302 ;; Defined at:
  3303 ;;		line 99 in file "ax25.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  addresses       1    wreg     PTR struct .
  3306 ;;		 -> main@beacon_address(16), 
  3307 ;;  num_addresse    2   12[BANK0 ] int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  addresses       1   19[BANK0 ] PTR struct .
  3310 ;;		 -> main@beacon_address(16), 
  3311 ;;  i               2   20[BANK0 ] int 
  3312 ;;  j               2   17[BANK0 ] int 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;		None               void
  3315 ;; Registers used:
  3316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;Total ram usage:       10 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    5
  3329 ;; This function calls:
  3330 ;;		_Ax25_Send_Flag
  3331 ;;		_Ax25_Send_Sync
  3332 ;;		_Send_Byte
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           
  3339                           ;psect for function _Ax25_Send_Header
  3340  01F5                     _Ax25_Send_Header:	
  3341                           
  3342                           ;incstack = 0
  3343                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3344                           ;Ax25_Send_Header@addresses stored from wreg
  3345  01F5  0020               	movlb	0	; select bank0
  3346  01F6  00B3               	movwf	Ax25_Send_Header@addresses
  3347                           
  3348                           ;ax25.c: 102: int i, j;
  3349                           ;ax25.c: 103: modem_packet_size = 0;
  3350  01F7  3000               	movlw	0
  3351  01F8  00FC               	movwf	_modem_packet_size+3
  3352  01F9  3000               	movlw	0
  3353  01FA  00FB               	movwf	_modem_packet_size+2
  3354  01FB  3000               	movlw	0
  3355  01FC  00FA               	movwf	_modem_packet_size+1
  3356  01FD  3000               	movlw	0
  3357  01FE  00F9               	movwf	_modem_packet_size
  3358                           
  3359                           ;ax25.c: 104: ones_in_a_row = 0;
  3360  01FF  0021               	movlb	1	; select bank1
  3361  0200  01C9               	clrf	_ones_in_a_row^(0+128)
  3362  0201  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  3363                           
  3364                           ;ax25.c: 105: crc = 0xffff;
  3365  0202  30FF               	movlw	255
  3366  0203  00C7               	movwf	_crc^(0+128)
  3367  0204  30FF               	movlw	255
  3368  0205  00C8               	movwf	(_crc^(0+128)+1)
  3369                           
  3370                           ;ax25.c: 108: for (i = 0; i < 10; i++)
  3371  0206  0020               	movlb	0	; select bank0
  3372  0207  01B4               	clrf	Ax25_Send_Header@i
  3373  0208  01B5               	clrf	Ax25_Send_Header@i+1
  3374  0209  0835               	movf	Ax25_Send_Header@i+1,w
  3375  020A  3A80               	xorlw	128
  3376  020B  00AE               	movwf	??_Ax25_Send_Header
  3377  020C  3080               	movlw	128
  3378  020D  022E               	subwf	??_Ax25_Send_Header,w
  3379  020E  1D03               	skipz
  3380  020F  2A12               	goto	u1865
  3381  0210  300A               	movlw	10
  3382  0211  0234               	subwf	Ax25_Send_Header@i,w
  3383  0212                     u1865:	
  3384  0212  1803               	btfsc	3,0
  3385  0213  2A27               	goto	l2159
  3386  0214                     l2153:	
  3387                           
  3388                           ;ax25.c: 109: {
  3389                           ;ax25.c: 110: Ax25_Send_Sync();
  3390  0214  318F  2787  3181   	fcall	_Ax25_Send_Sync
  3391  0217  3001               	movlw	1
  3392  0218  0020               	movlb	0	; select bank0
  3393  0219  07B4               	addwf	Ax25_Send_Header@i,f
  3394  021A  3000               	movlw	0
  3395  021B  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3396  021C  0835               	movf	Ax25_Send_Header@i+1,w
  3397  021D  3A80               	xorlw	128
  3398  021E  00AE               	movwf	??_Ax25_Send_Header
  3399  021F  3080               	movlw	128
  3400  0220  022E               	subwf	??_Ax25_Send_Header,w
  3401  0221  1D03               	skipz
  3402  0222  2A25               	goto	u1875
  3403  0223  300A               	movlw	10
  3404  0224  0234               	subwf	Ax25_Send_Header@i,w
  3405  0225                     u1875:	
  3406  0225  1C03               	skipc
  3407  0226  2A14               	goto	l2153
  3408  0227                     l2159:	
  3409                           
  3410                           ;ax25.c: 111: }
  3411                           ;ax25.c: 114: for (i = 0; i < 3; i++)
  3412  0227  0020               	movlb	0	; select bank0
  3413  0228  01B4               	clrf	Ax25_Send_Header@i
  3414  0229  01B5               	clrf	Ax25_Send_Header@i+1
  3415  022A  0835               	movf	Ax25_Send_Header@i+1,w
  3416  022B  3A80               	xorlw	128
  3417  022C  00AE               	movwf	??_Ax25_Send_Header
  3418  022D  3080               	movlw	128
  3419  022E  022E               	subwf	??_Ax25_Send_Header,w
  3420  022F  1D03               	skipz
  3421  0230  2A33               	goto	u1885
  3422  0231  3003               	movlw	3
  3423  0232  0234               	subwf	Ax25_Send_Header@i,w
  3424  0233                     u1885:	
  3425  0233  1803               	btfsc	3,0
  3426  0234  2A48               	goto	l2171
  3427  0235                     l2165:	
  3428                           
  3429                           ;ax25.c: 115: {
  3430                           ;ax25.c: 116: Ax25_Send_Flag();
  3431  0235  3187  2774  3181   	fcall	_Ax25_Send_Flag
  3432  0238  3001               	movlw	1
  3433  0239  0020               	movlb	0	; select bank0
  3434  023A  07B4               	addwf	Ax25_Send_Header@i,f
  3435  023B  3000               	movlw	0
  3436  023C  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3437  023D  0835               	movf	Ax25_Send_Header@i+1,w
  3438  023E  3A80               	xorlw	128
  3439  023F  00AE               	movwf	??_Ax25_Send_Header
  3440  0240  3080               	movlw	128
  3441  0241  022E               	subwf	??_Ax25_Send_Header,w
  3442  0242  1D03               	skipz
  3443  0243  2A46               	goto	u1895
  3444  0244  3003               	movlw	3
  3445  0245  0234               	subwf	Ax25_Send_Header@i,w
  3446  0246                     u1895:	
  3447  0246  1C03               	skipc
  3448  0247  2A35               	goto	l2165
  3449  0248                     l2171:	
  3450                           
  3451                           ;ax25.c: 117: }
  3452                           ;ax25.c: 119: for (i = 0; i < num_addresses; i++) {
  3453  0248  0020               	movlb	0	; select bank0
  3454  0249  01B4               	clrf	Ax25_Send_Header@i
  3455  024A  01B5               	clrf	Ax25_Send_Header@i+1
  3456  024B                     l2193:	
  3457  024B  0835               	movf	Ax25_Send_Header@i+1,w
  3458  024C  3A80               	xorlw	128
  3459  024D  00AE               	movwf	??_Ax25_Send_Header
  3460  024E  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  3461  024F  3A80               	xorlw	128
  3462  0250  022E               	subwf	??_Ax25_Send_Header,w
  3463  0251  1D03               	skipz
  3464  0252  2A55               	goto	u1965
  3465  0253  082C               	movf	Ax25_Send_Header@num_addresses,w
  3466  0254  0234               	subwf	Ax25_Send_Header@i,w
  3467  0255                     u1965:	
  3468  0255  1803               	btfsc	3,0
  3469  0256  2AC5               	goto	l2195
  3470                           
  3471                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  3472  0257  0020               	movlb	0	; select bank0
  3473  0258  01B1               	clrf	Ax25_Send_Header@j
  3474  0259  01B2               	clrf	Ax25_Send_Header@j+1
  3475  025A  0832               	movf	Ax25_Send_Header@j+1,w
  3476  025B  3A80               	xorlw	128
  3477  025C  00AE               	movwf	??_Ax25_Send_Header
  3478  025D  3080               	movlw	128
  3479  025E  022E               	subwf	??_Ax25_Send_Header,w
  3480  025F  1D03               	skipz
  3481  0260  2A63               	goto	u1905
  3482  0261  3006               	movlw	6
  3483  0262  0231               	subwf	Ax25_Send_Header@j,w
  3484  0263                     u1905:	
  3485  0263  1803               	btfsc	3,0
  3486  0264  2A8A               	goto	l2185
  3487  0265                     l2179:	
  3488                           
  3489                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  3490  0265  0020               	movlb	0	; select bank0
  3491  0266  0834               	movf	Ax25_Send_Header@i,w
  3492  0267  00AE               	movwf	??_Ax25_Send_Header
  3493  0268  3002               	movlw	2
  3494  0269                     u1915:	
  3495  0269  35AE               	lslf	??_Ax25_Send_Header,f
  3496  026A  3EFF               	addlw	-1
  3497  026B  1D03               	skipz
  3498  026C  2A69               	goto	u1915
  3499  026D  352E               	lslf	??_Ax25_Send_Header,w
  3500  026E  0733               	addwf	Ax25_Send_Header@addresses,w
  3501  026F  00AF               	movwf	??_Ax25_Send_Header+1
  3502  0270  0831               	movf	Ax25_Send_Header@j,w
  3503  0271  072F               	addwf	??_Ax25_Send_Header+1,w
  3504  0272  00B0               	movwf	??_Ax25_Send_Header+2
  3505  0273  0830               	movf	??_Ax25_Send_Header+2,w
  3506  0274  0086               	movwf	6
  3507  0275  0187               	clrf	7
  3508  0276  3501               	lslf	1,w
  3509  0277  3186  2630  3181   	fcall	_Send_Byte
  3510  027A  3001               	movlw	1
  3511  027B  0020               	movlb	0	; select bank0
  3512  027C  07B1               	addwf	Ax25_Send_Header@j,f
  3513  027D  3000               	movlw	0
  3514  027E  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  3515  027F  0832               	movf	Ax25_Send_Header@j+1,w
  3516  0280  3A80               	xorlw	128
  3517  0281  00AE               	movwf	??_Ax25_Send_Header
  3518  0282  3080               	movlw	128
  3519  0283  022E               	subwf	??_Ax25_Send_Header,w
  3520  0284  1D03               	skipz
  3521  0285  2A88               	goto	u1925
  3522  0286  3006               	movlw	6
  3523  0287  0231               	subwf	Ax25_Send_Header@j,w
  3524  0288                     u1925:	
  3525  0288  1C03               	skipc
  3526  0289  2A65               	goto	l2179
  3527  028A                     l2185:	
  3528                           
  3529                           ;ax25.c: 125: if (i == num_addresses - 1){
  3530  028A  0020               	movlb	0	; select bank0
  3531  028B  082C               	movf	Ax25_Send_Header@num_addresses,w
  3532  028C  3EFF               	addlw	255
  3533  028D  00AE               	movwf	??_Ax25_Send_Header
  3534  028E  30FF               	movlw	255
  3535  028F  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  3536  0290  00AF               	movwf	??_Ax25_Send_Header+1
  3537  0291  0835               	movf	Ax25_Send_Header@i+1,w
  3538  0292  062F               	xorwf	??_Ax25_Send_Header+1,w
  3539  0293  1D03               	skipz
  3540  0294  2A97               	goto	u1935
  3541  0295  0834               	movf	Ax25_Send_Header@i,w
  3542  0296  062E               	xorwf	??_Ax25_Send_Header,w
  3543  0297                     u1935:	
  3544  0297  1D03               	skipz
  3545  0298  2AAB               	goto	l2189
  3546                           
  3547                           ;ax25.c: 126: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  3548  0299  0834               	movf	Ax25_Send_Header@i,w
  3549  029A  00AE               	movwf	??_Ax25_Send_Header
  3550  029B  3002               	movlw	2
  3551  029C                     u1945:	
  3552  029C  35AE               	lslf	??_Ax25_Send_Header,f
  3553  029D  3EFF               	addlw	-1
  3554  029E  1D03               	skipz
  3555  029F  2A9C               	goto	u1945
  3556  02A0  352E               	lslf	??_Ax25_Send_Header,w
  3557  02A1  0733               	addwf	Ax25_Send_Header@addresses,w
  3558  02A2  00AF               	movwf	??_Ax25_Send_Header+1
  3559  02A3  082F               	movf	??_Ax25_Send_Header+1,w
  3560  02A4  3E07               	addlw	7
  3561  02A5  0086               	movwf	6
  3562  02A6  0187               	clrf	7
  3563  02A7  3501               	lslf	1,w
  3564  02A8  3E60               	addlw	96
  3565  02A9  3801               	iorlw	1
  3566  02AA  2ABC               	goto	L1
  3567  02AB                     l2189:	
  3568                           ;ax25.c: 128: }
  3569                           
  3570                           
  3571                           ;ax25.c: 129: else
  3572                           ;ax25.c: 130: Send_Byte(('0' + addresses[i].ssid) << 1);
  3573  02AB  0020               	movlb	0	; select bank0
  3574  02AC  0834               	movf	Ax25_Send_Header@i,w
  3575  02AD  00AE               	movwf	??_Ax25_Send_Header
  3576  02AE  3002               	movlw	2
  3577  02AF                     u1955:	
  3578  02AF  35AE               	lslf	??_Ax25_Send_Header,f
  3579  02B0  3EFF               	addlw	-1
  3580  02B1  1D03               	skipz
  3581  02B2  2AAF               	goto	u1955
  3582  02B3  352E               	lslf	??_Ax25_Send_Header,w
  3583  02B4  0733               	addwf	Ax25_Send_Header@addresses,w
  3584  02B5  00AF               	movwf	??_Ax25_Send_Header+1
  3585  02B6  082F               	movf	??_Ax25_Send_Header+1,w
  3586  02B7  3E07               	addlw	7
  3587  02B8  0086               	movwf	6
  3588  02B9  0187               	clrf	7
  3589  02BA  3501               	lslf	1,w
  3590  02BB  3E60               	addlw	96
  3591  02BC                     L1:	
  3592  02BC  3186  2630  3181   	fcall	_Send_Byte
  3593  02BF  3001               	movlw	1
  3594  02C0  0020               	movlb	0	; select bank0
  3595  02C1  07B4               	addwf	Ax25_Send_Header@i,f
  3596  02C2  3000               	movlw	0
  3597  02C3  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3598  02C4  2A4B               	goto	l2193
  3599  02C5                     l2195:	
  3600                           
  3601                           ;ax25.c: 131: }
  3602                           ;ax25.c: 134: Send_Byte(0x03);
  3603  02C5  3003               	movlw	3
  3604  02C6  3186  2630  3181   	fcall	_Send_Byte
  3605                           
  3606                           ;ax25.c: 137: Send_Byte(0xf0);
  3607  02C9  30F0               	movlw	240
  3608  02CA  3186  2630         	fcall	_Send_Byte
  3609  02CC  0008               	return
  3610  02CD                     __end_of_Ax25_Send_Header:	
  3611                           
  3612                           	psect	text20
  3613  0F87                     __ptext20:	
  3614 ;; *************** function _Ax25_Send_Sync *****************
  3615 ;; Defined at:
  3616 ;;		line 63 in file "ax25.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;		None
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  i               2    7[BANK0 ] int 
  3621 ;;  byte            1    6[BANK0 ] unsigned char 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;		None               void
  3624 ;; Registers used:
  3625 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;Total ram usage:        9 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    3
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_Ax25_Send_Header
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           
  3646                           ;psect for function _Ax25_Send_Sync
  3647  0F87                     _Ax25_Send_Sync:	
  3648                           
  3649                           ;ax25.c: 65: uint8_t byte = 0x00;
  3650                           
  3651                           ;incstack = 0
  3652                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  3653  0F87  0020               	movlb	0	; select bank0
  3654  0F88  01A6               	clrf	Ax25_Send_Sync@byte
  3655                           
  3656                           ;ax25.c: 66: int i;
  3657                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  3658  0F89  01A7               	clrf	Ax25_Send_Sync@i
  3659  0F8A  01A8               	clrf	Ax25_Send_Sync@i+1
  3660  0F8B                     L2:	
  3661  0F8B  0828               	movf	Ax25_Send_Sync@i+1,w
  3662  0F8C  3A80               	xorlw	128
  3663  0F8D  00A0               	movwf	??_Ax25_Send_Sync
  3664  0F8E  3080               	movlw	128
  3665  0F8F  0220               	subwf	??_Ax25_Send_Sync,w
  3666  0F90  3008               	movlw	8
  3667  0F91  1903               	btfsc	3,2
  3668  0F92  0227               	subwf	Ax25_Send_Sync@i,w
  3669  0F93  1803               	btfsc	3,0
  3670  0F94  0008               	return
  3671                           
  3672                           ;ax25.c: 68: if (modem_packet_size >= 64 * 8)
  3673  0F95  3000               	movlw	0
  3674  0F96  027C               	subwf	_modem_packet_size+3,w
  3675  0F97  1D03               	skipz
  3676  0F98  2FA3               	goto	u1605
  3677  0F99  3000               	movlw	0
  3678  0F9A  027B               	subwf	_modem_packet_size+2,w
  3679  0F9B  1D03               	skipz
  3680  0F9C  2FA3               	goto	u1605
  3681  0F9D  3002               	movlw	2
  3682  0F9E  027A               	subwf	_modem_packet_size+1,w
  3683  0F9F  1D03               	skipz
  3684  0FA0  2FA3               	goto	u1605
  3685  0FA1  3000               	movlw	0
  3686  0FA2  0279               	subwf	_modem_packet_size,w
  3687  0FA3                     u1605:	
  3688  0FA3  1803               	btfsc	3,0
  3689  0FA4  0008               	return
  3690                           
  3691                           ;ax25.c: 70: if ((byte >> i) & 1)
  3692                           
  3693                           ;ax25.c: 69: return;
  3694  0FA5  0020               	movlb	0	; select bank0
  3695  0FA6  0826               	movf	Ax25_Send_Sync@byte,w
  3696  0FA7  00A0               	movwf	??_Ax25_Send_Sync
  3697  0FA8  0A27               	incf	Ax25_Send_Sync@i,w
  3698  0FA9  2FAB               	goto	u1614
  3699  0FAA                     u1615:	
  3700  0FAA  36A0               	lsrf	??_Ax25_Send_Sync,f
  3701  0FAB                     u1614:	
  3702  0FAB  0B89               	decfsz	9,f
  3703  0FAC  2FAA               	goto	u1615
  3704  0FAD  1C20               	btfss	??_Ax25_Send_Sync,0
  3705  0FAE  2FD1               	goto	l1971
  3706                           
  3707                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  3708  0FAF  3001               	movlw	1
  3709  0FB0  00A0               	movwf	??_Ax25_Send_Sync
  3710  0FB1  0879               	movf	_modem_packet_size,w
  3711  0FB2  3907               	andlw	7
  3712  0FB3  0A89               	incf	9,f
  3713  0FB4  2FB6               	goto	u1634
  3714  0FB5                     u1635:	
  3715  0FB5  35A0               	lslf	??_Ax25_Send_Sync,f
  3716  0FB6                     u1634:	
  3717  0FB6  0B89               	decfsz	9,f
  3718  0FB7  2FB5               	goto	u1635
  3719  0FB8  0820               	movf	??_Ax25_Send_Sync,w
  3720  0FB9  00A1               	movwf	??_Ax25_Send_Sync+1
  3721  0FBA  0879               	movf	_modem_packet_size,w
  3722  0FBB  00A2               	movwf	??_Ax25_Send_Sync+2
  3723  0FBC  087A               	movf	_modem_packet_size+1,w
  3724  0FBD  00A3               	movwf	??_Ax25_Send_Sync+3
  3725  0FBE  087B               	movf	_modem_packet_size+2,w
  3726  0FBF  00A4               	movwf	??_Ax25_Send_Sync+4
  3727  0FC0  087C               	movf	_modem_packet_size+3,w
  3728  0FC1  00A5               	movwf	??_Ax25_Send_Sync+5
  3729  0FC2  3003               	movlw	3
  3730  0FC3                     u1645:	
  3731  0FC3  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  3732  0FC4  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  3733  0FC5  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  3734  0FC6  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  3735  0FC7  0B89               	decfsz	9,f
  3736  0FC8  2FC3               	goto	u1645
  3737  0FC9  0822               	movf	??_Ax25_Send_Sync+2,w
  3738  0FCA  3EA0               	addlw	_modem_packet& (0+255)
  3739  0FCB  0086               	movwf	6
  3740  0FCC  3001               	movlw	1	; select bank3/4
  3741  0FCD  0087               	movwf	7
  3742  0FCE  0821               	movf	??_Ax25_Send_Sync+1,w
  3743  0FCF  0481               	iorwf	1,f
  3744  0FD0  2FF3               	goto	l1973
  3745  0FD1                     l1971:	
  3746                           
  3747                           ;ax25.c: 72: else
  3748                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  3749  0FD1  3001               	movlw	1
  3750  0FD2  00A0               	movwf	??_Ax25_Send_Sync
  3751  0FD3  0879               	movf	_modem_packet_size,w
  3752  0FD4  3907               	andlw	7
  3753  0FD5  0A89               	incf	9,f
  3754  0FD6  2FD8               	goto	u1654
  3755  0FD7                     u1655:	
  3756  0FD7  35A0               	lslf	??_Ax25_Send_Sync,f
  3757  0FD8                     u1654:	
  3758  0FD8  0B89               	decfsz	9,f
  3759  0FD9  2FD7               	goto	u1655
  3760  0FDA  0820               	movf	??_Ax25_Send_Sync,w
  3761  0FDB  3AFF               	xorlw	255
  3762  0FDC  00A1               	movwf	??_Ax25_Send_Sync+1
  3763  0FDD  0879               	movf	_modem_packet_size,w
  3764  0FDE  00A2               	movwf	??_Ax25_Send_Sync+2
  3765  0FDF  087A               	movf	_modem_packet_size+1,w
  3766  0FE0  00A3               	movwf	??_Ax25_Send_Sync+3
  3767  0FE1  087B               	movf	_modem_packet_size+2,w
  3768  0FE2  00A4               	movwf	??_Ax25_Send_Sync+4
  3769  0FE3  087C               	movf	_modem_packet_size+3,w
  3770  0FE4  00A5               	movwf	??_Ax25_Send_Sync+5
  3771  0FE5  3003               	movlw	3
  3772  0FE6                     u1665:	
  3773  0FE6  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  3774  0FE7  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  3775  0FE8  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  3776  0FE9  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  3777  0FEA  0B89               	decfsz	9,f
  3778  0FEB  2FE6               	goto	u1665
  3779  0FEC  0822               	movf	??_Ax25_Send_Sync+2,w
  3780  0FED  3EA0               	addlw	_modem_packet& (0+255)
  3781  0FEE  0086               	movwf	6
  3782  0FEF  3001               	movlw	1	; select bank3/4
  3783  0FF0  0087               	movwf	7
  3784  0FF1  0821               	movf	??_Ax25_Send_Sync+1,w
  3785  0FF2  0581               	andwf	1,f
  3786  0FF3                     l1973:	
  3787  0FF3  3001               	movlw	1
  3788  0FF4  07A7               	addwf	Ax25_Send_Sync@i,f
  3789  0FF5  3000               	movlw	0
  3790  0FF6  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  3791  0FF7  3001               	movlw	1
  3792  0FF8  07F9               	addwf	_modem_packet_size,f
  3793  0FF9  3000               	movlw	0
  3794  0FFA  3DFA               	addwfc	_modem_packet_size+1,f
  3795  0FFB  3000               	movlw	0
  3796  0FFC  3DFB               	addwfc	_modem_packet_size+2,f
  3797  0FFD  3000               	movlw	0
  3798  0FFE  3DFC               	addwfc	_modem_packet_size+3,f
  3799  0FFF  2F8B               	goto	L2
  3800  1000                     __end_of_Ax25_Send_Sync:	
  3801                           
  3802                           	psect	text21
  3803  0CCF                     __ptext21:	
  3804 ;; *************** function _Ax25_Send_Footer *****************
  3805 ;; Defined at:
  3806 ;;		line 141 in file "ax25.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  final_crc       2   12[BANK0 ] unsigned int 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;		None               void
  3813 ;; Registers used:
  3814 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;Total ram usage:        2 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    5
  3827 ;; This function calls:
  3828 ;;		_Ax25_Send_Flag
  3829 ;;		_Send_Byte
  3830 ;; This function is called by:
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function _Ax25_Send_Footer
  3837  0CCF                     _Ax25_Send_Footer:	
  3838                           
  3839                           ;ax25.c: 144: uint16_t final_crc = crc;
  3840                           
  3841                           ;incstack = 0
  3842                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3843  0CCF  0021               	movlb	1	; select bank1
  3844  0CD0  0848               	movf	(_crc+1)^(0+128),w
  3845  0CD1  0020               	movlb	0	; select bank0
  3846  0CD2  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  3847  0CD3  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  3848  0CD4  0021               	movlb	1	; select bank1
  3849  0CD5  0847               	movf	_crc^(0+128),w
  3850  0CD6  0020               	movlb	0	; select bank0
  3851  0CD7  01AC               	clrf	Ax25_Send_Footer@final_crc
  3852  0CD8  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  3853                           
  3854                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  3855  0CD9  092C               	comf	Ax25_Send_Footer@final_crc,w
  3856  0CDA  3186  2630  318C   	fcall	_Send_Byte
  3857                           
  3858                           ;ax25.c: 148: final_crc >>= 8;
  3859  0CDD  3008               	movlw	8
  3860  0CDE  0020               	movlb	0	; select bank0
  3861  0CDF                     u1985:	
  3862  0CDF  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  3863  0CE0  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  3864  0CE1  0B89               	decfsz	9,f
  3865  0CE2  2CDF               	goto	u1985
  3866                           
  3867                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  3868  0CE3  092C               	comf	Ax25_Send_Footer@final_crc,w
  3869  0CE4  3186  2630  318C   	fcall	_Send_Byte
  3870                           
  3871                           ;ax25.c: 152: Ax25_Send_Flag();
  3872  0CE7  3187  2774         	fcall	_Ax25_Send_Flag
  3873  0CE9  0008               	return
  3874  0CEA                     __end_of_Ax25_Send_Footer:	
  3875                           
  3876                           	psect	text22
  3877  0630                     __ptext22:	
  3878 ;; *************** function _Send_Byte *****************
  3879 ;; Defined at:
  3880 ;;		line 32 in file "ax25.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;  byte            1    wreg     unsigned char 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  byte            1    9[BANK0 ] unsigned char 
  3885 ;;  i               2   10[BANK0 ] int 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;		None               void
  3888 ;; Registers used:
  3889 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3897 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3898 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3899 ;;Total ram usage:        9 bytes
  3900 ;; Hardware stack levels used:    1
  3901 ;; Hardware stack levels required when called:    4
  3902 ;; This function calls:
  3903 ;;		_Update_Crc
  3904 ;; This function is called by:
  3905 ;;		_Ax25_Send_Byte
  3906 ;;		_Ax25_Send_Header
  3907 ;;		_Ax25_Send_Footer
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function _Send_Byte
  3913  0630                     _Send_Byte:	
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3917                           ;Send_Byte@byte stored from wreg
  3918  0630  0020               	movlb	0	; select bank0
  3919  0631  00A9               	movwf	Send_Byte@byte
  3920                           
  3921                           ;ax25.c: 34: int i;
  3922                           ;ax25.c: 35: for (i = 0; i < 8; i++) {
  3923  0632  01AA               	clrf	Send_Byte@i
  3924  0633  01AB               	clrf	Send_Byte@i+1
  3925  0634                     L3:	
  3926  0634  082B               	movf	Send_Byte@i+1,w
  3927  0635  3A80               	xorlw	128
  3928  0636  00A3               	movwf	??_Send_Byte
  3929  0637  3080               	movlw	128
  3930  0638  0223               	subwf	??_Send_Byte,w
  3931  0639  3008               	movlw	8
  3932  063A  1903               	btfsc	3,2
  3933  063B  022A               	subwf	Send_Byte@i,w
  3934  063C  1803               	btfsc	3,0
  3935  063D  0008               	return
  3936                           
  3937                           ;ax25.c: 36: Update_Crc((byte >> i) & 1);
  3938  063E  0020               	movlb	0	; select bank0
  3939  063F  0829               	movf	Send_Byte@byte,w
  3940  0640  00A3               	movwf	??_Send_Byte
  3941  0641  0A2A               	incf	Send_Byte@i,w
  3942  0642  2E44               	goto	u1474
  3943  0643                     u1475:	
  3944  0643  36A3               	lsrf	??_Send_Byte,f
  3945  0644                     u1474:	
  3946  0644  0B89               	decfsz	9,f
  3947  0645  2E43               	goto	u1475
  3948  0646  0823               	movf	??_Send_Byte,w
  3949  0647  3901               	andlw	1
  3950  0648  318D  25C5  3186   	fcall	_Update_Crc
  3951                           
  3952                           ;ax25.c: 37: if ((byte >> i) & 1) {
  3953  064B  0020               	movlb	0	; select bank0
  3954  064C  0829               	movf	Send_Byte@byte,w
  3955  064D  00A3               	movwf	??_Send_Byte
  3956  064E  0A2A               	incf	Send_Byte@i,w
  3957  064F  2E51               	goto	u1484
  3958  0650                     u1485:	
  3959  0650  36A3               	lsrf	??_Send_Byte,f
  3960  0651                     u1484:	
  3961  0651  0B89               	decfsz	9,f
  3962  0652  2E50               	goto	u1485
  3963  0653  1C23               	btfss	??_Send_Byte,0
  3964  0654  2EA0               	goto	l1891
  3965                           
  3966                           ;ax25.c: 39: if (modem_packet_size >= (64 * 8))
  3967  0655  3000               	movlw	0
  3968  0656  027C               	subwf	_modem_packet_size+3,w
  3969  0657  1D03               	skipz
  3970  0658  2E63               	goto	u1505
  3971  0659  3000               	movlw	0
  3972  065A  027B               	subwf	_modem_packet_size+2,w
  3973  065B  1D03               	skipz
  3974  065C  2E63               	goto	u1505
  3975  065D  3002               	movlw	2
  3976  065E  027A               	subwf	_modem_packet_size+1,w
  3977  065F  1D03               	skipz
  3978  0660  2E63               	goto	u1505
  3979  0661  3000               	movlw	0
  3980  0662  0279               	subwf	_modem_packet_size,w
  3981  0663                     u1505:	
  3982  0663  1803               	btfsc	3,0
  3983  0664  0008               	return
  3984                           
  3985                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  3986                           
  3987                           ;ax25.c: 40: return;
  3988  0665  3001               	movlw	1
  3989  0666  00A3               	movwf	??_Send_Byte
  3990  0667  0879               	movf	_modem_packet_size,w
  3991  0668  3907               	andlw	7
  3992  0669  0A89               	incf	9,f
  3993  066A  2E6C               	goto	u1514
  3994  066B                     u1515:	
  3995  066B  35A3               	lslf	??_Send_Byte,f
  3996  066C                     u1514:	
  3997  066C  0B89               	decfsz	9,f
  3998  066D  2E6B               	goto	u1515
  3999  066E  0823               	movf	??_Send_Byte,w
  4000  066F  00A4               	movwf	??_Send_Byte+1
  4001  0670  0879               	movf	_modem_packet_size,w
  4002  0671  00A5               	movwf	??_Send_Byte+2
  4003  0672  087A               	movf	_modem_packet_size+1,w
  4004  0673  00A6               	movwf	??_Send_Byte+3
  4005  0674  087B               	movf	_modem_packet_size+2,w
  4006  0675  00A7               	movwf	??_Send_Byte+4
  4007  0676  087C               	movf	_modem_packet_size+3,w
  4008  0677  00A8               	movwf	??_Send_Byte+5
  4009  0678  3003               	movlw	3
  4010  0679                     u1525:	
  4011  0679  36A8               	lsrf	??_Send_Byte+5,f
  4012  067A  0CA7               	rrf	??_Send_Byte+4,f
  4013  067B  0CA6               	rrf	??_Send_Byte+3,f
  4014  067C  0CA5               	rrf	??_Send_Byte+2,f
  4015  067D  0B89               	decfsz	9,f
  4016  067E  2E79               	goto	u1525
  4017  067F  0825               	movf	??_Send_Byte+2,w
  4018  0680  3EA0               	addlw	_modem_packet& (0+255)
  4019  0681  0086               	movwf	6
  4020  0682  3001               	movlw	1	; select bank3/4
  4021  0683  0087               	movwf	7
  4022  0684  0824               	movf	??_Send_Byte+1,w
  4023  0685  0481               	iorwf	1,f
  4024                           
  4025                           ;ax25.c: 44: modem_packet_size++;
  4026  0686  3001               	movlw	1
  4027  0687  07F9               	addwf	_modem_packet_size,f
  4028  0688  3000               	movlw	0
  4029  0689  3DFA               	addwfc	_modem_packet_size+1,f
  4030  068A  3000               	movlw	0
  4031  068B  3DFB               	addwfc	_modem_packet_size+2,f
  4032  068C  3000               	movlw	0
  4033  068D  3DFC               	addwfc	_modem_packet_size+3,f
  4034                           
  4035                           ;ax25.c: 45: if (++ones_in_a_row < 5) continue;
  4036  068E  3001               	movlw	1
  4037  068F  0021               	movlb	1	; select bank1
  4038  0690  07C9               	addwf	_ones_in_a_row^(0+128),f
  4039  0691  3000               	movlw	0
  4040  0692  3DCA               	addwfc	(_ones_in_a_row+1)^(0+128),f
  4041  0693  084A               	movf	(_ones_in_a_row+1)^(0+128),w
  4042  0694  3A80               	xorlw	128
  4043  0695  0020               	movlb	0	; select bank0
  4044  0696  00A3               	movwf	??_Send_Byte
  4045  0697  3080               	movlw	128
  4046  0698  0223               	subwf	??_Send_Byte,w
  4047  0699  1D03               	skipz
  4048  069A  2E9E               	goto	u1535
  4049  069B  3005               	movlw	5
  4050  069C  0021               	movlb	1	; select bank1
  4051  069D  0249               	subwf	_ones_in_a_row^(0+128),w
  4052  069E                     u1535:	
  4053  069E  1C03               	btfss	3,0
  4054  069F  2EDE               	goto	l1901
  4055  06A0                     l1891:	
  4056                           
  4057                           ;ax25.c: 46: }
  4058                           ;ax25.c: 48: if (modem_packet_size >= (64 * 8))
  4059  06A0  3000               	movlw	0
  4060  06A1  027C               	subwf	_modem_packet_size+3,w
  4061  06A2  1D03               	skipz
  4062  06A3  2EAE               	goto	u1545
  4063  06A4  3000               	movlw	0
  4064  06A5  027B               	subwf	_modem_packet_size+2,w
  4065  06A6  1D03               	skipz
  4066  06A7  2EAE               	goto	u1545
  4067  06A8  3002               	movlw	2
  4068  06A9  027A               	subwf	_modem_packet_size+1,w
  4069  06AA  1D03               	skipz
  4070  06AB  2EAE               	goto	u1545
  4071  06AC  3000               	movlw	0
  4072  06AD  0279               	subwf	_modem_packet_size,w
  4073  06AE                     u1545:	
  4074  06AE  1803               	btfsc	3,0
  4075  06AF  0008               	return
  4076                           
  4077                           ;ax25.c: 50: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4078                           
  4079                           ;ax25.c: 49: return;
  4080  06B0  3001               	movlw	1
  4081  06B1  0020               	movlb	0	; select bank0
  4082  06B2  00A3               	movwf	??_Send_Byte
  4083  06B3  0879               	movf	_modem_packet_size,w
  4084  06B4  3907               	andlw	7
  4085  06B5  0A89               	incf	9,f
  4086  06B6  2EB8               	goto	u1554
  4087  06B7                     u1555:	
  4088  06B7  35A3               	lslf	??_Send_Byte,f
  4089  06B8                     u1554:	
  4090  06B8  0B89               	decfsz	9,f
  4091  06B9  2EB7               	goto	u1555
  4092  06BA  0823               	movf	??_Send_Byte,w
  4093  06BB  3AFF               	xorlw	255
  4094  06BC  00A4               	movwf	??_Send_Byte+1
  4095  06BD  0879               	movf	_modem_packet_size,w
  4096  06BE  00A5               	movwf	??_Send_Byte+2
  4097  06BF  087A               	movf	_modem_packet_size+1,w
  4098  06C0  00A6               	movwf	??_Send_Byte+3
  4099  06C1  087B               	movf	_modem_packet_size+2,w
  4100  06C2  00A7               	movwf	??_Send_Byte+4
  4101  06C3  087C               	movf	_modem_packet_size+3,w
  4102  06C4  00A8               	movwf	??_Send_Byte+5
  4103  06C5  3003               	movlw	3
  4104  06C6                     u1565:	
  4105  06C6  36A8               	lsrf	??_Send_Byte+5,f
  4106  06C7  0CA7               	rrf	??_Send_Byte+4,f
  4107  06C8  0CA6               	rrf	??_Send_Byte+3,f
  4108  06C9  0CA5               	rrf	??_Send_Byte+2,f
  4109  06CA  0B89               	decfsz	9,f
  4110  06CB  2EC6               	goto	u1565
  4111  06CC  0825               	movf	??_Send_Byte+2,w
  4112  06CD  3EA0               	addlw	_modem_packet& (0+255)
  4113  06CE  0086               	movwf	6
  4114  06CF  3001               	movlw	1	; select bank3/4
  4115  06D0  0087               	movwf	7
  4116  06D1  0824               	movf	??_Send_Byte+1,w
  4117  06D2  0581               	andwf	1,f
  4118                           
  4119                           ;ax25.c: 52: modem_packet_size++;
  4120  06D3  3001               	movlw	1
  4121  06D4  07F9               	addwf	_modem_packet_size,f
  4122  06D5  3000               	movlw	0
  4123  06D6  3DFA               	addwfc	_modem_packet_size+1,f
  4124  06D7  3000               	movlw	0
  4125  06D8  3DFB               	addwfc	_modem_packet_size+2,f
  4126  06D9  3000               	movlw	0
  4127  06DA  3DFC               	addwfc	_modem_packet_size+3,f
  4128                           
  4129                           ;ax25.c: 53: ones_in_a_row = 0;
  4130  06DB  0021               	movlb	1	; select bank1
  4131  06DC  01C9               	clrf	_ones_in_a_row^(0+128)
  4132  06DD  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  4133  06DE                     l1901:	
  4134  06DE  3001               	movlw	1
  4135  06DF  0020               	movlb	0	; select bank0
  4136  06E0  07AA               	addwf	Send_Byte@i,f
  4137  06E1  3000               	movlw	0
  4138  06E2  3DAB               	addwfc	Send_Byte@i+1,f
  4139  06E3  2E34               	goto	L3
  4140  06E4                     __end_of_Send_Byte:	
  4141                           
  4142                           	psect	text23
  4143  0DC5                     __ptext23:	
  4144 ;; *************** function _Update_Crc *****************
  4145 ;; Defined at:
  4146 ;;		line 23 in file "ax25.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  input_bit       1    wreg     unsigned char 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  input_bit       1    2[BANK0 ] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;		None               void
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4164 ;;Total ram usage:        3 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    3
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_Send_Byte
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           
  4175                           ;psect for function _Update_Crc
  4176  0DC5                     _Update_Crc:	
  4177                           
  4178                           ;incstack = 0
  4179                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  4180                           ;Update_Crc@input_bit stored from wreg
  4181  0DC5  0020               	movlb	0	; select bank0
  4182  0DC6  00A2               	movwf	Update_Crc@input_bit
  4183                           
  4184                           ;ax25.c: 25: crc ^= input_bit;
  4185  0DC7  0822               	movf	Update_Crc@input_bit,w
  4186  0DC8  00A0               	movwf	??_Update_Crc
  4187  0DC9  01A1               	clrf	??_Update_Crc+1
  4188  0DCA  0820               	movf	??_Update_Crc,w
  4189  0DCB  0021               	movlb	1	; select bank1
  4190  0DCC  06C7               	xorwf	_crc^(0+128),f
  4191  0DCD  0020               	movlb	0	; select bank0
  4192  0DCE  0821               	movf	??_Update_Crc+1,w
  4193  0DCF  0021               	movlb	1	; select bank1
  4194  0DD0  06C8               	xorwf	(_crc+1)^(0+128),f
  4195                           
  4196                           ;ax25.c: 26: if (crc & 1)
  4197  0DD1  1C47               	btfss	_crc^(0+128),0
  4198  0DD2  2DE6               	goto	l1851
  4199                           
  4200                           ;ax25.c: 27: crc = (crc >> 1) ^ 0x8408;
  4201  0DD3  0848               	movf	(_crc+1)^(0+128),w
  4202  0DD4  0020               	movlb	0	; select bank0
  4203  0DD5  00A1               	movwf	??_Update_Crc+1
  4204  0DD6  0021               	movlb	1	; select bank1
  4205  0DD7  0847               	movf	_crc^(0+128),w
  4206  0DD8  0020               	movlb	0	; select bank0
  4207  0DD9  00A0               	movwf	??_Update_Crc
  4208  0DDA  36A1               	lsrf	??_Update_Crc+1,f
  4209  0DDB  0CA0               	rrf	??_Update_Crc,f
  4210  0DDC  3008               	movlw	8
  4211  0DDD  0620               	xorwf	??_Update_Crc,w
  4212  0DDE  0021               	movlb	1	; select bank1
  4213  0DDF  00C7               	movwf	_crc^(0+128)
  4214  0DE0  3084               	movlw	132
  4215  0DE1  0020               	movlb	0	; select bank0
  4216  0DE2  0621               	xorwf	??_Update_Crc+1,w
  4217  0DE3  0021               	movlb	1	; select bank1
  4218  0DE4  00C8               	movwf	(_crc+1)^(0+128)
  4219  0DE5  0008               	return
  4220  0DE6                     l1851:	
  4221                           
  4222                           ;ax25.c: 28: else
  4223                           ;ax25.c: 29: crc = crc >> 1;
  4224  0DE6  0848               	movf	(_crc+1)^(0+128),w
  4225  0DE7  0020               	movlb	0	; select bank0
  4226  0DE8  00A1               	movwf	??_Update_Crc+1
  4227  0DE9  0021               	movlb	1	; select bank1
  4228  0DEA  0847               	movf	_crc^(0+128),w
  4229  0DEB  0020               	movlb	0	; select bank0
  4230  0DEC  00A0               	movwf	??_Update_Crc
  4231  0DED  36A1               	lsrf	??_Update_Crc+1,f
  4232  0DEE  0CA0               	rrf	??_Update_Crc,f
  4233  0DEF  0820               	movf	??_Update_Crc,w
  4234  0DF0  0021               	movlb	1	; select bank1
  4235  0DF1  00C7               	movwf	_crc^(0+128)
  4236  0DF2  0020               	movlb	0	; select bank0
  4237  0DF3  0821               	movf	??_Update_Crc+1,w
  4238  0DF4  0021               	movlb	1	; select bank1
  4239  0DF5  00C8               	movwf	(_crc+1)^(0+128)
  4240  0DF6  0008               	return
  4241  0DF7                     __end_of_Update_Crc:	
  4242                           
  4243                           	psect	text24
  4244  0774                     __ptext24:	
  4245 ;; *************** function _Ax25_Send_Flag *****************
  4246 ;; Defined at:
  4247 ;;		line 77 in file "ax25.c"
  4248 ;; Parameters:    Size  Location     Type
  4249 ;;		None
  4250 ;; Auto vars:     Size  Location     Type
  4251 ;;  i               2    7[BANK0 ] int 
  4252 ;;  byte            1    6[BANK0 ] unsigned char 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;		None               void
  4255 ;; Registers used:
  4256 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4263 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4264 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4265 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4266 ;;Total ram usage:        9 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    3
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_Ax25_Send_Header
  4273 ;;		_Ax25_Send_Footer
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           
  4278                           ;psect for function _Ax25_Send_Flag
  4279  0774                     _Ax25_Send_Flag:	
  4280                           
  4281                           ;ax25.c: 79: uint8_t byte = 0x7e;
  4282                           
  4283                           ;incstack = 0
  4284                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  4285  0774  307E               	movlw	126
  4286  0775  0020               	movlb	0	; select bank0
  4287  0776  00A0               	movwf	??_Ax25_Send_Flag
  4288  0777  0820               	movf	??_Ax25_Send_Flag,w
  4289  0778  00A6               	movwf	Ax25_Send_Flag@byte
  4290                           
  4291                           ;ax25.c: 80: int i;
  4292                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  4293  0779  01A7               	clrf	Ax25_Send_Flag@i
  4294  077A  01A8               	clrf	Ax25_Send_Flag@i+1
  4295  077B                     L4:	
  4296  077B  0828               	movf	Ax25_Send_Flag@i+1,w
  4297  077C  3A80               	xorlw	128
  4298  077D  00A0               	movwf	??_Ax25_Send_Flag
  4299  077E  3080               	movlw	128
  4300  077F  0220               	subwf	??_Ax25_Send_Flag,w
  4301  0780  3008               	movlw	8
  4302  0781  1903               	btfsc	3,2
  4303  0782  0227               	subwf	Ax25_Send_Flag@i,w
  4304  0783  1803               	btfsc	3,0
  4305  0784  0008               	return
  4306                           
  4307                           ;ax25.c: 82: if (modem_packet_size >= 64 * 8)
  4308  0785  3000               	movlw	0
  4309  0786  027C               	subwf	_modem_packet_size+3,w
  4310  0787  1D03               	skipz
  4311  0788  2F93               	goto	u1695
  4312  0789  3000               	movlw	0
  4313  078A  027B               	subwf	_modem_packet_size+2,w
  4314  078B  1D03               	skipz
  4315  078C  2F93               	goto	u1695
  4316  078D  3002               	movlw	2
  4317  078E  027A               	subwf	_modem_packet_size+1,w
  4318  078F  1D03               	skipz
  4319  0790  2F93               	goto	u1695
  4320  0791  3000               	movlw	0
  4321  0792  0279               	subwf	_modem_packet_size,w
  4322  0793                     u1695:	
  4323  0793  1803               	btfsc	3,0
  4324  0794  0008               	return
  4325                           
  4326                           ;ax25.c: 84: if ((byte >> i) & 1)
  4327                           
  4328                           ;ax25.c: 83: return;
  4329  0795  0020               	movlb	0	; select bank0
  4330  0796  0826               	movf	Ax25_Send_Flag@byte,w
  4331  0797  00A0               	movwf	??_Ax25_Send_Flag
  4332  0798  0A27               	incf	Ax25_Send_Flag@i,w
  4333  0799  2F9B               	goto	u1704
  4334  079A                     u1705:	
  4335  079A  36A0               	lsrf	??_Ax25_Send_Flag,f
  4336  079B                     u1704:	
  4337  079B  0B89               	decfsz	9,f
  4338  079C  2F9A               	goto	u1705
  4339  079D  1C20               	btfss	??_Ax25_Send_Flag,0
  4340  079E  2FC1               	goto	l1995
  4341                           
  4342                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4343  079F  3001               	movlw	1
  4344  07A0  00A0               	movwf	??_Ax25_Send_Flag
  4345  07A1  0879               	movf	_modem_packet_size,w
  4346  07A2  3907               	andlw	7
  4347  07A3  0A89               	incf	9,f
  4348  07A4  2FA6               	goto	u1724
  4349  07A5                     u1725:	
  4350  07A5  35A0               	lslf	??_Ax25_Send_Flag,f
  4351  07A6                     u1724:	
  4352  07A6  0B89               	decfsz	9,f
  4353  07A7  2FA5               	goto	u1725
  4354  07A8  0820               	movf	??_Ax25_Send_Flag,w
  4355  07A9  00A1               	movwf	??_Ax25_Send_Flag+1
  4356  07AA  0879               	movf	_modem_packet_size,w
  4357  07AB  00A2               	movwf	??_Ax25_Send_Flag+2
  4358  07AC  087A               	movf	_modem_packet_size+1,w
  4359  07AD  00A3               	movwf	??_Ax25_Send_Flag+3
  4360  07AE  087B               	movf	_modem_packet_size+2,w
  4361  07AF  00A4               	movwf	??_Ax25_Send_Flag+4
  4362  07B0  087C               	movf	_modem_packet_size+3,w
  4363  07B1  00A5               	movwf	??_Ax25_Send_Flag+5
  4364  07B2  3003               	movlw	3
  4365  07B3                     u1735:	
  4366  07B3  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4367  07B4  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4368  07B5  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4369  07B6  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4370  07B7  0B89               	decfsz	9,f
  4371  07B8  2FB3               	goto	u1735
  4372  07B9  0822               	movf	??_Ax25_Send_Flag+2,w
  4373  07BA  3EA0               	addlw	_modem_packet& (0+255)
  4374  07BB  0086               	movwf	6
  4375  07BC  3001               	movlw	1	; select bank3/4
  4376  07BD  0087               	movwf	7
  4377  07BE  0821               	movf	??_Ax25_Send_Flag+1,w
  4378  07BF  0481               	iorwf	1,f
  4379  07C0  2FE3               	goto	l1997
  4380  07C1                     l1995:	
  4381                           
  4382                           ;ax25.c: 86: else
  4383                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4384  07C1  3001               	movlw	1
  4385  07C2  00A0               	movwf	??_Ax25_Send_Flag
  4386  07C3  0879               	movf	_modem_packet_size,w
  4387  07C4  3907               	andlw	7
  4388  07C5  0A89               	incf	9,f
  4389  07C6  2FC8               	goto	u1744
  4390  07C7                     u1745:	
  4391  07C7  35A0               	lslf	??_Ax25_Send_Flag,f
  4392  07C8                     u1744:	
  4393  07C8  0B89               	decfsz	9,f
  4394  07C9  2FC7               	goto	u1745
  4395  07CA  0820               	movf	??_Ax25_Send_Flag,w
  4396  07CB  3AFF               	xorlw	255
  4397  07CC  00A1               	movwf	??_Ax25_Send_Flag+1
  4398  07CD  0879               	movf	_modem_packet_size,w
  4399  07CE  00A2               	movwf	??_Ax25_Send_Flag+2
  4400  07CF  087A               	movf	_modem_packet_size+1,w
  4401  07D0  00A3               	movwf	??_Ax25_Send_Flag+3
  4402  07D1  087B               	movf	_modem_packet_size+2,w
  4403  07D2  00A4               	movwf	??_Ax25_Send_Flag+4
  4404  07D3  087C               	movf	_modem_packet_size+3,w
  4405  07D4  00A5               	movwf	??_Ax25_Send_Flag+5
  4406  07D5  3003               	movlw	3
  4407  07D6                     u1755:	
  4408  07D6  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4409  07D7  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4410  07D8  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4411  07D9  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4412  07DA  0B89               	decfsz	9,f
  4413  07DB  2FD6               	goto	u1755
  4414  07DC  0822               	movf	??_Ax25_Send_Flag+2,w
  4415  07DD  3EA0               	addlw	_modem_packet& (0+255)
  4416  07DE  0086               	movwf	6
  4417  07DF  3001               	movlw	1	; select bank3/4
  4418  07E0  0087               	movwf	7
  4419  07E1  0821               	movf	??_Ax25_Send_Flag+1,w
  4420  07E2  0581               	andwf	1,f
  4421  07E3                     l1997:	
  4422  07E3  3001               	movlw	1
  4423  07E4  07A7               	addwf	Ax25_Send_Flag@i,f
  4424  07E5  3000               	movlw	0
  4425  07E6  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  4426  07E7  3001               	movlw	1
  4427  07E8  07F9               	addwf	_modem_packet_size,f
  4428  07E9  3000               	movlw	0
  4429  07EA  3DFA               	addwfc	_modem_packet_size+1,f
  4430  07EB  3000               	movlw	0
  4431  07EC  3DFB               	addwfc	_modem_packet_size+2,f
  4432  07ED  3000               	movlw	0
  4433  07EE  3DFC               	addwfc	_modem_packet_size+3,f
  4434  07EF  2F7B               	goto	L4
  4435  07F0                     __end_of_Ax25_Send_Flag:	
  4436                           
  4437                           	psect	text25
  4438  0F12                     __ptext25:	
  4439 ;; *************** function _Adf_Lock *****************
  4440 ;; Defined at:
  4441 ;;		line 231 in file "adf7012.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;		None
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  bias            2   10[BANK1 ] int 
  4446 ;;  adj             2    8[BANK1 ] int 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      unsigned char 
  4449 ;; Registers used:
  4450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4458 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4459 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;Total ram usage:        6 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; Hardware stack levels required when called:    9
  4463 ;; This function calls:
  4464 ;;		_Adf_Locked
  4465 ;;		_Adf_Write_Config
  4466 ;;		_Delay_ms
  4467 ;; This function is called by:
  4468 ;;		_main
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function _Adf_Lock
  4474  0F12                     _Adf_Lock:	
  4475                           
  4476                           ;adf7012.c: 234: Delay_ms(200);
  4477                           
  4478                           ;incstack = 0
  4479                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4480  0F12  30C8               	movlw	200
  4481  0F13  0020               	movlb	0	; select bank0
  4482  0F14  00A0               	movwf	Delay_ms@time_to_delay
  4483  0F15  3000               	movlw	0
  4484  0F16  00A1               	movwf	Delay_ms@time_to_delay+1
  4485  0F17  318D  2526  318F   	fcall	_Delay_ms
  4486                           
  4487                           ;adf7012.c: 235: int adj = adf_config.r0.vco_adjust;
  4488  0F1A  0021               	movlb	1	; select bank1
  4489  0F1B  0828               	movf	(_adf_config^(0+128)+8),w
  4490  0F1C  0020               	movlb	0	; select bank0
  4491  0F1D  00EB               	movwf	??_Adf_Lock
  4492  0F1E  01EC               	clrf	??_Adf_Lock+1
  4493  0F1F  086B               	movf	??_Adf_Lock,w
  4494  0F20  0021               	movlb	1	; select bank1
  4495  0F21  00DB               	movwf	Adf_Lock@adj^(0+128)
  4496  0F22  0020               	movlb	0	; select bank0
  4497  0F23  086C               	movf	??_Adf_Lock+1,w
  4498  0F24  0021               	movlb	1	; select bank1
  4499  0F25  00DC               	movwf	(Adf_Lock@adj+1)^(0+128)
  4500                           
  4501                           ;adf7012.c: 236: int bias = adf_config.r3.vco_bias;
  4502  0F26  0843               	movf	(_adf_config^(0+128)+35),w
  4503  0F27  0020               	movlb	0	; select bank0
  4504  0F28  00EB               	movwf	??_Adf_Lock
  4505  0F29  01EC               	clrf	??_Adf_Lock+1
  4506  0F2A  086B               	movf	??_Adf_Lock,w
  4507  0F2B  0021               	movlb	1	; select bank1
  4508  0F2C  00DD               	movwf	Adf_Lock@bias^(0+128)
  4509  0F2D  0020               	movlb	0	; select bank0
  4510  0F2E  086C               	movf	??_Adf_Lock+1,w
  4511  0F2F  0021               	movlb	1	; select bank1
  4512  0F30  00DE               	movwf	(Adf_Lock@bias+1)^(0+128)
  4513                           
  4514                           ;adf7012.c: 238: adf_config.r3.pll_enable = 1;
  4515  0F31  01B9               	clrf	(_adf_config^(0+128)+25)
  4516  0F32  0AB9               	incf	(_adf_config^(0+128)+25),f
  4517                           
  4518                           ;adf7012.c: 240: adf_config.r3.muxout = 5;
  4519  0F33  3005               	movlw	5
  4520  0F34  0020               	movlb	0	; select bank0
  4521  0F35  00EB               	movwf	??_Adf_Lock
  4522  0F36  086B               	movf	??_Adf_Lock,w
  4523  0F37  0021               	movlb	1	; select bank1
  4524  0F38  00C1               	movwf	(_adf_config^(0+128)+33)
  4525                           
  4526                           ;adf7012.c: 242: Adf_Write_Config();
  4527  0F39  318C  241F  318F   	fcall	_Adf_Write_Config
  4528                           
  4529                           ;adf7012.c: 243: Delay_ms(5);
  4530  0F3C  3005               	movlw	5
  4531  0F3D  0020               	movlb	0	; select bank0
  4532  0F3E  00A0               	movwf	Delay_ms@time_to_delay
  4533  0F3F  3000               	movlw	0
  4534  0F40  00A1               	movwf	Delay_ms@time_to_delay+1
  4535  0F41  318D  2526  318F   	fcall	_Delay_ms
  4536  0F44                     l2245:	
  4537                           ;adf7012.c: 245: while(!Adf_Locked()) {
  4538                           
  4539  0F44  318B  23E4  318F   	fcall	_Adf_Locked
  4540  0F47  3A00               	xorlw	0
  4541  0F48  1D03               	btfss	3,2
  4542  0F49  0008               	return
  4543                           
  4544                           ;adf7012.c: 247: adf_config.r0.vco_adjust = adj;
  4545  0F4A  0021               	movlb	1	; select bank1
  4546  0F4B  085B               	movf	Adf_Lock@adj^(0+128),w
  4547  0F4C  0020               	movlb	0	; select bank0
  4548  0F4D  00EB               	movwf	??_Adf_Lock
  4549  0F4E  086B               	movf	??_Adf_Lock,w
  4550  0F4F  0021               	movlb	1	; select bank1
  4551  0F50  00A8               	movwf	(_adf_config^(0+128)+8)
  4552                           
  4553                           ;adf7012.c: 248: adf_config.r3.vco_bias = bias;
  4554  0F51  085D               	movf	Adf_Lock@bias^(0+128),w
  4555  0F52  0020               	movlb	0	; select bank0
  4556  0F53  00EB               	movwf	??_Adf_Lock
  4557  0F54  086B               	movf	??_Adf_Lock,w
  4558  0F55  0021               	movlb	1	; select bank1
  4559  0F56  00C3               	movwf	(_adf_config^(0+128)+35)
  4560                           
  4561                           ;adf7012.c: 250: adf_config.r3.muxout = 5;
  4562  0F57  3005               	movlw	5
  4563  0F58  0020               	movlb	0	; select bank0
  4564  0F59  00EB               	movwf	??_Adf_Lock
  4565  0F5A  086B               	movf	??_Adf_Lock,w
  4566  0F5B  0021               	movlb	1	; select bank1
  4567  0F5C  00C1               	movwf	(_adf_config^(0+128)+33)
  4568                           
  4569                           ;adf7012.c: 251: Adf_Write_Config();
  4570  0F5D  318C  241F  318F   	fcall	_Adf_Write_Config
  4571                           
  4572                           ;adf7012.c: 252: Delay_ms(5);
  4573  0F60  3005               	movlw	5
  4574  0F61  0020               	movlb	0	; select bank0
  4575  0F62  00A0               	movwf	Delay_ms@time_to_delay
  4576  0F63  3000               	movlw	0
  4577  0F64  00A1               	movwf	Delay_ms@time_to_delay+1
  4578  0F65  318D  2526  318F   	fcall	_Delay_ms
  4579                           
  4580                           ;adf7012.c: 253: if(++bias == 14) {
  4581  0F68  3001               	movlw	1
  4582  0F69  0021               	movlb	1	; select bank1
  4583  0F6A  07DD               	addwf	Adf_Lock@bias^(0+128),f
  4584  0F6B  3000               	movlw	0
  4585  0F6C  3DDE               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  4586  0F6D  300E               	movlw	14
  4587  0F6E  065D               	xorwf	Adf_Lock@bias^(0+128),w
  4588  0F6F  045E               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  4589  0F70  1D03               	skipz
  4590  0F71  2F44               	goto	l2245
  4591                           
  4592                           ;adf7012.c: 254: bias = 1;
  4593  0F72  3001               	movlw	1
  4594  0F73  00DD               	movwf	Adf_Lock@bias^(0+128)
  4595  0F74  3000               	movlw	0
  4596  0F75  00DE               	movwf	(Adf_Lock@bias^(0+128)+1)
  4597                           
  4598                           ;adf7012.c: 255: if(++adj == 4) {
  4599  0F76  3001               	movlw	1
  4600  0F77  07DB               	addwf	Adf_Lock@adj^(0+128),f
  4601  0F78  3000               	movlw	0
  4602  0F79  3DDC               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  4603  0F7A  3004               	movlw	4
  4604  0F7B  065B               	xorwf	Adf_Lock@adj^(0+128),w
  4605  0F7C  045C               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  4606  0F7D  1D03               	skipz
  4607  0F7E  2F44               	goto	l2245
  4608                           
  4609                           ;adf7012.c: 257: adf_config.r0.vco_adjust = 0;
  4610  0F7F  01A8               	clrf	(_adf_config^(0+128)+8)
  4611                           
  4612                           ;adf7012.c: 258: adf_config.r3.vco_bias = 5;
  4613  0F80  3005               	movlw	5
  4614  0F81  0020               	movlb	0	; select bank0
  4615  0F82  00EB               	movwf	??_Adf_Lock
  4616  0F83  086B               	movf	??_Adf_Lock,w
  4617  0F84  0021               	movlb	1	; select bank1
  4618  0F85  00C3               	movwf	(_adf_config^(0+128)+35)
  4619                           
  4620                           ;adf7012.c: 260: return 0;
  4621                           ;	Return value of _Adf_Lock is never used
  4622  0F86  0008               	return
  4623  0F87                     __end_of_Adf_Lock:	
  4624                           ;adf7012.c: 261: }
  4625                           ;adf7012.c: 262: }
  4626                           ;adf7012.c: 263: }
  4627                           ;adf7012.c: 267: return 1;
  4628                           ;	Return value of _Adf_Lock is never used
  4629                           
  4630                           
  4631                           	psect	text26
  4632  0C1F                     __ptext26:	
  4633 ;; *************** function _Adf_Write_Config *****************
  4634 ;; Defined at:
  4635 ;;		line 150 in file "adf7012.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;		None
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;		None               void
  4642 ;; Registers used:
  4643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;Total ram usage:        0 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    8
  4656 ;; This function calls:
  4657 ;;		_Adf_Write_Register_One
  4658 ;;		_Adf_Write_Register_Three
  4659 ;;		_Adf_Write_Register_Two
  4660 ;;		_Adf_Write_Register_Zero
  4661 ;; This function is called by:
  4662 ;;		_Adf_Lock
  4663 ;;		_Radio_Setup
  4664 ;;		_Ptt_On
  4665 ;;		_Ptt_Off
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _Adf_Write_Config
  4671  0C1F                     _Adf_Write_Config:	
  4672                           
  4673                           ;adf7012.c: 151: Adf_Write_Register_Zero();
  4674                           
  4675                           ;incstack = 0
  4676                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4677  0C1F  3182  22CD  318C   	fcall	_Adf_Write_Register_Zero
  4678                           
  4679                           ;adf7012.c: 152: Adf_Write_Register_One();
  4680  0C22  318E  26A1  318C   	fcall	_Adf_Write_Register_One
  4681                           
  4682                           ;adf7012.c: 153: Adf_Write_Register_Two();
  4683  0C25  3184  24C4  318C   	fcall	_Adf_Write_Register_Two
  4684                           
  4685                           ;adf7012.c: 154: Adf_Write_Register_Three();
  4686  0C28  3180  2089         	fcall	_Adf_Write_Register_Three
  4687  0C2A  0008               	return
  4688  0C2B                     __end_of_Adf_Write_Config:	
  4689                           
  4690                           	psect	text27
  4691  02CD                     __ptext27:	
  4692 ;; *************** function _Adf_Write_Register_Zero *****************
  4693 ;; Defined at:
  4694 ;;		line 157 in file "adf7012.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  4699 ;;  reg             4   51[BANK0 ] unsigned long 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;		None               void
  4702 ;; Registers used:
  4703 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;Total ram usage:       36 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    7
  4716 ;; This function calls:
  4717 ;;		_Reverse_Array
  4718 ;;		_Write_Adf7012_Reg
  4719 ;;		_memcpy
  4720 ;; This function is called by:
  4721 ;;		_Adf_Write_Config
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           
  4726                           ;psect for function _Adf_Write_Register_Zero
  4727  02CD                     _Adf_Write_Register_Zero:	
  4728                           
  4729                           ;adf7012.c: 159: uint32_t reg =
  4730                           ;adf7012.c: 160: (0) |
  4731                           ;adf7012.c: 161: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  4732                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  4733                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  4734                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  4735                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  4736                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  4737                           
  4738                           ;incstack = 0
  4739                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4740  02CD  0021               	movlb	1	; select bank1
  4741  02CE  0829               	movf	(_adf_config^(0+128)+9),w
  4742  02CF  3903               	andlw	3
  4743  02D0  0020               	movlb	0	; select bank0
  4744  02D1  00B3               	movwf	??_Adf_Write_Register_Zero
  4745  02D2  01B4               	clrf	??_Adf_Write_Register_Zero+1
  4746  02D3  01B5               	clrf	??_Adf_Write_Register_Zero+2
  4747  02D4  01B6               	clrf	??_Adf_Write_Register_Zero+3
  4748  02D5  3019               	movlw	25
  4749  02D6                     u1145:	
  4750  02D6  35B3               	lslf	??_Adf_Write_Register_Zero,f
  4751  02D7  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  4752  02D8  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  4753  02D9  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  4754  02DA  0B89               	decfsz	9,f
  4755  02DB  2AD6               	goto	u1145
  4756  02DC  0021               	movlb	1	; select bank1
  4757  02DD  0828               	movf	(_adf_config^(0+128)+8),w
  4758  02DE  3903               	andlw	3
  4759  02DF  0020               	movlb	0	; select bank0
  4760  02E0  00B7               	movwf	??_Adf_Write_Register_Zero+4
  4761  02E1  01B8               	clrf	??_Adf_Write_Register_Zero+5
  4762  02E2  01B9               	clrf	??_Adf_Write_Register_Zero+6
  4763  02E3  01BA               	clrf	??_Adf_Write_Register_Zero+7
  4764  02E4  3017               	movlw	23
  4765  02E5                     u1155:	
  4766  02E5  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  4767  02E6  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  4768  02E7  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  4769  02E8  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  4770  02E9  0B89               	decfsz	9,f
  4771  02EA  2AE5               	goto	u1155
  4772  02EB  0021               	movlb	1	; select bank1
  4773  02EC  0827               	movf	(_adf_config^(0+128)+7),w
  4774  02ED  390F               	andlw	15
  4775  02EE  0020               	movlb	0	; select bank0
  4776  02EF  00BB               	movwf	??_Adf_Write_Register_Zero+8
  4777  02F0  01BC               	clrf	??_Adf_Write_Register_Zero+9
  4778  02F1  01BD               	clrf	??_Adf_Write_Register_Zero+10
  4779  02F2  01BE               	clrf	??_Adf_Write_Register_Zero+11
  4780  02F3  3013               	movlw	19
  4781  02F4                     u1165:	
  4782  02F4  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  4783  02F5  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  4784  02F6  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  4785  02F7  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  4786  02F8  0B89               	decfsz	9,f
  4787  02F9  2AF4               	goto	u1165
  4788  02FA  0021               	movlb	1	; select bank1
  4789  02FB  0826               	movf	(_adf_config^(0+128)+6),w
  4790  02FC  3901               	andlw	1
  4791  02FD  0020               	movlb	0	; select bank0
  4792  02FE  00BF               	movwf	??_Adf_Write_Register_Zero+12
  4793  02FF  01C0               	clrf	??_Adf_Write_Register_Zero+13
  4794  0300  01C1               	clrf	??_Adf_Write_Register_Zero+14
  4795  0301  01C2               	clrf	??_Adf_Write_Register_Zero+15
  4796  0302  3012               	movlw	18
  4797  0303                     u1175:	
  4798  0303  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  4799  0304  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  4800  0305  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  4801  0306  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  4802  0307  0B89               	decfsz	9,f
  4803  0308  2B03               	goto	u1175
  4804  0309  0021               	movlb	1	; select bank1
  4805  030A  0825               	movf	(_adf_config^(0+128)+5),w
  4806  030B  3901               	andlw	1
  4807  030C  0020               	movlb	0	; select bank0
  4808  030D  00C3               	movwf	??_Adf_Write_Register_Zero+16
  4809  030E  01C4               	clrf	??_Adf_Write_Register_Zero+17
  4810  030F  01C5               	clrf	??_Adf_Write_Register_Zero+18
  4811  0310  01C6               	clrf	??_Adf_Write_Register_Zero+19
  4812  0311  3011               	movlw	17
  4813  0312                     u1185:	
  4814  0312  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  4815  0313  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  4816  0314  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  4817  0315  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  4818  0316  0B89               	decfsz	9,f
  4819  0317  2B12               	goto	u1185
  4820  0318  0021               	movlb	1	; select bank1
  4821  0319  0824               	movf	(_adf_config^(0+128)+4),w
  4822  031A  390F               	andlw	15
  4823  031B  0020               	movlb	0	; select bank0
  4824  031C  00C7               	movwf	??_Adf_Write_Register_Zero+20
  4825  031D  01C8               	clrf	??_Adf_Write_Register_Zero+21
  4826  031E  01C9               	clrf	??_Adf_Write_Register_Zero+22
  4827  031F  01CA               	clrf	??_Adf_Write_Register_Zero+23
  4828  0320  300D               	movlw	13
  4829  0321                     u1195:	
  4830  0321  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  4831  0322  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  4832  0323  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  4833  0324  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  4834  0325  0B89               	decfsz	9,f
  4835  0326  2B21               	goto	u1195
  4836  0327  30FF               	movlw	255
  4837  0328  0021               	movlb	1	; select bank1
  4838  0329  0520               	andwf	_adf_config^(0+128),w
  4839  032A  0020               	movlb	0	; select bank0
  4840  032B  00CB               	movwf	??_Adf_Write_Register_Zero+24
  4841  032C  3007               	movlw	7
  4842  032D  0021               	movlb	1	; select bank1
  4843  032E  0521               	andwf	(_adf_config+1)^(0+128),w
  4844  032F  0020               	movlb	0	; select bank0
  4845  0330  00CC               	movwf	??_Adf_Write_Register_Zero+25
  4846  0331  3000               	movlw	0
  4847  0332  0021               	movlb	1	; select bank1
  4848  0333  0522               	andwf	(_adf_config+2)^(0+128),w
  4849  0334  0020               	movlb	0	; select bank0
  4850  0335  00CD               	movwf	??_Adf_Write_Register_Zero+26
  4851  0336  3000               	movlw	0
  4852  0337  0021               	movlb	1	; select bank1
  4853  0338  0523               	andwf	(_adf_config+3)^(0+128),w
  4854  0339  0020               	movlb	0	; select bank0
  4855  033A  00CE               	movwf	??_Adf_Write_Register_Zero+27
  4856  033B  3002               	movlw	2
  4857  033C                     u1205:	
  4858  033C  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  4859  033D  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  4860  033E  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  4861  033F  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  4862  0340  0B89               	decfsz	9,f
  4863  0341  2B3C               	goto	u1205
  4864  0342  084B               	movf	??_Adf_Write_Register_Zero+24,w
  4865  0343  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  4866  0344  084C               	movf	??_Adf_Write_Register_Zero+25,w
  4867  0345  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  4868  0346  084D               	movf	??_Adf_Write_Register_Zero+26,w
  4869  0347  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  4870  0348  084E               	movf	??_Adf_Write_Register_Zero+27,w
  4871  0349  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  4872  034A  0847               	movf	??_Adf_Write_Register_Zero+20,w
  4873  034B  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  4874  034C  0848               	movf	??_Adf_Write_Register_Zero+21,w
  4875  034D  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  4876  034E  0849               	movf	??_Adf_Write_Register_Zero+22,w
  4877  034F  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  4878  0350  084A               	movf	??_Adf_Write_Register_Zero+23,w
  4879  0351  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  4880  0352  0843               	movf	??_Adf_Write_Register_Zero+16,w
  4881  0353  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  4882  0354  0844               	movf	??_Adf_Write_Register_Zero+17,w
  4883  0355  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  4884  0356  0845               	movf	??_Adf_Write_Register_Zero+18,w
  4885  0357  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  4886  0358  0846               	movf	??_Adf_Write_Register_Zero+19,w
  4887  0359  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  4888  035A  083F               	movf	??_Adf_Write_Register_Zero+12,w
  4889  035B  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  4890  035C  0840               	movf	??_Adf_Write_Register_Zero+13,w
  4891  035D  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  4892  035E  0841               	movf	??_Adf_Write_Register_Zero+14,w
  4893  035F  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  4894  0360  0842               	movf	??_Adf_Write_Register_Zero+15,w
  4895  0361  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  4896  0362  083B               	movf	??_Adf_Write_Register_Zero+8,w
  4897  0363  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  4898  0364  083C               	movf	??_Adf_Write_Register_Zero+9,w
  4899  0365  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  4900  0366  083D               	movf	??_Adf_Write_Register_Zero+10,w
  4901  0367  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  4902  0368  083E               	movf	??_Adf_Write_Register_Zero+11,w
  4903  0369  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  4904  036A  0833               	movf	??_Adf_Write_Register_Zero,w
  4905  036B  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  4906  036C  00D3               	movwf	Adf_Write_Register_Zero@reg
  4907  036D  0834               	movf	??_Adf_Write_Register_Zero+1,w
  4908  036E  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  4909  036F  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  4910  0370  0835               	movf	??_Adf_Write_Register_Zero+2,w
  4911  0371  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  4912  0372  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  4913  0373  0836               	movf	??_Adf_Write_Register_Zero+3,w
  4914  0374  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  4915  0375  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  4916                           
  4917                           ;adf7012.c: 170: uint8_t reg_ptr[4];
  4918                           ;adf7012.c: 171: memcpy(reg_ptr, &reg, 4);
  4919  0376  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  4920  0377  00B3               	movwf	??_Adf_Write_Register_Zero
  4921  0378  0833               	movf	??_Adf_Write_Register_Zero,w
  4922  0379  00A0               	movwf	memcpy@s1
  4923  037A  3004               	movlw	4
  4924  037B  00A1               	movwf	memcpy@n
  4925  037C  3000               	movlw	0
  4926  037D  00A2               	movwf	memcpy@n+1
  4927  037E  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4928  037F  318D  2546  3182   	fcall	_memcpy
  4929                           
  4930                           ;adf7012.c: 172: Reverse_Array(reg_ptr,4);
  4931  0382  3004               	movlw	4
  4932  0383  0020               	movlb	0	; select bank0
  4933  0384  00B3               	movwf	??_Adf_Write_Register_Zero
  4934  0385  0833               	movf	??_Adf_Write_Register_Zero,w
  4935  0386  00A7               	movwf	Reverse_Array@length
  4936  0387  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4937  0388  3183  2394  3182   	fcall	_Reverse_Array
  4938                           
  4939                           ;adf7012.c: 173: Write_Adf7012_Reg(reg_ptr, 4);
  4940  038B  3004               	movlw	4
  4941  038C  0020               	movlb	0	; select bank0
  4942  038D  00B3               	movwf	??_Adf_Write_Register_Zero
  4943  038E  0833               	movf	??_Adf_Write_Register_Zero,w
  4944  038F  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  4945  0390  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4946  0391  318E  262D         	fcall	_Write_Adf7012_Reg
  4947  0393  0008               	return
  4948  0394                     __end_of_Adf_Write_Register_Zero:	
  4949                           
  4950                           	psect	text28
  4951  04C4                     __ptext28:	
  4952 ;; *************** function _Adf_Write_Register_Two *****************
  4953 ;; Defined at:
  4954 ;;		line 189 in file "adf7012.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;		None
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  4959 ;;  reg             4   47[BANK0 ] unsigned long 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;		None               void
  4962 ;; Registers used:
  4963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4970 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4971 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4972 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4973 ;;Total ram usage:       32 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    7
  4976 ;; This function calls:
  4977 ;;		_Reverse_Array
  4978 ;;		_Write_Adf7012_Reg
  4979 ;;		_memcpy
  4980 ;; This function is called by:
  4981 ;;		_Adf_Write_Config
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           
  4986                           ;psect for function _Adf_Write_Register_Two
  4987  04C4                     _Adf_Write_Register_Two:	
  4988                           
  4989                           ;adf7012.c: 190: uint32_t reg =
  4990                           ;adf7012.c: 191: (2) |
  4991                           ;adf7012.c: 192: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  4992                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  4993                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  4994                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  4995                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  4996                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  4997                           
  4998                           ;incstack = 0
  4999                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5000  04C4  0021               	movlb	1	; select bank1
  5001  04C5  0838               	movf	(_adf_config^(0+128)+24),w
  5002  04C6  3903               	andlw	3
  5003  04C7  0020               	movlb	0	; select bank0
  5004  04C8  00B3               	movwf	??_Adf_Write_Register_Two
  5005  04C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  5006  04CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  5007  04CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  5008  04CC  3017               	movlw	23
  5009  04CD                     u1245:	
  5010  04CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  5011  04CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  5012  04CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  5013  04D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  5014  04D1  0B89               	decfsz	9,f
  5015  04D2  2CCD               	goto	u1245
  5016  04D3  0021               	movlb	1	; select bank1
  5017  04D4  0837               	movf	(_adf_config^(0+128)+23),w
  5018  04D5  3907               	andlw	7
  5019  04D6  0020               	movlb	0	; select bank0
  5020  04D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  5021  04D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  5022  04D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  5023  04DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  5024  04DB  3014               	movlw	20
  5025  04DC                     u1255:	
  5026  04DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  5027  04DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  5028  04DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  5029  04DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  5030  04E0  0B89               	decfsz	9,f
  5031  04E1  2CDC               	goto	u1255
  5032  04E2  3013               	movlw	19
  5033  04E3  3EA0               	addlw	_adf_config& (0+255)
  5034  04E4  0086               	movwf	6
  5035  04E5  0187               	clrf	7
  5036  04E6  30FF               	movlw	255
  5037  04E7  0501               	andwf	1,w
  5038  04E8  00BB               	movwf	??_Adf_Write_Register_Two+8
  5039  04E9  3141               	addfsr 1,1
  5040  04EA  3001               	movlw	1
  5041  04EB  0501               	andwf	1,w
  5042  04EC  00BC               	movwf	??_Adf_Write_Register_Two+9
  5043  04ED  3141               	addfsr 1,1
  5044  04EE  3000               	movlw	0
  5045  04EF  0501               	andwf	1,w
  5046  04F0  00BD               	movwf	??_Adf_Write_Register_Two+10
  5047  04F1  3141               	addfsr 1,1
  5048  04F2  3000               	movlw	0
  5049  04F3  0501               	andwf	1,w
  5050  04F4  00BE               	movwf	??_Adf_Write_Register_Two+11
  5051  04F5  300B               	movlw	11
  5052  04F6                     u1265:	
  5053  04F6  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  5054  04F7  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  5055  04F8  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  5056  04F9  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  5057  04FA  0B89               	decfsz	9,f
  5058  04FB  2CF6               	goto	u1265
  5059  04FC  0021               	movlb	1	; select bank1
  5060  04FD  0832               	movf	(_adf_config^(0+128)+18),w
  5061  04FE  393F               	andlw	63
  5062  04FF  0020               	movlb	0	; select bank0
  5063  0500  00BF               	movwf	??_Adf_Write_Register_Two+12
  5064  0501  01C0               	clrf	??_Adf_Write_Register_Two+13
  5065  0502  01C1               	clrf	??_Adf_Write_Register_Two+14
  5066  0503  01C2               	clrf	??_Adf_Write_Register_Two+15
  5067  0504  3005               	movlw	5
  5068  0505                     u1275:	
  5069  0505  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  5070  0506  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  5071  0507  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  5072  0508  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  5073  0509  0B89               	decfsz	9,f
  5074  050A  2D05               	goto	u1275
  5075  050B  0021               	movlb	1	; select bank1
  5076  050C  0831               	movf	(_adf_config^(0+128)+17),w
  5077  050D  3901               	andlw	1
  5078  050E  0020               	movlb	0	; select bank0
  5079  050F  00C3               	movwf	??_Adf_Write_Register_Two+16
  5080  0510  01C4               	clrf	??_Adf_Write_Register_Two+17
  5081  0511  01C5               	clrf	??_Adf_Write_Register_Two+18
  5082  0512  01C6               	clrf	??_Adf_Write_Register_Two+19
  5083  0513  3004               	movlw	4
  5084  0514                     u1285:	
  5085  0514  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  5086  0515  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  5087  0516  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  5088  0517  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  5089  0518  0B89               	decfsz	9,f
  5090  0519  2D14               	goto	u1285
  5091  051A  0021               	movlb	1	; select bank1
  5092  051B  0830               	movf	(_adf_config^(0+128)+16),w
  5093  051C  3903               	andlw	3
  5094  051D  0020               	movlb	0	; select bank0
  5095  051E  00C7               	movwf	??_Adf_Write_Register_Two+20
  5096  051F  01C8               	clrf	??_Adf_Write_Register_Two+21
  5097  0520  01C9               	clrf	??_Adf_Write_Register_Two+22
  5098  0521  01CA               	clrf	??_Adf_Write_Register_Two+23
  5099  0522  3002               	movlw	2
  5100  0523                     u1295:	
  5101  0523  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  5102  0524  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  5103  0525  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  5104  0526  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  5105  0527  0B89               	decfsz	9,f
  5106  0528  2D23               	goto	u1295
  5107  0529  0847               	movf	??_Adf_Write_Register_Two+20,w
  5108  052A  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  5109  052B  0848               	movf	??_Adf_Write_Register_Two+21,w
  5110  052C  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  5111  052D  0849               	movf	??_Adf_Write_Register_Two+22,w
  5112  052E  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  5113  052F  084A               	movf	??_Adf_Write_Register_Two+23,w
  5114  0530  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  5115  0531  0843               	movf	??_Adf_Write_Register_Two+16,w
  5116  0532  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  5117  0533  0844               	movf	??_Adf_Write_Register_Two+17,w
  5118  0534  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  5119  0535  0845               	movf	??_Adf_Write_Register_Two+18,w
  5120  0536  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  5121  0537  0846               	movf	??_Adf_Write_Register_Two+19,w
  5122  0538  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  5123  0539  083F               	movf	??_Adf_Write_Register_Two+12,w
  5124  053A  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  5125  053B  0840               	movf	??_Adf_Write_Register_Two+13,w
  5126  053C  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  5127  053D  0841               	movf	??_Adf_Write_Register_Two+14,w
  5128  053E  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  5129  053F  0842               	movf	??_Adf_Write_Register_Two+15,w
  5130  0540  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  5131  0541  083B               	movf	??_Adf_Write_Register_Two+8,w
  5132  0542  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  5133  0543  083C               	movf	??_Adf_Write_Register_Two+9,w
  5134  0544  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  5135  0545  083D               	movf	??_Adf_Write_Register_Two+10,w
  5136  0546  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  5137  0547  083E               	movf	??_Adf_Write_Register_Two+11,w
  5138  0548  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  5139  0549  0837               	movf	??_Adf_Write_Register_Two+4,w
  5140  054A  04B3               	iorwf	??_Adf_Write_Register_Two,f
  5141  054B  0838               	movf	??_Adf_Write_Register_Two+5,w
  5142  054C  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  5143  054D  0839               	movf	??_Adf_Write_Register_Two+6,w
  5144  054E  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  5145  054F  083A               	movf	??_Adf_Write_Register_Two+7,w
  5146  0550  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  5147  0551  3002               	movlw	2
  5148  0552  0433               	iorwf	??_Adf_Write_Register_Two,w
  5149  0553  00CF               	movwf	Adf_Write_Register_Two@reg
  5150  0554  3000               	movlw	0
  5151  0555  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  5152  0556  00D0               	movwf	Adf_Write_Register_Two@reg+1
  5153  0557  3000               	movlw	0
  5154  0558  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  5155  0559  00D1               	movwf	Adf_Write_Register_Two@reg+2
  5156  055A  3000               	movlw	0
  5157  055B  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  5158  055C  00D2               	movwf	Adf_Write_Register_Two@reg+3
  5159                           
  5160                           ;adf7012.c: 200: uint8_t reg_ptr[4];
  5161                           ;adf7012.c: 201: memcpy(reg_ptr, &reg, 4);
  5162  055D  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  5163  055E  00B3               	movwf	??_Adf_Write_Register_Two
  5164  055F  0833               	movf	??_Adf_Write_Register_Two,w
  5165  0560  00A0               	movwf	memcpy@s1
  5166  0561  3004               	movlw	4
  5167  0562  00A1               	movwf	memcpy@n
  5168  0563  3000               	movlw	0
  5169  0564  00A2               	movwf	memcpy@n+1
  5170  0565  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5171  0566  318D  2546  3184   	fcall	_memcpy
  5172                           
  5173                           ;adf7012.c: 202: Reverse_Array(reg_ptr,4);
  5174  0569  3004               	movlw	4
  5175  056A  0020               	movlb	0	; select bank0
  5176  056B  00B3               	movwf	??_Adf_Write_Register_Two
  5177  056C  0833               	movf	??_Adf_Write_Register_Two,w
  5178  056D  00A7               	movwf	Reverse_Array@length
  5179  056E  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5180  056F  3183  2394  3184   	fcall	_Reverse_Array
  5181                           
  5182                           ;adf7012.c: 203: Write_Adf7012_Reg(reg_ptr, 4);
  5183  0572  3004               	movlw	4
  5184  0573  0020               	movlb	0	; select bank0
  5185  0574  00B3               	movwf	??_Adf_Write_Register_Two
  5186  0575  0833               	movf	??_Adf_Write_Register_Two,w
  5187  0576  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5188  0577  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5189  0578  318E  262D         	fcall	_Write_Adf7012_Reg
  5190  057A  0008               	return
  5191  057B                     __end_of_Adf_Write_Register_Two:	
  5192                           
  5193                           	psect	text29
  5194  0089                     __ptext29:	
  5195 ;; *************** function _Adf_Write_Register_Three *****************
  5196 ;; Defined at:
  5197 ;;		line 206 in file "adf7012.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;		None
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  5202 ;;  reg             4    4[BANK1 ] unsigned long 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;		None               void
  5205 ;; Registers used:
  5206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5213 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5214 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5215 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5216 ;;Total ram usage:       64 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    7
  5219 ;; This function calls:
  5220 ;;		_Reverse_Array
  5221 ;;		_Write_Adf7012_Reg
  5222 ;;		_memcpy
  5223 ;; This function is called by:
  5224 ;;		_Adf_Write_Config
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           
  5229                           ;psect for function _Adf_Write_Register_Three
  5230  0089                     _Adf_Write_Register_Three:	
  5231                           
  5232                           ;adf7012.c: 207: uint32_t reg =
  5233                           ;adf7012.c: 208: (3) |
  5234                           ;adf7012.c: 209: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  5235                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  5236                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  5237                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  5238                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  5239                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  5240                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  5241                           
  5242                           ;incstack = 0
  5243                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5244  0089  0021               	movlb	1	; select bank1
  5245  008A  0846               	movf	(_adf_config^(0+128)+38),w
  5246  008B  390F               	andlw	15
  5247  008C  0020               	movlb	0	; select bank0
  5248  008D  00B3               	movwf	??_Adf_Write_Register_Three
  5249  008E  01B4               	clrf	??_Adf_Write_Register_Three+1
  5250  008F  01B5               	clrf	??_Adf_Write_Register_Three+2
  5251  0090  01B6               	clrf	??_Adf_Write_Register_Three+3
  5252  0091  301C               	movlw	28
  5253  0092                     u1305:	
  5254  0092  35B3               	lslf	??_Adf_Write_Register_Three,f
  5255  0093  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  5256  0094  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  5257  0095  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  5258  0096  0B89               	decfsz	9,f
  5259  0097  2892               	goto	u1305
  5260  0098  0021               	movlb	1	; select bank1
  5261  0099  0845               	movf	(_adf_config^(0+128)+37),w
  5262  009A  391F               	andlw	31
  5263  009B  0020               	movlb	0	; select bank0
  5264  009C  00B7               	movwf	??_Adf_Write_Register_Three+4
  5265  009D  01B8               	clrf	??_Adf_Write_Register_Three+5
  5266  009E  01B9               	clrf	??_Adf_Write_Register_Three+6
  5267  009F  01BA               	clrf	??_Adf_Write_Register_Three+7
  5268  00A0  3017               	movlw	23
  5269  00A1                     u1315:	
  5270  00A1  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  5271  00A2  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  5272  00A3  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  5273  00A4  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  5274  00A5  0B89               	decfsz	9,f
  5275  00A6  28A1               	goto	u1315
  5276  00A7  0021               	movlb	1	; select bank1
  5277  00A8  0844               	movf	(_adf_config^(0+128)+36),w
  5278  00A9  3907               	andlw	7
  5279  00AA  0020               	movlb	0	; select bank0
  5280  00AB  00BB               	movwf	??_Adf_Write_Register_Three+8
  5281  00AC  01BC               	clrf	??_Adf_Write_Register_Three+9
  5282  00AD  01BD               	clrf	??_Adf_Write_Register_Three+10
  5283  00AE  01BE               	clrf	??_Adf_Write_Register_Three+11
  5284  00AF  3014               	movlw	20
  5285  00B0                     u1325:	
  5286  00B0  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  5287  00B1  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  5288  00B2  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  5289  00B3  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  5290  00B4  0B89               	decfsz	9,f
  5291  00B5  28B0               	goto	u1325
  5292  00B6  0021               	movlb	1	; select bank1
  5293  00B7  0843               	movf	(_adf_config^(0+128)+35),w
  5294  00B8  390F               	andlw	15
  5295  00B9  0020               	movlb	0	; select bank0
  5296  00BA  00BF               	movwf	??_Adf_Write_Register_Three+12
  5297  00BB  01C0               	clrf	??_Adf_Write_Register_Three+13
  5298  00BC  01C1               	clrf	??_Adf_Write_Register_Three+14
  5299  00BD  01C2               	clrf	??_Adf_Write_Register_Three+15
  5300  00BE  3010               	movlw	16
  5301  00BF                     u1335:	
  5302  00BF  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  5303  00C0  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  5304  00C1  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  5305  00C2  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  5306  00C3  0B89               	decfsz	9,f
  5307  00C4  28BF               	goto	u1335
  5308  00C5  0021               	movlb	1	; select bank1
  5309  00C6  0842               	movf	(_adf_config^(0+128)+34),w
  5310  00C7  3901               	andlw	1
  5311  00C8  0020               	movlb	0	; select bank0
  5312  00C9  00C3               	movwf	??_Adf_Write_Register_Three+16
  5313  00CA  01C4               	clrf	??_Adf_Write_Register_Three+17
  5314  00CB  01C5               	clrf	??_Adf_Write_Register_Three+18
  5315  00CC  01C6               	clrf	??_Adf_Write_Register_Three+19
  5316  00CD  300F               	movlw	15
  5317  00CE                     u1345:	
  5318  00CE  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  5319  00CF  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  5320  00D0  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  5321  00D1  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  5322  00D2  0B89               	decfsz	9,f
  5323  00D3  28CE               	goto	u1345
  5324  00D4  0021               	movlb	1	; select bank1
  5325  00D5  0841               	movf	(_adf_config^(0+128)+33),w
  5326  00D6  390F               	andlw	15
  5327  00D7  0020               	movlb	0	; select bank0
  5328  00D8  00C7               	movwf	??_Adf_Write_Register_Three+20
  5329  00D9  01C8               	clrf	??_Adf_Write_Register_Three+21
  5330  00DA  01C9               	clrf	??_Adf_Write_Register_Three+22
  5331  00DB  01CA               	clrf	??_Adf_Write_Register_Three+23
  5332  00DC  300B               	movlw	11
  5333  00DD                     u1355:	
  5334  00DD  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  5335  00DE  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  5336  00DF  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  5337  00E0  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  5338  00E1  0B89               	decfsz	9,f
  5339  00E2  28DD               	goto	u1355
  5340  00E3  0021               	movlb	1	; select bank1
  5341  00E4  0840               	movf	(_adf_config^(0+128)+32),w
  5342  00E5  3901               	andlw	1
  5343  00E6  0020               	movlb	0	; select bank0
  5344  00E7  00CB               	movwf	??_Adf_Write_Register_Three+24
  5345  00E8  01CC               	clrf	??_Adf_Write_Register_Three+25
  5346  00E9  01CD               	clrf	??_Adf_Write_Register_Three+26
  5347  00EA  01CE               	clrf	??_Adf_Write_Register_Three+27
  5348  00EB  300A               	movlw	10
  5349  00EC                     u1365:	
  5350  00EC  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  5351  00ED  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  5352  00EE  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  5353  00EF  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  5354  00F0  0B89               	decfsz	9,f
  5355  00F1  28EC               	goto	u1365
  5356  00F2  0021               	movlb	1	; select bank1
  5357  00F3  083F               	movf	(_adf_config^(0+128)+31),w
  5358  00F4  3901               	andlw	1
  5359  00F5  0020               	movlb	0	; select bank0
  5360  00F6  00CF               	movwf	??_Adf_Write_Register_Three+28
  5361  00F7  01D0               	clrf	??_Adf_Write_Register_Three+29
  5362  00F8  01D1               	clrf	??_Adf_Write_Register_Three+30
  5363  00F9  01D2               	clrf	??_Adf_Write_Register_Three+31
  5364  00FA  3009               	movlw	9
  5365  00FB                     u1375:	
  5366  00FB  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  5367  00FC  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  5368  00FD  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  5369  00FE  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  5370  00FF  0B89               	decfsz	9,f
  5371  0100  28FB               	goto	u1375
  5372  0101  0021               	movlb	1	; select bank1
  5373  0102  083E               	movf	(_adf_config^(0+128)+30),w
  5374  0103  3901               	andlw	1
  5375  0104  0020               	movlb	0	; select bank0
  5376  0105  00D3               	movwf	??_Adf_Write_Register_Three+32
  5377  0106  01D4               	clrf	??_Adf_Write_Register_Three+33
  5378  0107  01D5               	clrf	??_Adf_Write_Register_Three+34
  5379  0108  01D6               	clrf	??_Adf_Write_Register_Three+35
  5380  0109  3008               	movlw	8
  5381  010A                     u1385:	
  5382  010A  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  5383  010B  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  5384  010C  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  5385  010D  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  5386  010E  0B89               	decfsz	9,f
  5387  010F  290A               	goto	u1385
  5388  0110  0021               	movlb	1	; select bank1
  5389  0111  083D               	movf	(_adf_config^(0+128)+29),w
  5390  0112  3903               	andlw	3
  5391  0113  0020               	movlb	0	; select bank0
  5392  0114  00D7               	movwf	??_Adf_Write_Register_Three+36
  5393  0115  01D8               	clrf	??_Adf_Write_Register_Three+37
  5394  0116  01D9               	clrf	??_Adf_Write_Register_Three+38
  5395  0117  01DA               	clrf	??_Adf_Write_Register_Three+39
  5396  0118  3006               	movlw	6
  5397  0119                     u1395:	
  5398  0119  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  5399  011A  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  5400  011B  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  5401  011C  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  5402  011D  0B89               	decfsz	9,f
  5403  011E  2919               	goto	u1395
  5404  011F  0021               	movlb	1	; select bank1
  5405  0120  083C               	movf	(_adf_config^(0+128)+28),w
  5406  0121  3901               	andlw	1
  5407  0122  0020               	movlb	0	; select bank0
  5408  0123  00DB               	movwf	??_Adf_Write_Register_Three+40
  5409  0124  01DC               	clrf	??_Adf_Write_Register_Three+41
  5410  0125  01DD               	clrf	??_Adf_Write_Register_Three+42
  5411  0126  01DE               	clrf	??_Adf_Write_Register_Three+43
  5412  0127  3005               	movlw	5
  5413  0128                     u1405:	
  5414  0128  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  5415  0129  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  5416  012A  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  5417  012B  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  5418  012C  0B89               	decfsz	9,f
  5419  012D  2928               	goto	u1405
  5420  012E  0021               	movlb	1	; select bank1
  5421  012F  083B               	movf	(_adf_config^(0+128)+27),w
  5422  0130  3901               	andlw	1
  5423  0131  0020               	movlb	0	; select bank0
  5424  0132  00DF               	movwf	??_Adf_Write_Register_Three+44
  5425  0133  01E0               	clrf	??_Adf_Write_Register_Three+45
  5426  0134  01E1               	clrf	??_Adf_Write_Register_Three+46
  5427  0135  01E2               	clrf	??_Adf_Write_Register_Three+47
  5428  0136  3004               	movlw	4
  5429  0137                     u1415:	
  5430  0137  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  5431  0138  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  5432  0139  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  5433  013A  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  5434  013B  0B89               	decfsz	9,f
  5435  013C  2937               	goto	u1415
  5436  013D  0021               	movlb	1	; select bank1
  5437  013E  083A               	movf	(_adf_config^(0+128)+26),w
  5438  013F  3901               	andlw	1
  5439  0140  0020               	movlb	0	; select bank0
  5440  0141  00E3               	movwf	??_Adf_Write_Register_Three+48
  5441  0142  01E4               	clrf	??_Adf_Write_Register_Three+49
  5442  0143  01E5               	clrf	??_Adf_Write_Register_Three+50
  5443  0144  01E6               	clrf	??_Adf_Write_Register_Three+51
  5444  0145  3003               	movlw	3
  5445  0146                     u1425:	
  5446  0146  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  5447  0147  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  5448  0148  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  5449  0149  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  5450  014A  0B89               	decfsz	9,f
  5451  014B  2946               	goto	u1425
  5452  014C  0021               	movlb	1	; select bank1
  5453  014D  0839               	movf	(_adf_config^(0+128)+25),w
  5454  014E  3901               	andlw	1
  5455  014F  0020               	movlb	0	; select bank0
  5456  0150  00E7               	movwf	??_Adf_Write_Register_Three+52
  5457  0151  01E8               	clrf	??_Adf_Write_Register_Three+53
  5458  0152  01E9               	clrf	??_Adf_Write_Register_Three+54
  5459  0153  01EA               	clrf	??_Adf_Write_Register_Three+55
  5460  0154  3002               	movlw	2
  5461  0155                     u1435:	
  5462  0155  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  5463  0156  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  5464  0157  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  5465  0158  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  5466  0159  0B89               	decfsz	9,f
  5467  015A  2955               	goto	u1435
  5468  015B  0867               	movf	??_Adf_Write_Register_Three+52,w
  5469  015C  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  5470  015D  0868               	movf	??_Adf_Write_Register_Three+53,w
  5471  015E  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  5472  015F  0869               	movf	??_Adf_Write_Register_Three+54,w
  5473  0160  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  5474  0161  086A               	movf	??_Adf_Write_Register_Three+55,w
  5475  0162  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  5476  0163  0863               	movf	??_Adf_Write_Register_Three+48,w
  5477  0164  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  5478  0165  0864               	movf	??_Adf_Write_Register_Three+49,w
  5479  0166  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  5480  0167  0865               	movf	??_Adf_Write_Register_Three+50,w
  5481  0168  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  5482  0169  0866               	movf	??_Adf_Write_Register_Three+51,w
  5483  016A  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  5484  016B  085F               	movf	??_Adf_Write_Register_Three+44,w
  5485  016C  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  5486  016D  0860               	movf	??_Adf_Write_Register_Three+45,w
  5487  016E  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  5488  016F  0861               	movf	??_Adf_Write_Register_Three+46,w
  5489  0170  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  5490  0171  0862               	movf	??_Adf_Write_Register_Three+47,w
  5491  0172  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  5492  0173  085B               	movf	??_Adf_Write_Register_Three+40,w
  5493  0174  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  5494  0175  085C               	movf	??_Adf_Write_Register_Three+41,w
  5495  0176  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  5496  0177  085D               	movf	??_Adf_Write_Register_Three+42,w
  5497  0178  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  5498  0179  085E               	movf	??_Adf_Write_Register_Three+43,w
  5499  017A  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  5500  017B  0857               	movf	??_Adf_Write_Register_Three+36,w
  5501  017C  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  5502  017D  0858               	movf	??_Adf_Write_Register_Three+37,w
  5503  017E  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  5504  017F  0859               	movf	??_Adf_Write_Register_Three+38,w
  5505  0180  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  5506  0181  085A               	movf	??_Adf_Write_Register_Three+39,w
  5507  0182  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  5508  0183  0853               	movf	??_Adf_Write_Register_Three+32,w
  5509  0184  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  5510  0185  0854               	movf	??_Adf_Write_Register_Three+33,w
  5511  0186  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  5512  0187  0855               	movf	??_Adf_Write_Register_Three+34,w
  5513  0188  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  5514  0189  0856               	movf	??_Adf_Write_Register_Three+35,w
  5515  018A  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  5516  018B  084F               	movf	??_Adf_Write_Register_Three+28,w
  5517  018C  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  5518  018D  0850               	movf	??_Adf_Write_Register_Three+29,w
  5519  018E  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  5520  018F  0851               	movf	??_Adf_Write_Register_Three+30,w
  5521  0190  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  5522  0191  0852               	movf	??_Adf_Write_Register_Three+31,w
  5523  0192  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  5524  0193  084B               	movf	??_Adf_Write_Register_Three+24,w
  5525  0194  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  5526  0195  084C               	movf	??_Adf_Write_Register_Three+25,w
  5527  0196  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  5528  0197  084D               	movf	??_Adf_Write_Register_Three+26,w
  5529  0198  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  5530  0199  084E               	movf	??_Adf_Write_Register_Three+27,w
  5531  019A  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  5532  019B  0847               	movf	??_Adf_Write_Register_Three+20,w
  5533  019C  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  5534  019D  0848               	movf	??_Adf_Write_Register_Three+21,w
  5535  019E  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  5536  019F  0849               	movf	??_Adf_Write_Register_Three+22,w
  5537  01A0  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  5538  01A1  084A               	movf	??_Adf_Write_Register_Three+23,w
  5539  01A2  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  5540  01A3  0843               	movf	??_Adf_Write_Register_Three+16,w
  5541  01A4  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  5542  01A5  0844               	movf	??_Adf_Write_Register_Three+17,w
  5543  01A6  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  5544  01A7  0845               	movf	??_Adf_Write_Register_Three+18,w
  5545  01A8  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  5546  01A9  0846               	movf	??_Adf_Write_Register_Three+19,w
  5547  01AA  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  5548  01AB  083F               	movf	??_Adf_Write_Register_Three+12,w
  5549  01AC  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  5550  01AD  0840               	movf	??_Adf_Write_Register_Three+13,w
  5551  01AE  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  5552  01AF  0841               	movf	??_Adf_Write_Register_Three+14,w
  5553  01B0  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  5554  01B1  0842               	movf	??_Adf_Write_Register_Three+15,w
  5555  01B2  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  5556  01B3  083B               	movf	??_Adf_Write_Register_Three+8,w
  5557  01B4  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  5558  01B5  083C               	movf	??_Adf_Write_Register_Three+9,w
  5559  01B6  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  5560  01B7  083D               	movf	??_Adf_Write_Register_Three+10,w
  5561  01B8  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  5562  01B9  083E               	movf	??_Adf_Write_Register_Three+11,w
  5563  01BA  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  5564  01BB  0837               	movf	??_Adf_Write_Register_Three+4,w
  5565  01BC  04B3               	iorwf	??_Adf_Write_Register_Three,f
  5566  01BD  0838               	movf	??_Adf_Write_Register_Three+5,w
  5567  01BE  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  5568  01BF  0839               	movf	??_Adf_Write_Register_Three+6,w
  5569  01C0  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  5570  01C1  083A               	movf	??_Adf_Write_Register_Three+7,w
  5571  01C2  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  5572  01C3  3003               	movlw	3
  5573  01C4  0433               	iorwf	??_Adf_Write_Register_Three,w
  5574  01C5  0021               	movlb	1	; select bank1
  5575  01C6  00D7               	movwf	Adf_Write_Register_Three@reg^(0+128)
  5576  01C7  3000               	movlw	0
  5577  01C8  0020               	movlb	0	; select bank0
  5578  01C9  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  5579  01CA  0021               	movlb	1	; select bank1
  5580  01CB  00D8               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  5581  01CC  3000               	movlw	0
  5582  01CD  0020               	movlb	0	; select bank0
  5583  01CE  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  5584  01CF  0021               	movlb	1	; select bank1
  5585  01D0  00D9               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  5586  01D1  3000               	movlw	0
  5587  01D2  0020               	movlb	0	; select bank0
  5588  01D3  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  5589  01D4  0021               	movlb	1	; select bank1
  5590  01D5  00DA               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  5591                           
  5592                           ;adf7012.c: 225: uint8_t reg_ptr[4];
  5593                           ;adf7012.c: 226: memcpy(reg_ptr, &reg, 4);
  5594  01D6  30D7               	movlw	Adf_Write_Register_Three@reg& (0+255)
  5595  01D7  0020               	movlb	0	; select bank0
  5596  01D8  00B3               	movwf	??_Adf_Write_Register_Three
  5597  01D9  0833               	movf	??_Adf_Write_Register_Three,w
  5598  01DA  00A0               	movwf	memcpy@s1
  5599  01DB  3004               	movlw	4
  5600  01DC  00A1               	movwf	memcpy@n
  5601  01DD  3000               	movlw	0
  5602  01DE  00A2               	movwf	memcpy@n+1
  5603  01DF  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5604  01E0  318D  2546  3180   	fcall	_memcpy
  5605                           
  5606                           ;adf7012.c: 227: Reverse_Array(reg_ptr,4);
  5607  01E3  3004               	movlw	4
  5608  01E4  0020               	movlb	0	; select bank0
  5609  01E5  00B3               	movwf	??_Adf_Write_Register_Three
  5610  01E6  0833               	movf	??_Adf_Write_Register_Three,w
  5611  01E7  00A7               	movwf	Reverse_Array@length
  5612  01E8  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5613  01E9  3183  2394  3180   	fcall	_Reverse_Array
  5614                           
  5615                           ;adf7012.c: 228: Write_Adf7012_Reg(reg_ptr, 4);
  5616  01EC  3004               	movlw	4
  5617  01ED  0020               	movlb	0	; select bank0
  5618  01EE  00B3               	movwf	??_Adf_Write_Register_Three
  5619  01EF  0833               	movf	??_Adf_Write_Register_Three,w
  5620  01F0  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5621  01F1  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5622  01F2  318E  262D         	fcall	_Write_Adf7012_Reg
  5623  01F4  0008               	return
  5624  01F5                     __end_of_Adf_Write_Register_Three:	
  5625                           
  5626                           	psect	text30
  5627  0EA1                     __ptext30:	
  5628 ;; *************** function _Adf_Write_Register_One *****************
  5629 ;; Defined at:
  5630 ;;		line 176 in file "adf7012.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;		None
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  reg             4   31[BANK0 ] unsigned long 
  5635 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  5636 ;; Return value:  Size  Location     Type
  5637 ;;		None               void
  5638 ;; Registers used:
  5639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5646 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5647 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5648 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5649 ;;Total ram usage:       19 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    7
  5652 ;; This function calls:
  5653 ;;		_Reverse_Array
  5654 ;;		_Write_Adf7012_Reg
  5655 ;;		_memcpy
  5656 ;; This function is called by:
  5657 ;;		_Adf_Write_Config
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _Adf_Write_Register_One
  5663  0EA1                     _Adf_Write_Register_One:	
  5664                           
  5665                           ;adf7012.c: 177: uint32_t reg =
  5666                           ;adf7012.c: 178: (1) |
  5667                           ;adf7012.c: 179: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  5668                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  5669                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5673  0EA1  0021               	movlb	1	; select bank1
  5674  0EA2  082F               	movf	(_adf_config^(0+128)+15),w
  5675  0EA3  3901               	andlw	1
  5676  0EA4  0020               	movlb	0	; select bank0
  5677  0EA5  00B3               	movwf	??_Adf_Write_Register_One
  5678  0EA6  01B4               	clrf	??_Adf_Write_Register_One+1
  5679  0EA7  01B5               	clrf	??_Adf_Write_Register_One+2
  5680  0EA8  01B6               	clrf	??_Adf_Write_Register_One+3
  5681  0EA9  3016               	movlw	22
  5682  0EAA                     u1215:	
  5683  0EAA  35B3               	lslf	??_Adf_Write_Register_One,f
  5684  0EAB  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  5685  0EAC  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  5686  0EAD  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  5687  0EAE  0B89               	decfsz	9,f
  5688  0EAF  2EAA               	goto	u1215
  5689  0EB0  0021               	movlb	1	; select bank1
  5690  0EB1  082E               	movf	(_adf_config^(0+128)+14),w
  5691  0EB2  0020               	movlb	0	; select bank0
  5692  0EB3  00B7               	movwf	??_Adf_Write_Register_One+4
  5693  0EB4  01B8               	clrf	??_Adf_Write_Register_One+5
  5694  0EB5  01B9               	clrf	??_Adf_Write_Register_One+6
  5695  0EB6  01BA               	clrf	??_Adf_Write_Register_One+7
  5696  0EB7  300E               	movlw	14
  5697  0EB8                     u1225:	
  5698  0EB8  35B7               	lslf	??_Adf_Write_Register_One+4,f
  5699  0EB9  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  5700  0EBA  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  5701  0EBB  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  5702  0EBC  0B89               	decfsz	9,f
  5703  0EBD  2EB8               	goto	u1225
  5704  0EBE  300A               	movlw	10
  5705  0EBF  3EA0               	addlw	_adf_config& (0+255)
  5706  0EC0  0086               	movwf	6
  5707  0EC1  0187               	clrf	7
  5708  0EC2  30FF               	movlw	255
  5709  0EC3  0501               	andwf	1,w
  5710  0EC4  00BB               	movwf	??_Adf_Write_Register_One+8
  5711  0EC5  3141               	addfsr 1,1
  5712  0EC6  300F               	movlw	15
  5713  0EC7  0501               	andwf	1,w
  5714  0EC8  00BC               	movwf	??_Adf_Write_Register_One+9
  5715  0EC9  3141               	addfsr 1,1
  5716  0ECA  3000               	movlw	0
  5717  0ECB  0501               	andwf	1,w
  5718  0ECC  00BD               	movwf	??_Adf_Write_Register_One+10
  5719  0ECD  3141               	addfsr 1,1
  5720  0ECE  3000               	movlw	0
  5721  0ECF  0501               	andwf	1,w
  5722  0ED0  00BE               	movwf	??_Adf_Write_Register_One+11
  5723  0ED1  3002               	movlw	2
  5724  0ED2                     u1235:	
  5725  0ED2  35BB               	lslf	??_Adf_Write_Register_One+8,f
  5726  0ED3  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  5727  0ED4  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  5728  0ED5  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  5729  0ED6  0B89               	decfsz	9,f
  5730  0ED7  2ED2               	goto	u1235
  5731  0ED8  083B               	movf	??_Adf_Write_Register_One+8,w
  5732  0ED9  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  5733  0EDA  083C               	movf	??_Adf_Write_Register_One+9,w
  5734  0EDB  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  5735  0EDC  083D               	movf	??_Adf_Write_Register_One+10,w
  5736  0EDD  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  5737  0EDE  083E               	movf	??_Adf_Write_Register_One+11,w
  5738  0EDF  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  5739  0EE0  0837               	movf	??_Adf_Write_Register_One+4,w
  5740  0EE1  04B3               	iorwf	??_Adf_Write_Register_One,f
  5741  0EE2  0838               	movf	??_Adf_Write_Register_One+5,w
  5742  0EE3  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  5743  0EE4  0839               	movf	??_Adf_Write_Register_One+6,w
  5744  0EE5  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  5745  0EE6  083A               	movf	??_Adf_Write_Register_One+7,w
  5746  0EE7  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  5747  0EE8  3001               	movlw	1
  5748  0EE9  0433               	iorwf	??_Adf_Write_Register_One,w
  5749  0EEA  00BF               	movwf	Adf_Write_Register_One@reg
  5750  0EEB  3000               	movlw	0
  5751  0EEC  0434               	iorwf	??_Adf_Write_Register_One+1,w
  5752  0EED  00C0               	movwf	Adf_Write_Register_One@reg+1
  5753  0EEE  3000               	movlw	0
  5754  0EEF  0435               	iorwf	??_Adf_Write_Register_One+2,w
  5755  0EF0  00C1               	movwf	Adf_Write_Register_One@reg+2
  5756  0EF1  3000               	movlw	0
  5757  0EF2  0436               	iorwf	??_Adf_Write_Register_One+3,w
  5758  0EF3  00C2               	movwf	Adf_Write_Register_One@reg+3
  5759                           
  5760                           ;adf7012.c: 183: uint8_t reg_ptr[3];
  5761                           ;adf7012.c: 184: memcpy(reg_ptr, &reg, 3);
  5762  0EF4  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  5763  0EF5  00B3               	movwf	??_Adf_Write_Register_One
  5764  0EF6  0833               	movf	??_Adf_Write_Register_One,w
  5765  0EF7  00A0               	movwf	memcpy@s1
  5766  0EF8  3003               	movlw	3
  5767  0EF9  00A1               	movwf	memcpy@n
  5768  0EFA  3000               	movlw	0
  5769  0EFB  00A2               	movwf	memcpy@n+1
  5770  0EFC  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5771  0EFD  318D  2546  318E   	fcall	_memcpy
  5772                           
  5773                           ;adf7012.c: 185: Reverse_Array(reg_ptr,3);
  5774  0F00  3003               	movlw	3
  5775  0F01  0020               	movlb	0	; select bank0
  5776  0F02  00B3               	movwf	??_Adf_Write_Register_One
  5777  0F03  0833               	movf	??_Adf_Write_Register_One,w
  5778  0F04  00A7               	movwf	Reverse_Array@length
  5779  0F05  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5780  0F06  3183  2394  318E   	fcall	_Reverse_Array
  5781                           
  5782                           ;adf7012.c: 186: Write_Adf7012_Reg(reg_ptr, 3);
  5783  0F09  3003               	movlw	3
  5784  0F0A  0020               	movlb	0	; select bank0
  5785  0F0B  00B3               	movwf	??_Adf_Write_Register_One
  5786  0F0C  0833               	movf	??_Adf_Write_Register_One,w
  5787  0F0D  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5788  0F0E  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5789  0F0F  318E  262D         	fcall	_Write_Adf7012_Reg
  5790  0F11  0008               	return
  5791  0F12                     __end_of_Adf_Write_Register_One:	
  5792                           
  5793                           	psect	text31
  5794  0E2D                     __ptext31:	
  5795 ;; *************** function _Write_Adf7012_Reg *****************
  5796 ;; Defined at:
  5797 ;;		line 82 in file "utility.c"
  5798 ;; Parameters:    Size  Location     Type
  5799 ;;  reg_value       1    wreg     PTR unsigned char 
  5800 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5801 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  5804 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5805 ;;  i               1   13[BANK0 ] unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      unsigned char 
  5808 ;; Registers used:
  5809 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5815 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5816 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5817 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;Total ram usage:        4 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; Hardware stack levels required when called:    6
  5822 ;; This function calls:
  5823 ;;		_Delay_ms
  5824 ;;		_Spi_Byte_Send
  5825 ;; This function is called by:
  5826 ;;		_Adf_Write_Register_Zero
  5827 ;;		_Adf_Write_Register_One
  5828 ;;		_Adf_Write_Register_Two
  5829 ;;		_Adf_Write_Register_Three
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           
  5834                           ;psect for function _Write_Adf7012_Reg
  5835  0E2D                     _Write_Adf7012_Reg:	
  5836                           
  5837                           ;incstack = 0
  5838                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5839                           ;Write_Adf7012_Reg@reg_value stored from wreg
  5840  0E2D  0020               	movlb	0	; select bank0
  5841  0E2E  00AC               	movwf	Write_Adf7012_Reg@reg_value
  5842                           
  5843                           ;utility.c: 84: uint8_t i = 0;
  5844  0E2F  01AD               	clrf	Write_Adf7012_Reg@i
  5845                           
  5846                           ;utility.c: 85: Delay_ms(1);
  5847  0E30  3001               	movlw	1
  5848  0E31  00A0               	movwf	Delay_ms@time_to_delay
  5849  0E32  3000               	movlw	0
  5850  0E33  00A1               	movwf	Delay_ms@time_to_delay+1
  5851  0E34  318D  2526  318E   	fcall	_Delay_ms
  5852                           
  5853                           ;utility.c: 86: PORTAbits.RA4 = 0;;
  5854  0E37  0020               	movlb	0	; select bank0
  5855  0E38  120C               	bcf	12,4	;volatile
  5856                           
  5857                           ;utility.c: 87: Delay_ms(1);
  5858  0E39  3001               	movlw	1
  5859  0E3A  00A0               	movwf	Delay_ms@time_to_delay
  5860  0E3B  3000               	movlw	0
  5861  0E3C  00A1               	movwf	Delay_ms@time_to_delay+1
  5862  0E3D  318D  2526  318E   	fcall	_Delay_ms
  5863                           
  5864                           ;utility.c: 89: for (i = 0; i < size_of_reg; i++){
  5865  0E40  0020               	movlb	0	; select bank0
  5866  0E41  01AD               	clrf	Write_Adf7012_Reg@i
  5867  0E42                     l1735:	
  5868  0E42  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  5869  0E43  022D               	subwf	Write_Adf7012_Reg@i,w
  5870  0E44  1803               	btfsc	3,0
  5871  0E45  2E56               	goto	l1737
  5872                           
  5873                           ;utility.c: 90: Spi_Byte_Send(*(reg_value+i));
  5874  0E46  082D               	movf	Write_Adf7012_Reg@i,w
  5875  0E47  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  5876  0E48  00AB               	movwf	??_Write_Adf7012_Reg
  5877  0E49  082B               	movf	??_Write_Adf7012_Reg,w
  5878  0E4A  0086               	movwf	6
  5879  0E4B  0187               	clrf	7
  5880  0E4C  0801               	movf	1,w
  5881  0E4D  318D  256F  318E   	fcall	_Spi_Byte_Send
  5882  0E50  3001               	movlw	1
  5883  0E51  0020               	movlb	0	; select bank0
  5884  0E52  00AB               	movwf	??_Write_Adf7012_Reg
  5885  0E53  082B               	movf	??_Write_Adf7012_Reg,w
  5886  0E54  07AD               	addwf	Write_Adf7012_Reg@i,f
  5887  0E55  2E42               	goto	l1735
  5888  0E56                     l1737:	
  5889                           
  5890                           ;utility.c: 91: }
  5891                           ;utility.c: 93: Delay_ms(1);
  5892  0E56  3001               	movlw	1
  5893  0E57  00A0               	movwf	Delay_ms@time_to_delay
  5894  0E58  3000               	movlw	0
  5895  0E59  00A1               	movwf	Delay_ms@time_to_delay+1
  5896  0E5A  318D  2526  318E   	fcall	_Delay_ms
  5897                           
  5898                           ;utility.c: 94: PORTAbits.RA4 = 1;;
  5899  0E5D  0020               	movlb	0	; select bank0
  5900  0E5E  160C               	bsf	12,4	;volatile
  5901                           
  5902                           ;utility.c: 96: Delay_ms(1);
  5903  0E5F  3001               	movlw	1
  5904  0E60  00A0               	movwf	Delay_ms@time_to_delay
  5905  0E61  3000               	movlw	0
  5906  0E62  00A1               	movwf	Delay_ms@time_to_delay+1
  5907  0E63  318D  2526         	fcall	_Delay_ms
  5908  0E65  0008               	return
  5909  0E66                     __end_of_Write_Adf7012_Reg:	
  5910                           ;utility.c: 97: return 1;
  5911                           ;	Return value of _Write_Adf7012_Reg is never used
  5912                           
  5913                           
  5914                           	psect	text32
  5915  0D6F                     __ptext32:	
  5916 ;; *************** function _Spi_Byte_Send *****************
  5917 ;; Defined at:
  5918 ;;		line 220 in file "utility.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  data            1    wreg     unsigned char 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  data            1    7[BANK0 ] unsigned char 
  5923 ;;  i               1    9[BANK0 ] unsigned char 
  5924 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      unsigned char 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0, pclath, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;Total ram usage:        4 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    5
  5941 ;; This function calls:
  5942 ;;		_Delay_ms
  5943 ;; This function is called by:
  5944 ;;		_Write_Adf7012_Reg
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           
  5949                           ;psect for function _Spi_Byte_Send
  5950  0D6F                     _Spi_Byte_Send:	
  5951                           
  5952                           ;incstack = 0
  5953                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  5954                           ;Spi_Byte_Send@data stored from wreg
  5955  0D6F  0020               	movlb	0	; select bank0
  5956  0D70  00A7               	movwf	Spi_Byte_Send@data
  5957                           
  5958                           ;utility.c: 222: PORTAbits.RA2 = 0;
  5959  0D71  110C               	bcf	12,2	;volatile
  5960                           
  5961                           ;utility.c: 223: uint8_t i;
  5962                           ;utility.c: 224: uint8_t data_to_send;
  5963                           ;utility.c: 225: data_to_send = data;
  5964  0D72  0827               	movf	Spi_Byte_Send@data,w
  5965  0D73  00A6               	movwf	??_Spi_Byte_Send
  5966  0D74  0826               	movf	??_Spi_Byte_Send,w
  5967  0D75  00A8               	movwf	Spi_Byte_Send@data_to_send
  5968                           
  5969                           ;utility.c: 226: for(i = 0; i <8; i++){
  5970  0D76  01A9               	clrf	Spi_Byte_Send@i
  5971  0D77                     L5:	
  5972  0D77  3008               	movlw	8
  5973  0D78  0229               	subwf	Spi_Byte_Send@i,w
  5974  0D79  1803               	btfsc	3,0
  5975  0D7A  0008               	return
  5976                           
  5977                           ;utility.c: 228: if(data_to_send & 0x80)
  5978  0D7B  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  5979  0D7C  2D7F               	goto	l233
  5980                           
  5981                           ;utility.c: 229: PORTCbits.RC2 = 1;
  5982  0D7D  150E               	bsf	14,2	;volatile
  5983  0D7E  2D80               	goto	l1699
  5984  0D7F                     l233:	
  5985                           
  5986                           ;utility.c: 230: else
  5987                           ;utility.c: 231: PORTCbits.RC2 = 0;
  5988  0D7F  110E               	bcf	14,2	;volatile
  5989  0D80                     l1699:	
  5990                           
  5991                           ;utility.c: 233: data_to_send <<= 1;
  5992  0D80  1003               	clrc
  5993  0D81  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  5994                           
  5995                           ;utility.c: 235: PORTAbits.RA2 = 1;
  5996  0D82  150C               	bsf	12,2	;volatile
  5997                           
  5998                           ;utility.c: 236: Delay_ms(1);
  5999  0D83  3001               	movlw	1
  6000  0D84  00A0               	movwf	Delay_ms@time_to_delay
  6001  0D85  3000               	movlw	0
  6002  0D86  00A1               	movwf	Delay_ms@time_to_delay+1
  6003  0D87  318D  2526  318D   	fcall	_Delay_ms
  6004                           
  6005                           ;utility.c: 237: PORTAbits.RA2 = 0;
  6006  0D8A  0020               	movlb	0	; select bank0
  6007  0D8B  110C               	bcf	12,2	;volatile
  6008                           
  6009                           ;utility.c: 238: Delay_ms(1);
  6010  0D8C  3001               	movlw	1
  6011  0D8D  00A0               	movwf	Delay_ms@time_to_delay
  6012  0D8E  3000               	movlw	0
  6013  0D8F  00A1               	movwf	Delay_ms@time_to_delay+1
  6014  0D90  318D  2526  318D   	fcall	_Delay_ms
  6015  0D93  3001               	movlw	1
  6016  0D94  0020               	movlb	0	; select bank0
  6017  0D95  00A6               	movwf	??_Spi_Byte_Send
  6018  0D96  0826               	movf	??_Spi_Byte_Send,w
  6019  0D97  07A9               	addwf	Spi_Byte_Send@i,f
  6020  0D98  2D77               	goto	L5
  6021  0D99                     __end_of_Spi_Byte_Send:	
  6022                           ;utility.c: 240: }
  6023                           ;utility.c: 241: return 1;
  6024                           ;	Return value of _Spi_Byte_Send is never used
  6025                           
  6026                           
  6027                           	psect	text33
  6028  0D26                     __ptext33:	
  6029 ;; *************** function _Delay_ms *****************
  6030 ;; Defined at:
  6031 ;;		line 44 in file "utility.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;  i               2    4[BANK0 ] unsigned int 
  6036 ;; Return value:  Size  Location     Type
  6037 ;;		None               void
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0, pclath, cstack
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6046 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6047 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6048 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6049 ;;Total ram usage:        6 bytes
  6050 ;; Hardware stack levels used:    1
  6051 ;; Hardware stack levels required when called:    4
  6052 ;; This function calls:
  6053 ;;		_Dac0_Start_Hold
  6054 ;; This function is called by:
  6055 ;;		_main
  6056 ;;		_Write_Adf7012_Reg
  6057 ;;		_Spi_Byte_Send
  6058 ;;		_Adf_Reset
  6059 ;;		_Adf_Lock
  6060 ;;		_Radio_Setup
  6061 ;;		_Ptt_On
  6062 ;;		_Ptt_Off
  6063 ;;		_Modem_Flush_Frame
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function _Delay_ms
  6069  0D26                     _Delay_ms:	
  6070                           
  6071                           ;utility.c: 46: uint16_t i=0;
  6072                           
  6073                           ;incstack = 0
  6074                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  6075  0D26  0020               	movlb	0	; select bank0
  6076  0D27  01A4               	clrf	Delay_ms@i
  6077  0D28  01A5               	clrf	Delay_ms@i+1
  6078                           
  6079                           ;utility.c: 48: Dac0_Start_Hold();
  6080  0D29  318B  23F0  318D   	fcall	_Dac0_Start_Hold
  6081                           
  6082                           ;utility.c: 49: for(i=0; i<time_to_delay; i++){
  6083  0D2C  0020               	movlb	0	; select bank0
  6084  0D2D  01A4               	clrf	Delay_ms@i
  6085  0D2E  01A5               	clrf	Delay_ms@i+1
  6086  0D2F                     l203:	
  6087  0D2F  0821               	movf	Delay_ms@time_to_delay+1,w
  6088  0D30  0225               	subwf	Delay_ms@i+1,w
  6089  0D31  1D03               	skipz
  6090  0D32  2D35               	goto	u1075
  6091  0D33  0820               	movf	Delay_ms@time_to_delay,w
  6092  0D34  0224               	subwf	Delay_ms@i,w
  6093  0D35                     u1075:	
  6094  0D35  1803               	btfsc	3,0
  6095  0D36  0008               	return
  6096                           
  6097                           ;utility.c: 50: _delay((unsigned long)((1)*(32000000/4000.0)));
  6098  0D37  300B               	movlw	11
  6099  0D38  00A3               	movwf	??_Delay_ms+1
  6100  0D39  3062               	movlw	98
  6101  0D3A  00A2               	movwf	??_Delay_ms
  6102  0D3B                     u2977:	
  6103  0D3B  0BA2               	decfsz	??_Delay_ms,f
  6104  0D3C  2D3B               	goto	u2977
  6105  0D3D  0BA3               	decfsz	??_Delay_ms+1,f
  6106  0D3E  2D3B               	goto	u2977
  6107  0D3F  0000               	nop
  6108  0D40  3001               	movlw	1
  6109  0D41  0020               	movlb	0	; select bank0
  6110  0D42  07A4               	addwf	Delay_ms@i,f
  6111  0D43  3000               	movlw	0
  6112  0D44  3DA5               	addwfc	Delay_ms@i+1,f
  6113  0D45  2D2F               	goto	l203
  6114  0D46                     __end_of_Delay_ms:	
  6115                           
  6116                           	psect	text34
  6117  0BF0                     __ptext34:	
  6118 ;; *************** function _Dac0_Start_Hold *****************
  6119 ;; Defined at:
  6120 ;;		line 275 in file "utility.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;		None
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;		None
  6125 ;; Return value:  Size  Location     Type
  6126 ;;		None               void
  6127 ;; Registers used:
  6128 ;;		wreg
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6138 ;;Total ram usage:        0 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; Hardware stack levels required when called:    3
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		_main
  6145 ;;		_Delay_ms
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           
  6150                           ;psect for function _Dac0_Start_Hold
  6151  0BF0                     _Dac0_Start_Hold:	
  6152                           
  6153                           ;utility.c: 276: DACEN = 1;
  6154                           
  6155                           ;incstack = 0
  6156                           ; Regs used in _Dac0_Start_Hold: [wreg]
  6157  0BF0  0022               	movlb	2	; select bank2
  6158  0BF1  1798               	bsf	24,7	;volatile
  6159                           
  6160                           ;utility.c: 277: DACCON1 = 0x10;
  6161  0BF2  3010               	movlw	16
  6162  0BF3  0099               	movwf	25	;volatile
  6163  0BF4  0008               	return
  6164  0BF5                     __end_of_Dac0_Start_Hold:	
  6165                           
  6166                           	psect	text35
  6167  0394                     __ptext35:	
  6168 ;; *************** function _Reverse_Array *****************
  6169 ;; Defined at:
  6170 ;;		line 198 in file "utility.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  input           1    wreg     PTR unsigned char 
  6173 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6174 ;;  length          1    7[BANK0 ] unsigned char 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  input           1   17[BANK0 ] PTR unsigned char 
  6177 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6178 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  6179 ;;  i               1   18[BANK0 ] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  1    wreg      unsigned char 
  6182 ;; Registers used:
  6183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6189 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6190 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6191 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6192 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;Total ram usage:       12 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    4
  6196 ;; This function calls:
  6197 ;;		_memcpy
  6198 ;; This function is called by:
  6199 ;;		_Adf_Write_Register_Zero
  6200 ;;		_Adf_Write_Register_One
  6201 ;;		_Adf_Write_Register_Two
  6202 ;;		_Adf_Write_Register_Three
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           
  6207                           ;psect for function _Reverse_Array
  6208  0394                     _Reverse_Array:	
  6209                           
  6210                           ;incstack = 0
  6211                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6212                           ;Reverse_Array@input stored from wreg
  6213  0394  0020               	movlb	0	; select bank0
  6214  0395  00B1               	movwf	Reverse_Array@input
  6215                           
  6216                           ;utility.c: 199: uint8_t i = 0;
  6217  0396  01B2               	clrf	Reverse_Array@i
  6218                           
  6219                           ;utility.c: 200: uint8_t buffer_array[4] = {0};
  6220  0397  0022               	movlb	2	; select bank2
  6221  0398  0823               	movf	(Reverse_Array@F3148+3)^(0+256),w
  6222  0399  0020               	movlb	0	; select bank0
  6223  039A  00B0               	movwf	Reverse_Array@buffer_array+3
  6224  039B  0022               	movlb	2	; select bank2
  6225  039C  0822               	movf	(Reverse_Array@F3148+2)^(0+256),w
  6226  039D  0020               	movlb	0	; select bank0
  6227  039E  00AF               	movwf	Reverse_Array@buffer_array+2
  6228  039F  0022               	movlb	2	; select bank2
  6229  03A0  0821               	movf	(Reverse_Array@F3148+1)^(0+256),w
  6230  03A1  0020               	movlb	0	; select bank0
  6231  03A2  00AE               	movwf	Reverse_Array@buffer_array+1
  6232  03A3  0022               	movlb	2	; select bank2
  6233  03A4  0820               	movf	Reverse_Array@F3148^(0+256),w
  6234  03A5  0020               	movlb	0	; select bank0
  6235  03A6  00AD               	movwf	Reverse_Array@buffer_array
  6236                           
  6237                           ;utility.c: 201: memcpy(buffer_array, input, length);
  6238  03A7  0831               	movf	Reverse_Array@input,w
  6239  03A8  00A8               	movwf	??_Reverse_Array
  6240  03A9  0828               	movf	??_Reverse_Array,w
  6241  03AA  00A0               	movwf	memcpy@s1
  6242  03AB  0827               	movf	Reverse_Array@length,w
  6243  03AC  00A9               	movwf	??_Reverse_Array+1
  6244  03AD  01AA               	clrf	??_Reverse_Array+2
  6245  03AE  0829               	movf	??_Reverse_Array+1,w
  6246  03AF  00A1               	movwf	memcpy@n
  6247  03B0  082A               	movf	??_Reverse_Array+2,w
  6248  03B1  00A2               	movwf	memcpy@n+1
  6249  03B2  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6250  03B3  318D  2546  3183   	fcall	_memcpy
  6251                           
  6252                           ;utility.c: 203: for(i = 0; i<length; i++){
  6253  03B6  0020               	movlb	0	; select bank0
  6254  03B7  01B2               	clrf	Reverse_Array@i
  6255  03B8                     l1755:	
  6256  03B8  0827               	movf	Reverse_Array@length,w
  6257  03B9  0232               	subwf	Reverse_Array@i,w
  6258  03BA  1803               	btfsc	3,0
  6259  03BB  0008               	return
  6260                           
  6261                           ;utility.c: 204: *(input+i) = *(buffer_array+(length-1)-i);
  6262  03BC  30FF               	movlw	-1
  6263  03BD  0727               	addwf	Reverse_Array@length,w
  6264  03BE  00A8               	movwf	??_Reverse_Array
  6265  03BF  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6266  03C0  0728               	addwf	??_Reverse_Array,w
  6267  03C1  00A9               	movwf	??_Reverse_Array+1
  6268  03C2  0332               	decf	Reverse_Array@i,w
  6269  03C3  3AFF               	xorlw	255
  6270  03C4  0729               	addwf	??_Reverse_Array+1,w
  6271  03C5  00AA               	movwf	??_Reverse_Array+2
  6272  03C6  082A               	movf	??_Reverse_Array+2,w
  6273  03C7  0086               	movwf	6
  6274  03C8  0187               	clrf	7
  6275  03C9  0801               	movf	1,w
  6276  03CA  00AB               	movwf	??_Reverse_Array+3
  6277  03CB  0832               	movf	Reverse_Array@i,w
  6278  03CC  0731               	addwf	Reverse_Array@input,w
  6279  03CD  00AC               	movwf	??_Reverse_Array+4
  6280  03CE  082C               	movf	??_Reverse_Array+4,w
  6281  03CF  0086               	movwf	6
  6282  03D0  0187               	clrf	7
  6283  03D1  082B               	movf	??_Reverse_Array+3,w
  6284  03D2  0081               	movwf	1
  6285  03D3  3001               	movlw	1
  6286  03D4  00A8               	movwf	??_Reverse_Array
  6287  03D5  0828               	movf	??_Reverse_Array,w
  6288  03D6  07B2               	addwf	Reverse_Array@i,f
  6289  03D7  2BB8               	goto	l1755
  6290  03D8                     __end_of_Reverse_Array:	
  6291                           ;utility.c: 205: }
  6292                           ;utility.c: 209: return 1;
  6293                           ;	Return value of _Reverse_Array is never used
  6294                           
  6295                           
  6296                           	psect	text36
  6297  0D46                     __ptext36:	
  6298 ;; *************** function _memcpy *****************
  6299 ;; Defined at:
  6300 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;  d1              1    wreg     PTR void 
  6303 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6304 ;;		 -> Reverse_Array@buffer_array(4), 
  6305 ;;  s1              1    0[BANK0 ] PTR const void 
  6306 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6307 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6308 ;;  n               2    1[BANK0 ] unsigned int 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  d1              1    6[BANK0 ] PTR void 
  6311 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6312 ;;		 -> Reverse_Array@buffer_array(4), 
  6313 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6314 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6315 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6316 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6317 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6318 ;;		 -> Reverse_Array@buffer_array(4), 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      PTR void 
  6321 ;; Registers used:
  6322 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6328 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;Total ram usage:        7 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    3
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_Reverse_Array
  6339 ;;		_Adf_Write_Register_Zero
  6340 ;;		_Adf_Write_Register_One
  6341 ;;		_Adf_Write_Register_Two
  6342 ;;		_Adf_Write_Register_Three
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           
  6347                           ;psect for function _memcpy
  6348  0D46                     _memcpy:	
  6349                           
  6350                           ;incstack = 0
  6351                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6352                           ;memcpy@d1 stored from wreg
  6353  0D46  0020               	movlb	0	; select bank0
  6354  0D47  00A6               	movwf	memcpy@d1
  6355  0D48  0820               	movf	memcpy@s1,w
  6356  0D49  00A3               	movwf	??_memcpy
  6357  0D4A  0823               	movf	??_memcpy,w
  6358  0D4B  00A5               	movwf	memcpy@s
  6359  0D4C  0826               	movf	memcpy@d1,w
  6360  0D4D  00A3               	movwf	??_memcpy
  6361  0D4E  0823               	movf	??_memcpy,w
  6362  0D4F  00A4               	movwf	memcpy@d
  6363  0D50                     l1721:	
  6364  0D50  3001               	movlw	1
  6365  0D51  02A1               	subwf	memcpy@n,f
  6366  0D52  3000               	movlw	0
  6367  0D53  3BA2               	subwfb	memcpy@n+1,f
  6368  0D54  30FF               	movlw	255
  6369  0D55  0622               	xorwf	memcpy@n+1,w
  6370  0D56  1D03               	skipz
  6371  0D57  2D5A               	goto	u1115
  6372  0D58  30FF               	movlw	255
  6373  0D59  0621               	xorwf	memcpy@n,w
  6374  0D5A                     u1115:	
  6375  0D5A  1903               	btfsc	3,2
  6376  0D5B  0008               	return
  6377  0D5C  0825               	movf	memcpy@s,w
  6378  0D5D  0086               	movwf	6
  6379  0D5E  0187               	clrf	7
  6380  0D5F  0801               	movf	1,w
  6381  0D60  00A3               	movwf	??_memcpy
  6382  0D61  0824               	movf	memcpy@d,w
  6383  0D62  0086               	movwf	6
  6384  0D63  0187               	clrf	7
  6385  0D64  0823               	movf	??_memcpy,w
  6386  0D65  0081               	movwf	1
  6387  0D66  3001               	movlw	1
  6388  0D67  00A3               	movwf	??_memcpy
  6389  0D68  0823               	movf	??_memcpy,w
  6390  0D69  07A5               	addwf	memcpy@s,f
  6391  0D6A  3001               	movlw	1
  6392  0D6B  00A3               	movwf	??_memcpy
  6393  0D6C  0823               	movf	??_memcpy,w
  6394  0D6D  07A4               	addwf	memcpy@d,f
  6395  0D6E  2D50               	goto	l1721
  6396  0D6F                     __end_of_memcpy:	
  6397                           ;	Return value of _memcpy is never used
  6398                           
  6399                           
  6400                           	psect	text37
  6401  0BE4                     __ptext37:	
  6402 ;; *************** function _Adf_Locked *****************
  6403 ;; Defined at:
  6404 ;;		line 270 in file "adf7012.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      unsigned char 
  6411 ;; Registers used:
  6412 ;;		wreg, pclath, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    4
  6425 ;; This function calls:
  6426 ;;		_Read_Adf7012_Muxout
  6427 ;; This function is called by:
  6428 ;;		_Adf_Lock
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function _Adf_Locked
  6434  0BE4                     _Adf_Locked:	
  6435                           
  6436                           ;adf7012.c: 272: return Read_Adf7012_Muxout();
  6437                           
  6438                           ;incstack = 0
  6439                           ; Regs used in _Adf_Locked: [wreg+pclath+cstack]
  6440  0BE4  318C  2418         	fcall	_Read_Adf7012_Muxout
  6441  0BE6  0008               	return
  6442  0BE7                     __end_of_Adf_Locked:	
  6443                           
  6444                           	psect	text38
  6445  0C18                     __ptext38:	
  6446 ;; *************** function _Read_Adf7012_Muxout *****************
  6447 ;; Defined at:
  6448 ;;		line 64 in file "utility.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;		None
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      unsigned char 
  6455 ;; Registers used:
  6456 ;;		wreg
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;Total ram usage:        0 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    3
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_Adf_Locked
  6473 ;;		_Ptt_On
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           
  6478                           ;psect for function _Read_Adf7012_Muxout
  6479  0C18                     _Read_Adf7012_Muxout:	
  6480                           
  6481                           ;utility.c: 66: if(PORTCbits.RC5)
  6482                           
  6483                           ;incstack = 0
  6484                           ; Regs used in _Read_Adf7012_Muxout: [wreg]
  6485  0C18  0020               	movlb	0	; select bank0
  6486  0C19  1E8E               	btfss	14,5	;volatile
  6487  0C1A  2C1D               	goto	l1861
  6488                           
  6489                           ;utility.c: 67: return 1;
  6490  0C1B  3001               	movlw	1
  6491  0C1C  0008               	return
  6492  0C1D                     l1861:	
  6493                           
  6494                           ;utility.c: 68: else
  6495                           ;utility.c: 69: return 0;
  6496  0C1D  3000               	movlw	0
  6497  0C1E  0008               	return
  6498  0C1F                     __end_of_Read_Adf7012_Muxout:	
  6499                           
  6500                           	psect	text39
  6501  0BFA                     __ptext39:	
  6502 ;; *************** function _Adc1_Start *****************
  6503 ;; Defined at:
  6504 ;;		line 286 in file "utility.c"
  6505 ;; Parameters:    Size  Location     Type
  6506 ;;		None
  6507 ;; Auto vars:     Size  Location     Type
  6508 ;;		None
  6509 ;; Return value:  Size  Location     Type
  6510 ;;		None               void
  6511 ;; Registers used:
  6512 ;;		None
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;Total ram usage:        0 bytes
  6523 ;; Hardware stack levels used:    1
  6524 ;; Hardware stack levels required when called:    3
  6525 ;; This function calls:
  6526 ;;		Nothing
  6527 ;; This function is called by:
  6528 ;;		_main
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           
  6533                           ;psect for function _Adc1_Start
  6534  0BFA                     _Adc1_Start:	
  6535                           
  6536                           ;utility.c: 287: ADIF = 0;
  6537                           
  6538                           ;incstack = 0
  6539                           ; Regs used in _Adc1_Start: []
  6540  0BFA  0020               	movlb	0	; select bank0
  6541  0BFB  1311               	bcf	17,6	;volatile
  6542                           
  6543                           ;utility.c: 288: ADON = 1;
  6544  0BFC  0021               	movlb	1	; select bank1
  6545  0BFD  141D               	bsf	29,0	;volatile
  6546                           
  6547                           ;utility.c: 289: ADIE = 1;
  6548  0BFE  1711               	bsf	17,6	;volatile
  6549  0BFF  0008               	return
  6550  0C00                     __end_of_Adc1_Start:	
  6551                           
  6552                           	psect	intentry
  6553  0004                     __pintentry:	
  6554 ;; *************** function _global_interrupt *****************
  6555 ;; Defined at:
  6556 ;;		line 42 in file "main.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;		None
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;		None               void
  6563 ;; Registers used:
  6564 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;Total ram usage:        2 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; Hardware stack levels required when called:    2
  6577 ;; This function calls:
  6578 ;;		_Sinus_Generator
  6579 ;; This function is called by:
  6580 ;;		Interrupt level 1
  6581 ;; This function uses a non-reentrant model
  6582 ;;
  6583                           
  6584  0004                     _global_interrupt:	
  6585                           
  6586                           ;incstack = 0
  6587                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6588  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6589  0005  3180               	pagesel	$
  6590  0006  0020               	movlb	0	; select bank0
  6591  0007  087F               	movf	127,w
  6592  0008  00F8               	movwf	??_global_interrupt+1
  6593                           
  6594                           ;main.c: 44: INTCON &= ~0x80;
  6595  0009  307F               	movlw	127
  6596  000A  00F7               	movwf	??_global_interrupt
  6597  000B  0877               	movf	??_global_interrupt,w
  6598  000C  058B               	andwf	11,f	;volatile
  6599                           
  6600                           ;main.c: 47: if(ADIF){
  6601  000D  1F11               	btfss	17,6	;volatile
  6602  000E  281B               	goto	i1l129
  6603                           
  6604                           ;main.c: 49: adc__high = ADRESH;
  6605  000F  0021               	movlb	1	; select bank1
  6606  0010  081C               	movf	28,w	;volatile
  6607  0011  00F7               	movwf	??_global_interrupt
  6608  0012  0877               	movf	??_global_interrupt,w
  6609  0013  00CF               	movwf	_adc__high^(0+128)
  6610                           
  6611                           ;main.c: 50: adc__low = ADRESL;
  6612  0014  081B               	movf	27,w	;volatile
  6613  0015  00F7               	movwf	??_global_interrupt
  6614  0016  0877               	movf	??_global_interrupt,w
  6615  0017  00D0               	movwf	_adc__low^(0+128)
  6616                           
  6617                           ;main.c: 52: ADIF = 0;
  6618  0018  0020               	movlb	0	; select bank0
  6619  0019  1311               	bcf	17,6	;volatile
  6620                           
  6621                           ;main.c: 54: return;
  6622  001A  2854               	goto	i1l130
  6623  001B                     i1l129:	
  6624                           
  6625                           ;main.c: 55: }
  6626                           ;main.c: 60: if(PIR1 & 0x04){
  6627  001B  1D11               	btfss	17,2	;volatile
  6628  001C  2849               	goto	i1l131
  6629                           
  6630                           ;main.c: 62: Change_to_New_Baud = 1;
  6631  001D  01EE               	clrf	_Change_to_New_Baud
  6632  001E  0AEE               	incf	_Change_to_New_Baud,f
  6633                           
  6634                           ;main.c: 66: TMR1H = 0x00;
  6635  001F  0197               	clrf	23	;volatile
  6636                           
  6637                           ;main.c: 67: TMR1L = 0x00;
  6638  0020  0196               	clrf	22	;volatile
  6639                           
  6640                           ;main.c: 69: PIR1 &= ~0x04;
  6641  0021  30FB               	movlw	251
  6642  0022  00F7               	movwf	??_global_interrupt
  6643  0023  0877               	movf	??_global_interrupt,w
  6644  0024  0591               	andwf	17,f	;volatile
  6645                           
  6646                           ;main.c: 71: Systick_Counter += 1;
  6647  0025  3001               	movlw	1
  6648  0026  0022               	movlb	2	; select bank2
  6649  0027  07AC               	addwf	_Systick_Counter^(0+256),f
  6650  0028  3000               	movlw	0
  6651  0029  3DAD               	addwfc	(_Systick_Counter+1)^(0+256),f
  6652  002A  3000               	movlw	0
  6653  002B  3DAE               	addwfc	(_Systick_Counter+2)^(0+256),f
  6654  002C  3000               	movlw	0
  6655  002D  3DAF               	addwfc	(_Systick_Counter+3)^(0+256),f
  6656                           
  6657                           ;main.c: 72: if(Systick_Counter > 100000){
  6658  002E  3000               	movlw	0
  6659  002F  022F               	subwf	(_Systick_Counter+3)^(0+256),w
  6660  0030  1D03               	skipz
  6661  0031  283C               	goto	u238_25
  6662  0032  3001               	movlw	1
  6663  0033  022E               	subwf	(_Systick_Counter+2)^(0+256),w
  6664  0034  1D03               	skipz
  6665  0035  283C               	goto	u238_25
  6666  0036  3086               	movlw	134
  6667  0037  022D               	subwf	(_Systick_Counter+1)^(0+256),w
  6668  0038  1D03               	skipz
  6669  0039  283C               	goto	u238_25
  6670  003A  30A1               	movlw	161
  6671  003B  022C               	subwf	_Systick_Counter^(0+256),w
  6672  003C                     u238_25:	
  6673  003C  1C03               	skipc
  6674  003D  2854               	goto	i1l130
  6675                           
  6676                           ;main.c: 73: Systick_Counter = 0;
  6677  003E  3000               	movlw	0
  6678  003F  00AF               	movwf	(_Systick_Counter+3)^(0+256)
  6679  0040  3000               	movlw	0
  6680  0041  00AE               	movwf	(_Systick_Counter+2)^(0+256)
  6681  0042  3000               	movlw	0
  6682  0043  00AD               	movwf	(_Systick_Counter+1)^(0+256)
  6683  0044  3000               	movlw	0
  6684  0045  00AC               	movwf	_Systick_Counter^(0+256)
  6685                           
  6686                           ;main.c: 74: ADCON0 |= 0b00000010;
  6687  0046  0021               	movlb	1	; select bank1
  6688  0047  149D               	bsf	29,1	;volatile
  6689                           
  6690                           ;main.c: 75: }
  6691                           ;main.c: 77: return;
  6692  0048  2854               	goto	i1l130
  6693  0049                     i1l131:	
  6694                           
  6695                           ;main.c: 78: }
  6696                           ;main.c: 82: if(INTCON & 0x04){
  6697  0049  1D0B               	btfss	11,2	;volatile
  6698  004A  2853               	goto	i1l133
  6699                           
  6700                           ;main.c: 84: Sinus_Generator();
  6701  004B  3185  257B  3180   	fcall	_Sinus_Generator
  6702                           
  6703                           ;main.c: 86: INTCON &= ~0x04;
  6704  004E  30FB               	movlw	251
  6705  004F  00F7               	movwf	??_global_interrupt
  6706  0050  0877               	movf	??_global_interrupt,w
  6707  0051  058B               	andwf	11,f	;volatile
  6708                           
  6709                           ;main.c: 88: return;
  6710  0052  2854               	goto	i1l130
  6711  0053                     i1l133:	
  6712                           
  6713                           ;main.c: 89: }
  6714                           ;main.c: 94: INTCON |= 0x80;
  6715  0053  178B               	bsf	11,7	;volatile
  6716  0054                     i1l130:	
  6717  0054  0878               	movf	??_global_interrupt+1,w
  6718  0055  0020               	movlb	0	; select bank0
  6719  0056  00FF               	movwf	127
  6720  0057  107E               	bcf	126,0	;clear compiler interrupt flag
  6721  0058  0009               	retfie
  6722  0059                     __end_of_global_interrupt:	
  6723                           
  6724                           	psect	text41
  6725  057B                     __ptext41:	
  6726 ;; *************** function _Sinus_Generator *****************
  6727 ;; Defined at:
  6728 ;;		line 84 in file "audio_tone.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;		None
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  6733 ;; Return value:  Size  Location     Type
  6734 ;;		None               void
  6735 ;; Registers used:
  6736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6744 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6746 ;;Total ram usage:        6 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; Hardware stack levels required when called:    1
  6749 ;; This function calls:
  6750 ;;		_Send_Vcxo_Signal
  6751 ;;		_Timer0_Stop
  6752 ;; This function is called by:
  6753 ;;		_global_interrupt
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           
  6758                           ;psect for function _Sinus_Generator
  6759  057B                     _Sinus_Generator:	
  6760                           
  6761                           ;audio_tone.c: 86: uint8_t Audio_Signal;
  6762                           ;audio_tone.c: 87: static uint8_t tone_index = 0;
  6763                           ;audio_tone.c: 88: if (MODEM_TRANSMITTING == 1) {
  6764                           
  6765                           ;incstack = 0
  6766                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6767  057B  0021               	movlb	1	; select bank1
  6768  057C  084C               	movf	_MODEM_TRANSMITTING^(0+128),w
  6769  057D  3A01               	xorlw	1
  6770  057E  1D03               	skipz
  6771  057F  0008               	return
  6772                           
  6773                           ;audio_tone.c: 90: if (packet_pos == modem_packet_size) {
  6774  0580  087C               	movf	_modem_packet_size+3,w
  6775  0581  0022               	movlb	2	; select bank2
  6776  0582  0633               	xorwf	(_packet_pos+3)^(0+256),w
  6777  0583  1D03               	skipz
  6778  0584  2D8F               	goto	u178_25
  6779  0585  087B               	movf	_modem_packet_size+2,w
  6780  0586  0632               	xorwf	(_packet_pos+2)^(0+256),w
  6781  0587  1D03               	skipz
  6782  0588  2D8F               	goto	u178_25
  6783  0589  087A               	movf	_modem_packet_size+1,w
  6784  058A  0631               	xorwf	(_packet_pos+1)^(0+256),w
  6785  058B  1D03               	skipz
  6786  058C  2D8F               	goto	u178_25
  6787  058D  0879               	movf	_modem_packet_size,w
  6788  058E  0630               	xorwf	_packet_pos^(0+256),w
  6789  058F                     u178_25:	
  6790  058F  1D03               	skipz
  6791  0590  2D9D               	goto	i1l2015
  6792                           
  6793                           ;audio_tone.c: 91: MODEM_TRANSMITTING = 0;
  6794  0591  0021               	movlb	1	; select bank1
  6795  0592  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  6796                           
  6797                           ;audio_tone.c: 92: Timer0_Stop();
  6798  0593  318B  23E7  3185   	fcall	_Timer0_Stop
  6799                           
  6800                           ;audio_tone.c: 94: Send_Vcxo_Signal(0x10);
  6801  0596  3010               	movlw	16
  6802  0597  318B  23EB         	fcall	_Send_Vcxo_Signal
  6803                           
  6804                           ;audio_tone.c: 96: PTT_OFF = 1;
  6805  0599  0021               	movlb	1	; select bank1
  6806  059A  01CD               	clrf	_PTT_OFF^(0+128)
  6807  059B  0ACD               	incf	_PTT_OFF^(0+128),f
  6808                           
  6809                           ;audio_tone.c: 98: goto end_generator;
  6810  059C  0008               	return
  6811  059D                     i1l2015:	
  6812                           
  6813                           ;audio_tone.c: 99: }
  6814                           ;audio_tone.c: 102: if (current_sample_in_baud == 0) {
  6815  059D  0021               	movlb	1	; select bank1
  6816  059E  08D1               	movf	_current_sample_in_baud^(0+128),f
  6817  059F  1D03               	skipz
  6818  05A0  2DE8               	goto	i1l2035
  6819                           
  6820                           ;audio_tone.c: 103: if ((packet_pos & 7) == 0)
  6821  05A1  3007               	movlw	7
  6822  05A2  0022               	movlb	2	; select bank2
  6823  05A3  0530               	andwf	_packet_pos^(0+256),w
  6824  05A4  00F1               	movwf	??_Sinus_Generator
  6825  05A5  3000               	movlw	0
  6826  05A6  0531               	andwf	(_packet_pos+1)^(0+256),w
  6827  05A7  00F2               	movwf	??_Sinus_Generator+1
  6828  05A8  3000               	movlw	0
  6829  05A9  0532               	andwf	(_packet_pos+2)^(0+256),w
  6830  05AA  00F3               	movwf	??_Sinus_Generator+2
  6831  05AB  3000               	movlw	0
  6832  05AC  0533               	andwf	(_packet_pos+3)^(0+256),w
  6833  05AD  00F4               	movwf	??_Sinus_Generator+3
  6834  05AE  0874               	movf	??_Sinus_Generator+3,w
  6835  05AF  0473               	iorwf	??_Sinus_Generator+2,w
  6836  05B0  0472               	iorwf	??_Sinus_Generator+1,w
  6837  05B1  0471               	iorwf	??_Sinus_Generator,w
  6838  05B2  1D03               	skipz
  6839  05B3  2DCD               	goto	i1l2021
  6840                           
  6841                           ;audio_tone.c: 104: current_byte = modem_packet[packet_pos >> 3];
  6842  05B4  0830               	movf	_packet_pos^(0+256),w
  6843  05B5  00F1               	movwf	??_Sinus_Generator
  6844  05B6  0831               	movf	(_packet_pos+1)^(0+256),w
  6845  05B7  00F2               	movwf	??_Sinus_Generator+1
  6846  05B8  0832               	movf	(_packet_pos+2)^(0+256),w
  6847  05B9  00F3               	movwf	??_Sinus_Generator+2
  6848  05BA  0833               	movf	(_packet_pos+3)^(0+256),w
  6849  05BB  00F4               	movwf	??_Sinus_Generator+3
  6850  05BC  3003               	movlw	3
  6851  05BD                     u181_25:	
  6852  05BD  36F4               	lsrf	??_Sinus_Generator+3,f
  6853  05BE  0CF3               	rrf	??_Sinus_Generator+2,f
  6854  05BF  0CF2               	rrf	??_Sinus_Generator+1,f
  6855  05C0  0CF1               	rrf	??_Sinus_Generator,f
  6856  05C1  0B89               	decfsz	9,f
  6857  05C2  2DBD               	goto	u181_25
  6858  05C3  0871               	movf	??_Sinus_Generator,w
  6859  05C4  3EA0               	addlw	_modem_packet& (0+255)
  6860  05C5  0086               	movwf	6
  6861  05C6  3001               	movlw	1	; select bank3/4
  6862  05C7  0087               	movwf	7
  6863  05C8  0801               	movf	1,w
  6864  05C9  00F5               	movwf	??_Sinus_Generator+4
  6865  05CA  0875               	movf	??_Sinus_Generator+4,w
  6866  05CB  0020               	movlb	0	; select bank0
  6867  05CC  2DD1               	goto	L6
  6868  05CD                     i1l2021:	
  6869                           
  6870                           ;audio_tone.c: 105: else
  6871                           ;audio_tone.c: 106: current_byte = current_byte >> 1 ;
  6872  05CD  0020               	movlb	0	; select bank0
  6873  05CE  366F               	lsrf	_current_byte,w
  6874  05CF  00F1               	movwf	??_Sinus_Generator
  6875  05D0  0871               	movf	??_Sinus_Generator,w
  6876  05D1                     L6:	
  6877  05D1  00EF               	movwf	_current_byte
  6878                           
  6879                           ;audio_tone.c: 107: if ((current_byte & 0x01) == 0) {
  6880  05D2  186F               	btfsc	_current_byte,0
  6881  05D3  2DE8               	goto	i1l2035
  6882                           
  6883                           ;audio_tone.c: 109: if(tone_index){
  6884  05D4  0021               	movlb	1	; select bank1
  6885  05D5  084B               	movf	Sinus_Generator@tone_index^(0+128),w
  6886  05D6  1903               	btfsc	3,2
  6887  05D7  2DE0               	goto	i1l2031
  6888                           
  6889                           ;audio_tone.c: 110: phase_delta = PHASE_DELTA_1200;
  6890  05D8  0022               	movlb	2	; select bank2
  6891  05D9  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  6892  05DA  00F1               	movwf	??_Sinus_Generator
  6893  05DB  0871               	movf	??_Sinus_Generator,w
  6894  05DC  0021               	movlb	1	; select bank1
  6895  05DD  00D2               	movwf	_phase_delta^(0+128)
  6896                           
  6897                           ;audio_tone.c: 111: tone_index = 0;
  6898  05DE  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6899                           
  6900                           ;audio_tone.c: 112: }
  6901  05DF  2DE8               	goto	i1l2035
  6902  05E0                     i1l2031:	
  6903                           
  6904                           ;audio_tone.c: 113: else{
  6905                           ;audio_tone.c: 114: phase_delta = PHASE_DELTA_2200;
  6906  05E0  0022               	movlb	2	; select bank2
  6907  05E1  0828               	movf	_PHASE_DELTA_2200^(0+256),w
  6908  05E2  00F1               	movwf	??_Sinus_Generator
  6909  05E3  0871               	movf	??_Sinus_Generator,w
  6910  05E4  0021               	movlb	1	; select bank1
  6911  05E5  00D2               	movwf	_phase_delta^(0+128)
  6912                           
  6913                           ;audio_tone.c: 115: tone_index = 1;
  6914  05E6  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6915  05E7  0ACB               	incf	Sinus_Generator@tone_index^(0+128),f
  6916  05E8                     i1l2035:	
  6917                           
  6918                           ;audio_tone.c: 116: }
  6919                           ;audio_tone.c: 117: }
  6920                           ;audio_tone.c: 118: }
  6921                           ;audio_tone.c: 120: phase += phase_delta;
  6922  05E8  0021               	movlb	1	; select bank1
  6923  05E9  0852               	movf	_phase_delta^(0+128),w
  6924  05EA  00F1               	movwf	??_Sinus_Generator
  6925  05EB  0871               	movf	??_Sinus_Generator,w
  6926  05EC  07FD               	addwf	_phase,f
  6927                           
  6928                           ;audio_tone.c: 121: if(phase >= TABLE_SIZE)
  6929  05ED  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6930  05EE  0084               	movwf	4
  6931  05EF  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6932  05F0  0085               	movwf	5
  6933  05F1  3F00               	moviw [0]fsr0
  6934  05F2  00F1               	movwf	??_Sinus_Generator
  6935  05F3  3F01               	moviw [1]fsr0
  6936  05F4  00F2               	movwf	??_Sinus_Generator+1
  6937  05F5  0872               	movf	??_Sinus_Generator+1,w
  6938  05F6  3A80               	xorlw	128
  6939  05F7  3C80               	sublw	128
  6940  05F8  1D03               	skipz
  6941  05F9  2DFC               	goto	u184_25
  6942  05FA  0871               	movf	??_Sinus_Generator,w
  6943  05FB  027D               	subwf	_phase,w
  6944  05FC                     u184_25:	
  6945  05FC  1C03               	skipc
  6946  05FD  2E09               	goto	i1l2041
  6947                           
  6948                           ;audio_tone.c: 122: phase = phase - TABLE_SIZE;
  6949  05FE  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6950  05FF  0084               	movwf	4
  6951  0600  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6952  0601  0085               	movwf	5
  6953  0602  0800               	movf	0,w	;code access
  6954  0603  3AFF               	xorlw	255
  6955  0604  3E01               	addlw	1
  6956  0605  077D               	addwf	_phase,w
  6957  0606  00F1               	movwf	??_Sinus_Generator
  6958  0607  0871               	movf	??_Sinus_Generator,w
  6959  0608  00FD               	movwf	_phase
  6960  0609                     i1l2041:	
  6961                           
  6962                           ;audio_tone.c: 125: Audio_Signal = *(sine_table2 + phase);
  6963  0609  087D               	movf	_phase,w
  6964  060A  3E00               	addlw	low (_sine_table2| (0+32768))
  6965  060B  0084               	movwf	4
  6966  060C  3084               	movlw	high (_sine_table2| (0+32768))
  6967  060D  1803               	skipnc
  6968  060E  3E01               	addlw	1
  6969  060F  0085               	movwf	5
  6970  0610  0800               	movf	0,w	;code access
  6971  0611  00F1               	movwf	??_Sinus_Generator
  6972  0612  0871               	movf	??_Sinus_Generator,w
  6973  0613  00F6               	movwf	Sinus_Generator@Audio_Signal
  6974                           
  6975                           ;audio_tone.c: 126: Send_Vcxo_Signal(Audio_Signal);
  6976  0614  0876               	movf	Sinus_Generator@Audio_Signal,w
  6977  0615  318B  23EB  3185   	fcall	_Send_Vcxo_Signal
  6978                           
  6979                           ;audio_tone.c: 128: current_sample_in_baud++;
  6980  0618  3001               	movlw	1
  6981  0619  00F1               	movwf	??_Sinus_Generator
  6982  061A  0871               	movf	??_Sinus_Generator,w
  6983  061B  0021               	movlb	1	; select bank1
  6984  061C  07D1               	addwf	_current_sample_in_baud^(0+128),f
  6985                           
  6986                           ;audio_tone.c: 130: if(Change_to_New_Baud == 1) {
  6987  061D  0020               	movlb	0	; select bank0
  6988  061E  086E               	movf	_Change_to_New_Baud,w
  6989  061F  3A01               	xorlw	1
  6990  0620  1D03               	skipz
  6991  0621  0008               	return
  6992                           
  6993                           ;audio_tone.c: 131: current_sample_in_baud = 0;
  6994  0622  0021               	movlb	1	; select bank1
  6995  0623  01D1               	clrf	_current_sample_in_baud^(0+128)
  6996                           
  6997                           ;audio_tone.c: 132: packet_pos++;
  6998  0624  3001               	movlw	1
  6999  0625  0022               	movlb	2	; select bank2
  7000  0626  07B0               	addwf	_packet_pos^(0+256),f
  7001  0627  3000               	movlw	0
  7002  0628  3DB1               	addwfc	(_packet_pos+1)^(0+256),f
  7003  0629  3000               	movlw	0
  7004  062A  3DB2               	addwfc	(_packet_pos+2)^(0+256),f
  7005  062B  3000               	movlw	0
  7006  062C  3DB3               	addwfc	(_packet_pos+3)^(0+256),f
  7007                           
  7008                           ;audio_tone.c: 133: Change_to_New_Baud = 0;
  7009  062D  0020               	movlb	0	; select bank0
  7010  062E  01EE               	clrf	_Change_to_New_Baud
  7011                           
  7012                           ;audio_tone.c: 134: }
  7013                           ;audio_tone.c: 136: }
  7014                           ;audio_tone.c: 138: end_generator:
  7015  062F  0008               	return
  7016  0630                     __end_of_Sinus_Generator:	
  7017                           ;audio_tone.c: 140: return;
  7018                           
  7019                           
  7020                           	psect	text42
  7021  0BE7                     __ptext42:	
  7022 ;; *************** function _Timer0_Stop *****************
  7023 ;; Defined at:
  7024 ;;		line 249 in file "utility.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;		None               void
  7031 ;; Registers used:
  7032 ;;		status,2
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;Total ram usage:        0 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_Sinus_Generator
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           
  7052                           ;psect for function _Timer0_Stop
  7053  0BE7                     _Timer0_Stop:	
  7054                           
  7055                           ;utility.c: 250: TMR0IE = 0;
  7056                           
  7057                           ;incstack = 0
  7058                           ; Regs used in _Timer0_Stop: [status,2]
  7059  0BE7  128B               	bcf	11,5	;volatile
  7060                           
  7061                           ;utility.c: 251: TMR0 = 0x00;
  7062  0BE8  0020               	movlb	0	; select bank0
  7063  0BE9  0195               	clrf	21	;volatile
  7064  0BEA  0008               	return
  7065  0BEB                     __end_of_Timer0_Stop:	
  7066                           
  7067                           	psect	text43
  7068  0BEB                     __ptext43:	
  7069 ;; *************** function _Send_Vcxo_Signal *****************
  7070 ;; Defined at:
  7071 ;;		line 108 in file "utility.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  value           1    wreg     unsigned char 
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;  value           1    0[COMMON] unsigned char 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      unsigned char 
  7078 ;; Registers used:
  7079 ;;		wreg
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;Total ram usage:        1 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; This function calls:
  7092 ;;		Nothing
  7093 ;; This function is called by:
  7094 ;;		_Sinus_Generator
  7095 ;; This function uses a non-reentrant model
  7096 ;;
  7097                           
  7098                           
  7099                           ;psect for function _Send_Vcxo_Signal
  7100  0BEB                     _Send_Vcxo_Signal:	
  7101                           
  7102                           ;incstack = 0
  7103                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  7104                           ;Send_Vcxo_Signal@value stored from wreg
  7105  0BEB  00F0               	movwf	Send_Vcxo_Signal@value
  7106                           
  7107                           ;utility.c: 110: DACCON1 = value;
  7108  0BEC  0870               	movf	Send_Vcxo_Signal@value,w
  7109  0BED  0022               	movlb	2	; select bank2
  7110  0BEE  0099               	movwf	25	;volatile
  7111  0BEF  0008               	return
  7112  0BF0                     __end_of_Send_Vcxo_Signal:	
  7113                           ;utility.c: 111: return 1;
  7114                           ;	Return value of _Send_Vcxo_Signal is never used
  7115                           
  7116  007E                     btemp	set	126	;btemp
  7117  007E                     pic14e$flags	set	126
  7118  007E                     wtemp	set	126
  7119  007E                     wtemp0	set	126
  7120  0080                     wtemp1	set	128
  7121  0082                     wtemp2	set	130
  7122  0084                     wtemp3	set	132
  7123  0086                     wtemp4	set	134
  7124  0088                     wtemp5	set	136
  7125  007F                     wtemp6	set	127
  7126  007E                     ttemp	set	126
  7127  007E                     ttemp0	set	126
  7128  0081                     ttemp1	set	129
  7129  0084                     ttemp2	set	132
  7130  0087                     ttemp3	set	135
  7131  007F                     ttemp4	set	127
  7132  007E                     ltemp	set	126
  7133  007E                     ltemp0	set	126
  7134  0082                     ltemp1	set	130
  7135  0086                     ltemp2	set	134
  7136  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     78      80
    BANK1            80     28      79
    BANK2            80      0      36
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Adf_Lock
    _main->_Modem_Flush_Frame
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  100562
                                             77 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                           _Adf_Lock
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   23689
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   25114
                    _Configure_Audio
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   25114
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1425
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1425
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Configure_Audio                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   25114
                                             76 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ptt_On                                               1     1      0   23689
                                             75 BANK0      1     1      0
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (1) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adf_Lock                                             6     6      0   23780
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   22264
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    5566
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    5566
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    5566
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    5566
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    3353
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1517
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1425
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (3) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1332
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _Adf_Locked                                           0     0      0       0
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (3) _Read_Adf7012_Muxout                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _global_interrupt                                     2     2      0      45
                                              7 COMMON     2     2      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (10) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (11) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Adf_Lock
     _Adf_Locked
       _Read_Adf7012_Muxout
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
     _Timer0_Start
   _Modem_Setup
     _Configure_Audio
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _Sinus_Generator
     _Send_Vcxo_Signal
     _Timer0_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      24       9       45.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     111      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     111      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Oct 01 12:33:51 2014

                      __CFG_CP$OFF 0000            _Adf_Reset_Register_Zero 0D07  
                   Reverse_Array@i 0032                     Spi_Byte_Send@i 0029  
         __end_of_Adf_Reset_Config 0C48                        __CFG_LVP$ON 0000  
         _Adf_Reset_Register_Three 03D8                                l203 0D2F  
                              l233 0D7F                                l139 06E7  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00C7                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 0033  
                     __CFG_IESO$ON 0000                      ??_Gpio_Config 0020  
           _Adf_Write_Register_One 0EA1             _Adf_Write_Register_Two 04C4  
                             l2203 0CED                               l2153 0214  
                             l2171 0248                               l2245 0F44  
                             l2165 0235                               l2159 0227  
                             l1721 0D50                               l2185 028A  
                             l2193 024B                               l2195 02C5  
                             l2179 0265                               l2451 075B  
                             l1901 06DE                               l2189 02AB  
                             l2445 0752                               l1735 0E42  
                             l2455 0766                               l1737 0E56  
                             l1755 03B8                               l1851 0DE6  
                             l1861 0C1D                               l1699 0D80  
                             l1891 06A0                               l1971 0FD1  
                             l1973 0FF3                               l1995 07C1  
                             l1997 07E3                               _ADIE 048E  
                             _ADIF 008E                               _ADFM 04F7  
                             _ADON 04E8                               STR_1 04BE  
                     __CFG_WDTE$ON 0000                               u1115 0D5A  
                             u1205 033C                               u1215 0EAA  
                             u1225 0EB8                               u1305 0092  
                             u1145 02D6                               u1075 0D35  
                             u1235 0ED2                               u1315 00A1  
                             u1155 02E5                               u1405 0128  
                             u1325 00B0                               u1245 04CD  
                             u1165 02F4                               u1415 0137  
                             u1335 00BF                               u1255 04DC  
                             u1175 0303                               u1425 0146  
                             u1345 00CE                               u1265 04F6  
                             u1185 0312                               u1505 0663  
                             u1514 066C                               u2410 0724  
                             u1435 0155                               u1355 00DD  
                             u1275 0505                               u1195 0321  
                             u1515 066B                               u1365 00EC  
                             u1285 0514                               u1525 0679  
                             u1605 0FA3                               u1614 0FAB  
                             u1375 00FB                               u1295 0523  
                             u1535 069E                               u1615 0FAA  
                             u1704 079B                               u1385 010A  
                             u1705 079A                               u1545 06AE  
                             u1554 06B8                               u1474 0644  
                             u1634 0FB6                               u1395 0119  
                             u1555 06B7                               u1475 0643  
                             u1635 0FB5                               u1724 07A6  
                             u1484 0651                               u1725 07A5  
                             u1565 06C6                               u1485 0650  
                             u1645 0FC3                               u1654 0FD8  
                             u1735 07B3                               u1655 0FD7  
                             u1744 07C8                               u1745 07C7  
                             u1665 0FE6                               u1905 0263  
                             u1755 07D6                               u1915 0269  
                             u1925 0288                               u1695 0793  
                             u1935 0297                               u1945 029C  
                             u1865 0212                               u1955 02AF  
                             u1875 0225                               u1965 0255  
                             u1885 0233                               u1895 0246  
                             u1985 0CDF                               u2977 0D3B  
                             _PIR1 0011                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 06E4                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    Send_Byte@byte 0029                      __CFG_BOREN$ON 0000  
                             ltemp 007E                               start 0059  
                             ttemp 007E                    _Sinus_Generator 057B  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
          _Adf_Write_Register_Zero 02CD                        ?_Adc1_Start 0070  
                     Adf_Lock@bias 00DD                 main@beacon_address 00DF  
                    __CFG_PLLEN$ON 0000                    __end_of_Ptt_Off 0C67  
                    ??_Radio_Setup 006B                              _ADCS0 04F4  
                            _ADCS1 04F5                              _ADCS2 04F6  
                            ?_main 0070                              _DACEN 08C7  
                            _DACOE 08C5                              _ANSA1 0C61  
                            i1l130 0054                              i1l131 0049  
                            i1l133 0053                              i1l129 001B  
                            _TMR1H 0017                              _TMR1L 0016  
                            _TRISA 008C                              _TRISC 008E  
       Write_Adf7012_Reg@reg_value 002C                              _phase 007D  
                 __end_of_Adf_Lock 0F87                      ??_Modem_Setup 006B  
                __end_of_BAUD_RATE 04BC                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                 __size_of_Adf_Reset 0012  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 0C1F  
                            wtemp6 007F                __end_of_Gpio_Config 0C9F  
                 __end_of_Delay_ms 0D46                        ?_Adf_Locked 0070  
                  _Configure_Audio 0C9F             _current_sample_in_baud 00D1  
                Spi_Byte_Send@data 0027                         Send_Byte@i 002A  
                  __initialization 005B          ??_Adf_Reset_Register_Zero 0020  
        __size_of_Ax25_Send_Header 00D8              __size_of_System_Start 003B  
                     __end_of_main 0774          __size_of_Ax25_Send_Footer 001B  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 03D8  
         _Adf_Write_Register_Three 0089              __end_of_Spi_Byte_Send 0D99  
                           ??_main 006D          __size_of_Send_Vcxo_Signal 0005  
              __end_of_Radio_Setup 0C39       __size_of_Read_Adf7012_Muxout 0007  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _CCP1IF 008A  
                           _DACNSS 08C0                             _ADNREF 04F2  
                           _ADRESH 009C                             _ADRESL 009B  
                           _CCPR1H 0292                             _CCPR1L 0291  
          __end_of_Sinus_Generator 0630      Adf_Write_Register_One@reg_ptr 0043  
                           i1l2021 05CD                             i1l2031 05E0  
                           i1l2015 059D                             i1l2041 0609  
                           i1l2035 05E8                             _INTCON 000B  
                           u181_25 05BD                             u238_25 003C  
              __size_of_Adc1_Start 0006                             u184_25 05FC  
                           u178_25 058F                 Reverse_Array@F3148 0120  
                           _OSCCON 0099           __size_of_Dac0_Start_Hold 0005  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1IE 0488                             _TMR1IF 0088  
                           _TMR1ON 00C0                       _System_Start 0E66  
                           _WDTPS0 04B9                             _WDTPS1 04BA  
                           _WDTPS2 04BB                             _WDTPS3 04BC  
                           _WDTPS4 04BD                __end_of_Modem_Setup 0C0C  
                   __CFG_PWRTE$OFF 0000                      ??_Timer0_Stop 0070  
        ??_Adf_Write_Register_Zero 0033                             _Ptt_On 0DF7  
                        ??_Ptt_Off 006B                 __size_of_Send_Byte 00B4  
               Reverse_Array@input 0031                     __CFG_STVREN$ON 0000  
                 ??_Ax25_Send_Flag 0020                   ??_Ax25_Send_Byte 002C  
                           _memcpy 0D46                   ??_Ax25_Send_Sync 0020  
                __end_of_Adf_Reset 0C8A                         _Update_Crc 0DC5  
              __size_of_Adf_Locked 0003                        _Gpio_Config 0C8A  
          __end_of_Configure_Audio 0CB7            __end_of__initialization 0085  
        __size_of_global_interrupt 0055                 Write_Adf7012_Reg@i 002D  
       ??_Adf_Reset_Register_Three 0020                     __pcstackCOMMON 0070  
         ??_Adf_Reset_Register_One 0020                       __pidataBANK2 07F0  
         ??_Adf_Reset_Register_Two 0020                         _adf_config 00A0  
              __end_of_Timer0_Stop 0BEB                      _PLAYBACK_RATE 04B6  
                        ?_Adf_Lock 0070                  ?_Adf_Reset_Config 0070  
                      _Radio_Setup 0C2B            ?_Adf_Write_Register_One 0070  
          ?_Adf_Write_Register_Two 0070          Spi_Byte_Send@data_to_send 0028  
               ??_Adf_Reset_Config 0026                          ?_Delay_ms 0020  
                __end_of_Send_Byte 06E4                   _PHASE_DELTA_1200 0124  
                 _PHASE_DELTA_2200 0128                        _Modem_Setup 0C06  
                       __pbssBANK0 006E                         __pbssBANK1 00A0  
                       __pbssBANK2 0120                         __pbssBANK3 01A0  
                 ?_Sinus_Generator 0070                 Ax25_Send_Flag@byte 0026  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 00D7  
                    ?_Timer1_Start 0070                         __pmaintext 06E4  
                 _Ax25_Send_Header 01F5                            ?_Ptt_On 0070  
                ??_Dac0_Start_Hold 0020                 __end_of_TABLE_SIZE 04BE  
                 _Ax25_Send_Footer 0CCF                         __pintentry 0004  
                     ??_Adc1_Start 0020                            _DACCON1 0119  
               Ax25_Send_Byte@byte 002C                            _DACPSS0 08C2  
                          _DACPSS1 08C3                            ?_memcpy 0020  
                 _Ax25_Send_String 0CEA                            _ADPREF0 04F0  
                          _ADPREF1 04F1                         ??_Adf_Lock 006B  
   __end_of_Adf_Write_Register_One 0F12     __end_of_Adf_Write_Register_Two 057B  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                 _Send_Vcxo_Signal 0BEB           __end_of_Adf_Write_Config 0C2B  
                      ?_Update_Crc 0070                         ??_Delay_ms 0022  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _PTT_OFF 00CD                Update_Crc@input_bit 0022  
                 ?_Configure_Audio 0070      Adf_Write_Register_Two@reg_ptr 004B  
   Adf_Write_Register_Zero@reg_ptr 004F                 __end_of_Adc1_Start 0C00  
                   ??_Timer0_Start 0020                     ??_Timer1_Start 0020  
                        _BAUD_RATE 04BA                       ??_Adf_Locked 0020  
       ??_Adf_Write_Register_Three 0033                        _Timer0_Stop 0BE7  
                       _packet_pos 0130                            _Ptt_Off 0C57  
                  __size_of_Ptt_On 0036                _Read_Adf7012_Muxout 0C18  
  __size_of_Adf_Reset_Register_One 0011    __size_of_Adf_Reset_Register_Two 0018  
               Ax25_Send_Sync@byte 0026                Reverse_Array@length 0027  
                  Ax25_Send_Flag@i 0027                    __size_of_memcpy 0029  
                          __ptext1 0C48                            __ptext2 0E66  
                          __ptext3 0C57                            __ptext4 0C06  
                          __ptext5 0C2B                            __ptext6 0C39  
                          __ptext7 0D07                            __ptext8 0CB7  
                          __ptext9 03D8              Delay_ms@time_to_delay 0020  
        Adf_Write_Register_One@reg 003F                    Ax25_Send_Sync@i 0027  
               __end_of_Adf_Locked 0BE7               ?_Read_Adf7012_Muxout 0070  
        Adf_Write_Register_Two@reg 004F                            clrloop0 0C13  
  Adf_Write_Register_Three@reg_ptr 00D3               end_of_initialization 0085  
                          memcpy@d 0024                            memcpy@n 0021  
                          memcpy@s 0025                          Delay_ms@i 0024  
                          init_ram 0C0C                            initloop 0C0D  
                 _global_interrupt 0004                __size_of_Update_Crc 0032  
                     __pstringtext 0400                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 012C                          _Adf_Reset 0C78  
            ??_Read_Adf7012_Muxout 0020                   _SAMPLES_PER_BAUD 00CE  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 0C67  
     Write_Adf7012_Reg@size_of_reg 002A             _Adf_Reset_Register_Two 0CB7  
        Sinus_Generator@tone_index 00CB             __size_of_Reverse_Array 0044  
           __size_of_Spi_Byte_Send 002A           ?_Adf_Reset_Register_Zero 0070  
                      Adf_Lock@adj 00DB                     __end_of_Ptt_On 0E2D  
               _Change_to_New_Baud 006E                     __end_of_memcpy 0D6F  
                     ?_Radio_Setup 0070                  __size_of_Adf_Lock 0075  
             __end_of_Timer0_Start 0BFA               __end_of_Timer1_Start 0C57  
              start_initialization 005B                         ?_Adf_Reset 0070  
         __end_of_Ax25_Send_Header 02CD           __end_of_Ax25_Send_Footer 0CEA  
                __size_of_Delay_ms 0020                       ?_Modem_Setup 0070  
                  _Dac0_Start_Hold 0BF0           __end_of_Ax25_Send_String 0D07  
        __size_of_Adf_Reset_Config 000F           ?_Adf_Write_Register_Zero 0070  
                        _Send_Byte 0630           __end_of_Send_Vcxo_Signal 0BF0  
                         ??_Ptt_On 006B                        __pdataBANK2 0134  
                         ??_memcpy 0023                      _Reverse_Array 0394  
                    _Spi_Byte_Send 0D6F                  ?_Adf_Write_Config 0070  
                     ??_Update_Crc 0020                        __pbssCOMMON 0079  
                        ___latbits 0002  __size_of_Adf_Reset_Register_Three 0026  
                    _ones_in_a_row 00C9                      __pcstackBANK0 0020  
                    __pcstackBANK1 00D3                 ??_Adf_Write_Config 006B  
        ?_Adf_Reset_Register_Three 0070                          _adc__high 00CF  
              __end_of__stringdata 04C4            __size_of_Ax25_Send_Flag 007C  
          __size_of_Ax25_Send_Byte 0006            __size_of_Ax25_Send_Sync 0079  
  __end_of_Adf_Reset_Register_Zero 0D26      Ax25_Send_Header@num_addresses 002C  
                       ?_Send_Byte 0070                  _Write_Adf7012_Reg 0E2D  
                     _current_byte 006F                  Ax25_Send_Header@i 0034  
                Ax25_Send_Header@j 0031                 ?_Write_Adf7012_Reg 002A  
                     ?_Timer0_Stop 0070           __size_of_Sinus_Generator 00B5  
        Ax25_Send_Footer@final_crc 002C             Ax25_Send_String@string 002D  
                         ?_Ptt_Off 0070                 __end_of_Update_Crc 0DF7  
              ??_Write_Adf7012_Reg 002B                     ?_Reverse_Array 0027  
                   ?_Spi_Byte_Send 0070           __end_of_global_interrupt 0059  
          __end_of_Dac0_Start_Hold 0BF5                        ??_Adf_Reset 0026  
  __end_of_Adf_Write_Register_Zero 0394                  Ax25_Send_String@i 002F  
        __end_of_Write_Adf7012_Reg 0E66               __size_of_Gpio_Config 0015  
                    ?_System_Start 0070                       _modem_packet 01A0  
                        clear_ram0 0C12           __size_of_Configure_Audio 0018  
                        main@F3169 0134              __size_of_Timer0_Start 0005  
                         _Adf_Lock 0F12              __size_of_Timer1_Start 000F  
        Reverse_Array@buffer_array 002D                        __stringdata 04BE  
__size_of_Adf_Write_Register_Three 016C            ?_Adf_Reset_Register_One 0070  
        ?_Adf_Write_Register_Three 0070            ?_Adf_Reset_Register_Two 0070  
             __size_of_Radio_Setup 000E                           _Delay_ms 0D26  
            Send_Vcxo_Signal@value 0070                     ??_System_Start 0020  
                 _Adf_Reset_Config 0C39                        ??_Send_Byte 0023  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 0D99  
               ?_Modem_Flush_Frame 0070                       _Timer0_Start 0BF5  
                     _Timer1_Start 0C48           ??_Adf_Write_Register_One 0033  
         ??_Adf_Write_Register_Two 0033                   __size_of_Ptt_Off 0010  
                  ??_Reverse_Array 0028                    ??_Spi_Byte_Send 0026  
            __end_of_PLAYBACK_RATE 04BA                ??_Modem_Flush_Frame 006C  
                ??_Sinus_Generator 0071   __size_of_Adf_Reset_Register_Zero 001F  
                         _adc__low 00D0        __end_of_Read_Adf7012_Muxout 0C1F  
   __end_of_Adf_Reset_Register_One 0C78     __end_of_Adf_Reset_Register_Two 0CCF  
              __end_of_sine_table2 04B6                   ?_Dac0_Start_Hold 0070  
                   _Ax25_Send_Flag 0774                     _Ax25_Send_Byte 0C00  
                   _Ax25_Send_Sync 0F87                           __ptext10 0C67  
                         __ptext11 0C78                           __ptext20 0F87  
                         __ptext12 0C9F                           __ptext21 0CCF  
                         __ptext13 0D99                           __ptext30 0EA1  
                         __ptext22 0630                           __ptext14 0BF5  
                         __ptext31 0E2D                           __ptext23 0DC5  
                         __ptext15 0DF7                           __ptext32 0D6F  
                         __ptext24 0774                           __ptext16 0C8A  
                         __ptext41 057B                           __ptext33 0D26  
                         __ptext25 0F12                           __ptext17 0CEA  
                         __ptext42 0BE7                           __ptext34 0BF0  
                         __ptext26 0C1F                           __ptext18 0C00  
                         __ptext43 0BEB                           __ptext35 0394  
                         __ptext27 02CD                           __ptext19 01F5  
                         __ptext36 0D46                           __ptext28 04C4  
                         __ptext37 0BE4                           __ptext29 0089  
                         __ptext38 0C18                           __ptext39 0BFA  
                ?_Ax25_Send_Header 002C                  ?_Ax25_Send_Footer 0070  
               ??_Ax25_Send_Header 002E          __end_of_Modem_Flush_Frame 0DC5  
       __size_of_Write_Adf7012_Reg 0039                  ?_Ax25_Send_String 002D  
               ??_Ax25_Send_Footer 002C                      __size_of_main 0090  
                      _phase_delta 00D2                  ?_Send_Vcxo_Signal 0070  
               ??_Ax25_Send_String 002F                 ??_Send_Vcxo_Signal 0070  
 __end_of_Adf_Reset_Register_Three 03FE               __size_of_Timer0_Stop 0004  
       Adf_Write_Register_Zero@reg 0053   __size_of_Adf_Write_Register_Zero 00C7  
                ??_Configure_Audio 0020             __end_of_Ax25_Send_Flag 07F0  
           __end_of_Ax25_Send_Byte 0C06             __end_of_Ax25_Send_Sync 1000  
                       _TABLE_SIZE 04BC                           memcpy@d1 0026  
                         memcpy@s1 0020                        pic14e$flags 007E  
                         intlevel1 0000          __size_of_Adf_Write_Config 000C  
                __CFG_CLKOUTEN$OFF 0000                 _MODEM_TRANSMITTING 00CC  
  __size_of_Adf_Write_Register_One 0071    __size_of_Adf_Write_Register_Two 00B7  
                       _Adc1_Start 0BFA                        _sine_table2 0400  
             __end_of_System_Start 0EA1                    ?_Ax25_Send_Flag 0070  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070        Sinus_Generator@Audio_Signal 0076  
               ??_global_interrupt 0077         __size_of_Modem_Flush_Frame 002C  
                       _Adf_Locked 0BE4                  _modem_packet_size 0079  
 __end_of_Adf_Write_Register_Three 01F5  
