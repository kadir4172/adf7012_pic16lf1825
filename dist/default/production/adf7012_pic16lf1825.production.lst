

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Sep 29 20:20:34 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	dabs	1,0x7E,2
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000E                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  008C                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009A                     	;# 
   100  009B                     	;# 
   101  009B                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  010C                     	;# 
   106  010E                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011B                     	;# 
   118  011D                     	;# 
   119  011E                     	;# 
   120  018C                     	;# 
   121  018E                     	;# 
   122  0191                     	;# 
   123  0191                     	;# 
   124  0192                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0194                     	;# 
   129  0195                     	;# 
   130  0196                     	;# 
   131  0199                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019C                     	;# 
   136  019D                     	;# 
   137  019E                     	;# 
   138  019F                     	;# 
   139  020C                     	;# 
   140  020E                     	;# 
   141  0211                     	;# 
   142  0211                     	;# 
   143  0212                     	;# 
   144  0212                     	;# 
   145  0213                     	;# 
   146  0213                     	;# 
   147  0214                     	;# 
   148  0214                     	;# 
   149  0215                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0216                     	;# 
   153  0216                     	;# 
   154  0217                     	;# 
   155  0217                     	;# 
   156  0291                     	;# 
   157  0291                     	;# 
   158  0292                     	;# 
   159  0293                     	;# 
   160  0294                     	;# 
   161  0295                     	;# 
   162  0295                     	;# 
   163  0296                     	;# 
   164  0298                     	;# 
   165  0298                     	;# 
   166  0299                     	;# 
   167  029A                     	;# 
   168  029B                     	;# 
   169  029C                     	;# 
   170  029D                     	;# 
   171  029E                     	;# 
   172  0311                     	;# 
   173  0311                     	;# 
   174  0312                     	;# 
   175  0313                     	;# 
   176  0318                     	;# 
   177  0318                     	;# 
   178  0319                     	;# 
   179  031A                     	;# 
   180  038C                     	;# 
   181  038E                     	;# 
   182  0391                     	;# 
   183  0392                     	;# 
   184  0393                     	;# 
   185  039A                     	;# 
   186  039C                     	;# 
   187  039D                     	;# 
   188  039E                     	;# 
   189  039F                     	;# 
   190  0415                     	;# 
   191  0416                     	;# 
   192  0417                     	;# 
   193  041C                     	;# 
   194  041D                     	;# 
   195  041E                     	;# 
   196  0FE4                     	;# 
   197  0FE5                     	;# 
   198  0FE6                     	;# 
   199  0FE7                     	;# 
   200  0FE8                     	;# 
   201  0FE9                     	;# 
   202  0FEA                     	;# 
   203  0FEB                     	;# 
   204  0FED                     	;# 
   205  0FEE                     	;# 
   206  0FEF                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000E                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  008C                     	;# 
   236  008E                     	;# 
   237  0091                     	;# 
   238  0092                     	;# 
   239  0093                     	;# 
   240  0095                     	;# 
   241  0096                     	;# 
   242  0097                     	;# 
   243  0098                     	;# 
   244  0099                     	;# 
   245  009A                     	;# 
   246  009B                     	;# 
   247  009B                     	;# 
   248  009C                     	;# 
   249  009D                     	;# 
   250  009E                     	;# 
   251  010C                     	;# 
   252  010E                     	;# 
   253  0111                     	;# 
   254  0112                     	;# 
   255  0113                     	;# 
   256  0114                     	;# 
   257  0115                     	;# 
   258  0116                     	;# 
   259  0117                     	;# 
   260  0118                     	;# 
   261  0119                     	;# 
   262  011A                     	;# 
   263  011B                     	;# 
   264  011D                     	;# 
   265  011E                     	;# 
   266  018C                     	;# 
   267  018E                     	;# 
   268  0191                     	;# 
   269  0191                     	;# 
   270  0192                     	;# 
   271  0193                     	;# 
   272  0193                     	;# 
   273  0193                     	;# 
   274  0194                     	;# 
   275  0195                     	;# 
   276  0196                     	;# 
   277  0199                     	;# 
   278  019A                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019C                     	;# 
   282  019D                     	;# 
   283  019E                     	;# 
   284  019F                     	;# 
   285  020C                     	;# 
   286  020E                     	;# 
   287  0211                     	;# 
   288  0211                     	;# 
   289  0212                     	;# 
   290  0212                     	;# 
   291  0213                     	;# 
   292  0213                     	;# 
   293  0214                     	;# 
   294  0214                     	;# 
   295  0215                     	;# 
   296  0215                     	;# 
   297  0215                     	;# 
   298  0216                     	;# 
   299  0216                     	;# 
   300  0217                     	;# 
   301  0217                     	;# 
   302  0291                     	;# 
   303  0291                     	;# 
   304  0292                     	;# 
   305  0293                     	;# 
   306  0294                     	;# 
   307  0295                     	;# 
   308  0295                     	;# 
   309  0296                     	;# 
   310  0298                     	;# 
   311  0298                     	;# 
   312  0299                     	;# 
   313  029A                     	;# 
   314  029B                     	;# 
   315  029C                     	;# 
   316  029D                     	;# 
   317  029E                     	;# 
   318  0311                     	;# 
   319  0311                     	;# 
   320  0312                     	;# 
   321  0313                     	;# 
   322  0318                     	;# 
   323  0318                     	;# 
   324  0319                     	;# 
   325  031A                     	;# 
   326  038C                     	;# 
   327  038E                     	;# 
   328  0391                     	;# 
   329  0392                     	;# 
   330  0393                     	;# 
   331  039A                     	;# 
   332  039C                     	;# 
   333  039D                     	;# 
   334  039E                     	;# 
   335  039F                     	;# 
   336  0415                     	;# 
   337  0416                     	;# 
   338  0417                     	;# 
   339  041C                     	;# 
   340  041D                     	;# 
   341  041E                     	;# 
   342  0FE4                     	;# 
   343  0FE5                     	;# 
   344  0FE6                     	;# 
   345  0FE7                     	;# 
   346  0FE8                     	;# 
   347  0FE9                     	;# 
   348  0FEA                     	;# 
   349  0FEB                     	;# 
   350  0FED                     	;# 
   351  0FEE                     	;# 
   352  0FEF                     	;# 
   353  0000                     	;# 
   354  0001                     	;# 
   355  0002                     	;# 
   356  0003                     	;# 
   357  0004                     	;# 
   358  0005                     	;# 
   359  0006                     	;# 
   360  0007                     	;# 
   361  0008                     	;# 
   362  0009                     	;# 
   363  000A                     	;# 
   364  000B                     	;# 
   365  000C                     	;# 
   366  000E                     	;# 
   367  0011                     	;# 
   368  0012                     	;# 
   369  0013                     	;# 
   370  0015                     	;# 
   371  0016                     	;# 
   372  0016                     	;# 
   373  0017                     	;# 
   374  0018                     	;# 
   375  0019                     	;# 
   376  001A                     	;# 
   377  001B                     	;# 
   378  001C                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  008C                     	;# 
   382  008E                     	;# 
   383  0091                     	;# 
   384  0092                     	;# 
   385  0093                     	;# 
   386  0095                     	;# 
   387  0096                     	;# 
   388  0097                     	;# 
   389  0098                     	;# 
   390  0099                     	;# 
   391  009A                     	;# 
   392  009B                     	;# 
   393  009B                     	;# 
   394  009C                     	;# 
   395  009D                     	;# 
   396  009E                     	;# 
   397  010C                     	;# 
   398  010E                     	;# 
   399  0111                     	;# 
   400  0112                     	;# 
   401  0113                     	;# 
   402  0114                     	;# 
   403  0115                     	;# 
   404  0116                     	;# 
   405  0117                     	;# 
   406  0118                     	;# 
   407  0119                     	;# 
   408  011A                     	;# 
   409  011B                     	;# 
   410  011D                     	;# 
   411  011E                     	;# 
   412  018C                     	;# 
   413  018E                     	;# 
   414  0191                     	;# 
   415  0191                     	;# 
   416  0192                     	;# 
   417  0193                     	;# 
   418  0193                     	;# 
   419  0193                     	;# 
   420  0194                     	;# 
   421  0195                     	;# 
   422  0196                     	;# 
   423  0199                     	;# 
   424  019A                     	;# 
   425  019B                     	;# 
   426  019B                     	;# 
   427  019C                     	;# 
   428  019D                     	;# 
   429  019E                     	;# 
   430  019F                     	;# 
   431  020C                     	;# 
   432  020E                     	;# 
   433  0211                     	;# 
   434  0211                     	;# 
   435  0212                     	;# 
   436  0212                     	;# 
   437  0213                     	;# 
   438  0213                     	;# 
   439  0214                     	;# 
   440  0214                     	;# 
   441  0215                     	;# 
   442  0215                     	;# 
   443  0215                     	;# 
   444  0216                     	;# 
   445  0216                     	;# 
   446  0217                     	;# 
   447  0217                     	;# 
   448  0291                     	;# 
   449  0291                     	;# 
   450  0292                     	;# 
   451  0293                     	;# 
   452  0294                     	;# 
   453  0295                     	;# 
   454  0295                     	;# 
   455  0296                     	;# 
   456  0298                     	;# 
   457  0298                     	;# 
   458  0299                     	;# 
   459  029A                     	;# 
   460  029B                     	;# 
   461  029C                     	;# 
   462  029D                     	;# 
   463  029E                     	;# 
   464  0311                     	;# 
   465  0311                     	;# 
   466  0312                     	;# 
   467  0313                     	;# 
   468  0318                     	;# 
   469  0318                     	;# 
   470  0319                     	;# 
   471  031A                     	;# 
   472  038C                     	;# 
   473  038E                     	;# 
   474  0391                     	;# 
   475  0392                     	;# 
   476  0393                     	;# 
   477  039A                     	;# 
   478  039C                     	;# 
   479  039D                     	;# 
   480  039E                     	;# 
   481  039F                     	;# 
   482  0415                     	;# 
   483  0416                     	;# 
   484  0417                     	;# 
   485  041C                     	;# 
   486  041D                     	;# 
   487  041E                     	;# 
   488  0FE4                     	;# 
   489  0FE5                     	;# 
   490  0FE6                     	;# 
   491  0FE7                     	;# 
   492  0FE8                     	;# 
   493  0FE9                     	;# 
   494  0FEA                     	;# 
   495  0FEB                     	;# 
   496  0FED                     	;# 
   497  0FEE                     	;# 
   498  0FEF                     	;# 
   499  0000                     	;# 
   500  0001                     	;# 
   501  0002                     	;# 
   502  0003                     	;# 
   503  0004                     	;# 
   504  0005                     	;# 
   505  0006                     	;# 
   506  0007                     	;# 
   507  0008                     	;# 
   508  0009                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000E                     	;# 
   513  0011                     	;# 
   514  0012                     	;# 
   515  0013                     	;# 
   516  0015                     	;# 
   517  0016                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001C                     	;# 
   525  001E                     	;# 
   526  001F                     	;# 
   527  008C                     	;# 
   528  008E                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0095                     	;# 
   533  0096                     	;# 
   534  0097                     	;# 
   535  0098                     	;# 
   536  0099                     	;# 
   537  009A                     	;# 
   538  009B                     	;# 
   539  009B                     	;# 
   540  009C                     	;# 
   541  009D                     	;# 
   542  009E                     	;# 
   543  010C                     	;# 
   544  010E                     	;# 
   545  0111                     	;# 
   546  0112                     	;# 
   547  0113                     	;# 
   548  0114                     	;# 
   549  0115                     	;# 
   550  0116                     	;# 
   551  0117                     	;# 
   552  0118                     	;# 
   553  0119                     	;# 
   554  011A                     	;# 
   555  011B                     	;# 
   556  011D                     	;# 
   557  011E                     	;# 
   558  018C                     	;# 
   559  018E                     	;# 
   560  0191                     	;# 
   561  0191                     	;# 
   562  0192                     	;# 
   563  0193                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0194                     	;# 
   567  0195                     	;# 
   568  0196                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019B                     	;# 
   572  019B                     	;# 
   573  019C                     	;# 
   574  019D                     	;# 
   575  019E                     	;# 
   576  019F                     	;# 
   577  020C                     	;# 
   578  020E                     	;# 
   579  0211                     	;# 
   580  0211                     	;# 
   581  0212                     	;# 
   582  0212                     	;# 
   583  0213                     	;# 
   584  0213                     	;# 
   585  0214                     	;# 
   586  0214                     	;# 
   587  0215                     	;# 
   588  0215                     	;# 
   589  0215                     	;# 
   590  0216                     	;# 
   591  0216                     	;# 
   592  0217                     	;# 
   593  0217                     	;# 
   594  0291                     	;# 
   595  0291                     	;# 
   596  0292                     	;# 
   597  0293                     	;# 
   598  0294                     	;# 
   599  0295                     	;# 
   600  0295                     	;# 
   601  0296                     	;# 
   602  0298                     	;# 
   603  0298                     	;# 
   604  0299                     	;# 
   605  029A                     	;# 
   606  029B                     	;# 
   607  029C                     	;# 
   608  029D                     	;# 
   609  029E                     	;# 
   610  0311                     	;# 
   611  0311                     	;# 
   612  0312                     	;# 
   613  0313                     	;# 
   614  0318                     	;# 
   615  0318                     	;# 
   616  0319                     	;# 
   617  031A                     	;# 
   618  038C                     	;# 
   619  038E                     	;# 
   620  0391                     	;# 
   621  0392                     	;# 
   622  0393                     	;# 
   623  039A                     	;# 
   624  039C                     	;# 
   625  039D                     	;# 
   626  039E                     	;# 
   627  039F                     	;# 
   628  0415                     	;# 
   629  0416                     	;# 
   630  0417                     	;# 
   631  041C                     	;# 
   632  041D                     	;# 
   633  041E                     	;# 
   634  0FE4                     	;# 
   635  0FE5                     	;# 
   636  0FE6                     	;# 
   637  0FE7                     	;# 
   638  0FE8                     	;# 
   639  0FE9                     	;# 
   640  0FEA                     	;# 
   641  0FEB                     	;# 
   642  0FED                     	;# 
   643  0FEE                     	;# 
   644  0FEF                     	;# 
   645  0000                     	;# 
   646  0001                     	;# 
   647  0002                     	;# 
   648  0003                     	;# 
   649  0004                     	;# 
   650  0005                     	;# 
   651  0006                     	;# 
   652  0007                     	;# 
   653  0008                     	;# 
   654  0009                     	;# 
   655  000A                     	;# 
   656  000B                     	;# 
   657  000C                     	;# 
   658  000E                     	;# 
   659  0011                     	;# 
   660  0012                     	;# 
   661  0013                     	;# 
   662  0015                     	;# 
   663  0016                     	;# 
   664  0016                     	;# 
   665  0017                     	;# 
   666  0018                     	;# 
   667  0019                     	;# 
   668  001A                     	;# 
   669  001B                     	;# 
   670  001C                     	;# 
   671  001E                     	;# 
   672  001F                     	;# 
   673  008C                     	;# 
   674  008E                     	;# 
   675  0091                     	;# 
   676  0092                     	;# 
   677  0093                     	;# 
   678  0095                     	;# 
   679  0096                     	;# 
   680  0097                     	;# 
   681  0098                     	;# 
   682  0099                     	;# 
   683  009A                     	;# 
   684  009B                     	;# 
   685  009B                     	;# 
   686  009C                     	;# 
   687  009D                     	;# 
   688  009E                     	;# 
   689  010C                     	;# 
   690  010E                     	;# 
   691  0111                     	;# 
   692  0112                     	;# 
   693  0113                     	;# 
   694  0114                     	;# 
   695  0115                     	;# 
   696  0116                     	;# 
   697  0117                     	;# 
   698  0118                     	;# 
   699  0119                     	;# 
   700  011A                     	;# 
   701  011B                     	;# 
   702  011D                     	;# 
   703  011E                     	;# 
   704  018C                     	;# 
   705  018E                     	;# 
   706  0191                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0193                     	;# 
   710  0193                     	;# 
   711  0193                     	;# 
   712  0194                     	;# 
   713  0195                     	;# 
   714  0196                     	;# 
   715  0199                     	;# 
   716  019A                     	;# 
   717  019B                     	;# 
   718  019B                     	;# 
   719  019C                     	;# 
   720  019D                     	;# 
   721  019E                     	;# 
   722  019F                     	;# 
   723  020C                     	;# 
   724  020E                     	;# 
   725  0211                     	;# 
   726  0211                     	;# 
   727  0212                     	;# 
   728  0212                     	;# 
   729  0213                     	;# 
   730  0213                     	;# 
   731  0214                     	;# 
   732  0214                     	;# 
   733  0215                     	;# 
   734  0215                     	;# 
   735  0215                     	;# 
   736  0216                     	;# 
   737  0216                     	;# 
   738  0217                     	;# 
   739  0217                     	;# 
   740  0291                     	;# 
   741  0291                     	;# 
   742  0292                     	;# 
   743  0293                     	;# 
   744  0294                     	;# 
   745  0295                     	;# 
   746  0295                     	;# 
   747  0296                     	;# 
   748  0298                     	;# 
   749  0298                     	;# 
   750  0299                     	;# 
   751  029A                     	;# 
   752  029B                     	;# 
   753  029C                     	;# 
   754  029D                     	;# 
   755  029E                     	;# 
   756  0311                     	;# 
   757  0311                     	;# 
   758  0312                     	;# 
   759  0313                     	;# 
   760  0318                     	;# 
   761  0318                     	;# 
   762  0319                     	;# 
   763  031A                     	;# 
   764  038C                     	;# 
   765  038E                     	;# 
   766  0391                     	;# 
   767  0392                     	;# 
   768  0393                     	;# 
   769  039A                     	;# 
   770  039C                     	;# 
   771  039D                     	;# 
   772  039E                     	;# 
   773  039F                     	;# 
   774  0415                     	;# 
   775  0416                     	;# 
   776  0417                     	;# 
   777  041C                     	;# 
   778  041D                     	;# 
   779  041E                     	;# 
   780  0FE4                     	;# 
   781  0FE5                     	;# 
   782  0FE6                     	;# 
   783  0FE7                     	;# 
   784  0FE8                     	;# 
   785  0FE9                     	;# 
   786  0FEA                     	;# 
   787  0FEB                     	;# 
   788  0FED                     	;# 
   789  0FEE                     	;# 
   790  0FEF                     	;# 
   791                           
   792                           	psect	idataBANK2
   793  0D10                     __pidataBANK2:	
   794                           
   795                           ;initializer for main@F3169
   796  0D10  3443               	retlw	67
   797  0D11  3455               	retlw	85
   798  0D12  3442               	retlw	66
   799  0D13  3445               	retlw	69
   800  0D14  3459               	retlw	89
   801  0D15  3459               	retlw	89
   802  0D16  3400               	retlw	0
   803  0D17  3405               	retlw	5
   804  0D18  3443               	retlw	67
   805  0D19  3455               	retlw	85
   806  0D1A  3442               	retlw	66
   807  0D1B  3445               	retlw	69
   808  0D1C  3458               	retlw	88
   809  0D1D  3458               	retlw	88
   810  0D1E  3400               	retlw	0
   811  0D1F  3406               	retlw	6
   812                           
   813                           	psect	stringtext
   814  0400                     __pstringtext:	
   815  0400                     _sine_table2:	
   816  0400  3410               	retlw	16
   817  0401  3410               	retlw	16
   818  0402  3411               	retlw	17
   819  0403  3411               	retlw	17
   820  0404  3412               	retlw	18
   821  0405  3412               	retlw	18
   822  0406  3413               	retlw	19
   823  0407  3413               	retlw	19
   824  0408  3414               	retlw	20
   825  0409  3414               	retlw	20
   826  040A  3415               	retlw	21
   827  040B  3415               	retlw	21
   828  040C  3416               	retlw	22
   829  040D  3416               	retlw	22
   830  040E  3417               	retlw	23
   831  040F  3417               	retlw	23
   832  0410  3418               	retlw	24
   833  0411  3418               	retlw	24
   834  0412  3419               	retlw	25
   835  0413  3419               	retlw	25
   836  0414  3419               	retlw	25
   837  0415  341A               	retlw	26
   838  0416  341A               	retlw	26
   839  0417  341B               	retlw	27
   840  0418  341B               	retlw	27
   841  0419  341B               	retlw	27
   842  041A  341C               	retlw	28
   843  041B  341C               	retlw	28
   844  041C  341C               	retlw	28
   845  041D  341D               	retlw	29
   846  041E  341D               	retlw	29
   847  041F  341D               	retlw	29
   848  0420  341D               	retlw	29
   849  0421  341E               	retlw	30
   850  0422  341E               	retlw	30
   851  0423  341E               	retlw	30
   852  0424  341E               	retlw	30
   853  0425  341E               	retlw	30
   854  0426  341E               	retlw	30
   855  0427  341F               	retlw	31
   856  0428  341F               	retlw	31
   857  0429  341F               	retlw	31
   858  042A  341F               	retlw	31
   859  042B  341F               	retlw	31
   860  042C  341F               	retlw	31
   861  042D  341F               	retlw	31
   862  042E  341F               	retlw	31
   863  042F  341F               	retlw	31
   864  0430  341F               	retlw	31
   865  0431  341F               	retlw	31
   866  0432  341F               	retlw	31
   867  0433  341F               	retlw	31
   868  0434  341F               	retlw	31
   869  0435  341E               	retlw	30
   870  0436  341E               	retlw	30
   871  0437  341E               	retlw	30
   872  0438  341E               	retlw	30
   873  0439  341E               	retlw	30
   874  043A  341E               	retlw	30
   875  043B  341D               	retlw	29
   876  043C  341D               	retlw	29
   877  043D  341D               	retlw	29
   878  043E  341D               	retlw	29
   879  043F  341C               	retlw	28
   880  0440  341C               	retlw	28
   881  0441  341C               	retlw	28
   882  0442  341B               	retlw	27
   883  0443  341B               	retlw	27
   884  0444  341B               	retlw	27
   885  0445  341A               	retlw	26
   886  0446  341A               	retlw	26
   887  0447  3419               	retlw	25
   888  0448  3419               	retlw	25
   889  0449  3419               	retlw	25
   890  044A  3418               	retlw	24
   891  044B  3418               	retlw	24
   892  044C  3417               	retlw	23
   893  044D  3417               	retlw	23
   894  044E  3416               	retlw	22
   895  044F  3416               	retlw	22
   896  0450  3415               	retlw	21
   897  0451  3415               	retlw	21
   898  0452  3414               	retlw	20
   899  0453  3414               	retlw	20
   900  0454  3413               	retlw	19
   901  0455  3413               	retlw	19
   902  0456  3412               	retlw	18
   903  0457  3412               	retlw	18
   904  0458  3411               	retlw	17
   905  0459  3411               	retlw	17
   906  045A  3410               	retlw	16
   907  045B  3410               	retlw	16
   908  045C  340F               	retlw	15
   909  045D  340E               	retlw	14
   910  045E  340E               	retlw	14
   911  045F  340D               	retlw	13
   912  0460  340D               	retlw	13
   913  0461  340C               	retlw	12
   914  0462  340C               	retlw	12
   915  0463  340B               	retlw	11
   916  0464  340B               	retlw	11
   917  0465  340A               	retlw	10
   918  0466  340A               	retlw	10
   919  0467  3409               	retlw	9
   920  0468  3409               	retlw	9
   921  0469  3408               	retlw	8
   922  046A  3408               	retlw	8
   923  046B  3407               	retlw	7
   924  046C  3407               	retlw	7
   925  046D  3406               	retlw	6
   926  046E  3406               	retlw	6
   927  046F  3406               	retlw	6
   928  0470  3405               	retlw	5
   929  0471  3405               	retlw	5
   930  0472  3404               	retlw	4
   931  0473  3404               	retlw	4
   932  0474  3404               	retlw	4
   933  0475  3403               	retlw	3
   934  0476  3403               	retlw	3
   935  0477  3403               	retlw	3
   936  0478  3402               	retlw	2
   937  0479  3402               	retlw	2
   938  047A  3402               	retlw	2
   939  047B  3402               	retlw	2
   940  047C  3401               	retlw	1
   941  047D  3401               	retlw	1
   942  047E  3401               	retlw	1
   943  047F  3401               	retlw	1
   944  0480  3401               	retlw	1
   945  0481  3401               	retlw	1
   946  0482  3400               	retlw	0
   947  0483  3400               	retlw	0
   948  0484  3400               	retlw	0
   949  0485  3400               	retlw	0
   950  0486  3400               	retlw	0
   951  0487  3400               	retlw	0
   952  0488  3400               	retlw	0
   953  0489  3400               	retlw	0
   954  048A  3400               	retlw	0
   955  048B  3400               	retlw	0
   956  048C  3400               	retlw	0
   957  048D  3400               	retlw	0
   958  048E  3400               	retlw	0
   959  048F  3400               	retlw	0
   960  0490  3401               	retlw	1
   961  0491  3401               	retlw	1
   962  0492  3401               	retlw	1
   963  0493  3401               	retlw	1
   964  0494  3401               	retlw	1
   965  0495  3401               	retlw	1
   966  0496  3402               	retlw	2
   967  0497  3402               	retlw	2
   968  0498  3402               	retlw	2
   969  0499  3402               	retlw	2
   970  049A  3403               	retlw	3
   971  049B  3403               	retlw	3
   972  049C  3403               	retlw	3
   973  049D  3404               	retlw	4
   974  049E  3404               	retlw	4
   975  049F  3404               	retlw	4
   976  04A0  3405               	retlw	5
   977  04A1  3405               	retlw	5
   978  04A2  3406               	retlw	6
   979  04A3  3406               	retlw	6
   980  04A4  3406               	retlw	6
   981  04A5  3407               	retlw	7
   982  04A6  3407               	retlw	7
   983  04A7  3408               	retlw	8
   984  04A8  3408               	retlw	8
   985  04A9  3409               	retlw	9
   986  04AA  3409               	retlw	9
   987  04AB  340A               	retlw	10
   988  04AC  340A               	retlw	10
   989  04AD  340B               	retlw	11
   990  04AE  340B               	retlw	11
   991  04AF  340C               	retlw	12
   992  04B0  340C               	retlw	12
   993  04B1  340D               	retlw	13
   994  04B2  340D               	retlw	13
   995  04B3  340E               	retlw	14
   996  04B4  340E               	retlw	14
   997  04B5  340F               	retlw	15
   998  04B6                     __end_of_sine_table2:	
   999  04B6                     _PLAYBACK_RATE:	
  1000  04B6  3412               	retlw	18
  1001  04B7  347A               	retlw	122
  1002  04B8  3400               	retlw	0
  1003  04B9  3400               	retlw	0
  1004  04BA                     __end_of_PLAYBACK_RATE:	
  1005  04BA                     _BAUD_RATE:	
  1006  04BA  34B0               	retlw	176
  1007  04BB  3404               	retlw	4
  1008  04BC                     __end_of_BAUD_RATE:	
  1009  04BC                     _TABLE_SIZE:	
  1010  04BC  34B6               	retlw	182
  1011  04BD  3400               	retlw	0
  1012  04BE                     __end_of_TABLE_SIZE:	
  1013  000B                     _INTCON	set	11
  1014  0011                     _PIR1	set	17
  1015  000C                     _PORTAbits	set	12
  1016  000E                     _PORTCbits	set	14
  1017  0015                     _TMR0	set	21
  1018  0017                     _TMR1H	set	23
  1019  0016                     _TMR1L	set	22
  1020  008E                     _ADIF	set	142
  1021  008A                     _CCP1IF	set	138
  1022  00C4                     _T1CKPS0	set	196
  1023  00C5                     _T1CKPS1	set	197
  1024  005D                     _TMR0IE	set	93
  1025  005A                     _TMR0IF	set	90
  1026  00C6                     _TMR1CS0	set	198
  1027  00C7                     _TMR1CS1	set	199
  1028  00CF                     _TMR1GE	set	207
  1029  0088                     _TMR1IF	set	136
  1030  00C0                     _TMR1ON	set	192
  1031  009D                     _ADCON0	set	157
  1032  009C                     _ADRESH	set	156
  1033  009B                     _ADRESL	set	155
  1034  0099                     _OSCCON	set	153
  1035  009A                     _OSCSTAT	set	154
  1036  0098                     _OSCTUNE	set	152
  1037  008C                     _TRISA	set	140
  1038  008E                     _TRISC	set	142
  1039  04F4                     _ADCS0	set	1268
  1040  04F5                     _ADCS1	set	1269
  1041  04F6                     _ADCS2	set	1270
  1042  04F7                     _ADFM	set	1271
  1043  048E                     _ADIE	set	1166
  1044  04F2                     _ADNREF	set	1266
  1045  04E8                     _ADON	set	1256
  1046  04F0                     _ADPREF0	set	1264
  1047  04F1                     _ADPREF1	set	1265
  1048  048A                     _CCP1IE	set	1162
  1049  04AB                     _PSA	set	1195
  1050  04AD                     _TMR0CS	set	1197
  1051  0488                     _TMR1IE	set	1160
  1052  0119                     _DACCON1	set	281
  1053  08C7                     _DACEN	set	2247
  1054  08C0                     _DACNSS	set	2240
  1055  08C5                     _DACOE	set	2245
  1056  08C2                     _DACPSS0	set	2242
  1057  08C3                     _DACPSS1	set	2243
  1058  0C61                     _ANSA1	set	3169
  1059  0292                     _CCPR1H	set	658
  1060  0291                     _CCPR1L	set	657
  1061  1499                     _CCP1M1	set	5273
  1062  149A                     _CCP1M2	set	5274
  1063  149B                     _CCP1M3	set	5275
  1064  04BE                     __stringdata:	
  1065  04BE                     STR_1:	
  1066  04BE  3448               	retlw	72	;'H'
  1067  04BF  3445               	retlw	69	;'E'
  1068  04C0  344C               	retlw	76	;'L'
  1069  04C1  344C               	retlw	76	;'L'
  1070  04C2  344F               	retlw	79	;'O'
  1071  04C3  3400               	retlw	0
  1072  04C4                     __end_of__stringdata:	
  1073                           
  1074                           ; #config settings
  1075  0000                     
  1076                           	psect	cinit
  1077  005B                     start_initialization:	
  1078  005B                     __initialization:	
  1079                           
  1080                           ; Clear objects allocated to COMMON
  1081  005B  01F9               	clrf	__pbssCOMMON& (0+127)
  1082  005C  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1083  005D  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1084  005E  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1085  005F  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1086                           
  1087                           ; Clear objects allocated to BANK0
  1088  0060  01EE               	clrf	__pbssBANK0& (0+127)
  1089  0061  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1090                           
  1091                           ; Clear objects allocated to BANK1
  1092  0062  30A0               	movlw	low __pbssBANK1
  1093  0063  0084               	movwf	4
  1094  0064  3000               	movlw	high __pbssBANK1
  1095  0065  0085               	movwf	5
  1096  0066  3037               	movlw	55
  1097  0067  318C  24AD  3180   	fcall	clear_ram0
  1098                           
  1099                           ; Clear objects allocated to BANK2
  1100  006A  3020               	movlw	low __pbssBANK2
  1101  006B  0084               	movwf	4
  1102  006C  3001               	movlw	high __pbssBANK2
  1103  006D  0085               	movwf	5
  1104  006E  3010               	movlw	16
  1105  006F  318C  24AD  3180   	fcall	clear_ram0
  1106                           
  1107                           ; Clear objects allocated to BANK3
  1108  0072  30A0               	movlw	low __pbssBANK3
  1109  0073  0084               	movwf	4
  1110  0074  3001               	movlw	high __pbssBANK3
  1111  0075  0085               	movwf	5
  1112  0076  3040               	movlw	64
  1113  0077  318C  24AD  3180   	fcall	clear_ram0
  1114                           
  1115                           ; Initialize objects allocated to BANK2
  1116  007A  3010               	movlw	low __pidataBANK2
  1117  007B  0084               	movwf	4
  1118  007C  308D               	movlw	(high __pidataBANK2)| (0+128)
  1119  007D  0085               	movwf	5
  1120  007E  3030               	movlw	low __pdataBANK2
  1121  007F  0086               	movwf	6
  1122  0080  3001               	movlw	high __pdataBANK2
  1123  0081  0087               	movwf	7
  1124  0082  3010               	movlw	16
  1125  0083  318C  24A7         	fcall	init_ram
  1126  0085                     end_of_initialization:	
  1127                           ;End of C runtime variable initialization code
  1128                           
  1129  0085                     __end_of__initialization:	
  1130  0085  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1131  0086  0020               	movlb	0
  1132  0087  3186  2EDF         	ljmp	_main	;jump to C main() function
  1133                           
  1134                           	psect	bssCOMMON
  1135  0079                     __pbssCOMMON:	
  1136  0079                     _modem_packet_size:	
  1137  0079                     	ds	4
  1138  007D                     _phase:	
  1139  007D                     	ds	1
  1140                           
  1141                           	psect	bssBANK0
  1142  006E                     __pbssBANK0:	
  1143  006E                     _Change_to_New_Baud:	
  1144  006E                     	ds	1
  1145  006F                     _current_byte:	
  1146  006F                     	ds	1
  1147                           
  1148                           	psect	bssBANK1
  1149  00A0                     __pbssBANK1:	
  1150  00A0                     _adf_config:	
  1151  00A0                     	ds	39
  1152  00C7                     _packet_pos:	
  1153  00C7                     	ds	4
  1154  00CB                     _crc:	
  1155  00CB                     	ds	2
  1156  00CD                     _ones_in_a_row:	
  1157  00CD                     	ds	2
  1158  00CF                     Sinus_Generator@tone_index:	
  1159  00CF                     	ds	1
  1160  00D0                     _MODEM_TRANSMITTING:	
  1161  00D0                     	ds	1
  1162  00D1                     _PTT_OFF:	
  1163  00D1                     	ds	1
  1164  00D2                     _SAMPLES_PER_BAUD:	
  1165  00D2                     	ds	1
  1166  00D3                     _adc__high:	
  1167  00D3                     	ds	1
  1168  00D4                     _adc__low:	
  1169  00D4                     	ds	1
  1170  00D5                     _current_sample_in_baud:	
  1171  00D5                     	ds	1
  1172  00D6                     _phase_delta:	
  1173  00D6                     	ds	1
  1174                           
  1175                           	psect	bssBANK2
  1176  0120                     __pbssBANK2:	
  1177  0120                     Reverse_Array@F3148:	
  1178  0120                     	ds	4
  1179  0124                     _PHASE_DELTA_1200:	
  1180  0124                     	ds	4
  1181  0128                     _PHASE_DELTA_2200:	
  1182  0128                     	ds	4
  1183  012C                     _Systick_Counter:	
  1184  012C                     	ds	4
  1185                           
  1186                           	psect	dataBANK2
  1187  0130                     __pdataBANK2:	
  1188  0130                     main@F3169:	
  1189  0130                     	ds	16
  1190                           
  1191                           	psect	bssBANK3
  1192  01A0                     __pbssBANK3:	
  1193  01A0                     _modem_packet:	
  1194  01A0                     	ds	64
  1195                           
  1196                           	psect	clrtext
  1197  0CAD                     clear_ram0:	
  1198                           ;	Called with FSR0 containing the base address, and
  1199                           ;	WREG with the size to clear
  1200                           
  1201  0CAD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1202  0CAE                     clrloop0:	
  1203  0CAE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1204  0CAF  3101               	addfsr 0,1
  1205  0CB0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1206  0CB1  2CAE               	goto	clrloop0	;have we reached the end yet?
  1207  0CB2  3400               	retlw	0	;all done for this memory range, return
  1208                           
  1209                           	psect	inittext
  1210  0CA7                     init_ram:	
  1211  0CA7  00FE               	movwf	126
  1212  0CA8                     initloop:	
  1213  0CA8  0012               	moviw fsr0++
  1214  0CA9  001E               	movwi fsr1++
  1215  0CAA  0BFE               	decfsz	126,f
  1216  0CAB  2CA8               	goto	initloop
  1217  0CAC  3400               	retlw	0
  1218                           
  1219                           	psect	cstackBANK1
  1220  00D7                     __pcstackBANK1:	
  1221  00D7                     Adf_Write_Register_Three@reg_ptr:	
  1222                           
  1223                           ; 4 bytes @ 0x0
  1224  00D7                     	ds	4
  1225  00DB                     Adf_Write_Register_Three@reg:	
  1226                           
  1227                           ; 4 bytes @ 0x4
  1228  00DB                     	ds	4
  1229  00DF                     main@beacon_address:	
  1230                           
  1231                           ; 16 bytes @ 0x8
  1232  00DF                     	ds	16
  1233                           
  1234                           	psect	cstackCOMMON
  1235  0070                     __pcstackCOMMON:	
  1236  0070                     ?_Sinus_Generator:	
  1237  0070                     ?_Timer1_Start:	
  1238                           ; 0 bytes @ 0x0
  1239                           
  1240  0070                     ?_Dac0_Start_Hold:	
  1241                           ; 0 bytes @ 0x0
  1242                           
  1243  0070                     ?_Adc1_Start:	
  1244                           ; 0 bytes @ 0x0
  1245                           
  1246  0070                     ?_Ax25_Send_Footer:	
  1247                           ; 0 bytes @ 0x0
  1248                           
  1249  0070                     ?_Modem_Setup:	
  1250                           ; 0 bytes @ 0x0
  1251                           
  1252  0070                     ?_Ptt_Off:	
  1253                           ; 0 bytes @ 0x0
  1254                           
  1255  0070                     ?_Modem_Flush_Frame:	
  1256                           ; 0 bytes @ 0x0
  1257                           
  1258  0070                     ?_Adf_Reset_Register_Zero:	
  1259                           ; 0 bytes @ 0x0
  1260                           
  1261  0070                     ?_Adf_Reset_Register_One:	
  1262                           ; 0 bytes @ 0x0
  1263                           
  1264  0070                     ?_Adf_Reset_Register_Two:	
  1265                           ; 0 bytes @ 0x0
  1266                           
  1267  0070                     ?_Adf_Reset_Register_Three:	
  1268                           ; 0 bytes @ 0x0
  1269                           
  1270  0070                     ?_Adf_Reset:	
  1271                           ; 0 bytes @ 0x0
  1272                           
  1273  0070                     ?_Adf_Write_Register_Zero:	
  1274                           ; 0 bytes @ 0x0
  1275                           
  1276  0070                     ?_Adf_Write_Register_One:	
  1277                           ; 0 bytes @ 0x0
  1278                           
  1279  0070                     ?_Adf_Write_Register_Two:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0070                     ?_Adf_Write_Register_Three:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0070                     ?_global_interrupt:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0070                     ?_System_Start:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0070                     ??_Send_Vcxo_Signal:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0070                     ?_Timer0_Start:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0070                     ?_Timer0_Stop:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0070                     ??_Timer0_Stop:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0070                     ?_Adf_Reset_Config:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0070                     ?_Adf_Write_Config:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0070                     ?_Radio_Setup:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0070                     ?_Configure_Audio:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0070                     ?_Update_Crc:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0070                     ?_Send_Byte:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0070                     ?_Ax25_Send_Byte:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0070                     ?_Ax25_Send_Sync:	
  1325                           ; 0 bytes @ 0x0
  1326                           
  1327  0070                     ?_Ax25_Send_Flag:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0070                     ?_Gpio_Config:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0070                     ?_Ptt_On:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_Spi_Byte_Send:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ?_Read_Adf7012_Muxout:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342  0070                     ?_Send_Vcxo_Signal:	
  1343                           ; 1 bytes @ 0x0
  1344                           
  1345  0070                     ?_main:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     Send_Vcxo_Signal@value:	
  1349                           ; 2 bytes @ 0x0
  1350                           
  1351                           
  1352                           ; 1 bytes @ 0x0
  1353  0070                     	ds	1
  1354  0071                     ??_Sinus_Generator:	
  1355                           
  1356                           ; 0 bytes @ 0x1
  1357  0071                     	ds	5
  1358  0076                     Sinus_Generator@Audio_Signal:	
  1359                           
  1360                           ; 1 bytes @ 0x6
  1361  0076                     	ds	1
  1362  0077                     ??_global_interrupt:	
  1363                           
  1364                           ; 0 bytes @ 0x7
  1365  0077                     	ds	2
  1366                           
  1367                           	psect	cstackBANK0
  1368  0020                     __pcstackBANK0:	
  1369  0020                     ??_Gpio_Config:	
  1370  0020                     ??_Timer1_Start:	
  1371                           ; 0 bytes @ 0x0
  1372                           
  1373  0020                     ??_Dac0_Start_Hold:	
  1374                           ; 0 bytes @ 0x0
  1375                           
  1376  0020                     ??_Adc1_Start:	
  1377                           ; 0 bytes @ 0x0
  1378                           
  1379  0020                     ?_Delay_ms:	
  1380                           ; 0 bytes @ 0x0
  1381                           
  1382  0020                     ??_Adf_Reset_Register_Zero:	
  1383                           ; 0 bytes @ 0x0
  1384                           
  1385  0020                     ??_Adf_Reset_Register_One:	
  1386                           ; 0 bytes @ 0x0
  1387                           
  1388  0020                     ??_Adf_Reset_Register_Two:	
  1389                           ; 0 bytes @ 0x0
  1390                           
  1391  0020                     ??_Adf_Reset_Register_Three:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0020                     ??_System_Start:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0020                     ??_Read_Adf7012_Muxout:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0020                     ??_Timer0_Start:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403  0020                     ??_Configure_Audio:	
  1404                           ; 0 bytes @ 0x0
  1405                           
  1406  0020                     ??_Update_Crc:	
  1407                           ; 0 bytes @ 0x0
  1408                           
  1409  0020                     ??_Ax25_Send_Sync:	
  1410                           ; 0 bytes @ 0x0
  1411                           
  1412  0020                     ??_Ax25_Send_Flag:	
  1413                           ; 0 bytes @ 0x0
  1414                           
  1415  0020                     ?_memcpy:	
  1416                           ; 0 bytes @ 0x0
  1417                           
  1418  0020                     memcpy@s1:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0020                     Delay_ms@time_to_delay:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424                           
  1425                           ; 2 bytes @ 0x0
  1426  0020                     	ds	1
  1427  0021                     memcpy@n:	
  1428                           
  1429                           ; 2 bytes @ 0x1
  1430  0021                     	ds	1
  1431  0022                     ??_Delay_ms:	
  1432  0022                     Update_Crc@input_bit:	
  1433                           ; 0 bytes @ 0x2
  1434                           
  1435                           
  1436                           ; 1 bytes @ 0x2
  1437  0022                     	ds	1
  1438  0023                     ??_memcpy:	
  1439  0023                     ??_Send_Byte:	
  1440                           ; 0 bytes @ 0x3
  1441                           
  1442                           
  1443                           ; 0 bytes @ 0x3
  1444  0023                     	ds	1
  1445  0024                     memcpy@d:	
  1446  0024                     Delay_ms@i:	
  1447                           ; 1 bytes @ 0x4
  1448                           
  1449                           
  1450                           ; 2 bytes @ 0x4
  1451  0024                     	ds	1
  1452  0025                     memcpy@s:	
  1453                           
  1454                           ; 1 bytes @ 0x5
  1455  0025                     	ds	1
  1456  0026                     ??_Spi_Byte_Send:	
  1457  0026                     ??_Adf_Reset:	
  1458                           ; 0 bytes @ 0x6
  1459                           
  1460  0026                     ??_Adf_Reset_Config:	
  1461                           ; 0 bytes @ 0x6
  1462                           
  1463  0026                     Ax25_Send_Sync@byte:	
  1464                           ; 0 bytes @ 0x6
  1465                           
  1466  0026                     Ax25_Send_Flag@byte:	
  1467                           ; 1 bytes @ 0x6
  1468                           
  1469  0026                     memcpy@d1:	
  1470                           ; 1 bytes @ 0x6
  1471                           
  1472                           
  1473                           ; 1 bytes @ 0x6
  1474  0026                     	ds	1
  1475  0027                     ?_Reverse_Array:	
  1476  0027                     Reverse_Array@length:	
  1477                           ; 1 bytes @ 0x7
  1478                           
  1479  0027                     Spi_Byte_Send@data:	
  1480                           ; 1 bytes @ 0x7
  1481                           
  1482  0027                     Ax25_Send_Sync@i:	
  1483                           ; 1 bytes @ 0x7
  1484                           
  1485  0027                     Ax25_Send_Flag@i:	
  1486                           ; 2 bytes @ 0x7
  1487                           
  1488                           
  1489                           ; 2 bytes @ 0x7
  1490  0027                     	ds	1
  1491  0028                     ??_Reverse_Array:	
  1492  0028                     Spi_Byte_Send@data_to_send:	
  1493                           ; 0 bytes @ 0x8
  1494                           
  1495                           
  1496                           ; 1 bytes @ 0x8
  1497  0028                     	ds	1
  1498  0029                     Spi_Byte_Send@i:	
  1499  0029                     Send_Byte@byte:	
  1500                           ; 1 bytes @ 0x9
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0x9
  1504  0029                     	ds	1
  1505  002A                     ?_Write_Adf7012_Reg:	
  1506  002A                     Write_Adf7012_Reg@size_of_reg:	
  1507                           ; 1 bytes @ 0xA
  1508                           
  1509  002A                     Send_Byte@i:	
  1510                           ; 1 bytes @ 0xA
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0xA
  1514  002A                     	ds	1
  1515  002B                     ??_Write_Adf7012_Reg:	
  1516                           
  1517                           ; 0 bytes @ 0xB
  1518  002B                     	ds	1
  1519  002C                     ?_Ax25_Send_Header:	
  1520  002C                     ??_Ax25_Send_Footer:	
  1521                           ; 0 bytes @ 0xC
  1522                           
  1523  002C                     ??_Ax25_Send_Byte:	
  1524                           ; 0 bytes @ 0xC
  1525                           
  1526  002C                     Write_Adf7012_Reg@reg_value:	
  1527                           ; 0 bytes @ 0xC
  1528                           
  1529  002C                     Ax25_Send_Byte@byte:	
  1530                           ; 1 bytes @ 0xC
  1531                           
  1532  002C                     Ax25_Send_Header@num_addresses:	
  1533                           ; 1 bytes @ 0xC
  1534                           
  1535  002C                     Ax25_Send_Footer@final_crc:	
  1536                           ; 2 bytes @ 0xC
  1537                           
  1538                           
  1539                           ; 2 bytes @ 0xC
  1540  002C                     	ds	1
  1541  002D                     ?_Ax25_Send_String:	
  1542  002D                     Write_Adf7012_Reg@i:	
  1543                           ; 0 bytes @ 0xD
  1544                           
  1545  002D                     Ax25_Send_String@string:	
  1546                           ; 1 bytes @ 0xD
  1547                           
  1548  002D                     Reverse_Array@buffer_array:	
  1549                           ; 2 bytes @ 0xD
  1550                           
  1551                           
  1552                           ; 4 bytes @ 0xD
  1553  002D                     	ds	1
  1554  002E                     ??_Ax25_Send_Header:	
  1555                           
  1556                           ; 0 bytes @ 0xE
  1557  002E                     	ds	1
  1558  002F                     ??_Ax25_Send_String:	
  1559  002F                     Ax25_Send_String@i:	
  1560                           ; 0 bytes @ 0xF
  1561                           
  1562                           
  1563                           ; 2 bytes @ 0xF
  1564  002F                     	ds	2
  1565  0031                     Reverse_Array@input:	
  1566  0031                     Ax25_Send_Header@j:	
  1567                           ; 1 bytes @ 0x11
  1568                           
  1569                           
  1570                           ; 2 bytes @ 0x11
  1571  0031                     	ds	1
  1572  0032                     Reverse_Array@i:	
  1573                           
  1574                           ; 1 bytes @ 0x12
  1575  0032                     	ds	1
  1576  0033                     ??_Adf_Write_Register_Zero:	
  1577  0033                     ??_Adf_Write_Register_One:	
  1578                           ; 0 bytes @ 0x13
  1579                           
  1580  0033                     ??_Adf_Write_Register_Two:	
  1581                           ; 0 bytes @ 0x13
  1582                           
  1583  0033                     ??_Adf_Write_Register_Three:	
  1584                           ; 0 bytes @ 0x13
  1585                           
  1586  0033                     Ax25_Send_Header@addresses:	
  1587                           ; 0 bytes @ 0x13
  1588                           
  1589                           
  1590                           ; 1 bytes @ 0x13
  1591  0033                     	ds	1
  1592  0034                     Ax25_Send_Header@i:	
  1593                           
  1594                           ; 2 bytes @ 0x14
  1595  0034                     	ds	11
  1596  003F                     Adf_Write_Register_One@reg:	
  1597                           
  1598                           ; 4 bytes @ 0x1F
  1599  003F                     	ds	4
  1600  0043                     Adf_Write_Register_One@reg_ptr:	
  1601                           
  1602                           ; 3 bytes @ 0x23
  1603  0043                     	ds	8
  1604  004B                     Adf_Write_Register_Two@reg_ptr:	
  1605                           
  1606                           ; 4 bytes @ 0x2B
  1607  004B                     	ds	4
  1608  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1609  004F                     Adf_Write_Register_Two@reg:	
  1610                           ; 4 bytes @ 0x2F
  1611                           
  1612                           
  1613                           ; 4 bytes @ 0x2F
  1614  004F                     	ds	4
  1615  0053                     Adf_Write_Register_Zero@reg:	
  1616                           
  1617                           ; 4 bytes @ 0x33
  1618  0053                     	ds	24
  1619  006B                     ??_Modem_Setup:	
  1620  006B                     ??_Ptt_On:	
  1621                           ; 0 bytes @ 0x4B
  1622                           
  1623  006B                     ??_Ptt_Off:	
  1624                           ; 0 bytes @ 0x4B
  1625                           
  1626  006B                     ??_Adf_Write_Config:	
  1627                           ; 0 bytes @ 0x4B
  1628                           
  1629  006B                     ??_Radio_Setup:	
  1630                           ; 0 bytes @ 0x4B
  1631                           
  1632                           
  1633                           ; 0 bytes @ 0x4B
  1634  006B                     	ds	1
  1635  006C                     ??_Modem_Flush_Frame:	
  1636                           
  1637                           ; 0 bytes @ 0x4C
  1638  006C                     	ds	1
  1639  006D                     ??_main:	
  1640                           
  1641                           ; 0 bytes @ 0x4D
  1642  006D                     	ds	1
  1643                           
  1644                           	psect	maintext
  1645  06DF                     __pmaintext:	
  1646 ;;
  1647 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1648 ;;
  1649 ;; *************** function _main *****************
  1650 ;; Defined at:
  1651 ;;		line 160 in file "main.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;  beacon_addre   16    8[BANK1 ] struct .[2]
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  2  126[COMMON] int 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 17F/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1666 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1667 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1668 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1669 ;;Total ram usage:       17 bytes
  1670 ;; Hardware stack levels required when called:   11
  1671 ;; This function calls:
  1672 ;;		_Adc1_Start
  1673 ;;		_Ax25_Send_Footer
  1674 ;;		_Ax25_Send_Header
  1675 ;;		_Ax25_Send_String
  1676 ;;		_Dac0_Start_Hold
  1677 ;;		_Delay_ms
  1678 ;;		_Gpio_Config
  1679 ;;		_Modem_Flush_Frame
  1680 ;;		_Modem_Setup
  1681 ;;		_Ptt_Off
  1682 ;;		_Ptt_On
  1683 ;;		_System_Start
  1684 ;;		_Timer1_Start
  1685 ;; This function is called by:
  1686 ;;		Startup code after reset
  1687 ;; This function uses a non-reentrant model
  1688 ;;
  1689                           
  1690                           
  1691                           ;psect for function _main
  1692  06DF                     _main:	
  1693                           
  1694                           ;main.c: 161: System_Start();
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1698  06DF  318E  26A7  3186   	fcall	_System_Start
  1699  06E2                     l127:	
  1700                           ;main.c: 162: while (!(OSCSTAT & (0x01))){}
  1701                           
  1702  06E2  0021               	movlb	1	; select bank1
  1703  06E3  1C1A               	btfss	26,0	;volatile
  1704  06E4  2EE2               	goto	l127
  1705                           
  1706                           ;main.c: 165: Gpio_Config();
  1707  06E5  318D  2500  3186   	fcall	_Gpio_Config
  1708                           
  1709                           ;main.c: 167: Timer1_Start();
  1710  06E8  318C  24F1  3186   	fcall	_Timer1_Start
  1711                           
  1712                           ;main.c: 169: Dac0_Start_Hold();
  1713  06EB  318C  248B  3186   	fcall	_Dac0_Start_Hold
  1714                           
  1715                           ;main.c: 171: Adc1_Start();
  1716  06EE  318C  2495  3186   	fcall	_Adc1_Start
  1717                           
  1718                           ;main.c: 173: PORTAbits.RA5 = 0;;
  1719  06F1  0020               	movlb	0	; select bank0
  1720  06F2  128C               	bcf	12,5	;volatile
  1721                           
  1722                           ;main.c: 174: Delay_ms(10);
  1723  06F3  300A               	movlw	10
  1724  06F4  00A0               	movwf	Delay_ms@time_to_delay
  1725  06F5  3000               	movlw	0
  1726  06F6  00A1               	movwf	Delay_ms@time_to_delay+1
  1727  06F7  318D  25AB  3186   	fcall	_Delay_ms
  1728                           
  1729                           ;main.c: 175: PORTAbits.RA4 = 1;;
  1730  06FA  0020               	movlb	0	; select bank0
  1731  06FB  160C               	bsf	12,4	;volatile
  1732                           
  1733                           ;main.c: 176: Delay_ms(10);
  1734  06FC  300A               	movlw	10
  1735  06FD  00A0               	movwf	Delay_ms@time_to_delay
  1736  06FE  3000               	movlw	0
  1737  06FF  00A1               	movwf	Delay_ms@time_to_delay+1
  1738  0700  318D  25AB  3186   	fcall	_Delay_ms
  1739                           
  1740                           ;main.c: 177: PORTAbits.RA5 = 1;;
  1741  0703  0020               	movlb	0	; select bank0
  1742  0704  168C               	bsf	12,5	;volatile
  1743                           
  1744                           ;main.c: 178: Delay_ms(10);
  1745  0705  300A               	movlw	10
  1746  0706  00A0               	movwf	Delay_ms@time_to_delay
  1747  0707  3000               	movlw	0
  1748  0708  00A1               	movwf	Delay_ms@time_to_delay+1
  1749  0709  318D  25AB  3186   	fcall	_Delay_ms
  1750                           
  1751                           ;main.c: 180: Delay_ms(200);
  1752  070C  30C8               	movlw	200
  1753  070D  0020               	movlb	0	; select bank0
  1754  070E  00A0               	movwf	Delay_ms@time_to_delay
  1755  070F  3000               	movlw	0
  1756  0710  00A1               	movwf	Delay_ms@time_to_delay+1
  1757  0711  318D  25AB  3186   	fcall	_Delay_ms
  1758                           
  1759                           ;main.c: 183: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1760  0714  3030               	movlw	low main@F3169
  1761  0715  0086               	movwf	6
  1762  0716  3001               	movlw	high main@F3169
  1763  0717  0087               	movwf	7
  1764  0718  30DF               	movlw	low main@beacon_address
  1765  0719  0084               	movwf	4
  1766  071A  3000               	movlw	high main@beacon_address
  1767  071B  0085               	movwf	5
  1768  071C  3010               	movlw	16
  1769  071D  0020               	movlb	0	; select bank0
  1770  071E  00ED               	movwf	??_main
  1771  071F                     u2380:	
  1772  071F  0016               	moviw fsr1++
  1773  0720  001A               	movwi fsr0++
  1774  0721  0BED               	decfsz	??_main,f
  1775  0722  2F1F               	goto	u2380
  1776                           
  1777                           ;main.c: 185: Ax25_Send_Header(beacon_address,2);
  1778  0723  3002               	movlw	2
  1779  0724  00AC               	movwf	Ax25_Send_Header@num_addresses
  1780  0725  3000               	movlw	0
  1781  0726  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  1782  0727  30DF               	movlw	main@beacon_address& (0+255)
  1783  0728  3181  21F5  3186   	fcall	_Ax25_Send_Header
  1784                           
  1785                           ;main.c: 186: Ax25_Send_String("HELLO");
  1786  072B  30BE               	movlw	low (STR_1| (0+32768))
  1787  072C  0020               	movlb	0	; select bank0
  1788  072D  00AD               	movwf	Ax25_Send_String@string
  1789  072E  3084               	movlw	high (STR_1| (0+32768))
  1790  072F  00AE               	movwf	Ax25_Send_String@string+1
  1791  0730  318D  258E  3186   	fcall	_Ax25_Send_String
  1792                           
  1793                           ;main.c: 187: Ax25_Send_Footer();
  1794  0733  318D  2573  3186   	fcall	_Ax25_Send_Footer
  1795                           
  1796                           ;main.c: 191: Modem_Setup();
  1797  0736  318C  24A1  3186   	fcall	_Modem_Setup
  1798                           
  1799                           ;main.c: 192: Delay_ms(100);
  1800  0739  3064               	movlw	100
  1801  073A  0020               	movlb	0	; select bank0
  1802  073B  00A0               	movwf	Delay_ms@time_to_delay
  1803  073C  3000               	movlw	0
  1804  073D  00A1               	movwf	Delay_ms@time_to_delay+1
  1805  073E  318D  25AB  3186   	fcall	_Delay_ms
  1806                           
  1807                           ;main.c: 195: Delay_ms(100);
  1808  0741  3064               	movlw	100
  1809  0742  0020               	movlb	0	; select bank0
  1810  0743  00A0               	movwf	Delay_ms@time_to_delay
  1811  0744  3000               	movlw	0
  1812  0745  00A1               	movwf	Delay_ms@time_to_delay+1
  1813  0746  318D  25AB  3186   	fcall	_Delay_ms
  1814                           
  1815                           ;main.c: 204: Ptt_On();
  1816  0749  318E  2671  3186   	fcall	_Ptt_On
  1817  074C                     l2375:	
  1818                           ;main.c: 207: while(1){
  1819                           
  1820                           
  1821                           ;main.c: 208: if(PTT_OFF){
  1822  074C  0021               	movlb	1	; select bank1
  1823  074D  0851               	movf	_PTT_OFF^(0+128),w
  1824  074E  1903               	btfsc	3,2
  1825  074F  2F55               	goto	l2381
  1826                           
  1827                           ;main.c: 209: Ptt_Off();
  1828  0750  318C  24D4  3186   	fcall	_Ptt_Off
  1829                           
  1830                           ;main.c: 210: PTT_OFF = 0;
  1831  0753  0021               	movlb	1	; select bank1
  1832  0754  01D1               	clrf	_PTT_OFF^(0+128)
  1833  0755                     l2381:	
  1834                           
  1835                           ;main.c: 211: }
  1836                           ;main.c: 214: Modem_Flush_Frame();
  1837  0755  318D  25CB  3186   	fcall	_Modem_Flush_Frame
  1838  0758                     l2383:	
  1839                           ;main.c: 215: while(MODEM_TRANSMITTING);
  1840                           
  1841  0758  0021               	movlb	1	; select bank1
  1842  0759  08D0               	movf	_MODEM_TRANSMITTING^(0+128),f
  1843  075A  1D03               	skipz
  1844  075B  2F58               	goto	l2383
  1845                           
  1846                           ;main.c: 216: Delay_ms(2000);
  1847  075C  30D0               	movlw	208
  1848  075D  0020               	movlb	0	; select bank0
  1849  075E  00A0               	movwf	Delay_ms@time_to_delay
  1850  075F  3007               	movlw	7
  1851  0760  00A1               	movwf	Delay_ms@time_to_delay+1
  1852  0761  318D  25AB  3186   	fcall	_Delay_ms
  1853  0764  2F4C               	goto	l2375
  1854  0765                     __end_of_main:	
  1855                           ;main.c: 227: }
  1856                           ;main.c: 228: return (0);
  1857                           ;	Return value of _main is never used
  1858                           
  1859                           
  1860                           	psect	text1
  1861  0CF1                     __ptext1:	
  1862 ;; *************** function _Timer1_Start *****************
  1863 ;; Defined at:
  1864 ;;		line 254 in file "utility.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;		None               void
  1871 ;; Registers used:
  1872 ;;		wreg, status,2
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;Total ram usage:        0 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; Hardware stack levels required when called:    3
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           
  1893                           ;psect for function _Timer1_Start
  1894  0CF1                     _Timer1_Start:	
  1895                           
  1896                           ;utility.c: 255: TMR1H = 0x00;
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _Timer1_Start: [wreg+status,2]
  1900  0CF1  0020               	movlb	0	; select bank0
  1901  0CF2  0197               	clrf	23	;volatile
  1902                           
  1903                           ;utility.c: 256: TMR1L = 0x00;
  1904  0CF3  0196               	clrf	22	;volatile
  1905                           
  1906                           ;utility.c: 258: TMR1IE = 0;
  1907  0CF4  0021               	movlb	1	; select bank1
  1908  0CF5  1011               	bcf	17,0	;volatile
  1909                           
  1910                           ;utility.c: 261: CCPR1H = 0x03;
  1911  0CF6  3003               	movlw	3
  1912  0CF7  0025               	movlb	5	; select bank5
  1913  0CF8  0092               	movwf	18	;volatile
  1914                           
  1915                           ;utility.c: 262: CCPR1L = 0x41;
  1916  0CF9  3041               	movlw	65
  1917  0CFA  0091               	movwf	17	;volatile
  1918                           
  1919                           ;utility.c: 264: CCP1IF = 0;
  1920  0CFB  0020               	movlb	0	; select bank0
  1921  0CFC  1111               	bcf	17,2	;volatile
  1922                           
  1923                           ;utility.c: 265: CCP1IE = 1;
  1924  0CFD  0021               	movlb	1	; select bank1
  1925  0CFE  1511               	bsf	17,2	;volatile
  1926  0CFF  0008               	return
  1927  0D00                     __end_of_Timer1_Start:	
  1928                           
  1929                           	psect	text2
  1930  0EA7                     __ptext2:	
  1931 ;; *************** function _System_Start *****************
  1932 ;; Defined at:
  1933 ;;		line 97 in file "main.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;		None               void
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1949 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1951 ;;Total ram usage:        1 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    3
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           
  1962                           ;psect for function _System_Start
  1963  0EA7                     _System_Start:	
  1964                           
  1965                           ;main.c: 100: OSCCON = 0x00;
  1966                           
  1967                           ;incstack = 0
  1968                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  1969  0EA7  0021               	movlb	1	; select bank1
  1970  0EA8  0199               	clrf	25	;volatile
  1971                           
  1972                           ;main.c: 101: OSCCON |= 0b11110000;
  1973  0EA9  30F0               	movlw	240
  1974  0EAA  0020               	movlb	0	; select bank0
  1975  0EAB  00A0               	movwf	??_System_Start
  1976  0EAC  0820               	movf	??_System_Start,w
  1977  0EAD  0021               	movlb	1	; select bank1
  1978  0EAE  0499               	iorwf	25,f	;volatile
  1979                           
  1980                           ;main.c: 102: OSCTUNE = 0x00;
  1981  0EAF  0198               	clrf	24	;volatile
  1982                           
  1983                           ;main.c: 106: TMR0CS = 0;
  1984  0EB0  1295               	bcf	21,5	;volatile
  1985                           
  1986                           ;main.c: 107: PSA = 1;
  1987  0EB1  1595               	bsf	21,3	;volatile
  1988                           
  1989                           ;main.c: 111: TMR1ON = 1;
  1990  0EB2  0020               	movlb	0	; select bank0
  1991  0EB3  1418               	bsf	24,0	;volatile
  1992                           
  1993                           ;main.c: 112: TMR1GE = 0;
  1994  0EB4  1399               	bcf	25,7	;volatile
  1995                           
  1996                           ;main.c: 114: TMR1CS1 = 0;
  1997  0EB5  1398               	bcf	24,7	;volatile
  1998                           
  1999                           ;main.c: 115: TMR1CS0 = 0;
  2000  0EB6  1318               	bcf	24,6	;volatile
  2001                           
  2002                           ;main.c: 117: T1CKPS1 = 1;
  2003  0EB7  1698               	bsf	24,5	;volatile
  2004                           
  2005                           ;main.c: 118: T1CKPS0 = 1;
  2006  0EB8  1618               	bsf	24,4	;volatile
  2007                           
  2008                           ;main.c: 120: CCP1M3 = 1;
  2009  0EB9  0025               	movlb	5	; select bank5
  2010  0EBA  1593               	bsf	19,3	;volatile
  2011                           
  2012                           ;main.c: 121: CCP1M2 = 0;
  2013  0EBB  1113               	bcf	19,2	;volatile
  2014                           
  2015                           ;main.c: 122: CCP1M1 = 1;
  2016  0EBC  1493               	bsf	19,1	;volatile
  2017                           
  2018                           ;main.c: 123: CCP1M1 = 0;
  2019  0EBD  1093               	bcf	19,1	;volatile
  2020                           
  2021                           ;main.c: 127: DACOE = 1;
  2022  0EBE  0022               	movlb	2	; select bank2
  2023  0EBF  1698               	bsf	24,5	;volatile
  2024                           
  2025                           ;main.c: 128: DACPSS1 = 0;
  2026  0EC0  1198               	bcf	24,3	;volatile
  2027                           
  2028                           ;main.c: 129: DACPSS0 = 0;
  2029  0EC1  1118               	bcf	24,2	;volatile
  2030                           
  2031                           ;main.c: 130: DACNSS = 0;
  2032  0EC2  1018               	bcf	24,0	;volatile
  2033                           
  2034                           ;main.c: 135: ANSA1 = 1;
  2035  0EC3  0023               	movlb	3	; select bank3
  2036  0EC4  148C               	bsf	12,1	;volatile
  2037                           
  2038                           ;main.c: 136: ADCON0 &= 0b10000011;
  2039  0EC5  3083               	movlw	131
  2040  0EC6  0020               	movlb	0	; select bank0
  2041  0EC7  00A0               	movwf	??_System_Start
  2042  0EC8  0820               	movf	??_System_Start,w
  2043  0EC9  0021               	movlb	1	; select bank1
  2044  0ECA  059D               	andwf	29,f	;volatile
  2045                           
  2046                           ;main.c: 137: ADCON0 |= 0b00000100;
  2047  0ECB  151D               	bsf	29,2	;volatile
  2048                           
  2049                           ;main.c: 138: ADNREF = 0;
  2050  0ECC  111E               	bcf	30,2	;volatile
  2051                           
  2052                           ;main.c: 139: ADPREF1 = 0;
  2053  0ECD  109E               	bcf	30,1	;volatile
  2054                           
  2055                           ;main.c: 140: ADPREF0 = 0;
  2056  0ECE  101E               	bcf	30,0	;volatile
  2057                           
  2058                           ;main.c: 141: ADCS2 = 1;
  2059  0ECF  171E               	bsf	30,6	;volatile
  2060                           
  2061                           ;main.c: 142: ADCS1 = 1;
  2062  0ED0  169E               	bsf	30,5	;volatile
  2063                           
  2064                           ;main.c: 143: ADCS0 = 0;
  2065  0ED1  121E               	bcf	30,4	;volatile
  2066                           
  2067                           ;main.c: 144: ADFM = 1;
  2068  0ED2  179E               	bsf	30,7	;volatile
  2069                           
  2070                           ;main.c: 149: TMR0IF = 0;
  2071  0ED3  110B               	bcf	11,2	;volatile
  2072                           
  2073                           ;main.c: 150: TMR1IF = 0;
  2074  0ED4  0020               	movlb	0	; select bank0
  2075  0ED5  1011               	bcf	17,0	;volatile
  2076                           
  2077                           ;main.c: 151: CCP1IF = 0;
  2078  0ED6  1111               	bcf	17,2	;volatile
  2079                           
  2080                           ;main.c: 152: ADIF = 0;
  2081  0ED7  1311               	bcf	17,6	;volatile
  2082                           
  2083                           ;main.c: 156: INTCON |= 0xC0;
  2084  0ED8  30C0               	movlw	192
  2085  0ED9  00A0               	movwf	??_System_Start
  2086  0EDA  0820               	movf	??_System_Start,w
  2087  0EDB  048B               	iorwf	11,f	;volatile
  2088  0EDC  0008               	return
  2089  0EDD                     __end_of_System_Start:	
  2090                           
  2091                           	psect	text3
  2092  0CD4                     __ptext3:	
  2093 ;; *************** function _Ptt_Off *****************
  2094 ;; Defined at:
  2095 ;;		line 339 in file "adf7012.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;		None               void
  2102 ;; Registers used:
  2103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;Total ram usage:        0 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    9
  2116 ;; This function calls:
  2117 ;;		_Adf_Write_Config
  2118 ;;		_Delay_ms
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _Ptt_Off
  2126  0CD4                     _Ptt_Off:	
  2127                           
  2128                           ;adf7012.c: 341: adf_config.r3.pa_enable = 0;
  2129                           
  2130                           ;incstack = 0
  2131                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2132  0CD4  0021               	movlb	1	; select bank1
  2133  0CD5  01BA               	clrf	(_adf_config^(0+128)+26)
  2134                           
  2135                           ;adf7012.c: 342: adf_config.r2.power_amplifier_level = 0;
  2136  0CD6  01B2               	clrf	(_adf_config^(0+128)+18)
  2137                           
  2138                           ;adf7012.c: 343: Adf_Write_Config();
  2139  0CD7  318C  24BA  318C   	fcall	_Adf_Write_Config
  2140                           
  2141                           ;adf7012.c: 344: Delay_ms(10);
  2142  0CDA  300A               	movlw	10
  2143  0CDB  0020               	movlb	0	; select bank0
  2144  0CDC  00A0               	movwf	Delay_ms@time_to_delay
  2145  0CDD  3000               	movlw	0
  2146  0CDE  00A1               	movwf	Delay_ms@time_to_delay+1
  2147  0CDF  318D  25AB         	fcall	_Delay_ms
  2148  0CE1  0008               	return
  2149  0CE2                     __end_of_Ptt_Off:	
  2150                           
  2151                           	psect	text4
  2152  0CA1                     __ptext4:	
  2153 ;; *************** function _Modem_Setup *****************
  2154 ;; Defined at:
  2155 ;;		line 53 in file "audio_tone.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;		None               void
  2162 ;; Registers used:
  2163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:   10
  2176 ;; This function calls:
  2177 ;;		_Configure_Audio
  2178 ;;		_Radio_Setup
  2179 ;; This function is called by:
  2180 ;;		_main
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           
  2185                           ;psect for function _Modem_Setup
  2186  0CA1                     _Modem_Setup:	
  2187                           
  2188                           ;audio_tone.c: 55: Configure_Audio();
  2189                           
  2190                           ;incstack = 0
  2191                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2192  0CA1  318D  2543  318C   	fcall	_Configure_Audio
  2193                           
  2194                           ;audio_tone.c: 56: Radio_Setup();
  2195  0CA4  318C  24C6         	fcall	_Radio_Setup
  2196  0CA6  0008               	return
  2197  0CA7                     __end_of_Modem_Setup:	
  2198                           
  2199                           	psect	text5
  2200  0CC6                     __ptext5:	
  2201 ;; *************** function _Radio_Setup *****************
  2202 ;; Defined at:
  2203 ;;		line 299 in file "adf7012.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;		None               void
  2210 ;; Registers used:
  2211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2221 ;;Total ram usage:        0 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; Hardware stack levels required when called:    9
  2224 ;; This function calls:
  2225 ;;		_Adf_Reset_Config
  2226 ;;		_Adf_Write_Config
  2227 ;;		_Delay_ms
  2228 ;; This function is called by:
  2229 ;;		_Modem_Setup
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           
  2234                           ;psect for function _Radio_Setup
  2235  0CC6                     _Radio_Setup:	
  2236                           
  2237                           ;adf7012.c: 302: Adf_Reset_Config();
  2238                           
  2239                           ;incstack = 0
  2240                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2241  0CC6  318C  24E2  318C   	fcall	_Adf_Reset_Config
  2242                           
  2243                           ;adf7012.c: 304: Adf_Write_Config();
  2244  0CC9  318C  24BA  318C   	fcall	_Adf_Write_Config
  2245                           
  2246                           ;adf7012.c: 306: Delay_ms(10);
  2247  0CCC  300A               	movlw	10
  2248  0CCD  0020               	movlb	0	; select bank0
  2249  0CCE  00A0               	movwf	Delay_ms@time_to_delay
  2250  0CCF  3000               	movlw	0
  2251  0CD0  00A1               	movwf	Delay_ms@time_to_delay+1
  2252  0CD1  318D  25AB         	fcall	_Delay_ms
  2253  0CD3  0008               	return
  2254  0CD4                     __end_of_Radio_Setup:	
  2255                           
  2256                           	psect	text6
  2257  0CE2                     __ptext6:	
  2258 ;; *************** function _Adf_Reset_Config *****************
  2259 ;; Defined at:
  2260 ;;		line 84 in file "adf7012.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;		None               void
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0, pclath, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    6
  2281 ;; This function calls:
  2282 ;;		_Adf_Reset
  2283 ;;		_Adf_Reset_Register_One
  2284 ;;		_Adf_Reset_Register_Three
  2285 ;;		_Adf_Reset_Register_Two
  2286 ;;		_Adf_Reset_Register_Zero
  2287 ;; This function is called by:
  2288 ;;		_Radio_Setup
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _Adf_Reset_Config
  2294  0CE2                     _Adf_Reset_Config:	
  2295                           
  2296                           ;adf7012.c: 87: Adf_Reset_Register_Zero();
  2297                           
  2298                           ;incstack = 0
  2299                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  2300  0CE2  3187  27E1  318C   	fcall	_Adf_Reset_Register_Zero
  2301                           
  2302                           ;adf7012.c: 88: Adf_Reset_Register_One();
  2303  0CE5  318D  2520  318C   	fcall	_Adf_Reset_Register_One
  2304                           
  2305                           ;adf7012.c: 89: Adf_Reset_Register_Two();
  2306  0CE8  318D  255B  318C   	fcall	_Adf_Reset_Register_Two
  2307                           
  2308                           ;adf7012.c: 90: Adf_Reset_Register_Three();
  2309  0CEB  3183  23D8  318C   	fcall	_Adf_Reset_Register_Three
  2310                           
  2311                           ;adf7012.c: 92: Adf_Reset();
  2312  0CEE  318D  2531         	fcall	_Adf_Reset
  2313  0CF0  0008               	return
  2314  0CF1                     __end_of_Adf_Reset_Config:	
  2315                           
  2316                           	psect	text7
  2317  07E1                     __ptext7:	
  2318 ;; *************** function _Adf_Reset_Register_Zero *****************
  2319 ;; Defined at:
  2320 ;;		line 96 in file "adf7012.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;		None               void
  2327 ;; Registers used:
  2328 ;;		wreg, status,2
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;Total ram usage:        1 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    3
  2341 ;; This function calls:
  2342 ;;		Nothing
  2343 ;; This function is called by:
  2344 ;;		_Adf_Reset_Config
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           
  2348                           
  2349                           ;psect for function _Adf_Reset_Register_Zero
  2350  07E1                     _Adf_Reset_Register_Zero:	
  2351                           
  2352                           ;adf7012.c: 97: adf_config.r0.frequency_error_correction = 0;
  2353                           
  2354                           ;incstack = 0
  2355                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  2356  07E1  3000               	movlw	0
  2357  07E2  0021               	movlb	1	; select bank1
  2358  07E3  00A3               	movwf	(_adf_config+3)^(0+128)
  2359  07E4  3000               	movlw	0
  2360  07E5  00A2               	movwf	(_adf_config+2)^(0+128)
  2361  07E6  3000               	movlw	0
  2362  07E7  00A1               	movwf	(_adf_config+1)^(0+128)
  2363  07E8  3000               	movlw	0
  2364  07E9  00A0               	movwf	_adf_config^(0+128)
  2365                           
  2366                           ;adf7012.c: 98: adf_config.r0.r_divider = 15;
  2367  07EA  300F               	movlw	15
  2368  07EB  0020               	movlb	0	; select bank0
  2369  07EC  00A0               	movwf	??_Adf_Reset_Register_Zero
  2370  07ED  0820               	movf	??_Adf_Reset_Register_Zero,w
  2371  07EE  0021               	movlb	1	; select bank1
  2372  07EF  00A4               	movwf	(_adf_config^(0+128)+4)
  2373                           
  2374                           ;adf7012.c: 99: adf_config.r0.crystal_doubler = 0;
  2375  07F0  01A5               	clrf	(_adf_config^(0+128)+5)
  2376                           
  2377                           ;adf7012.c: 100: adf_config.r0.crystal_oscillator_disable = 0;
  2378  07F1  01A6               	clrf	(_adf_config^(0+128)+6)
  2379                           
  2380                           ;adf7012.c: 101: adf_config.r0.clock_out_divider = 2;
  2381  07F2  3002               	movlw	2
  2382  07F3  0020               	movlb	0	; select bank0
  2383  07F4  00A0               	movwf	??_Adf_Reset_Register_Zero
  2384  07F5  0820               	movf	??_Adf_Reset_Register_Zero,w
  2385  07F6  0021               	movlb	1	; select bank1
  2386  07F7  00A7               	movwf	(_adf_config^(0+128)+7)
  2387                           
  2388                           ;adf7012.c: 102: adf_config.r0.vco_adjust = 0;
  2389  07F8  01A8               	clrf	(_adf_config^(0+128)+8)
  2390                           
  2391                           ;adf7012.c: 103: adf_config.r0.output_divider = 2;
  2392  07F9  3002               	movlw	2
  2393  07FA  0020               	movlb	0	; select bank0
  2394  07FB  00A0               	movwf	??_Adf_Reset_Register_Zero
  2395  07FC  0820               	movf	??_Adf_Reset_Register_Zero,w
  2396  07FD  0021               	movlb	1	; select bank1
  2397  07FE  00A9               	movwf	(_adf_config^(0+128)+9)
  2398  07FF  0008               	return
  2399  0800                     __end_of_Adf_Reset_Register_Zero:	
  2400                           
  2401                           	psect	text8
  2402  0D5B                     __ptext8:	
  2403 ;; *************** function _Adf_Reset_Register_Two *****************
  2404 ;; Defined at:
  2405 ;;		line 112 in file "adf7012.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;		None               void
  2412 ;; Registers used:
  2413 ;;		wreg, status,2
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2421 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2422 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2423 ;;Total ram usage:        1 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    3
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_Adf_Reset_Config
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           
  2434                           ;psect for function _Adf_Reset_Register_Two
  2435  0D5B                     _Adf_Reset_Register_Two:	
  2436                           
  2437                           ;adf7012.c: 113: adf_config.r2.mod_control = 3;
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  2441  0D5B  3003               	movlw	3
  2442  0D5C  0020               	movlb	0	; select bank0
  2443  0D5D  00A0               	movwf	??_Adf_Reset_Register_Two
  2444  0D5E  0820               	movf	??_Adf_Reset_Register_Two,w
  2445  0D5F  0021               	movlb	1	; select bank1
  2446  0D60  00B0               	movwf	(_adf_config^(0+128)+16)
  2447                           
  2448                           ;adf7012.c: 114: adf_config.r2.gook = 0;
  2449  0D61  01B1               	clrf	(_adf_config^(0+128)+17)
  2450                           
  2451                           ;adf7012.c: 115: adf_config.r2.power_amplifier_level = 15;
  2452  0D62  300F               	movlw	15
  2453  0D63  0020               	movlb	0	; select bank0
  2454  0D64  00A0               	movwf	??_Adf_Reset_Register_Two
  2455  0D65  0820               	movf	??_Adf_Reset_Register_Two,w
  2456  0D66  0021               	movlb	1	; select bank1
  2457  0D67  00B2               	movwf	(_adf_config^(0+128)+18)
  2458                           
  2459                           ;adf7012.c: 116: adf_config.r2.modulation_deviation = 16;
  2460  0D68  3000               	movlw	0
  2461  0D69  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  2462  0D6A  3000               	movlw	0
  2463  0D6B  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  2464  0D6C  3000               	movlw	0
  2465  0D6D  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  2466  0D6E  3010               	movlw	16
  2467  0D6F  00B3               	movwf	(_adf_config^(0+128)+19)
  2468                           
  2469                           ;adf7012.c: 117: adf_config.r2.gfsk_modulation_control = 0;
  2470  0D70  01B7               	clrf	(_adf_config^(0+128)+23)
  2471                           
  2472                           ;adf7012.c: 118: adf_config.r2.index_counter = 0;
  2473  0D71  01B8               	clrf	(_adf_config^(0+128)+24)
  2474  0D72  0008               	return
  2475  0D73                     __end_of_Adf_Reset_Register_Two:	
  2476                           
  2477                           	psect	text9
  2478  03D8                     __ptext9:	
  2479 ;; *************** function _Adf_Reset_Register_Three *****************
  2480 ;; Defined at:
  2481 ;;		line 121 in file "adf7012.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		wreg, status,2
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;Total ram usage:        1 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    3
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_Adf_Reset_Config
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function _Adf_Reset_Register_Three
  2511  03D8                     _Adf_Reset_Register_Three:	
  2512                           
  2513                           ;adf7012.c: 122: adf_config.r3.pll_enable = 0;
  2514                           
  2515                           ;incstack = 0
  2516                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  2517  03D8  0021               	movlb	1	; select bank1
  2518  03D9  01B9               	clrf	(_adf_config^(0+128)+25)
  2519                           
  2520                           ;adf7012.c: 123: adf_config.r3.pa_enable = 0;
  2521  03DA  01BA               	clrf	(_adf_config^(0+128)+26)
  2522                           
  2523                           ;adf7012.c: 124: adf_config.r3.clkout_enable = 1;
  2524  03DB  01BB               	clrf	(_adf_config^(0+128)+27)
  2525  03DC  0ABB               	incf	(_adf_config^(0+128)+27),f
  2526                           
  2527                           ;adf7012.c: 125: adf_config.r3.data_invert = 1;
  2528  03DD  01BC               	clrf	(_adf_config^(0+128)+28)
  2529  03DE  0ABC               	incf	(_adf_config^(0+128)+28),f
  2530                           
  2531                           ;adf7012.c: 126: adf_config.r3.charge_pump_current = 3;
  2532  03DF  3003               	movlw	3
  2533  03E0  0020               	movlb	0	; select bank0
  2534  03E1  00A0               	movwf	??_Adf_Reset_Register_Three
  2535  03E2  0820               	movf	??_Adf_Reset_Register_Three,w
  2536  03E3  0021               	movlb	1	; select bank1
  2537  03E4  00BD               	movwf	(_adf_config^(0+128)+29)
  2538                           
  2539                           ;adf7012.c: 127: adf_config.r3.bleed_up = 0;
  2540  03E5  01BE               	clrf	(_adf_config^(0+128)+30)
  2541                           
  2542                           ;adf7012.c: 128: adf_config.r3.bleed_down = 0;
  2543  03E6  01BF               	clrf	(_adf_config^(0+128)+31)
  2544                           
  2545                           ;adf7012.c: 129: adf_config.r3.vco_disable = 0;
  2546  03E7  01C0               	clrf	(_adf_config^(0+128)+32)
  2547                           
  2548                           ;adf7012.c: 131: adf_config.r3.muxout = 3;
  2549  03E8  3003               	movlw	3
  2550  03E9  0020               	movlb	0	; select bank0
  2551  03EA  00A0               	movwf	??_Adf_Reset_Register_Three
  2552  03EB  0820               	movf	??_Adf_Reset_Register_Three,w
  2553  03EC  0021               	movlb	1	; select bank1
  2554  03ED  00C1               	movwf	(_adf_config^(0+128)+33)
  2555                           
  2556                           ;adf7012.c: 133: adf_config.r3.ld_precision = 0;
  2557  03EE  01C2               	clrf	(_adf_config^(0+128)+34)
  2558                           
  2559                           ;adf7012.c: 134: adf_config.r3.vco_bias = 6;
  2560  03EF  3006               	movlw	6
  2561  03F0  0020               	movlb	0	; select bank0
  2562  03F1  00A0               	movwf	??_Adf_Reset_Register_Three
  2563  03F2  0820               	movf	??_Adf_Reset_Register_Three,w
  2564  03F3  0021               	movlb	1	; select bank1
  2565  03F4  00C3               	movwf	(_adf_config^(0+128)+35)
  2566                           
  2567                           ;adf7012.c: 135: adf_config.r3.pa_bias = 4;
  2568  03F5  3004               	movlw	4
  2569  03F6  0020               	movlb	0	; select bank0
  2570  03F7  00A0               	movwf	??_Adf_Reset_Register_Three
  2571  03F8  0820               	movf	??_Adf_Reset_Register_Three,w
  2572  03F9  0021               	movlb	1	; select bank1
  2573  03FA  00C4               	movwf	(_adf_config^(0+128)+36)
  2574                           
  2575                           ;adf7012.c: 136: adf_config.r3.pll_test_mode = 0;
  2576  03FB  01C5               	clrf	(_adf_config^(0+128)+37)
  2577                           
  2578                           ;adf7012.c: 137: adf_config.r3.sd_test_mode = 0;
  2579  03FC  01C6               	clrf	(_adf_config^(0+128)+38)
  2580  03FD  0008               	return
  2581  03FE                     __end_of_Adf_Reset_Register_Three:	
  2582                           
  2583                           	psect	text10
  2584  0D20                     __ptext10:	
  2585 ;; *************** function _Adf_Reset_Register_One *****************
  2586 ;; Defined at:
  2587 ;;		line 106 in file "adf7012.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;		None               void
  2594 ;; Registers used:
  2595 ;;		wreg
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2604 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    3
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		_Adf_Reset_Config
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           
  2616                           ;psect for function _Adf_Reset_Register_One
  2617  0D20                     _Adf_Reset_Register_One:	
  2618                           
  2619                           ;adf7012.c: 107: adf_config.r1.integer_n = 109;
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  2623  0D20  306D               	movlw	109
  2624  0D21  0020               	movlb	0	; select bank0
  2625  0D22  00A0               	movwf	??_Adf_Reset_Register_One
  2626  0D23  0820               	movf	??_Adf_Reset_Register_One,w
  2627  0D24  0021               	movlb	1	; select bank1
  2628  0D25  00AE               	movwf	(_adf_config^(0+128)+14)
  2629                           
  2630                           ;adf7012.c: 108: adf_config.r1.fractional_n = 0;
  2631  0D26  3000               	movlw	0
  2632  0D27  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  2633  0D28  3000               	movlw	0
  2634  0D29  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  2635  0D2A  3000               	movlw	0
  2636  0D2B  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  2637  0D2C  3000               	movlw	0
  2638  0D2D  00AA               	movwf	(_adf_config^(0+128)+10)
  2639                           
  2640                           ;adf7012.c: 109: adf_config.r1.prescaler = 1;
  2641  0D2E  01AF               	clrf	(_adf_config^(0+128)+15)
  2642  0D2F  0AAF               	incf	(_adf_config^(0+128)+15),f
  2643  0D30  0008               	return
  2644  0D31                     __end_of_Adf_Reset_Register_One:	
  2645                           
  2646                           	psect	text11
  2647  0D31                     __ptext11:	
  2648 ;; *************** function _Adf_Reset *****************
  2649 ;; Defined at:
  2650 ;;		line 140 in file "adf7012.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;		None               void
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, pclath, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; Hardware stack levels required when called:    5
  2671 ;; This function calls:
  2672 ;;		_Delay_ms
  2673 ;; This function is called by:
  2674 ;;		_Adf_Reset_Config
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           
  2679                           ;psect for function _Adf_Reset
  2680  0D31                     _Adf_Reset:	
  2681                           
  2682                           ;adf7012.c: 142: PORTAbits.RA5 = 0;;
  2683                           
  2684                           ;incstack = 0
  2685                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  2686  0D31  0020               	movlb	0	; select bank0
  2687  0D32  128C               	bcf	12,5	;volatile
  2688                           
  2689                           ;adf7012.c: 143: Delay_ms(10);
  2690  0D33  300A               	movlw	10
  2691  0D34  00A0               	movwf	Delay_ms@time_to_delay
  2692  0D35  3000               	movlw	0
  2693  0D36  00A1               	movwf	Delay_ms@time_to_delay+1
  2694  0D37  318D  25AB  318D   	fcall	_Delay_ms
  2695                           
  2696                           ;adf7012.c: 144: PORTAbits.RA5 = 1;;
  2697  0D3A  0020               	movlb	0	; select bank0
  2698  0D3B  168C               	bsf	12,5	;volatile
  2699                           
  2700                           ;adf7012.c: 145: Delay_ms(10);
  2701  0D3C  300A               	movlw	10
  2702  0D3D  00A0               	movwf	Delay_ms@time_to_delay
  2703  0D3E  3000               	movlw	0
  2704  0D3F  00A1               	movwf	Delay_ms@time_to_delay+1
  2705  0D40  318D  25AB         	fcall	_Delay_ms
  2706  0D42  0008               	return
  2707  0D43                     __end_of_Adf_Reset:	
  2708                           
  2709                           	psect	text12
  2710  0D43                     __ptext12:	
  2711 ;; *************** function _Configure_Audio *****************
  2712 ;; Defined at:
  2713 ;;		line 47 in file "audio_tone.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;		None               void
  2720 ;; Registers used:
  2721 ;;		wreg
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2729 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2730 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2731 ;;Total ram usage:        1 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    3
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_Modem_Setup
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           
  2742                           ;psect for function _Configure_Audio
  2743  0D43                     _Configure_Audio:	
  2744                           
  2745                           ;audio_tone.c: 48: SAMPLES_PER_BAUD = 26;
  2746                           
  2747                           ;incstack = 0
  2748                           ; Regs used in _Configure_Audio: [wreg]
  2749  0D43  301A               	movlw	26
  2750  0D44  0020               	movlb	0	; select bank0
  2751  0D45  00A0               	movwf	??_Configure_Audio
  2752  0D46  0820               	movf	??_Configure_Audio,w
  2753  0D47  0021               	movlb	1	; select bank1
  2754  0D48  00D2               	movwf	_SAMPLES_PER_BAUD^(0+128)
  2755                           
  2756                           ;audio_tone.c: 49: PHASE_DELTA_1200 = 7;
  2757  0D49  3000               	movlw	0
  2758  0D4A  0022               	movlb	2	; select bank2
  2759  0D4B  00A7               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  2760  0D4C  3000               	movlw	0
  2761  0D4D  00A6               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  2762  0D4E  3000               	movlw	0
  2763  0D4F  00A5               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  2764  0D50  3007               	movlw	7
  2765  0D51  00A4               	movwf	_PHASE_DELTA_1200^(0+256)
  2766                           
  2767                           ;audio_tone.c: 50: PHASE_DELTA_2200 = 13;
  2768  0D52  3000               	movlw	0
  2769  0D53  00AB               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  2770  0D54  3000               	movlw	0
  2771  0D55  00AA               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  2772  0D56  3000               	movlw	0
  2773  0D57  00A9               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  2774  0D58  300D               	movlw	13
  2775  0D59  00A8               	movwf	_PHASE_DELTA_2200^(0+256)
  2776  0D5A  0008               	return
  2777  0D5B                     __end_of_Configure_Audio:	
  2778                           
  2779                           	psect	text13
  2780  0DCB                     __ptext13:	
  2781 ;; *************** function _Modem_Flush_Frame *****************
  2782 ;; Defined at:
  2783 ;;		line 59 in file "audio_tone.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;		None               void
  2790 ;; Registers used:
  2791 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2800 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2801 ;;Total ram usage:        1 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:   10
  2804 ;; This function calls:
  2805 ;;		_Delay_ms
  2806 ;;		_Ptt_On
  2807 ;;		_Timer0_Start
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           
  2814                           ;psect for function _Modem_Flush_Frame
  2815  0DCB                     _Modem_Flush_Frame:	
  2816                           
  2817                           ;audio_tone.c: 61: phase_delta = PHASE_DELTA_1200;
  2818                           
  2819                           ;incstack = 0
  2820                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2821  0DCB  0022               	movlb	2	; select bank2
  2822  0DCC  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  2823  0DCD  0020               	movlb	0	; select bank0
  2824  0DCE  00EC               	movwf	??_Modem_Flush_Frame
  2825  0DCF  086C               	movf	??_Modem_Flush_Frame,w
  2826  0DD0  0021               	movlb	1	; select bank1
  2827  0DD1  00D6               	movwf	_phase_delta^(0+128)
  2828                           
  2829                           ;audio_tone.c: 62: phase = 0;
  2830  0DD2  01FD               	clrf	_phase
  2831                           
  2832                           ;audio_tone.c: 63: packet_pos = 0;
  2833  0DD3  3000               	movlw	0
  2834  0DD4  00CA               	movwf	(_packet_pos+3)^(0+128)
  2835  0DD5  3000               	movlw	0
  2836  0DD6  00C9               	movwf	(_packet_pos+2)^(0+128)
  2837  0DD7  3000               	movlw	0
  2838  0DD8  00C8               	movwf	(_packet_pos+1)^(0+128)
  2839  0DD9  3000               	movlw	0
  2840  0DDA  00C7               	movwf	_packet_pos^(0+128)
  2841                           
  2842                           ;audio_tone.c: 64: current_sample_in_baud = 0;
  2843  0DDB  01D5               	clrf	_current_sample_in_baud^(0+128)
  2844                           
  2845                           ;audio_tone.c: 65: MODEM_TRANSMITTING = 1;
  2846  0DDC  01D0               	clrf	_MODEM_TRANSMITTING^(0+128)
  2847  0DDD  0AD0               	incf	_MODEM_TRANSMITTING^(0+128),f
  2848                           
  2849                           ;audio_tone.c: 75: Ptt_On();
  2850  0DDE  318E  2671  318D   	fcall	_Ptt_On
  2851                           
  2852                           ;audio_tone.c: 77: Delay_ms(100);
  2853  0DE1  3064               	movlw	100
  2854  0DE2  0020               	movlb	0	; select bank0
  2855  0DE3  00A0               	movwf	Delay_ms@time_to_delay
  2856  0DE4  3000               	movlw	0
  2857  0DE5  00A1               	movwf	Delay_ms@time_to_delay+1
  2858  0DE6  318D  25AB  318D   	fcall	_Delay_ms
  2859                           
  2860                           ;audio_tone.c: 78: Timer0_Start();
  2861  0DE9  318C  2490         	fcall	_Timer0_Start
  2862  0DEB  0008               	return
  2863  0DEC                     __end_of_Modem_Flush_Frame:	
  2864                           
  2865                           	psect	text14
  2866  0C90                     __ptext14:	
  2867 ;; *************** function _Timer0_Start *****************
  2868 ;; Defined at:
  2869 ;;		line 244 in file "utility.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;		None
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;		None
  2874 ;; Return value:  Size  Location     Type
  2875 ;;		None               void
  2876 ;; Registers used:
  2877 ;;		status,2
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;Total ram usage:        0 bytes
  2888 ;; Hardware stack levels used:    1
  2889 ;; Hardware stack levels required when called:    3
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_Modem_Flush_Frame
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           
  2898                           ;psect for function _Timer0_Start
  2899  0C90                     _Timer0_Start:	
  2900                           
  2901                           ;utility.c: 245: TMR0 = 0x00;
  2902                           
  2903                           ;incstack = 0
  2904                           ; Regs used in _Timer0_Start: [status,2]
  2905  0C90  0020               	movlb	0	; select bank0
  2906  0C91  0195               	clrf	21	;volatile
  2907                           
  2908                           ;utility.c: 246: TMR0IF = 0;
  2909  0C92  110B               	bcf	11,2	;volatile
  2910                           
  2911                           ;utility.c: 247: TMR0IE = 1;
  2912  0C93  168B               	bsf	11,5	;volatile
  2913  0C94  0008               	return
  2914  0C95                     __end_of_Timer0_Start:	
  2915                           
  2916                           	psect	text15
  2917  0E71                     __ptext15:	
  2918 ;; *************** function _Ptt_On *****************
  2919 ;; Defined at:
  2920 ;;		line 310 in file "adf7012.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      unsigned char 
  2927 ;; Registers used:
  2928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;Total ram usage:        1 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    9
  2941 ;; This function calls:
  2942 ;;		_Adf_Write_Config
  2943 ;;		_Delay_ms
  2944 ;;		_Read_Adf7012_Muxout
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;;		_Modem_Flush_Frame
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           
  2952                           ;psect for function _Ptt_On
  2953  0E71                     _Ptt_On:	
  2954                           
  2955                           ;adf7012.c: 312: adf_config.r3.pa_enable = 0;
  2956                           
  2957                           ;incstack = 0
  2958                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2959  0E71  0021               	movlb	1	; select bank1
  2960  0E72  01BA               	clrf	(_adf_config^(0+128)+26)
  2961                           
  2962                           ;adf7012.c: 313: adf_config.r2.power_amplifier_level = 0;
  2963  0E73  01B2               	clrf	(_adf_config^(0+128)+18)
  2964                           
  2965                           ;adf7012.c: 314: adf_config.r3.muxout = 3;
  2966  0E74  3003               	movlw	3
  2967  0E75  0020               	movlb	0	; select bank0
  2968  0E76  00EB               	movwf	??_Ptt_On
  2969  0E77  086B               	movf	??_Ptt_On,w
  2970  0E78  0021               	movlb	1	; select bank1
  2971  0E79  00C1               	movwf	(_adf_config^(0+128)+33)
  2972                           
  2973                           ;adf7012.c: 316: Adf_Write_Config();
  2974  0E7A  318C  24BA  318E   	fcall	_Adf_Write_Config
  2975                           
  2976                           ;adf7012.c: 317: Delay_ms(10);
  2977  0E7D  300A               	movlw	10
  2978  0E7E  0020               	movlb	0	; select bank0
  2979  0E7F  00A0               	movwf	Delay_ms@time_to_delay
  2980  0E80  3000               	movlw	0
  2981  0E81  00A1               	movwf	Delay_ms@time_to_delay+1
  2982  0E82  318D  25AB  318E   	fcall	_Delay_ms
  2983                           
  2984                           ;adf7012.c: 321: if (!Read_Adf7012_Muxout())
  2985  0E85  318C  24B3  318E   	fcall	_Read_Adf7012_Muxout
  2986  0E88  3800               	iorlw	0
  2987  0E89  1903               	btfsc	3,2
  2988  0E8A  0008               	return
  2989                           
  2990                           ;adf7012.c: 325: else
  2991                           ;adf7012.c: 326: {
  2992                           ;adf7012.c: 328: adf_config.r3.pa_enable = 1;
  2993                           
  2994                           ;adf7012.c: 324: }
  2995                           
  2996                           ;adf7012.c: 322: {
  2997                           ;adf7012.c: 323: return 0;
  2998                           ;	Return value of _Ptt_On is never used
  2999  0E8B  0021               	movlb	1	; select bank1
  3000  0E8C  01BA               	clrf	(_adf_config^(0+128)+26)
  3001  0E8D  0ABA               	incf	(_adf_config^(0+128)+26),f
  3002                           
  3003                           ;adf7012.c: 329: adf_config.r2.power_amplifier_level = 63;
  3004  0E8E  303F               	movlw	63
  3005  0E8F  0020               	movlb	0	; select bank0
  3006  0E90  00EB               	movwf	??_Ptt_On
  3007  0E91  086B               	movf	??_Ptt_On,w
  3008  0E92  0021               	movlb	1	; select bank1
  3009  0E93  00B2               	movwf	(_adf_config^(0+128)+18)
  3010                           
  3011                           ;adf7012.c: 331: Delay_ms(10);
  3012  0E94  300A               	movlw	10
  3013  0E95  0020               	movlb	0	; select bank0
  3014  0E96  00A0               	movwf	Delay_ms@time_to_delay
  3015  0E97  3000               	movlw	0
  3016  0E98  00A1               	movwf	Delay_ms@time_to_delay+1
  3017  0E99  318D  25AB  318E   	fcall	_Delay_ms
  3018                           
  3019                           ;adf7012.c: 332: Adf_Write_Config();
  3020  0E9C  318C  24BA  318E   	fcall	_Adf_Write_Config
  3021                           
  3022                           ;adf7012.c: 333: Delay_ms(1);
  3023  0E9F  3001               	movlw	1
  3024  0EA0  0020               	movlb	0	; select bank0
  3025  0EA1  00A0               	movwf	Delay_ms@time_to_delay
  3026  0EA2  3000               	movlw	0
  3027  0EA3  00A1               	movwf	Delay_ms@time_to_delay+1
  3028  0EA4  318D  25AB         	fcall	_Delay_ms
  3029                           
  3030                           ;adf7012.c: 335: return 1;
  3031                           ;	Return value of _Ptt_On is never used
  3032  0EA6  0008               	return
  3033  0EA7                     __end_of_Ptt_On:	
  3034                           
  3035                           	psect	text16
  3036  0CB3                     __ptext16:	
  3037 ;; *************** function _Read_Adf7012_Muxout *****************
  3038 ;; Defined at:
  3039 ;;		line 64 in file "utility.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      unsigned char 
  3046 ;; Registers used:
  3047 ;;		wreg
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    3
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_Ptt_On
  3064 ;;		_Adf_Locked
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           
  3069                           ;psect for function _Read_Adf7012_Muxout
  3070  0CB3                     _Read_Adf7012_Muxout:	
  3071                           
  3072                           ;utility.c: 66: if(PORTCbits.RC5)
  3073                           
  3074                           ;incstack = 0
  3075                           ; Regs used in _Read_Adf7012_Muxout: [wreg]
  3076  0CB3  0020               	movlb	0	; select bank0
  3077  0CB4  1E8E               	btfss	14,5	;volatile
  3078  0CB5  2CB8               	goto	l1835
  3079                           
  3080                           ;utility.c: 67: return 1;
  3081  0CB6  3001               	movlw	1
  3082  0CB7  0008               	return
  3083  0CB8                     l1835:	
  3084                           
  3085                           ;utility.c: 68: else
  3086                           ;utility.c: 69: return 0;
  3087  0CB8  3000               	movlw	0
  3088  0CB9  0008               	return
  3089  0CBA                     __end_of_Read_Adf7012_Muxout:	
  3090                           
  3091                           	psect	text17
  3092  0CBA                     __ptext17:	
  3093 ;; *************** function _Adf_Write_Config *****************
  3094 ;; Defined at:
  3095 ;;		line 150 in file "adf7012.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;		None
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;		None               void
  3102 ;; Registers used:
  3103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3113 ;;Total ram usage:        0 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    8
  3116 ;; This function calls:
  3117 ;;		_Adf_Write_Register_One
  3118 ;;		_Adf_Write_Register_Three
  3119 ;;		_Adf_Write_Register_Two
  3120 ;;		_Adf_Write_Register_Zero
  3121 ;; This function is called by:
  3122 ;;		_Radio_Setup
  3123 ;;		_Ptt_On
  3124 ;;		_Ptt_Off
  3125 ;;		_Adf_Lock
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _Adf_Write_Config
  3131  0CBA                     _Adf_Write_Config:	
  3132                           
  3133                           ;adf7012.c: 151: Adf_Write_Register_Zero();
  3134                           
  3135                           ;incstack = 0
  3136                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3137  0CBA  3182  22CD  318C   	fcall	_Adf_Write_Register_Zero
  3138                           
  3139                           ;adf7012.c: 152: Adf_Write_Register_One();
  3140  0CBD  318F  2716  318C   	fcall	_Adf_Write_Register_One
  3141                           
  3142                           ;adf7012.c: 153: Adf_Write_Register_Two();
  3143  0CC0  3184  24C4  318C   	fcall	_Adf_Write_Register_Two
  3144                           
  3145                           ;adf7012.c: 154: Adf_Write_Register_Three();
  3146  0CC3  3180  2089         	fcall	_Adf_Write_Register_Three
  3147  0CC5  0008               	return
  3148  0CC6                     __end_of_Adf_Write_Config:	
  3149                           
  3150                           	psect	text18
  3151  02CD                     __ptext18:	
  3152 ;; *************** function _Adf_Write_Register_Zero *****************
  3153 ;; Defined at:
  3154 ;;		line 157 in file "adf7012.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;		None
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  3159 ;;  reg             4   51[BANK0 ] unsigned long 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;		None               void
  3162 ;; Registers used:
  3163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3170 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;Total ram usage:       36 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    7
  3176 ;; This function calls:
  3177 ;;		_Reverse_Array
  3178 ;;		_Write_Adf7012_Reg
  3179 ;;		_memcpy
  3180 ;; This function is called by:
  3181 ;;		_Adf_Write_Config
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function _Adf_Write_Register_Zero
  3187  02CD                     _Adf_Write_Register_Zero:	
  3188                           
  3189                           ;adf7012.c: 159: uint32_t reg =
  3190                           ;adf7012.c: 160: (0) |
  3191                           ;adf7012.c: 161: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  3192                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  3193                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  3194                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  3195                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  3196                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  3200  02CD  0021               	movlb	1	; select bank1
  3201  02CE  0829               	movf	(_adf_config^(0+128)+9),w
  3202  02CF  3903               	andlw	3
  3203  02D0  0020               	movlb	0	; select bank0
  3204  02D1  00B3               	movwf	??_Adf_Write_Register_Zero
  3205  02D2  01B4               	clrf	??_Adf_Write_Register_Zero+1
  3206  02D3  01B5               	clrf	??_Adf_Write_Register_Zero+2
  3207  02D4  01B6               	clrf	??_Adf_Write_Register_Zero+3
  3208  02D5  3019               	movlw	25
  3209  02D6                     u1145:	
  3210  02D6  35B3               	lslf	??_Adf_Write_Register_Zero,f
  3211  02D7  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  3212  02D8  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  3213  02D9  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  3214  02DA  0B89               	decfsz	9,f
  3215  02DB  2AD6               	goto	u1145
  3216  02DC  0021               	movlb	1	; select bank1
  3217  02DD  0828               	movf	(_adf_config^(0+128)+8),w
  3218  02DE  3903               	andlw	3
  3219  02DF  0020               	movlb	0	; select bank0
  3220  02E0  00B7               	movwf	??_Adf_Write_Register_Zero+4
  3221  02E1  01B8               	clrf	??_Adf_Write_Register_Zero+5
  3222  02E2  01B9               	clrf	??_Adf_Write_Register_Zero+6
  3223  02E3  01BA               	clrf	??_Adf_Write_Register_Zero+7
  3224  02E4  3017               	movlw	23
  3225  02E5                     u1155:	
  3226  02E5  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  3227  02E6  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  3228  02E7  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  3229  02E8  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  3230  02E9  0B89               	decfsz	9,f
  3231  02EA  2AE5               	goto	u1155
  3232  02EB  0021               	movlb	1	; select bank1
  3233  02EC  0827               	movf	(_adf_config^(0+128)+7),w
  3234  02ED  390F               	andlw	15
  3235  02EE  0020               	movlb	0	; select bank0
  3236  02EF  00BB               	movwf	??_Adf_Write_Register_Zero+8
  3237  02F0  01BC               	clrf	??_Adf_Write_Register_Zero+9
  3238  02F1  01BD               	clrf	??_Adf_Write_Register_Zero+10
  3239  02F2  01BE               	clrf	??_Adf_Write_Register_Zero+11
  3240  02F3  3013               	movlw	19
  3241  02F4                     u1165:	
  3242  02F4  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  3243  02F5  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  3244  02F6  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  3245  02F7  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  3246  02F8  0B89               	decfsz	9,f
  3247  02F9  2AF4               	goto	u1165
  3248  02FA  0021               	movlb	1	; select bank1
  3249  02FB  0826               	movf	(_adf_config^(0+128)+6),w
  3250  02FC  3901               	andlw	1
  3251  02FD  0020               	movlb	0	; select bank0
  3252  02FE  00BF               	movwf	??_Adf_Write_Register_Zero+12
  3253  02FF  01C0               	clrf	??_Adf_Write_Register_Zero+13
  3254  0300  01C1               	clrf	??_Adf_Write_Register_Zero+14
  3255  0301  01C2               	clrf	??_Adf_Write_Register_Zero+15
  3256  0302  3012               	movlw	18
  3257  0303                     u1175:	
  3258  0303  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  3259  0304  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  3260  0305  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  3261  0306  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  3262  0307  0B89               	decfsz	9,f
  3263  0308  2B03               	goto	u1175
  3264  0309  0021               	movlb	1	; select bank1
  3265  030A  0825               	movf	(_adf_config^(0+128)+5),w
  3266  030B  3901               	andlw	1
  3267  030C  0020               	movlb	0	; select bank0
  3268  030D  00C3               	movwf	??_Adf_Write_Register_Zero+16
  3269  030E  01C4               	clrf	??_Adf_Write_Register_Zero+17
  3270  030F  01C5               	clrf	??_Adf_Write_Register_Zero+18
  3271  0310  01C6               	clrf	??_Adf_Write_Register_Zero+19
  3272  0311  3011               	movlw	17
  3273  0312                     u1185:	
  3274  0312  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  3275  0313  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  3276  0314  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  3277  0315  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  3278  0316  0B89               	decfsz	9,f
  3279  0317  2B12               	goto	u1185
  3280  0318  0021               	movlb	1	; select bank1
  3281  0319  0824               	movf	(_adf_config^(0+128)+4),w
  3282  031A  390F               	andlw	15
  3283  031B  0020               	movlb	0	; select bank0
  3284  031C  00C7               	movwf	??_Adf_Write_Register_Zero+20
  3285  031D  01C8               	clrf	??_Adf_Write_Register_Zero+21
  3286  031E  01C9               	clrf	??_Adf_Write_Register_Zero+22
  3287  031F  01CA               	clrf	??_Adf_Write_Register_Zero+23
  3288  0320  300D               	movlw	13
  3289  0321                     u1195:	
  3290  0321  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  3291  0322  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  3292  0323  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  3293  0324  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  3294  0325  0B89               	decfsz	9,f
  3295  0326  2B21               	goto	u1195
  3296  0327  30FF               	movlw	255
  3297  0328  0021               	movlb	1	; select bank1
  3298  0329  0520               	andwf	_adf_config^(0+128),w
  3299  032A  0020               	movlb	0	; select bank0
  3300  032B  00CB               	movwf	??_Adf_Write_Register_Zero+24
  3301  032C  3007               	movlw	7
  3302  032D  0021               	movlb	1	; select bank1
  3303  032E  0521               	andwf	(_adf_config+1)^(0+128),w
  3304  032F  0020               	movlb	0	; select bank0
  3305  0330  00CC               	movwf	??_Adf_Write_Register_Zero+25
  3306  0331  3000               	movlw	0
  3307  0332  0021               	movlb	1	; select bank1
  3308  0333  0522               	andwf	(_adf_config+2)^(0+128),w
  3309  0334  0020               	movlb	0	; select bank0
  3310  0335  00CD               	movwf	??_Adf_Write_Register_Zero+26
  3311  0336  3000               	movlw	0
  3312  0337  0021               	movlb	1	; select bank1
  3313  0338  0523               	andwf	(_adf_config+3)^(0+128),w
  3314  0339  0020               	movlb	0	; select bank0
  3315  033A  00CE               	movwf	??_Adf_Write_Register_Zero+27
  3316  033B  3002               	movlw	2
  3317  033C                     u1205:	
  3318  033C  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  3319  033D  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  3320  033E  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  3321  033F  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  3322  0340  0B89               	decfsz	9,f
  3323  0341  2B3C               	goto	u1205
  3324  0342  084B               	movf	??_Adf_Write_Register_Zero+24,w
  3325  0343  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  3326  0344  084C               	movf	??_Adf_Write_Register_Zero+25,w
  3327  0345  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  3328  0346  084D               	movf	??_Adf_Write_Register_Zero+26,w
  3329  0347  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  3330  0348  084E               	movf	??_Adf_Write_Register_Zero+27,w
  3331  0349  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  3332  034A  0847               	movf	??_Adf_Write_Register_Zero+20,w
  3333  034B  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  3334  034C  0848               	movf	??_Adf_Write_Register_Zero+21,w
  3335  034D  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  3336  034E  0849               	movf	??_Adf_Write_Register_Zero+22,w
  3337  034F  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  3338  0350  084A               	movf	??_Adf_Write_Register_Zero+23,w
  3339  0351  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  3340  0352  0843               	movf	??_Adf_Write_Register_Zero+16,w
  3341  0353  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  3342  0354  0844               	movf	??_Adf_Write_Register_Zero+17,w
  3343  0355  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  3344  0356  0845               	movf	??_Adf_Write_Register_Zero+18,w
  3345  0357  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  3346  0358  0846               	movf	??_Adf_Write_Register_Zero+19,w
  3347  0359  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  3348  035A  083F               	movf	??_Adf_Write_Register_Zero+12,w
  3349  035B  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  3350  035C  0840               	movf	??_Adf_Write_Register_Zero+13,w
  3351  035D  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  3352  035E  0841               	movf	??_Adf_Write_Register_Zero+14,w
  3353  035F  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  3354  0360  0842               	movf	??_Adf_Write_Register_Zero+15,w
  3355  0361  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  3356  0362  083B               	movf	??_Adf_Write_Register_Zero+8,w
  3357  0363  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  3358  0364  083C               	movf	??_Adf_Write_Register_Zero+9,w
  3359  0365  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  3360  0366  083D               	movf	??_Adf_Write_Register_Zero+10,w
  3361  0367  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  3362  0368  083E               	movf	??_Adf_Write_Register_Zero+11,w
  3363  0369  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  3364  036A  0833               	movf	??_Adf_Write_Register_Zero,w
  3365  036B  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  3366  036C  00D3               	movwf	Adf_Write_Register_Zero@reg
  3367  036D  0834               	movf	??_Adf_Write_Register_Zero+1,w
  3368  036E  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  3369  036F  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  3370  0370  0835               	movf	??_Adf_Write_Register_Zero+2,w
  3371  0371  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  3372  0372  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  3373  0373  0836               	movf	??_Adf_Write_Register_Zero+3,w
  3374  0374  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  3375  0375  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  3376                           
  3377                           ;adf7012.c: 170: uint8_t reg_ptr[4];
  3378                           ;adf7012.c: 171: memcpy(reg_ptr, &reg, 4);
  3379  0376  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  3380  0377  00B3               	movwf	??_Adf_Write_Register_Zero
  3381  0378  0833               	movf	??_Adf_Write_Register_Zero,w
  3382  0379  00A0               	movwf	memcpy@s1
  3383  037A  3004               	movlw	4
  3384  037B  00A1               	movwf	memcpy@n
  3385  037C  3000               	movlw	0
  3386  037D  00A2               	movwf	memcpy@n+1
  3387  037E  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  3388  037F  318D  25EC  3182   	fcall	_memcpy
  3389                           
  3390                           ;adf7012.c: 172: Reverse_Array(reg_ptr,4);
  3391  0382  3004               	movlw	4
  3392  0383  0020               	movlb	0	; select bank0
  3393  0384  00B3               	movwf	??_Adf_Write_Register_Zero
  3394  0385  0833               	movf	??_Adf_Write_Register_Zero,w
  3395  0386  00A7               	movwf	Reverse_Array@length
  3396  0387  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  3397  0388  3183  2394  3182   	fcall	_Reverse_Array
  3398                           
  3399                           ;adf7012.c: 173: Write_Adf7012_Reg(reg_ptr, 4);
  3400  038B  3004               	movlw	4
  3401  038C  0020               	movlb	0	; select bank0
  3402  038D  00B3               	movwf	??_Adf_Write_Register_Zero
  3403  038E  0833               	movf	??_Adf_Write_Register_Zero,w
  3404  038F  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  3405  0390  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  3406  0391  318E  26DD         	fcall	_Write_Adf7012_Reg
  3407  0393  0008               	return
  3408  0394                     __end_of_Adf_Write_Register_Zero:	
  3409                           
  3410                           	psect	text19
  3411  04C4                     __ptext19:	
  3412 ;; *************** function _Adf_Write_Register_Two *****************
  3413 ;; Defined at:
  3414 ;;		line 189 in file "adf7012.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;		None
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  3419 ;;  reg             4   47[BANK0 ] unsigned long 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;		None               void
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3433 ;;Total ram usage:       32 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    7
  3436 ;; This function calls:
  3437 ;;		_Reverse_Array
  3438 ;;		_Write_Adf7012_Reg
  3439 ;;		_memcpy
  3440 ;; This function is called by:
  3441 ;;		_Adf_Write_Config
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function _Adf_Write_Register_Two
  3447  04C4                     _Adf_Write_Register_Two:	
  3448                           
  3449                           ;adf7012.c: 190: uint32_t reg =
  3450                           ;adf7012.c: 191: (2) |
  3451                           ;adf7012.c: 192: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  3452                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  3453                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  3454                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  3455                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  3456                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  3457                           
  3458                           ;incstack = 0
  3459                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  3460  04C4  0021               	movlb	1	; select bank1
  3461  04C5  0838               	movf	(_adf_config^(0+128)+24),w
  3462  04C6  3903               	andlw	3
  3463  04C7  0020               	movlb	0	; select bank0
  3464  04C8  00B3               	movwf	??_Adf_Write_Register_Two
  3465  04C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  3466  04CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  3467  04CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  3468  04CC  3017               	movlw	23
  3469  04CD                     u1245:	
  3470  04CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  3471  04CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  3472  04CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  3473  04D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  3474  04D1  0B89               	decfsz	9,f
  3475  04D2  2CCD               	goto	u1245
  3476  04D3  0021               	movlb	1	; select bank1
  3477  04D4  0837               	movf	(_adf_config^(0+128)+23),w
  3478  04D5  3907               	andlw	7
  3479  04D6  0020               	movlb	0	; select bank0
  3480  04D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  3481  04D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  3482  04D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  3483  04DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  3484  04DB  3014               	movlw	20
  3485  04DC                     u1255:	
  3486  04DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  3487  04DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  3488  04DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  3489  04DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  3490  04E0  0B89               	decfsz	9,f
  3491  04E1  2CDC               	goto	u1255
  3492  04E2  3013               	movlw	19
  3493  04E3  3EA0               	addlw	_adf_config& (0+255)
  3494  04E4  0086               	movwf	6
  3495  04E5  0187               	clrf	7
  3496  04E6  30FF               	movlw	255
  3497  04E7  0501               	andwf	1,w
  3498  04E8  00BB               	movwf	??_Adf_Write_Register_Two+8
  3499  04E9  3141               	addfsr 1,1
  3500  04EA  3001               	movlw	1
  3501  04EB  0501               	andwf	1,w
  3502  04EC  00BC               	movwf	??_Adf_Write_Register_Two+9
  3503  04ED  3141               	addfsr 1,1
  3504  04EE  3000               	movlw	0
  3505  04EF  0501               	andwf	1,w
  3506  04F0  00BD               	movwf	??_Adf_Write_Register_Two+10
  3507  04F1  3141               	addfsr 1,1
  3508  04F2  3000               	movlw	0
  3509  04F3  0501               	andwf	1,w
  3510  04F4  00BE               	movwf	??_Adf_Write_Register_Two+11
  3511  04F5  300B               	movlw	11
  3512  04F6                     u1265:	
  3513  04F6  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  3514  04F7  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  3515  04F8  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  3516  04F9  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  3517  04FA  0B89               	decfsz	9,f
  3518  04FB  2CF6               	goto	u1265
  3519  04FC  0021               	movlb	1	; select bank1
  3520  04FD  0832               	movf	(_adf_config^(0+128)+18),w
  3521  04FE  393F               	andlw	63
  3522  04FF  0020               	movlb	0	; select bank0
  3523  0500  00BF               	movwf	??_Adf_Write_Register_Two+12
  3524  0501  01C0               	clrf	??_Adf_Write_Register_Two+13
  3525  0502  01C1               	clrf	??_Adf_Write_Register_Two+14
  3526  0503  01C2               	clrf	??_Adf_Write_Register_Two+15
  3527  0504  3005               	movlw	5
  3528  0505                     u1275:	
  3529  0505  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  3530  0506  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  3531  0507  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  3532  0508  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  3533  0509  0B89               	decfsz	9,f
  3534  050A  2D05               	goto	u1275
  3535  050B  0021               	movlb	1	; select bank1
  3536  050C  0831               	movf	(_adf_config^(0+128)+17),w
  3537  050D  3901               	andlw	1
  3538  050E  0020               	movlb	0	; select bank0
  3539  050F  00C3               	movwf	??_Adf_Write_Register_Two+16
  3540  0510  01C4               	clrf	??_Adf_Write_Register_Two+17
  3541  0511  01C5               	clrf	??_Adf_Write_Register_Two+18
  3542  0512  01C6               	clrf	??_Adf_Write_Register_Two+19
  3543  0513  3004               	movlw	4
  3544  0514                     u1285:	
  3545  0514  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  3546  0515  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  3547  0516  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  3548  0517  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  3549  0518  0B89               	decfsz	9,f
  3550  0519  2D14               	goto	u1285
  3551  051A  0021               	movlb	1	; select bank1
  3552  051B  0830               	movf	(_adf_config^(0+128)+16),w
  3553  051C  3903               	andlw	3
  3554  051D  0020               	movlb	0	; select bank0
  3555  051E  00C7               	movwf	??_Adf_Write_Register_Two+20
  3556  051F  01C8               	clrf	??_Adf_Write_Register_Two+21
  3557  0520  01C9               	clrf	??_Adf_Write_Register_Two+22
  3558  0521  01CA               	clrf	??_Adf_Write_Register_Two+23
  3559  0522  3002               	movlw	2
  3560  0523                     u1295:	
  3561  0523  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  3562  0524  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  3563  0525  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  3564  0526  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  3565  0527  0B89               	decfsz	9,f
  3566  0528  2D23               	goto	u1295
  3567  0529  0847               	movf	??_Adf_Write_Register_Two+20,w
  3568  052A  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  3569  052B  0848               	movf	??_Adf_Write_Register_Two+21,w
  3570  052C  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  3571  052D  0849               	movf	??_Adf_Write_Register_Two+22,w
  3572  052E  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  3573  052F  084A               	movf	??_Adf_Write_Register_Two+23,w
  3574  0530  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  3575  0531  0843               	movf	??_Adf_Write_Register_Two+16,w
  3576  0532  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  3577  0533  0844               	movf	??_Adf_Write_Register_Two+17,w
  3578  0534  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  3579  0535  0845               	movf	??_Adf_Write_Register_Two+18,w
  3580  0536  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  3581  0537  0846               	movf	??_Adf_Write_Register_Two+19,w
  3582  0538  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  3583  0539  083F               	movf	??_Adf_Write_Register_Two+12,w
  3584  053A  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  3585  053B  0840               	movf	??_Adf_Write_Register_Two+13,w
  3586  053C  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  3587  053D  0841               	movf	??_Adf_Write_Register_Two+14,w
  3588  053E  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  3589  053F  0842               	movf	??_Adf_Write_Register_Two+15,w
  3590  0540  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  3591  0541  083B               	movf	??_Adf_Write_Register_Two+8,w
  3592  0542  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  3593  0543  083C               	movf	??_Adf_Write_Register_Two+9,w
  3594  0544  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  3595  0545  083D               	movf	??_Adf_Write_Register_Two+10,w
  3596  0546  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  3597  0547  083E               	movf	??_Adf_Write_Register_Two+11,w
  3598  0548  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  3599  0549  0837               	movf	??_Adf_Write_Register_Two+4,w
  3600  054A  04B3               	iorwf	??_Adf_Write_Register_Two,f
  3601  054B  0838               	movf	??_Adf_Write_Register_Two+5,w
  3602  054C  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  3603  054D  0839               	movf	??_Adf_Write_Register_Two+6,w
  3604  054E  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  3605  054F  083A               	movf	??_Adf_Write_Register_Two+7,w
  3606  0550  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  3607  0551  3002               	movlw	2
  3608  0552  0433               	iorwf	??_Adf_Write_Register_Two,w
  3609  0553  00CF               	movwf	Adf_Write_Register_Two@reg
  3610  0554  3000               	movlw	0
  3611  0555  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  3612  0556  00D0               	movwf	Adf_Write_Register_Two@reg+1
  3613  0557  3000               	movlw	0
  3614  0558  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  3615  0559  00D1               	movwf	Adf_Write_Register_Two@reg+2
  3616  055A  3000               	movlw	0
  3617  055B  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  3618  055C  00D2               	movwf	Adf_Write_Register_Two@reg+3
  3619                           
  3620                           ;adf7012.c: 200: uint8_t reg_ptr[4];
  3621                           ;adf7012.c: 201: memcpy(reg_ptr, &reg, 4);
  3622  055D  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  3623  055E  00B3               	movwf	??_Adf_Write_Register_Two
  3624  055F  0833               	movf	??_Adf_Write_Register_Two,w
  3625  0560  00A0               	movwf	memcpy@s1
  3626  0561  3004               	movlw	4
  3627  0562  00A1               	movwf	memcpy@n
  3628  0563  3000               	movlw	0
  3629  0564  00A2               	movwf	memcpy@n+1
  3630  0565  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3631  0566  318D  25EC  3184   	fcall	_memcpy
  3632                           
  3633                           ;adf7012.c: 202: Reverse_Array(reg_ptr,4);
  3634  0569  3004               	movlw	4
  3635  056A  0020               	movlb	0	; select bank0
  3636  056B  00B3               	movwf	??_Adf_Write_Register_Two
  3637  056C  0833               	movf	??_Adf_Write_Register_Two,w
  3638  056D  00A7               	movwf	Reverse_Array@length
  3639  056E  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3640  056F  3183  2394  3184   	fcall	_Reverse_Array
  3641                           
  3642                           ;adf7012.c: 203: Write_Adf7012_Reg(reg_ptr, 4);
  3643  0572  3004               	movlw	4
  3644  0573  0020               	movlb	0	; select bank0
  3645  0574  00B3               	movwf	??_Adf_Write_Register_Two
  3646  0575  0833               	movf	??_Adf_Write_Register_Two,w
  3647  0576  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  3648  0577  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3649  0578  318E  26DD         	fcall	_Write_Adf7012_Reg
  3650  057A  0008               	return
  3651  057B                     __end_of_Adf_Write_Register_Two:	
  3652                           
  3653                           	psect	text20
  3654  0089                     __ptext20:	
  3655 ;; *************** function _Adf_Write_Register_Three *****************
  3656 ;; Defined at:
  3657 ;;		line 206 in file "adf7012.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  3662 ;;  reg             4    4[BANK1 ] unsigned long 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;		None               void
  3665 ;; Registers used:
  3666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;Total ram usage:       64 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    7
  3679 ;; This function calls:
  3680 ;;		_Reverse_Array
  3681 ;;		_Write_Adf7012_Reg
  3682 ;;		_memcpy
  3683 ;; This function is called by:
  3684 ;;		_Adf_Write_Config
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           
  3689                           ;psect for function _Adf_Write_Register_Three
  3690  0089                     _Adf_Write_Register_Three:	
  3691                           
  3692                           ;adf7012.c: 207: uint32_t reg =
  3693                           ;adf7012.c: 208: (3) |
  3694                           ;adf7012.c: 209: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  3695                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  3696                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  3697                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  3698                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  3699                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  3700                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  3701                           
  3702                           ;incstack = 0
  3703                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  3704  0089  0021               	movlb	1	; select bank1
  3705  008A  0846               	movf	(_adf_config^(0+128)+38),w
  3706  008B  390F               	andlw	15
  3707  008C  0020               	movlb	0	; select bank0
  3708  008D  00B3               	movwf	??_Adf_Write_Register_Three
  3709  008E  01B4               	clrf	??_Adf_Write_Register_Three+1
  3710  008F  01B5               	clrf	??_Adf_Write_Register_Three+2
  3711  0090  01B6               	clrf	??_Adf_Write_Register_Three+3
  3712  0091  301C               	movlw	28
  3713  0092                     u1305:	
  3714  0092  35B3               	lslf	??_Adf_Write_Register_Three,f
  3715  0093  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  3716  0094  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  3717  0095  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  3718  0096  0B89               	decfsz	9,f
  3719  0097  2892               	goto	u1305
  3720  0098  0021               	movlb	1	; select bank1
  3721  0099  0845               	movf	(_adf_config^(0+128)+37),w
  3722  009A  391F               	andlw	31
  3723  009B  0020               	movlb	0	; select bank0
  3724  009C  00B7               	movwf	??_Adf_Write_Register_Three+4
  3725  009D  01B8               	clrf	??_Adf_Write_Register_Three+5
  3726  009E  01B9               	clrf	??_Adf_Write_Register_Three+6
  3727  009F  01BA               	clrf	??_Adf_Write_Register_Three+7
  3728  00A0  3017               	movlw	23
  3729  00A1                     u1315:	
  3730  00A1  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  3731  00A2  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  3732  00A3  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  3733  00A4  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  3734  00A5  0B89               	decfsz	9,f
  3735  00A6  28A1               	goto	u1315
  3736  00A7  0021               	movlb	1	; select bank1
  3737  00A8  0844               	movf	(_adf_config^(0+128)+36),w
  3738  00A9  3907               	andlw	7
  3739  00AA  0020               	movlb	0	; select bank0
  3740  00AB  00BB               	movwf	??_Adf_Write_Register_Three+8
  3741  00AC  01BC               	clrf	??_Adf_Write_Register_Three+9
  3742  00AD  01BD               	clrf	??_Adf_Write_Register_Three+10
  3743  00AE  01BE               	clrf	??_Adf_Write_Register_Three+11
  3744  00AF  3014               	movlw	20
  3745  00B0                     u1325:	
  3746  00B0  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  3747  00B1  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  3748  00B2  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  3749  00B3  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  3750  00B4  0B89               	decfsz	9,f
  3751  00B5  28B0               	goto	u1325
  3752  00B6  0021               	movlb	1	; select bank1
  3753  00B7  0843               	movf	(_adf_config^(0+128)+35),w
  3754  00B8  390F               	andlw	15
  3755  00B9  0020               	movlb	0	; select bank0
  3756  00BA  00BF               	movwf	??_Adf_Write_Register_Three+12
  3757  00BB  01C0               	clrf	??_Adf_Write_Register_Three+13
  3758  00BC  01C1               	clrf	??_Adf_Write_Register_Three+14
  3759  00BD  01C2               	clrf	??_Adf_Write_Register_Three+15
  3760  00BE  3010               	movlw	16
  3761  00BF                     u1335:	
  3762  00BF  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  3763  00C0  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  3764  00C1  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  3765  00C2  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  3766  00C3  0B89               	decfsz	9,f
  3767  00C4  28BF               	goto	u1335
  3768  00C5  0021               	movlb	1	; select bank1
  3769  00C6  0842               	movf	(_adf_config^(0+128)+34),w
  3770  00C7  3901               	andlw	1
  3771  00C8  0020               	movlb	0	; select bank0
  3772  00C9  00C3               	movwf	??_Adf_Write_Register_Three+16
  3773  00CA  01C4               	clrf	??_Adf_Write_Register_Three+17
  3774  00CB  01C5               	clrf	??_Adf_Write_Register_Three+18
  3775  00CC  01C6               	clrf	??_Adf_Write_Register_Three+19
  3776  00CD  300F               	movlw	15
  3777  00CE                     u1345:	
  3778  00CE  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  3779  00CF  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  3780  00D0  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  3781  00D1  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  3782  00D2  0B89               	decfsz	9,f
  3783  00D3  28CE               	goto	u1345
  3784  00D4  0021               	movlb	1	; select bank1
  3785  00D5  0841               	movf	(_adf_config^(0+128)+33),w
  3786  00D6  390F               	andlw	15
  3787  00D7  0020               	movlb	0	; select bank0
  3788  00D8  00C7               	movwf	??_Adf_Write_Register_Three+20
  3789  00D9  01C8               	clrf	??_Adf_Write_Register_Three+21
  3790  00DA  01C9               	clrf	??_Adf_Write_Register_Three+22
  3791  00DB  01CA               	clrf	??_Adf_Write_Register_Three+23
  3792  00DC  300B               	movlw	11
  3793  00DD                     u1355:	
  3794  00DD  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  3795  00DE  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  3796  00DF  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  3797  00E0  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  3798  00E1  0B89               	decfsz	9,f
  3799  00E2  28DD               	goto	u1355
  3800  00E3  0021               	movlb	1	; select bank1
  3801  00E4  0840               	movf	(_adf_config^(0+128)+32),w
  3802  00E5  3901               	andlw	1
  3803  00E6  0020               	movlb	0	; select bank0
  3804  00E7  00CB               	movwf	??_Adf_Write_Register_Three+24
  3805  00E8  01CC               	clrf	??_Adf_Write_Register_Three+25
  3806  00E9  01CD               	clrf	??_Adf_Write_Register_Three+26
  3807  00EA  01CE               	clrf	??_Adf_Write_Register_Three+27
  3808  00EB  300A               	movlw	10
  3809  00EC                     u1365:	
  3810  00EC  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  3811  00ED  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  3812  00EE  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  3813  00EF  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  3814  00F0  0B89               	decfsz	9,f
  3815  00F1  28EC               	goto	u1365
  3816  00F2  0021               	movlb	1	; select bank1
  3817  00F3  083F               	movf	(_adf_config^(0+128)+31),w
  3818  00F4  3901               	andlw	1
  3819  00F5  0020               	movlb	0	; select bank0
  3820  00F6  00CF               	movwf	??_Adf_Write_Register_Three+28
  3821  00F7  01D0               	clrf	??_Adf_Write_Register_Three+29
  3822  00F8  01D1               	clrf	??_Adf_Write_Register_Three+30
  3823  00F9  01D2               	clrf	??_Adf_Write_Register_Three+31
  3824  00FA  3009               	movlw	9
  3825  00FB                     u1375:	
  3826  00FB  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  3827  00FC  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  3828  00FD  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  3829  00FE  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  3830  00FF  0B89               	decfsz	9,f
  3831  0100  28FB               	goto	u1375
  3832  0101  0021               	movlb	1	; select bank1
  3833  0102  083E               	movf	(_adf_config^(0+128)+30),w
  3834  0103  3901               	andlw	1
  3835  0104  0020               	movlb	0	; select bank0
  3836  0105  00D3               	movwf	??_Adf_Write_Register_Three+32
  3837  0106  01D4               	clrf	??_Adf_Write_Register_Three+33
  3838  0107  01D5               	clrf	??_Adf_Write_Register_Three+34
  3839  0108  01D6               	clrf	??_Adf_Write_Register_Three+35
  3840  0109  3008               	movlw	8
  3841  010A                     u1385:	
  3842  010A  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  3843  010B  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  3844  010C  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  3845  010D  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  3846  010E  0B89               	decfsz	9,f
  3847  010F  290A               	goto	u1385
  3848  0110  0021               	movlb	1	; select bank1
  3849  0111  083D               	movf	(_adf_config^(0+128)+29),w
  3850  0112  3903               	andlw	3
  3851  0113  0020               	movlb	0	; select bank0
  3852  0114  00D7               	movwf	??_Adf_Write_Register_Three+36
  3853  0115  01D8               	clrf	??_Adf_Write_Register_Three+37
  3854  0116  01D9               	clrf	??_Adf_Write_Register_Three+38
  3855  0117  01DA               	clrf	??_Adf_Write_Register_Three+39
  3856  0118  3006               	movlw	6
  3857  0119                     u1395:	
  3858  0119  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  3859  011A  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  3860  011B  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  3861  011C  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  3862  011D  0B89               	decfsz	9,f
  3863  011E  2919               	goto	u1395
  3864  011F  0021               	movlb	1	; select bank1
  3865  0120  083C               	movf	(_adf_config^(0+128)+28),w
  3866  0121  3901               	andlw	1
  3867  0122  0020               	movlb	0	; select bank0
  3868  0123  00DB               	movwf	??_Adf_Write_Register_Three+40
  3869  0124  01DC               	clrf	??_Adf_Write_Register_Three+41
  3870  0125  01DD               	clrf	??_Adf_Write_Register_Three+42
  3871  0126  01DE               	clrf	??_Adf_Write_Register_Three+43
  3872  0127  3005               	movlw	5
  3873  0128                     u1405:	
  3874  0128  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  3875  0129  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  3876  012A  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  3877  012B  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  3878  012C  0B89               	decfsz	9,f
  3879  012D  2928               	goto	u1405
  3880  012E  0021               	movlb	1	; select bank1
  3881  012F  083B               	movf	(_adf_config^(0+128)+27),w
  3882  0130  3901               	andlw	1
  3883  0131  0020               	movlb	0	; select bank0
  3884  0132  00DF               	movwf	??_Adf_Write_Register_Three+44
  3885  0133  01E0               	clrf	??_Adf_Write_Register_Three+45
  3886  0134  01E1               	clrf	??_Adf_Write_Register_Three+46
  3887  0135  01E2               	clrf	??_Adf_Write_Register_Three+47
  3888  0136  3004               	movlw	4
  3889  0137                     u1415:	
  3890  0137  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  3891  0138  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  3892  0139  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  3893  013A  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  3894  013B  0B89               	decfsz	9,f
  3895  013C  2937               	goto	u1415
  3896  013D  0021               	movlb	1	; select bank1
  3897  013E  083A               	movf	(_adf_config^(0+128)+26),w
  3898  013F  3901               	andlw	1
  3899  0140  0020               	movlb	0	; select bank0
  3900  0141  00E3               	movwf	??_Adf_Write_Register_Three+48
  3901  0142  01E4               	clrf	??_Adf_Write_Register_Three+49
  3902  0143  01E5               	clrf	??_Adf_Write_Register_Three+50
  3903  0144  01E6               	clrf	??_Adf_Write_Register_Three+51
  3904  0145  3003               	movlw	3
  3905  0146                     u1425:	
  3906  0146  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  3907  0147  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  3908  0148  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  3909  0149  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  3910  014A  0B89               	decfsz	9,f
  3911  014B  2946               	goto	u1425
  3912  014C  0021               	movlb	1	; select bank1
  3913  014D  0839               	movf	(_adf_config^(0+128)+25),w
  3914  014E  3901               	andlw	1
  3915  014F  0020               	movlb	0	; select bank0
  3916  0150  00E7               	movwf	??_Adf_Write_Register_Three+52
  3917  0151  01E8               	clrf	??_Adf_Write_Register_Three+53
  3918  0152  01E9               	clrf	??_Adf_Write_Register_Three+54
  3919  0153  01EA               	clrf	??_Adf_Write_Register_Three+55
  3920  0154  3002               	movlw	2
  3921  0155                     u1435:	
  3922  0155  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  3923  0156  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  3924  0157  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  3925  0158  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  3926  0159  0B89               	decfsz	9,f
  3927  015A  2955               	goto	u1435
  3928  015B  0867               	movf	??_Adf_Write_Register_Three+52,w
  3929  015C  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  3930  015D  0868               	movf	??_Adf_Write_Register_Three+53,w
  3931  015E  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  3932  015F  0869               	movf	??_Adf_Write_Register_Three+54,w
  3933  0160  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  3934  0161  086A               	movf	??_Adf_Write_Register_Three+55,w
  3935  0162  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  3936  0163  0863               	movf	??_Adf_Write_Register_Three+48,w
  3937  0164  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  3938  0165  0864               	movf	??_Adf_Write_Register_Three+49,w
  3939  0166  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  3940  0167  0865               	movf	??_Adf_Write_Register_Three+50,w
  3941  0168  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  3942  0169  0866               	movf	??_Adf_Write_Register_Three+51,w
  3943  016A  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  3944  016B  085F               	movf	??_Adf_Write_Register_Three+44,w
  3945  016C  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  3946  016D  0860               	movf	??_Adf_Write_Register_Three+45,w
  3947  016E  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  3948  016F  0861               	movf	??_Adf_Write_Register_Three+46,w
  3949  0170  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  3950  0171  0862               	movf	??_Adf_Write_Register_Three+47,w
  3951  0172  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  3952  0173  085B               	movf	??_Adf_Write_Register_Three+40,w
  3953  0174  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  3954  0175  085C               	movf	??_Adf_Write_Register_Three+41,w
  3955  0176  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  3956  0177  085D               	movf	??_Adf_Write_Register_Three+42,w
  3957  0178  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  3958  0179  085E               	movf	??_Adf_Write_Register_Three+43,w
  3959  017A  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  3960  017B  0857               	movf	??_Adf_Write_Register_Three+36,w
  3961  017C  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  3962  017D  0858               	movf	??_Adf_Write_Register_Three+37,w
  3963  017E  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  3964  017F  0859               	movf	??_Adf_Write_Register_Three+38,w
  3965  0180  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  3966  0181  085A               	movf	??_Adf_Write_Register_Three+39,w
  3967  0182  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  3968  0183  0853               	movf	??_Adf_Write_Register_Three+32,w
  3969  0184  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  3970  0185  0854               	movf	??_Adf_Write_Register_Three+33,w
  3971  0186  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  3972  0187  0855               	movf	??_Adf_Write_Register_Three+34,w
  3973  0188  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  3974  0189  0856               	movf	??_Adf_Write_Register_Three+35,w
  3975  018A  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  3976  018B  084F               	movf	??_Adf_Write_Register_Three+28,w
  3977  018C  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  3978  018D  0850               	movf	??_Adf_Write_Register_Three+29,w
  3979  018E  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  3980  018F  0851               	movf	??_Adf_Write_Register_Three+30,w
  3981  0190  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  3982  0191  0852               	movf	??_Adf_Write_Register_Three+31,w
  3983  0192  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  3984  0193  084B               	movf	??_Adf_Write_Register_Three+24,w
  3985  0194  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  3986  0195  084C               	movf	??_Adf_Write_Register_Three+25,w
  3987  0196  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  3988  0197  084D               	movf	??_Adf_Write_Register_Three+26,w
  3989  0198  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  3990  0199  084E               	movf	??_Adf_Write_Register_Three+27,w
  3991  019A  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  3992  019B  0847               	movf	??_Adf_Write_Register_Three+20,w
  3993  019C  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  3994  019D  0848               	movf	??_Adf_Write_Register_Three+21,w
  3995  019E  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  3996  019F  0849               	movf	??_Adf_Write_Register_Three+22,w
  3997  01A0  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  3998  01A1  084A               	movf	??_Adf_Write_Register_Three+23,w
  3999  01A2  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  4000  01A3  0843               	movf	??_Adf_Write_Register_Three+16,w
  4001  01A4  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  4002  01A5  0844               	movf	??_Adf_Write_Register_Three+17,w
  4003  01A6  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  4004  01A7  0845               	movf	??_Adf_Write_Register_Three+18,w
  4005  01A8  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  4006  01A9  0846               	movf	??_Adf_Write_Register_Three+19,w
  4007  01AA  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  4008  01AB  083F               	movf	??_Adf_Write_Register_Three+12,w
  4009  01AC  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  4010  01AD  0840               	movf	??_Adf_Write_Register_Three+13,w
  4011  01AE  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  4012  01AF  0841               	movf	??_Adf_Write_Register_Three+14,w
  4013  01B0  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  4014  01B1  0842               	movf	??_Adf_Write_Register_Three+15,w
  4015  01B2  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  4016  01B3  083B               	movf	??_Adf_Write_Register_Three+8,w
  4017  01B4  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  4018  01B5  083C               	movf	??_Adf_Write_Register_Three+9,w
  4019  01B6  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  4020  01B7  083D               	movf	??_Adf_Write_Register_Three+10,w
  4021  01B8  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  4022  01B9  083E               	movf	??_Adf_Write_Register_Three+11,w
  4023  01BA  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  4024  01BB  0837               	movf	??_Adf_Write_Register_Three+4,w
  4025  01BC  04B3               	iorwf	??_Adf_Write_Register_Three,f
  4026  01BD  0838               	movf	??_Adf_Write_Register_Three+5,w
  4027  01BE  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  4028  01BF  0839               	movf	??_Adf_Write_Register_Three+6,w
  4029  01C0  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  4030  01C1  083A               	movf	??_Adf_Write_Register_Three+7,w
  4031  01C2  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  4032  01C3  3003               	movlw	3
  4033  01C4  0433               	iorwf	??_Adf_Write_Register_Three,w
  4034  01C5  0021               	movlb	1	; select bank1
  4035  01C6  00DB               	movwf	Adf_Write_Register_Three@reg^(0+128)
  4036  01C7  3000               	movlw	0
  4037  01C8  0020               	movlb	0	; select bank0
  4038  01C9  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  4039  01CA  0021               	movlb	1	; select bank1
  4040  01CB  00DC               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  4041  01CC  3000               	movlw	0
  4042  01CD  0020               	movlb	0	; select bank0
  4043  01CE  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  4044  01CF  0021               	movlb	1	; select bank1
  4045  01D0  00DD               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  4046  01D1  3000               	movlw	0
  4047  01D2  0020               	movlb	0	; select bank0
  4048  01D3  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  4049  01D4  0021               	movlb	1	; select bank1
  4050  01D5  00DE               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  4051                           
  4052                           ;adf7012.c: 225: uint8_t reg_ptr[4];
  4053                           ;adf7012.c: 226: memcpy(reg_ptr, &reg, 4);
  4054  01D6  30DB               	movlw	Adf_Write_Register_Three@reg& (0+255)
  4055  01D7  0020               	movlb	0	; select bank0
  4056  01D8  00B3               	movwf	??_Adf_Write_Register_Three
  4057  01D9  0833               	movf	??_Adf_Write_Register_Three,w
  4058  01DA  00A0               	movwf	memcpy@s1
  4059  01DB  3004               	movlw	4
  4060  01DC  00A1               	movwf	memcpy@n
  4061  01DD  3000               	movlw	0
  4062  01DE  00A2               	movwf	memcpy@n+1
  4063  01DF  30D7               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  4064  01E0  318D  25EC  3180   	fcall	_memcpy
  4065                           
  4066                           ;adf7012.c: 227: Reverse_Array(reg_ptr,4);
  4067  01E3  3004               	movlw	4
  4068  01E4  0020               	movlb	0	; select bank0
  4069  01E5  00B3               	movwf	??_Adf_Write_Register_Three
  4070  01E6  0833               	movf	??_Adf_Write_Register_Three,w
  4071  01E7  00A7               	movwf	Reverse_Array@length
  4072  01E8  30D7               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  4073  01E9  3183  2394  3180   	fcall	_Reverse_Array
  4074                           
  4075                           ;adf7012.c: 228: Write_Adf7012_Reg(reg_ptr, 4);
  4076  01EC  3004               	movlw	4
  4077  01ED  0020               	movlb	0	; select bank0
  4078  01EE  00B3               	movwf	??_Adf_Write_Register_Three
  4079  01EF  0833               	movf	??_Adf_Write_Register_Three,w
  4080  01F0  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  4081  01F1  30D7               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  4082  01F2  318E  26DD         	fcall	_Write_Adf7012_Reg
  4083  01F4  0008               	return
  4084  01F5                     __end_of_Adf_Write_Register_Three:	
  4085                           
  4086                           	psect	text21
  4087  0F16                     __ptext21:	
  4088 ;; *************** function _Adf_Write_Register_One *****************
  4089 ;; Defined at:
  4090 ;;		line 176 in file "adf7012.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  reg             4   31[BANK0 ] unsigned long 
  4095 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  4096 ;; Return value:  Size  Location     Type
  4097 ;;		None               void
  4098 ;; Registers used:
  4099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4106 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4107 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4108 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4109 ;;Total ram usage:       19 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    7
  4112 ;; This function calls:
  4113 ;;		_Reverse_Array
  4114 ;;		_Write_Adf7012_Reg
  4115 ;;		_memcpy
  4116 ;; This function is called by:
  4117 ;;		_Adf_Write_Config
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           
  4122                           ;psect for function _Adf_Write_Register_One
  4123  0F16                     _Adf_Write_Register_One:	
  4124                           
  4125                           ;adf7012.c: 177: uint32_t reg =
  4126                           ;adf7012.c: 178: (1) |
  4127                           ;adf7012.c: 179: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  4128                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  4129                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  4130                           
  4131                           ;incstack = 0
  4132                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4133  0F16  0021               	movlb	1	; select bank1
  4134  0F17  082F               	movf	(_adf_config^(0+128)+15),w
  4135  0F18  3901               	andlw	1
  4136  0F19  0020               	movlb	0	; select bank0
  4137  0F1A  00B3               	movwf	??_Adf_Write_Register_One
  4138  0F1B  01B4               	clrf	??_Adf_Write_Register_One+1
  4139  0F1C  01B5               	clrf	??_Adf_Write_Register_One+2
  4140  0F1D  01B6               	clrf	??_Adf_Write_Register_One+3
  4141  0F1E  3016               	movlw	22
  4142  0F1F                     u1215:	
  4143  0F1F  35B3               	lslf	??_Adf_Write_Register_One,f
  4144  0F20  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  4145  0F21  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  4146  0F22  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  4147  0F23  0B89               	decfsz	9,f
  4148  0F24  2F1F               	goto	u1215
  4149  0F25  0021               	movlb	1	; select bank1
  4150  0F26  082E               	movf	(_adf_config^(0+128)+14),w
  4151  0F27  0020               	movlb	0	; select bank0
  4152  0F28  00B7               	movwf	??_Adf_Write_Register_One+4
  4153  0F29  01B8               	clrf	??_Adf_Write_Register_One+5
  4154  0F2A  01B9               	clrf	??_Adf_Write_Register_One+6
  4155  0F2B  01BA               	clrf	??_Adf_Write_Register_One+7
  4156  0F2C  300E               	movlw	14
  4157  0F2D                     u1225:	
  4158  0F2D  35B7               	lslf	??_Adf_Write_Register_One+4,f
  4159  0F2E  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  4160  0F2F  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  4161  0F30  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  4162  0F31  0B89               	decfsz	9,f
  4163  0F32  2F2D               	goto	u1225
  4164  0F33  300A               	movlw	10
  4165  0F34  3EA0               	addlw	_adf_config& (0+255)
  4166  0F35  0086               	movwf	6
  4167  0F36  0187               	clrf	7
  4168  0F37  30FF               	movlw	255
  4169  0F38  0501               	andwf	1,w
  4170  0F39  00BB               	movwf	??_Adf_Write_Register_One+8
  4171  0F3A  3141               	addfsr 1,1
  4172  0F3B  300F               	movlw	15
  4173  0F3C  0501               	andwf	1,w
  4174  0F3D  00BC               	movwf	??_Adf_Write_Register_One+9
  4175  0F3E  3141               	addfsr 1,1
  4176  0F3F  3000               	movlw	0
  4177  0F40  0501               	andwf	1,w
  4178  0F41  00BD               	movwf	??_Adf_Write_Register_One+10
  4179  0F42  3141               	addfsr 1,1
  4180  0F43  3000               	movlw	0
  4181  0F44  0501               	andwf	1,w
  4182  0F45  00BE               	movwf	??_Adf_Write_Register_One+11
  4183  0F46  3002               	movlw	2
  4184  0F47                     u1235:	
  4185  0F47  35BB               	lslf	??_Adf_Write_Register_One+8,f
  4186  0F48  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  4187  0F49  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  4188  0F4A  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  4189  0F4B  0B89               	decfsz	9,f
  4190  0F4C  2F47               	goto	u1235
  4191  0F4D  083B               	movf	??_Adf_Write_Register_One+8,w
  4192  0F4E  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  4193  0F4F  083C               	movf	??_Adf_Write_Register_One+9,w
  4194  0F50  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  4195  0F51  083D               	movf	??_Adf_Write_Register_One+10,w
  4196  0F52  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  4197  0F53  083E               	movf	??_Adf_Write_Register_One+11,w
  4198  0F54  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  4199  0F55  0837               	movf	??_Adf_Write_Register_One+4,w
  4200  0F56  04B3               	iorwf	??_Adf_Write_Register_One,f
  4201  0F57  0838               	movf	??_Adf_Write_Register_One+5,w
  4202  0F58  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  4203  0F59  0839               	movf	??_Adf_Write_Register_One+6,w
  4204  0F5A  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  4205  0F5B  083A               	movf	??_Adf_Write_Register_One+7,w
  4206  0F5C  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  4207  0F5D  3001               	movlw	1
  4208  0F5E  0433               	iorwf	??_Adf_Write_Register_One,w
  4209  0F5F  00BF               	movwf	Adf_Write_Register_One@reg
  4210  0F60  3000               	movlw	0
  4211  0F61  0434               	iorwf	??_Adf_Write_Register_One+1,w
  4212  0F62  00C0               	movwf	Adf_Write_Register_One@reg+1
  4213  0F63  3000               	movlw	0
  4214  0F64  0435               	iorwf	??_Adf_Write_Register_One+2,w
  4215  0F65  00C1               	movwf	Adf_Write_Register_One@reg+2
  4216  0F66  3000               	movlw	0
  4217  0F67  0436               	iorwf	??_Adf_Write_Register_One+3,w
  4218  0F68  00C2               	movwf	Adf_Write_Register_One@reg+3
  4219                           
  4220                           ;adf7012.c: 183: uint8_t reg_ptr[3];
  4221                           ;adf7012.c: 184: memcpy(reg_ptr, &reg, 3);
  4222  0F69  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  4223  0F6A  00B3               	movwf	??_Adf_Write_Register_One
  4224  0F6B  0833               	movf	??_Adf_Write_Register_One,w
  4225  0F6C  00A0               	movwf	memcpy@s1
  4226  0F6D  3003               	movlw	3
  4227  0F6E  00A1               	movwf	memcpy@n
  4228  0F6F  3000               	movlw	0
  4229  0F70  00A2               	movwf	memcpy@n+1
  4230  0F71  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  4231  0F72  318D  25EC  318F   	fcall	_memcpy
  4232                           
  4233                           ;adf7012.c: 185: Reverse_Array(reg_ptr,3);
  4234  0F75  3003               	movlw	3
  4235  0F76  0020               	movlb	0	; select bank0
  4236  0F77  00B3               	movwf	??_Adf_Write_Register_One
  4237  0F78  0833               	movf	??_Adf_Write_Register_One,w
  4238  0F79  00A7               	movwf	Reverse_Array@length
  4239  0F7A  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  4240  0F7B  3183  2394  318F   	fcall	_Reverse_Array
  4241                           
  4242                           ;adf7012.c: 186: Write_Adf7012_Reg(reg_ptr, 3);
  4243  0F7E  3003               	movlw	3
  4244  0F7F  0020               	movlb	0	; select bank0
  4245  0F80  00B3               	movwf	??_Adf_Write_Register_One
  4246  0F81  0833               	movf	??_Adf_Write_Register_One,w
  4247  0F82  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  4248  0F83  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  4249  0F84  318E  26DD         	fcall	_Write_Adf7012_Reg
  4250  0F86  0008               	return
  4251  0F87                     __end_of_Adf_Write_Register_One:	
  4252                           
  4253                           	psect	text22
  4254  0EDD                     __ptext22:	
  4255 ;; *************** function _Write_Adf7012_Reg *****************
  4256 ;; Defined at:
  4257 ;;		line 82 in file "utility.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  reg_value       1    wreg     PTR unsigned char 
  4260 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  4261 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  4264 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  4265 ;;  i               1   13[BANK0 ] unsigned char 
  4266 ;; Return value:  Size  Location     Type
  4267 ;;                  1    wreg      unsigned char 
  4268 ;; Registers used:
  4269 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4270 ;; Tracked objects:
  4271 ;;		On entry : 0/0
  4272 ;;		On exit  : 0/0
  4273 ;;		Unchanged: 0/0
  4274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4275 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4278 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4279 ;;Total ram usage:        4 bytes
  4280 ;; Hardware stack levels used:    1
  4281 ;; Hardware stack levels required when called:    6
  4282 ;; This function calls:
  4283 ;;		_Delay_ms
  4284 ;;		_Spi_Byte_Send
  4285 ;; This function is called by:
  4286 ;;		_Adf_Write_Register_Zero
  4287 ;;		_Adf_Write_Register_One
  4288 ;;		_Adf_Write_Register_Two
  4289 ;;		_Adf_Write_Register_Three
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           
  4294                           ;psect for function _Write_Adf7012_Reg
  4295  0EDD                     _Write_Adf7012_Reg:	
  4296                           
  4297                           ;incstack = 0
  4298                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4299                           ;Write_Adf7012_Reg@reg_value stored from wreg
  4300  0EDD  0020               	movlb	0	; select bank0
  4301  0EDE  00AC               	movwf	Write_Adf7012_Reg@reg_value
  4302                           
  4303                           ;utility.c: 84: uint8_t i = 0;
  4304  0EDF  01AD               	clrf	Write_Adf7012_Reg@i
  4305                           
  4306                           ;utility.c: 85: Delay_ms(1);
  4307  0EE0  3001               	movlw	1
  4308  0EE1  00A0               	movwf	Delay_ms@time_to_delay
  4309  0EE2  3000               	movlw	0
  4310  0EE3  00A1               	movwf	Delay_ms@time_to_delay+1
  4311  0EE4  318D  25AB  318E   	fcall	_Delay_ms
  4312                           
  4313                           ;utility.c: 86: PORTAbits.RA4 = 0;;
  4314  0EE7  0020               	movlb	0	; select bank0
  4315  0EE8  120C               	bcf	12,4	;volatile
  4316                           
  4317                           ;utility.c: 87: Delay_ms(1);
  4318  0EE9  3001               	movlw	1
  4319  0EEA  00A0               	movwf	Delay_ms@time_to_delay
  4320  0EEB  3000               	movlw	0
  4321  0EEC  00A1               	movwf	Delay_ms@time_to_delay+1
  4322  0EED  318D  25AB  318E   	fcall	_Delay_ms
  4323                           
  4324                           ;utility.c: 89: for (i = 0; i < size_of_reg; i++){
  4325  0EF0  0020               	movlb	0	; select bank0
  4326  0EF1  01AD               	clrf	Write_Adf7012_Reg@i
  4327  0EF2                     l1709:	
  4328  0EF2  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  4329  0EF3  022D               	subwf	Write_Adf7012_Reg@i,w
  4330  0EF4  1803               	btfsc	3,0
  4331  0EF5  2F06               	goto	l1711
  4332                           
  4333                           ;utility.c: 90: Spi_Byte_Send(*(reg_value+i));
  4334  0EF6  082D               	movf	Write_Adf7012_Reg@i,w
  4335  0EF7  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  4336  0EF8  00AB               	movwf	??_Write_Adf7012_Reg
  4337  0EF9  082B               	movf	??_Write_Adf7012_Reg,w
  4338  0EFA  0086               	movwf	6
  4339  0EFB  0187               	clrf	7
  4340  0EFC  0801               	movf	1,w
  4341  0EFD  318E  2615  318E   	fcall	_Spi_Byte_Send
  4342  0F00  3001               	movlw	1
  4343  0F01  0020               	movlb	0	; select bank0
  4344  0F02  00AB               	movwf	??_Write_Adf7012_Reg
  4345  0F03  082B               	movf	??_Write_Adf7012_Reg,w
  4346  0F04  07AD               	addwf	Write_Adf7012_Reg@i,f
  4347  0F05  2EF2               	goto	l1709
  4348  0F06                     l1711:	
  4349                           
  4350                           ;utility.c: 91: }
  4351                           ;utility.c: 93: Delay_ms(1);
  4352  0F06  3001               	movlw	1
  4353  0F07  00A0               	movwf	Delay_ms@time_to_delay
  4354  0F08  3000               	movlw	0
  4355  0F09  00A1               	movwf	Delay_ms@time_to_delay+1
  4356  0F0A  318D  25AB  318E   	fcall	_Delay_ms
  4357                           
  4358                           ;utility.c: 94: PORTAbits.RA4 = 1;;
  4359  0F0D  0020               	movlb	0	; select bank0
  4360  0F0E  160C               	bsf	12,4	;volatile
  4361                           
  4362                           ;utility.c: 96: Delay_ms(1);
  4363  0F0F  3001               	movlw	1
  4364  0F10  00A0               	movwf	Delay_ms@time_to_delay
  4365  0F11  3000               	movlw	0
  4366  0F12  00A1               	movwf	Delay_ms@time_to_delay+1
  4367  0F13  318D  25AB         	fcall	_Delay_ms
  4368  0F15  0008               	return
  4369  0F16                     __end_of_Write_Adf7012_Reg:	
  4370                           ;utility.c: 97: return 1;
  4371                           ;	Return value of _Write_Adf7012_Reg is never used
  4372                           
  4373                           
  4374                           	psect	text23
  4375  0E15                     __ptext23:	
  4376 ;; *************** function _Spi_Byte_Send *****************
  4377 ;; Defined at:
  4378 ;;		line 220 in file "utility.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  data            1    wreg     unsigned char 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  data            1    7[BANK0 ] unsigned char 
  4383 ;;  i               1    9[BANK0 ] unsigned char 
  4384 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  1    wreg      unsigned char 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, pclath, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4395 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4396 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4397 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;Total ram usage:        4 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    5
  4401 ;; This function calls:
  4402 ;;		_Delay_ms
  4403 ;; This function is called by:
  4404 ;;		_Write_Adf7012_Reg
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           
  4409                           ;psect for function _Spi_Byte_Send
  4410  0E15                     _Spi_Byte_Send:	
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  4414                           ;Spi_Byte_Send@data stored from wreg
  4415  0E15  0020               	movlb	0	; select bank0
  4416  0E16  00A7               	movwf	Spi_Byte_Send@data
  4417                           
  4418                           ;utility.c: 222: PORTAbits.RA2 = 0;
  4419  0E17  110C               	bcf	12,2	;volatile
  4420                           
  4421                           ;utility.c: 223: uint8_t i;
  4422                           ;utility.c: 224: uint8_t data_to_send;
  4423                           ;utility.c: 225: data_to_send = data;
  4424  0E18  0827               	movf	Spi_Byte_Send@data,w
  4425  0E19  00A6               	movwf	??_Spi_Byte_Send
  4426  0E1A  0826               	movf	??_Spi_Byte_Send,w
  4427  0E1B  00A8               	movwf	Spi_Byte_Send@data_to_send
  4428                           
  4429                           ;utility.c: 226: for(i = 0; i <8; i++){
  4430  0E1C  01A9               	clrf	Spi_Byte_Send@i
  4431  0E1D                     L1:	
  4432  0E1D  3008               	movlw	8
  4433  0E1E  0229               	subwf	Spi_Byte_Send@i,w
  4434  0E1F  1803               	btfsc	3,0
  4435  0E20  0008               	return
  4436                           
  4437                           ;utility.c: 228: if(data_to_send & 0x80)
  4438  0E21  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  4439  0E22  2E25               	goto	l221
  4440                           
  4441                           ;utility.c: 229: PORTCbits.RC2 = 1;
  4442  0E23  150E               	bsf	14,2	;volatile
  4443  0E24  2E26               	goto	l1673
  4444  0E25                     l221:	
  4445                           
  4446                           ;utility.c: 230: else
  4447                           ;utility.c: 231: PORTCbits.RC2 = 0;
  4448  0E25  110E               	bcf	14,2	;volatile
  4449  0E26                     l1673:	
  4450                           
  4451                           ;utility.c: 233: data_to_send <<= 1;
  4452  0E26  1003               	clrc
  4453  0E27  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  4454                           
  4455                           ;utility.c: 235: PORTAbits.RA2 = 1;
  4456  0E28  150C               	bsf	12,2	;volatile
  4457                           
  4458                           ;utility.c: 236: Delay_ms(1);
  4459  0E29  3001               	movlw	1
  4460  0E2A  00A0               	movwf	Delay_ms@time_to_delay
  4461  0E2B  3000               	movlw	0
  4462  0E2C  00A1               	movwf	Delay_ms@time_to_delay+1
  4463  0E2D  318D  25AB  318E   	fcall	_Delay_ms
  4464                           
  4465                           ;utility.c: 237: PORTAbits.RA2 = 0;
  4466  0E30  0020               	movlb	0	; select bank0
  4467  0E31  110C               	bcf	12,2	;volatile
  4468                           
  4469                           ;utility.c: 238: Delay_ms(1);
  4470  0E32  3001               	movlw	1
  4471  0E33  00A0               	movwf	Delay_ms@time_to_delay
  4472  0E34  3000               	movlw	0
  4473  0E35  00A1               	movwf	Delay_ms@time_to_delay+1
  4474  0E36  318D  25AB  318E   	fcall	_Delay_ms
  4475  0E39  3001               	movlw	1
  4476  0E3A  0020               	movlb	0	; select bank0
  4477  0E3B  00A6               	movwf	??_Spi_Byte_Send
  4478  0E3C  0826               	movf	??_Spi_Byte_Send,w
  4479  0E3D  07A9               	addwf	Spi_Byte_Send@i,f
  4480  0E3E  2E1D               	goto	L1
  4481  0E3F                     __end_of_Spi_Byte_Send:	
  4482                           ;utility.c: 240: }
  4483                           ;utility.c: 241: return 1;
  4484                           ;	Return value of _Spi_Byte_Send is never used
  4485                           
  4486                           
  4487                           	psect	text24
  4488  0DAB                     __ptext24:	
  4489 ;; *************** function _Delay_ms *****************
  4490 ;; Defined at:
  4491 ;;		line 44 in file "utility.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  i               2    4[BANK0 ] unsigned int 
  4496 ;; Return value:  Size  Location     Type
  4497 ;;		None               void
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0, pclath, cstack
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4507 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4508 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4509 ;;Total ram usage:        6 bytes
  4510 ;; Hardware stack levels used:    1
  4511 ;; Hardware stack levels required when called:    4
  4512 ;; This function calls:
  4513 ;;		_Dac0_Start_Hold
  4514 ;; This function is called by:
  4515 ;;		_main
  4516 ;;		_Write_Adf7012_Reg
  4517 ;;		_Spi_Byte_Send
  4518 ;;		_Adf_Reset
  4519 ;;		_Radio_Setup
  4520 ;;		_Ptt_On
  4521 ;;		_Ptt_Off
  4522 ;;		_Modem_Flush_Frame
  4523 ;;		_Adf_Lock
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           
  4528                           ;psect for function _Delay_ms
  4529  0DAB                     _Delay_ms:	
  4530                           
  4531                           ;utility.c: 46: uint16_t i=0;
  4532                           
  4533                           ;incstack = 0
  4534                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  4535  0DAB  0020               	movlb	0	; select bank0
  4536  0DAC  01A4               	clrf	Delay_ms@i
  4537  0DAD  01A5               	clrf	Delay_ms@i+1
  4538                           
  4539                           ;utility.c: 48: Dac0_Start_Hold();
  4540  0DAE  318C  248B  318D   	fcall	_Dac0_Start_Hold
  4541                           
  4542                           ;utility.c: 49: for(i=0; i<time_to_delay; i++){
  4543  0DB1  0020               	movlb	0	; select bank0
  4544  0DB2  01A4               	clrf	Delay_ms@i
  4545  0DB3  01A5               	clrf	Delay_ms@i+1
  4546  0DB4                     l191:	
  4547  0DB4  0821               	movf	Delay_ms@time_to_delay+1,w
  4548  0DB5  0225               	subwf	Delay_ms@i+1,w
  4549  0DB6  1D03               	skipz
  4550  0DB7  2DBA               	goto	u1075
  4551  0DB8  0820               	movf	Delay_ms@time_to_delay,w
  4552  0DB9  0224               	subwf	Delay_ms@i,w
  4553  0DBA                     u1075:	
  4554  0DBA  1803               	btfsc	3,0
  4555  0DBB  0008               	return
  4556                           
  4557                           ;utility.c: 50: _delay((unsigned long)((1)*(32000000/4000.0)));
  4558  0DBC  300B               	movlw	11
  4559  0DBD  00A3               	movwf	??_Delay_ms+1
  4560  0DBE  3062               	movlw	98
  4561  0DBF  00A2               	movwf	??_Delay_ms
  4562  0DC0                     u2977:	
  4563  0DC0  0BA2               	decfsz	??_Delay_ms,f
  4564  0DC1  2DC0               	goto	u2977
  4565  0DC2  0BA3               	decfsz	??_Delay_ms+1,f
  4566  0DC3  2DC0               	goto	u2977
  4567  0DC4  0000               	nop
  4568  0DC5  3001               	movlw	1
  4569  0DC6  0020               	movlb	0	; select bank0
  4570  0DC7  07A4               	addwf	Delay_ms@i,f
  4571  0DC8  3000               	movlw	0
  4572  0DC9  3DA5               	addwfc	Delay_ms@i+1,f
  4573  0DCA  2DB4               	goto	l191
  4574  0DCB                     __end_of_Delay_ms:	
  4575                           
  4576                           	psect	text25
  4577  0C8B                     __ptext25:	
  4578 ;; *************** function _Dac0_Start_Hold *****************
  4579 ;; Defined at:
  4580 ;;		line 275 in file "utility.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;		None
  4583 ;; Auto vars:     Size  Location     Type
  4584 ;;		None
  4585 ;; Return value:  Size  Location     Type
  4586 ;;		None               void
  4587 ;; Registers used:
  4588 ;;		wreg
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;Total ram usage:        0 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; Hardware stack levels required when called:    3
  4601 ;; This function calls:
  4602 ;;		Nothing
  4603 ;; This function is called by:
  4604 ;;		_main
  4605 ;;		_Delay_ms
  4606 ;; This function uses a non-reentrant model
  4607 ;;
  4608                           
  4609                           
  4610                           ;psect for function _Dac0_Start_Hold
  4611  0C8B                     _Dac0_Start_Hold:	
  4612                           
  4613                           ;utility.c: 276: DACEN = 1;
  4614                           
  4615                           ;incstack = 0
  4616                           ; Regs used in _Dac0_Start_Hold: [wreg]
  4617  0C8B  0022               	movlb	2	; select bank2
  4618  0C8C  1798               	bsf	24,7	;volatile
  4619                           
  4620                           ;utility.c: 277: DACCON1 = 0x10;
  4621  0C8D  3010               	movlw	16
  4622  0C8E  0099               	movwf	25	;volatile
  4623  0C8F  0008               	return
  4624  0C90                     __end_of_Dac0_Start_Hold:	
  4625                           
  4626                           	psect	text26
  4627  0394                     __ptext26:	
  4628 ;; *************** function _Reverse_Array *****************
  4629 ;; Defined at:
  4630 ;;		line 198 in file "utility.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  input           1    wreg     PTR unsigned char 
  4633 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  4634 ;;  length          1    7[BANK0 ] unsigned char 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  input           1   17[BANK0 ] PTR unsigned char 
  4637 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  4638 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  4639 ;;  i               1   18[BANK0 ] unsigned char 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      unsigned char 
  4642 ;; Registers used:
  4643 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4649 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4650 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;Total ram usage:       12 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    4
  4656 ;; This function calls:
  4657 ;;		_memcpy
  4658 ;; This function is called by:
  4659 ;;		_Adf_Write_Register_Zero
  4660 ;;		_Adf_Write_Register_One
  4661 ;;		_Adf_Write_Register_Two
  4662 ;;		_Adf_Write_Register_Three
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _Reverse_Array
  4668  0394                     _Reverse_Array:	
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4672                           ;Reverse_Array@input stored from wreg
  4673  0394  0020               	movlb	0	; select bank0
  4674  0395  00B1               	movwf	Reverse_Array@input
  4675                           
  4676                           ;utility.c: 199: uint8_t i = 0;
  4677  0396  01B2               	clrf	Reverse_Array@i
  4678                           
  4679                           ;utility.c: 200: uint8_t buffer_array[4] = {0};
  4680  0397  0022               	movlb	2	; select bank2
  4681  0398  0823               	movf	(Reverse_Array@F3148+3)^(0+256),w
  4682  0399  0020               	movlb	0	; select bank0
  4683  039A  00B0               	movwf	Reverse_Array@buffer_array+3
  4684  039B  0022               	movlb	2	; select bank2
  4685  039C  0822               	movf	(Reverse_Array@F3148+2)^(0+256),w
  4686  039D  0020               	movlb	0	; select bank0
  4687  039E  00AF               	movwf	Reverse_Array@buffer_array+2
  4688  039F  0022               	movlb	2	; select bank2
  4689  03A0  0821               	movf	(Reverse_Array@F3148+1)^(0+256),w
  4690  03A1  0020               	movlb	0	; select bank0
  4691  03A2  00AE               	movwf	Reverse_Array@buffer_array+1
  4692  03A3  0022               	movlb	2	; select bank2
  4693  03A4  0820               	movf	Reverse_Array@F3148^(0+256),w
  4694  03A5  0020               	movlb	0	; select bank0
  4695  03A6  00AD               	movwf	Reverse_Array@buffer_array
  4696                           
  4697                           ;utility.c: 201: memcpy(buffer_array, input, length);
  4698  03A7  0831               	movf	Reverse_Array@input,w
  4699  03A8  00A8               	movwf	??_Reverse_Array
  4700  03A9  0828               	movf	??_Reverse_Array,w
  4701  03AA  00A0               	movwf	memcpy@s1
  4702  03AB  0827               	movf	Reverse_Array@length,w
  4703  03AC  00A9               	movwf	??_Reverse_Array+1
  4704  03AD  01AA               	clrf	??_Reverse_Array+2
  4705  03AE  0829               	movf	??_Reverse_Array+1,w
  4706  03AF  00A1               	movwf	memcpy@n
  4707  03B0  082A               	movf	??_Reverse_Array+2,w
  4708  03B1  00A2               	movwf	memcpy@n+1
  4709  03B2  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  4710  03B3  318D  25EC  3183   	fcall	_memcpy
  4711                           
  4712                           ;utility.c: 203: for(i = 0; i<length; i++){
  4713  03B6  0020               	movlb	0	; select bank0
  4714  03B7  01B2               	clrf	Reverse_Array@i
  4715  03B8                     l1729:	
  4716  03B8  0827               	movf	Reverse_Array@length,w
  4717  03B9  0232               	subwf	Reverse_Array@i,w
  4718  03BA  1803               	btfsc	3,0
  4719  03BB  0008               	return
  4720                           
  4721                           ;utility.c: 204: *(input+i) = *(buffer_array+(length-1)-i);
  4722  03BC  30FF               	movlw	-1
  4723  03BD  0727               	addwf	Reverse_Array@length,w
  4724  03BE  00A8               	movwf	??_Reverse_Array
  4725  03BF  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  4726  03C0  0728               	addwf	??_Reverse_Array,w
  4727  03C1  00A9               	movwf	??_Reverse_Array+1
  4728  03C2  0332               	decf	Reverse_Array@i,w
  4729  03C3  3AFF               	xorlw	255
  4730  03C4  0729               	addwf	??_Reverse_Array+1,w
  4731  03C5  00AA               	movwf	??_Reverse_Array+2
  4732  03C6  082A               	movf	??_Reverse_Array+2,w
  4733  03C7  0086               	movwf	6
  4734  03C8  0187               	clrf	7
  4735  03C9  0801               	movf	1,w
  4736  03CA  00AB               	movwf	??_Reverse_Array+3
  4737  03CB  0832               	movf	Reverse_Array@i,w
  4738  03CC  0731               	addwf	Reverse_Array@input,w
  4739  03CD  00AC               	movwf	??_Reverse_Array+4
  4740  03CE  082C               	movf	??_Reverse_Array+4,w
  4741  03CF  0086               	movwf	6
  4742  03D0  0187               	clrf	7
  4743  03D1  082B               	movf	??_Reverse_Array+3,w
  4744  03D2  0081               	movwf	1
  4745  03D3  3001               	movlw	1
  4746  03D4  00A8               	movwf	??_Reverse_Array
  4747  03D5  0828               	movf	??_Reverse_Array,w
  4748  03D6  07B2               	addwf	Reverse_Array@i,f
  4749  03D7  2BB8               	goto	l1729
  4750  03D8                     __end_of_Reverse_Array:	
  4751                           ;utility.c: 205: }
  4752                           ;utility.c: 209: return 1;
  4753                           ;	Return value of _Reverse_Array is never used
  4754                           
  4755                           
  4756                           	psect	text27
  4757  0DEC                     __ptext27:	
  4758 ;; *************** function _memcpy *****************
  4759 ;; Defined at:
  4760 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;  d1              1    wreg     PTR void 
  4763 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  4764 ;;		 -> Reverse_Array@buffer_array(4), 
  4765 ;;  s1              1    0[BANK0 ] PTR const void 
  4766 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  4767 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  4768 ;;  n               2    1[BANK0 ] unsigned int 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  d1              1    6[BANK0 ] PTR void 
  4771 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  4772 ;;		 -> Reverse_Array@buffer_array(4), 
  4773 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  4774 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  4775 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  4776 ;;  d               1    4[BANK0 ] PTR unsigned char 
  4777 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  4778 ;;		 -> Reverse_Array@buffer_array(4), 
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      PTR void 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4788 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;Total ram usage:        7 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    3
  4795 ;; This function calls:
  4796 ;;		Nothing
  4797 ;; This function is called by:
  4798 ;;		_Reverse_Array
  4799 ;;		_Adf_Write_Register_Zero
  4800 ;;		_Adf_Write_Register_One
  4801 ;;		_Adf_Write_Register_Two
  4802 ;;		_Adf_Write_Register_Three
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           
  4807                           ;psect for function _memcpy
  4808  0DEC                     _memcpy:	
  4809                           
  4810                           ;incstack = 0
  4811                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  4812                           ;memcpy@d1 stored from wreg
  4813  0DEC  0020               	movlb	0	; select bank0
  4814  0DED  00A6               	movwf	memcpy@d1
  4815  0DEE  0820               	movf	memcpy@s1,w
  4816  0DEF  00A3               	movwf	??_memcpy
  4817  0DF0  0823               	movf	??_memcpy,w
  4818  0DF1  00A5               	movwf	memcpy@s
  4819  0DF2  0826               	movf	memcpy@d1,w
  4820  0DF3  00A3               	movwf	??_memcpy
  4821  0DF4  0823               	movf	??_memcpy,w
  4822  0DF5  00A4               	movwf	memcpy@d
  4823  0DF6                     l1695:	
  4824  0DF6  3001               	movlw	1
  4825  0DF7  02A1               	subwf	memcpy@n,f
  4826  0DF8  3000               	movlw	0
  4827  0DF9  3BA2               	subwfb	memcpy@n+1,f
  4828  0DFA  30FF               	movlw	255
  4829  0DFB  0622               	xorwf	memcpy@n+1,w
  4830  0DFC  1D03               	skipz
  4831  0DFD  2E00               	goto	u1115
  4832  0DFE  30FF               	movlw	255
  4833  0DFF  0621               	xorwf	memcpy@n,w
  4834  0E00                     u1115:	
  4835  0E00  1903               	btfsc	3,2
  4836  0E01  0008               	return
  4837  0E02  0825               	movf	memcpy@s,w
  4838  0E03  0086               	movwf	6
  4839  0E04  0187               	clrf	7
  4840  0E05  0801               	movf	1,w
  4841  0E06  00A3               	movwf	??_memcpy
  4842  0E07  0824               	movf	memcpy@d,w
  4843  0E08  0086               	movwf	6
  4844  0E09  0187               	clrf	7
  4845  0E0A  0823               	movf	??_memcpy,w
  4846  0E0B  0081               	movwf	1
  4847  0E0C  3001               	movlw	1
  4848  0E0D  00A3               	movwf	??_memcpy
  4849  0E0E  0823               	movf	??_memcpy,w
  4850  0E0F  07A5               	addwf	memcpy@s,f
  4851  0E10  3001               	movlw	1
  4852  0E11  00A3               	movwf	??_memcpy
  4853  0E12  0823               	movf	??_memcpy,w
  4854  0E13  07A4               	addwf	memcpy@d,f
  4855  0E14  2DF6               	goto	l1695
  4856  0E15                     __end_of_memcpy:	
  4857                           ;	Return value of _memcpy is never used
  4858                           
  4859                           
  4860                           	psect	text28
  4861  0D00                     __ptext28:	
  4862 ;; *************** function _Gpio_Config *****************
  4863 ;; Defined at:
  4864 ;;		line 31 in file "utility.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;		None
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;		None
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      unsigned char 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4880 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;Total ram usage:        1 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:    3
  4885 ;; This function calls:
  4886 ;;		Nothing
  4887 ;; This function is called by:
  4888 ;;		_main
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           
  4893                           ;psect for function _Gpio_Config
  4894  0D00                     _Gpio_Config:	
  4895                           
  4896                           ;utility.c: 34: TRISA |= 0b00000010;
  4897                           
  4898                           ;incstack = 0
  4899                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  4900  0D00  0021               	movlb	1	; select bank1
  4901  0D01  148C               	bsf	12,1	;volatile
  4902                           
  4903                           ;utility.c: 35: TRISA &= 0b11001011;
  4904  0D02  30CB               	movlw	203
  4905  0D03  0020               	movlb	0	; select bank0
  4906  0D04  00A0               	movwf	??_Gpio_Config
  4907  0D05  0820               	movf	??_Gpio_Config,w
  4908  0D06  0021               	movlb	1	; select bank1
  4909  0D07  058C               	andwf	12,f	;volatile
  4910                           
  4911                           ;utility.c: 36: TRISC |= 0b00100000;
  4912  0D08  168E               	bsf	14,5	;volatile
  4913                           
  4914                           ;utility.c: 37: TRISC &= 0b11100000;
  4915  0D09  30E0               	movlw	224
  4916  0D0A  0020               	movlb	0	; select bank0
  4917  0D0B  00A0               	movwf	??_Gpio_Config
  4918  0D0C  0820               	movf	??_Gpio_Config,w
  4919  0D0D  0021               	movlb	1	; select bank1
  4920  0D0E  058E               	andwf	14,f	;volatile
  4921  0D0F  0008               	return
  4922  0D10                     __end_of_Gpio_Config:	
  4923                           ;utility.c: 39: return 1;
  4924                           ;	Return value of _Gpio_Config is never used
  4925                           
  4926                           
  4927                           	psect	text29
  4928  0D8E                     __ptext29:	
  4929 ;; *************** function _Ax25_Send_String *****************
  4930 ;; Defined at:
  4931 ;;		line 91 in file "ax25.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  4934 ;;		 -> STR_1(6), 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;  i               2   15[BANK0 ] int 
  4937 ;; Return value:  Size  Location     Type
  4938 ;;		None               void
  4939 ;; Registers used:
  4940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4946 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4949 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;Total ram usage:        4 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    6
  4953 ;; This function calls:
  4954 ;;		_Ax25_Send_Byte
  4955 ;; This function is called by:
  4956 ;;		_main
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           
  4961                           ;psect for function _Ax25_Send_String
  4962  0D8E                     _Ax25_Send_String:	
  4963                           
  4964                           ;ax25.c: 93: int i;
  4965                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  4966                           
  4967                           ;incstack = 0
  4968                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4969  0D8E  0020               	movlb	0	; select bank0
  4970  0D8F  01AF               	clrf	Ax25_Send_String@i
  4971  0D90  01B0               	clrf	Ax25_Send_String@i+1
  4972  0D91                     l2173:	
  4973  0D91  082D               	movf	Ax25_Send_String@string,w
  4974  0D92  072F               	addwf	Ax25_Send_String@i,w
  4975  0D93  0084               	movwf	4
  4976  0D94  082E               	movf	Ax25_Send_String@string+1,w
  4977  0D95  3D30               	addwfc	Ax25_Send_String@i+1,w
  4978  0D96  0085               	movwf	5
  4979  0D97  0800               	movf	0,w	;code access
  4980  0D98  3800               	iorlw	0
  4981  0D99  1903               	btfsc	3,2
  4982  0D9A  0008               	return
  4983                           
  4984                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  4985  0D9B  082D               	movf	Ax25_Send_String@string,w
  4986  0D9C  072F               	addwf	Ax25_Send_String@i,w
  4987  0D9D  0084               	movwf	4
  4988  0D9E  082E               	movf	Ax25_Send_String@string+1,w
  4989  0D9F  3D30               	addwfc	Ax25_Send_String@i+1,w
  4990  0DA0  0085               	movwf	5
  4991  0DA1  0800               	movf	0,w	;code access
  4992  0DA2  318C  249B  318D   	fcall	_Ax25_Send_Byte
  4993  0DA5  3001               	movlw	1
  4994  0DA6  0020               	movlb	0	; select bank0
  4995  0DA7  07AF               	addwf	Ax25_Send_String@i,f
  4996  0DA8  3000               	movlw	0
  4997  0DA9  3DB0               	addwfc	Ax25_Send_String@i+1,f
  4998  0DAA  2D91               	goto	l2173
  4999  0DAB                     __end_of_Ax25_Send_String:	
  5000                           
  5001                           	psect	text30
  5002  0C9B                     __ptext30:	
  5003 ;; *************** function _Ax25_Send_Byte *****************
  5004 ;; Defined at:
  5005 ;;		line 58 in file "ax25.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  byte            1    wreg     unsigned char 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  byte            1   12[BANK0 ] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;		None               void
  5012 ;; Registers used:
  5013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5022 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5023 ;;Total ram usage:        1 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    5
  5026 ;; This function calls:
  5027 ;;		_Send_Byte
  5028 ;; This function is called by:
  5029 ;;		_Ax25_Send_String
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _Ax25_Send_Byte
  5035  0C9B                     _Ax25_Send_Byte:	
  5036                           
  5037                           ;incstack = 0
  5038                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5039                           ;Ax25_Send_Byte@byte stored from wreg
  5040  0C9B  0020               	movlb	0	; select bank0
  5041  0C9C  00AC               	movwf	Ax25_Send_Byte@byte
  5042                           
  5043                           ;ax25.c: 60: Send_Byte(byte);
  5044  0C9D  082C               	movf	Ax25_Send_Byte@byte,w
  5045  0C9E  3185  257B         	fcall	_Send_Byte
  5046  0CA0  0008               	return
  5047  0CA1                     __end_of_Ax25_Send_Byte:	
  5048                           
  5049                           	psect	text31
  5050  01F5                     __ptext31:	
  5051 ;; *************** function _Ax25_Send_Header *****************
  5052 ;; Defined at:
  5053 ;;		line 99 in file "ax25.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  addresses       1    wreg     PTR struct .
  5056 ;;		 -> main@beacon_address(16), 
  5057 ;;  num_addresse    2   12[BANK0 ] int 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  addresses       1   19[BANK0 ] PTR struct .
  5060 ;;		 -> main@beacon_address(16), 
  5061 ;;  i               2   20[BANK0 ] int 
  5062 ;;  j               2   17[BANK0 ] int 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;		None               void
  5065 ;; Registers used:
  5066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;Total ram usage:       10 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    5
  5079 ;; This function calls:
  5080 ;;		_Ax25_Send_Flag
  5081 ;;		_Ax25_Send_Sync
  5082 ;;		_Send_Byte
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           
  5089                           ;psect for function _Ax25_Send_Header
  5090  01F5                     _Ax25_Send_Header:	
  5091                           
  5092                           ;incstack = 0
  5093                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5094                           ;Ax25_Send_Header@addresses stored from wreg
  5095  01F5  0020               	movlb	0	; select bank0
  5096  01F6  00B3               	movwf	Ax25_Send_Header@addresses
  5097                           
  5098                           ;ax25.c: 102: int i, j;
  5099                           ;ax25.c: 103: modem_packet_size = 0;
  5100  01F7  3000               	movlw	0
  5101  01F8  00FC               	movwf	_modem_packet_size+3
  5102  01F9  3000               	movlw	0
  5103  01FA  00FB               	movwf	_modem_packet_size+2
  5104  01FB  3000               	movlw	0
  5105  01FC  00FA               	movwf	_modem_packet_size+1
  5106  01FD  3000               	movlw	0
  5107  01FE  00F9               	movwf	_modem_packet_size
  5108                           
  5109                           ;ax25.c: 104: ones_in_a_row = 0;
  5110  01FF  0021               	movlb	1	; select bank1
  5111  0200  01CD               	clrf	_ones_in_a_row^(0+128)
  5112  0201  01CE               	clrf	(_ones_in_a_row+1)^(0+128)
  5113                           
  5114                           ;ax25.c: 105: crc = 0xffff;
  5115  0202  30FF               	movlw	255
  5116  0203  00CB               	movwf	_crc^(0+128)
  5117  0204  30FF               	movlw	255
  5118  0205  00CC               	movwf	(_crc^(0+128)+1)
  5119                           
  5120                           ;ax25.c: 108: for (i = 0; i < 10; i++)
  5121  0206  0020               	movlb	0	; select bank0
  5122  0207  01B4               	clrf	Ax25_Send_Header@i
  5123  0208  01B5               	clrf	Ax25_Send_Header@i+1
  5124  0209  0835               	movf	Ax25_Send_Header@i+1,w
  5125  020A  3A80               	xorlw	128
  5126  020B  00AE               	movwf	??_Ax25_Send_Header
  5127  020C  3080               	movlw	128
  5128  020D  022E               	subwf	??_Ax25_Send_Header,w
  5129  020E  1D03               	skipz
  5130  020F  2A12               	goto	u1865
  5131  0210  300A               	movlw	10
  5132  0211  0234               	subwf	Ax25_Send_Header@i,w
  5133  0212                     u1865:	
  5134  0212  1803               	btfsc	3,0
  5135  0213  2A27               	goto	l2129
  5136  0214                     l2123:	
  5137                           
  5138                           ;ax25.c: 109: {
  5139                           ;ax25.c: 110: Ax25_Send_Sync();
  5140  0214  318F  2787  3181   	fcall	_Ax25_Send_Sync
  5141  0217  3001               	movlw	1
  5142  0218  0020               	movlb	0	; select bank0
  5143  0219  07B4               	addwf	Ax25_Send_Header@i,f
  5144  021A  3000               	movlw	0
  5145  021B  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  5146  021C  0835               	movf	Ax25_Send_Header@i+1,w
  5147  021D  3A80               	xorlw	128
  5148  021E  00AE               	movwf	??_Ax25_Send_Header
  5149  021F  3080               	movlw	128
  5150  0220  022E               	subwf	??_Ax25_Send_Header,w
  5151  0221  1D03               	skipz
  5152  0222  2A25               	goto	u1875
  5153  0223  300A               	movlw	10
  5154  0224  0234               	subwf	Ax25_Send_Header@i,w
  5155  0225                     u1875:	
  5156  0225  1C03               	skipc
  5157  0226  2A14               	goto	l2123
  5158  0227                     l2129:	
  5159                           
  5160                           ;ax25.c: 111: }
  5161                           ;ax25.c: 114: for (i = 0; i < 3; i++)
  5162  0227  0020               	movlb	0	; select bank0
  5163  0228  01B4               	clrf	Ax25_Send_Header@i
  5164  0229  01B5               	clrf	Ax25_Send_Header@i+1
  5165  022A  0835               	movf	Ax25_Send_Header@i+1,w
  5166  022B  3A80               	xorlw	128
  5167  022C  00AE               	movwf	??_Ax25_Send_Header
  5168  022D  3080               	movlw	128
  5169  022E  022E               	subwf	??_Ax25_Send_Header,w
  5170  022F  1D03               	skipz
  5171  0230  2A33               	goto	u1885
  5172  0231  3003               	movlw	3
  5173  0232  0234               	subwf	Ax25_Send_Header@i,w
  5174  0233                     u1885:	
  5175  0233  1803               	btfsc	3,0
  5176  0234  2A48               	goto	l2141
  5177  0235                     l2135:	
  5178                           
  5179                           ;ax25.c: 115: {
  5180                           ;ax25.c: 116: Ax25_Send_Flag();
  5181  0235  3187  2765  3181   	fcall	_Ax25_Send_Flag
  5182  0238  3001               	movlw	1
  5183  0239  0020               	movlb	0	; select bank0
  5184  023A  07B4               	addwf	Ax25_Send_Header@i,f
  5185  023B  3000               	movlw	0
  5186  023C  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  5187  023D  0835               	movf	Ax25_Send_Header@i+1,w
  5188  023E  3A80               	xorlw	128
  5189  023F  00AE               	movwf	??_Ax25_Send_Header
  5190  0240  3080               	movlw	128
  5191  0241  022E               	subwf	??_Ax25_Send_Header,w
  5192  0242  1D03               	skipz
  5193  0243  2A46               	goto	u1895
  5194  0244  3003               	movlw	3
  5195  0245  0234               	subwf	Ax25_Send_Header@i,w
  5196  0246                     u1895:	
  5197  0246  1C03               	skipc
  5198  0247  2A35               	goto	l2135
  5199  0248                     l2141:	
  5200                           
  5201                           ;ax25.c: 117: }
  5202                           ;ax25.c: 119: for (i = 0; i < num_addresses; i++) {
  5203  0248  0020               	movlb	0	; select bank0
  5204  0249  01B4               	clrf	Ax25_Send_Header@i
  5205  024A  01B5               	clrf	Ax25_Send_Header@i+1
  5206  024B                     l2163:	
  5207  024B  0835               	movf	Ax25_Send_Header@i+1,w
  5208  024C  3A80               	xorlw	128
  5209  024D  00AE               	movwf	??_Ax25_Send_Header
  5210  024E  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  5211  024F  3A80               	xorlw	128
  5212  0250  022E               	subwf	??_Ax25_Send_Header,w
  5213  0251  1D03               	skipz
  5214  0252  2A55               	goto	u1965
  5215  0253  082C               	movf	Ax25_Send_Header@num_addresses,w
  5216  0254  0234               	subwf	Ax25_Send_Header@i,w
  5217  0255                     u1965:	
  5218  0255  1803               	btfsc	3,0
  5219  0256  2AC5               	goto	l2165
  5220                           
  5221                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  5222  0257  0020               	movlb	0	; select bank0
  5223  0258  01B1               	clrf	Ax25_Send_Header@j
  5224  0259  01B2               	clrf	Ax25_Send_Header@j+1
  5225  025A  0832               	movf	Ax25_Send_Header@j+1,w
  5226  025B  3A80               	xorlw	128
  5227  025C  00AE               	movwf	??_Ax25_Send_Header
  5228  025D  3080               	movlw	128
  5229  025E  022E               	subwf	??_Ax25_Send_Header,w
  5230  025F  1D03               	skipz
  5231  0260  2A63               	goto	u1905
  5232  0261  3006               	movlw	6
  5233  0262  0231               	subwf	Ax25_Send_Header@j,w
  5234  0263                     u1905:	
  5235  0263  1803               	btfsc	3,0
  5236  0264  2A8A               	goto	l2155
  5237  0265                     l2149:	
  5238                           
  5239                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  5240  0265  0020               	movlb	0	; select bank0
  5241  0266  0834               	movf	Ax25_Send_Header@i,w
  5242  0267  00AE               	movwf	??_Ax25_Send_Header
  5243  0268  3002               	movlw	2
  5244  0269                     u1915:	
  5245  0269  35AE               	lslf	??_Ax25_Send_Header,f
  5246  026A  3EFF               	addlw	-1
  5247  026B  1D03               	skipz
  5248  026C  2A69               	goto	u1915
  5249  026D  352E               	lslf	??_Ax25_Send_Header,w
  5250  026E  0733               	addwf	Ax25_Send_Header@addresses,w
  5251  026F  00AF               	movwf	??_Ax25_Send_Header+1
  5252  0270  0831               	movf	Ax25_Send_Header@j,w
  5253  0271  072F               	addwf	??_Ax25_Send_Header+1,w
  5254  0272  00B0               	movwf	??_Ax25_Send_Header+2
  5255  0273  0830               	movf	??_Ax25_Send_Header+2,w
  5256  0274  0086               	movwf	6
  5257  0275  0187               	clrf	7
  5258  0276  3501               	lslf	1,w
  5259  0277  3185  257B  3181   	fcall	_Send_Byte
  5260  027A  3001               	movlw	1
  5261  027B  0020               	movlb	0	; select bank0
  5262  027C  07B1               	addwf	Ax25_Send_Header@j,f
  5263  027D  3000               	movlw	0
  5264  027E  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  5265  027F  0832               	movf	Ax25_Send_Header@j+1,w
  5266  0280  3A80               	xorlw	128
  5267  0281  00AE               	movwf	??_Ax25_Send_Header
  5268  0282  3080               	movlw	128
  5269  0283  022E               	subwf	??_Ax25_Send_Header,w
  5270  0284  1D03               	skipz
  5271  0285  2A88               	goto	u1925
  5272  0286  3006               	movlw	6
  5273  0287  0231               	subwf	Ax25_Send_Header@j,w
  5274  0288                     u1925:	
  5275  0288  1C03               	skipc
  5276  0289  2A65               	goto	l2149
  5277  028A                     l2155:	
  5278                           
  5279                           ;ax25.c: 125: if (i == num_addresses - 1){
  5280  028A  0020               	movlb	0	; select bank0
  5281  028B  082C               	movf	Ax25_Send_Header@num_addresses,w
  5282  028C  3EFF               	addlw	255
  5283  028D  00AE               	movwf	??_Ax25_Send_Header
  5284  028E  30FF               	movlw	255
  5285  028F  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  5286  0290  00AF               	movwf	??_Ax25_Send_Header+1
  5287  0291  0835               	movf	Ax25_Send_Header@i+1,w
  5288  0292  062F               	xorwf	??_Ax25_Send_Header+1,w
  5289  0293  1D03               	skipz
  5290  0294  2A97               	goto	u1935
  5291  0295  0834               	movf	Ax25_Send_Header@i,w
  5292  0296  062E               	xorwf	??_Ax25_Send_Header,w
  5293  0297                     u1935:	
  5294  0297  1D03               	skipz
  5295  0298  2AAB               	goto	l2159
  5296                           
  5297                           ;ax25.c: 126: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  5298  0299  0834               	movf	Ax25_Send_Header@i,w
  5299  029A  00AE               	movwf	??_Ax25_Send_Header
  5300  029B  3002               	movlw	2
  5301  029C                     u1945:	
  5302  029C  35AE               	lslf	??_Ax25_Send_Header,f
  5303  029D  3EFF               	addlw	-1
  5304  029E  1D03               	skipz
  5305  029F  2A9C               	goto	u1945
  5306  02A0  352E               	lslf	??_Ax25_Send_Header,w
  5307  02A1  0733               	addwf	Ax25_Send_Header@addresses,w
  5308  02A2  00AF               	movwf	??_Ax25_Send_Header+1
  5309  02A3  082F               	movf	??_Ax25_Send_Header+1,w
  5310  02A4  3E07               	addlw	7
  5311  02A5  0086               	movwf	6
  5312  02A6  0187               	clrf	7
  5313  02A7  3501               	lslf	1,w
  5314  02A8  3E60               	addlw	96
  5315  02A9  3801               	iorlw	1
  5316  02AA  2ABC               	goto	L2
  5317  02AB                     l2159:	
  5318                           ;ax25.c: 128: }
  5319                           
  5320                           
  5321                           ;ax25.c: 129: else
  5322                           ;ax25.c: 130: Send_Byte(('0' + addresses[i].ssid) << 1);
  5323  02AB  0020               	movlb	0	; select bank0
  5324  02AC  0834               	movf	Ax25_Send_Header@i,w
  5325  02AD  00AE               	movwf	??_Ax25_Send_Header
  5326  02AE  3002               	movlw	2
  5327  02AF                     u1955:	
  5328  02AF  35AE               	lslf	??_Ax25_Send_Header,f
  5329  02B0  3EFF               	addlw	-1
  5330  02B1  1D03               	skipz
  5331  02B2  2AAF               	goto	u1955
  5332  02B3  352E               	lslf	??_Ax25_Send_Header,w
  5333  02B4  0733               	addwf	Ax25_Send_Header@addresses,w
  5334  02B5  00AF               	movwf	??_Ax25_Send_Header+1
  5335  02B6  082F               	movf	??_Ax25_Send_Header+1,w
  5336  02B7  3E07               	addlw	7
  5337  02B8  0086               	movwf	6
  5338  02B9  0187               	clrf	7
  5339  02BA  3501               	lslf	1,w
  5340  02BB  3E60               	addlw	96
  5341  02BC                     L2:	
  5342  02BC  3185  257B  3181   	fcall	_Send_Byte
  5343  02BF  3001               	movlw	1
  5344  02C0  0020               	movlb	0	; select bank0
  5345  02C1  07B4               	addwf	Ax25_Send_Header@i,f
  5346  02C2  3000               	movlw	0
  5347  02C3  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  5348  02C4  2A4B               	goto	l2163
  5349  02C5                     l2165:	
  5350                           
  5351                           ;ax25.c: 131: }
  5352                           ;ax25.c: 134: Send_Byte(0x03);
  5353  02C5  3003               	movlw	3
  5354  02C6  3185  257B  3181   	fcall	_Send_Byte
  5355                           
  5356                           ;ax25.c: 137: Send_Byte(0xf0);
  5357  02C9  30F0               	movlw	240
  5358  02CA  3185  257B         	fcall	_Send_Byte
  5359  02CC  0008               	return
  5360  02CD                     __end_of_Ax25_Send_Header:	
  5361                           
  5362                           	psect	text32
  5363  0F87                     __ptext32:	
  5364 ;; *************** function _Ax25_Send_Sync *****************
  5365 ;; Defined at:
  5366 ;;		line 63 in file "ax25.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  i               2    7[BANK0 ] int 
  5371 ;;  byte            1    6[BANK0 ] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;		None               void
  5374 ;; Registers used:
  5375 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5382 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5383 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5384 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5385 ;;Total ram usage:        9 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    3
  5388 ;; This function calls:
  5389 ;;		Nothing
  5390 ;; This function is called by:
  5391 ;;		_Ax25_Send_Header
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           
  5396                           ;psect for function _Ax25_Send_Sync
  5397  0F87                     _Ax25_Send_Sync:	
  5398                           
  5399                           ;ax25.c: 65: uint8_t byte = 0x00;
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  5403  0F87  0020               	movlb	0	; select bank0
  5404  0F88  01A6               	clrf	Ax25_Send_Sync@byte
  5405                           
  5406                           ;ax25.c: 66: int i;
  5407                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  5408  0F89  01A7               	clrf	Ax25_Send_Sync@i
  5409  0F8A  01A8               	clrf	Ax25_Send_Sync@i+1
  5410  0F8B                     L3:	
  5411  0F8B  0828               	movf	Ax25_Send_Sync@i+1,w
  5412  0F8C  3A80               	xorlw	128
  5413  0F8D  00A0               	movwf	??_Ax25_Send_Sync
  5414  0F8E  3080               	movlw	128
  5415  0F8F  0220               	subwf	??_Ax25_Send_Sync,w
  5416  0F90  3008               	movlw	8
  5417  0F91  1903               	btfsc	3,2
  5418  0F92  0227               	subwf	Ax25_Send_Sync@i,w
  5419  0F93  1803               	btfsc	3,0
  5420  0F94  0008               	return
  5421                           
  5422                           ;ax25.c: 68: if (modem_packet_size >= 64 * 8)
  5423  0F95  3000               	movlw	0
  5424  0F96  027C               	subwf	_modem_packet_size+3,w
  5425  0F97  1D03               	skipz
  5426  0F98  2FA3               	goto	u1605
  5427  0F99  3000               	movlw	0
  5428  0F9A  027B               	subwf	_modem_packet_size+2,w
  5429  0F9B  1D03               	skipz
  5430  0F9C  2FA3               	goto	u1605
  5431  0F9D  3002               	movlw	2
  5432  0F9E  027A               	subwf	_modem_packet_size+1,w
  5433  0F9F  1D03               	skipz
  5434  0FA0  2FA3               	goto	u1605
  5435  0FA1  3000               	movlw	0
  5436  0FA2  0279               	subwf	_modem_packet_size,w
  5437  0FA3                     u1605:	
  5438  0FA3  1803               	btfsc	3,0
  5439  0FA4  0008               	return
  5440                           
  5441                           ;ax25.c: 70: if ((byte >> i) & 1)
  5442                           
  5443                           ;ax25.c: 69: return;
  5444  0FA5  0020               	movlb	0	; select bank0
  5445  0FA6  0826               	movf	Ax25_Send_Sync@byte,w
  5446  0FA7  00A0               	movwf	??_Ax25_Send_Sync
  5447  0FA8  0A27               	incf	Ax25_Send_Sync@i,w
  5448  0FA9  2FAB               	goto	u1614
  5449  0FAA                     u1615:	
  5450  0FAA  36A0               	lsrf	??_Ax25_Send_Sync,f
  5451  0FAB                     u1614:	
  5452  0FAB  0B89               	decfsz	9,f
  5453  0FAC  2FAA               	goto	u1615
  5454  0FAD  1C20               	btfss	??_Ax25_Send_Sync,0
  5455  0FAE  2FD1               	goto	l1941
  5456                           
  5457                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  5458  0FAF  3001               	movlw	1
  5459  0FB0  00A0               	movwf	??_Ax25_Send_Sync
  5460  0FB1  0879               	movf	_modem_packet_size,w
  5461  0FB2  3907               	andlw	7
  5462  0FB3  0A89               	incf	9,f
  5463  0FB4  2FB6               	goto	u1634
  5464  0FB5                     u1635:	
  5465  0FB5  35A0               	lslf	??_Ax25_Send_Sync,f
  5466  0FB6                     u1634:	
  5467  0FB6  0B89               	decfsz	9,f
  5468  0FB7  2FB5               	goto	u1635
  5469  0FB8  0820               	movf	??_Ax25_Send_Sync,w
  5470  0FB9  00A1               	movwf	??_Ax25_Send_Sync+1
  5471  0FBA  0879               	movf	_modem_packet_size,w
  5472  0FBB  00A2               	movwf	??_Ax25_Send_Sync+2
  5473  0FBC  087A               	movf	_modem_packet_size+1,w
  5474  0FBD  00A3               	movwf	??_Ax25_Send_Sync+3
  5475  0FBE  087B               	movf	_modem_packet_size+2,w
  5476  0FBF  00A4               	movwf	??_Ax25_Send_Sync+4
  5477  0FC0  087C               	movf	_modem_packet_size+3,w
  5478  0FC1  00A5               	movwf	??_Ax25_Send_Sync+5
  5479  0FC2  3003               	movlw	3
  5480  0FC3                     u1645:	
  5481  0FC3  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  5482  0FC4  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  5483  0FC5  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  5484  0FC6  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  5485  0FC7  0B89               	decfsz	9,f
  5486  0FC8  2FC3               	goto	u1645
  5487  0FC9  0822               	movf	??_Ax25_Send_Sync+2,w
  5488  0FCA  3EA0               	addlw	_modem_packet& (0+255)
  5489  0FCB  0086               	movwf	6
  5490  0FCC  3001               	movlw	1	; select bank3/4
  5491  0FCD  0087               	movwf	7
  5492  0FCE  0821               	movf	??_Ax25_Send_Sync+1,w
  5493  0FCF  0481               	iorwf	1,f
  5494  0FD0  2FF3               	goto	l1943
  5495  0FD1                     l1941:	
  5496                           
  5497                           ;ax25.c: 72: else
  5498                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  5499  0FD1  3001               	movlw	1
  5500  0FD2  00A0               	movwf	??_Ax25_Send_Sync
  5501  0FD3  0879               	movf	_modem_packet_size,w
  5502  0FD4  3907               	andlw	7
  5503  0FD5  0A89               	incf	9,f
  5504  0FD6  2FD8               	goto	u1654
  5505  0FD7                     u1655:	
  5506  0FD7  35A0               	lslf	??_Ax25_Send_Sync,f
  5507  0FD8                     u1654:	
  5508  0FD8  0B89               	decfsz	9,f
  5509  0FD9  2FD7               	goto	u1655
  5510  0FDA  0820               	movf	??_Ax25_Send_Sync,w
  5511  0FDB  3AFF               	xorlw	255
  5512  0FDC  00A1               	movwf	??_Ax25_Send_Sync+1
  5513  0FDD  0879               	movf	_modem_packet_size,w
  5514  0FDE  00A2               	movwf	??_Ax25_Send_Sync+2
  5515  0FDF  087A               	movf	_modem_packet_size+1,w
  5516  0FE0  00A3               	movwf	??_Ax25_Send_Sync+3
  5517  0FE1  087B               	movf	_modem_packet_size+2,w
  5518  0FE2  00A4               	movwf	??_Ax25_Send_Sync+4
  5519  0FE3  087C               	movf	_modem_packet_size+3,w
  5520  0FE4  00A5               	movwf	??_Ax25_Send_Sync+5
  5521  0FE5  3003               	movlw	3
  5522  0FE6                     u1665:	
  5523  0FE6  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  5524  0FE7  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  5525  0FE8  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  5526  0FE9  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  5527  0FEA  0B89               	decfsz	9,f
  5528  0FEB  2FE6               	goto	u1665
  5529  0FEC  0822               	movf	??_Ax25_Send_Sync+2,w
  5530  0FED  3EA0               	addlw	_modem_packet& (0+255)
  5531  0FEE  0086               	movwf	6
  5532  0FEF  3001               	movlw	1	; select bank3/4
  5533  0FF0  0087               	movwf	7
  5534  0FF1  0821               	movf	??_Ax25_Send_Sync+1,w
  5535  0FF2  0581               	andwf	1,f
  5536  0FF3                     l1943:	
  5537  0FF3  3001               	movlw	1
  5538  0FF4  07A7               	addwf	Ax25_Send_Sync@i,f
  5539  0FF5  3000               	movlw	0
  5540  0FF6  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  5541  0FF7  3001               	movlw	1
  5542  0FF8  07F9               	addwf	_modem_packet_size,f
  5543  0FF9  3000               	movlw	0
  5544  0FFA  3DFA               	addwfc	_modem_packet_size+1,f
  5545  0FFB  3000               	movlw	0
  5546  0FFC  3DFB               	addwfc	_modem_packet_size+2,f
  5547  0FFD  3000               	movlw	0
  5548  0FFE  3DFC               	addwfc	_modem_packet_size+3,f
  5549  0FFF  2F8B               	goto	L3
  5550  1000                     __end_of_Ax25_Send_Sync:	
  5551                           
  5552                           	psect	text33
  5553  0D73                     __ptext33:	
  5554 ;; *************** function _Ax25_Send_Footer *****************
  5555 ;; Defined at:
  5556 ;;		line 141 in file "ax25.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;  final_crc       2   12[BANK0 ] unsigned int 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;		None               void
  5563 ;; Registers used:
  5564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;Total ram usage:        2 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    5
  5577 ;; This function calls:
  5578 ;;		_Ax25_Send_Flag
  5579 ;;		_Send_Byte
  5580 ;; This function is called by:
  5581 ;;		_main
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           
  5586                           ;psect for function _Ax25_Send_Footer
  5587  0D73                     _Ax25_Send_Footer:	
  5588                           
  5589                           ;ax25.c: 144: uint16_t final_crc = crc;
  5590                           
  5591                           ;incstack = 0
  5592                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5593  0D73  0021               	movlb	1	; select bank1
  5594  0D74  084C               	movf	(_crc+1)^(0+128),w
  5595  0D75  0020               	movlb	0	; select bank0
  5596  0D76  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  5597  0D77  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  5598  0D78  0021               	movlb	1	; select bank1
  5599  0D79  084B               	movf	_crc^(0+128),w
  5600  0D7A  0020               	movlb	0	; select bank0
  5601  0D7B  01AC               	clrf	Ax25_Send_Footer@final_crc
  5602  0D7C  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  5603                           
  5604                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  5605  0D7D  092C               	comf	Ax25_Send_Footer@final_crc,w
  5606  0D7E  3185  257B  318D   	fcall	_Send_Byte
  5607                           
  5608                           ;ax25.c: 148: final_crc >>= 8;
  5609  0D81  3008               	movlw	8
  5610  0D82  0020               	movlb	0	; select bank0
  5611  0D83                     u1985:	
  5612  0D83  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  5613  0D84  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  5614  0D85  0B89               	decfsz	9,f
  5615  0D86  2D83               	goto	u1985
  5616                           
  5617                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  5618  0D87  092C               	comf	Ax25_Send_Footer@final_crc,w
  5619  0D88  3185  257B  318D   	fcall	_Send_Byte
  5620                           
  5621                           ;ax25.c: 152: Ax25_Send_Flag();
  5622  0D8B  3187  2765         	fcall	_Ax25_Send_Flag
  5623  0D8D  0008               	return
  5624  0D8E                     __end_of_Ax25_Send_Footer:	
  5625                           
  5626                           	psect	text34
  5627  057B                     __ptext34:	
  5628 ;; *************** function _Send_Byte *****************
  5629 ;; Defined at:
  5630 ;;		line 32 in file "ax25.c"
  5631 ;; Parameters:    Size  Location     Type
  5632 ;;  byte            1    wreg     unsigned char 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  byte            1    9[BANK0 ] unsigned char 
  5635 ;;  i               2   10[BANK0 ] int 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;		None               void
  5638 ;; Registers used:
  5639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5646 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5647 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5648 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5649 ;;Total ram usage:        9 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    4
  5652 ;; This function calls:
  5653 ;;		_Update_Crc
  5654 ;; This function is called by:
  5655 ;;		_Ax25_Send_Byte
  5656 ;;		_Ax25_Send_Header
  5657 ;;		_Ax25_Send_Footer
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _Send_Byte
  5663  057B                     _Send_Byte:	
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5667                           ;Send_Byte@byte stored from wreg
  5668  057B  0020               	movlb	0	; select bank0
  5669  057C  00A9               	movwf	Send_Byte@byte
  5670                           
  5671                           ;ax25.c: 34: int i;
  5672                           ;ax25.c: 35: for (i = 0; i < 8; i++) {
  5673  057D  01AA               	clrf	Send_Byte@i
  5674  057E  01AB               	clrf	Send_Byte@i+1
  5675  057F                     L4:	
  5676  057F  082B               	movf	Send_Byte@i+1,w
  5677  0580  3A80               	xorlw	128
  5678  0581  00A3               	movwf	??_Send_Byte
  5679  0582  3080               	movlw	128
  5680  0583  0223               	subwf	??_Send_Byte,w
  5681  0584  3008               	movlw	8
  5682  0585  1903               	btfsc	3,2
  5683  0586  022A               	subwf	Send_Byte@i,w
  5684  0587  1803               	btfsc	3,0
  5685  0588  0008               	return
  5686                           
  5687                           ;ax25.c: 36: Update_Crc((byte >> i) & 1);
  5688  0589  0020               	movlb	0	; select bank0
  5689  058A  0829               	movf	Send_Byte@byte,w
  5690  058B  00A3               	movwf	??_Send_Byte
  5691  058C  0A2A               	incf	Send_Byte@i,w
  5692  058D  2D8F               	goto	u1474
  5693  058E                     u1475:	
  5694  058E  36A3               	lsrf	??_Send_Byte,f
  5695  058F                     u1474:	
  5696  058F  0B89               	decfsz	9,f
  5697  0590  2D8E               	goto	u1475
  5698  0591  0823               	movf	??_Send_Byte,w
  5699  0592  3901               	andlw	1
  5700  0593  318E  263F  3185   	fcall	_Update_Crc
  5701                           
  5702                           ;ax25.c: 37: if ((byte >> i) & 1) {
  5703  0596  0020               	movlb	0	; select bank0
  5704  0597  0829               	movf	Send_Byte@byte,w
  5705  0598  00A3               	movwf	??_Send_Byte
  5706  0599  0A2A               	incf	Send_Byte@i,w
  5707  059A  2D9C               	goto	u1484
  5708  059B                     u1485:	
  5709  059B  36A3               	lsrf	??_Send_Byte,f
  5710  059C                     u1484:	
  5711  059C  0B89               	decfsz	9,f
  5712  059D  2D9B               	goto	u1485
  5713  059E  1C23               	btfss	??_Send_Byte,0
  5714  059F  2DEB               	goto	l1865
  5715                           
  5716                           ;ax25.c: 39: if (modem_packet_size >= (64 * 8))
  5717  05A0  3000               	movlw	0
  5718  05A1  027C               	subwf	_modem_packet_size+3,w
  5719  05A2  1D03               	skipz
  5720  05A3  2DAE               	goto	u1505
  5721  05A4  3000               	movlw	0
  5722  05A5  027B               	subwf	_modem_packet_size+2,w
  5723  05A6  1D03               	skipz
  5724  05A7  2DAE               	goto	u1505
  5725  05A8  3002               	movlw	2
  5726  05A9  027A               	subwf	_modem_packet_size+1,w
  5727  05AA  1D03               	skipz
  5728  05AB  2DAE               	goto	u1505
  5729  05AC  3000               	movlw	0
  5730  05AD  0279               	subwf	_modem_packet_size,w
  5731  05AE                     u1505:	
  5732  05AE  1803               	btfsc	3,0
  5733  05AF  0008               	return
  5734                           
  5735                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  5736                           
  5737                           ;ax25.c: 40: return;
  5738  05B0  3001               	movlw	1
  5739  05B1  00A3               	movwf	??_Send_Byte
  5740  05B2  0879               	movf	_modem_packet_size,w
  5741  05B3  3907               	andlw	7
  5742  05B4  0A89               	incf	9,f
  5743  05B5  2DB7               	goto	u1514
  5744  05B6                     u1515:	
  5745  05B6  35A3               	lslf	??_Send_Byte,f
  5746  05B7                     u1514:	
  5747  05B7  0B89               	decfsz	9,f
  5748  05B8  2DB6               	goto	u1515
  5749  05B9  0823               	movf	??_Send_Byte,w
  5750  05BA  00A4               	movwf	??_Send_Byte+1
  5751  05BB  0879               	movf	_modem_packet_size,w
  5752  05BC  00A5               	movwf	??_Send_Byte+2
  5753  05BD  087A               	movf	_modem_packet_size+1,w
  5754  05BE  00A6               	movwf	??_Send_Byte+3
  5755  05BF  087B               	movf	_modem_packet_size+2,w
  5756  05C0  00A7               	movwf	??_Send_Byte+4
  5757  05C1  087C               	movf	_modem_packet_size+3,w
  5758  05C2  00A8               	movwf	??_Send_Byte+5
  5759  05C3  3003               	movlw	3
  5760  05C4                     u1525:	
  5761  05C4  36A8               	lsrf	??_Send_Byte+5,f
  5762  05C5  0CA7               	rrf	??_Send_Byte+4,f
  5763  05C6  0CA6               	rrf	??_Send_Byte+3,f
  5764  05C7  0CA5               	rrf	??_Send_Byte+2,f
  5765  05C8  0B89               	decfsz	9,f
  5766  05C9  2DC4               	goto	u1525
  5767  05CA  0825               	movf	??_Send_Byte+2,w
  5768  05CB  3EA0               	addlw	_modem_packet& (0+255)
  5769  05CC  0086               	movwf	6
  5770  05CD  3001               	movlw	1	; select bank3/4
  5771  05CE  0087               	movwf	7
  5772  05CF  0824               	movf	??_Send_Byte+1,w
  5773  05D0  0481               	iorwf	1,f
  5774                           
  5775                           ;ax25.c: 44: modem_packet_size++;
  5776  05D1  3001               	movlw	1
  5777  05D2  07F9               	addwf	_modem_packet_size,f
  5778  05D3  3000               	movlw	0
  5779  05D4  3DFA               	addwfc	_modem_packet_size+1,f
  5780  05D5  3000               	movlw	0
  5781  05D6  3DFB               	addwfc	_modem_packet_size+2,f
  5782  05D7  3000               	movlw	0
  5783  05D8  3DFC               	addwfc	_modem_packet_size+3,f
  5784                           
  5785                           ;ax25.c: 45: if (++ones_in_a_row < 5) continue;
  5786  05D9  3001               	movlw	1
  5787  05DA  0021               	movlb	1	; select bank1
  5788  05DB  07CD               	addwf	_ones_in_a_row^(0+128),f
  5789  05DC  3000               	movlw	0
  5790  05DD  3DCE               	addwfc	(_ones_in_a_row+1)^(0+128),f
  5791  05DE  084E               	movf	(_ones_in_a_row+1)^(0+128),w
  5792  05DF  3A80               	xorlw	128
  5793  05E0  0020               	movlb	0	; select bank0
  5794  05E1  00A3               	movwf	??_Send_Byte
  5795  05E2  3080               	movlw	128
  5796  05E3  0223               	subwf	??_Send_Byte,w
  5797  05E4  1D03               	skipz
  5798  05E5  2DE9               	goto	u1535
  5799  05E6  3005               	movlw	5
  5800  05E7  0021               	movlb	1	; select bank1
  5801  05E8  024D               	subwf	_ones_in_a_row^(0+128),w
  5802  05E9                     u1535:	
  5803  05E9  1C03               	btfss	3,0
  5804  05EA  2E29               	goto	l1875
  5805  05EB                     l1865:	
  5806                           
  5807                           ;ax25.c: 46: }
  5808                           ;ax25.c: 48: if (modem_packet_size >= (64 * 8))
  5809  05EB  3000               	movlw	0
  5810  05EC  027C               	subwf	_modem_packet_size+3,w
  5811  05ED  1D03               	skipz
  5812  05EE  2DF9               	goto	u1545
  5813  05EF  3000               	movlw	0
  5814  05F0  027B               	subwf	_modem_packet_size+2,w
  5815  05F1  1D03               	skipz
  5816  05F2  2DF9               	goto	u1545
  5817  05F3  3002               	movlw	2
  5818  05F4  027A               	subwf	_modem_packet_size+1,w
  5819  05F5  1D03               	skipz
  5820  05F6  2DF9               	goto	u1545
  5821  05F7  3000               	movlw	0
  5822  05F8  0279               	subwf	_modem_packet_size,w
  5823  05F9                     u1545:	
  5824  05F9  1803               	btfsc	3,0
  5825  05FA  0008               	return
  5826                           
  5827                           ;ax25.c: 50: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  5828                           
  5829                           ;ax25.c: 49: return;
  5830  05FB  3001               	movlw	1
  5831  05FC  0020               	movlb	0	; select bank0
  5832  05FD  00A3               	movwf	??_Send_Byte
  5833  05FE  0879               	movf	_modem_packet_size,w
  5834  05FF  3907               	andlw	7
  5835  0600  0A89               	incf	9,f
  5836  0601  2E03               	goto	u1554
  5837  0602                     u1555:	
  5838  0602  35A3               	lslf	??_Send_Byte,f
  5839  0603                     u1554:	
  5840  0603  0B89               	decfsz	9,f
  5841  0604  2E02               	goto	u1555
  5842  0605  0823               	movf	??_Send_Byte,w
  5843  0606  3AFF               	xorlw	255
  5844  0607  00A4               	movwf	??_Send_Byte+1
  5845  0608  0879               	movf	_modem_packet_size,w
  5846  0609  00A5               	movwf	??_Send_Byte+2
  5847  060A  087A               	movf	_modem_packet_size+1,w
  5848  060B  00A6               	movwf	??_Send_Byte+3
  5849  060C  087B               	movf	_modem_packet_size+2,w
  5850  060D  00A7               	movwf	??_Send_Byte+4
  5851  060E  087C               	movf	_modem_packet_size+3,w
  5852  060F  00A8               	movwf	??_Send_Byte+5
  5853  0610  3003               	movlw	3
  5854  0611                     u1565:	
  5855  0611  36A8               	lsrf	??_Send_Byte+5,f
  5856  0612  0CA7               	rrf	??_Send_Byte+4,f
  5857  0613  0CA6               	rrf	??_Send_Byte+3,f
  5858  0614  0CA5               	rrf	??_Send_Byte+2,f
  5859  0615  0B89               	decfsz	9,f
  5860  0616  2E11               	goto	u1565
  5861  0617  0825               	movf	??_Send_Byte+2,w
  5862  0618  3EA0               	addlw	_modem_packet& (0+255)
  5863  0619  0086               	movwf	6
  5864  061A  3001               	movlw	1	; select bank3/4
  5865  061B  0087               	movwf	7
  5866  061C  0824               	movf	??_Send_Byte+1,w
  5867  061D  0581               	andwf	1,f
  5868                           
  5869                           ;ax25.c: 52: modem_packet_size++;
  5870  061E  3001               	movlw	1
  5871  061F  07F9               	addwf	_modem_packet_size,f
  5872  0620  3000               	movlw	0
  5873  0621  3DFA               	addwfc	_modem_packet_size+1,f
  5874  0622  3000               	movlw	0
  5875  0623  3DFB               	addwfc	_modem_packet_size+2,f
  5876  0624  3000               	movlw	0
  5877  0625  3DFC               	addwfc	_modem_packet_size+3,f
  5878                           
  5879                           ;ax25.c: 53: ones_in_a_row = 0;
  5880  0626  0021               	movlb	1	; select bank1
  5881  0627  01CD               	clrf	_ones_in_a_row^(0+128)
  5882  0628  01CE               	clrf	(_ones_in_a_row+1)^(0+128)
  5883  0629                     l1875:	
  5884  0629  3001               	movlw	1
  5885  062A  0020               	movlb	0	; select bank0
  5886  062B  07AA               	addwf	Send_Byte@i,f
  5887  062C  3000               	movlw	0
  5888  062D  3DAB               	addwfc	Send_Byte@i+1,f
  5889  062E  2D7F               	goto	L4
  5890  062F                     __end_of_Send_Byte:	
  5891                           
  5892                           	psect	text35
  5893  0E3F                     __ptext35:	
  5894 ;; *************** function _Update_Crc *****************
  5895 ;; Defined at:
  5896 ;;		line 23 in file "ax25.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  input_bit       1    wreg     unsigned char 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  input_bit       1    2[BANK0 ] unsigned char 
  5901 ;; Return value:  Size  Location     Type
  5902 ;;		None               void
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5913 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;Total ram usage:        3 bytes
  5915 ;; Hardware stack levels used:    1
  5916 ;; Hardware stack levels required when called:    3
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_Send_Byte
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           
  5925                           ;psect for function _Update_Crc
  5926  0E3F                     _Update_Crc:	
  5927                           
  5928                           ;incstack = 0
  5929                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  5930                           ;Update_Crc@input_bit stored from wreg
  5931  0E3F  0020               	movlb	0	; select bank0
  5932  0E40  00A2               	movwf	Update_Crc@input_bit
  5933                           
  5934                           ;ax25.c: 25: crc ^= input_bit;
  5935  0E41  0822               	movf	Update_Crc@input_bit,w
  5936  0E42  00A0               	movwf	??_Update_Crc
  5937  0E43  01A1               	clrf	??_Update_Crc+1
  5938  0E44  0820               	movf	??_Update_Crc,w
  5939  0E45  0021               	movlb	1	; select bank1
  5940  0E46  06CB               	xorwf	_crc^(0+128),f
  5941  0E47  0020               	movlb	0	; select bank0
  5942  0E48  0821               	movf	??_Update_Crc+1,w
  5943  0E49  0021               	movlb	1	; select bank1
  5944  0E4A  06CC               	xorwf	(_crc+1)^(0+128),f
  5945                           
  5946                           ;ax25.c: 26: if (crc & 1)
  5947  0E4B  1C4B               	btfss	_crc^(0+128),0
  5948  0E4C  2E60               	goto	l1825
  5949                           
  5950                           ;ax25.c: 27: crc = (crc >> 1) ^ 0x8408;
  5951  0E4D  084C               	movf	(_crc+1)^(0+128),w
  5952  0E4E  0020               	movlb	0	; select bank0
  5953  0E4F  00A1               	movwf	??_Update_Crc+1
  5954  0E50  0021               	movlb	1	; select bank1
  5955  0E51  084B               	movf	_crc^(0+128),w
  5956  0E52  0020               	movlb	0	; select bank0
  5957  0E53  00A0               	movwf	??_Update_Crc
  5958  0E54  36A1               	lsrf	??_Update_Crc+1,f
  5959  0E55  0CA0               	rrf	??_Update_Crc,f
  5960  0E56  3008               	movlw	8
  5961  0E57  0620               	xorwf	??_Update_Crc,w
  5962  0E58  0021               	movlb	1	; select bank1
  5963  0E59  00CB               	movwf	_crc^(0+128)
  5964  0E5A  3084               	movlw	132
  5965  0E5B  0020               	movlb	0	; select bank0
  5966  0E5C  0621               	xorwf	??_Update_Crc+1,w
  5967  0E5D  0021               	movlb	1	; select bank1
  5968  0E5E  00CC               	movwf	(_crc+1)^(0+128)
  5969  0E5F  0008               	return
  5970  0E60                     l1825:	
  5971                           
  5972                           ;ax25.c: 28: else
  5973                           ;ax25.c: 29: crc = crc >> 1;
  5974  0E60  084C               	movf	(_crc+1)^(0+128),w
  5975  0E61  0020               	movlb	0	; select bank0
  5976  0E62  00A1               	movwf	??_Update_Crc+1
  5977  0E63  0021               	movlb	1	; select bank1
  5978  0E64  084B               	movf	_crc^(0+128),w
  5979  0E65  0020               	movlb	0	; select bank0
  5980  0E66  00A0               	movwf	??_Update_Crc
  5981  0E67  36A1               	lsrf	??_Update_Crc+1,f
  5982  0E68  0CA0               	rrf	??_Update_Crc,f
  5983  0E69  0820               	movf	??_Update_Crc,w
  5984  0E6A  0021               	movlb	1	; select bank1
  5985  0E6B  00CB               	movwf	_crc^(0+128)
  5986  0E6C  0020               	movlb	0	; select bank0
  5987  0E6D  0821               	movf	??_Update_Crc+1,w
  5988  0E6E  0021               	movlb	1	; select bank1
  5989  0E6F  00CC               	movwf	(_crc+1)^(0+128)
  5990  0E70  0008               	return
  5991  0E71                     __end_of_Update_Crc:	
  5992                           
  5993                           	psect	text36
  5994  0765                     __ptext36:	
  5995 ;; *************** function _Ax25_Send_Flag *****************
  5996 ;; Defined at:
  5997 ;;		line 77 in file "ax25.c"
  5998 ;; Parameters:    Size  Location     Type
  5999 ;;		None
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  i               2    7[BANK0 ] int 
  6002 ;;  byte            1    6[BANK0 ] unsigned char 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;		None               void
  6005 ;; Registers used:
  6006 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6013 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;Total ram usage:        9 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    3
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		_Ax25_Send_Header
  6023 ;;		_Ax25_Send_Footer
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           
  6028                           ;psect for function _Ax25_Send_Flag
  6029  0765                     _Ax25_Send_Flag:	
  6030                           
  6031                           ;ax25.c: 79: uint8_t byte = 0x7e;
  6032                           
  6033                           ;incstack = 0
  6034                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  6035  0765  307E               	movlw	126
  6036  0766  0020               	movlb	0	; select bank0
  6037  0767  00A0               	movwf	??_Ax25_Send_Flag
  6038  0768  0820               	movf	??_Ax25_Send_Flag,w
  6039  0769  00A6               	movwf	Ax25_Send_Flag@byte
  6040                           
  6041                           ;ax25.c: 80: int i;
  6042                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  6043  076A  01A7               	clrf	Ax25_Send_Flag@i
  6044  076B  01A8               	clrf	Ax25_Send_Flag@i+1
  6045  076C                     L5:	
  6046  076C  0828               	movf	Ax25_Send_Flag@i+1,w
  6047  076D  3A80               	xorlw	128
  6048  076E  00A0               	movwf	??_Ax25_Send_Flag
  6049  076F  3080               	movlw	128
  6050  0770  0220               	subwf	??_Ax25_Send_Flag,w
  6051  0771  3008               	movlw	8
  6052  0772  1903               	btfsc	3,2
  6053  0773  0227               	subwf	Ax25_Send_Flag@i,w
  6054  0774  1803               	btfsc	3,0
  6055  0775  0008               	return
  6056                           
  6057                           ;ax25.c: 82: if (modem_packet_size >= 64 * 8)
  6058  0776  3000               	movlw	0
  6059  0777  027C               	subwf	_modem_packet_size+3,w
  6060  0778  1D03               	skipz
  6061  0779  2F84               	goto	u1695
  6062  077A  3000               	movlw	0
  6063  077B  027B               	subwf	_modem_packet_size+2,w
  6064  077C  1D03               	skipz
  6065  077D  2F84               	goto	u1695
  6066  077E  3002               	movlw	2
  6067  077F  027A               	subwf	_modem_packet_size+1,w
  6068  0780  1D03               	skipz
  6069  0781  2F84               	goto	u1695
  6070  0782  3000               	movlw	0
  6071  0783  0279               	subwf	_modem_packet_size,w
  6072  0784                     u1695:	
  6073  0784  1803               	btfsc	3,0
  6074  0785  0008               	return
  6075                           
  6076                           ;ax25.c: 84: if ((byte >> i) & 1)
  6077                           
  6078                           ;ax25.c: 83: return;
  6079  0786  0020               	movlb	0	; select bank0
  6080  0787  0826               	movf	Ax25_Send_Flag@byte,w
  6081  0788  00A0               	movwf	??_Ax25_Send_Flag
  6082  0789  0A27               	incf	Ax25_Send_Flag@i,w
  6083  078A  2F8C               	goto	u1704
  6084  078B                     u1705:	
  6085  078B  36A0               	lsrf	??_Ax25_Send_Flag,f
  6086  078C                     u1704:	
  6087  078C  0B89               	decfsz	9,f
  6088  078D  2F8B               	goto	u1705
  6089  078E  1C20               	btfss	??_Ax25_Send_Flag,0
  6090  078F  2FB2               	goto	l1965
  6091                           
  6092                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  6093  0790  3001               	movlw	1
  6094  0791  00A0               	movwf	??_Ax25_Send_Flag
  6095  0792  0879               	movf	_modem_packet_size,w
  6096  0793  3907               	andlw	7
  6097  0794  0A89               	incf	9,f
  6098  0795  2F97               	goto	u1724
  6099  0796                     u1725:	
  6100  0796  35A0               	lslf	??_Ax25_Send_Flag,f
  6101  0797                     u1724:	
  6102  0797  0B89               	decfsz	9,f
  6103  0798  2F96               	goto	u1725
  6104  0799  0820               	movf	??_Ax25_Send_Flag,w
  6105  079A  00A1               	movwf	??_Ax25_Send_Flag+1
  6106  079B  0879               	movf	_modem_packet_size,w
  6107  079C  00A2               	movwf	??_Ax25_Send_Flag+2
  6108  079D  087A               	movf	_modem_packet_size+1,w
  6109  079E  00A3               	movwf	??_Ax25_Send_Flag+3
  6110  079F  087B               	movf	_modem_packet_size+2,w
  6111  07A0  00A4               	movwf	??_Ax25_Send_Flag+4
  6112  07A1  087C               	movf	_modem_packet_size+3,w
  6113  07A2  00A5               	movwf	??_Ax25_Send_Flag+5
  6114  07A3  3003               	movlw	3
  6115  07A4                     u1735:	
  6116  07A4  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  6117  07A5  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  6118  07A6  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  6119  07A7  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  6120  07A8  0B89               	decfsz	9,f
  6121  07A9  2FA4               	goto	u1735
  6122  07AA  0822               	movf	??_Ax25_Send_Flag+2,w
  6123  07AB  3EA0               	addlw	_modem_packet& (0+255)
  6124  07AC  0086               	movwf	6
  6125  07AD  3001               	movlw	1	; select bank3/4
  6126  07AE  0087               	movwf	7
  6127  07AF  0821               	movf	??_Ax25_Send_Flag+1,w
  6128  07B0  0481               	iorwf	1,f
  6129  07B1  2FD4               	goto	l1967
  6130  07B2                     l1965:	
  6131                           
  6132                           ;ax25.c: 86: else
  6133                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  6134  07B2  3001               	movlw	1
  6135  07B3  00A0               	movwf	??_Ax25_Send_Flag
  6136  07B4  0879               	movf	_modem_packet_size,w
  6137  07B5  3907               	andlw	7
  6138  07B6  0A89               	incf	9,f
  6139  07B7  2FB9               	goto	u1744
  6140  07B8                     u1745:	
  6141  07B8  35A0               	lslf	??_Ax25_Send_Flag,f
  6142  07B9                     u1744:	
  6143  07B9  0B89               	decfsz	9,f
  6144  07BA  2FB8               	goto	u1745
  6145  07BB  0820               	movf	??_Ax25_Send_Flag,w
  6146  07BC  3AFF               	xorlw	255
  6147  07BD  00A1               	movwf	??_Ax25_Send_Flag+1
  6148  07BE  0879               	movf	_modem_packet_size,w
  6149  07BF  00A2               	movwf	??_Ax25_Send_Flag+2
  6150  07C0  087A               	movf	_modem_packet_size+1,w
  6151  07C1  00A3               	movwf	??_Ax25_Send_Flag+3
  6152  07C2  087B               	movf	_modem_packet_size+2,w
  6153  07C3  00A4               	movwf	??_Ax25_Send_Flag+4
  6154  07C4  087C               	movf	_modem_packet_size+3,w
  6155  07C5  00A5               	movwf	??_Ax25_Send_Flag+5
  6156  07C6  3003               	movlw	3
  6157  07C7                     u1755:	
  6158  07C7  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  6159  07C8  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  6160  07C9  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  6161  07CA  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  6162  07CB  0B89               	decfsz	9,f
  6163  07CC  2FC7               	goto	u1755
  6164  07CD  0822               	movf	??_Ax25_Send_Flag+2,w
  6165  07CE  3EA0               	addlw	_modem_packet& (0+255)
  6166  07CF  0086               	movwf	6
  6167  07D0  3001               	movlw	1	; select bank3/4
  6168  07D1  0087               	movwf	7
  6169  07D2  0821               	movf	??_Ax25_Send_Flag+1,w
  6170  07D3  0581               	andwf	1,f
  6171  07D4                     l1967:	
  6172  07D4  3001               	movlw	1
  6173  07D5  07A7               	addwf	Ax25_Send_Flag@i,f
  6174  07D6  3000               	movlw	0
  6175  07D7  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  6176  07D8  3001               	movlw	1
  6177  07D9  07F9               	addwf	_modem_packet_size,f
  6178  07DA  3000               	movlw	0
  6179  07DB  3DFA               	addwfc	_modem_packet_size+1,f
  6180  07DC  3000               	movlw	0
  6181  07DD  3DFB               	addwfc	_modem_packet_size+2,f
  6182  07DE  3000               	movlw	0
  6183  07DF  3DFC               	addwfc	_modem_packet_size+3,f
  6184  07E0  2F6C               	goto	L5
  6185  07E1                     __end_of_Ax25_Send_Flag:	
  6186                           
  6187                           	psect	text37
  6188  0C95                     __ptext37:	
  6189 ;; *************** function _Adc1_Start *****************
  6190 ;; Defined at:
  6191 ;;		line 286 in file "utility.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;		None               void
  6198 ;; Registers used:
  6199 ;;		None
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6209 ;;Total ram usage:        0 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    3
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_main
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           
  6220                           ;psect for function _Adc1_Start
  6221  0C95                     _Adc1_Start:	
  6222                           
  6223                           ;utility.c: 287: ADIF = 0;
  6224                           
  6225                           ;incstack = 0
  6226                           ; Regs used in _Adc1_Start: []
  6227  0C95  0020               	movlb	0	; select bank0
  6228  0C96  1311               	bcf	17,6	;volatile
  6229                           
  6230                           ;utility.c: 288: ADON = 1;
  6231  0C97  0021               	movlb	1	; select bank1
  6232  0C98  141D               	bsf	29,0	;volatile
  6233                           
  6234                           ;utility.c: 289: ADIE = 1;
  6235  0C99  1711               	bsf	17,6	;volatile
  6236  0C9A  0008               	return
  6237  0C9B                     __end_of_Adc1_Start:	
  6238                           
  6239                           	psect	intentry
  6240  0004                     __pintentry:	
  6241 ;; *************** function _global_interrupt *****************
  6242 ;; Defined at:
  6243 ;;		line 42 in file "main.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;		None
  6248 ;; Return value:  Size  Location     Type
  6249 ;;		None               void
  6250 ;; Registers used:
  6251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;Total ram usage:        2 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    2
  6264 ;; This function calls:
  6265 ;;		_Sinus_Generator
  6266 ;; This function is called by:
  6267 ;;		Interrupt level 1
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271  0004                     _global_interrupt:	
  6272                           
  6273                           ;incstack = 0
  6274                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6275  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6276  0005  3180               	pagesel	$
  6277  0006  0020               	movlb	0	; select bank0
  6278  0007  087F               	movf	127,w
  6279  0008  00F8               	movwf	??_global_interrupt+1
  6280                           
  6281                           ;main.c: 44: INTCON &= ~0x80;
  6282  0009  307F               	movlw	127
  6283  000A  00F7               	movwf	??_global_interrupt
  6284  000B  0877               	movf	??_global_interrupt,w
  6285  000C  058B               	andwf	11,f	;volatile
  6286                           
  6287                           ;main.c: 47: if(ADIF){
  6288  000D  1F11               	btfss	17,6	;volatile
  6289  000E  281B               	goto	i1l117
  6290                           
  6291                           ;main.c: 49: adc__high = ADRESH;
  6292  000F  0021               	movlb	1	; select bank1
  6293  0010  081C               	movf	28,w	;volatile
  6294  0011  00F7               	movwf	??_global_interrupt
  6295  0012  0877               	movf	??_global_interrupt,w
  6296  0013  00D3               	movwf	_adc__high^(0+128)
  6297                           
  6298                           ;main.c: 50: adc__low = ADRESL;
  6299  0014  081B               	movf	27,w	;volatile
  6300  0015  00F7               	movwf	??_global_interrupt
  6301  0016  0877               	movf	??_global_interrupt,w
  6302  0017  00D4               	movwf	_adc__low^(0+128)
  6303                           
  6304                           ;main.c: 52: ADIF = 0;
  6305  0018  0020               	movlb	0	; select bank0
  6306  0019  1311               	bcf	17,6	;volatile
  6307                           
  6308                           ;main.c: 54: return;
  6309  001A  2854               	goto	i1l118
  6310  001B                     i1l117:	
  6311                           
  6312                           ;main.c: 55: }
  6313                           ;main.c: 60: if(PIR1 & 0x04){
  6314  001B  1D11               	btfss	17,2	;volatile
  6315  001C  2849               	goto	i1l119
  6316                           
  6317                           ;main.c: 62: Change_to_New_Baud = 1;
  6318  001D  01EE               	clrf	_Change_to_New_Baud
  6319  001E  0AEE               	incf	_Change_to_New_Baud,f
  6320                           
  6321                           ;main.c: 66: TMR1H = 0x00;
  6322  001F  0197               	clrf	23	;volatile
  6323                           
  6324                           ;main.c: 67: TMR1L = 0x00;
  6325  0020  0196               	clrf	22	;volatile
  6326                           
  6327                           ;main.c: 69: PIR1 &= ~0x04;
  6328  0021  30FB               	movlw	251
  6329  0022  00F7               	movwf	??_global_interrupt
  6330  0023  0877               	movf	??_global_interrupt,w
  6331  0024  0591               	andwf	17,f	;volatile
  6332                           
  6333                           ;main.c: 71: Systick_Counter += 1;
  6334  0025  3001               	movlw	1
  6335  0026  0022               	movlb	2	; select bank2
  6336  0027  07AC               	addwf	_Systick_Counter^(0+256),f
  6337  0028  3000               	movlw	0
  6338  0029  3DAD               	addwfc	(_Systick_Counter+1)^(0+256),f
  6339  002A  3000               	movlw	0
  6340  002B  3DAE               	addwfc	(_Systick_Counter+2)^(0+256),f
  6341  002C  3000               	movlw	0
  6342  002D  3DAF               	addwfc	(_Systick_Counter+3)^(0+256),f
  6343                           
  6344                           ;main.c: 72: if(Systick_Counter > 100000){
  6345  002E  3000               	movlw	0
  6346  002F  022F               	subwf	(_Systick_Counter+3)^(0+256),w
  6347  0030  1D03               	skipz
  6348  0031  283C               	goto	u235_25
  6349  0032  3001               	movlw	1
  6350  0033  022E               	subwf	(_Systick_Counter+2)^(0+256),w
  6351  0034  1D03               	skipz
  6352  0035  283C               	goto	u235_25
  6353  0036  3086               	movlw	134
  6354  0037  022D               	subwf	(_Systick_Counter+1)^(0+256),w
  6355  0038  1D03               	skipz
  6356  0039  283C               	goto	u235_25
  6357  003A  30A1               	movlw	161
  6358  003B  022C               	subwf	_Systick_Counter^(0+256),w
  6359  003C                     u235_25:	
  6360  003C  1C03               	skipc
  6361  003D  2854               	goto	i1l118
  6362                           
  6363                           ;main.c: 73: Systick_Counter = 0;
  6364  003E  3000               	movlw	0
  6365  003F  00AF               	movwf	(_Systick_Counter+3)^(0+256)
  6366  0040  3000               	movlw	0
  6367  0041  00AE               	movwf	(_Systick_Counter+2)^(0+256)
  6368  0042  3000               	movlw	0
  6369  0043  00AD               	movwf	(_Systick_Counter+1)^(0+256)
  6370  0044  3000               	movlw	0
  6371  0045  00AC               	movwf	_Systick_Counter^(0+256)
  6372                           
  6373                           ;main.c: 74: ADCON0 |= 0b00000010;
  6374  0046  0021               	movlb	1	; select bank1
  6375  0047  149D               	bsf	29,1	;volatile
  6376                           
  6377                           ;main.c: 75: }
  6378                           ;main.c: 77: return;
  6379  0048  2854               	goto	i1l118
  6380  0049                     i1l119:	
  6381                           
  6382                           ;main.c: 78: }
  6383                           ;main.c: 82: if(INTCON & 0x04){
  6384  0049  1D0B               	btfss	11,2	;volatile
  6385  004A  2853               	goto	i1l121
  6386                           
  6387                           ;main.c: 84: Sinus_Generator();
  6388  004B  3186  262F  3180   	fcall	_Sinus_Generator
  6389                           
  6390                           ;main.c: 86: INTCON &= ~0x04;
  6391  004E  30FB               	movlw	251
  6392  004F  00F7               	movwf	??_global_interrupt
  6393  0050  0877               	movf	??_global_interrupt,w
  6394  0051  058B               	andwf	11,f	;volatile
  6395                           
  6396                           ;main.c: 88: return;
  6397  0052  2854               	goto	i1l118
  6398  0053                     i1l121:	
  6399                           
  6400                           ;main.c: 89: }
  6401                           ;main.c: 94: INTCON |= 0x80;
  6402  0053  178B               	bsf	11,7	;volatile
  6403  0054                     i1l118:	
  6404  0054  0878               	movf	??_global_interrupt+1,w
  6405  0055  0020               	movlb	0	; select bank0
  6406  0056  00FF               	movwf	127
  6407  0057  107E               	bcf	126,0	;clear compiler interrupt flag
  6408  0058  0009               	retfie
  6409  0059                     __end_of_global_interrupt:	
  6410                           
  6411                           	psect	text39
  6412  062F                     __ptext39:	
  6413 ;; *************** function _Sinus_Generator *****************
  6414 ;; Defined at:
  6415 ;;		line 81 in file "audio_tone.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;		None
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  6420 ;; Return value:  Size  Location     Type
  6421 ;;		None               void
  6422 ;; Registers used:
  6423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;Total ram usage:        6 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    1
  6436 ;; This function calls:
  6437 ;;		_Send_Vcxo_Signal
  6438 ;;		_Timer0_Stop
  6439 ;; This function is called by:
  6440 ;;		_global_interrupt
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           
  6445                           ;psect for function _Sinus_Generator
  6446  062F                     _Sinus_Generator:	
  6447                           
  6448                           ;audio_tone.c: 83: uint8_t Audio_Signal;
  6449                           ;audio_tone.c: 84: static uint8_t tone_index = 0;
  6450                           ;audio_tone.c: 85: if (MODEM_TRANSMITTING == 1) {
  6451                           
  6452                           ;incstack = 0
  6453                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6454  062F  0021               	movlb	1	; select bank1
  6455  0630  0850               	movf	_MODEM_TRANSMITTING^(0+128),w
  6456  0631  3A01               	xorlw	1
  6457  0632  1D03               	skipz
  6458  0633  0008               	return
  6459                           
  6460                           ;audio_tone.c: 87: if (packet_pos == modem_packet_size) {
  6461  0634  087C               	movf	_modem_packet_size+3,w
  6462  0635  064A               	xorwf	(_packet_pos+3)^(0+128),w
  6463  0636  1D03               	skipz
  6464  0637  2E42               	goto	u178_25
  6465  0638  087B               	movf	_modem_packet_size+2,w
  6466  0639  0649               	xorwf	(_packet_pos+2)^(0+128),w
  6467  063A  1D03               	skipz
  6468  063B  2E42               	goto	u178_25
  6469  063C  087A               	movf	_modem_packet_size+1,w
  6470  063D  0648               	xorwf	(_packet_pos+1)^(0+128),w
  6471  063E  1D03               	skipz
  6472  063F  2E42               	goto	u178_25
  6473  0640  0879               	movf	_modem_packet_size,w
  6474  0641  0647               	xorwf	_packet_pos^(0+128),w
  6475  0642                     u178_25:	
  6476  0642  1D03               	skipz
  6477  0643  2E4F               	goto	i1l1985
  6478                           
  6479                           ;audio_tone.c: 88: MODEM_TRANSMITTING = 0;
  6480  0644  01D0               	clrf	_MODEM_TRANSMITTING^(0+128)
  6481                           
  6482                           ;audio_tone.c: 89: Timer0_Stop();
  6483  0645  318C  2482  3186   	fcall	_Timer0_Stop
  6484                           
  6485                           ;audio_tone.c: 91: Send_Vcxo_Signal(0x10);
  6486  0648  3010               	movlw	16
  6487  0649  318C  2486         	fcall	_Send_Vcxo_Signal
  6488                           
  6489                           ;audio_tone.c: 93: PTT_OFF = 1;
  6490  064B  0021               	movlb	1	; select bank1
  6491  064C  01D1               	clrf	_PTT_OFF^(0+128)
  6492  064D  0AD1               	incf	_PTT_OFF^(0+128),f
  6493                           
  6494                           ;audio_tone.c: 95: goto end_generator;
  6495  064E  0008               	return
  6496  064F                     i1l1985:	
  6497                           
  6498                           ;audio_tone.c: 96: }
  6499                           ;audio_tone.c: 99: if (current_sample_in_baud == 0) {
  6500  064F  08D5               	movf	_current_sample_in_baud^(0+128),f
  6501  0650  1D03               	skipz
  6502  0651  2E98               	goto	i1l2005
  6503                           
  6504                           ;audio_tone.c: 100: if ((packet_pos & 7) == 0)
  6505  0652  3007               	movlw	7
  6506  0653  0547               	andwf	_packet_pos^(0+128),w
  6507  0654  00F1               	movwf	??_Sinus_Generator
  6508  0655  3000               	movlw	0
  6509  0656  0548               	andwf	(_packet_pos+1)^(0+128),w
  6510  0657  00F2               	movwf	??_Sinus_Generator+1
  6511  0658  3000               	movlw	0
  6512  0659  0549               	andwf	(_packet_pos+2)^(0+128),w
  6513  065A  00F3               	movwf	??_Sinus_Generator+2
  6514  065B  3000               	movlw	0
  6515  065C  054A               	andwf	(_packet_pos+3)^(0+128),w
  6516  065D  00F4               	movwf	??_Sinus_Generator+3
  6517  065E  0874               	movf	??_Sinus_Generator+3,w
  6518  065F  0473               	iorwf	??_Sinus_Generator+2,w
  6519  0660  0472               	iorwf	??_Sinus_Generator+1,w
  6520  0661  0471               	iorwf	??_Sinus_Generator,w
  6521  0662  1D03               	skipz
  6522  0663  2E7D               	goto	i1l1991
  6523                           
  6524                           ;audio_tone.c: 101: current_byte = modem_packet[packet_pos >> 3];
  6525  0664  0847               	movf	_packet_pos^(0+128),w
  6526  0665  00F1               	movwf	??_Sinus_Generator
  6527  0666  0848               	movf	(_packet_pos+1)^(0+128),w
  6528  0667  00F2               	movwf	??_Sinus_Generator+1
  6529  0668  0849               	movf	(_packet_pos+2)^(0+128),w
  6530  0669  00F3               	movwf	??_Sinus_Generator+2
  6531  066A  084A               	movf	(_packet_pos+3)^(0+128),w
  6532  066B  00F4               	movwf	??_Sinus_Generator+3
  6533  066C  3003               	movlw	3
  6534  066D                     u181_25:	
  6535  066D  36F4               	lsrf	??_Sinus_Generator+3,f
  6536  066E  0CF3               	rrf	??_Sinus_Generator+2,f
  6537  066F  0CF2               	rrf	??_Sinus_Generator+1,f
  6538  0670  0CF1               	rrf	??_Sinus_Generator,f
  6539  0671  0B89               	decfsz	9,f
  6540  0672  2E6D               	goto	u181_25
  6541  0673  0871               	movf	??_Sinus_Generator,w
  6542  0674  3EA0               	addlw	_modem_packet& (0+255)
  6543  0675  0086               	movwf	6
  6544  0676  3001               	movlw	1	; select bank3/4
  6545  0677  0087               	movwf	7
  6546  0678  0801               	movf	1,w
  6547  0679  00F5               	movwf	??_Sinus_Generator+4
  6548  067A  0875               	movf	??_Sinus_Generator+4,w
  6549  067B  0020               	movlb	0	; select bank0
  6550  067C  2E81               	goto	L6
  6551  067D                     i1l1991:	
  6552                           
  6553                           ;audio_tone.c: 102: else
  6554                           ;audio_tone.c: 103: current_byte = current_byte >> 1 ;
  6555  067D  0020               	movlb	0	; select bank0
  6556  067E  366F               	lsrf	_current_byte,w
  6557  067F  00F1               	movwf	??_Sinus_Generator
  6558  0680  0871               	movf	??_Sinus_Generator,w
  6559  0681                     L6:	
  6560  0681  00EF               	movwf	_current_byte
  6561                           
  6562                           ;audio_tone.c: 104: if ((current_byte & 0x01) == 0) {
  6563  0682  186F               	btfsc	_current_byte,0
  6564  0683  2E98               	goto	i1l2005
  6565                           
  6566                           ;audio_tone.c: 106: if(tone_index){
  6567  0684  0021               	movlb	1	; select bank1
  6568  0685  084F               	movf	Sinus_Generator@tone_index^(0+128),w
  6569  0686  1903               	btfsc	3,2
  6570  0687  2E90               	goto	i1l2001
  6571                           
  6572                           ;audio_tone.c: 107: phase_delta = PHASE_DELTA_1200;
  6573  0688  0022               	movlb	2	; select bank2
  6574  0689  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  6575  068A  00F1               	movwf	??_Sinus_Generator
  6576  068B  0871               	movf	??_Sinus_Generator,w
  6577  068C  0021               	movlb	1	; select bank1
  6578  068D  00D6               	movwf	_phase_delta^(0+128)
  6579                           
  6580                           ;audio_tone.c: 108: tone_index = 0;
  6581  068E  01CF               	clrf	Sinus_Generator@tone_index^(0+128)
  6582                           
  6583                           ;audio_tone.c: 109: }
  6584  068F  2E98               	goto	i1l2005
  6585  0690                     i1l2001:	
  6586                           
  6587                           ;audio_tone.c: 110: else{
  6588                           ;audio_tone.c: 111: phase_delta = PHASE_DELTA_2200;
  6589  0690  0022               	movlb	2	; select bank2
  6590  0691  0828               	movf	_PHASE_DELTA_2200^(0+256),w
  6591  0692  00F1               	movwf	??_Sinus_Generator
  6592  0693  0871               	movf	??_Sinus_Generator,w
  6593  0694  0021               	movlb	1	; select bank1
  6594  0695  00D6               	movwf	_phase_delta^(0+128)
  6595                           
  6596                           ;audio_tone.c: 112: tone_index = 1;
  6597  0696  01CF               	clrf	Sinus_Generator@tone_index^(0+128)
  6598  0697  0ACF               	incf	Sinus_Generator@tone_index^(0+128),f
  6599  0698                     i1l2005:	
  6600                           
  6601                           ;audio_tone.c: 113: }
  6602                           ;audio_tone.c: 114: }
  6603                           ;audio_tone.c: 115: }
  6604                           ;audio_tone.c: 117: phase += phase_delta;
  6605  0698  0021               	movlb	1	; select bank1
  6606  0699  0856               	movf	_phase_delta^(0+128),w
  6607  069A  00F1               	movwf	??_Sinus_Generator
  6608  069B  0871               	movf	??_Sinus_Generator,w
  6609  069C  07FD               	addwf	_phase,f
  6610                           
  6611                           ;audio_tone.c: 118: if(phase >= TABLE_SIZE)
  6612  069D  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6613  069E  0084               	movwf	4
  6614  069F  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6615  06A0  0085               	movwf	5
  6616  06A1  3F00               	moviw [0]fsr0
  6617  06A2  00F1               	movwf	??_Sinus_Generator
  6618  06A3  3F01               	moviw [1]fsr0
  6619  06A4  00F2               	movwf	??_Sinus_Generator+1
  6620  06A5  0872               	movf	??_Sinus_Generator+1,w
  6621  06A6  3A80               	xorlw	128
  6622  06A7  3C80               	sublw	128
  6623  06A8  1D03               	skipz
  6624  06A9  2EAC               	goto	u184_25
  6625  06AA  0871               	movf	??_Sinus_Generator,w
  6626  06AB  027D               	subwf	_phase,w
  6627  06AC                     u184_25:	
  6628  06AC  1C03               	skipc
  6629  06AD  2EB9               	goto	i1l2011
  6630                           
  6631                           ;audio_tone.c: 119: phase = phase - TABLE_SIZE;
  6632  06AE  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6633  06AF  0084               	movwf	4
  6634  06B0  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6635  06B1  0085               	movwf	5
  6636  06B2  0800               	movf	0,w	;code access
  6637  06B3  3AFF               	xorlw	255
  6638  06B4  3E01               	addlw	1
  6639  06B5  077D               	addwf	_phase,w
  6640  06B6  00F1               	movwf	??_Sinus_Generator
  6641  06B7  0871               	movf	??_Sinus_Generator,w
  6642  06B8  00FD               	movwf	_phase
  6643  06B9                     i1l2011:	
  6644                           
  6645                           ;audio_tone.c: 122: Audio_Signal = *(sine_table2 + phase);
  6646  06B9  087D               	movf	_phase,w
  6647  06BA  3E00               	addlw	low (_sine_table2| (0+32768))
  6648  06BB  0084               	movwf	4
  6649  06BC  3084               	movlw	high (_sine_table2| (0+32768))
  6650  06BD  1803               	skipnc
  6651  06BE  3E01               	addlw	1
  6652  06BF  0085               	movwf	5
  6653  06C0  0800               	movf	0,w	;code access
  6654  06C1  00F1               	movwf	??_Sinus_Generator
  6655  06C2  0871               	movf	??_Sinus_Generator,w
  6656  06C3  00F6               	movwf	Sinus_Generator@Audio_Signal
  6657                           
  6658                           ;audio_tone.c: 123: Send_Vcxo_Signal(Audio_Signal);
  6659  06C4  0876               	movf	Sinus_Generator@Audio_Signal,w
  6660  06C5  318C  2486  3186   	fcall	_Send_Vcxo_Signal
  6661                           
  6662                           ;audio_tone.c: 125: current_sample_in_baud++;
  6663  06C8  3001               	movlw	1
  6664  06C9  00F1               	movwf	??_Sinus_Generator
  6665  06CA  0871               	movf	??_Sinus_Generator,w
  6666  06CB  0021               	movlb	1	; select bank1
  6667  06CC  07D5               	addwf	_current_sample_in_baud^(0+128),f
  6668                           
  6669                           ;audio_tone.c: 127: if(Change_to_New_Baud == 1) {
  6670  06CD  0020               	movlb	0	; select bank0
  6671  06CE  086E               	movf	_Change_to_New_Baud,w
  6672  06CF  3A01               	xorlw	1
  6673  06D0  1D03               	skipz
  6674  06D1  0008               	return
  6675                           
  6676                           ;audio_tone.c: 128: current_sample_in_baud = 0;
  6677  06D2  0021               	movlb	1	; select bank1
  6678  06D3  01D5               	clrf	_current_sample_in_baud^(0+128)
  6679                           
  6680                           ;audio_tone.c: 129: packet_pos++;
  6681  06D4  3001               	movlw	1
  6682  06D5  07C7               	addwf	_packet_pos^(0+128),f
  6683  06D6  3000               	movlw	0
  6684  06D7  3DC8               	addwfc	(_packet_pos+1)^(0+128),f
  6685  06D8  3000               	movlw	0
  6686  06D9  3DC9               	addwfc	(_packet_pos+2)^(0+128),f
  6687  06DA  3000               	movlw	0
  6688  06DB  3DCA               	addwfc	(_packet_pos+3)^(0+128),f
  6689                           
  6690                           ;audio_tone.c: 130: Change_to_New_Baud = 0;
  6691  06DC  0020               	movlb	0	; select bank0
  6692  06DD  01EE               	clrf	_Change_to_New_Baud
  6693                           
  6694                           ;audio_tone.c: 131: }
  6695                           ;audio_tone.c: 133: }
  6696                           ;audio_tone.c: 135: end_generator:
  6697  06DE  0008               	return
  6698  06DF                     __end_of_Sinus_Generator:	
  6699                           ;audio_tone.c: 137: return;
  6700                           
  6701                           
  6702                           	psect	text40
  6703  0C82                     __ptext40:	
  6704 ;; *************** function _Timer0_Stop *****************
  6705 ;; Defined at:
  6706 ;;		line 249 in file "utility.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;		None
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;		None               void
  6713 ;; Registers used:
  6714 ;;		status,2
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6724 ;;Total ram usage:        0 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; This function calls:
  6727 ;;		Nothing
  6728 ;; This function is called by:
  6729 ;;		_Sinus_Generator
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           
  6734                           ;psect for function _Timer0_Stop
  6735  0C82                     _Timer0_Stop:	
  6736                           
  6737                           ;utility.c: 250: TMR0IE = 0;
  6738                           
  6739                           ;incstack = 0
  6740                           ; Regs used in _Timer0_Stop: [status,2]
  6741  0C82  128B               	bcf	11,5	;volatile
  6742                           
  6743                           ;utility.c: 251: TMR0 = 0x00;
  6744  0C83  0020               	movlb	0	; select bank0
  6745  0C84  0195               	clrf	21	;volatile
  6746  0C85  0008               	return
  6747  0C86                     __end_of_Timer0_Stop:	
  6748                           
  6749                           	psect	text41
  6750  0C86                     __ptext41:	
  6751 ;; *************** function _Send_Vcxo_Signal *****************
  6752 ;; Defined at:
  6753 ;;		line 108 in file "utility.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  value           1    wreg     unsigned char 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  value           1    0[COMMON] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  1    wreg      unsigned char 
  6760 ;; Registers used:
  6761 ;;		wreg
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;Total ram usage:        1 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; This function calls:
  6774 ;;		Nothing
  6775 ;; This function is called by:
  6776 ;;		_Sinus_Generator
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           
  6781                           ;psect for function _Send_Vcxo_Signal
  6782  0C86                     _Send_Vcxo_Signal:	
  6783                           
  6784                           ;incstack = 0
  6785                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  6786                           ;Send_Vcxo_Signal@value stored from wreg
  6787  0C86  00F0               	movwf	Send_Vcxo_Signal@value
  6788                           
  6789                           ;utility.c: 110: DACCON1 = value;
  6790  0C87  0870               	movf	Send_Vcxo_Signal@value,w
  6791  0C88  0022               	movlb	2	; select bank2
  6792  0C89  0099               	movwf	25	;volatile
  6793  0C8A  0008               	return
  6794  0C8B                     __end_of_Send_Vcxo_Signal:	
  6795                           ;utility.c: 111: return 1;
  6796                           ;	Return value of _Send_Vcxo_Signal is never used
  6797                           
  6798  007E                     btemp	set	126	;btemp
  6799  007E                     pic14e$flags	set	126
  6800  007E                     wtemp	set	126
  6801  007E                     wtemp0	set	126
  6802  0080                     wtemp1	set	128
  6803  0082                     wtemp2	set	130
  6804  0084                     wtemp3	set	132
  6805  0086                     wtemp4	set	134
  6806  0088                     wtemp5	set	136
  6807  007F                     wtemp6	set	127
  6808  007E                     ttemp	set	126
  6809  007E                     ttemp0	set	126
  6810  0081                     ttemp1	set	129
  6811  0084                     ttemp2	set	132
  6812  0087                     ttemp3	set	135
  6813  007F                     ttemp4	set	127
  6814  007E                     ltemp	set	126
  6815  007E                     ltemp0	set	126
  6816  0082                     ltemp1	set	130
  6817  0086                     ltemp2	set	134
  6818  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     78      80
    BANK1            80     24      79
    BANK2            80      0      32
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Modem_Flush_Frame
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _Adf_Write_Config->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   96337
                                             77 BANK0      1     1      0
                                              8 BANK1     16    16      0
                         _Adc1_Start
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                             _Ptt_On
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   22735
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   24054
                    _Configure_Audio
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   24054
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1319
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1319
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Configure_Audio                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   24054
                                             76 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ptt_On                                               1     1      0   22735
                                             75 BANK0      1     1      0
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Read_Adf7012_Muxout                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   21416
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    5354
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    5354
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    5354
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    5354
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    3141
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1411
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1319
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (3) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1332
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (1) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _global_interrupt                                     2     2      0      45
                                              7 COMMON     2     2      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (10) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (11) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
     _Timer0_Start
   _Modem_Setup
     _Configure_Audio
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ptt_On
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
     _Read_Adf7012_Muxout
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _Sinus_Generator
     _Send_Vcxo_Signal
     _Timer0_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     18      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     10D      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     10D      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Sep 29 20:20:34 2014

                      __CFG_CP$OFF 0000            _Adf_Reset_Register_Zero 07E1  
                   Reverse_Array@i 0032                     Spi_Byte_Send@i 0029  
         __end_of_Adf_Reset_Config 0CF1                        __CFG_LVP$ON 0000  
         _Adf_Reset_Register_Three 03D8                                l221 0E25  
                              l127 06E2                                l191 0DB4  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00CB                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 0033  
                     __CFG_IESO$ON 0000                      ??_Gpio_Config 0020  
           _Adf_Write_Register_One 0F16             _Adf_Write_Register_Two 04C4  
                             l2123 0214                               l2141 0248  
                             l2135 0235                               l2129 0227  
                             l2155 028A                               l2163 024B  
                             l2165 02C5                               l2149 0265  
                             l2173 0D91                               l2159 02AB  
                             l1711 0F06                               l1709 0EF2  
                             l2381 0755                               l2383 0758  
                             l2375 074C                               l1825 0E60  
                             l1729 03B8                               l1673 0E26  
                             l1835 0CB8                               l1941 0FD1  
                             l1943 0FF3                               l1695 0DF6  
                             l1865 05EB                               l1875 0629  
                             l1965 07B2                               l1967 07D4  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _ADON 04E8  
                             STR_1 04BE                               u1115 0E00  
                             u1205 033C                               u1215 0F1F  
                             u1225 0F2D                               u1305 0092  
                             u1145 02D6                               u1075 0DBA  
                             u1235 0F47                               u1315 00A1  
                             u1155 02E5                               u1405 0128  
                             u1325 00B0                               u1245 04CD  
                             u1165 02F4                               u1415 0137  
                             u1335 00BF                               u1255 04DC  
                             u1175 0303                               u1505 05AE  
                             u1425 0146                               u1345 00CE  
                             u1265 04F6                               u1185 0312  
                             u1514 05B7                               u1515 05B6  
                             u1435 0155                               u1355 00DD  
                             u1275 0505                               u1195 0321  
                             u1525 05C4                               u1605 0FA3  
                             u1365 00EC                               u1285 0514  
                             u1614 0FAB                               u1535 05E9  
                             u1615 0FAA                               u1375 00FB  
                             u1295 0523                               u1704 078C  
                             u1705 078B                               u1545 05F9  
                             u1385 010A                               u1554 0603  
                             u1474 058F                               u1634 0FB6  
                             u1555 0602                               u1475 058E  
                             u1635 0FB5                               u1395 0119  
                             u1724 0797                               u1484 059C  
                             u2380 071F                               u1725 0796  
                             u1565 0611                               u1485 059B  
                             u1645 0FC3                               u1654 0FD8  
                             u1735 07A4                               u1655 0FD7  
                             u1744 07B9                               u1745 07B8  
                             u1665 0FE6                               u1905 0263  
                             u1755 07C7                               u1915 0269  
                             u1925 0288                               u1695 0784  
                             u1935 0297                               u1945 029C  
                             u1865 0212                               u1955 02AF  
                             u1875 0225                               u1965 0255  
                             u1885 0233                               u1895 0246  
                             u1985 0D83                               u2977 0DC0  
                             _PIR1 0011                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 06DF                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    Send_Byte@byte 0029                      __CFG_BOREN$ON 0000  
                             ltemp 007E                               start 0059  
                             ttemp 007E                    _Sinus_Generator 062F  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
          _Adf_Write_Register_Zero 02CD                        ?_Adc1_Start 0070  
               main@beacon_address 00DF                      __CFG_PLLEN$ON 0000  
                  __end_of_Ptt_Off 0CE2                      ??_Radio_Setup 006B  
                            _ADCS0 04F4                              _ADCS1 04F5  
                            _ADCS2 04F6                              ?_main 0070  
                            _DACEN 08C7                              _DACOE 08C5  
                    __CFG_WDTE$OFF 0000                              _ANSA1 0C61  
                            i1l121 0053                              i1l117 001B  
                            i1l118 0054                              i1l119 0049  
                            _TMR1H 0017                              _TMR1L 0016  
                            _TRISA 008C                              _TRISC 008E  
       Write_Adf7012_Reg@reg_value 002C                              _phase 007D  
                    ??_Modem_Setup 006B                  __end_of_BAUD_RATE 04BC  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
               __size_of_Adf_Reset 0012                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                 _Adf_Write_Config 0CBA                              wtemp6 007F  
              __end_of_Gpio_Config 0D10                   __end_of_Delay_ms 0DCB  
                  _Configure_Audio 0D43             _current_sample_in_baud 00D5  
                Spi_Byte_Send@data 0027                         Send_Byte@i 002A  
                  __initialization 005B          ??_Adf_Reset_Register_Zero 0020  
        __size_of_Ax25_Send_Header 00D8              __size_of_System_Start 0036  
                     __end_of_main 0765          __size_of_Ax25_Send_Footer 001B  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 03D8  
         _Adf_Write_Register_Three 0089              __end_of_Spi_Byte_Send 0E3F  
                           ??_main 006D          __size_of_Send_Vcxo_Signal 0005  
              __end_of_Radio_Setup 0CD4       __size_of_Read_Adf7012_Muxout 0007  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _CCP1IF 008A  
                           _DACNSS 08C0                             _ADNREF 04F2  
                           _ADRESH 009C                             _ADRESL 009B  
                           _CCPR1H 0292                             _CCPR1L 0291  
          __end_of_Sinus_Generator 06DF      Adf_Write_Register_One@reg_ptr 0043  
                           i1l2001 0690                             i1l2011 06B9  
                           i1l2005 0698                             i1l1991 067D  
                           i1l1985 064F                             _INTCON 000B  
                           u235_25 003C                             u181_25 066D  
              __size_of_Adc1_Start 0006                             u184_25 06AC  
                           u178_25 0642                 Reverse_Array@F3148 0120  
                           _OSCCON 0099           __size_of_Dac0_Start_Hold 0005  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1IE 0488                             _TMR1IF 0088  
                           _TMR1ON 00C0                       _System_Start 0EA7  
              __end_of_Modem_Setup 0CA7                     __CFG_PWRTE$OFF 0000  
                    ??_Timer0_Stop 0070          ??_Adf_Write_Register_Zero 0033  
                           _Ptt_On 0E71                          ??_Ptt_Off 006B  
               __size_of_Send_Byte 00B4                 Reverse_Array@input 0031  
                   __CFG_STVREN$ON 0000                   ??_Ax25_Send_Flag 0020  
                 ??_Ax25_Send_Byte 002C                             _memcpy 0DEC  
                 ??_Ax25_Send_Sync 0020                  __end_of_Adf_Reset 0D43  
                       _Update_Crc 0E3F                        _Gpio_Config 0D00  
          __end_of_Configure_Audio 0D5B            __end_of__initialization 0085  
        __size_of_global_interrupt 0055                 Write_Adf7012_Reg@i 002D  
       ??_Adf_Reset_Register_Three 0020                     __pcstackCOMMON 0070  
         ??_Adf_Reset_Register_One 0020                       __pidataBANK2 0D10  
         ??_Adf_Reset_Register_Two 0020                         _adf_config 00A0  
              __end_of_Timer0_Stop 0C86                      _PLAYBACK_RATE 04B6  
                ?_Adf_Reset_Config 0070                        _Radio_Setup 0CC6  
          ?_Adf_Write_Register_One 0070            ?_Adf_Write_Register_Two 0070  
        Spi_Byte_Send@data_to_send 0028                 ??_Adf_Reset_Config 0026  
                        ?_Delay_ms 0020                  __end_of_Send_Byte 062F  
                 _PHASE_DELTA_1200 0124                   _PHASE_DELTA_2200 0128  
                      _Modem_Setup 0CA1                         __pbssBANK0 006E  
                       __pbssBANK1 00A0                         __pbssBANK2 0120  
                       __pbssBANK3 01A0                   ?_Sinus_Generator 0070  
               Ax25_Send_Flag@byte 0026                      ?_Timer0_Start 0070  
      Adf_Write_Register_Three@reg 00DB                      ?_Timer1_Start 0070  
                       __pmaintext 06DF                   _Ax25_Send_Header 01F5  
                          ?_Ptt_On 0070                  ??_Dac0_Start_Hold 0020  
               __end_of_TABLE_SIZE 04BE                   _Ax25_Send_Footer 0D73  
                       __pintentry 0004                       ??_Adc1_Start 0020  
                          _DACCON1 0119                 Ax25_Send_Byte@byte 002C  
                          _DACPSS0 08C2                            _DACPSS1 08C3  
                          ?_memcpy 0020                   _Ax25_Send_String 0D8E  
                          _ADPREF0 04F0                            _ADPREF1 04F1  
   __end_of_Adf_Write_Register_One 0F87     __end_of_Adf_Write_Register_Two 057B  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                 _Send_Vcxo_Signal 0C86           __end_of_Adf_Write_Config 0CC6  
                      ?_Update_Crc 0070                         ??_Delay_ms 0022  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _PTT_OFF 00D1                Update_Crc@input_bit 0022  
                 ?_Configure_Audio 0070      Adf_Write_Register_Two@reg_ptr 004B  
   Adf_Write_Register_Zero@reg_ptr 004F                 __end_of_Adc1_Start 0C9B  
                   ??_Timer0_Start 0020                     ??_Timer1_Start 0020  
                        _BAUD_RATE 04BA         ??_Adf_Write_Register_Three 0033  
                      _Timer0_Stop 0C82                         _packet_pos 00C7  
                          _Ptt_Off 0CD4                    __size_of_Ptt_On 0036  
              _Read_Adf7012_Muxout 0CB3    __size_of_Adf_Reset_Register_One 0011  
  __size_of_Adf_Reset_Register_Two 0018                 Ax25_Send_Sync@byte 0026  
              Reverse_Array@length 0027                    Ax25_Send_Flag@i 0027  
                  __size_of_memcpy 0029                            __ptext1 0CF1  
                          __ptext2 0EA7                            __ptext3 0CD4  
                          __ptext4 0CA1                            __ptext5 0CC6  
                          __ptext6 0CE2                            __ptext7 07E1  
                          __ptext8 0D5B                            __ptext9 03D8  
            Delay_ms@time_to_delay 0020          Adf_Write_Register_One@reg 003F  
                  Ax25_Send_Sync@i 0027               ?_Read_Adf7012_Muxout 0070  
        Adf_Write_Register_Two@reg 004F                            clrloop0 0CAE  
  Adf_Write_Register_Three@reg_ptr 00D7               end_of_initialization 0085  
                          memcpy@d 0024                            memcpy@n 0021  
                          memcpy@s 0025                          Delay_ms@i 0024  
                          init_ram 0CA7                            initloop 0CA8  
                 _global_interrupt 0004                __size_of_Update_Crc 0032  
                     __pstringtext 0400                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 012C                          _Adf_Reset 0D31  
            ??_Read_Adf7012_Muxout 0020                   _SAMPLES_PER_BAUD 00D2  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 0D20  
     Write_Adf7012_Reg@size_of_reg 002A             _Adf_Reset_Register_Two 0D5B  
        Sinus_Generator@tone_index 00CF             __size_of_Reverse_Array 0044  
           __size_of_Spi_Byte_Send 002A           ?_Adf_Reset_Register_Zero 0070  
                   __end_of_Ptt_On 0EA7                 _Change_to_New_Baud 006E  
                   __end_of_memcpy 0E15                       ?_Radio_Setup 0070  
             __end_of_Timer0_Start 0C95               __end_of_Timer1_Start 0D00  
              start_initialization 005B                         ?_Adf_Reset 0070  
         __end_of_Ax25_Send_Header 02CD           __end_of_Ax25_Send_Footer 0D8E  
                __size_of_Delay_ms 0020                       ?_Modem_Setup 0070  
                  _Dac0_Start_Hold 0C8B           __end_of_Ax25_Send_String 0DAB  
        __size_of_Adf_Reset_Config 000F           ?_Adf_Write_Register_Zero 0070  
                        _Send_Byte 057B           __end_of_Send_Vcxo_Signal 0C8B  
                         ??_Ptt_On 006B                        __pdataBANK2 0130  
                         ??_memcpy 0023                      _Reverse_Array 0394  
                    _Spi_Byte_Send 0E15                  ?_Adf_Write_Config 0070  
                     ??_Update_Crc 0020                        __pbssCOMMON 0079  
                        ___latbits 0002  __size_of_Adf_Reset_Register_Three 0026  
                    _ones_in_a_row 00CD                      __pcstackBANK0 0020  
                    __pcstackBANK1 00D7                 ??_Adf_Write_Config 006B  
        ?_Adf_Reset_Register_Three 0070                          _adc__high 00D3  
              __end_of__stringdata 04C4            __size_of_Ax25_Send_Flag 007C  
          __size_of_Ax25_Send_Byte 0006            __size_of_Ax25_Send_Sync 0079  
  __end_of_Adf_Reset_Register_Zero 0800      Ax25_Send_Header@num_addresses 002C  
                       ?_Send_Byte 0070                  _Write_Adf7012_Reg 0EDD  
                     _current_byte 006F                  Ax25_Send_Header@i 0034  
                Ax25_Send_Header@j 0031                 ?_Write_Adf7012_Reg 002A  
                     ?_Timer0_Stop 0070           __size_of_Sinus_Generator 00B0  
        Ax25_Send_Footer@final_crc 002C             Ax25_Send_String@string 002D  
                         ?_Ptt_Off 0070                 __end_of_Update_Crc 0E71  
              ??_Write_Adf7012_Reg 002B                     ?_Reverse_Array 0027  
                   ?_Spi_Byte_Send 0070           __end_of_global_interrupt 0059  
          __end_of_Dac0_Start_Hold 0C90                        ??_Adf_Reset 0026  
  __end_of_Adf_Write_Register_Zero 0394                  Ax25_Send_String@i 002F  
        __end_of_Write_Adf7012_Reg 0F16               __size_of_Gpio_Config 0010  
                    ?_System_Start 0070                       _modem_packet 01A0  
                        clear_ram0 0CAD           __size_of_Configure_Audio 0018  
                        main@F3169 0130              __size_of_Timer0_Start 0005  
            __size_of_Timer1_Start 000F          Reverse_Array@buffer_array 002D  
                      __stringdata 04BE  __size_of_Adf_Write_Register_Three 016C  
          ?_Adf_Reset_Register_One 0070          ?_Adf_Write_Register_Three 0070  
          ?_Adf_Reset_Register_Two 0070               __size_of_Radio_Setup 000E  
                         _Delay_ms 0DAB              Send_Vcxo_Signal@value 0070  
                   ??_System_Start 0020                   _Adf_Reset_Config 0CE2  
                      ??_Send_Byte 0023               __size_of_Modem_Setup 0006  
                _Modem_Flush_Frame 0DCB                 ?_Modem_Flush_Frame 0070  
                     _Timer0_Start 0C90                       _Timer1_Start 0CF1  
         ??_Adf_Write_Register_One 0033           ??_Adf_Write_Register_Two 0033  
                 __size_of_Ptt_Off 000E                    ??_Reverse_Array 0028  
                  ??_Spi_Byte_Send 0026              __end_of_PLAYBACK_RATE 04BA  
              ??_Modem_Flush_Frame 006C                  ??_Sinus_Generator 0071  
 __size_of_Adf_Reset_Register_Zero 001F                           _adc__low 00D4  
      __end_of_Read_Adf7012_Muxout 0CBA     __end_of_Adf_Reset_Register_One 0D31  
   __end_of_Adf_Reset_Register_Two 0D73                __end_of_sine_table2 04B6  
                 ?_Dac0_Start_Hold 0070                     _Ax25_Send_Flag 0765  
                   _Ax25_Send_Byte 0C9B                     _Ax25_Send_Sync 0F87  
                         __ptext10 0D20                           __ptext11 0D31  
                         __ptext20 0089                           __ptext12 0D43  
                         __ptext21 0F16                           __ptext13 0DCB  
                         __ptext30 0C9B                           __ptext22 0EDD  
                         __ptext14 0C90                           __ptext31 01F5  
                         __ptext23 0E15                           __ptext15 0E71  
                         __ptext40 0C82                           __ptext32 0F87  
                         __ptext24 0DAB                           __ptext16 0CB3  
                         __ptext41 0C86                           __ptext33 0D73  
                         __ptext25 0C8B                           __ptext17 0CBA  
                         __ptext34 057B                           __ptext26 0394  
                         __ptext18 02CD                           __ptext35 0E3F  
                         __ptext27 0DEC                           __ptext19 04C4  
                         __ptext36 0765                           __ptext28 0D00  
                         __ptext37 0C95                           __ptext29 0D8E  
                         __ptext39 062F                  ?_Ax25_Send_Header 002C  
                ?_Ax25_Send_Footer 0070                 ??_Ax25_Send_Header 002E  
        __end_of_Modem_Flush_Frame 0DEC         __size_of_Write_Adf7012_Reg 0039  
                ?_Ax25_Send_String 002D                 ??_Ax25_Send_Footer 002C  
                    __size_of_main 0086                        _phase_delta 00D6  
                ?_Send_Vcxo_Signal 0070                 ??_Ax25_Send_String 002F  
               ??_Send_Vcxo_Signal 0070   __end_of_Adf_Reset_Register_Three 03FE  
             __size_of_Timer0_Stop 0004         Adf_Write_Register_Zero@reg 0053  
 __size_of_Adf_Write_Register_Zero 00C7                  ??_Configure_Audio 0020  
           __end_of_Ax25_Send_Flag 07E1             __end_of_Ax25_Send_Byte 0CA1  
           __end_of_Ax25_Send_Sync 1000                         _TABLE_SIZE 04BC  
                         memcpy@d1 0026                           memcpy@s1 0020  
                      pic14e$flags 007E                           intlevel1 0000  
        __size_of_Adf_Write_Config 000C                  __CFG_CLKOUTEN$OFF 0000  
               _MODEM_TRANSMITTING 00D0    __size_of_Adf_Write_Register_One 0071  
  __size_of_Adf_Write_Register_Two 00B7                         _Adc1_Start 0C95  
                      _sine_table2 0400               __end_of_System_Start 0EDD  
                  ?_Ax25_Send_Flag 0070                    ?_Ax25_Send_Byte 0070  
                  ?_Ax25_Send_Sync 0070                  ?_global_interrupt 0070  
      Sinus_Generator@Audio_Signal 0076                 ??_global_interrupt 0077  
       __size_of_Modem_Flush_Frame 0021                  _modem_packet_size 0079  
 __end_of_Adf_Write_Register_Three 01F5  
