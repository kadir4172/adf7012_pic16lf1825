

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Sep 22 18:44:53 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	dabs	1,0x7E,2
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000E                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  010C                     	;# 
   116  010E                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  011E                     	;# 
   130  018C                     	;# 
   131  018E                     	;# 
   132  0191                     	;# 
   133  0191                     	;# 
   134  0192                     	;# 
   135  0193                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0194                     	;# 
   139  0195                     	;# 
   140  0196                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019D                     	;# 
   147  019E                     	;# 
   148  019F                     	;# 
   149  020C                     	;# 
   150  020E                     	;# 
   151  0211                     	;# 
   152  0211                     	;# 
   153  0212                     	;# 
   154  0212                     	;# 
   155  0213                     	;# 
   156  0213                     	;# 
   157  0214                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0216                     	;# 
   163  0216                     	;# 
   164  0217                     	;# 
   165  0217                     	;# 
   166  0291                     	;# 
   167  0291                     	;# 
   168  0292                     	;# 
   169  0293                     	;# 
   170  0294                     	;# 
   171  0295                     	;# 
   172  0295                     	;# 
   173  0296                     	;# 
   174  0298                     	;# 
   175  0298                     	;# 
   176  0299                     	;# 
   177  029A                     	;# 
   178  029B                     	;# 
   179  029C                     	;# 
   180  029D                     	;# 
   181  029E                     	;# 
   182  0311                     	;# 
   183  0311                     	;# 
   184  0312                     	;# 
   185  0313                     	;# 
   186  0318                     	;# 
   187  0318                     	;# 
   188  0319                     	;# 
   189  031A                     	;# 
   190  038C                     	;# 
   191  038E                     	;# 
   192  0391                     	;# 
   193  0392                     	;# 
   194  0393                     	;# 
   195  039A                     	;# 
   196  039C                     	;# 
   197  039D                     	;# 
   198  039E                     	;# 
   199  039F                     	;# 
   200  0415                     	;# 
   201  0416                     	;# 
   202  0417                     	;# 
   203  041C                     	;# 
   204  041D                     	;# 
   205  041E                     	;# 
   206  0FE4                     	;# 
   207  0FE5                     	;# 
   208  0FE6                     	;# 
   209  0FE7                     	;# 
   210  0FE8                     	;# 
   211  0FE9                     	;# 
   212  0FEA                     	;# 
   213  0FEB                     	;# 
   214  0FED                     	;# 
   215  0FEE                     	;# 
   216  0FEF                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000E                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  008C                     	;# 
   246  008E                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0097                     	;# 
   253  0098                     	;# 
   254  0099                     	;# 
   255  009A                     	;# 
   256  009B                     	;# 
   257  009B                     	;# 
   258  009C                     	;# 
   259  009D                     	;# 
   260  009E                     	;# 
   261  010C                     	;# 
   262  010E                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0113                     	;# 
   266  0114                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011D                     	;# 
   275  011E                     	;# 
   276  018C                     	;# 
   277  018E                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020E                     	;# 
   297  0211                     	;# 
   298  0211                     	;# 
   299  0212                     	;# 
   300  0212                     	;# 
   301  0213                     	;# 
   302  0213                     	;# 
   303  0214                     	;# 
   304  0214                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0216                     	;# 
   309  0216                     	;# 
   310  0217                     	;# 
   311  0217                     	;# 
   312  0291                     	;# 
   313  0291                     	;# 
   314  0292                     	;# 
   315  0293                     	;# 
   316  0294                     	;# 
   317  0295                     	;# 
   318  0295                     	;# 
   319  0296                     	;# 
   320  0298                     	;# 
   321  0298                     	;# 
   322  0299                     	;# 
   323  029A                     	;# 
   324  029B                     	;# 
   325  029C                     	;# 
   326  029D                     	;# 
   327  029E                     	;# 
   328  0311                     	;# 
   329  0311                     	;# 
   330  0312                     	;# 
   331  0313                     	;# 
   332  0318                     	;# 
   333  0318                     	;# 
   334  0319                     	;# 
   335  031A                     	;# 
   336  038C                     	;# 
   337  038E                     	;# 
   338  0391                     	;# 
   339  0392                     	;# 
   340  0393                     	;# 
   341  039A                     	;# 
   342  039C                     	;# 
   343  039D                     	;# 
   344  039E                     	;# 
   345  039F                     	;# 
   346  0415                     	;# 
   347  0416                     	;# 
   348  0417                     	;# 
   349  041C                     	;# 
   350  041D                     	;# 
   351  041E                     	;# 
   352  0FE4                     	;# 
   353  0FE5                     	;# 
   354  0FE6                     	;# 
   355  0FE7                     	;# 
   356  0FE8                     	;# 
   357  0FE9                     	;# 
   358  0FEA                     	;# 
   359  0FEB                     	;# 
   360  0FED                     	;# 
   361  0FEE                     	;# 
   362  0FEF                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000E                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0013                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0016                     	;# 
   383  0017                     	;# 
   384  0018                     	;# 
   385  0019                     	;# 
   386  001A                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  008C                     	;# 
   392  008E                     	;# 
   393  0091                     	;# 
   394  0092                     	;# 
   395  0093                     	;# 
   396  0095                     	;# 
   397  0096                     	;# 
   398  0097                     	;# 
   399  0098                     	;# 
   400  0099                     	;# 
   401  009A                     	;# 
   402  009B                     	;# 
   403  009B                     	;# 
   404  009C                     	;# 
   405  009D                     	;# 
   406  009E                     	;# 
   407  010C                     	;# 
   408  010E                     	;# 
   409  0111                     	;# 
   410  0112                     	;# 
   411  0113                     	;# 
   412  0114                     	;# 
   413  0115                     	;# 
   414  0116                     	;# 
   415  0117                     	;# 
   416  0118                     	;# 
   417  0119                     	;# 
   418  011A                     	;# 
   419  011B                     	;# 
   420  011D                     	;# 
   421  011E                     	;# 
   422  018C                     	;# 
   423  018E                     	;# 
   424  0191                     	;# 
   425  0191                     	;# 
   426  0192                     	;# 
   427  0193                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0194                     	;# 
   431  0195                     	;# 
   432  0196                     	;# 
   433  0199                     	;# 
   434  019A                     	;# 
   435  019B                     	;# 
   436  019B                     	;# 
   437  019C                     	;# 
   438  019D                     	;# 
   439  019E                     	;# 
   440  019F                     	;# 
   441  020C                     	;# 
   442  020E                     	;# 
   443  0211                     	;# 
   444  0211                     	;# 
   445  0212                     	;# 
   446  0212                     	;# 
   447  0213                     	;# 
   448  0213                     	;# 
   449  0214                     	;# 
   450  0214                     	;# 
   451  0215                     	;# 
   452  0215                     	;# 
   453  0215                     	;# 
   454  0216                     	;# 
   455  0216                     	;# 
   456  0217                     	;# 
   457  0217                     	;# 
   458  0291                     	;# 
   459  0291                     	;# 
   460  0292                     	;# 
   461  0293                     	;# 
   462  0294                     	;# 
   463  0295                     	;# 
   464  0295                     	;# 
   465  0296                     	;# 
   466  0298                     	;# 
   467  0298                     	;# 
   468  0299                     	;# 
   469  029A                     	;# 
   470  029B                     	;# 
   471  029C                     	;# 
   472  029D                     	;# 
   473  029E                     	;# 
   474  0311                     	;# 
   475  0311                     	;# 
   476  0312                     	;# 
   477  0313                     	;# 
   478  0318                     	;# 
   479  0318                     	;# 
   480  0319                     	;# 
   481  031A                     	;# 
   482  038C                     	;# 
   483  038E                     	;# 
   484  0391                     	;# 
   485  0392                     	;# 
   486  0393                     	;# 
   487  039A                     	;# 
   488  039C                     	;# 
   489  039D                     	;# 
   490  039E                     	;# 
   491  039F                     	;# 
   492  0415                     	;# 
   493  0416                     	;# 
   494  0417                     	;# 
   495  041C                     	;# 
   496  041D                     	;# 
   497  041E                     	;# 
   498  0FE4                     	;# 
   499  0FE5                     	;# 
   500  0FE6                     	;# 
   501  0FE7                     	;# 
   502  0FE8                     	;# 
   503  0FE9                     	;# 
   504  0FEA                     	;# 
   505  0FEB                     	;# 
   506  0FED                     	;# 
   507  0FEE                     	;# 
   508  0FEF                     	;# 
   509  0000                     	;# 
   510  0001                     	;# 
   511  0002                     	;# 
   512  0003                     	;# 
   513  0004                     	;# 
   514  0005                     	;# 
   515  0006                     	;# 
   516  0007                     	;# 
   517  0008                     	;# 
   518  0009                     	;# 
   519  000A                     	;# 
   520  000B                     	;# 
   521  000C                     	;# 
   522  000E                     	;# 
   523  0011                     	;# 
   524  0012                     	;# 
   525  0013                     	;# 
   526  0015                     	;# 
   527  0016                     	;# 
   528  0016                     	;# 
   529  0017                     	;# 
   530  0018                     	;# 
   531  0019                     	;# 
   532  001A                     	;# 
   533  001B                     	;# 
   534  001C                     	;# 
   535  001E                     	;# 
   536  001F                     	;# 
   537  008C                     	;# 
   538  008E                     	;# 
   539  0091                     	;# 
   540  0092                     	;# 
   541  0093                     	;# 
   542  0095                     	;# 
   543  0096                     	;# 
   544  0097                     	;# 
   545  0098                     	;# 
   546  0099                     	;# 
   547  009A                     	;# 
   548  009B                     	;# 
   549  009B                     	;# 
   550  009C                     	;# 
   551  009D                     	;# 
   552  009E                     	;# 
   553  010C                     	;# 
   554  010E                     	;# 
   555  0111                     	;# 
   556  0112                     	;# 
   557  0113                     	;# 
   558  0114                     	;# 
   559  0115                     	;# 
   560  0116                     	;# 
   561  0117                     	;# 
   562  0118                     	;# 
   563  0119                     	;# 
   564  011A                     	;# 
   565  011B                     	;# 
   566  011D                     	;# 
   567  011E                     	;# 
   568  018C                     	;# 
   569  018E                     	;# 
   570  0191                     	;# 
   571  0191                     	;# 
   572  0192                     	;# 
   573  0193                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0199                     	;# 
   580  019A                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019C                     	;# 
   584  019D                     	;# 
   585  019E                     	;# 
   586  019F                     	;# 
   587  020C                     	;# 
   588  020E                     	;# 
   589  0211                     	;# 
   590  0211                     	;# 
   591  0212                     	;# 
   592  0212                     	;# 
   593  0213                     	;# 
   594  0213                     	;# 
   595  0214                     	;# 
   596  0214                     	;# 
   597  0215                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0216                     	;# 
   601  0216                     	;# 
   602  0217                     	;# 
   603  0217                     	;# 
   604  0291                     	;# 
   605  0291                     	;# 
   606  0292                     	;# 
   607  0293                     	;# 
   608  0294                     	;# 
   609  0295                     	;# 
   610  0295                     	;# 
   611  0296                     	;# 
   612  0298                     	;# 
   613  0298                     	;# 
   614  0299                     	;# 
   615  029A                     	;# 
   616  029B                     	;# 
   617  029C                     	;# 
   618  029D                     	;# 
   619  029E                     	;# 
   620  0311                     	;# 
   621  0311                     	;# 
   622  0312                     	;# 
   623  0313                     	;# 
   624  0318                     	;# 
   625  0318                     	;# 
   626  0319                     	;# 
   627  031A                     	;# 
   628  038C                     	;# 
   629  038E                     	;# 
   630  0391                     	;# 
   631  0392                     	;# 
   632  0393                     	;# 
   633  039A                     	;# 
   634  039C                     	;# 
   635  039D                     	;# 
   636  039E                     	;# 
   637  039F                     	;# 
   638  0415                     	;# 
   639  0416                     	;# 
   640  0417                     	;# 
   641  041C                     	;# 
   642  041D                     	;# 
   643  041E                     	;# 
   644  0FE4                     	;# 
   645  0FE5                     	;# 
   646  0FE6                     	;# 
   647  0FE7                     	;# 
   648  0FE8                     	;# 
   649  0FE9                     	;# 
   650  0FEA                     	;# 
   651  0FEB                     	;# 
   652  0FED                     	;# 
   653  0FEE                     	;# 
   654  0FEF                     	;# 
   655                           
   656                           	psect	idataBANK2
   657  1687                     __pidataBANK2:	
   658                           
   659                           ;initializer for main@F3177
   660  1687  3443               	retlw	67
   661  1688  3455               	retlw	85
   662  1689  3442               	retlw	66
   663  168A  3445               	retlw	69
   664  168B  3459               	retlw	89
   665  168C  3459               	retlw	89
   666  168D  3400               	retlw	0
   667  168E  3405               	retlw	5
   668  168F  3443               	retlw	67
   669  1690  3455               	retlw	85
   670  1691  3442               	retlw	66
   671  1692  3445               	retlw	69
   672  1693  3458               	retlw	88
   673  1694  3458               	retlw	88
   674  1695  3400               	retlw	0
   675  1696  3407               	retlw	7
   676                           
   677                           ;initializer for _sine_table2
   678  1697  3410               	retlw	16
   679  1698  3416               	retlw	22
   680  1699  341C               	retlw	28
   681  169A  341F               	retlw	31
   682  169B  341F               	retlw	31
   683  169C  341C               	retlw	28
   684  169D  3416               	retlw	22
   685  169E  3410               	retlw	16
   686  169F  3409               	retlw	9
   687  16A0  3403               	retlw	3
   688  16A1  3400               	retlw	0
   689  16A2  3400               	retlw	0
   690  16A3  3403               	retlw	3
   691  16A4  3409               	retlw	9
   692                           
   693                           	psect	stringtext
   694  0100                     __pstringtext:	
   695  0100                     _sine_table:	
   696  0100  347F               	retlw	127
   697  0101  3481               	retlw	129
   698  0102  3482               	retlw	130
   699  0103  3484               	retlw	132
   700  0104  3485               	retlw	133
   701  0105  3487               	retlw	135
   702  0106  3488               	retlw	136
   703  0107  348A               	retlw	138
   704  0108  348B               	retlw	139
   705  0109  348D               	retlw	141
   706  010A  348F               	retlw	143
   707  010B  3490               	retlw	144
   708  010C  3492               	retlw	146
   709  010D  3493               	retlw	147
   710  010E  3495               	retlw	149
   711  010F  3496               	retlw	150
   712  0110  3498               	retlw	152
   713  0111  3499               	retlw	153
   714  0112  349B               	retlw	155
   715  0113  349C               	retlw	156
   716  0114  349E               	retlw	158
   717  0115  349F               	retlw	159
   718  0116  34A1               	retlw	161
   719  0117  34A3               	retlw	163
   720  0118  34A4               	retlw	164
   721  0119  34A6               	retlw	166
   722  011A  34A7               	retlw	167
   723  011B  34A8               	retlw	168
   724  011C  34AA               	retlw	170
   725  011D  34AB               	retlw	171
   726  011E  34AD               	retlw	173
   727  011F  34AE               	retlw	174
   728  0120  34B0               	retlw	176
   729  0121  34B1               	retlw	177
   730  0122  34B3               	retlw	179
   731  0123  34B4               	retlw	180
   732  0124  34B6               	retlw	182
   733  0125  34B7               	retlw	183
   734  0126  34B8               	retlw	184
   735  0127  34BA               	retlw	186
   736  0128  34BB               	retlw	187
   737  0129  34BC               	retlw	188
   738  012A  34BE               	retlw	190
   739  012B  34BF               	retlw	191
   740  012C  34C1               	retlw	193
   741  012D  34C2               	retlw	194
   742  012E  34C3               	retlw	195
   743  012F  34C5               	retlw	197
   744  0130  34C6               	retlw	198
   745  0131  34C7               	retlw	199
   746  0132  34C8               	retlw	200
   747  0133  34CA               	retlw	202
   748  0134  34CB               	retlw	203
   749  0135  34CC               	retlw	204
   750  0136  34CD               	retlw	205
   751  0137  34CF               	retlw	207
   752  0138  34D0               	retlw	208
   753  0139  34D1               	retlw	209
   754  013A  34D2               	retlw	210
   755  013B  34D3               	retlw	211
   756  013C  34D5               	retlw	213
   757  013D  34D6               	retlw	214
   758  013E  34D7               	retlw	215
   759  013F  34D8               	retlw	216
   760  0140  34D9               	retlw	217
   761  0141  34DA               	retlw	218
   762  0142  34DB               	retlw	219
   763  0143  34DC               	retlw	220
   764  0144  34DD               	retlw	221
   765  0145  34DF               	retlw	223
   766  0146  34E0               	retlw	224
   767  0147  34E1               	retlw	225
   768  0148  34E2               	retlw	226
   769  0149  34E3               	retlw	227
   770  014A  34E4               	retlw	228
   771  014B  34E4               	retlw	228
   772  014C  34E5               	retlw	229
   773  014D  34E6               	retlw	230
   774  014E  34E7               	retlw	231
   775  014F  34E8               	retlw	232
   776  0150  34E9               	retlw	233
   777  0151  34EA               	retlw	234
   778  0152  34EB               	retlw	235
   779  0153  34EC               	retlw	236
   780  0154  34EC               	retlw	236
   781  0155  34ED               	retlw	237
   782  0156  34EE               	retlw	238
   783  0157  34EF               	retlw	239
   784  0158  34EF               	retlw	239
   785  0159  34F0               	retlw	240
   786  015A  34F1               	retlw	241
   787  015B  34F2               	retlw	242
   788  015C  34F2               	retlw	242
   789  015D  34F3               	retlw	243
   790  015E  34F4               	retlw	244
   791  015F  34F4               	retlw	244
   792  0160  34F5               	retlw	245
   793  0161  34F5               	retlw	245
   794  0162  34F6               	retlw	246
   795  0163  34F7               	retlw	247
   796  0164  34F7               	retlw	247
   797  0165  34F8               	retlw	248
   798  0166  34F8               	retlw	248
   799  0167  34F9               	retlw	249
   800  0168  34F9               	retlw	249
   801  0169  34F9               	retlw	249
   802  016A  34FA               	retlw	250
   803  016B  34FA               	retlw	250
   804  016C  34FB               	retlw	251
   805  016D  34FB               	retlw	251
   806  016E  34FB               	retlw	251
   807  016F  34FC               	retlw	252
   808  0170  34FC               	retlw	252
   809  0171  34FC               	retlw	252
   810  0172  34FD               	retlw	253
   811  0173  34FD               	retlw	253
   812  0174  34FD               	retlw	253
   813  0175  34FD               	retlw	253
   814  0176  34FE               	retlw	254
   815  0177  34FE               	retlw	254
   816  0178  34FE               	retlw	254
   817  0179  34FE               	retlw	254
   818  017A  34FE               	retlw	254
   819  017B  34FE               	retlw	254
   820  017C  34FE               	retlw	254
   821  017D  34FE               	retlw	254
   822  017E  34FE               	retlw	254
   823  017F  34FE               	retlw	254
   824  0180  34FF               	retlw	255
   825  0181  34FE               	retlw	254
   826  0182  34FE               	retlw	254
   827  0183  34FE               	retlw	254
   828  0184  34FE               	retlw	254
   829  0185  34FE               	retlw	254
   830  0186  34FE               	retlw	254
   831  0187  34FE               	retlw	254
   832  0188  34FE               	retlw	254
   833  0189  34FE               	retlw	254
   834  018A  34FE               	retlw	254
   835  018B  34FD               	retlw	253
   836  018C  34FD               	retlw	253
   837  018D  34FD               	retlw	253
   838  018E  34FD               	retlw	253
   839  018F  34FC               	retlw	252
   840  0190  34FC               	retlw	252
   841  0191  34FC               	retlw	252
   842  0192  34FB               	retlw	251
   843  0193  34FB               	retlw	251
   844  0194  34FB               	retlw	251
   845  0195  34FA               	retlw	250
   846  0196  34FA               	retlw	250
   847  0197  34F9               	retlw	249
   848  0198  34F9               	retlw	249
   849  0199  34F9               	retlw	249
   850  019A  34F8               	retlw	248
   851  019B  34F8               	retlw	248
   852  019C  34F7               	retlw	247
   853  019D  34F7               	retlw	247
   854  019E  34F6               	retlw	246
   855  019F  34F5               	retlw	245
   856  01A0  34F5               	retlw	245
   857  01A1  34F4               	retlw	244
   858  01A2  34F4               	retlw	244
   859  01A3  34F3               	retlw	243
   860  01A4  34F2               	retlw	242
   861  01A5  34F2               	retlw	242
   862  01A6  34F1               	retlw	241
   863  01A7  34F0               	retlw	240
   864  01A8  34EF               	retlw	239
   865  01A9  34EF               	retlw	239
   866  01AA  34EE               	retlw	238
   867  01AB  34ED               	retlw	237
   868  01AC  34EC               	retlw	236
   869  01AD  34EC               	retlw	236
   870  01AE  34EB               	retlw	235
   871  01AF  34EA               	retlw	234
   872  01B0  34E9               	retlw	233
   873  01B1  34E8               	retlw	232
   874  01B2  34E7               	retlw	231
   875  01B3  34E6               	retlw	230
   876  01B4  34E5               	retlw	229
   877  01B5  34E4               	retlw	228
   878  01B6  34E4               	retlw	228
   879  01B7  34E3               	retlw	227
   880  01B8  34E2               	retlw	226
   881  01B9  34E1               	retlw	225
   882  01BA  34E0               	retlw	224
   883  01BB  34DF               	retlw	223
   884  01BC  34DD               	retlw	221
   885  01BD  34DC               	retlw	220
   886  01BE  34DB               	retlw	219
   887  01BF  34DA               	retlw	218
   888  01C0  34D9               	retlw	217
   889  01C1  34D8               	retlw	216
   890  01C2  34D7               	retlw	215
   891  01C3  34D6               	retlw	214
   892  01C4  34D5               	retlw	213
   893  01C5  34D3               	retlw	211
   894  01C6  34D2               	retlw	210
   895  01C7  34D1               	retlw	209
   896  01C8  34D0               	retlw	208
   897  01C9  34CF               	retlw	207
   898  01CA  34CD               	retlw	205
   899  01CB  34CC               	retlw	204
   900  01CC  34CB               	retlw	203
   901  01CD  34CA               	retlw	202
   902  01CE  34C8               	retlw	200
   903  01CF  34C7               	retlw	199
   904  01D0  34C6               	retlw	198
   905  01D1  34C5               	retlw	197
   906  01D2  34C3               	retlw	195
   907  01D3  34C2               	retlw	194
   908  01D4  34C1               	retlw	193
   909  01D5  34BF               	retlw	191
   910  01D6  34BE               	retlw	190
   911  01D7  34BC               	retlw	188
   912  01D8  34BB               	retlw	187
   913  01D9  34BA               	retlw	186
   914  01DA  34B8               	retlw	184
   915  01DB  34B7               	retlw	183
   916  01DC  34B6               	retlw	182
   917  01DD  34B4               	retlw	180
   918  01DE  34B3               	retlw	179
   919  01DF  34B1               	retlw	177
   920  01E0  34B0               	retlw	176
   921  01E1  34AE               	retlw	174
   922  01E2  34AD               	retlw	173
   923  01E3  34AB               	retlw	171
   924  01E4  34AA               	retlw	170
   925  01E5  34A8               	retlw	168
   926  01E6  34A7               	retlw	167
   927  01E7  34A6               	retlw	166
   928  01E8  34A4               	retlw	164
   929  01E9  34A3               	retlw	163
   930  01EA  34A1               	retlw	161
   931  01EB  349F               	retlw	159
   932  01EC  349E               	retlw	158
   933  01ED  349C               	retlw	156
   934  01EE  349B               	retlw	155
   935  01EF  3499               	retlw	153
   936  01F0  3498               	retlw	152
   937  01F1  3496               	retlw	150
   938  01F2  3495               	retlw	149
   939  01F3  3493               	retlw	147
   940  01F4  3492               	retlw	146
   941  01F5  3490               	retlw	144
   942  01F6  348F               	retlw	143
   943  01F7  348D               	retlw	141
   944  01F8  348B               	retlw	139
   945  01F9  348A               	retlw	138
   946  01FA  3488               	retlw	136
   947  01FB  3487               	retlw	135
   948  01FC  3485               	retlw	133
   949  01FD  3484               	retlw	132
   950  01FE  3482               	retlw	130
   951  01FF  3481               	retlw	129
   952  0200  347F               	retlw	127
   953  0201  347D               	retlw	125
   954  0202  347C               	retlw	124
   955  0203  347A               	retlw	122
   956  0204  3479               	retlw	121
   957  0205  3477               	retlw	119
   958  0206  3476               	retlw	118
   959  0207  3474               	retlw	116
   960  0208  3473               	retlw	115
   961  0209  3471               	retlw	113
   962  020A  346F               	retlw	111
   963  020B  346E               	retlw	110
   964  020C  346C               	retlw	108
   965  020D  346B               	retlw	107
   966  020E  3469               	retlw	105
   967  020F  3468               	retlw	104
   968  0210  3466               	retlw	102
   969  0211  3465               	retlw	101
   970  0212  3463               	retlw	99
   971  0213  3462               	retlw	98
   972  0214  3460               	retlw	96
   973  0215  345F               	retlw	95
   974  0216  345D               	retlw	93
   975  0217  345B               	retlw	91
   976  0218  345A               	retlw	90
   977  0219  3458               	retlw	88
   978  021A  3457               	retlw	87
   979  021B  3456               	retlw	86
   980  021C  3454               	retlw	84
   981  021D  3453               	retlw	83
   982  021E  3451               	retlw	81
   983  021F  3450               	retlw	80
   984  0220  344E               	retlw	78
   985  0221  344D               	retlw	77
   986  0222  344B               	retlw	75
   987  0223  344A               	retlw	74
   988  0224  3448               	retlw	72
   989  0225  3447               	retlw	71
   990  0226  3446               	retlw	70
   991  0227  3444               	retlw	68
   992  0228  3443               	retlw	67
   993  0229  3442               	retlw	66
   994  022A  3440               	retlw	64
   995  022B  343F               	retlw	63
   996  022C  343D               	retlw	61
   997  022D  343C               	retlw	60
   998  022E  343B               	retlw	59
   999  022F  3439               	retlw	57
  1000  0230  3438               	retlw	56
  1001  0231  3437               	retlw	55
  1002  0232  3436               	retlw	54
  1003  0233  3434               	retlw	52
  1004  0234  3433               	retlw	51
  1005  0235  3432               	retlw	50
  1006  0236  3431               	retlw	49
  1007  0237  342F               	retlw	47
  1008  0238  342E               	retlw	46
  1009  0239  342D               	retlw	45
  1010  023A  342C               	retlw	44
  1011  023B  342B               	retlw	43
  1012  023C  3429               	retlw	41
  1013  023D  3428               	retlw	40
  1014  023E  3427               	retlw	39
  1015  023F  3426               	retlw	38
  1016  0240  3425               	retlw	37
  1017  0241  3424               	retlw	36
  1018  0242  3423               	retlw	35
  1019  0243  3422               	retlw	34
  1020  0244  3421               	retlw	33
  1021  0245  341F               	retlw	31
  1022  0246  341E               	retlw	30
  1023  0247  341D               	retlw	29
  1024  0248  341C               	retlw	28
  1025  0249  341B               	retlw	27
  1026  024A  341A               	retlw	26
  1027  024B  341A               	retlw	26
  1028  024C  3419               	retlw	25
  1029  024D  3418               	retlw	24
  1030  024E  3417               	retlw	23
  1031  024F  3416               	retlw	22
  1032  0250  3415               	retlw	21
  1033  0251  3414               	retlw	20
  1034  0252  3413               	retlw	19
  1035  0253  3412               	retlw	18
  1036  0254  3412               	retlw	18
  1037  0255  3411               	retlw	17
  1038  0256  3410               	retlw	16
  1039  0257  340F               	retlw	15
  1040  0258  340F               	retlw	15
  1041  0259  340E               	retlw	14
  1042  025A  340D               	retlw	13
  1043  025B  340C               	retlw	12
  1044  025C  340C               	retlw	12
  1045  025D  340B               	retlw	11
  1046  025E  340A               	retlw	10
  1047  025F  340A               	retlw	10
  1048  0260  3409               	retlw	9
  1049  0261  3409               	retlw	9
  1050  0262  3408               	retlw	8
  1051  0263  3407               	retlw	7
  1052  0264  3407               	retlw	7
  1053  0265  3406               	retlw	6
  1054  0266  3406               	retlw	6
  1055  0267  3405               	retlw	5
  1056  0268  3405               	retlw	5
  1057  0269  3405               	retlw	5
  1058  026A  3404               	retlw	4
  1059  026B  3404               	retlw	4
  1060  026C  3403               	retlw	3
  1061  026D  3403               	retlw	3
  1062  026E  3403               	retlw	3
  1063  026F  3402               	retlw	2
  1064  0270  3402               	retlw	2
  1065  0271  3402               	retlw	2
  1066  0272  3401               	retlw	1
  1067  0273  3401               	retlw	1
  1068  0274  3401               	retlw	1
  1069  0275  3401               	retlw	1
  1070  0276  3400               	retlw	0
  1071  0277  3400               	retlw	0
  1072  0278  3400               	retlw	0
  1073  0279  3400               	retlw	0
  1074  027A  3400               	retlw	0
  1075  027B  3400               	retlw	0
  1076  027C  3400               	retlw	0
  1077  027D  3400               	retlw	0
  1078  027E  3400               	retlw	0
  1079  027F  3400               	retlw	0
  1080  0280  3400               	retlw	0
  1081  0281  3400               	retlw	0
  1082  0282  3400               	retlw	0
  1083  0283  3400               	retlw	0
  1084  0284  3400               	retlw	0
  1085  0285  3400               	retlw	0
  1086  0286  3400               	retlw	0
  1087  0287  3400               	retlw	0
  1088  0288  3400               	retlw	0
  1089  0289  3400               	retlw	0
  1090  028A  3400               	retlw	0
  1091  028B  3401               	retlw	1
  1092  028C  3401               	retlw	1
  1093  028D  3401               	retlw	1
  1094  028E  3401               	retlw	1
  1095  028F  3402               	retlw	2
  1096  0290  3402               	retlw	2
  1097  0291  3402               	retlw	2
  1098  0292  3403               	retlw	3
  1099  0293  3403               	retlw	3
  1100  0294  3403               	retlw	3
  1101  0295  3404               	retlw	4
  1102  0296  3404               	retlw	4
  1103  0297  3405               	retlw	5
  1104  0298  3405               	retlw	5
  1105  0299  3405               	retlw	5
  1106  029A  3406               	retlw	6
  1107  029B  3406               	retlw	6
  1108  029C  3407               	retlw	7
  1109  029D  3407               	retlw	7
  1110  029E  3408               	retlw	8
  1111  029F  3409               	retlw	9
  1112  02A0  3409               	retlw	9
  1113  02A1  340A               	retlw	10
  1114  02A2  340A               	retlw	10
  1115  02A3  340B               	retlw	11
  1116  02A4  340C               	retlw	12
  1117  02A5  340C               	retlw	12
  1118  02A6  340D               	retlw	13
  1119  02A7  340E               	retlw	14
  1120  02A8  340F               	retlw	15
  1121  02A9  340F               	retlw	15
  1122  02AA  3410               	retlw	16
  1123  02AB  3411               	retlw	17
  1124  02AC  3412               	retlw	18
  1125  02AD  3412               	retlw	18
  1126  02AE  3413               	retlw	19
  1127  02AF  3414               	retlw	20
  1128  02B0  3415               	retlw	21
  1129  02B1  3416               	retlw	22
  1130  02B2  3417               	retlw	23
  1131  02B3  3418               	retlw	24
  1132  02B4  3419               	retlw	25
  1133  02B5  341A               	retlw	26
  1134  02B6  341A               	retlw	26
  1135  02B7  341B               	retlw	27
  1136  02B8  341C               	retlw	28
  1137  02B9  341D               	retlw	29
  1138  02BA  341E               	retlw	30
  1139  02BB  341F               	retlw	31
  1140  02BC  3421               	retlw	33
  1141  02BD  3422               	retlw	34
  1142  02BE  3423               	retlw	35
  1143  02BF  3424               	retlw	36
  1144  02C0  3425               	retlw	37
  1145  02C1  3426               	retlw	38
  1146  02C2  3427               	retlw	39
  1147  02C3  3428               	retlw	40
  1148  02C4  3429               	retlw	41
  1149  02C5  342B               	retlw	43
  1150  02C6  342C               	retlw	44
  1151  02C7  342D               	retlw	45
  1152  02C8  342E               	retlw	46
  1153  02C9  342F               	retlw	47
  1154  02CA  3431               	retlw	49
  1155  02CB  3432               	retlw	50
  1156  02CC  3433               	retlw	51
  1157  02CD  3434               	retlw	52
  1158  02CE  3436               	retlw	54
  1159  02CF  3437               	retlw	55
  1160  02D0  3438               	retlw	56
  1161  02D1  3439               	retlw	57
  1162  02D2  343B               	retlw	59
  1163  02D3  343C               	retlw	60
  1164  02D4  343D               	retlw	61
  1165  02D5  343F               	retlw	63
  1166  02D6  3440               	retlw	64
  1167  02D7  3442               	retlw	66
  1168  02D8  3443               	retlw	67
  1169  02D9  3444               	retlw	68
  1170  02DA  3446               	retlw	70
  1171  02DB  3447               	retlw	71
  1172  02DC  3448               	retlw	72
  1173  02DD  344A               	retlw	74
  1174  02DE  344B               	retlw	75
  1175  02DF  344D               	retlw	77
  1176  02E0  344E               	retlw	78
  1177  02E1  3450               	retlw	80
  1178  02E2  3451               	retlw	81
  1179  02E3  3453               	retlw	83
  1180  02E4  3454               	retlw	84
  1181  02E5  3456               	retlw	86
  1182  02E6  3457               	retlw	87
  1183  02E7  3458               	retlw	88
  1184  02E8  345A               	retlw	90
  1185  02E9  345B               	retlw	91
  1186  02EA  345D               	retlw	93
  1187  02EB  345F               	retlw	95
  1188  02EC  3460               	retlw	96
  1189  02ED  3462               	retlw	98
  1190  02EE  3463               	retlw	99
  1191  02EF  3465               	retlw	101
  1192  02F0  3466               	retlw	102
  1193  02F1  3468               	retlw	104
  1194  02F2  3469               	retlw	105
  1195  02F3  346B               	retlw	107
  1196  02F4  346C               	retlw	108
  1197  02F5  346E               	retlw	110
  1198  02F6  346F               	retlw	111
  1199  02F7  3471               	retlw	113
  1200  02F8  3473               	retlw	115
  1201  02F9  3474               	retlw	116
  1202  02FA  3476               	retlw	118
  1203  02FB  3477               	retlw	119
  1204  02FC  3479               	retlw	121
  1205  02FD  347A               	retlw	122
  1206  02FE  347C               	retlw	124
  1207  02FF  347D               	retlw	125
  1208  0300                     __end_of_sine_table:	
  1209  0300                     _PLAYBACK_RATE:	
  1210  0300  34A0               	retlw	160
  1211  0301  3486               	retlw	134
  1212  0302  3401               	retlw	1
  1213  0303  3400               	retlw	0
  1214  0304                     __end_of_PLAYBACK_RATE:	
  1215  0304                     _BAUD_RATE:	
  1216  0304  34B0               	retlw	176
  1217  0305  3404               	retlw	4
  1218  0306                     __end_of_BAUD_RATE:	
  1219  0306                     _TABLE_SIZE:	
  1220  0306  3400               	retlw	0
  1221  0307  3402               	retlw	2
  1222  0308                     __end_of_TABLE_SIZE:	
  1223  000B                     _INTCON	set	11
  1224  0011                     _PIR1	set	17
  1225  000C                     _PORTAbits	set	12
  1226  000E                     _PORTCbits	set	14
  1227  0015                     _TMR0	set	21
  1228  0017                     _TMR1H	set	23
  1229  0016                     _TMR1L	set	22
  1230  008E                     _ADIF	set	142
  1231  00C4                     _T1CKPS0	set	196
  1232  00C5                     _T1CKPS1	set	197
  1233  005D                     _TMR0IE	set	93
  1234  005A                     _TMR0IF	set	90
  1235  00C6                     _TMR1CS0	set	198
  1236  00C7                     _TMR1CS1	set	199
  1237  00CF                     _TMR1GE	set	207
  1238  00C0                     _TMR1ON	set	192
  1239  009D                     _ADCON0	set	157
  1240  009C                     _ADRESH	set	156
  1241  009B                     _ADRESL	set	155
  1242  0099                     _OSCCON	set	153
  1243  009A                     _OSCSTAT	set	154
  1244  0098                     _OSCTUNE	set	152
  1245  008C                     _TRISA	set	140
  1246  008E                     _TRISC	set	142
  1247  04F4                     _ADCS0	set	1268
  1248  04F5                     _ADCS1	set	1269
  1249  04F6                     _ADCS2	set	1270
  1250  04F7                     _ADFM	set	1271
  1251  048E                     _ADIE	set	1166
  1252  04F2                     _ADNREF	set	1266
  1253  04E8                     _ADON	set	1256
  1254  04F0                     _ADPREF0	set	1264
  1255  04F1                     _ADPREF1	set	1265
  1256  048A                     _CCP1IE	set	1162
  1257  04AB                     _PSA	set	1195
  1258  04AD                     _TMR0CS	set	1197
  1259  0119                     _DACCON1	set	281
  1260  08C7                     _DACEN	set	2247
  1261  08C0                     _DACNSS	set	2240
  1262  08C5                     _DACOE	set	2245
  1263  08C2                     _DACPSS0	set	2242
  1264  08C3                     _DACPSS1	set	2243
  1265  0C61                     _ANSA1	set	3169
  1266  0292                     _CCPR1H	set	658
  1267  0291                     _CCPR1L	set	657
  1268  1499                     _CCP1M1	set	5273
  1269  149A                     _CCP1M2	set	5274
  1270  149B                     _CCP1M3	set	5275
  1271  0308                     __stringdata:	
  1272  0308                     STR_1:	
  1273  0308  3448               	retlw	72	;'H'
  1274  0309  3445               	retlw	69	;'E'
  1275  030A  344C               	retlw	76	;'L'
  1276  030B  344C               	retlw	76	;'L'
  1277  030C  344F               	retlw	79	;'O'
  1278  030D  3400               	retlw	0
  1279  030E                     __end_of__stringdata:	
  1280                           
  1281                           ; #config settings
  1282  0000                     
  1283                           	psect	cinit
  1284  0035                     start_initialization:	
  1285  0035                     __initialization:	
  1286                           
  1287                           ; Clear objects allocated to COMMON
  1288  0035  01FA               	clrf	__pbssCOMMON& (0+127)
  1289  0036  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1290                           
  1291                           ; Clear objects allocated to BANK0
  1292  0037  01EF               	clrf	__pbssBANK0& (0+127)
  1293                           
  1294                           ; Clear objects allocated to BANK1
  1295  0038  30A0               	movlw	low __pbssBANK1
  1296  0039  0084               	movwf	4
  1297  003A  3000               	movlw	high __pbssBANK1
  1298  003B  0085               	movwf	5
  1299  003C  303B               	movlw	59
  1300  003D  3195  258D  3180   	fcall	clear_ram0
  1301                           
  1302                           ; Clear objects allocated to BANK2
  1303  0040  3020               	movlw	low __pbssBANK2
  1304  0041  0084               	movwf	4
  1305  0042  3001               	movlw	high __pbssBANK2
  1306  0043  0085               	movwf	5
  1307  0044  3020               	movlw	32
  1308  0045  3195  258D  3180   	fcall	clear_ram0
  1309                           
  1310                           ; Clear objects allocated to BANK3
  1311  0048  30A0               	movlw	low __pbssBANK3
  1312  0049  0084               	movwf	4
  1313  004A  3001               	movlw	high __pbssBANK3
  1314  004B  0085               	movwf	5
  1315  004C  3040               	movlw	64
  1316  004D  3195  258D  3180   	fcall	clear_ram0
  1317                           
  1318                           ; Initialize objects allocated to BANK2
  1319  0050  3087               	movlw	low __pidataBANK2
  1320  0051  0084               	movwf	4
  1321  0052  3096               	movlw	(high __pidataBANK2)| (0+128)
  1322  0053  0085               	movwf	5
  1323  0054  3040               	movlw	low __pdataBANK2
  1324  0055  0086               	movwf	6
  1325  0056  3001               	movlw	high __pdataBANK2
  1326  0057  0087               	movwf	7
  1327  0058  301E               	movlw	30
  1328  0059  3195  2587         	fcall	init_ram
  1329  005B                     end_of_initialization:	
  1330                           ;End of C runtime variable initialization code
  1331                           
  1332  005B                     __end_of__initialization:	
  1333  005B  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1334  005C  0020               	movlb	0
  1335  005D  3180  285F         	ljmp	_main	;jump to C main() function
  1336                           
  1337                           	psect	bssCOMMON
  1338  007A                     __pbssCOMMON:	
  1339  007A                     _current_byte:	
  1340  007A                     	ds	1
  1341  007B                     _current_sample_in_baud:	
  1342  007B                     	ds	1
  1343                           
  1344                           	psect	bssBANK0
  1345  006F                     __pbssBANK0:	
  1346  006F                     _SAMPLES_PER_BAUD:	
  1347  006F                     	ds	1
  1348                           
  1349                           	psect	bssBANK1
  1350  00A0                     __pbssBANK1:	
  1351  00A0                     _adf_config:	
  1352  00A0                     	ds	39
  1353  00C7                     _modem_packet_size:	
  1354  00C7                     	ds	4
  1355  00CB                     _packet_pos:	
  1356  00CB                     	ds	4
  1357  00CF                     _crc:	
  1358  00CF                     	ds	2
  1359  00D1                     _ones_in_a_row:	
  1360  00D1                     	ds	2
  1361  00D3                     _MODEM_TRANSMITTING:	
  1362  00D3                     	ds	1
  1363  00D4                     _PTT_OFF:	
  1364  00D4                     	ds	1
  1365  00D5                     _adc_sonuc_high:	
  1366  00D5                     	ds	1
  1367  00D6                     _adc_sonuc_low:	
  1368  00D6                     	ds	1
  1369  00D7                     _i:	
  1370  00D7                     	ds	1
  1371  00D8                     _test:	
  1372  00D8                     	ds	1
  1373  00D9                     _test2:	
  1374  00D9                     	ds	1
  1375  00DA                     _timeout_flag:	
  1376  00DA                     	ds	1
  1377                           
  1378                           	psect	bssBANK2
  1379  0120                     __pbssBANK2:	
  1380  0120                     _Delay_Counter:	
  1381  0120                     	ds	4
  1382  0124                     _PHASE_DELTA_1200:	
  1383  0124                     	ds	4
  1384  0128                     _PHASE_DELTA_2200:	
  1385  0128                     	ds	4
  1386  012C                     _phase:	
  1387  012C                     	ds	4
  1388  0130                     _phase_delta:	
  1389  0130                     	ds	4
  1390  0134                     _powerlevel:	
  1391  0134                     	ds	4
  1392  0138                     _timeout_check:	
  1393  0138                     	ds	4
  1394  013C                     _Systick_Counter:	
  1395  013C                     	ds	2
  1396  013E                     _dac_flag:	
  1397  013E                     	ds	2
  1398                           
  1399                           	psect	dataBANK2
  1400  0140                     __pdataBANK2:	
  1401  0140                     main@F3177:	
  1402  0140                     	ds	16
  1403  0150                     _sine_table2:	
  1404  0150                     	ds	14
  1405                           
  1406                           	psect	bssBANK3
  1407  01A0                     __pbssBANK3:	
  1408  01A0                     _modem_packet:	
  1409  01A0                     	ds	64
  1410                           
  1411                           	psect	clrtext
  1412  158D                     clear_ram0:	
  1413                           ;	Called with FSR0 containing the base address, and
  1414                           ;	WREG with the size to clear
  1415                           
  1416  158D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1417  158E                     clrloop0:	
  1418  158E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1419  158F  3101               	addfsr 0,1
  1420  1590  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1421  1591  2D8E               	goto	clrloop0	;have we reached the end yet?
  1422  1592  3400               	retlw	0	;all done for this memory range, return
  1423                           
  1424                           	psect	inittext
  1425  1587                     init_ram:	
  1426  1587  00FE               	movwf	126
  1427  1588                     initloop:	
  1428  1588  0012               	moviw fsr0++
  1429  1589  001E               	movwi fsr1++
  1430  158A  0BFE               	decfsz	126,f
  1431  158B  2D88               	goto	initloop
  1432  158C  3400               	retlw	0
  1433                           
  1434                           	psect	cstackBANK1
  1435  00DB                     __pcstackBANK1:	
  1436  00DB                     Adf_Lock@adj:	
  1437                           
  1438                           ; 2 bytes @ 0x0
  1439  00DB                     	ds	2
  1440  00DD                     Adf_Lock@bias:	
  1441                           
  1442                           ; 2 bytes @ 0x2
  1443  00DD                     	ds	2
  1444  00DF                     main@beacon_address:	
  1445                           
  1446                           ; 16 bytes @ 0x4
  1447  00DF                     	ds	16
  1448                           
  1449                           	psect	cstackCOMMON
  1450  0070                     __pcstackCOMMON:	
  1451  0070                     ?_Timer0_Start:	
  1452  0070                     ?_Timer1_Start:	
  1453                           ; 0 bytes @ 0x0
  1454                           
  1455  0070                     ?_Dac0_Start_Hold:	
  1456                           ; 0 bytes @ 0x0
  1457                           
  1458  0070                     ?_Adc1_Start:	
  1459                           ; 0 bytes @ 0x0
  1460                           
  1461  0070                     ?_Ax25_Send_Footer:	
  1462                           ; 0 bytes @ 0x0
  1463                           
  1464  0070                     ?_Modem_Setup:	
  1465                           ; 0 bytes @ 0x0
  1466                           
  1467  0070                     ?_Ptt_Off:	
  1468                           ; 0 bytes @ 0x0
  1469                           
  1470  0070                     ?_Modem_Flush_Frame:	
  1471                           ; 0 bytes @ 0x0
  1472                           
  1473  0070                     ?_Adf_Reset_Register_Zero:	
  1474                           ; 0 bytes @ 0x0
  1475                           
  1476  0070                     ?_Adf_Reset_Register_One:	
  1477                           ; 0 bytes @ 0x0
  1478                           
  1479  0070                     ?_Adf_Reset_Register_Two:	
  1480                           ; 0 bytes @ 0x0
  1481                           
  1482  0070                     ?_Adf_Reset_Register_Three:	
  1483                           ; 0 bytes @ 0x0
  1484                           
  1485  0070                     ?_Adf_Reset:	
  1486                           ; 0 bytes @ 0x0
  1487                           
  1488  0070                     ?_Adf_Write_Register_Zero:	
  1489                           ; 0 bytes @ 0x0
  1490                           
  1491  0070                     ?_Adf_Write_Register_One:	
  1492                           ; 0 bytes @ 0x0
  1493                           
  1494  0070                     ?_Adf_Write_Register_Two:	
  1495                           ; 0 bytes @ 0x0
  1496                           
  1497  0070                     ?_Adf_Write_Register_Three:	
  1498                           ; 0 bytes @ 0x0
  1499                           
  1500  0070                     ?_global_interrupt:	
  1501                           ; 0 bytes @ 0x0
  1502                           
  1503  0070                     ??_global_interrupt:	
  1504                           ; 0 bytes @ 0x0
  1505                           
  1506  0070                     ?_System_Start:	
  1507                           ; 0 bytes @ 0x0
  1508                           
  1509  0070                     ?_Adf_Reset_Config:	
  1510                           ; 0 bytes @ 0x0
  1511                           
  1512  0070                     ?_Adf_Write_Config:	
  1513                           ; 0 bytes @ 0x0
  1514                           
  1515  0070                     ?_Radio_Setup:	
  1516                           ; 0 bytes @ 0x0
  1517                           
  1518  0070                     ?_Modem_Init:	
  1519                           ; 0 bytes @ 0x0
  1520                           
  1521  0070                     ?_Update_Crc:	
  1522                           ; 0 bytes @ 0x0
  1523                           
  1524  0070                     ?_Send_Byte:	
  1525                           ; 0 bytes @ 0x0
  1526                           
  1527  0070                     ?_Ax25_Send_Byte:	
  1528                           ; 0 bytes @ 0x0
  1529                           
  1530  0070                     ?_Ax25_Send_Sync:	
  1531                           ; 0 bytes @ 0x0
  1532                           
  1533  0070                     ?_Ax25_Send_Flag:	
  1534                           ; 0 bytes @ 0x0
  1535                           
  1536  0070                     ?_Gpio_Config:	
  1537                           ; 0 bytes @ 0x0
  1538                           
  1539  0070                     ?_Ptt_On:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_Spi_Byte_Send:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_Adf_Locked:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_Read_Adf7012_Muxout:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_main:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_Adf_Lock:	
  1555                           ; 2 bytes @ 0x0
  1556                           
  1557                           
  1558                           ; 2 bytes @ 0x0
  1559  0070                     	ds	2
  1560  0072                     ??_Gpio_Config:	
  1561  0072                     ??_Timer0_Start:	
  1562                           ; 0 bytes @ 0x2
  1563                           
  1564  0072                     ??_Timer1_Start:	
  1565                           ; 0 bytes @ 0x2
  1566                           
  1567  0072                     ??_Dac0_Start_Hold:	
  1568                           ; 0 bytes @ 0x2
  1569                           
  1570  0072                     ??_Adc1_Start:	
  1571                           ; 0 bytes @ 0x2
  1572                           
  1573  0072                     ?_Delay_ms:	
  1574                           ; 0 bytes @ 0x2
  1575                           
  1576  0072                     ??_Adf_Reset_Register_Zero:	
  1577                           ; 0 bytes @ 0x2
  1578                           
  1579  0072                     ??_Adf_Reset_Register_One:	
  1580                           ; 0 bytes @ 0x2
  1581                           
  1582  0072                     ??_Adf_Reset_Register_Two:	
  1583                           ; 0 bytes @ 0x2
  1584                           
  1585  0072                     ??_Adf_Reset_Register_Three:	
  1586                           ; 0 bytes @ 0x2
  1587                           
  1588  0072                     ??_System_Start:	
  1589                           ; 0 bytes @ 0x2
  1590                           
  1591  0072                     ??_Update_Crc:	
  1592                           ; 0 bytes @ 0x2
  1593                           
  1594  0072                     ??_Ax25_Send_Sync:	
  1595                           ; 0 bytes @ 0x2
  1596                           
  1597  0072                     ??_Ax25_Send_Flag:	
  1598                           ; 0 bytes @ 0x2
  1599                           
  1600  0072                     ?_memcpy:	
  1601                           ; 0 bytes @ 0x2
  1602                           
  1603  0072                     ?___ftpack:	
  1604                           ; 1 bytes @ 0x2
  1605                           
  1606  0072                     ?___lmul:	
  1607                           ; 3 bytes @ 0x2
  1608                           
  1609  0072                     ?___aldiv:	
  1610                           ; 4 bytes @ 0x2
  1611                           
  1612  0072                     memcpy@s1:	
  1613                           ; 4 bytes @ 0x2
  1614                           
  1615  0072                     Delay_ms@time_to_delay:	
  1616                           ; 1 bytes @ 0x2
  1617                           
  1618  0072                     ___ftpack@arg:	
  1619                           ; 2 bytes @ 0x2
  1620                           
  1621  0072                     ___lmul@multiplier:	
  1622                           ; 3 bytes @ 0x2
  1623                           
  1624  0072                     ___aldiv@divisor:	
  1625                           ; 4 bytes @ 0x2
  1626                           
  1627                           
  1628                           ; 4 bytes @ 0x2
  1629  0072                     	ds	1
  1630  0073                     memcpy@n:	
  1631                           
  1632                           ; 2 bytes @ 0x3
  1633  0073                     	ds	1
  1634  0074                     ??_Delay_ms:	
  1635  0074                     Update_Crc@input_bit:	
  1636                           ; 0 bytes @ 0x4
  1637                           
  1638                           
  1639                           ; 1 bytes @ 0x4
  1640  0074                     	ds	1
  1641  0075                     ??_memcpy:	
  1642  0075                     Send_Byte@byte:	
  1643                           ; 0 bytes @ 0x5
  1644                           
  1645  0075                     ___ftpack@exp:	
  1646                           ; 1 bytes @ 0x5
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x5
  1650  0075                     	ds	1
  1651  0076                     ___ftpack@sign:	
  1652  0076                     memcpy@d:	
  1653                           ; 1 bytes @ 0x6
  1654                           
  1655  0076                     Delay_ms@i:	
  1656                           ; 1 bytes @ 0x6
  1657                           
  1658  0076                     Send_Byte@i:	
  1659                           ; 2 bytes @ 0x6
  1660                           
  1661  0076                     ___lmul@multiplicand:	
  1662                           ; 2 bytes @ 0x6
  1663                           
  1664  0076                     ___aldiv@dividend:	
  1665                           ; 4 bytes @ 0x6
  1666                           
  1667                           
  1668                           ; 4 bytes @ 0x6
  1669  0076                     	ds	1
  1670  0077                     ??___ftpack:	
  1671  0077                     memcpy@s:	
  1672                           ; 0 bytes @ 0x7
  1673                           
  1674                           
  1675                           ; 1 bytes @ 0x7
  1676  0077                     	ds	1
  1677  0078                     ??_Ax25_Send_Footer:	
  1678  0078                     ??_Spi_Byte_Send:	
  1679                           ; 0 bytes @ 0x8
  1680                           
  1681  0078                     ??_Adf_Reset:	
  1682                           ; 0 bytes @ 0x8
  1683                           
  1684  0078                     ??_Adf_Locked:	
  1685                           ; 0 bytes @ 0x8
  1686                           
  1687  0078                     ??_Read_Adf7012_Muxout:	
  1688                           ; 0 bytes @ 0x8
  1689                           
  1690  0078                     ??_Adf_Reset_Config:	
  1691                           ; 0 bytes @ 0x8
  1692                           
  1693  0078                     ??_Ax25_Send_Byte:	
  1694                           ; 0 bytes @ 0x8
  1695                           
  1696  0078                     Ax25_Send_Byte@byte:	
  1697                           ; 0 bytes @ 0x8
  1698                           
  1699  0078                     memcpy@d1:	
  1700                           ; 1 bytes @ 0x8
  1701                           
  1702  0078                     Ax25_Send_Footer@final_crc:	
  1703                           ; 1 bytes @ 0x8
  1704                           
  1705                           
  1706                           ; 2 bytes @ 0x8
  1707  0078                     	ds	1
  1708  0079                     ??_Ax25_Send_String:	
  1709  0079                     ??_Write_Adf7012_Reg:	
  1710                           ; 0 bytes @ 0x9
  1711                           
  1712  0079                     ?_Reverse_Array:	
  1713                           ; 0 bytes @ 0x9
  1714                           
  1715  0079                     Reverse_Array@length:	
  1716                           ; 1 bytes @ 0x9
  1717                           
  1718                           
  1719                           ; 1 bytes @ 0x9
  1720  0079                     	ds	1
  1721  007A                     ??_Modem_Setup:	
  1722  007A                     ??_Ptt_Off:	
  1723                           ; 0 bytes @ 0xA
  1724                           
  1725  007A                     ??_Modem_Flush_Frame:	
  1726                           ; 0 bytes @ 0xA
  1727                           
  1728  007A                     ??_Adf_Write_Config:	
  1729                           ; 0 bytes @ 0xA
  1730                           
  1731  007A                     ??_Radio_Setup:	
  1732                           ; 0 bytes @ 0xA
  1733                           
  1734  007A                     ??___lmul:	
  1735                           ; 0 bytes @ 0xA
  1736                           
  1737  007A                     ??___ftneg:	
  1738                           ; 0 bytes @ 0xA
  1739                           
  1740                           
  1741                           	psect	cstackBANK0
  1742  0020                     __pcstackBANK0:	
  1743                           ; 0 bytes @ 0xA
  1744                           
  1745  0020                     ??_Reverse_Array:	
  1746  0020                     ??_Send_Byte:	
  1747                           ; 0 bytes @ 0x0
  1748                           
  1749  0020                     ??___aldiv:	
  1750                           ; 0 bytes @ 0x0
  1751                           
  1752  0020                     ?___ftmul:	
  1753                           ; 0 bytes @ 0x0
  1754                           
  1755  0020                     ?___lltoft:	
  1756                           ; 3 bytes @ 0x0
  1757                           
  1758  0020                     Spi_Byte_Send@data:	
  1759                           ; 3 bytes @ 0x0
  1760                           
  1761  0020                     Ax25_Send_Sync@byte:	
  1762                           ; 1 bytes @ 0x0
  1763                           
  1764  0020                     Ax25_Send_Flag@byte:	
  1765                           ; 1 bytes @ 0x0
  1766                           
  1767  0020                     ___ftmul@f1:	
  1768                           ; 1 bytes @ 0x0
  1769                           
  1770  0020                     ___lmul@product:	
  1771                           ; 3 bytes @ 0x0
  1772                           
  1773  0020                     ___lltoft@c:	
  1774                           ; 4 bytes @ 0x0
  1775                           
  1776                           
  1777                           ; 4 bytes @ 0x0
  1778  0020                     	ds	1
  1779  0021                     Spi_Byte_Send@data_to_send:	
  1780  0021                     ___aldiv@counter:	
  1781                           ; 1 bytes @ 0x1
  1782                           
  1783  0021                     Ax25_Send_Sync@i:	
  1784                           ; 1 bytes @ 0x1
  1785                           
  1786  0021                     Ax25_Send_Flag@i:	
  1787                           ; 2 bytes @ 0x1
  1788                           
  1789                           
  1790                           ; 2 bytes @ 0x1
  1791  0021                     	ds	1
  1792  0022                     Spi_Byte_Send@i:	
  1793  0022                     ___aldiv@sign:	
  1794                           ; 1 bytes @ 0x2
  1795                           
  1796                           
  1797                           ; 1 bytes @ 0x2
  1798  0022                     	ds	1
  1799  0023                     ?_Write_Adf7012_Reg:	
  1800  0023                     Write_Adf7012_Reg@size_of_reg:	
  1801                           ; 1 bytes @ 0x3
  1802                           
  1803  0023                     ___ftmul@f2:	
  1804                           ; 1 bytes @ 0x3
  1805                           
  1806  0023                     ___aldiv@quotient:	
  1807                           ; 3 bytes @ 0x3
  1808                           
  1809                           
  1810                           ; 4 bytes @ 0x3
  1811  0023                     	ds	1
  1812  0024                     ??___lltoft:	
  1813  0024                     ?___lldiv:	
  1814                           ; 0 bytes @ 0x4
  1815                           
  1816  0024                     Write_Adf7012_Reg@reg_value:	
  1817                           ; 4 bytes @ 0x4
  1818                           
  1819  0024                     ___lldiv@divisor:	
  1820                           ; 1 bytes @ 0x4
  1821                           
  1822                           
  1823                           ; 4 bytes @ 0x4
  1824  0024                     	ds	1
  1825  0025                     Write_Adf7012_Reg@i:	
  1826  0025                     ___lltoft@exp:	
  1827                           ; 1 bytes @ 0x5
  1828                           
  1829  0025                     Reverse_Array@buffer_array:	
  1830                           ; 1 bytes @ 0x5
  1831                           
  1832                           
  1833                           ; 4 bytes @ 0x5
  1834  0025                     	ds	1
  1835  0026                     ?_Ax25_Send_Header:	
  1836  0026                     ?_Ax25_Send_String:	
  1837                           ; 0 bytes @ 0x6
  1838                           
  1839  0026                     ??___ftmul:	
  1840                           ; 0 bytes @ 0x6
  1841                           
  1842  0026                     ?___ftdiv:	
  1843                           ; 0 bytes @ 0x6
  1844                           
  1845  0026                     ?___ftneg:	
  1846                           ; 3 bytes @ 0x6
  1847                           
  1848  0026                     Ax25_Send_String@string:	
  1849                           ; 3 bytes @ 0x6
  1850                           
  1851  0026                     Ax25_Send_Header@num_addresses:	
  1852                           ; 2 bytes @ 0x6
  1853                           
  1854  0026                     ___ftdiv@f2:	
  1855                           ; 2 bytes @ 0x6
  1856                           
  1857  0026                     ___ftneg@f1:	
  1858                           ; 3 bytes @ 0x6
  1859                           
  1860                           
  1861                           ; 3 bytes @ 0x6
  1862  0026                     	ds	2
  1863  0028                     ??_Ax25_Send_Header:	
  1864  0028                     Ax25_Send_String@i:	
  1865                           ; 0 bytes @ 0x8
  1866                           
  1867  0028                     ___lldiv@dividend:	
  1868                           ; 2 bytes @ 0x8
  1869                           
  1870                           
  1871                           ; 4 bytes @ 0x8
  1872  0028                     	ds	1
  1873  0029                     ?___ftadd:	
  1874  0029                     Reverse_Array@input:	
  1875                           ; 3 bytes @ 0x9
  1876                           
  1877  0029                     ___ftadd@f1:	
  1878                           ; 1 bytes @ 0x9
  1879                           
  1880  0029                     ___ftdiv@f1:	
  1881                           ; 3 bytes @ 0x9
  1882                           
  1883                           
  1884                           ; 3 bytes @ 0x9
  1885  0029                     	ds	1
  1886  002A                     Reverse_Array@i:	
  1887  002A                     ___ftmul@exp:	
  1888                           ; 1 bytes @ 0xA
  1889                           
  1890                           
  1891                           ; 1 bytes @ 0xA
  1892  002A                     	ds	1
  1893  002B                     ??_Adf_Write_Register_Zero:	
  1894  002B                     ??_Adf_Write_Register_One:	
  1895                           ; 0 bytes @ 0xB
  1896                           
  1897  002B                     ??_Adf_Write_Register_Two:	
  1898                           ; 0 bytes @ 0xB
  1899                           
  1900  002B                     ??_Adf_Write_Register_Three:	
  1901                           ; 0 bytes @ 0xB
  1902                           
  1903  002B                     Ax25_Send_Header@addresses:	
  1904                           ; 0 bytes @ 0xB
  1905                           
  1906  002B                     ___ftmul@f3_as_product:	
  1907                           ; 1 bytes @ 0xB
  1908                           
  1909                           
  1910                           ; 3 bytes @ 0xB
  1911  002B                     	ds	1
  1912  002C                     ??___ftdiv:	
  1913  002C                     ??___lldiv:	
  1914                           ; 0 bytes @ 0xC
  1915                           
  1916  002C                     Ax25_Send_Header@j:	
  1917                           ; 0 bytes @ 0xC
  1918                           
  1919  002C                     ___ftadd@f2:	
  1920                           ; 2 bytes @ 0xC
  1921                           
  1922                           
  1923                           ; 3 bytes @ 0xC
  1924  002C                     	ds	1
  1925  002D                     ___lldiv@quotient:	
  1926                           
  1927                           ; 4 bytes @ 0xD
  1928  002D                     	ds	1
  1929  002E                     ___ftmul@cntr:	
  1930  002E                     Ax25_Send_Header@i:	
  1931                           ; 1 bytes @ 0xE
  1932                           
  1933                           
  1934                           ; 2 bytes @ 0xE
  1935  002E                     	ds	1
  1936  002F                     ??___ftadd:	
  1937  002F                     ___ftmul@sign:	
  1938                           ; 0 bytes @ 0xF
  1939                           
  1940                           
  1941                           ; 1 bytes @ 0xF
  1942  002F                     	ds	1
  1943  0030                     ?___fttol:	
  1944  0030                     ___ftdiv@cntr:	
  1945                           ; 4 bytes @ 0x10
  1946                           
  1947  0030                     ___fttol@f1:	
  1948                           ; 1 bytes @ 0x10
  1949                           
  1950                           
  1951                           ; 3 bytes @ 0x10
  1952  0030                     	ds	1
  1953  0031                     ___lldiv@counter:	
  1954  0031                     ___ftdiv@f3:	
  1955                           ; 1 bytes @ 0x11
  1956                           
  1957                           
  1958                           ; 3 bytes @ 0x11
  1959  0031                     	ds	1
  1960  0032                     ??_Modem_Init:	
  1961                           
  1962                           ; 0 bytes @ 0x12
  1963  0032                     	ds	1
  1964  0033                     ___ftadd@sign:	
  1965                           
  1966                           ; 1 bytes @ 0x13
  1967  0033                     	ds	1
  1968  0034                     ??___fttol:	
  1969  0034                     ___ftadd@exp2:	
  1970                           ; 0 bytes @ 0x14
  1971                           
  1972  0034                     ___ftdiv@exp:	
  1973                           ; 1 bytes @ 0x14
  1974                           
  1975                           
  1976                           ; 1 bytes @ 0x14
  1977  0034                     	ds	1
  1978  0035                     ___ftadd@exp1:	
  1979  0035                     ___ftdiv@sign:	
  1980                           ; 1 bytes @ 0x15
  1981                           
  1982                           
  1983                           ; 1 bytes @ 0x15
  1984  0035                     	ds	2
  1985  0037                     Adf_Write_Register_One@reg_ptr:	
  1986                           
  1987                           ; 3 bytes @ 0x17
  1988  0037                     	ds	1
  1989  0038                     ___fttol@sign1:	
  1990                           
  1991                           ; 1 bytes @ 0x18
  1992  0038                     	ds	1
  1993  0039                     ___fttol@lval:	
  1994                           
  1995                           ; 4 bytes @ 0x19
  1996  0039                     	ds	1
  1997  003A                     Adf_Write_Register_One@reg:	
  1998                           
  1999                           ; 4 bytes @ 0x1A
  2000  003A                     	ds	3
  2001  003D                     ___fttol@exp1:	
  2002                           
  2003                           ; 1 bytes @ 0x1D
  2004  003D                     	ds	1
  2005  003E                     ?_Set_Freq:	
  2006  003E                     Set_Freq@freq:	
  2007                           ; 0 bytes @ 0x1E
  2008                           
  2009                           
  2010                           ; 4 bytes @ 0x1E
  2011  003E                     	ds	4
  2012  0042                     ??_Set_Freq:	
  2013                           
  2014                           ; 0 bytes @ 0x22
  2015  0042                     	ds	1
  2016  0043                     Adf_Write_Register_Two@reg_ptr:	
  2017                           
  2018                           ; 4 bytes @ 0x23
  2019  0043                     	ds	3
  2020  0046                     Set_Freq@m:	
  2021                           
  2022                           ; 4 bytes @ 0x26
  2023  0046                     	ds	1
  2024  0047                     Adf_Write_Register_Zero@reg_ptr:	
  2025  0047                     Adf_Write_Register_Two@reg:	
  2026                           ; 4 bytes @ 0x27
  2027                           
  2028                           
  2029                           ; 4 bytes @ 0x27
  2030  0047                     	ds	3
  2031  004A                     Set_Freq@ratio:	
  2032                           
  2033                           ; 3 bytes @ 0x2A
  2034  004A                     	ds	1
  2035  004B                     Adf_Write_Register_Zero@reg:	
  2036                           
  2037                           ; 4 bytes @ 0x2B
  2038  004B                     	ds	2
  2039  004D                     Set_Freq@rest:	
  2040                           
  2041                           ; 3 bytes @ 0x2D
  2042  004D                     	ds	3
  2043  0050                     Set_Freq@f_pfd:	
  2044                           
  2045                           ; 4 bytes @ 0x30
  2046  0050                     	ds	4
  2047  0054                     Set_Freq@n:	
  2048                           
  2049                           ; 4 bytes @ 0x34
  2050  0054                     	ds	15
  2051  0063                     Adf_Write_Register_Three@reg_ptr:	
  2052                           
  2053                           ; 4 bytes @ 0x43
  2054  0063                     	ds	4
  2055  0067                     Adf_Write_Register_Three@reg:	
  2056                           
  2057                           ; 4 bytes @ 0x47
  2058  0067                     	ds	4
  2059  006B                     ??_Adf_Lock:	
  2060                           
  2061                           ; 0 bytes @ 0x4B
  2062  006B                     	ds	2
  2063  006D                     ??_Ptt_On:	
  2064                           
  2065                           ; 0 bytes @ 0x4D
  2066  006D                     	ds	1
  2067  006E                     ??_main:	
  2068                           
  2069                           ; 0 bytes @ 0x4E
  2070  006E                     	ds	1
  2071                           
  2072                           	psect	maintext
  2073  005F                     __pmaintext:	
  2074 ;;
  2075 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2076 ;;
  2077 ;; *************** function _main *****************
  2078 ;; Defined at:
  2079 ;;		line 155 in file "main.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  beacon_addre   16    4[BANK1 ] struct .[2]
  2084 ;;  adc_sonuc       2    0        unsigned int 
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  2  127[COMMON] int 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 17F/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2095 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  2096 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2097 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  2098 ;;Total ram usage:       17 bytes
  2099 ;; Hardware stack levels required when called:   10
  2100 ;; This function calls:
  2101 ;;		_Adc1_Start
  2102 ;;		_Ax25_Send_Footer
  2103 ;;		_Ax25_Send_Header
  2104 ;;		_Ax25_Send_String
  2105 ;;		_Dac0_Start_Hold
  2106 ;;		_Delay_ms
  2107 ;;		_Gpio_Config
  2108 ;;		_Modem_Flush_Frame
  2109 ;;		_Modem_Setup
  2110 ;;		_Ptt_Off
  2111 ;;		_Ptt_On
  2112 ;;		_System_Start
  2113 ;;		_Timer0_Start
  2114 ;;		_Timer1_Start
  2115 ;; This function is called by:
  2116 ;;		Startup code after reset
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           
  2121                           ;psect for function _main
  2122  005F                     _main:	
  2123                           
  2124                           ;main.c: 156: unsigned int adc_sonuc;
  2125                           ;main.c: 157: System_Start();
  2126                           
  2127                           ;incstack = 0
  2128                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2129  005F  3197  276C  3180   	fcall	_System_Start
  2130  0062                     l128:	
  2131                           ;main.c: 158: while (!(OSCSTAT & (0x01))){}
  2132                           
  2133  0062  0021               	movlb	1	; select bank1
  2134  0063  1C1A               	btfss	26,0	;volatile
  2135  0064  2862               	goto	l128
  2136                           
  2137                           ;main.c: 161: Gpio_Config();
  2138  0065  3195  25BC  3180   	fcall	_Gpio_Config
  2139                           
  2140                           ;main.c: 163: Timer0_Start();
  2141  0068  3187  27FB  3180   	fcall	_Timer0_Start
  2142                           
  2143                           ;main.c: 164: Timer1_Start();
  2144  006B  3195  25A5  3180   	fcall	_Timer1_Start
  2145                           
  2146                           ;main.c: 166: Dac0_Start_Hold();
  2147  006E  3195  2576  3180   	fcall	_Dac0_Start_Hold
  2148                           
  2149                           ;main.c: 168: Adc1_Start();
  2150  0071  3195  257B  3180   	fcall	_Adc1_Start
  2151                           
  2152                           ;main.c: 170: PORTAbits.RA5 = 0;;
  2153  0074  0020               	movlb	0	; select bank0
  2154  0075  128C               	bcf	12,5	;volatile
  2155                           
  2156                           ;main.c: 171: Delay_ms(10);
  2157  0076  300A               	movlw	10
  2158  0077  00F2               	movwf	Delay_ms@time_to_delay
  2159  0078  3000               	movlw	0
  2160  0079  00F3               	movwf	Delay_ms@time_to_delay+1
  2161  007A  3196  26C8  3180   	fcall	_Delay_ms
  2162                           
  2163                           ;main.c: 172: PORTAbits.RA4 = 1;;
  2164  007D  0020               	movlb	0	; select bank0
  2165  007E  160C               	bsf	12,4	;volatile
  2166                           
  2167                           ;main.c: 173: Delay_ms(10);
  2168  007F  300A               	movlw	10
  2169  0080  00F2               	movwf	Delay_ms@time_to_delay
  2170  0081  3000               	movlw	0
  2171  0082  00F3               	movwf	Delay_ms@time_to_delay+1
  2172  0083  3196  26C8  3180   	fcall	_Delay_ms
  2173                           
  2174                           ;main.c: 174: PORTAbits.RA5 = 1;;
  2175  0086  0020               	movlb	0	; select bank0
  2176  0087  168C               	bsf	12,5	;volatile
  2177                           
  2178                           ;main.c: 175: Delay_ms(10);
  2179  0088  300A               	movlw	10
  2180  0089  00F2               	movwf	Delay_ms@time_to_delay
  2181  008A  3000               	movlw	0
  2182  008B  00F3               	movwf	Delay_ms@time_to_delay+1
  2183  008C  3196  26C8  3180   	fcall	_Delay_ms
  2184                           
  2185                           ;main.c: 177: Delay_ms(200);
  2186  008F  30C8               	movlw	200
  2187  0090  00F2               	movwf	Delay_ms@time_to_delay
  2188  0091  3000               	movlw	0
  2189  0092  00F3               	movwf	Delay_ms@time_to_delay+1
  2190  0093  3196  26C8  3180   	fcall	_Delay_ms
  2191                           
  2192                           ;main.c: 180: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 7}};
  2193  0096  3040               	movlw	low main@F3177
  2194  0097  0086               	movwf	6
  2195  0098  3001               	movlw	high main@F3177
  2196  0099  0087               	movwf	7
  2197  009A  30DF               	movlw	low main@beacon_address
  2198  009B  0084               	movwf	4
  2199  009C  3000               	movlw	high main@beacon_address
  2200  009D  0085               	movwf	5
  2201  009E  3010               	movlw	16
  2202  009F  0020               	movlb	0	; select bank0
  2203  00A0  00EE               	movwf	??_main
  2204  00A1                     u5600:	
  2205  00A1  0016               	moviw fsr1++
  2206  00A2  001A               	movwi fsr0++
  2207  00A3  0BEE               	decfsz	??_main,f
  2208  00A4  28A1               	goto	u5600
  2209                           
  2210                           ;main.c: 182: Ax25_Send_Header(beacon_address,2);
  2211  00A5  3002               	movlw	2
  2212  00A6  00A6               	movwf	Ax25_Send_Header@num_addresses
  2213  00A7  3000               	movlw	0
  2214  00A8  00A7               	movwf	Ax25_Send_Header@num_addresses+1
  2215  00A9  30DF               	movlw	main@beacon_address& (0+255)
  2216  00AA  3186  267A  3180   	fcall	_Ax25_Send_Header
  2217                           
  2218                           ;main.c: 183: Ax25_Send_String("HELLO");
  2219  00AD  3008               	movlw	low (STR_1| (0+32768))
  2220  00AE  0020               	movlb	0	; select bank0
  2221  00AF  00A6               	movwf	Ax25_Send_String@string
  2222  00B0  3083               	movlw	high (STR_1| (0+32768))
  2223  00B1  00A7               	movwf	Ax25_Send_String@string+1
  2224  00B2  3196  264C  3180   	fcall	_Ax25_Send_String
  2225                           
  2226                           ;main.c: 184: Ax25_Send_Footer();
  2227  00B5  3180  20E9  3180   	fcall	_Ax25_Send_Footer
  2228                           
  2229                           ;main.c: 188: Modem_Setup();
  2230  00B8  3195  2581  3180   	fcall	_Modem_Setup
  2231                           
  2232                           ;main.c: 189: Delay_ms(100);
  2233  00BB  3064               	movlw	100
  2234  00BC  00F2               	movwf	Delay_ms@time_to_delay
  2235  00BD  3000               	movlw	0
  2236  00BE  00F3               	movwf	Delay_ms@time_to_delay+1
  2237  00BF  3196  26C8  3180   	fcall	_Delay_ms
  2238                           
  2239                           ;main.c: 190: PORTCbits.RC3 = 0; ;
  2240  00C2  0020               	movlb	0	; select bank0
  2241  00C3  118E               	bcf	14,3	;volatile
  2242                           
  2243                           ;main.c: 191: Delay_ms(100);
  2244  00C4  3064               	movlw	100
  2245  00C5  00F2               	movwf	Delay_ms@time_to_delay
  2246  00C6  3000               	movlw	0
  2247  00C7  00F3               	movwf	Delay_ms@time_to_delay+1
  2248  00C8  3196  26C8  3180   	fcall	_Delay_ms
  2249                           
  2250                           ;main.c: 192: Ptt_On();
  2251  00CB  3188  2028  3180   	fcall	_Ptt_On
  2252  00CE                     l3711:	
  2253                           ;main.c: 194: while(1){
  2254                           
  2255                           
  2256                           ;main.c: 196: if(PTT_OFF){
  2257  00CE  0021               	movlb	1	; select bank1
  2258  00CF  0854               	movf	_PTT_OFF^(0+128),w
  2259  00D0  1903               	btfsc	3,2
  2260  00D1  28D7               	goto	l3717
  2261                           
  2262                           ;main.c: 197: Ptt_Off();
  2263  00D2  3195  25C8  3180   	fcall	_Ptt_Off
  2264                           
  2265                           ;main.c: 198: PTT_OFF = 0;
  2266  00D5  0021               	movlb	1	; select bank1
  2267  00D6  01D4               	clrf	_PTT_OFF^(0+128)
  2268  00D7                     l3717:	
  2269                           
  2270                           ;main.c: 199: }
  2271                           ;main.c: 202: Modem_Flush_Frame();
  2272  00D7  3197  2718  3180   	fcall	_Modem_Flush_Frame
  2273                           
  2274                           ;main.c: 203: Delay_ms(200);
  2275  00DA  30C8               	movlw	200
  2276  00DB  00F2               	movwf	Delay_ms@time_to_delay
  2277  00DC  3000               	movlw	0
  2278  00DD  00F3               	movwf	Delay_ms@time_to_delay+1
  2279  00DE  3196  26C8  3180   	fcall	_Delay_ms
  2280                           
  2281                           ;main.c: 204: Delay_ms(10);
  2282  00E1  300A               	movlw	10
  2283  00E2  00F2               	movwf	Delay_ms@time_to_delay
  2284  00E3  3000               	movlw	0
  2285  00E4  00F3               	movwf	Delay_ms@time_to_delay+1
  2286  00E5  3196  26C8  3180   	fcall	_Delay_ms
  2287  00E8  28CE               	goto	l3711
  2288  00E9                     __end_of_main:	
  2289                           ;main.c: 207: }
  2290                           ;main.c: 208: return (0);
  2291                           ;	Return value of _main is never used
  2292                           
  2293                           
  2294                           	psect	text1
  2295  15A5                     __ptext1:	
  2296 ;; *************** function _Timer1_Start *****************
  2297 ;; Defined at:
  2298 ;;		line 266 in file "utility.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;		None
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;		None
  2303 ;; Return value:  Size  Location     Type
  2304 ;;		None               void
  2305 ;; Registers used:
  2306 ;;		wreg, status,2
  2307 ;; Tracked objects:
  2308 ;;		On entry : 0/0
  2309 ;;		On exit  : 0/0
  2310 ;;		Unchanged: 0/0
  2311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2316 ;;Total ram usage:        0 bytes
  2317 ;; Hardware stack levels used:    1
  2318 ;; Hardware stack levels required when called:    1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function _Timer1_Start
  2328  15A5                     _Timer1_Start:	
  2329                           
  2330                           ;utility.c: 268: TMR1H = 0x00;
  2331                           
  2332                           ;incstack = 0
  2333                           ; Regs used in _Timer1_Start: [wreg+status,2]
  2334  15A5  0020               	movlb	0	; select bank0
  2335  15A6  0197               	clrf	23	;volatile
  2336                           
  2337                           ;utility.c: 269: TMR1L = 0x00;
  2338  15A7  0196               	clrf	22	;volatile
  2339                           
  2340                           ;utility.c: 272: CCPR1H = 0x03;
  2341  15A8  3003               	movlw	3
  2342  15A9  0025               	movlb	5	; select bank5
  2343  15AA  0092               	movwf	18	;volatile
  2344                           
  2345                           ;utility.c: 273: CCPR1L = 0x41;
  2346  15AB  3041               	movlw	65
  2347  15AC  0091               	movwf	17	;volatile
  2348                           
  2349                           ;utility.c: 276: CCP1IE = 1;
  2350  15AD  0021               	movlb	1	; select bank1
  2351  15AE  1511               	bsf	17,2	;volatile
  2352  15AF  0008               	return
  2353  15B0                     __end_of_Timer1_Start:	
  2354                           
  2355                           	psect	text2
  2356  176C                     __ptext2:	
  2357 ;; *************** function _System_Start *****************
  2358 ;; Defined at:
  2359 ;;		line 91 in file "main.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;		None
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;		None               void
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2375 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;Total ram usage:        1 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    1
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           
  2388                           ;psect for function _System_Start
  2389  176C                     _System_Start:	
  2390                           
  2391                           ;main.c: 94: OSCCON = 0x00;
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2395  176C  0021               	movlb	1	; select bank1
  2396  176D  0199               	clrf	25	;volatile
  2397                           
  2398                           ;main.c: 95: OSCCON |= 0b11110000;
  2399  176E  30F0               	movlw	240
  2400  176F  00F2               	movwf	??_System_Start
  2401  1770  0872               	movf	??_System_Start,w
  2402  1771  0499               	iorwf	25,f	;volatile
  2403                           
  2404                           ;main.c: 96: OSCTUNE = 0x00;
  2405  1772  0198               	clrf	24	;volatile
  2406                           
  2407                           ;main.c: 100: TMR0CS = 0;
  2408  1773  1295               	bcf	21,5	;volatile
  2409                           
  2410                           ;main.c: 101: PSA = 1;
  2411  1774  1595               	bsf	21,3	;volatile
  2412                           
  2413                           ;main.c: 106: TMR1ON = 1;
  2414  1775  0020               	movlb	0	; select bank0
  2415  1776  1418               	bsf	24,0	;volatile
  2416                           
  2417                           ;main.c: 107: TMR1GE = 0;
  2418  1777  1399               	bcf	25,7	;volatile
  2419                           
  2420                           ;main.c: 110: TMR1CS1 = 0;
  2421  1778  1398               	bcf	24,7	;volatile
  2422                           
  2423                           ;main.c: 111: TMR1CS0 = 0;
  2424  1779  1318               	bcf	24,6	;volatile
  2425                           
  2426                           ;main.c: 114: T1CKPS1 = 1;
  2427  177A  1698               	bsf	24,5	;volatile
  2428                           
  2429                           ;main.c: 115: T1CKPS0 = 1;
  2430  177B  1618               	bsf	24,4	;volatile
  2431                           
  2432                           ;main.c: 118: CCP1M3 = 1;
  2433  177C  0025               	movlb	5	; select bank5
  2434  177D  1593               	bsf	19,3	;volatile
  2435                           
  2436                           ;main.c: 119: CCP1M2 = 0;
  2437  177E  1113               	bcf	19,2	;volatile
  2438                           
  2439                           ;main.c: 120: CCP1M1 = 1;
  2440  177F  1493               	bsf	19,1	;volatile
  2441                           
  2442                           ;main.c: 121: CCP1M1 = 0;
  2443  1780  1093               	bcf	19,1	;volatile
  2444                           
  2445                           ;main.c: 126: DACOE = 1;
  2446  1781  0022               	movlb	2	; select bank2
  2447  1782  1698               	bsf	24,5	;volatile
  2448                           
  2449                           ;main.c: 127: DACPSS1 = 0;
  2450  1783  1198               	bcf	24,3	;volatile
  2451                           
  2452                           ;main.c: 128: DACPSS0 = 0;
  2453  1784  1118               	bcf	24,2	;volatile
  2454                           
  2455                           ;main.c: 129: DACNSS = 0;
  2456  1785  1018               	bcf	24,0	;volatile
  2457                           
  2458                           ;main.c: 134: ANSA1 = 1;
  2459  1786  0023               	movlb	3	; select bank3
  2460  1787  148C               	bsf	12,1	;volatile
  2461                           
  2462                           ;main.c: 135: ADCON0 &= 0b10000011;
  2463  1788  3083               	movlw	131
  2464  1789  00F2               	movwf	??_System_Start
  2465  178A  0872               	movf	??_System_Start,w
  2466  178B  0021               	movlb	1	; select bank1
  2467  178C  059D               	andwf	29,f	;volatile
  2468                           
  2469                           ;main.c: 136: ADCON0 |= 0b00000100;
  2470  178D  151D               	bsf	29,2	;volatile
  2471                           
  2472                           ;main.c: 137: ADNREF = 0;
  2473  178E  111E               	bcf	30,2	;volatile
  2474                           
  2475                           ;main.c: 138: ADPREF1 = 0;
  2476  178F  109E               	bcf	30,1	;volatile
  2477                           
  2478                           ;main.c: 139: ADPREF0 = 0;
  2479  1790  101E               	bcf	30,0	;volatile
  2480                           
  2481                           ;main.c: 140: ADCS2 = 1;
  2482  1791  171E               	bsf	30,6	;volatile
  2483                           
  2484                           ;main.c: 141: ADCS1 = 1;
  2485  1792  169E               	bsf	30,5	;volatile
  2486                           
  2487                           ;main.c: 142: ADCS0 = 0;
  2488  1793  121E               	bcf	30,4	;volatile
  2489                           
  2490                           ;main.c: 143: ADFM = 1;
  2491  1794  179E               	bsf	30,7	;volatile
  2492                           
  2493                           ;main.c: 148: INTCON |= 0xC0;
  2494  1795  30C0               	movlw	192
  2495  1796  00F2               	movwf	??_System_Start
  2496  1797  0872               	movf	??_System_Start,w
  2497  1798  048B               	iorwf	11,f	;volatile
  2498  1799  0008               	return
  2499  179A                     __end_of_System_Start:	
  2500                           
  2501                           	psect	text3
  2502  15C8                     __ptext3:	
  2503 ;; *************** function _Ptt_Off *****************
  2504 ;; Defined at:
  2505 ;;		line 352 in file "adf7012.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;		None
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;		None
  2510 ;; Return value:  Size  Location     Type
  2511 ;;		None               void
  2512 ;; Registers used:
  2513 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2523 ;;Total ram usage:        0 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    7
  2526 ;; This function calls:
  2527 ;;		_Adf_Write_Config
  2528 ;;		_Delay_ms
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _Ptt_Off
  2536  15C8                     _Ptt_Off:	
  2537                           
  2538                           ;adf7012.c: 354: adf_config.r3.pa_enable = 0;
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2542  15C8  0021               	movlb	1	; select bank1
  2543  15C9  01BA               	clrf	(_adf_config^(0+128)+26)
  2544                           
  2545                           ;adf7012.c: 355: adf_config.r2.power_amplifier_level = 0;
  2546  15CA  01B2               	clrf	(_adf_config^(0+128)+18)
  2547                           
  2548                           ;adf7012.c: 356: Adf_Write_Config();
  2549  15CB  3195  25B0  3195   	fcall	_Adf_Write_Config
  2550                           
  2551                           ;adf7012.c: 357: Delay_ms(10);
  2552  15CE  300A               	movlw	10
  2553  15CF  00F2               	movwf	Delay_ms@time_to_delay
  2554  15D0  3000               	movlw	0
  2555  15D1  00F3               	movwf	Delay_ms@time_to_delay+1
  2556  15D2  3196  26C8         	fcall	_Delay_ms
  2557  15D4  0008               	return
  2558  15D5                     __end_of_Ptt_Off:	
  2559                           
  2560                           	psect	text4
  2561  1581                     __ptext4:	
  2562 ;; *************** function _Modem_Setup *****************
  2563 ;; Defined at:
  2564 ;;		line 116 in file "audio_tone.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;		None
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;		None               void
  2571 ;; Registers used:
  2572 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2582 ;;Total ram usage:        0 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; Hardware stack levels required when called:    8
  2585 ;; This function calls:
  2586 ;;		_Modem_Init
  2587 ;;		_Radio_Setup
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function _Modem_Setup
  2595  1581                     _Modem_Setup:	
  2596                           
  2597                           ;audio_tone.c: 118: Modem_Init();
  2598                           
  2599                           ;incstack = 0
  2600                           ; Regs used in _Modem_Setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2601  1581  318F  2733  3195   	fcall	_Modem_Init
  2602                           
  2603                           ;audio_tone.c: 119: Radio_Setup();
  2604  1584  3196  2630         	fcall	_Radio_Setup
  2605  1586  0008               	return
  2606  1587                     __end_of_Modem_Setup:	
  2607                           
  2608                           	psect	text5
  2609  1630                     __ptext5:	
  2610 ;; *************** function _Radio_Setup *****************
  2611 ;; Defined at:
  2612 ;;		line 305 in file "adf7012.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;		None               void
  2619 ;; Registers used:
  2620 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    7
  2633 ;; This function calls:
  2634 ;;		_Adf_Reset_Config
  2635 ;;		_Adf_Write_Config
  2636 ;;		_Delay_ms
  2637 ;;		_Gpio_Config
  2638 ;;		_Set_Freq
  2639 ;; This function is called by:
  2640 ;;		_Modem_Setup
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           
  2645                           ;psect for function _Radio_Setup
  2646  1630                     _Radio_Setup:	
  2647                           
  2648                           ;adf7012.c: 308: Gpio_Config();
  2649                           
  2650                           ;incstack = 0
  2651                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2652  1630  3195  25BC  3196   	fcall	_Gpio_Config
  2653                           
  2654                           ;adf7012.c: 311: Adf_Reset_Config();
  2655  1633  3195  25E3  3196   	fcall	_Adf_Reset_Config
  2656                           
  2657                           ;adf7012.c: 312: Set_Freq(144390000UL);
  2658  1636  3008               	movlw	8
  2659  1637  0020               	movlb	0	; select bank0
  2660  1638  00C1               	movwf	Set_Freq@freq+3
  2661  1639  309B               	movlw	155
  2662  163A  00C0               	movwf	Set_Freq@freq+2
  2663  163B  3037               	movlw	55
  2664  163C  00BF               	movwf	Set_Freq@freq+1
  2665  163D  3070               	movlw	112
  2666  163E  00BE               	movwf	Set_Freq@freq
  2667  163F  3184  2472  3196   	fcall	_Set_Freq
  2668                           
  2669                           ;adf7012.c: 313: Adf_Write_Config();
  2670  1642  3195  25B0  3196   	fcall	_Adf_Write_Config
  2671                           
  2672                           ;adf7012.c: 315: Delay_ms(10);
  2673  1645  300A               	movlw	10
  2674  1646  00F2               	movwf	Delay_ms@time_to_delay
  2675  1647  3000               	movlw	0
  2676  1648  00F3               	movwf	Delay_ms@time_to_delay+1
  2677  1649  3196  26C8         	fcall	_Delay_ms
  2678  164B  0008               	return
  2679  164C                     __end_of_Radio_Setup:	
  2680                           
  2681                           	psect	text6
  2682  0472                     __ptext6:	
  2683 ;; *************** function _Set_Freq *****************
  2684 ;; Defined at:
  2685 ;;		line 278 in file "adf7012.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  freq            4   30[BANK0 ] unsigned long 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  n               4   52[BANK0 ] unsigned long 
  2690 ;;  f_pfd           4   48[BANK0 ] unsigned long 
  2691 ;;  m               4   38[BANK0 ] unsigned long 
  2692 ;;  rest            3   45[BANK0 ] float 
  2693 ;;  ratio           3   42[BANK0 ] float 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0, pclath, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2703 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;Total ram usage:       26 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    3
  2710 ;; This function calls:
  2711 ;;		___aldiv
  2712 ;;		___ftadd
  2713 ;;		___ftdiv
  2714 ;;		___ftmul
  2715 ;;		___ftneg
  2716 ;;		___fttol
  2717 ;;		___lldiv
  2718 ;;		___lltoft
  2719 ;; This function is called by:
  2720 ;;		_Radio_Setup
  2721 ;;		_Modem_Set_Tx_Freq
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _Set_Freq
  2727  0472                     _Set_Freq:	
  2728                           
  2729                           ;adf7012.c: 284: adf_config.r0.output_divider = 0;
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _Set_Freq: [wreg+status,2+status,0+pclath+cstack]
  2733  0472  0021               	movlb	1	; select bank1
  2734  0473  01A9               	clrf	(_adf_config^(0+128)+9)
  2735                           
  2736                           ;adf7012.c: 285: if (freq < 410000000) { adf_config.r0.output_divider = 1; };
  2737  0474  3018               	movlw	24
  2738  0475  0020               	movlb	0	; select bank0
  2739  0476  0241               	subwf	Set_Freq@freq+3,w
  2740  0477  1D03               	skipz
  2741  0478  2C83               	goto	u5105
  2742  0479  3070               	movlw	112
  2743  047A  0240               	subwf	Set_Freq@freq+2,w
  2744  047B  1D03               	skipz
  2745  047C  2C83               	goto	u5105
  2746  047D  301A               	movlw	26
  2747  047E  023F               	subwf	Set_Freq@freq+1,w
  2748  047F  1D03               	skipz
  2749  0480  2C83               	goto	u5105
  2750  0481  3080               	movlw	128
  2751  0482  023E               	subwf	Set_Freq@freq,w
  2752  0483                     u5105:	
  2753  0483  1803               	skipnc
  2754  0484  2C88               	goto	l3445
  2755  0485  0021               	movlb	1	; select bank1
  2756  0486  01A9               	clrf	(_adf_config^(0+128)+9)
  2757  0487  0AA9               	incf	(_adf_config^(0+128)+9),f
  2758  0488                     l3445:	
  2759                           
  2760                           ;adf7012.c: 286: if (freq < 210000000) { adf_config.r0.output_divider = 2; };
  2761  0488  300C               	movlw	12
  2762  0489  0020               	movlb	0	; select bank0
  2763  048A  0241               	subwf	Set_Freq@freq+3,w
  2764  048B  1D03               	skipz
  2765  048C  2C97               	goto	u5115
  2766  048D  3084               	movlw	132
  2767  048E  0240               	subwf	Set_Freq@freq+2,w
  2768  048F  1D03               	skipz
  2769  0490  2C97               	goto	u5115
  2770  0491  3058               	movlw	88
  2771  0492  023F               	subwf	Set_Freq@freq+1,w
  2772  0493  1D03               	skipz
  2773  0494  2C97               	goto	u5115
  2774  0495  3080               	movlw	128
  2775  0496  023E               	subwf	Set_Freq@freq,w
  2776  0497                     u5115:	
  2777  0497  1803               	skipnc
  2778  0498  2C9E               	goto	l333
  2779  0499  3002               	movlw	2
  2780  049A  00C2               	movwf	??_Set_Freq
  2781  049B  0842               	movf	??_Set_Freq,w
  2782  049C  0021               	movlb	1	; select bank1
  2783  049D  00A9               	movwf	(_adf_config^(0+128)+9)
  2784  049E                     l333:	
  2785                           
  2786                           ;adf7012.c: 287: if (freq < 130000000) { adf_config.r0.output_divider = 3; };
  2787  049E  3007               	movlw	7
  2788  049F  0020               	movlb	0	; select bank0
  2789  04A0  0241               	subwf	Set_Freq@freq+3,w
  2790  04A1  1D03               	skipz
  2791  04A2  2CAD               	goto	u5125
  2792  04A3  30BF               	movlw	191
  2793  04A4  0240               	subwf	Set_Freq@freq+2,w
  2794  04A5  1D03               	skipz
  2795  04A6  2CAD               	goto	u5125
  2796  04A7  30A4               	movlw	164
  2797  04A8  023F               	subwf	Set_Freq@freq+1,w
  2798  04A9  1D03               	skipz
  2799  04AA  2CAD               	goto	u5125
  2800  04AB  3080               	movlw	128
  2801  04AC  023E               	subwf	Set_Freq@freq,w
  2802  04AD                     u5125:	
  2803  04AD  1803               	skipnc
  2804  04AE  2CB4               	goto	l3451
  2805  04AF  3003               	movlw	3
  2806  04B0  00C2               	movwf	??_Set_Freq
  2807  04B1  0842               	movf	??_Set_Freq,w
  2808  04B2  0021               	movlb	1	; select bank1
  2809  04B3  00A9               	movwf	(_adf_config^(0+128)+9)
  2810  04B4                     l3451:	
  2811                           
  2812                           ;adf7012.c: 289: uint32_t f_pfd = 20000000L / adf_config.r0.r_divider;
  2813  04B4  0021               	movlb	1	; select bank1
  2814  04B5  0824               	movf	(_adf_config^(0+128)+4),w
  2815  04B6  0020               	movlb	0	; select bank0
  2816  04B7  00C2               	movwf	??_Set_Freq
  2817  04B8  01C3               	clrf	??_Set_Freq+1
  2818  04B9  01C4               	clrf	??_Set_Freq+2
  2819  04BA  01C5               	clrf	??_Set_Freq+3
  2820  04BB  0845               	movf	??_Set_Freq+3,w
  2821  04BC  00F5               	movwf	___aldiv@divisor+3
  2822  04BD  0844               	movf	??_Set_Freq+2,w
  2823  04BE  00F4               	movwf	___aldiv@divisor+2
  2824  04BF  0843               	movf	??_Set_Freq+1,w
  2825  04C0  00F3               	movwf	___aldiv@divisor+1
  2826  04C1  0842               	movf	??_Set_Freq,w
  2827  04C2  00F2               	movwf	___aldiv@divisor
  2828  04C3  3001               	movlw	1
  2829  04C4  00F9               	movwf	___aldiv@dividend+3
  2830  04C5  3031               	movlw	49
  2831  04C6  00F8               	movwf	___aldiv@dividend+2
  2832  04C7  302D               	movlw	45
  2833  04C8  00F7               	movwf	___aldiv@dividend+1
  2834  04C9  3000               	movlw	0
  2835  04CA  00F6               	movwf	___aldiv@dividend
  2836  04CB  318B  232E  3184   	fcall	___aldiv
  2837  04CE  0875               	movf	?___aldiv+3,w
  2838  04CF  0020               	movlb	0	; select bank0
  2839  04D0  00D3               	movwf	Set_Freq@f_pfd+3
  2840  04D1  0874               	movf	?___aldiv+2,w
  2841  04D2  00D2               	movwf	Set_Freq@f_pfd+2
  2842  04D3  0873               	movf	?___aldiv+1,w
  2843  04D4  00D1               	movwf	Set_Freq@f_pfd+1
  2844  04D5  0872               	movf	?___aldiv,w
  2845  04D6  00D0               	movwf	Set_Freq@f_pfd
  2846                           
  2847                           ;adf7012.c: 291: uint32_t n = (uint32_t)(freq / f_pfd);
  2848  04D7  0853               	movf	Set_Freq@f_pfd+3,w
  2849  04D8  00A7               	movwf	___lldiv@divisor+3
  2850  04D9  0852               	movf	Set_Freq@f_pfd+2,w
  2851  04DA  00A6               	movwf	___lldiv@divisor+2
  2852  04DB  0851               	movf	Set_Freq@f_pfd+1,w
  2853  04DC  00A5               	movwf	___lldiv@divisor+1
  2854  04DD  0850               	movf	Set_Freq@f_pfd,w
  2855  04DE  00A4               	movwf	___lldiv@divisor
  2856  04DF  0841               	movf	Set_Freq@freq+3,w
  2857  04E0  00AB               	movwf	___lldiv@dividend+3
  2858  04E1  0840               	movf	Set_Freq@freq+2,w
  2859  04E2  00AA               	movwf	___lldiv@dividend+2
  2860  04E3  083F               	movf	Set_Freq@freq+1,w
  2861  04E4  00A9               	movwf	___lldiv@dividend+1
  2862  04E5  083E               	movf	Set_Freq@freq,w
  2863  04E6  00A8               	movwf	___lldiv@dividend
  2864  04E7  3188  2097  3184   	fcall	___lldiv
  2865  04EA  0020               	movlb	0	; select bank0
  2866  04EB  0827               	movf	?___lldiv+3,w
  2867  04EC  00D7               	movwf	Set_Freq@n+3
  2868  04ED  0826               	movf	?___lldiv+2,w
  2869  04EE  00D6               	movwf	Set_Freq@n+2
  2870  04EF  0825               	movf	?___lldiv+1,w
  2871  04F0  00D5               	movwf	Set_Freq@n+1
  2872  04F1  0824               	movf	?___lldiv,w
  2873  04F2  00D4               	movwf	Set_Freq@n
  2874                           
  2875                           ;adf7012.c: 293: float ratio = (float)freq / (float)f_pfd;
  2876  04F3  0853               	movf	Set_Freq@f_pfd+3,w
  2877  04F4  00A3               	movwf	___lltoft@c+3
  2878  04F5  0852               	movf	Set_Freq@f_pfd+2,w
  2879  04F6  00A2               	movwf	___lltoft@c+2
  2880  04F7  0851               	movf	Set_Freq@f_pfd+1,w
  2881  04F8  00A1               	movwf	___lltoft@c+1
  2882  04F9  0850               	movf	Set_Freq@f_pfd,w
  2883  04FA  00A0               	movwf	___lltoft@c
  2884  04FB  3197  2742  3184   	fcall	___lltoft
  2885  04FE  0020               	movlb	0	; select bank0
  2886  04FF  0820               	movf	?___lltoft,w
  2887  0500  00A6               	movwf	___ftdiv@f2
  2888  0501  0821               	movf	?___lltoft+1,w
  2889  0502  00A7               	movwf	___ftdiv@f2+1
  2890  0503  0822               	movf	?___lltoft+2,w
  2891  0504  00A8               	movwf	___ftdiv@f2+2
  2892  0505  0841               	movf	Set_Freq@freq+3,w
  2893  0506  00A3               	movwf	___lltoft@c+3
  2894  0507  0840               	movf	Set_Freq@freq+2,w
  2895  0508  00A2               	movwf	___lltoft@c+2
  2896  0509  083F               	movf	Set_Freq@freq+1,w
  2897  050A  00A1               	movwf	___lltoft@c+1
  2898  050B  083E               	movf	Set_Freq@freq,w
  2899  050C  00A0               	movwf	___lltoft@c
  2900  050D  3197  2742  3184   	fcall	___lltoft
  2901  0510  0020               	movlb	0	; select bank0
  2902  0511  0820               	movf	?___lltoft,w
  2903  0512  00A9               	movwf	___ftdiv@f1
  2904  0513  0821               	movf	?___lltoft+1,w
  2905  0514  00AA               	movwf	___ftdiv@f1+1
  2906  0515  0822               	movf	?___lltoft+2,w
  2907  0516  00AB               	movwf	___ftdiv@f1+2
  2908  0517  3187  2752  3184   	fcall	___ftdiv
  2909  051A  0020               	movlb	0	; select bank0
  2910  051B  0826               	movf	?___ftdiv,w
  2911  051C  00CA               	movwf	Set_Freq@ratio
  2912  051D  0827               	movf	?___ftdiv+1,w
  2913  051E  00CB               	movwf	Set_Freq@ratio+1
  2914  051F  0828               	movf	?___ftdiv+2,w
  2915  0520  00CC               	movwf	Set_Freq@ratio+2
  2916                           
  2917                           ;adf7012.c: 294: float rest = ratio - (float)n;
  2918  0521  084A               	movf	Set_Freq@ratio,w
  2919  0522  00A9               	movwf	___ftadd@f1
  2920  0523  084B               	movf	Set_Freq@ratio+1,w
  2921  0524  00AA               	movwf	___ftadd@f1+1
  2922  0525  084C               	movf	Set_Freq@ratio+2,w
  2923  0526  00AB               	movwf	___ftadd@f1+2
  2924  0527  0857               	movf	Set_Freq@n+3,w
  2925  0528  00A3               	movwf	___lltoft@c+3
  2926  0529  0856               	movf	Set_Freq@n+2,w
  2927  052A  00A2               	movwf	___lltoft@c+2
  2928  052B  0855               	movf	Set_Freq@n+1,w
  2929  052C  00A1               	movwf	___lltoft@c+1
  2930  052D  0854               	movf	Set_Freq@n,w
  2931  052E  00A0               	movwf	___lltoft@c
  2932  052F  3197  2742  3184   	fcall	___lltoft
  2933  0532  0020               	movlb	0	; select bank0
  2934  0533  0820               	movf	?___lltoft,w
  2935  0534  00A6               	movwf	___ftneg@f1
  2936  0535  0821               	movf	?___lltoft+1,w
  2937  0536  00A7               	movwf	___ftneg@f1+1
  2938  0537  0822               	movf	?___lltoft+2,w
  2939  0538  00A8               	movwf	___ftneg@f1+2
  2940  0539  3195  259C  3184   	fcall	___ftneg
  2941  053C  0020               	movlb	0	; select bank0
  2942  053D  0826               	movf	?___ftneg,w
  2943  053E  00AC               	movwf	___ftadd@f2
  2944  053F  0827               	movf	?___ftneg+1,w
  2945  0540  00AD               	movwf	___ftadd@f2+1
  2946  0541  0828               	movf	?___ftneg+2,w
  2947  0542  00AE               	movwf	___ftadd@f2+2
  2948  0543  3185  2584  3184   	fcall	___ftadd
  2949  0546  0020               	movlb	0	; select bank0
  2950  0547  0829               	movf	?___ftadd,w
  2951  0548  00CD               	movwf	Set_Freq@rest
  2952  0549  082A               	movf	?___ftadd+1,w
  2953  054A  00CE               	movwf	Set_Freq@rest+1
  2954  054B  082B               	movf	?___ftadd+2,w
  2955  054C  00CF               	movwf	Set_Freq@rest+2
  2956                           
  2957                           ;adf7012.c: 297: uint32_t m = (uint32_t)(rest * 4096);
  2958  054D  084D               	movf	Set_Freq@rest,w
  2959  054E  00A3               	movwf	___ftmul@f2
  2960  054F  084E               	movf	Set_Freq@rest+1,w
  2961  0550  00A4               	movwf	___ftmul@f2+1
  2962  0551  084F               	movf	Set_Freq@rest+2,w
  2963  0552  00A5               	movwf	___ftmul@f2+2
  2964  0553  3000               	movlw	0
  2965  0554  00A0               	movwf	___ftmul@f1
  2966  0555  3080               	movlw	128
  2967  0556  00A1               	movwf	___ftmul@f1+1
  2968  0557  3045               	movlw	69
  2969  0558  00A2               	movwf	___ftmul@f1+2
  2970  0559  318C  2437  3184   	fcall	___ftmul
  2971  055C  0020               	movlb	0	; select bank0
  2972  055D  0820               	movf	?___ftmul,w
  2973  055E  00B0               	movwf	___fttol@f1
  2974  055F  0821               	movf	?___ftmul+1,w
  2975  0560  00B1               	movwf	___fttol@f1+1
  2976  0561  0822               	movf	?___ftmul+2,w
  2977  0562  00B2               	movwf	___fttol@f1+2
  2978  0563  318B  23B0         	fcall	___fttol
  2979  0565  0020               	movlb	0	; select bank0
  2980  0566  0833               	movf	?___fttol+3,w
  2981  0567  00C9               	movwf	Set_Freq@m+3
  2982  0568  0832               	movf	?___fttol+2,w
  2983  0569  00C8               	movwf	Set_Freq@m+2
  2984  056A  0831               	movf	?___fttol+1,w
  2985  056B  00C7               	movwf	Set_Freq@m+1
  2986  056C  0830               	movf	?___fttol,w
  2987  056D  00C6               	movwf	Set_Freq@m
  2988                           
  2989                           ;adf7012.c: 299: adf_config.r1.integer_n = n;
  2990  056E  0854               	movf	Set_Freq@n,w
  2991  056F  00C2               	movwf	??_Set_Freq
  2992  0570  0842               	movf	??_Set_Freq,w
  2993  0571  0021               	movlb	1	; select bank1
  2994  0572  00AE               	movwf	(_adf_config^(0+128)+14)
  2995                           
  2996                           ;adf7012.c: 300: adf_config.r1.fractional_n = m;
  2997  0573  0020               	movlb	0	; select bank0
  2998  0574  0849               	movf	Set_Freq@m+3,w
  2999  0575  0021               	movlb	1	; select bank1
  3000  0576  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  3001  0577  0020               	movlb	0	; select bank0
  3002  0578  0848               	movf	Set_Freq@m+2,w
  3003  0579  0021               	movlb	1	; select bank1
  3004  057A  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  3005  057B  0020               	movlb	0	; select bank0
  3006  057C  0847               	movf	Set_Freq@m+1,w
  3007  057D  0021               	movlb	1	; select bank1
  3008  057E  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  3009  057F  0020               	movlb	0	; select bank0
  3010  0580  0846               	movf	Set_Freq@m,w
  3011  0581  0021               	movlb	1	; select bank1
  3012  0582  00AA               	movwf	(_adf_config^(0+128)+10)
  3013  0583  0008               	return
  3014  0584                     __end_of_Set_Freq:	
  3015                           
  3016                           	psect	text7
  3017  1742                     __ptext7:	
  3018 ;; *************** function ___lltoft *****************
  3019 ;; Defined at:
  3020 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  c               4    0[BANK0 ] unsigned long 
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;  exp             1    5[BANK0 ] unsigned char 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  3    0[BANK0 ] float 
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, pclath, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3034 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;Total ram usage:        6 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    2
  3041 ;; This function calls:
  3042 ;;		___ftpack
  3043 ;; This function is called by:
  3044 ;;		_Set_Freq
  3045 ;; This function uses a non-reentrant model
  3046 ;;
  3047                           
  3048                           
  3049                           ;psect for function ___lltoft
  3050  1742                     ___lltoft:	
  3051                           
  3052                           ;incstack = 0
  3053                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3054  1742  308E               	movlw	142
  3055  1743  0020               	movlb	0	; select bank0
  3056  1744  00A4               	movwf	??___lltoft
  3057  1745  0824               	movf	??___lltoft,w
  3058  1746  00A5               	movwf	___lltoft@exp
  3059  1747                     l3399:	
  3060  1747  30FF               	movlw	255
  3061  1748  0523               	andwf	___lltoft@c+3,w
  3062  1749  1903               	btfsc	3,2
  3063  174A  2F57               	goto	l3401
  3064  174B  3001               	movlw	1
  3065  174C                     u5055:	
  3066  174C  36A3               	lsrf	___lltoft@c+3,f
  3067  174D  0CA2               	rrf	___lltoft@c+2,f
  3068  174E  0CA1               	rrf	___lltoft@c+1,f
  3069  174F  0CA0               	rrf	___lltoft@c,f
  3070  1750  0B89               	decfsz	9,f
  3071  1751  2F4C               	goto	u5055
  3072  1752  3001               	movlw	1
  3073  1753  00A4               	movwf	??___lltoft
  3074  1754  0824               	movf	??___lltoft,w
  3075  1755  07A5               	addwf	___lltoft@exp,f
  3076  1756  2F47               	goto	l3399
  3077  1757                     l3401:	
  3078  1757  0820               	movf	___lltoft@c,w
  3079  1758  00F2               	movwf	___ftpack@arg
  3080  1759  0821               	movf	___lltoft@c+1,w
  3081  175A  00F3               	movwf	___ftpack@arg+1
  3082  175B  0822               	movf	___lltoft@c+2,w
  3083  175C  00F4               	movwf	___ftpack@arg+2
  3084  175D  0825               	movf	___lltoft@exp,w
  3085  175E  00A4               	movwf	??___lltoft
  3086  175F  0824               	movf	??___lltoft,w
  3087  1760  00F5               	movwf	___ftpack@exp
  3088  1761  01F6               	clrf	___ftpack@sign
  3089  1762  3188  20EA         	fcall	___ftpack
  3090  1764  0872               	movf	?___ftpack,w
  3091  1765  0020               	movlb	0	; select bank0
  3092  1766  00A0               	movwf	?___lltoft
  3093  1767  0873               	movf	?___ftpack+1,w
  3094  1768  00A1               	movwf	?___lltoft+1
  3095  1769  0874               	movf	?___ftpack+2,w
  3096  176A  00A2               	movwf	?___lltoft+2
  3097  176B  0008               	return
  3098  176C                     __end_of___lltoft:	
  3099                           
  3100                           	psect	text8
  3101  0BB0                     __ptext8:	
  3102 ;; *************** function ___fttol *****************
  3103 ;; Defined at:
  3104 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3105 ;; Parameters:    Size  Location     Type
  3106 ;;  f1              3   16[BANK0 ] float 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  lval            4   25[BANK0 ] unsigned long 
  3109 ;;  exp1            1   29[BANK0 ] unsigned char 
  3110 ;;  sign1           1   24[BANK0 ] unsigned char 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  4   16[BANK0 ] long 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3120 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3121 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3122 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3123 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3124 ;;Total ram usage:       14 bytes
  3125 ;; Hardware stack levels used:    1
  3126 ;; Hardware stack levels required when called:    1
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_Set_Freq
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           
  3135                           ;psect for function ___fttol
  3136  0BB0                     ___fttol:	
  3137                           
  3138                           ;incstack = 0
  3139                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3140  0BB0  0020               	movlb	0	; select bank0
  3141  0BB1  0830               	movf	___fttol@f1,w
  3142  0BB2  00B4               	movwf	??___fttol
  3143  0BB3  0831               	movf	___fttol@f1+1,w
  3144  0BB4  00B5               	movwf	??___fttol+1
  3145  0BB5  0832               	movf	___fttol@f1+2,w
  3146  0BB6  00B6               	movwf	??___fttol+2
  3147  0BB7  1003               	clrc
  3148  0BB8  0D35               	rlf	??___fttol+1,w
  3149  0BB9  0D36               	rlf	??___fttol+2,w
  3150  0BBA  00B7               	movwf	??___fttol+3
  3151  0BBB  0837               	movf	??___fttol+3,w
  3152  0BBC  00BD               	movwf	___fttol@exp1
  3153  0BBD  08BD               	movf	___fttol@exp1,f
  3154  0BBE  1D03               	skipz
  3155  0BBF  2BC9               	goto	l2411
  3156  0BC0  3000               	movlw	0
  3157  0BC1  00B3               	movwf	?___fttol+3
  3158  0BC2  3000               	movlw	0
  3159  0BC3  00B2               	movwf	?___fttol+2
  3160  0BC4  3000               	movlw	0
  3161  0BC5  00B1               	movwf	?___fttol+1
  3162  0BC6  3000               	movlw	0
  3163  0BC7  00B0               	movwf	?___fttol
  3164  0BC8  0008               	return
  3165  0BC9                     l2411:	
  3166  0BC9  0830               	movf	___fttol@f1,w
  3167  0BCA  00B4               	movwf	??___fttol
  3168  0BCB  0831               	movf	___fttol@f1+1,w
  3169  0BCC  00B5               	movwf	??___fttol+1
  3170  0BCD  0832               	movf	___fttol@f1+2,w
  3171  0BCE  00B6               	movwf	??___fttol+2
  3172  0BCF  3017               	movlw	23
  3173  0BD0                     u2995:	
  3174  0BD0  36B6               	lsrf	??___fttol+2,f
  3175  0BD1  0CB5               	rrf	??___fttol+1,f
  3176  0BD2  0CB4               	rrf	??___fttol,f
  3177  0BD3  0B89               	decfsz	9,f
  3178  0BD4  2BD0               	goto	u2995
  3179  0BD5  0834               	movf	??___fttol,w
  3180  0BD6  00B7               	movwf	??___fttol+3
  3181  0BD7  0837               	movf	??___fttol+3,w
  3182  0BD8  00B8               	movwf	___fttol@sign1
  3183  0BD9  17B1               	bsf	___fttol@f1+1,7
  3184  0BDA  30FF               	movlw	255
  3185  0BDB  05B0               	andwf	___fttol@f1,f
  3186  0BDC  30FF               	movlw	255
  3187  0BDD  05B1               	andwf	___fttol@f1+1,f
  3188  0BDE  3000               	movlw	0
  3189  0BDF  05B2               	andwf	___fttol@f1+2,f
  3190  0BE0  0830               	movf	___fttol@f1,w
  3191  0BE1  00B9               	movwf	___fttol@lval
  3192  0BE2  0831               	movf	___fttol@f1+1,w
  3193  0BE3  00BA               	movwf	___fttol@lval+1
  3194  0BE4  0832               	movf	___fttol@f1+2,w
  3195  0BE5  00BB               	movwf	___fttol@lval+2
  3196  0BE6  01BC               	clrf	___fttol@lval+3
  3197  0BE7  308E               	movlw	142
  3198  0BE8  02BD               	subwf	___fttol@exp1,f
  3199  0BE9  1FBD               	btfss	___fttol@exp1,7
  3200  0BEA  2C07               	goto	l2431
  3201  0BEB  083D               	movf	___fttol@exp1,w
  3202  0BEC  3A80               	xorlw	128
  3203  0BED  3E8F               	addlw	143
  3204  0BEE  1803               	skipnc
  3205  0BEF  2BF9               	goto	l2429
  3206  0BF0  3000               	movlw	0
  3207  0BF1  00B3               	movwf	?___fttol+3
  3208  0BF2  3000               	movlw	0
  3209  0BF3  00B2               	movwf	?___fttol+2
  3210  0BF4  3000               	movlw	0
  3211  0BF5  00B1               	movwf	?___fttol+1
  3212  0BF6  3000               	movlw	0
  3213  0BF7  00B0               	movwf	?___fttol
  3214  0BF8  0008               	return
  3215  0BF9                     l2429:	
  3216  0BF9  3001               	movlw	1
  3217  0BFA                     u3025:	
  3218  0BFA  36BC               	lsrf	___fttol@lval+3,f
  3219  0BFB  0CBB               	rrf	___fttol@lval+2,f
  3220  0BFC  0CBA               	rrf	___fttol@lval+1,f
  3221  0BFD  0CB9               	rrf	___fttol@lval,f
  3222  0BFE  0B89               	decfsz	9,f
  3223  0BFF  2BFA               	goto	u3025
  3224  0C00  3001               	movlw	1
  3225  0C01  00B4               	movwf	??___fttol
  3226  0C02  0834               	movf	??___fttol,w
  3227  0C03  07BD               	addwf	___fttol@exp1,f
  3228  0C04  1903               	btfsc	3,2
  3229  0C05  2C20               	goto	l2441
  3230  0C06  2BF9               	goto	l2429
  3231  0C07                     l2431:	
  3232  0C07  3018               	movlw	24
  3233  0C08  023D               	subwf	___fttol@exp1,w
  3234  0C09  1C03               	skipc
  3235  0C0A  2C1D               	goto	l2439
  3236  0C0B  3000               	movlw	0
  3237  0C0C  00B3               	movwf	?___fttol+3
  3238  0C0D  3000               	movlw	0
  3239  0C0E  00B2               	movwf	?___fttol+2
  3240  0C0F  3000               	movlw	0
  3241  0C10  00B1               	movwf	?___fttol+1
  3242  0C11  3000               	movlw	0
  3243  0C12  00B0               	movwf	?___fttol
  3244  0C13  0008               	return
  3245  0C14                     l2437:	
  3246  0C14  3001               	movlw	1
  3247  0C15                     u3055:	
  3248  0C15  35B9               	lslf	___fttol@lval,f
  3249  0C16  0DBA               	rlf	___fttol@lval+1,f
  3250  0C17  0DBB               	rlf	___fttol@lval+2,f
  3251  0C18  0DBC               	rlf	___fttol@lval+3,f
  3252  0C19  0B89               	decfsz	9,f
  3253  0C1A  2C15               	goto	u3055
  3254  0C1B  3001               	movlw	1
  3255  0C1C  02BD               	subwf	___fttol@exp1,f
  3256  0C1D                     l2439:	
  3257  0C1D  08BD               	movf	___fttol@exp1,f
  3258  0C1E  1D03               	skipz
  3259  0C1F  2C14               	goto	l2437
  3260  0C20                     l2441:	
  3261  0C20  0838               	movf	___fttol@sign1,w
  3262  0C21  1903               	btfsc	3,2
  3263  0C22  2C2E               	goto	l2445
  3264  0C23  09B9               	comf	___fttol@lval,f
  3265  0C24  09BA               	comf	___fttol@lval+1,f
  3266  0C25  09BB               	comf	___fttol@lval+2,f
  3267  0C26  09BC               	comf	___fttol@lval+3,f
  3268  0C27  0AB9               	incf	___fttol@lval,f
  3269  0C28  1903               	skipnz
  3270  0C29  0ABA               	incf	___fttol@lval+1,f
  3271  0C2A  1903               	skipnz
  3272  0C2B  0ABB               	incf	___fttol@lval+2,f
  3273  0C2C  1903               	skipnz
  3274  0C2D  0ABC               	incf	___fttol@lval+3,f
  3275  0C2E                     l2445:	
  3276  0C2E  083C               	movf	___fttol@lval+3,w
  3277  0C2F  00B3               	movwf	?___fttol+3
  3278  0C30  083B               	movf	___fttol@lval+2,w
  3279  0C31  00B2               	movwf	?___fttol+2
  3280  0C32  083A               	movf	___fttol@lval+1,w
  3281  0C33  00B1               	movwf	?___fttol+1
  3282  0C34  0839               	movf	___fttol@lval,w
  3283  0C35  00B0               	movwf	?___fttol
  3284  0C36  0008               	return
  3285  0C37                     __end_of___fttol:	
  3286                           
  3287                           	psect	text9
  3288  159C                     __ptext9:	
  3289 ;; *************** function ___ftneg *****************
  3290 ;; Defined at:
  3291 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  f1              3    6[BANK0 ] float 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  3    6[BANK0 ] float 
  3298 ;; Registers used:
  3299 ;;		wreg
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3305 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3308 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;Total ram usage:        3 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    1
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_Set_Freq
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           
  3320                           ;psect for function ___ftneg
  3321  159C                     ___ftneg:	
  3322                           
  3323                           ;incstack = 0
  3324                           ; Regs used in ___ftneg: [wreg]
  3325  159C  0020               	movlb	0	; select bank0
  3326  159D  0828               	movf	___ftneg@f1+2,w
  3327  159E  0427               	iorwf	___ftneg@f1+1,w
  3328  159F  0426               	iorwf	___ftneg@f1,w
  3329  15A0  1903               	skipnz
  3330  15A1  0008               	return
  3331  15A2  3080               	movlw	128
  3332  15A3  06A8               	xorwf	___ftneg@f1+2,f
  3333  15A4  0008               	return
  3334  15A5                     __end_of___ftneg:	
  3335                           
  3336                           	psect	text10
  3337  0C37                     __ptext10:	
  3338 ;; *************** function ___ftmul *****************
  3339 ;; Defined at:
  3340 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  f1              3    0[BANK0 ] float 
  3343 ;;  f2              3    3[BANK0 ] float 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3346 ;;  sign            1   15[BANK0 ] unsigned char 
  3347 ;;  cntr            1   14[BANK0 ] unsigned char 
  3348 ;;  exp             1   10[BANK0 ] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  3    0[BANK0 ] float 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3358 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;Total ram usage:       16 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    2
  3365 ;; This function calls:
  3366 ;;		___ftpack
  3367 ;; This function is called by:
  3368 ;;		_Set_Freq
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           
  3373                           ;psect for function ___ftmul
  3374  0C37                     ___ftmul:	
  3375                           
  3376                           ;incstack = 0
  3377                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3378  0C37  0020               	movlb	0	; select bank0
  3379  0C38  0820               	movf	___ftmul@f1,w
  3380  0C39  00A6               	movwf	??___ftmul
  3381  0C3A  0821               	movf	___ftmul@f1+1,w
  3382  0C3B  00A7               	movwf	??___ftmul+1
  3383  0C3C  0822               	movf	___ftmul@f1+2,w
  3384  0C3D  00A8               	movwf	??___ftmul+2
  3385  0C3E  1003               	clrc
  3386  0C3F  0D27               	rlf	??___ftmul+1,w
  3387  0C40  0D28               	rlf	??___ftmul+2,w
  3388  0C41  00A9               	movwf	??___ftmul+3
  3389  0C42  0829               	movf	??___ftmul+3,w
  3390  0C43  00AA               	movwf	___ftmul@exp
  3391  0C44  08AA               	movf	___ftmul@exp,f
  3392  0C45  1D03               	skipz
  3393  0C46  2C4E               	goto	l3327
  3394  0C47  3000               	movlw	0
  3395  0C48  00A0               	movwf	?___ftmul
  3396  0C49  3000               	movlw	0
  3397  0C4A  00A1               	movwf	?___ftmul+1
  3398  0C4B  3000               	movlw	0
  3399  0C4C  00A2               	movwf	?___ftmul+2
  3400  0C4D  0008               	return
  3401  0C4E                     l3327:	
  3402  0C4E  0823               	movf	___ftmul@f2,w
  3403  0C4F  00A6               	movwf	??___ftmul
  3404  0C50  0824               	movf	___ftmul@f2+1,w
  3405  0C51  00A7               	movwf	??___ftmul+1
  3406  0C52  0825               	movf	___ftmul@f2+2,w
  3407  0C53  00A8               	movwf	??___ftmul+2
  3408  0C54  1003               	clrc
  3409  0C55  0D27               	rlf	??___ftmul+1,w
  3410  0C56  0D28               	rlf	??___ftmul+2,w
  3411  0C57  00A9               	movwf	??___ftmul+3
  3412  0C58  0829               	movf	??___ftmul+3,w
  3413  0C59  00AF               	movwf	___ftmul@sign
  3414  0C5A  08AF               	movf	___ftmul@sign,f
  3415  0C5B  1D03               	skipz
  3416  0C5C  2C64               	goto	l3333
  3417  0C5D  3000               	movlw	0
  3418  0C5E  00A0               	movwf	?___ftmul
  3419  0C5F  3000               	movlw	0
  3420  0C60  00A1               	movwf	?___ftmul+1
  3421  0C61  3000               	movlw	0
  3422  0C62  00A2               	movwf	?___ftmul+2
  3423  0C63  0008               	return
  3424  0C64                     l3333:	
  3425  0C64  082F               	movf	___ftmul@sign,w
  3426  0C65  3E7B               	addlw	123
  3427  0C66  00A6               	movwf	??___ftmul
  3428  0C67  0826               	movf	??___ftmul,w
  3429  0C68  07AA               	addwf	___ftmul@exp,f
  3430  0C69  0820               	movf	___ftmul@f1,w
  3431  0C6A  00A6               	movwf	??___ftmul
  3432  0C6B  0821               	movf	___ftmul@f1+1,w
  3433  0C6C  00A7               	movwf	??___ftmul+1
  3434  0C6D  0822               	movf	___ftmul@f1+2,w
  3435  0C6E  00A8               	movwf	??___ftmul+2
  3436  0C6F  3010               	movlw	16
  3437  0C70                     u4885:	
  3438  0C70  36A8               	lsrf	??___ftmul+2,f
  3439  0C71  0CA7               	rrf	??___ftmul+1,f
  3440  0C72  0CA6               	rrf	??___ftmul,f
  3441  0C73  0B89               	decfsz	9,f
  3442  0C74  2C70               	goto	u4885
  3443  0C75  0826               	movf	??___ftmul,w
  3444  0C76  00A9               	movwf	??___ftmul+3
  3445  0C77  0829               	movf	??___ftmul+3,w
  3446  0C78  00AF               	movwf	___ftmul@sign
  3447  0C79  0823               	movf	___ftmul@f2,w
  3448  0C7A  00A6               	movwf	??___ftmul
  3449  0C7B  0824               	movf	___ftmul@f2+1,w
  3450  0C7C  00A7               	movwf	??___ftmul+1
  3451  0C7D  0825               	movf	___ftmul@f2+2,w
  3452  0C7E  00A8               	movwf	??___ftmul+2
  3453  0C7F  3010               	movlw	16
  3454  0C80                     u4895:	
  3455  0C80  36A8               	lsrf	??___ftmul+2,f
  3456  0C81  0CA7               	rrf	??___ftmul+1,f
  3457  0C82  0CA6               	rrf	??___ftmul,f
  3458  0C83  0B89               	decfsz	9,f
  3459  0C84  2C80               	goto	u4895
  3460  0C85  0826               	movf	??___ftmul,w
  3461  0C86  00A9               	movwf	??___ftmul+3
  3462  0C87  0829               	movf	??___ftmul+3,w
  3463  0C88  06AF               	xorwf	___ftmul@sign,f
  3464  0C89  3080               	movlw	128
  3465  0C8A  00A6               	movwf	??___ftmul
  3466  0C8B  0826               	movf	??___ftmul,w
  3467  0C8C  05AF               	andwf	___ftmul@sign,f
  3468  0C8D  17A1               	bsf	___ftmul@f1+1,7
  3469  0C8E  17A4               	bsf	___ftmul@f2+1,7
  3470  0C8F  30FF               	movlw	255
  3471  0C90  05A3               	andwf	___ftmul@f2,f
  3472  0C91  30FF               	movlw	255
  3473  0C92  05A4               	andwf	___ftmul@f2+1,f
  3474  0C93  3000               	movlw	0
  3475  0C94  05A5               	andwf	___ftmul@f2+2,f
  3476  0C95  3000               	movlw	0
  3477  0C96  00AB               	movwf	___ftmul@f3_as_product
  3478  0C97  3000               	movlw	0
  3479  0C98  00AC               	movwf	___ftmul@f3_as_product+1
  3480  0C99  3000               	movlw	0
  3481  0C9A  00AD               	movwf	___ftmul@f3_as_product+2
  3482  0C9B  3007               	movlw	7
  3483  0C9C  00A6               	movwf	??___ftmul
  3484  0C9D  0826               	movf	??___ftmul,w
  3485  0C9E  00AE               	movwf	___ftmul@cntr
  3486  0C9F                     l3345:	
  3487  0C9F  1C20               	btfss	___ftmul@f1,0
  3488  0CA0  2CA7               	goto	l3349
  3489  0CA1  0823               	movf	___ftmul@f2,w
  3490  0CA2  07AB               	addwf	___ftmul@f3_as_product,f
  3491  0CA3  0824               	movf	___ftmul@f2+1,w
  3492  0CA4  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3493  0CA5  0825               	movf	___ftmul@f2+2,w
  3494  0CA6  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3495  0CA7                     l3349:	
  3496  0CA7  3001               	movlw	1
  3497  0CA8                     u4915:	
  3498  0CA8  36A2               	lsrf	___ftmul@f1+2,f
  3499  0CA9  0CA1               	rrf	___ftmul@f1+1,f
  3500  0CAA  0CA0               	rrf	___ftmul@f1,f
  3501  0CAB  0B89               	decfsz	9,f
  3502  0CAC  2CA8               	goto	u4915
  3503  0CAD  3001               	movlw	1
  3504  0CAE                     u4925:	
  3505  0CAE  35A3               	lslf	___ftmul@f2,f
  3506  0CAF  0DA4               	rlf	___ftmul@f2+1,f
  3507  0CB0  0DA5               	rlf	___ftmul@f2+2,f
  3508  0CB1  0B89               	decfsz	9,f
  3509  0CB2  2CAE               	goto	u4925
  3510  0CB3  3001               	movlw	1
  3511  0CB4  02AE               	subwf	___ftmul@cntr,f
  3512  0CB5  1D03               	btfss	3,2
  3513  0CB6  2C9F               	goto	l3345
  3514  0CB7  3009               	movlw	9
  3515  0CB8  00A6               	movwf	??___ftmul
  3516  0CB9  0826               	movf	??___ftmul,w
  3517  0CBA  00AE               	movwf	___ftmul@cntr
  3518  0CBB                     l3357:	
  3519  0CBB  1C20               	btfss	___ftmul@f1,0
  3520  0CBC  2CC3               	goto	l3361
  3521  0CBD  0823               	movf	___ftmul@f2,w
  3522  0CBE  07AB               	addwf	___ftmul@f3_as_product,f
  3523  0CBF  0824               	movf	___ftmul@f2+1,w
  3524  0CC0  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3525  0CC1  0825               	movf	___ftmul@f2+2,w
  3526  0CC2  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3527  0CC3                     l3361:	
  3528  0CC3  3001               	movlw	1
  3529  0CC4                     u4955:	
  3530  0CC4  36A2               	lsrf	___ftmul@f1+2,f
  3531  0CC5  0CA1               	rrf	___ftmul@f1+1,f
  3532  0CC6  0CA0               	rrf	___ftmul@f1,f
  3533  0CC7  0B89               	decfsz	9,f
  3534  0CC8  2CC4               	goto	u4955
  3535  0CC9  3001               	movlw	1
  3536  0CCA                     u4965:	
  3537  0CCA  36AD               	lsrf	___ftmul@f3_as_product+2,f
  3538  0CCB  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3539  0CCC  0CAB               	rrf	___ftmul@f3_as_product,f
  3540  0CCD  0B89               	decfsz	9,f
  3541  0CCE  2CCA               	goto	u4965
  3542  0CCF  3001               	movlw	1
  3543  0CD0  02AE               	subwf	___ftmul@cntr,f
  3544  0CD1  1D03               	btfss	3,2
  3545  0CD2  2CBB               	goto	l3357
  3546  0CD3  082B               	movf	___ftmul@f3_as_product,w
  3547  0CD4  00F2               	movwf	___ftpack@arg
  3548  0CD5  082C               	movf	___ftmul@f3_as_product+1,w
  3549  0CD6  00F3               	movwf	___ftpack@arg+1
  3550  0CD7  082D               	movf	___ftmul@f3_as_product+2,w
  3551  0CD8  00F4               	movwf	___ftpack@arg+2
  3552  0CD9  082A               	movf	___ftmul@exp,w
  3553  0CDA  00A6               	movwf	??___ftmul
  3554  0CDB  0826               	movf	??___ftmul,w
  3555  0CDC  00F5               	movwf	___ftpack@exp
  3556  0CDD  082F               	movf	___ftmul@sign,w
  3557  0CDE  00A7               	movwf	??___ftmul+1
  3558  0CDF  0827               	movf	??___ftmul+1,w
  3559  0CE0  00F6               	movwf	___ftpack@sign
  3560  0CE1  3188  20EA         	fcall	___ftpack
  3561  0CE3  0872               	movf	?___ftpack,w
  3562  0CE4  0020               	movlb	0	; select bank0
  3563  0CE5  00A0               	movwf	?___ftmul
  3564  0CE6  0873               	movf	?___ftpack+1,w
  3565  0CE7  00A1               	movwf	?___ftmul+1
  3566  0CE8  0874               	movf	?___ftpack+2,w
  3567  0CE9  00A2               	movwf	?___ftmul+2
  3568  0CEA  0008               	return
  3569  0CEB                     __end_of___ftmul:	
  3570                           
  3571                           	psect	text11
  3572  0752                     __ptext11:	
  3573 ;; *************** function ___ftdiv *****************
  3574 ;; Defined at:
  3575 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  f2              3    6[BANK0 ] float 
  3578 ;;  f1              3    9[BANK0 ] float 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;  f3              3   17[BANK0 ] float 
  3581 ;;  sign            1   21[BANK0 ] unsigned char 
  3582 ;;  exp             1   20[BANK0 ] unsigned char 
  3583 ;;  cntr            1   16[BANK0 ] unsigned char 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  3    6[BANK0 ] float 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2, status,0, pclath, cstack
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3593 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;Total ram usage:       16 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; Hardware stack levels required when called:    2
  3600 ;; This function calls:
  3601 ;;		___ftpack
  3602 ;; This function is called by:
  3603 ;;		_Set_Freq
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           
  3608                           ;psect for function ___ftdiv
  3609  0752                     ___ftdiv:	
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3613  0752  0020               	movlb	0	; select bank0
  3614  0753  0829               	movf	___ftdiv@f1,w
  3615  0754  00AC               	movwf	??___ftdiv
  3616  0755  082A               	movf	___ftdiv@f1+1,w
  3617  0756  00AD               	movwf	??___ftdiv+1
  3618  0757  082B               	movf	___ftdiv@f1+2,w
  3619  0758  00AE               	movwf	??___ftdiv+2
  3620  0759  1003               	clrc
  3621  075A  0D2D               	rlf	??___ftdiv+1,w
  3622  075B  0D2E               	rlf	??___ftdiv+2,w
  3623  075C  00AF               	movwf	??___ftdiv+3
  3624  075D  082F               	movf	??___ftdiv+3,w
  3625  075E  00B4               	movwf	___ftdiv@exp
  3626  075F  08B4               	movf	___ftdiv@exp,f
  3627  0760  1D03               	skipz
  3628  0761  2F69               	goto	l3285
  3629  0762  3000               	movlw	0
  3630  0763  00A6               	movwf	?___ftdiv
  3631  0764  3000               	movlw	0
  3632  0765  00A7               	movwf	?___ftdiv+1
  3633  0766  3000               	movlw	0
  3634  0767  00A8               	movwf	?___ftdiv+2
  3635  0768  0008               	return
  3636  0769                     l3285:	
  3637  0769  0826               	movf	___ftdiv@f2,w
  3638  076A  00AC               	movwf	??___ftdiv
  3639  076B  0827               	movf	___ftdiv@f2+1,w
  3640  076C  00AD               	movwf	??___ftdiv+1
  3641  076D  0828               	movf	___ftdiv@f2+2,w
  3642  076E  00AE               	movwf	??___ftdiv+2
  3643  076F  1003               	clrc
  3644  0770  0D2D               	rlf	??___ftdiv+1,w
  3645  0771  0D2E               	rlf	??___ftdiv+2,w
  3646  0772  00AF               	movwf	??___ftdiv+3
  3647  0773  082F               	movf	??___ftdiv+3,w
  3648  0774  00B5               	movwf	___ftdiv@sign
  3649  0775  08B5               	movf	___ftdiv@sign,f
  3650  0776  1D03               	skipz
  3651  0777  2F7F               	goto	l3291
  3652  0778  3000               	movlw	0
  3653  0779  00A6               	movwf	?___ftdiv
  3654  077A  3000               	movlw	0
  3655  077B  00A7               	movwf	?___ftdiv+1
  3656  077C  3000               	movlw	0
  3657  077D  00A8               	movwf	?___ftdiv+2
  3658  077E  0008               	return
  3659  077F                     l3291:	
  3660  077F  3000               	movlw	0
  3661  0780  00B1               	movwf	___ftdiv@f3
  3662  0781  3000               	movlw	0
  3663  0782  00B2               	movwf	___ftdiv@f3+1
  3664  0783  3000               	movlw	0
  3665  0784  00B3               	movwf	___ftdiv@f3+2
  3666  0785  3089               	movlw	137
  3667  0786  0735               	addwf	___ftdiv@sign,w
  3668  0787  00AC               	movwf	??___ftdiv
  3669  0788  082C               	movf	??___ftdiv,w
  3670  0789  02B4               	subwf	___ftdiv@exp,f
  3671  078A  0829               	movf	___ftdiv@f1,w
  3672  078B  00AC               	movwf	??___ftdiv
  3673  078C  082A               	movf	___ftdiv@f1+1,w
  3674  078D  00AD               	movwf	??___ftdiv+1
  3675  078E  082B               	movf	___ftdiv@f1+2,w
  3676  078F  00AE               	movwf	??___ftdiv+2
  3677  0790  3010               	movlw	16
  3678  0791                     u4805:	
  3679  0791  36AE               	lsrf	??___ftdiv+2,f
  3680  0792  0CAD               	rrf	??___ftdiv+1,f
  3681  0793  0CAC               	rrf	??___ftdiv,f
  3682  0794  0B89               	decfsz	9,f
  3683  0795  2F91               	goto	u4805
  3684  0796  082C               	movf	??___ftdiv,w
  3685  0797  00AF               	movwf	??___ftdiv+3
  3686  0798  082F               	movf	??___ftdiv+3,w
  3687  0799  00B5               	movwf	___ftdiv@sign
  3688  079A  0826               	movf	___ftdiv@f2,w
  3689  079B  00AC               	movwf	??___ftdiv
  3690  079C  0827               	movf	___ftdiv@f2+1,w
  3691  079D  00AD               	movwf	??___ftdiv+1
  3692  079E  0828               	movf	___ftdiv@f2+2,w
  3693  079F  00AE               	movwf	??___ftdiv+2
  3694  07A0  3010               	movlw	16
  3695  07A1                     u4815:	
  3696  07A1  36AE               	lsrf	??___ftdiv+2,f
  3697  07A2  0CAD               	rrf	??___ftdiv+1,f
  3698  07A3  0CAC               	rrf	??___ftdiv,f
  3699  07A4  0B89               	decfsz	9,f
  3700  07A5  2FA1               	goto	u4815
  3701  07A6  082C               	movf	??___ftdiv,w
  3702  07A7  00AF               	movwf	??___ftdiv+3
  3703  07A8  082F               	movf	??___ftdiv+3,w
  3704  07A9  06B5               	xorwf	___ftdiv@sign,f
  3705  07AA  3080               	movlw	128
  3706  07AB  00AC               	movwf	??___ftdiv
  3707  07AC  082C               	movf	??___ftdiv,w
  3708  07AD  05B5               	andwf	___ftdiv@sign,f
  3709  07AE  17AA               	bsf	___ftdiv@f1+1,7
  3710  07AF  30FF               	movlw	255
  3711  07B0  05A9               	andwf	___ftdiv@f1,f
  3712  07B1  30FF               	movlw	255
  3713  07B2  05AA               	andwf	___ftdiv@f1+1,f
  3714  07B3  3000               	movlw	0
  3715  07B4  05AB               	andwf	___ftdiv@f1+2,f
  3716  07B5  17A7               	bsf	___ftdiv@f2+1,7
  3717  07B6  30FF               	movlw	255
  3718  07B7  05A6               	andwf	___ftdiv@f2,f
  3719  07B8  30FF               	movlw	255
  3720  07B9  05A7               	andwf	___ftdiv@f2+1,f
  3721  07BA  3000               	movlw	0
  3722  07BB  05A8               	andwf	___ftdiv@f2+2,f
  3723  07BC  3018               	movlw	24
  3724  07BD  00AC               	movwf	??___ftdiv
  3725  07BE  082C               	movf	??___ftdiv,w
  3726  07BF  00B0               	movwf	___ftdiv@cntr
  3727  07C0                     l3305:	
  3728  07C0  3001               	movlw	1
  3729  07C1                     u4825:	
  3730  07C1  35B1               	lslf	___ftdiv@f3,f
  3731  07C2  0DB2               	rlf	___ftdiv@f3+1,f
  3732  07C3  0DB3               	rlf	___ftdiv@f3+2,f
  3733  07C4  0B89               	decfsz	9,f
  3734  07C5  2FC1               	goto	u4825
  3735  07C6  0828               	movf	___ftdiv@f2+2,w
  3736  07C7  022B               	subwf	___ftdiv@f1+2,w
  3737  07C8  1D03               	skipz
  3738  07C9  2FD0               	goto	u4835
  3739  07CA  0827               	movf	___ftdiv@f2+1,w
  3740  07CB  022A               	subwf	___ftdiv@f1+1,w
  3741  07CC  1D03               	skipz
  3742  07CD  2FD0               	goto	u4835
  3743  07CE  0826               	movf	___ftdiv@f2,w
  3744  07CF  0229               	subwf	___ftdiv@f1,w
  3745  07D0                     u4835:	
  3746  07D0  1C03               	skipc
  3747  07D1  2FD9               	goto	l3313
  3748  07D2  0826               	movf	___ftdiv@f2,w
  3749  07D3  02A9               	subwf	___ftdiv@f1,f
  3750  07D4  0827               	movf	___ftdiv@f2+1,w
  3751  07D5  3BAA               	subwfb	___ftdiv@f1+1,f
  3752  07D6  0828               	movf	___ftdiv@f2+2,w
  3753  07D7  3BAB               	subwfb	___ftdiv@f1+2,f
  3754  07D8  1431               	bsf	___ftdiv@f3,0
  3755  07D9                     l3313:	
  3756  07D9  3001               	movlw	1
  3757  07DA                     u4845:	
  3758  07DA  35A9               	lslf	___ftdiv@f1,f
  3759  07DB  0DAA               	rlf	___ftdiv@f1+1,f
  3760  07DC  0DAB               	rlf	___ftdiv@f1+2,f
  3761  07DD  0B89               	decfsz	9,f
  3762  07DE  2FDA               	goto	u4845
  3763  07DF  3001               	movlw	1
  3764  07E0  02B0               	subwf	___ftdiv@cntr,f
  3765  07E1  1D03               	btfss	3,2
  3766  07E2  2FC0               	goto	l3305
  3767  07E3  0831               	movf	___ftdiv@f3,w
  3768  07E4  00F2               	movwf	___ftpack@arg
  3769  07E5  0832               	movf	___ftdiv@f3+1,w
  3770  07E6  00F3               	movwf	___ftpack@arg+1
  3771  07E7  0833               	movf	___ftdiv@f3+2,w
  3772  07E8  00F4               	movwf	___ftpack@arg+2
  3773  07E9  0834               	movf	___ftdiv@exp,w
  3774  07EA  00AC               	movwf	??___ftdiv
  3775  07EB  082C               	movf	??___ftdiv,w
  3776  07EC  00F5               	movwf	___ftpack@exp
  3777  07ED  0835               	movf	___ftdiv@sign,w
  3778  07EE  00AD               	movwf	??___ftdiv+1
  3779  07EF  082D               	movf	??___ftdiv+1,w
  3780  07F0  00F6               	movwf	___ftpack@sign
  3781  07F1  3188  20EA         	fcall	___ftpack
  3782  07F3  0872               	movf	?___ftpack,w
  3783  07F4  0020               	movlb	0	; select bank0
  3784  07F5  00A6               	movwf	?___ftdiv
  3785  07F6  0873               	movf	?___ftpack+1,w
  3786  07F7  00A7               	movwf	?___ftdiv+1
  3787  07F8  0874               	movf	?___ftpack+2,w
  3788  07F9  00A8               	movwf	?___ftdiv+2
  3789  07FA  0008               	return
  3790  07FB                     __end_of___ftdiv:	
  3791                           
  3792                           	psect	text12
  3793  0584                     __ptext12:	
  3794 ;; *************** function ___ftadd *****************
  3795 ;; Defined at:
  3796 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  f1              3    9[BANK0 ] float 
  3799 ;;  f2              3   12[BANK0 ] float 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  exp1            1   21[BANK0 ] unsigned char 
  3802 ;;  exp2            1   20[BANK0 ] unsigned char 
  3803 ;;  sign            1   19[BANK0 ] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  3    9[BANK0 ] float 
  3806 ;; Registers used:
  3807 ;;		wreg, status,2, status,0, pclath, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3813 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3814 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3815 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3816 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3817 ;;Total ram usage:       13 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    2
  3820 ;; This function calls:
  3821 ;;		___ftpack
  3822 ;; This function is called by:
  3823 ;;		_Set_Freq
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           
  3828                           ;psect for function ___ftadd
  3829  0584                     ___ftadd:	
  3830                           
  3831                           ;incstack = 0
  3832                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3833  0584  0020               	movlb	0	; select bank0
  3834  0585  0829               	movf	___ftadd@f1,w
  3835  0586  00AF               	movwf	??___ftadd
  3836  0587  082A               	movf	___ftadd@f1+1,w
  3837  0588  00B0               	movwf	??___ftadd+1
  3838  0589  082B               	movf	___ftadd@f1+2,w
  3839  058A  00B1               	movwf	??___ftadd+2
  3840  058B  1003               	clrc
  3841  058C  0D30               	rlf	??___ftadd+1,w
  3842  058D  0D31               	rlf	??___ftadd+2,w
  3843  058E  00B2               	movwf	??___ftadd+3
  3844  058F  0832               	movf	??___ftadd+3,w
  3845  0590  00B5               	movwf	___ftadd@exp1
  3846  0591  082C               	movf	___ftadd@f2,w
  3847  0592  00AF               	movwf	??___ftadd
  3848  0593  082D               	movf	___ftadd@f2+1,w
  3849  0594  00B0               	movwf	??___ftadd+1
  3850  0595  082E               	movf	___ftadd@f2+2,w
  3851  0596  00B1               	movwf	??___ftadd+2
  3852  0597  1003               	clrc
  3853  0598  0D30               	rlf	??___ftadd+1,w
  3854  0599  0D31               	rlf	??___ftadd+2,w
  3855  059A  00B2               	movwf	??___ftadd+3
  3856  059B  0832               	movf	??___ftadd+3,w
  3857  059C  00B4               	movwf	___ftadd@exp2
  3858  059D  0835               	movf	___ftadd@exp1,w
  3859  059E  1903               	btfsc	3,2
  3860  059F  2DAC               	goto	l3215
  3861  05A0  0834               	movf	___ftadd@exp2,w
  3862  05A1  0235               	subwf	___ftadd@exp1,w
  3863  05A2  1803               	skipnc
  3864  05A3  2DB3               	goto	l3219
  3865  05A4  0335               	decf	___ftadd@exp1,w
  3866  05A5  3AFF               	xorlw	255
  3867  05A6  0734               	addwf	___ftadd@exp2,w
  3868  05A7  00AF               	movwf	??___ftadd
  3869  05A8  3019               	movlw	25
  3870  05A9  022F               	subwf	??___ftadd,w
  3871  05AA  1C03               	skipc
  3872  05AB  2DB3               	goto	l3219
  3873  05AC                     l3215:	
  3874  05AC  082C               	movf	___ftadd@f2,w
  3875  05AD  00A9               	movwf	?___ftadd
  3876  05AE  082D               	movf	___ftadd@f2+1,w
  3877  05AF  00AA               	movwf	?___ftadd+1
  3878  05B0  082E               	movf	___ftadd@f2+2,w
  3879  05B1  00AB               	movwf	?___ftadd+2
  3880  05B2  0008               	return
  3881  05B3                     l3219:	
  3882  05B3  0834               	movf	___ftadd@exp2,w
  3883  05B4  1903               	btfsc	3,2
  3884  05B5  0008               	return
  3885  05B6  0835               	movf	___ftadd@exp1,w
  3886  05B7  0234               	subwf	___ftadd@exp2,w
  3887  05B8  1803               	skipnc
  3888  05B9  2DC2               	goto	l3225
  3889  05BA  0334               	decf	___ftadd@exp2,w
  3890  05BB  3AFF               	xorlw	255
  3891  05BC  0735               	addwf	___ftadd@exp1,w
  3892  05BD  00AF               	movwf	??___ftadd
  3893  05BE  3019               	movlw	25
  3894  05BF  022F               	subwf	??___ftadd,w
  3895  05C0  1803               	btfsc	3,0
  3896  05C1  0008               	return
  3897  05C2                     l3225:	
  3898  05C2  3006               	movlw	6
  3899  05C3  00AF               	movwf	??___ftadd
  3900  05C4  082F               	movf	??___ftadd,w
  3901  05C5  00B3               	movwf	___ftadd@sign
  3902  05C6  1BAB               	btfsc	___ftadd@f1+2,7
  3903  05C7  17B3               	bsf	___ftadd@sign,7
  3904  05C8  1BAE               	btfsc	___ftadd@f2+2,7
  3905  05C9  1733               	bsf	___ftadd@sign,6
  3906  05CA  17AA               	bsf	___ftadd@f1+1,7
  3907  05CB  30FF               	movlw	255
  3908  05CC  05A9               	andwf	___ftadd@f1,f
  3909  05CD  30FF               	movlw	255
  3910  05CE  05AA               	andwf	___ftadd@f1+1,f
  3911  05CF  3000               	movlw	0
  3912  05D0  05AB               	andwf	___ftadd@f1+2,f
  3913  05D1  17AD               	bsf	___ftadd@f2+1,7
  3914  05D2  30FF               	movlw	255
  3915  05D3  05AC               	andwf	___ftadd@f2,f
  3916  05D4  30FF               	movlw	255
  3917  05D5  05AD               	andwf	___ftadd@f2+1,f
  3918  05D6  3000               	movlw	0
  3919  05D7  05AE               	andwf	___ftadd@f2+2,f
  3920  05D8  0834               	movf	___ftadd@exp2,w
  3921  05D9  0235               	subwf	___ftadd@exp1,w
  3922  05DA  1803               	skipnc
  3923  05DB  2DFE               	goto	l3247
  3924  05DC                     l3237:	
  3925  05DC  3001               	movlw	1
  3926  05DD                     u4645:	
  3927  05DD  35AC               	lslf	___ftadd@f2,f
  3928  05DE  0DAD               	rlf	___ftadd@f2+1,f
  3929  05DF  0DAE               	rlf	___ftadd@f2+2,f
  3930  05E0  0B89               	decfsz	9,f
  3931  05E1  2DDD               	goto	u4645
  3932  05E2  3001               	movlw	1
  3933  05E3  02B4               	subwf	___ftadd@exp2,f
  3934  05E4  0834               	movf	___ftadd@exp2,w
  3935  05E5  0635               	xorwf	___ftadd@exp1,w
  3936  05E6  1903               	skipnz
  3937  05E7  2DF9               	goto	l3245
  3938  05E8  3001               	movlw	1
  3939  05E9  02B3               	subwf	___ftadd@sign,f
  3940  05EA  0833               	movf	___ftadd@sign,w
  3941  05EB  3907               	andlw	7
  3942  05EC  1903               	btfsc	3,2
  3943  05ED  2DF9               	goto	l3245
  3944  05EE  2DDC               	goto	l3237
  3945  05EF                     l3243:	
  3946  05EF  3001               	movlw	1
  3947  05F0                     u4675:	
  3948  05F0  36AB               	lsrf	___ftadd@f1+2,f
  3949  05F1  0CAA               	rrf	___ftadd@f1+1,f
  3950  05F2  0CA9               	rrf	___ftadd@f1,f
  3951  05F3  0B89               	decfsz	9,f
  3952  05F4  2DF0               	goto	u4675
  3953  05F5  3001               	movlw	1
  3954  05F6  00AF               	movwf	??___ftadd
  3955  05F7  082F               	movf	??___ftadd,w
  3956  05F8  07B5               	addwf	___ftadd@exp1,f
  3957  05F9                     l3245:	
  3958  05F9  0835               	movf	___ftadd@exp1,w
  3959  05FA  0634               	xorwf	___ftadd@exp2,w
  3960  05FB  1903               	btfsc	3,2
  3961  05FC  2E23               	goto	l762
  3962  05FD  2DEF               	goto	l3243
  3963  05FE                     l3247:	
  3964  05FE  0835               	movf	___ftadd@exp1,w
  3965  05FF  0234               	subwf	___ftadd@exp2,w
  3966  0600  1803               	skipnc
  3967  0601  2E23               	goto	l762
  3968  0602                     l3249:	
  3969  0602  3001               	movlw	1
  3970  0603                     u4705:	
  3971  0603  35A9               	lslf	___ftadd@f1,f
  3972  0604  0DAA               	rlf	___ftadd@f1+1,f
  3973  0605  0DAB               	rlf	___ftadd@f1+2,f
  3974  0606  0B89               	decfsz	9,f
  3975  0607  2E03               	goto	u4705
  3976  0608  3001               	movlw	1
  3977  0609  02B5               	subwf	___ftadd@exp1,f
  3978  060A  0834               	movf	___ftadd@exp2,w
  3979  060B  0635               	xorwf	___ftadd@exp1,w
  3980  060C  1903               	skipnz
  3981  060D  2E1F               	goto	l3257
  3982  060E  3001               	movlw	1
  3983  060F  02B3               	subwf	___ftadd@sign,f
  3984  0610  0833               	movf	___ftadd@sign,w
  3985  0611  3907               	andlw	7
  3986  0612  1903               	btfsc	3,2
  3987  0613  2E1F               	goto	l3257
  3988  0614  2E02               	goto	l3249
  3989  0615                     l3255:	
  3990  0615  3001               	movlw	1
  3991  0616                     u4735:	
  3992  0616  36AE               	lsrf	___ftadd@f2+2,f
  3993  0617  0CAD               	rrf	___ftadd@f2+1,f
  3994  0618  0CAC               	rrf	___ftadd@f2,f
  3995  0619  0B89               	decfsz	9,f
  3996  061A  2E16               	goto	u4735
  3997  061B  3001               	movlw	1
  3998  061C  00AF               	movwf	??___ftadd
  3999  061D  082F               	movf	??___ftadd,w
  4000  061E  07B4               	addwf	___ftadd@exp2,f
  4001  061F                     l3257:	
  4002  061F  0835               	movf	___ftadd@exp1,w
  4003  0620  0634               	xorwf	___ftadd@exp2,w
  4004  0621  1D03               	skipz
  4005  0622  2E15               	goto	l3255
  4006  0623                     l762:	
  4007  0623  1FB3               	btfss	___ftadd@sign,7
  4008  0624  2E35               	goto	l3261
  4009  0625  30FF               	movlw	255
  4010  0626  06A9               	xorwf	___ftadd@f1,f
  4011  0627  30FF               	movlw	255
  4012  0628  06AA               	xorwf	___ftadd@f1+1,f
  4013  0629  30FF               	movlw	255
  4014  062A  06AB               	xorwf	___ftadd@f1+2,f
  4015  062B  3001               	movlw	1
  4016  062C  07A9               	addwf	___ftadd@f1,f
  4017  062D  3000               	movlw	0
  4018  062E  1803               	skipnc
  4019  062F  3001               	movlw	1
  4020  0630  07AA               	addwf	___ftadd@f1+1,f
  4021  0631  3000               	movlw	0
  4022  0632  1803               	skipnc
  4023  0633  3001               	movlw	1
  4024  0634  07AB               	addwf	___ftadd@f1+2,f
  4025  0635                     l3261:	
  4026  0635  1F33               	btfss	___ftadd@sign,6
  4027  0636  2E47               	goto	l3265
  4028  0637  30FF               	movlw	255
  4029  0638  06AC               	xorwf	___ftadd@f2,f
  4030  0639  30FF               	movlw	255
  4031  063A  06AD               	xorwf	___ftadd@f2+1,f
  4032  063B  30FF               	movlw	255
  4033  063C  06AE               	xorwf	___ftadd@f2+2,f
  4034  063D  3001               	movlw	1
  4035  063E  07AC               	addwf	___ftadd@f2,f
  4036  063F  3000               	movlw	0
  4037  0640  1803               	skipnc
  4038  0641  3001               	movlw	1
  4039  0642  07AD               	addwf	___ftadd@f2+1,f
  4040  0643  3000               	movlw	0
  4041  0644  1803               	skipnc
  4042  0645  3001               	movlw	1
  4043  0646  07AE               	addwf	___ftadd@f2+2,f
  4044  0647                     l3265:	
  4045  0647  01B3               	clrf	___ftadd@sign
  4046  0648  0829               	movf	___ftadd@f1,w
  4047  0649  07AC               	addwf	___ftadd@f2,f
  4048  064A  082A               	movf	___ftadd@f1+1,w
  4049  064B  3DAD               	addwfc	___ftadd@f2+1,f
  4050  064C  082B               	movf	___ftadd@f1+2,w
  4051  064D  3DAE               	addwfc	___ftadd@f2+2,f
  4052  064E  1FAE               	btfss	___ftadd@f2+2,7
  4053  064F  2E62               	goto	l3275
  4054  0650  30FF               	movlw	255
  4055  0651  06AC               	xorwf	___ftadd@f2,f
  4056  0652  30FF               	movlw	255
  4057  0653  06AD               	xorwf	___ftadd@f2+1,f
  4058  0654  30FF               	movlw	255
  4059  0655  06AE               	xorwf	___ftadd@f2+2,f
  4060  0656  3001               	movlw	1
  4061  0657  07AC               	addwf	___ftadd@f2,f
  4062  0658  3000               	movlw	0
  4063  0659  1803               	skipnc
  4064  065A  3001               	movlw	1
  4065  065B  07AD               	addwf	___ftadd@f2+1,f
  4066  065C  3000               	movlw	0
  4067  065D  1803               	skipnc
  4068  065E  3001               	movlw	1
  4069  065F  07AE               	addwf	___ftadd@f2+2,f
  4070  0660  01B3               	clrf	___ftadd@sign
  4071  0661  0AB3               	incf	___ftadd@sign,f
  4072  0662                     l3275:	
  4073  0662  082C               	movf	___ftadd@f2,w
  4074  0663  00F2               	movwf	___ftpack@arg
  4075  0664  082D               	movf	___ftadd@f2+1,w
  4076  0665  00F3               	movwf	___ftpack@arg+1
  4077  0666  082E               	movf	___ftadd@f2+2,w
  4078  0667  00F4               	movwf	___ftpack@arg+2
  4079  0668  0835               	movf	___ftadd@exp1,w
  4080  0669  00AF               	movwf	??___ftadd
  4081  066A  082F               	movf	??___ftadd,w
  4082  066B  00F5               	movwf	___ftpack@exp
  4083  066C  0833               	movf	___ftadd@sign,w
  4084  066D  00B0               	movwf	??___ftadd+1
  4085  066E  0830               	movf	??___ftadd+1,w
  4086  066F  00F6               	movwf	___ftpack@sign
  4087  0670  3188  20EA         	fcall	___ftpack
  4088  0672  0872               	movf	?___ftpack,w
  4089  0673  0020               	movlb	0	; select bank0
  4090  0674  00A9               	movwf	?___ftadd
  4091  0675  0873               	movf	?___ftpack+1,w
  4092  0676  00AA               	movwf	?___ftadd+1
  4093  0677  0874               	movf	?___ftpack+2,w
  4094  0678  00AB               	movwf	?___ftadd+2
  4095  0679  0008               	return
  4096  067A                     __end_of___ftadd:	
  4097                           
  4098                           	psect	text13
  4099  08EA                     __ptext13:	
  4100 ;; *************** function ___ftpack *****************
  4101 ;; Defined at:
  4102 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  arg             3    2[COMMON] unsigned um
  4105 ;;  exp             1    5[COMMON] unsigned char 
  4106 ;;  sign            1    6[COMMON] unsigned char 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  3    2[COMMON] float 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4118 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;Total ram usage:        8 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    1
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		___ftadd
  4129 ;;		___ftdiv
  4130 ;;		___ftmul
  4131 ;;		___lltoft
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function ___ftpack
  4137  08EA                     ___ftpack:	
  4138                           
  4139                           ;incstack = 0
  4140                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4141  08EA  0875               	movf	___ftpack@exp,w
  4142  08EB  1903               	btfsc	3,2
  4143  08EC  28F2               	goto	l3123
  4144  08ED  0874               	movf	___ftpack@arg+2,w
  4145  08EE  0473               	iorwf	___ftpack@arg+1,w
  4146  08EF  0472               	iorwf	___ftpack@arg,w
  4147  08F0  1D03               	skipz
  4148  08F1  2903               	goto	l3129
  4149  08F2                     l3123:	
  4150  08F2  3000               	movlw	0
  4151  08F3  00F2               	movwf	?___ftpack
  4152  08F4  3000               	movlw	0
  4153  08F5  00F3               	movwf	?___ftpack+1
  4154  08F6  3000               	movlw	0
  4155  08F7  00F4               	movwf	?___ftpack+2
  4156  08F8  0008               	return
  4157  08F9                     l3127:	
  4158  08F9  3001               	movlw	1
  4159  08FA  00F7               	movwf	??___ftpack
  4160  08FB  0877               	movf	??___ftpack,w
  4161  08FC  07F5               	addwf	___ftpack@exp,f
  4162  08FD  3001               	movlw	1
  4163  08FE                     u4355:	
  4164  08FE  36F4               	lsrf	___ftpack@arg+2,f
  4165  08FF  0CF3               	rrf	___ftpack@arg+1,f
  4166  0900  0CF2               	rrf	___ftpack@arg,f
  4167  0901  0B89               	decfsz	9,f
  4168  0902  28FE               	goto	u4355
  4169  0903                     l3129:	
  4170  0903  30FE               	movlw	254
  4171  0904  0574               	andwf	___ftpack@arg+2,w
  4172  0905  1903               	btfsc	3,2
  4173  0906  291C               	goto	l733
  4174  0907  28F9               	goto	l3127
  4175  0908                     l3131:	
  4176  0908  3001               	movlw	1
  4177  0909  00F7               	movwf	??___ftpack
  4178  090A  0877               	movf	??___ftpack,w
  4179  090B  07F5               	addwf	___ftpack@exp,f
  4180  090C  3001               	movlw	1
  4181  090D  07F2               	addwf	___ftpack@arg,f
  4182  090E  3000               	movlw	0
  4183  090F  1803               	skipnc
  4184  0910  3001               	movlw	1
  4185  0911  07F3               	addwf	___ftpack@arg+1,f
  4186  0912  3000               	movlw	0
  4187  0913  1803               	skipnc
  4188  0914  3001               	movlw	1
  4189  0915  07F4               	addwf	___ftpack@arg+2,f
  4190  0916  3001               	movlw	1
  4191  0917                     u4375:	
  4192  0917  36F4               	lsrf	___ftpack@arg+2,f
  4193  0918  0CF3               	rrf	___ftpack@arg+1,f
  4194  0919  0CF2               	rrf	___ftpack@arg,f
  4195  091A  0B89               	decfsz	9,f
  4196  091B  2917               	goto	u4375
  4197  091C                     l733:	
  4198  091C  30FF               	movlw	255
  4199  091D  0574               	andwf	___ftpack@arg+2,w
  4200  091E  1903               	btfsc	3,2
  4201  091F  2929               	goto	l3139
  4202  0920  2908               	goto	l3131
  4203  0921                     l3137:	
  4204  0921  3001               	movlw	1
  4205  0922  02F5               	subwf	___ftpack@exp,f
  4206  0923  3001               	movlw	1
  4207  0924                     u4395:	
  4208  0924  35F2               	lslf	___ftpack@arg,f
  4209  0925  0DF3               	rlf	___ftpack@arg+1,f
  4210  0926  0DF4               	rlf	___ftpack@arg+2,f
  4211  0927  0B89               	decfsz	9,f
  4212  0928  2924               	goto	u4395
  4213  0929                     l3139:	
  4214  0929  1FF3               	btfss	___ftpack@arg+1,7
  4215  092A  2921               	goto	l3137
  4216  092B  1875               	btfsc	___ftpack@exp,0
  4217  092C  2933               	goto	l739
  4218  092D  30FF               	movlw	255
  4219  092E  05F2               	andwf	___ftpack@arg,f
  4220  092F  307F               	movlw	127
  4221  0930  05F3               	andwf	___ftpack@arg+1,f
  4222  0931  30FF               	movlw	255
  4223  0932  05F4               	andwf	___ftpack@arg+2,f
  4224  0933                     l739:	
  4225  0933  1003               	clrc
  4226  0934  0CF5               	rrf	___ftpack@exp,f
  4227  0935  0875               	movf	___ftpack@exp,w
  4228  0936  00F7               	movwf	??___ftpack
  4229  0937  01F8               	clrf	??___ftpack+1
  4230  0938  01F9               	clrf	??___ftpack+2
  4231  0939  3010               	movlw	16
  4232  093A                     u4425:	
  4233  093A  35F7               	lslf	??___ftpack,f
  4234  093B  0DF8               	rlf	??___ftpack+1,f
  4235  093C  0DF9               	rlf	??___ftpack+2,f
  4236  093D  0B89               	decfsz	9,f
  4237  093E  293A               	goto	u4425
  4238  093F  0877               	movf	??___ftpack,w
  4239  0940  04F2               	iorwf	___ftpack@arg,f
  4240  0941  0878               	movf	??___ftpack+1,w
  4241  0942  04F3               	iorwf	___ftpack@arg+1,f
  4242  0943  0879               	movf	??___ftpack+2,w
  4243  0944  04F4               	iorwf	___ftpack@arg+2,f
  4244  0945  0876               	movf	___ftpack@sign,w
  4245  0946  1903               	btfsc	3,2
  4246  0947  0008               	return
  4247  0948  17F4               	bsf	___ftpack@arg+2,7
  4248  0949  0008               	return
  4249  094A                     __end_of___ftpack:	
  4250                           
  4251                           	psect	text14
  4252  0B2E                     __ptext14:	
  4253 ;; *************** function ___aldiv *****************
  4254 ;; Defined at:
  4255 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  divisor         4    2[COMMON] long 
  4258 ;;  dividend        4    6[COMMON] long 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  quotient        4    3[BANK0 ] long 
  4261 ;;  sign            1    2[BANK0 ] unsigned char 
  4262 ;;  counter         1    1[BANK0 ] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  4    2[COMMON] long 
  4265 ;; Registers used:
  4266 ;;		wreg, status,2, status,0
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4272 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Totals:         8       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;Total ram usage:       15 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:    1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_Set_Freq
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           
  4287                           ;psect for function ___aldiv
  4288  0B2E                     ___aldiv:	
  4289                           
  4290                           ;incstack = 0
  4291                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4292  0B2E  0020               	movlb	0	; select bank0
  4293  0B2F  01A2               	clrf	___aldiv@sign
  4294  0B30  1FF5               	btfss	___aldiv@divisor+3,7
  4295  0B31  2B3F               	goto	l627
  4296  0B32  09F2               	comf	___aldiv@divisor,f
  4297  0B33  09F3               	comf	___aldiv@divisor+1,f
  4298  0B34  09F4               	comf	___aldiv@divisor+2,f
  4299  0B35  09F5               	comf	___aldiv@divisor+3,f
  4300  0B36  0AF2               	incf	___aldiv@divisor,f
  4301  0B37  1903               	skipnz
  4302  0B38  0AF3               	incf	___aldiv@divisor+1,f
  4303  0B39  1903               	skipnz
  4304  0B3A  0AF4               	incf	___aldiv@divisor+2,f
  4305  0B3B  1903               	skipnz
  4306  0B3C  0AF5               	incf	___aldiv@divisor+3,f
  4307  0B3D  01A2               	clrf	___aldiv@sign
  4308  0B3E  0AA2               	incf	___aldiv@sign,f
  4309  0B3F                     l627:	
  4310  0B3F  1FF9               	btfss	___aldiv@dividend+3,7
  4311  0B40  2B50               	goto	l3177
  4312  0B41  09F6               	comf	___aldiv@dividend,f
  4313  0B42  09F7               	comf	___aldiv@dividend+1,f
  4314  0B43  09F8               	comf	___aldiv@dividend+2,f
  4315  0B44  09F9               	comf	___aldiv@dividend+3,f
  4316  0B45  0AF6               	incf	___aldiv@dividend,f
  4317  0B46  1903               	skipnz
  4318  0B47  0AF7               	incf	___aldiv@dividend+1,f
  4319  0B48  1903               	skipnz
  4320  0B49  0AF8               	incf	___aldiv@dividend+2,f
  4321  0B4A  1903               	skipnz
  4322  0B4B  0AF9               	incf	___aldiv@dividend+3,f
  4323  0B4C  3001               	movlw	1
  4324  0B4D  00A0               	movwf	??___aldiv
  4325  0B4E  0820               	movf	??___aldiv,w
  4326  0B4F  06A2               	xorwf	___aldiv@sign,f
  4327  0B50                     l3177:	
  4328  0B50  3000               	movlw	0
  4329  0B51  00A6               	movwf	___aldiv@quotient+3
  4330  0B52  3000               	movlw	0
  4331  0B53  00A5               	movwf	___aldiv@quotient+2
  4332  0B54  3000               	movlw	0
  4333  0B55  00A4               	movwf	___aldiv@quotient+1
  4334  0B56  3000               	movlw	0
  4335  0B57  00A3               	movwf	___aldiv@quotient
  4336  0B58  0875               	movf	___aldiv@divisor+3,w
  4337  0B59  0474               	iorwf	___aldiv@divisor+2,w
  4338  0B5A  0473               	iorwf	___aldiv@divisor+1,w
  4339  0B5B  0472               	iorwf	___aldiv@divisor,w
  4340  0B5C  1903               	skipnz
  4341  0B5D  2B99               	goto	l3199
  4342  0B5E  01A1               	clrf	___aldiv@counter
  4343  0B5F  0AA1               	incf	___aldiv@counter,f
  4344  0B60                     l3185:	
  4345  0B60  1BF5               	btfsc	___aldiv@divisor+3,7
  4346  0B61  2B6E               	goto	l3187
  4347  0B62  3001               	movlw	1
  4348  0B63                     u4485:	
  4349  0B63  35F2               	lslf	___aldiv@divisor,f
  4350  0B64  0DF3               	rlf	___aldiv@divisor+1,f
  4351  0B65  0DF4               	rlf	___aldiv@divisor+2,f
  4352  0B66  0DF5               	rlf	___aldiv@divisor+3,f
  4353  0B67  0B89               	decfsz	9,f
  4354  0B68  2B63               	goto	u4485
  4355  0B69  3001               	movlw	1
  4356  0B6A  00A0               	movwf	??___aldiv
  4357  0B6B  0820               	movf	??___aldiv,w
  4358  0B6C  07A1               	addwf	___aldiv@counter,f
  4359  0B6D  2B60               	goto	l3185
  4360  0B6E                     l3187:	
  4361  0B6E  3001               	movlw	1
  4362  0B6F                     u4505:	
  4363  0B6F  35A3               	lslf	___aldiv@quotient,f
  4364  0B70  0DA4               	rlf	___aldiv@quotient+1,f
  4365  0B71  0DA5               	rlf	___aldiv@quotient+2,f
  4366  0B72  0DA6               	rlf	___aldiv@quotient+3,f
  4367  0B73  0B89               	decfsz	9,f
  4368  0B74  2B6F               	goto	u4505
  4369  0B75  0875               	movf	___aldiv@divisor+3,w
  4370  0B76  0279               	subwf	___aldiv@dividend+3,w
  4371  0B77  1D03               	skipz
  4372  0B78  2B83               	goto	u4515
  4373  0B79  0874               	movf	___aldiv@divisor+2,w
  4374  0B7A  0278               	subwf	___aldiv@dividend+2,w
  4375  0B7B  1D03               	skipz
  4376  0B7C  2B83               	goto	u4515
  4377  0B7D  0873               	movf	___aldiv@divisor+1,w
  4378  0B7E  0277               	subwf	___aldiv@dividend+1,w
  4379  0B7F  1D03               	skipz
  4380  0B80  2B83               	goto	u4515
  4381  0B81  0872               	movf	___aldiv@divisor,w
  4382  0B82  0276               	subwf	___aldiv@dividend,w
  4383  0B83                     u4515:	
  4384  0B83  1C03               	skipc
  4385  0B84  2B8E               	goto	l3195
  4386  0B85  0872               	movf	___aldiv@divisor,w
  4387  0B86  02F6               	subwf	___aldiv@dividend,f
  4388  0B87  0873               	movf	___aldiv@divisor+1,w
  4389  0B88  3BF7               	subwfb	___aldiv@dividend+1,f
  4390  0B89  0874               	movf	___aldiv@divisor+2,w
  4391  0B8A  3BF8               	subwfb	___aldiv@dividend+2,f
  4392  0B8B  0875               	movf	___aldiv@divisor+3,w
  4393  0B8C  3BF9               	subwfb	___aldiv@dividend+3,f
  4394  0B8D  1423               	bsf	___aldiv@quotient,0
  4395  0B8E                     l3195:	
  4396  0B8E  3001               	movlw	1
  4397  0B8F                     u4525:	
  4398  0B8F  36F5               	lsrf	___aldiv@divisor+3,f
  4399  0B90  0CF4               	rrf	___aldiv@divisor+2,f
  4400  0B91  0CF3               	rrf	___aldiv@divisor+1,f
  4401  0B92  0CF2               	rrf	___aldiv@divisor,f
  4402  0B93  0B89               	decfsz	9,f
  4403  0B94  2B8F               	goto	u4525
  4404  0B95  3001               	movlw	1
  4405  0B96  02A1               	subwf	___aldiv@counter,f
  4406  0B97  1D03               	btfss	3,2
  4407  0B98  2B6E               	goto	l3187
  4408  0B99                     l3199:	
  4409  0B99  0822               	movf	___aldiv@sign,w
  4410  0B9A  1903               	btfsc	3,2
  4411  0B9B  2BA7               	goto	l3203
  4412  0B9C  09A3               	comf	___aldiv@quotient,f
  4413  0B9D  09A4               	comf	___aldiv@quotient+1,f
  4414  0B9E  09A5               	comf	___aldiv@quotient+2,f
  4415  0B9F  09A6               	comf	___aldiv@quotient+3,f
  4416  0BA0  0AA3               	incf	___aldiv@quotient,f
  4417  0BA1  1903               	skipnz
  4418  0BA2  0AA4               	incf	___aldiv@quotient+1,f
  4419  0BA3  1903               	skipnz
  4420  0BA4  0AA5               	incf	___aldiv@quotient+2,f
  4421  0BA5  1903               	skipnz
  4422  0BA6  0AA6               	incf	___aldiv@quotient+3,f
  4423  0BA7                     l3203:	
  4424  0BA7  0826               	movf	___aldiv@quotient+3,w
  4425  0BA8  00F5               	movwf	?___aldiv+3
  4426  0BA9  0825               	movf	___aldiv@quotient+2,w
  4427  0BAA  00F4               	movwf	?___aldiv+2
  4428  0BAB  0824               	movf	___aldiv@quotient+1,w
  4429  0BAC  00F3               	movwf	?___aldiv+1
  4430  0BAD  0823               	movf	___aldiv@quotient,w
  4431  0BAE  00F2               	movwf	?___aldiv
  4432  0BAF  0008               	return
  4433  0BB0                     __end_of___aldiv:	
  4434                           
  4435                           	psect	text15
  4436  15BC                     __ptext15:	
  4437 ;; *************** function _Gpio_Config *****************
  4438 ;; Defined at:
  4439 ;;		line 37 in file "utility.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      unsigned char 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;Total ram usage:        1 bytes
  4458 ;; Hardware stack levels used:    1
  4459 ;; Hardware stack levels required when called:    1
  4460 ;; This function calls:
  4461 ;;		Nothing
  4462 ;; This function is called by:
  4463 ;;		_main
  4464 ;;		_Radio_Setup
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           
  4469                           ;psect for function _Gpio_Config
  4470  15BC                     _Gpio_Config:	
  4471                           
  4472                           ;utility.c: 40: TRISA |= 0b00000010;
  4473                           
  4474                           ;incstack = 0
  4475                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  4476  15BC  0021               	movlb	1	; select bank1
  4477  15BD  148C               	bsf	12,1	;volatile
  4478                           
  4479                           ;utility.c: 41: TRISA &= 0b11001011;
  4480  15BE  30CB               	movlw	203
  4481  15BF  00F2               	movwf	??_Gpio_Config
  4482  15C0  0872               	movf	??_Gpio_Config,w
  4483  15C1  058C               	andwf	12,f	;volatile
  4484                           
  4485                           ;utility.c: 42: TRISC |= 0b00100000;
  4486  15C2  168E               	bsf	14,5	;volatile
  4487                           
  4488                           ;utility.c: 43: TRISC &= 0b11100000;
  4489  15C3  30E0               	movlw	224
  4490  15C4  00F2               	movwf	??_Gpio_Config
  4491  15C5  0872               	movf	??_Gpio_Config,w
  4492  15C6  058E               	andwf	14,f	;volatile
  4493  15C7  0008               	return
  4494  15C8                     __end_of_Gpio_Config:	
  4495                           ;utility.c: 45: return 1;
  4496                           ;	Return value of _Gpio_Config is never used
  4497                           
  4498                           
  4499                           	psect	text16
  4500  15E3                     __ptext16:	
  4501 ;; *************** function _Adf_Reset_Config *****************
  4502 ;; Defined at:
  4503 ;;		line 87 in file "adf7012.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;		None               void
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0, pclath, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;Total ram usage:        0 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    4
  4524 ;; This function calls:
  4525 ;;		_Adf_Reset
  4526 ;;		_Adf_Reset_Register_One
  4527 ;;		_Adf_Reset_Register_Three
  4528 ;;		_Adf_Reset_Register_Two
  4529 ;;		_Adf_Reset_Register_Zero
  4530 ;; This function is called by:
  4531 ;;		_Radio_Setup
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function _Adf_Reset_Config
  4537  15E3                     _Adf_Reset_Config:	
  4538                           
  4539                           ;adf7012.c: 90: Adf_Reset_Register_Zero();
  4540                           
  4541                           ;incstack = 0
  4542                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  4543  15E3  3196  2617  3195   	fcall	_Adf_Reset_Register_Zero
  4544                           
  4545                           ;adf7012.c: 91: Adf_Reset_Register_One();
  4546  15E6  3195  25F2  3195   	fcall	_Adf_Reset_Register_One
  4547                           
  4548                           ;adf7012.c: 92: Adf_Reset_Register_Two();
  4549  15E9  3196  2602  3195   	fcall	_Adf_Reset_Register_Two
  4550                           
  4551                           ;adf7012.c: 93: Adf_Reset_Register_Three();
  4552  15EC  3196  2669  3195   	fcall	_Adf_Reset_Register_Three
  4553                           
  4554                           ;adf7012.c: 95: Adf_Reset();
  4555  15EF  3195  2593         	fcall	_Adf_Reset
  4556  15F1  0008               	return
  4557  15F2                     __end_of_Adf_Reset_Config:	
  4558                           
  4559                           	psect	text17
  4560  1617                     __ptext17:	
  4561 ;; *************** function _Adf_Reset_Register_Zero *****************
  4562 ;; Defined at:
  4563 ;;		line 99 in file "adf7012.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;		None               void
  4570 ;; Registers used:
  4571 ;;		wreg, status,2
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4579 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4580 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4581 ;;Total ram usage:        1 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:    1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_Adf_Reset_Config
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           
  4592                           ;psect for function _Adf_Reset_Register_Zero
  4593  1617                     _Adf_Reset_Register_Zero:	
  4594                           
  4595                           ;adf7012.c: 100: adf_config.r0.frequency_error_correction = 0;
  4596                           
  4597                           ;incstack = 0
  4598                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  4599  1617  3000               	movlw	0
  4600  1618  0021               	movlb	1	; select bank1
  4601  1619  00A3               	movwf	(_adf_config+3)^(0+128)
  4602  161A  3000               	movlw	0
  4603  161B  00A2               	movwf	(_adf_config+2)^(0+128)
  4604  161C  3000               	movlw	0
  4605  161D  00A1               	movwf	(_adf_config+1)^(0+128)
  4606  161E  3000               	movlw	0
  4607  161F  00A0               	movwf	_adf_config^(0+128)
  4608                           
  4609                           ;adf7012.c: 101: adf_config.r0.r_divider = 15;
  4610  1620  300F               	movlw	15
  4611  1621  00F2               	movwf	??_Adf_Reset_Register_Zero
  4612  1622  0872               	movf	??_Adf_Reset_Register_Zero,w
  4613  1623  00A4               	movwf	(_adf_config^(0+128)+4)
  4614                           
  4615                           ;adf7012.c: 102: adf_config.r0.crystal_doubler = 0;
  4616  1624  01A5               	clrf	(_adf_config^(0+128)+5)
  4617                           
  4618                           ;adf7012.c: 103: adf_config.r0.crystal_oscillator_disable = 0;
  4619  1625  01A6               	clrf	(_adf_config^(0+128)+6)
  4620                           
  4621                           ;adf7012.c: 104: adf_config.r0.clock_out_divider = 2;
  4622  1626  3002               	movlw	2
  4623  1627  00F2               	movwf	??_Adf_Reset_Register_Zero
  4624  1628  0872               	movf	??_Adf_Reset_Register_Zero,w
  4625  1629  00A7               	movwf	(_adf_config^(0+128)+7)
  4626                           
  4627                           ;adf7012.c: 105: adf_config.r0.vco_adjust = 0;
  4628  162A  01A8               	clrf	(_adf_config^(0+128)+8)
  4629                           
  4630                           ;adf7012.c: 106: adf_config.r0.output_divider = 2;
  4631  162B  3002               	movlw	2
  4632  162C  00F2               	movwf	??_Adf_Reset_Register_Zero
  4633  162D  0872               	movf	??_Adf_Reset_Register_Zero,w
  4634  162E  00A9               	movwf	(_adf_config^(0+128)+9)
  4635  162F  0008               	return
  4636  1630                     __end_of_Adf_Reset_Register_Zero:	
  4637                           
  4638                           	psect	text18
  4639  1602                     __ptext18:	
  4640 ;; *************** function _Adf_Reset_Register_Two *****************
  4641 ;; Defined at:
  4642 ;;		line 115 in file "adf7012.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;		None
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;		None               void
  4649 ;; Registers used:
  4650 ;;		wreg, status,2
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;Total ram usage:        1 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    1
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_Adf_Reset_Config
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           
  4671                           ;psect for function _Adf_Reset_Register_Two
  4672  1602                     _Adf_Reset_Register_Two:	
  4673                           
  4674                           ;adf7012.c: 116: adf_config.r2.mod_control = 3;
  4675                           
  4676                           ;incstack = 0
  4677                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  4678  1602  3003               	movlw	3
  4679  1603  00F2               	movwf	??_Adf_Reset_Register_Two
  4680  1604  0872               	movf	??_Adf_Reset_Register_Two,w
  4681  1605  0021               	movlb	1	; select bank1
  4682  1606  00B0               	movwf	(_adf_config^(0+128)+16)
  4683                           
  4684                           ;adf7012.c: 117: adf_config.r2.gook = 0;
  4685  1607  01B1               	clrf	(_adf_config^(0+128)+17)
  4686                           
  4687                           ;adf7012.c: 118: adf_config.r2.power_amplifier_level = 15;
  4688  1608  300F               	movlw	15
  4689  1609  00F2               	movwf	??_Adf_Reset_Register_Two
  4690  160A  0872               	movf	??_Adf_Reset_Register_Two,w
  4691  160B  00B2               	movwf	(_adf_config^(0+128)+18)
  4692                           
  4693                           ;adf7012.c: 119: adf_config.r2.modulation_deviation = 16;
  4694  160C  3000               	movlw	0
  4695  160D  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  4696  160E  3000               	movlw	0
  4697  160F  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  4698  1610  3000               	movlw	0
  4699  1611  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  4700  1612  3010               	movlw	16
  4701  1613  00B3               	movwf	(_adf_config^(0+128)+19)
  4702                           
  4703                           ;adf7012.c: 120: adf_config.r2.gfsk_modulation_control = 0;
  4704  1614  01B7               	clrf	(_adf_config^(0+128)+23)
  4705                           
  4706                           ;adf7012.c: 121: adf_config.r2.index_counter = 0;
  4707  1615  01B8               	clrf	(_adf_config^(0+128)+24)
  4708  1616  0008               	return
  4709  1617                     __end_of_Adf_Reset_Register_Two:	
  4710                           
  4711                           	psect	text19
  4712  1669                     __ptext19:	
  4713 ;; *************** function _Adf_Reset_Register_Three *****************
  4714 ;; Defined at:
  4715 ;;		line 124 in file "adf7012.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;		None
  4720 ;; Return value:  Size  Location     Type
  4721 ;;		None               void
  4722 ;; Registers used:
  4723 ;;		wreg, status,2
  4724 ;; Tracked objects:
  4725 ;;		On entry : 0/0
  4726 ;;		On exit  : 0/0
  4727 ;;		Unchanged: 0/0
  4728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;Total ram usage:        1 bytes
  4734 ;; Hardware stack levels used:    1
  4735 ;; Hardware stack levels required when called:    1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_Adf_Reset_Config
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           
  4744                           ;psect for function _Adf_Reset_Register_Three
  4745  1669                     _Adf_Reset_Register_Three:	
  4746                           
  4747                           ;adf7012.c: 125: adf_config.r3.pll_enable = 0;
  4748                           
  4749                           ;incstack = 0
  4750                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  4751  1669  0021               	movlb	1	; select bank1
  4752  166A  01B9               	clrf	(_adf_config^(0+128)+25)
  4753                           
  4754                           ;adf7012.c: 126: adf_config.r3.pa_enable = 0;
  4755  166B  01BA               	clrf	(_adf_config^(0+128)+26)
  4756                           
  4757                           ;adf7012.c: 127: adf_config.r3.clkout_enable = 1;
  4758  166C  01BB               	clrf	(_adf_config^(0+128)+27)
  4759  166D  0ABB               	incf	(_adf_config^(0+128)+27),f
  4760                           
  4761                           ;adf7012.c: 128: adf_config.r3.data_invert = 1;
  4762  166E  01BC               	clrf	(_adf_config^(0+128)+28)
  4763  166F  0ABC               	incf	(_adf_config^(0+128)+28),f
  4764                           
  4765                           ;adf7012.c: 129: adf_config.r3.charge_pump_current = 3;
  4766  1670  3003               	movlw	3
  4767  1671  00F2               	movwf	??_Adf_Reset_Register_Three
  4768  1672  0872               	movf	??_Adf_Reset_Register_Three,w
  4769  1673  00BD               	movwf	(_adf_config^(0+128)+29)
  4770                           
  4771                           ;adf7012.c: 130: adf_config.r3.bleed_up = 0;
  4772  1674  01BE               	clrf	(_adf_config^(0+128)+30)
  4773                           
  4774                           ;adf7012.c: 131: adf_config.r3.bleed_down = 0;
  4775  1675  01BF               	clrf	(_adf_config^(0+128)+31)
  4776                           
  4777                           ;adf7012.c: 132: adf_config.r3.vco_disable = 0;
  4778  1676  01C0               	clrf	(_adf_config^(0+128)+32)
  4779                           
  4780                           ;adf7012.c: 134: adf_config.r3.muxout = 3;
  4781  1677  3003               	movlw	3
  4782  1678  00F2               	movwf	??_Adf_Reset_Register_Three
  4783  1679  0872               	movf	??_Adf_Reset_Register_Three,w
  4784  167A  00C1               	movwf	(_adf_config^(0+128)+33)
  4785                           
  4786                           ;adf7012.c: 136: adf_config.r3.ld_precision = 0;
  4787  167B  01C2               	clrf	(_adf_config^(0+128)+34)
  4788                           
  4789                           ;adf7012.c: 137: adf_config.r3.vco_bias = 6;
  4790  167C  3006               	movlw	6
  4791  167D  00F2               	movwf	??_Adf_Reset_Register_Three
  4792  167E  0872               	movf	??_Adf_Reset_Register_Three,w
  4793  167F  00C3               	movwf	(_adf_config^(0+128)+35)
  4794                           
  4795                           ;adf7012.c: 138: adf_config.r3.pa_bias = 4;
  4796  1680  3004               	movlw	4
  4797  1681  00F2               	movwf	??_Adf_Reset_Register_Three
  4798  1682  0872               	movf	??_Adf_Reset_Register_Three,w
  4799  1683  00C4               	movwf	(_adf_config^(0+128)+36)
  4800                           
  4801                           ;adf7012.c: 139: adf_config.r3.pll_test_mode = 0;
  4802  1684  01C5               	clrf	(_adf_config^(0+128)+37)
  4803                           
  4804                           ;adf7012.c: 140: adf_config.r3.sd_test_mode = 0;
  4805  1685  01C6               	clrf	(_adf_config^(0+128)+38)
  4806  1686  0008               	return
  4807  1687                     __end_of_Adf_Reset_Register_Three:	
  4808                           
  4809                           	psect	text20
  4810  15F2                     __ptext20:	
  4811 ;; *************** function _Adf_Reset_Register_One *****************
  4812 ;; Defined at:
  4813 ;;		line 109 in file "adf7012.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;		None               void
  4820 ;; Registers used:
  4821 ;;		wreg
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4831 ;;Total ram usage:        1 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    1
  4834 ;; This function calls:
  4835 ;;		Nothing
  4836 ;; This function is called by:
  4837 ;;		_Adf_Reset_Config
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function _Adf_Reset_Register_One
  4843  15F2                     _Adf_Reset_Register_One:	
  4844                           
  4845                           ;adf7012.c: 110: adf_config.r1.integer_n = 109;
  4846                           
  4847                           ;incstack = 0
  4848                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  4849  15F2  306D               	movlw	109
  4850  15F3  00F2               	movwf	??_Adf_Reset_Register_One
  4851  15F4  0872               	movf	??_Adf_Reset_Register_One,w
  4852  15F5  0021               	movlb	1	; select bank1
  4853  15F6  00AE               	movwf	(_adf_config^(0+128)+14)
  4854                           
  4855                           ;adf7012.c: 111: adf_config.r1.fractional_n = 0;
  4856  15F7  3000               	movlw	0
  4857  15F8  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  4858  15F9  3000               	movlw	0
  4859  15FA  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  4860  15FB  3000               	movlw	0
  4861  15FC  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  4862  15FD  3000               	movlw	0
  4863  15FE  00AA               	movwf	(_adf_config^(0+128)+10)
  4864                           
  4865                           ;adf7012.c: 112: adf_config.r1.prescaler = 1;
  4866  15FF  01AF               	clrf	(_adf_config^(0+128)+15)
  4867  1600  0AAF               	incf	(_adf_config^(0+128)+15),f
  4868  1601  0008               	return
  4869  1602                     __end_of_Adf_Reset_Register_One:	
  4870                           
  4871                           	psect	text21
  4872  1593                     __ptext21:	
  4873 ;; *************** function _Adf_Reset *****************
  4874 ;; Defined at:
  4875 ;;		line 143 in file "adf7012.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;		None
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;		None               void
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0, pclath, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4893 ;;Total ram usage:        0 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    3
  4896 ;; This function calls:
  4897 ;;		_Delay_ms
  4898 ;; This function is called by:
  4899 ;;		_Adf_Reset_Config
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           
  4904                           ;psect for function _Adf_Reset
  4905  1593                     _Adf_Reset:	
  4906                           
  4907                           ;adf7012.c: 145: PORTAbits.RA5 = 1;;
  4908                           
  4909                           ;incstack = 0
  4910                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  4911  1593  0020               	movlb	0	; select bank0
  4912  1594  168C               	bsf	12,5	;volatile
  4913                           
  4914                           ;adf7012.c: 146: Delay_ms(10);
  4915  1595  300A               	movlw	10
  4916  1596  00F2               	movwf	Delay_ms@time_to_delay
  4917  1597  3000               	movlw	0
  4918  1598  00F3               	movwf	Delay_ms@time_to_delay+1
  4919  1599  3196  26C8         	fcall	_Delay_ms
  4920  159B  0008               	return
  4921  159C                     __end_of_Adf_Reset:	
  4922                           
  4923                           	psect	text22
  4924  0F33                     __ptext22:	
  4925 ;; *************** function _Modem_Init *****************
  4926 ;; Defined at:
  4927 ;;		line 110 in file "audio_tone.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;		None
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4943 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;Total ram usage:        6 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    2
  4948 ;; This function calls:
  4949 ;;		___lldiv
  4950 ;;		___lmul
  4951 ;; This function is called by:
  4952 ;;		_Modem_Setup
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           
  4957                           ;psect for function _Modem_Init
  4958  0F33                     _Modem_Init:	
  4959                           
  4960                           ;audio_tone.c: 111: SAMPLES_PER_BAUD = (PLAYBACK_RATE / BAUD_RATE);
  4961                           
  4962                           ;incstack = 0
  4963                           ; Regs used in _Modem_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4964  0F33  3004               	movlw	low (_BAUD_RATE| (0+32768))
  4965  0F34  0084               	movwf	4
  4966  0F35  3083               	movlw	high (_BAUD_RATE| (0+32768))
  4967  0F36  0085               	movwf	5
  4968  0F37  3F00               	moviw [0]fsr0
  4969  0F38  0020               	movlb	0	; select bank0
  4970  0F39  00B2               	movwf	??_Modem_Init
  4971  0F3A  3F01               	moviw [1]fsr0
  4972  0F3B  00B3               	movwf	??_Modem_Init+1
  4973  0F3C  0832               	movf	??_Modem_Init,w
  4974  0F3D  00A4               	movwf	___lldiv@divisor
  4975  0F3E  0833               	movf	??_Modem_Init+1,w
  4976  0F3F  00A5               	movwf	___lldiv@divisor+1
  4977  0F40  0D89               	rlf	9,f
  4978  0F41  3B89               	subwfb	9,f
  4979  0F42  0989               	comf	9,f
  4980  0F43  00A6               	movwf	___lldiv@divisor+2
  4981  0F44  00A7               	movwf	___lldiv@divisor+3
  4982  0F45  3000               	movlw	low (_PLAYBACK_RATE| (0+32768))
  4983  0F46  0084               	movwf	4
  4984  0F47  3083               	movlw	high (_PLAYBACK_RATE| (0+32768))
  4985  0F48  0085               	movwf	5
  4986  0F49  3F00               	moviw [0]fsr0
  4987  0F4A  00A8               	movwf	___lldiv@dividend
  4988  0F4B  3F01               	moviw [1]fsr0
  4989  0F4C  00A9               	movwf	___lldiv@dividend+1
  4990  0F4D  3F02               	moviw [2]fsr0
  4991  0F4E  00AA               	movwf	___lldiv@dividend+2
  4992  0F4F  3F03               	moviw [3]fsr0
  4993  0F50  00AB               	movwf	___lldiv@dividend+3
  4994  0F51  3188  2097  318F   	fcall	___lldiv
  4995  0F54  0020               	movlb	0	; select bank0
  4996  0F55  0824               	movf	?___lldiv,w
  4997  0F56  00B4               	movwf	??_Modem_Init+2
  4998  0F57  0834               	movf	??_Modem_Init+2,w
  4999  0F58  00EF               	movwf	_SAMPLES_PER_BAUD
  5000                           
  5001                           ;audio_tone.c: 112: PHASE_DELTA_1200 = (((TABLE_SIZE * 1200L) << 7) / PLAYBACK_RATE);
  5002  0F59  3000               	movlw	low (_PLAYBACK_RATE| (0+32768))
  5003  0F5A  0084               	movwf	4
  5004  0F5B  3083               	movlw	high (_PLAYBACK_RATE| (0+32768))
  5005  0F5C  0085               	movwf	5
  5006  0F5D  3F00               	moviw [0]fsr0
  5007  0F5E  00A4               	movwf	___lldiv@divisor
  5008  0F5F  3F01               	moviw [1]fsr0
  5009  0F60  00A5               	movwf	___lldiv@divisor+1
  5010  0F61  3F02               	moviw [2]fsr0
  5011  0F62  00A6               	movwf	___lldiv@divisor+2
  5012  0F63  3F03               	moviw [3]fsr0
  5013  0F64  00A7               	movwf	___lldiv@divisor+3
  5014  0F65  3000               	movlw	0
  5015  0F66  00F9               	movwf	___lmul@multiplicand+3
  5016  0F67  3000               	movlw	0
  5017  0F68  00F8               	movwf	___lmul@multiplicand+2
  5018  0F69  3004               	movlw	4
  5019  0F6A  00F7               	movwf	___lmul@multiplicand+1
  5020  0F6B  30B0               	movlw	176
  5021  0F6C  00F6               	movwf	___lmul@multiplicand
  5022  0F6D  3006               	movlw	low (_TABLE_SIZE| (0+32768))
  5023  0F6E  0084               	movwf	4
  5024  0F6F  3083               	movlw	high (_TABLE_SIZE| (0+32768))
  5025  0F70  0085               	movwf	5
  5026  0F71  3F00               	moviw [0]fsr0
  5027  0F72  00B2               	movwf	??_Modem_Init
  5028  0F73  3F01               	moviw [1]fsr0
  5029  0F74  00B3               	movwf	??_Modem_Init+1
  5030  0F75  0832               	movf	??_Modem_Init,w
  5031  0F76  00F2               	movwf	___lmul@multiplier
  5032  0F77  0833               	movf	??_Modem_Init+1,w
  5033  0F78  00F3               	movwf	___lmul@multiplier+1
  5034  0F79  0D89               	rlf	9,f
  5035  0F7A  3B89               	subwfb	9,f
  5036  0F7B  0989               	comf	9,f
  5037  0F7C  00F4               	movwf	___lmul@multiplier+2
  5038  0F7D  00F5               	movwf	___lmul@multiplier+3
  5039  0F7E  3197  279A  318F   	fcall	___lmul
  5040  0F81  0872               	movf	?___lmul,w
  5041  0F82  0020               	movlb	0	; select bank0
  5042  0F83  00B4               	movwf	??_Modem_Init+2
  5043  0F84  0873               	movf	?___lmul+1,w
  5044  0F85  00B5               	movwf	??_Modem_Init+3
  5045  0F86  0874               	movf	?___lmul+2,w
  5046  0F87  00B6               	movwf	??_Modem_Init+4
  5047  0F88  0875               	movf	?___lmul+3,w
  5048  0F89  00B7               	movwf	??_Modem_Init+5
  5049  0F8A  3007               	movlw	7
  5050  0F8B                     u5265:	
  5051  0F8B  35B4               	lslf	??_Modem_Init+2,f
  5052  0F8C  0DB5               	rlf	??_Modem_Init+3,f
  5053  0F8D  0DB6               	rlf	??_Modem_Init+4,f
  5054  0F8E  0DB7               	rlf	??_Modem_Init+5,f
  5055  0F8F  0B89               	decfsz	9,f
  5056  0F90  2F8B               	goto	u5265
  5057  0F91  0837               	movf	??_Modem_Init+5,w
  5058  0F92  00AB               	movwf	___lldiv@dividend+3
  5059  0F93  0836               	movf	??_Modem_Init+4,w
  5060  0F94  00AA               	movwf	___lldiv@dividend+2
  5061  0F95  0835               	movf	??_Modem_Init+3,w
  5062  0F96  00A9               	movwf	___lldiv@dividend+1
  5063  0F97  0834               	movf	??_Modem_Init+2,w
  5064  0F98  00A8               	movwf	___lldiv@dividend
  5065  0F99  3188  2097  318F   	fcall	___lldiv
  5066  0F9C  0020               	movlb	0	; select bank0
  5067  0F9D  0827               	movf	?___lldiv+3,w
  5068  0F9E  0022               	movlb	2	; select bank2
  5069  0F9F  00A7               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  5070  0FA0  0020               	movlb	0	; select bank0
  5071  0FA1  0826               	movf	?___lldiv+2,w
  5072  0FA2  0022               	movlb	2	; select bank2
  5073  0FA3  00A6               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  5074  0FA4  0020               	movlb	0	; select bank0
  5075  0FA5  0825               	movf	?___lldiv+1,w
  5076  0FA6  0022               	movlb	2	; select bank2
  5077  0FA7  00A5               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  5078  0FA8  0020               	movlb	0	; select bank0
  5079  0FA9  0824               	movf	?___lldiv,w
  5080  0FAA  0022               	movlb	2	; select bank2
  5081  0FAB  00A4               	movwf	_PHASE_DELTA_1200^(0+256)
  5082                           
  5083                           ;audio_tone.c: 113: PHASE_DELTA_2200 = (((TABLE_SIZE * 2200L) << 7) / PLAYBACK_RATE);
  5084  0FAC  3000               	movlw	low (_PLAYBACK_RATE| (0+32768))
  5085  0FAD  0084               	movwf	4
  5086  0FAE  3083               	movlw	high (_PLAYBACK_RATE| (0+32768))
  5087  0FAF  0085               	movwf	5
  5088  0FB0  3F00               	moviw [0]fsr0
  5089  0FB1  0020               	movlb	0	; select bank0
  5090  0FB2  00A4               	movwf	___lldiv@divisor
  5091  0FB3  3F01               	moviw [1]fsr0
  5092  0FB4  00A5               	movwf	___lldiv@divisor+1
  5093  0FB5  3F02               	moviw [2]fsr0
  5094  0FB6  00A6               	movwf	___lldiv@divisor+2
  5095  0FB7  3F03               	moviw [3]fsr0
  5096  0FB8  00A7               	movwf	___lldiv@divisor+3
  5097  0FB9  3000               	movlw	0
  5098  0FBA  00F9               	movwf	___lmul@multiplicand+3
  5099  0FBB  3000               	movlw	0
  5100  0FBC  00F8               	movwf	___lmul@multiplicand+2
  5101  0FBD  3008               	movlw	8
  5102  0FBE  00F7               	movwf	___lmul@multiplicand+1
  5103  0FBF  3098               	movlw	152
  5104  0FC0  00F6               	movwf	___lmul@multiplicand
  5105  0FC1  3006               	movlw	low (_TABLE_SIZE| (0+32768))
  5106  0FC2  0084               	movwf	4
  5107  0FC3  3083               	movlw	high (_TABLE_SIZE| (0+32768))
  5108  0FC4  0085               	movwf	5
  5109  0FC5  3F00               	moviw [0]fsr0
  5110  0FC6  00B2               	movwf	??_Modem_Init
  5111  0FC7  3F01               	moviw [1]fsr0
  5112  0FC8  00B3               	movwf	??_Modem_Init+1
  5113  0FC9  0832               	movf	??_Modem_Init,w
  5114  0FCA  00F2               	movwf	___lmul@multiplier
  5115  0FCB  0833               	movf	??_Modem_Init+1,w
  5116  0FCC  00F3               	movwf	___lmul@multiplier+1
  5117  0FCD  0D89               	rlf	9,f
  5118  0FCE  3B89               	subwfb	9,f
  5119  0FCF  0989               	comf	9,f
  5120  0FD0  00F4               	movwf	___lmul@multiplier+2
  5121  0FD1  00F5               	movwf	___lmul@multiplier+3
  5122  0FD2  3197  279A  318F   	fcall	___lmul
  5123  0FD5  0872               	movf	?___lmul,w
  5124  0FD6  0020               	movlb	0	; select bank0
  5125  0FD7  00B4               	movwf	??_Modem_Init+2
  5126  0FD8  0873               	movf	?___lmul+1,w
  5127  0FD9  00B5               	movwf	??_Modem_Init+3
  5128  0FDA  0874               	movf	?___lmul+2,w
  5129  0FDB  00B6               	movwf	??_Modem_Init+4
  5130  0FDC  0875               	movf	?___lmul+3,w
  5131  0FDD  00B7               	movwf	??_Modem_Init+5
  5132  0FDE  3007               	movlw	7
  5133  0FDF                     u5275:	
  5134  0FDF  35B4               	lslf	??_Modem_Init+2,f
  5135  0FE0  0DB5               	rlf	??_Modem_Init+3,f
  5136  0FE1  0DB6               	rlf	??_Modem_Init+4,f
  5137  0FE2  0DB7               	rlf	??_Modem_Init+5,f
  5138  0FE3  0B89               	decfsz	9,f
  5139  0FE4  2FDF               	goto	u5275
  5140  0FE5  0837               	movf	??_Modem_Init+5,w
  5141  0FE6  00AB               	movwf	___lldiv@dividend+3
  5142  0FE7  0836               	movf	??_Modem_Init+4,w
  5143  0FE8  00AA               	movwf	___lldiv@dividend+2
  5144  0FE9  0835               	movf	??_Modem_Init+3,w
  5145  0FEA  00A9               	movwf	___lldiv@dividend+1
  5146  0FEB  0834               	movf	??_Modem_Init+2,w
  5147  0FEC  00A8               	movwf	___lldiv@dividend
  5148  0FED  3188  2097         	fcall	___lldiv
  5149  0FEF  0020               	movlb	0	; select bank0
  5150  0FF0  0827               	movf	?___lldiv+3,w
  5151  0FF1  0022               	movlb	2	; select bank2
  5152  0FF2  00AB               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  5153  0FF3  0020               	movlb	0	; select bank0
  5154  0FF4  0826               	movf	?___lldiv+2,w
  5155  0FF5  0022               	movlb	2	; select bank2
  5156  0FF6  00AA               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  5157  0FF7  0020               	movlb	0	; select bank0
  5158  0FF8  0825               	movf	?___lldiv+1,w
  5159  0FF9  0022               	movlb	2	; select bank2
  5160  0FFA  00A9               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  5161  0FFB  0020               	movlb	0	; select bank0
  5162  0FFC  0824               	movf	?___lldiv,w
  5163  0FFD  0022               	movlb	2	; select bank2
  5164  0FFE  00A8               	movwf	_PHASE_DELTA_2200^(0+256)
  5165  0FFF  0008               	return
  5166  1000                     __end_of_Modem_Init:	
  5167                           
  5168                           	psect	text23
  5169  179A                     __ptext23:	
  5170 ;; *************** function ___lmul *****************
  5171 ;; Defined at:
  5172 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  multiplier      4    2[COMMON] unsigned long 
  5175 ;;  multiplicand    4    6[COMMON] unsigned long 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  product         4    0[BANK0 ] unsigned long 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;                  4    2[COMMON] unsigned long 
  5180 ;; Registers used:
  5181 ;;		wreg, status,2, status,0
  5182 ;; Tracked objects:
  5183 ;;		On entry : 0/0
  5184 ;;		On exit  : 0/0
  5185 ;;		Unchanged: 0/0
  5186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5187 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;Total ram usage:       12 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    1
  5194 ;; This function calls:
  5195 ;;		Nothing
  5196 ;; This function is called by:
  5197 ;;		_Modem_Init
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           
  5202                           ;psect for function ___lmul
  5203  179A                     ___lmul:	
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5207  179A  3000               	movlw	0
  5208  179B  0020               	movlb	0	; select bank0
  5209  179C  00A3               	movwf	___lmul@product+3
  5210  179D  3000               	movlw	0
  5211  179E  00A2               	movwf	___lmul@product+2
  5212  179F  3000               	movlw	0
  5213  17A0  00A1               	movwf	___lmul@product+1
  5214  17A1  3000               	movlw	0
  5215  17A2  00A0               	movwf	___lmul@product
  5216  17A3                     l2589:	
  5217  17A3  1C72               	btfss	___lmul@multiplier,0
  5218  17A4  2FAE               	goto	l2593
  5219  17A5  0876               	movf	___lmul@multiplicand,w
  5220  17A6  0020               	movlb	0	; select bank0
  5221  17A7  07A0               	addwf	___lmul@product,f
  5222  17A8  0877               	movf	___lmul@multiplicand+1,w
  5223  17A9  3DA1               	addwfc	___lmul@product+1,f
  5224  17AA  0878               	movf	___lmul@multiplicand+2,w
  5225  17AB  3DA2               	addwfc	___lmul@product+2,f
  5226  17AC  0879               	movf	___lmul@multiplicand+3,w
  5227  17AD  3DA3               	addwfc	___lmul@product+3,f
  5228  17AE                     l2593:	
  5229  17AE  3001               	movlw	1
  5230  17AF                     u3365:	
  5231  17AF  35F6               	lslf	___lmul@multiplicand,f
  5232  17B0  0DF7               	rlf	___lmul@multiplicand+1,f
  5233  17B1  0DF8               	rlf	___lmul@multiplicand+2,f
  5234  17B2  0DF9               	rlf	___lmul@multiplicand+3,f
  5235  17B3  0B89               	decfsz	9,f
  5236  17B4  2FAF               	goto	u3365
  5237  17B5  3001               	movlw	1
  5238  17B6                     u3375:	
  5239  17B6  36F5               	lsrf	___lmul@multiplier+3,f
  5240  17B7  0CF4               	rrf	___lmul@multiplier+2,f
  5241  17B8  0CF3               	rrf	___lmul@multiplier+1,f
  5242  17B9  0CF2               	rrf	___lmul@multiplier,f
  5243  17BA  0B89               	decfsz	9,f
  5244  17BB  2FB6               	goto	u3375
  5245  17BC  0875               	movf	___lmul@multiplier+3,w
  5246  17BD  0474               	iorwf	___lmul@multiplier+2,w
  5247  17BE  0473               	iorwf	___lmul@multiplier+1,w
  5248  17BF  0472               	iorwf	___lmul@multiplier,w
  5249  17C0  1D03               	skipz
  5250  17C1  2FA3               	goto	l2589
  5251  17C2  0020               	movlb	0	; select bank0
  5252  17C3  0823               	movf	___lmul@product+3,w
  5253  17C4  00F5               	movwf	?___lmul+3
  5254  17C5  0822               	movf	___lmul@product+2,w
  5255  17C6  00F4               	movwf	?___lmul+2
  5256  17C7  0821               	movf	___lmul@product+1,w
  5257  17C8  00F3               	movwf	?___lmul+1
  5258  17C9  0820               	movf	___lmul@product,w
  5259  17CA  00F2               	movwf	?___lmul
  5260  17CB  0008               	return
  5261  17CC                     __end_of___lmul:	
  5262                           
  5263                           	psect	text24
  5264  0897                     __ptext24:	
  5265 ;; *************** function ___lldiv *****************
  5266 ;; Defined at:
  5267 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;  divisor         4    4[BANK0 ] unsigned long 
  5270 ;;  dividend        4    8[BANK0 ] unsigned long 
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;  quotient        4   13[BANK0 ] unsigned long 
  5273 ;;  counter         1   17[BANK0 ] unsigned char 
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  4    4[BANK0 ] unsigned long 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2, status,0
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5283 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5284 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5286 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5287 ;;Total ram usage:       14 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    1
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_Set_Freq
  5294 ;;		_Modem_Init
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function ___lldiv
  5300  0897                     ___lldiv:	
  5301                           
  5302                           ;incstack = 0
  5303                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5304  0897  3000               	movlw	0
  5305  0898  0020               	movlb	0	; select bank0
  5306  0899  00B0               	movwf	___lldiv@quotient+3
  5307  089A  3000               	movlw	0
  5308  089B  00AF               	movwf	___lldiv@quotient+2
  5309  089C  3000               	movlw	0
  5310  089D  00AE               	movwf	___lldiv@quotient+1
  5311  089E  3000               	movlw	0
  5312  089F  00AD               	movwf	___lldiv@quotient
  5313  08A0  0827               	movf	___lldiv@divisor+3,w
  5314  08A1  0426               	iorwf	___lldiv@divisor+2,w
  5315  08A2  0425               	iorwf	___lldiv@divisor+1,w
  5316  08A3  0424               	iorwf	___lldiv@divisor,w
  5317  08A4  1903               	skipnz
  5318  08A5  28E1               	goto	l3391
  5319  08A6  01B1               	clrf	___lldiv@counter
  5320  08A7  0AB1               	incf	___lldiv@counter,f
  5321  08A8                     l3377:	
  5322  08A8  1BA7               	btfsc	___lldiv@divisor+3,7
  5323  08A9  28B6               	goto	l3379
  5324  08AA  3001               	movlw	1
  5325  08AB                     u4995:	
  5326  08AB  35A4               	lslf	___lldiv@divisor,f
  5327  08AC  0DA5               	rlf	___lldiv@divisor+1,f
  5328  08AD  0DA6               	rlf	___lldiv@divisor+2,f
  5329  08AE  0DA7               	rlf	___lldiv@divisor+3,f
  5330  08AF  0B89               	decfsz	9,f
  5331  08B0  28AB               	goto	u4995
  5332  08B1  3001               	movlw	1
  5333  08B2  00AC               	movwf	??___lldiv
  5334  08B3  082C               	movf	??___lldiv,w
  5335  08B4  07B1               	addwf	___lldiv@counter,f
  5336  08B5  28A8               	goto	l3377
  5337  08B6                     l3379:	
  5338  08B6  3001               	movlw	1
  5339  08B7                     u5015:	
  5340  08B7  35AD               	lslf	___lldiv@quotient,f
  5341  08B8  0DAE               	rlf	___lldiv@quotient+1,f
  5342  08B9  0DAF               	rlf	___lldiv@quotient+2,f
  5343  08BA  0DB0               	rlf	___lldiv@quotient+3,f
  5344  08BB  0B89               	decfsz	9,f
  5345  08BC  28B7               	goto	u5015
  5346  08BD  0827               	movf	___lldiv@divisor+3,w
  5347  08BE  022B               	subwf	___lldiv@dividend+3,w
  5348  08BF  1D03               	skipz
  5349  08C0  28CB               	goto	u5025
  5350  08C1  0826               	movf	___lldiv@divisor+2,w
  5351  08C2  022A               	subwf	___lldiv@dividend+2,w
  5352  08C3  1D03               	skipz
  5353  08C4  28CB               	goto	u5025
  5354  08C5  0825               	movf	___lldiv@divisor+1,w
  5355  08C6  0229               	subwf	___lldiv@dividend+1,w
  5356  08C7  1D03               	skipz
  5357  08C8  28CB               	goto	u5025
  5358  08C9  0824               	movf	___lldiv@divisor,w
  5359  08CA  0228               	subwf	___lldiv@dividend,w
  5360  08CB                     u5025:	
  5361  08CB  1C03               	skipc
  5362  08CC  28D6               	goto	l3387
  5363  08CD  0824               	movf	___lldiv@divisor,w
  5364  08CE  02A8               	subwf	___lldiv@dividend,f
  5365  08CF  0825               	movf	___lldiv@divisor+1,w
  5366  08D0  3BA9               	subwfb	___lldiv@dividend+1,f
  5367  08D1  0826               	movf	___lldiv@divisor+2,w
  5368  08D2  3BAA               	subwfb	___lldiv@dividend+2,f
  5369  08D3  0827               	movf	___lldiv@divisor+3,w
  5370  08D4  3BAB               	subwfb	___lldiv@dividend+3,f
  5371  08D5  142D               	bsf	___lldiv@quotient,0
  5372  08D6                     l3387:	
  5373  08D6  3001               	movlw	1
  5374  08D7                     u5035:	
  5375  08D7  36A7               	lsrf	___lldiv@divisor+3,f
  5376  08D8  0CA6               	rrf	___lldiv@divisor+2,f
  5377  08D9  0CA5               	rrf	___lldiv@divisor+1,f
  5378  08DA  0CA4               	rrf	___lldiv@divisor,f
  5379  08DB  0B89               	decfsz	9,f
  5380  08DC  28D7               	goto	u5035
  5381  08DD  3001               	movlw	1
  5382  08DE  02B1               	subwf	___lldiv@counter,f
  5383  08DF  1D03               	btfss	3,2
  5384  08E0  28B6               	goto	l3379
  5385  08E1                     l3391:	
  5386  08E1  0830               	movf	___lldiv@quotient+3,w
  5387  08E2  00A7               	movwf	?___lldiv+3
  5388  08E3  082F               	movf	___lldiv@quotient+2,w
  5389  08E4  00A6               	movwf	?___lldiv+2
  5390  08E5  082E               	movf	___lldiv@quotient+1,w
  5391  08E6  00A5               	movwf	?___lldiv+1
  5392  08E7  082D               	movf	___lldiv@quotient,w
  5393  08E8  00A4               	movwf	?___lldiv
  5394  08E9  0008               	return
  5395  08EA                     __end_of___lldiv:	
  5396                           
  5397                           	psect	text25
  5398  1718                     __ptext25:	
  5399 ;; *************** function _Modem_Flush_Frame *****************
  5400 ;; Defined at:
  5401 ;;		line 133 in file "audio_tone.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;		None
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;		None
  5406 ;; Return value:  Size  Location     Type
  5407 ;;		None               void
  5408 ;; Registers used:
  5409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;Total ram usage:        0 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    9
  5422 ;; This function calls:
  5423 ;;		_Delay_ms
  5424 ;;		_Ptt_On
  5425 ;;		_Timer0_Start
  5426 ;; This function is called by:
  5427 ;;		_main
  5428 ;;		_Ax25_Flush_Frame
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           
  5433                           ;psect for function _Modem_Flush_Frame
  5434  1718                     _Modem_Flush_Frame:	
  5435                           
  5436                           ;audio_tone.c: 135: phase_delta = PHASE_DELTA_1200;
  5437                           
  5438                           ;incstack = 0
  5439                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5440  1718  0022               	movlb	2	; select bank2
  5441  1719  0827               	movf	(_PHASE_DELTA_1200+3)^(0+256),w
  5442  171A  00B3               	movwf	(_phase_delta+3)^(0+256)
  5443  171B  0826               	movf	(_PHASE_DELTA_1200+2)^(0+256),w
  5444  171C  00B2               	movwf	(_phase_delta+2)^(0+256)
  5445  171D  0825               	movf	(_PHASE_DELTA_1200+1)^(0+256),w
  5446  171E  00B1               	movwf	(_phase_delta+1)^(0+256)
  5447  171F  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  5448  1720  00B0               	movwf	_phase_delta^(0+256)
  5449                           
  5450                           ;audio_tone.c: 136: phase = 0;
  5451  1721  3000               	movlw	0
  5452  1722  00AF               	movwf	(_phase+3)^(0+256)
  5453  1723  3000               	movlw	0
  5454  1724  00AE               	movwf	(_phase+2)^(0+256)
  5455  1725  3000               	movlw	0
  5456  1726  00AD               	movwf	(_phase+1)^(0+256)
  5457  1727  3000               	movlw	0
  5458  1728  00AC               	movwf	_phase^(0+256)
  5459                           
  5460                           ;audio_tone.c: 137: packet_pos = 0;
  5461  1729  3000               	movlw	0
  5462  172A  0021               	movlb	1	; select bank1
  5463  172B  00CE               	movwf	(_packet_pos+3)^(0+128)
  5464  172C  3000               	movlw	0
  5465  172D  00CD               	movwf	(_packet_pos+2)^(0+128)
  5466  172E  3000               	movlw	0
  5467  172F  00CC               	movwf	(_packet_pos+1)^(0+128)
  5468  1730  3000               	movlw	0
  5469  1731  00CB               	movwf	_packet_pos^(0+128)
  5470                           
  5471                           ;audio_tone.c: 138: current_sample_in_baud = 0;
  5472  1732  01FB               	clrf	_current_sample_in_baud
  5473                           
  5474                           ;audio_tone.c: 139: MODEM_TRANSMITTING = 1;
  5475  1733  01D3               	clrf	_MODEM_TRANSMITTING^(0+128)
  5476  1734  0AD3               	incf	_MODEM_TRANSMITTING^(0+128),f
  5477                           
  5478                           ;audio_tone.c: 142: Ptt_On();
  5479  1735  3188  2028  3197   	fcall	_Ptt_On
  5480                           
  5481                           ;audio_tone.c: 144: Delay_ms(100);
  5482  1738  3064               	movlw	100
  5483  1739  00F2               	movwf	Delay_ms@time_to_delay
  5484  173A  3000               	movlw	0
  5485  173B  00F3               	movwf	Delay_ms@time_to_delay+1
  5486  173C  3196  26C8  3197   	fcall	_Delay_ms
  5487                           
  5488                           ;audio_tone.c: 146: Timer0_Start();
  5489  173F  3187  27FB         	fcall	_Timer0_Start
  5490  1741  0008               	return
  5491  1742                     __end_of_Modem_Flush_Frame:	
  5492                           
  5493                           	psect	text26
  5494  07FB                     __ptext26:	
  5495 ;; *************** function _Timer0_Start *****************
  5496 ;; Defined at:
  5497 ;;		line 256 in file "utility.c"
  5498 ;; Parameters:    Size  Location     Type
  5499 ;;		None
  5500 ;; Auto vars:     Size  Location     Type
  5501 ;;		None
  5502 ;; Return value:  Size  Location     Type
  5503 ;;		None               void
  5504 ;; Registers used:
  5505 ;;		status,2
  5506 ;; Tracked objects:
  5507 ;;		On entry : 0/0
  5508 ;;		On exit  : 0/0
  5509 ;;		Unchanged: 0/0
  5510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;Total ram usage:        0 bytes
  5516 ;; Hardware stack levels used:    1
  5517 ;; Hardware stack levels required when called:    1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_main
  5522 ;;		_Modem_Flush_Frame
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function _Timer0_Start
  5528  07FB                     _Timer0_Start:	
  5529                           
  5530                           ;utility.c: 257: TMR0 = 0x00;
  5531                           
  5532                           ;incstack = 0
  5533                           ; Regs used in _Timer0_Start: [status,2]
  5534  07FB  0020               	movlb	0	; select bank0
  5535  07FC  0195               	clrf	21	;volatile
  5536                           
  5537                           ;utility.c: 258: TMR0IF = 0;
  5538  07FD  110B               	bcf	11,2	;volatile
  5539                           
  5540                           ;utility.c: 259: TMR0IE = 1;
  5541  07FE  168B               	bsf	11,5	;volatile
  5542  07FF  0008               	return
  5543  0800                     __end_of_Timer0_Start:	
  5544                           
  5545                           	psect	text27
  5546  0828                     __ptext27:	
  5547 ;; *************** function _Ptt_On *****************
  5548 ;; Defined at:
  5549 ;;		line 319 in file "adf7012.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;		None
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;		None
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      unsigned char 
  5556 ;; Registers used:
  5557 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5565 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5566 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5567 ;;Total ram usage:        1 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    8
  5570 ;; This function calls:
  5571 ;;		_Adf_Lock
  5572 ;;		_Adf_Write_Config
  5573 ;;		_Delay_ms
  5574 ;;		_Read_Adf7012_Muxout
  5575 ;; This function is called by:
  5576 ;;		_main
  5577 ;;		_Modem_Flush_Frame
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function _Ptt_On
  5583  0828                     _Ptt_On:	
  5584                           
  5585                           ;adf7012.c: 324: adf_config.r3.pa_enable = 0;
  5586                           
  5587                           ;incstack = 0
  5588                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5589  0828  0021               	movlb	1	; select bank1
  5590  0829  01BA               	clrf	(_adf_config^(0+128)+26)
  5591                           
  5592                           ;adf7012.c: 325: adf_config.r2.power_amplifier_level = 0;
  5593  082A  01B2               	clrf	(_adf_config^(0+128)+18)
  5594                           
  5595                           ;adf7012.c: 326: adf_config.r3.muxout = 3;
  5596  082B  3003               	movlw	3
  5597  082C  0020               	movlb	0	; select bank0
  5598  082D  00ED               	movwf	??_Ptt_On
  5599  082E  086D               	movf	??_Ptt_On,w
  5600  082F  0021               	movlb	1	; select bank1
  5601  0830  00C1               	movwf	(_adf_config^(0+128)+33)
  5602                           
  5603                           ;adf7012.c: 328: Adf_Write_Config();
  5604  0831  3195  25B0  3188   	fcall	_Adf_Write_Config
  5605                           
  5606                           ;adf7012.c: 329: Delay_ms(10);
  5607  0834  300A               	movlw	10
  5608  0835  00F2               	movwf	Delay_ms@time_to_delay
  5609  0836  3000               	movlw	0
  5610  0837  00F3               	movwf	Delay_ms@time_to_delay+1
  5611  0838  3196  26C8  3188   	fcall	_Delay_ms
  5612                           
  5613                           ;adf7012.c: 333: if (!Read_Adf7012_Muxout())
  5614  083B  3195  25D5  3188   	fcall	_Read_Adf7012_Muxout
  5615  083E  3800               	iorlw	0
  5616  083F  1903               	btfsc	3,2
  5617  0840  0008               	return
  5618                           
  5619                           ;adf7012.c: 337: else
  5620                           ;adf7012.c: 338: {
  5621                           ;adf7012.c: 340: Adf_Lock();
  5622                           
  5623                           ;adf7012.c: 336: }
  5624                           
  5625                           ;adf7012.c: 334: {
  5626                           ;adf7012.c: 335: return 0;
  5627                           ;	Return value of _Ptt_On is never used
  5628  0841  3189  21BB  3188   	fcall	_Adf_Lock
  5629                           
  5630                           ;adf7012.c: 341: adf_config.r3.pa_enable = 1;
  5631  0844  0021               	movlb	1	; select bank1
  5632  0845  01BA               	clrf	(_adf_config^(0+128)+26)
  5633  0846  0ABA               	incf	(_adf_config^(0+128)+26),f
  5634                           
  5635                           ;adf7012.c: 342: adf_config.r2.power_amplifier_level = 63;
  5636  0847  303F               	movlw	63
  5637  0848  0020               	movlb	0	; select bank0
  5638  0849  00ED               	movwf	??_Ptt_On
  5639  084A  086D               	movf	??_Ptt_On,w
  5640  084B  0021               	movlb	1	; select bank1
  5641  084C  00B2               	movwf	(_adf_config^(0+128)+18)
  5642                           
  5643                           ;adf7012.c: 344: Delay_ms(10);
  5644  084D  300A               	movlw	10
  5645  084E  00F2               	movwf	Delay_ms@time_to_delay
  5646  084F  3000               	movlw	0
  5647  0850  00F3               	movwf	Delay_ms@time_to_delay+1
  5648  0851  3196  26C8  3188   	fcall	_Delay_ms
  5649                           
  5650                           ;adf7012.c: 345: Adf_Write_Config();
  5651  0854  3195  25B0  3188   	fcall	_Adf_Write_Config
  5652                           
  5653                           ;adf7012.c: 346: Delay_ms(1);
  5654  0857  3001               	movlw	1
  5655  0858  00F2               	movwf	Delay_ms@time_to_delay
  5656  0859  3000               	movlw	0
  5657  085A  00F3               	movwf	Delay_ms@time_to_delay+1
  5658  085B  3196  26C8         	fcall	_Delay_ms
  5659                           
  5660                           ;adf7012.c: 348: return 1;
  5661                           ;	Return value of _Ptt_On is never used
  5662  085D  0008               	return
  5663  085E                     __end_of_Ptt_On:	
  5664                           
  5665                           	psect	text28
  5666  09BB                     __ptext28:	
  5667 ;; *************** function _Adf_Lock *****************
  5668 ;; Defined at:
  5669 ;;		line 232 in file "adf7012.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;		None
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  bias            2    2[BANK1 ] int 
  5674 ;;  adj             2    0[BANK1 ] int 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  2  320[COMMON] int 
  5677 ;; Registers used:
  5678 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5685 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5687 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5688 ;;Total ram usage:        6 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    7
  5691 ;; This function calls:
  5692 ;;		_Adf_Locked
  5693 ;;		_Adf_Write_Config
  5694 ;;		_Delay_ms
  5695 ;; This function is called by:
  5696 ;;		_Ptt_On
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           
  5701                           ;psect for function _Adf_Lock
  5702  09BB                     _Adf_Lock:	
  5703                           
  5704                           ;adf7012.c: 235: Delay_ms(200);
  5705                           
  5706                           ;incstack = 0
  5707                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5708  09BB  30C8               	movlw	200
  5709  09BC  00F2               	movwf	Delay_ms@time_to_delay
  5710  09BD  3000               	movlw	0
  5711  09BE  00F3               	movwf	Delay_ms@time_to_delay+1
  5712  09BF  3196  26C8  3189   	fcall	_Delay_ms
  5713                           
  5714                           ;adf7012.c: 236: int adj = adf_config.r0.vco_adjust;
  5715  09C2  0021               	movlb	1	; select bank1
  5716  09C3  0828               	movf	(_adf_config^(0+128)+8),w
  5717  09C4  0020               	movlb	0	; select bank0
  5718  09C5  00EB               	movwf	??_Adf_Lock
  5719  09C6  01EC               	clrf	??_Adf_Lock+1
  5720  09C7  086B               	movf	??_Adf_Lock,w
  5721  09C8  0021               	movlb	1	; select bank1
  5722  09C9  00DB               	movwf	Adf_Lock@adj^(0+128)
  5723  09CA  0020               	movlb	0	; select bank0
  5724  09CB  086C               	movf	??_Adf_Lock+1,w
  5725  09CC  0021               	movlb	1	; select bank1
  5726  09CD  00DC               	movwf	(Adf_Lock@adj+1)^(0+128)
  5727                           
  5728                           ;adf7012.c: 237: int bias = adf_config.r3.vco_bias;
  5729  09CE  0843               	movf	(_adf_config^(0+128)+35),w
  5730  09CF  0020               	movlb	0	; select bank0
  5731  09D0  00EB               	movwf	??_Adf_Lock
  5732  09D1  01EC               	clrf	??_Adf_Lock+1
  5733  09D2  086B               	movf	??_Adf_Lock,w
  5734  09D3  0021               	movlb	1	; select bank1
  5735  09D4  00DD               	movwf	Adf_Lock@bias^(0+128)
  5736  09D5  0020               	movlb	0	; select bank0
  5737  09D6  086C               	movf	??_Adf_Lock+1,w
  5738  09D7  0021               	movlb	1	; select bank1
  5739  09D8  00DE               	movwf	(Adf_Lock@bias+1)^(0+128)
  5740                           
  5741                           ;adf7012.c: 239: adf_config.r3.pll_enable = 1;
  5742  09D9  01B9               	clrf	(_adf_config^(0+128)+25)
  5743  09DA  0AB9               	incf	(_adf_config^(0+128)+25),f
  5744                           
  5745                           ;adf7012.c: 241: adf_config.r3.muxout = 5;
  5746  09DB  3005               	movlw	5
  5747  09DC  0020               	movlb	0	; select bank0
  5748  09DD  00EB               	movwf	??_Adf_Lock
  5749  09DE  086B               	movf	??_Adf_Lock,w
  5750  09DF  0021               	movlb	1	; select bank1
  5751  09E0  00C1               	movwf	(_adf_config^(0+128)+33)
  5752                           
  5753                           ;adf7012.c: 243: Adf_Write_Config();
  5754  09E1  3195  25B0  3189   	fcall	_Adf_Write_Config
  5755                           
  5756                           ;adf7012.c: 244: Delay_ms(5);
  5757  09E4  3005               	movlw	5
  5758  09E5  00F2               	movwf	Delay_ms@time_to_delay
  5759  09E6  3000               	movlw	0
  5760  09E7  00F3               	movwf	Delay_ms@time_to_delay+1
  5761  09E8  3196  26C8  3189   	fcall	_Delay_ms
  5762  09EB                     l3437:	
  5763                           ;adf7012.c: 246: while(!Adf_Locked()) {
  5764                           
  5765  09EB  3195  256E  3189   	fcall	_Adf_Locked
  5766  09EE  3A00               	xorlw	0
  5767  09EF  1D03               	btfss	3,2
  5768  09F0  0008               	return
  5769                           
  5770                           ;adf7012.c: 248: adf_config.r0.vco_adjust = adj;
  5771  09F1  0021               	movlb	1	; select bank1
  5772  09F2  085B               	movf	Adf_Lock@adj^(0+128),w
  5773  09F3  0020               	movlb	0	; select bank0
  5774  09F4  00EB               	movwf	??_Adf_Lock
  5775  09F5  086B               	movf	??_Adf_Lock,w
  5776  09F6  0021               	movlb	1	; select bank1
  5777  09F7  00A8               	movwf	(_adf_config^(0+128)+8)
  5778                           
  5779                           ;adf7012.c: 249: adf_config.r3.vco_bias = bias;
  5780  09F8  085D               	movf	Adf_Lock@bias^(0+128),w
  5781  09F9  0020               	movlb	0	; select bank0
  5782  09FA  00EB               	movwf	??_Adf_Lock
  5783  09FB  086B               	movf	??_Adf_Lock,w
  5784  09FC  0021               	movlb	1	; select bank1
  5785  09FD  00C3               	movwf	(_adf_config^(0+128)+35)
  5786                           
  5787                           ;adf7012.c: 251: adf_config.r3.muxout = 5;
  5788  09FE  3005               	movlw	5
  5789  09FF  0020               	movlb	0	; select bank0
  5790  0A00  00EB               	movwf	??_Adf_Lock
  5791  0A01  086B               	movf	??_Adf_Lock,w
  5792  0A02  0021               	movlb	1	; select bank1
  5793  0A03  00C1               	movwf	(_adf_config^(0+128)+33)
  5794                           
  5795                           ;adf7012.c: 252: Adf_Write_Config();
  5796  0A04  3195  25B0  3189   	fcall	_Adf_Write_Config
  5797                           
  5798                           ;adf7012.c: 253: Delay_ms(5);
  5799  0A07  3005               	movlw	5
  5800  0A08  00F2               	movwf	Delay_ms@time_to_delay
  5801  0A09  3000               	movlw	0
  5802  0A0A  00F3               	movwf	Delay_ms@time_to_delay+1
  5803  0A0B  3196  26C8  3189   	fcall	_Delay_ms
  5804                           
  5805                           ;adf7012.c: 254: if(++bias == 14) {
  5806  0A0E  3001               	movlw	1
  5807  0A0F  0021               	movlb	1	; select bank1
  5808  0A10  07DD               	addwf	Adf_Lock@bias^(0+128),f
  5809  0A11  3000               	movlw	0
  5810  0A12  3DDE               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  5811  0A13  300E               	movlw	14
  5812  0A14  065D               	xorwf	Adf_Lock@bias^(0+128),w
  5813  0A15  045E               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  5814  0A16  1D03               	skipz
  5815  0A17  29EB               	goto	l3437
  5816                           
  5817                           ;adf7012.c: 255: bias = 1;
  5818  0A18  3001               	movlw	1
  5819  0A19  00DD               	movwf	Adf_Lock@bias^(0+128)
  5820  0A1A  3000               	movlw	0
  5821  0A1B  00DE               	movwf	(Adf_Lock@bias^(0+128)+1)
  5822                           
  5823                           ;adf7012.c: 256: if(++adj == 4) {
  5824  0A1C  3001               	movlw	1
  5825  0A1D  07DB               	addwf	Adf_Lock@adj^(0+128),f
  5826  0A1E  3000               	movlw	0
  5827  0A1F  3DDC               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  5828  0A20  3004               	movlw	4
  5829  0A21  065B               	xorwf	Adf_Lock@adj^(0+128),w
  5830  0A22  045C               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  5831  0A23  1D03               	skipz
  5832  0A24  29EB               	goto	l3437
  5833                           
  5834                           ;adf7012.c: 259: adf_config.r0.vco_adjust = 0;
  5835  0A25  01A8               	clrf	(_adf_config^(0+128)+8)
  5836                           
  5837                           ;adf7012.c: 260: adf_config.r3.vco_bias = 5;
  5838  0A26  3005               	movlw	5
  5839  0A27  0020               	movlb	0	; select bank0
  5840  0A28  00EB               	movwf	??_Adf_Lock
  5841  0A29  086B               	movf	??_Adf_Lock,w
  5842  0A2A  0021               	movlb	1	; select bank1
  5843  0A2B  00C3               	movwf	(_adf_config^(0+128)+35)
  5844                           
  5845                           ;adf7012.c: 262: return 0;
  5846                           ;	Return value of _Adf_Lock is never used
  5847  0A2C  0008               	return
  5848  0A2D                     __end_of_Adf_Lock:	
  5849                           ;adf7012.c: 263: }
  5850                           ;adf7012.c: 264: }
  5851                           ;adf7012.c: 265: }
  5852                           ;adf7012.c: 269: return 1;
  5853                           ;	Return value of _Adf_Lock is never used
  5854                           
  5855                           
  5856                           	psect	text29
  5857  15B0                     __ptext29:	
  5858 ;; *************** function _Adf_Write_Config *****************
  5859 ;; Defined at:
  5860 ;;		line 151 in file "adf7012.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;		None
  5863 ;; Auto vars:     Size  Location     Type
  5864 ;;		None
  5865 ;; Return value:  Size  Location     Type
  5866 ;;		None               void
  5867 ;; Registers used:
  5868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;Total ram usage:        0 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; Hardware stack levels required when called:    6
  5881 ;; This function calls:
  5882 ;;		_Adf_Write_Register_One
  5883 ;;		_Adf_Write_Register_Three
  5884 ;;		_Adf_Write_Register_Two
  5885 ;;		_Adf_Write_Register_Zero
  5886 ;; This function is called by:
  5887 ;;		_Adf_Lock
  5888 ;;		_Radio_Setup
  5889 ;;		_Ptt_On
  5890 ;;		_Ptt_Off
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           
  5895                           ;psect for function _Adf_Write_Config
  5896  15B0                     _Adf_Write_Config:	
  5897                           
  5898                           ;adf7012.c: 152: Adf_Write_Register_Zero();
  5899                           
  5900                           ;incstack = 0
  5901                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5902  15B0  318D  25A2  3195   	fcall	_Adf_Write_Register_Zero
  5903                           
  5904                           ;adf7012.c: 153: Adf_Write_Register_One();
  5905  15B3  3189  214A  3195   	fcall	_Adf_Write_Register_One
  5906                           
  5907                           ;adf7012.c: 154: Adf_Write_Register_Two();
  5908  15B6  318C  24EB  3195   	fcall	_Adf_Write_Register_Two
  5909                           
  5910                           ;adf7012.c: 155: Adf_Write_Register_Three();
  5911  15B9  3183  230E         	fcall	_Adf_Write_Register_Three
  5912  15BB  0008               	return
  5913  15BC                     __end_of_Adf_Write_Config:	
  5914                           
  5915                           	psect	text30
  5916  0DA2                     __ptext30:	
  5917 ;; *************** function _Adf_Write_Register_Zero *****************
  5918 ;; Defined at:
  5919 ;;		line 158 in file "adf7012.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  reg_ptr         4   39[BANK0 ] unsigned char [4]
  5924 ;;  reg             4   43[BANK0 ] unsigned long 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;		None               void
  5927 ;; Registers used:
  5928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;Total ram usage:       36 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    5
  5941 ;; This function calls:
  5942 ;;		_Reverse_Array
  5943 ;;		_Write_Adf7012_Reg
  5944 ;;		_memcpy
  5945 ;; This function is called by:
  5946 ;;		_Adf_Write_Config
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           
  5951                           ;psect for function _Adf_Write_Register_Zero
  5952  0DA2                     _Adf_Write_Register_Zero:	
  5953                           
  5954                           ;adf7012.c: 160: uint32_t reg =
  5955                           ;adf7012.c: 161: (0) |
  5956                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  5957                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  5958                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  5959                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  5960                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  5961                           ;adf7012.c: 167: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  5962                           
  5963                           ;incstack = 0
  5964                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5965  0DA2  0021               	movlb	1	; select bank1
  5966  0DA3  0829               	movf	(_adf_config^(0+128)+9),w
  5967  0DA4  3903               	andlw	3
  5968  0DA5  0020               	movlb	0	; select bank0
  5969  0DA6  00AB               	movwf	??_Adf_Write_Register_Zero
  5970  0DA7  01AC               	clrf	??_Adf_Write_Register_Zero+1
  5971  0DA8  01AD               	clrf	??_Adf_Write_Register_Zero+2
  5972  0DA9  01AE               	clrf	??_Adf_Write_Register_Zero+3
  5973  0DAA  3019               	movlw	25
  5974  0DAB                     u4035:	
  5975  0DAB  35AB               	lslf	??_Adf_Write_Register_Zero,f
  5976  0DAC  0DAC               	rlf	??_Adf_Write_Register_Zero+1,f
  5977  0DAD  0DAD               	rlf	??_Adf_Write_Register_Zero+2,f
  5978  0DAE  0DAE               	rlf	??_Adf_Write_Register_Zero+3,f
  5979  0DAF  0B89               	decfsz	9,f
  5980  0DB0  2DAB               	goto	u4035
  5981  0DB1  0021               	movlb	1	; select bank1
  5982  0DB2  0828               	movf	(_adf_config^(0+128)+8),w
  5983  0DB3  3903               	andlw	3
  5984  0DB4  0020               	movlb	0	; select bank0
  5985  0DB5  00AF               	movwf	??_Adf_Write_Register_Zero+4
  5986  0DB6  01B0               	clrf	??_Adf_Write_Register_Zero+5
  5987  0DB7  01B1               	clrf	??_Adf_Write_Register_Zero+6
  5988  0DB8  01B2               	clrf	??_Adf_Write_Register_Zero+7
  5989  0DB9  3017               	movlw	23
  5990  0DBA                     u4045:	
  5991  0DBA  35AF               	lslf	??_Adf_Write_Register_Zero+4,f
  5992  0DBB  0DB0               	rlf	??_Adf_Write_Register_Zero+5,f
  5993  0DBC  0DB1               	rlf	??_Adf_Write_Register_Zero+6,f
  5994  0DBD  0DB2               	rlf	??_Adf_Write_Register_Zero+7,f
  5995  0DBE  0B89               	decfsz	9,f
  5996  0DBF  2DBA               	goto	u4045
  5997  0DC0  0021               	movlb	1	; select bank1
  5998  0DC1  0827               	movf	(_adf_config^(0+128)+7),w
  5999  0DC2  390F               	andlw	15
  6000  0DC3  0020               	movlb	0	; select bank0
  6001  0DC4  00B3               	movwf	??_Adf_Write_Register_Zero+8
  6002  0DC5  01B4               	clrf	??_Adf_Write_Register_Zero+9
  6003  0DC6  01B5               	clrf	??_Adf_Write_Register_Zero+10
  6004  0DC7  01B6               	clrf	??_Adf_Write_Register_Zero+11
  6005  0DC8  3013               	movlw	19
  6006  0DC9                     u4055:	
  6007  0DC9  35B3               	lslf	??_Adf_Write_Register_Zero+8,f
  6008  0DCA  0DB4               	rlf	??_Adf_Write_Register_Zero+9,f
  6009  0DCB  0DB5               	rlf	??_Adf_Write_Register_Zero+10,f
  6010  0DCC  0DB6               	rlf	??_Adf_Write_Register_Zero+11,f
  6011  0DCD  0B89               	decfsz	9,f
  6012  0DCE  2DC9               	goto	u4055
  6013  0DCF  0021               	movlb	1	; select bank1
  6014  0DD0  0826               	movf	(_adf_config^(0+128)+6),w
  6015  0DD1  3901               	andlw	1
  6016  0DD2  0020               	movlb	0	; select bank0
  6017  0DD3  00B7               	movwf	??_Adf_Write_Register_Zero+12
  6018  0DD4  01B8               	clrf	??_Adf_Write_Register_Zero+13
  6019  0DD5  01B9               	clrf	??_Adf_Write_Register_Zero+14
  6020  0DD6  01BA               	clrf	??_Adf_Write_Register_Zero+15
  6021  0DD7  3012               	movlw	18
  6022  0DD8                     u4065:	
  6023  0DD8  35B7               	lslf	??_Adf_Write_Register_Zero+12,f
  6024  0DD9  0DB8               	rlf	??_Adf_Write_Register_Zero+13,f
  6025  0DDA  0DB9               	rlf	??_Adf_Write_Register_Zero+14,f
  6026  0DDB  0DBA               	rlf	??_Adf_Write_Register_Zero+15,f
  6027  0DDC  0B89               	decfsz	9,f
  6028  0DDD  2DD8               	goto	u4065
  6029  0DDE  0021               	movlb	1	; select bank1
  6030  0DDF  0825               	movf	(_adf_config^(0+128)+5),w
  6031  0DE0  3901               	andlw	1
  6032  0DE1  0020               	movlb	0	; select bank0
  6033  0DE2  00BB               	movwf	??_Adf_Write_Register_Zero+16
  6034  0DE3  01BC               	clrf	??_Adf_Write_Register_Zero+17
  6035  0DE4  01BD               	clrf	??_Adf_Write_Register_Zero+18
  6036  0DE5  01BE               	clrf	??_Adf_Write_Register_Zero+19
  6037  0DE6  3011               	movlw	17
  6038  0DE7                     u4075:	
  6039  0DE7  35BB               	lslf	??_Adf_Write_Register_Zero+16,f
  6040  0DE8  0DBC               	rlf	??_Adf_Write_Register_Zero+17,f
  6041  0DE9  0DBD               	rlf	??_Adf_Write_Register_Zero+18,f
  6042  0DEA  0DBE               	rlf	??_Adf_Write_Register_Zero+19,f
  6043  0DEB  0B89               	decfsz	9,f
  6044  0DEC  2DE7               	goto	u4075
  6045  0DED  0021               	movlb	1	; select bank1
  6046  0DEE  0824               	movf	(_adf_config^(0+128)+4),w
  6047  0DEF  390F               	andlw	15
  6048  0DF0  0020               	movlb	0	; select bank0
  6049  0DF1  00BF               	movwf	??_Adf_Write_Register_Zero+20
  6050  0DF2  01C0               	clrf	??_Adf_Write_Register_Zero+21
  6051  0DF3  01C1               	clrf	??_Adf_Write_Register_Zero+22
  6052  0DF4  01C2               	clrf	??_Adf_Write_Register_Zero+23
  6053  0DF5  300D               	movlw	13
  6054  0DF6                     u4085:	
  6055  0DF6  35BF               	lslf	??_Adf_Write_Register_Zero+20,f
  6056  0DF7  0DC0               	rlf	??_Adf_Write_Register_Zero+21,f
  6057  0DF8  0DC1               	rlf	??_Adf_Write_Register_Zero+22,f
  6058  0DF9  0DC2               	rlf	??_Adf_Write_Register_Zero+23,f
  6059  0DFA  0B89               	decfsz	9,f
  6060  0DFB  2DF6               	goto	u4085
  6061  0DFC  30FF               	movlw	255
  6062  0DFD  0021               	movlb	1	; select bank1
  6063  0DFE  0520               	andwf	_adf_config^(0+128),w
  6064  0DFF  0020               	movlb	0	; select bank0
  6065  0E00  00C3               	movwf	??_Adf_Write_Register_Zero+24
  6066  0E01  3007               	movlw	7
  6067  0E02  0021               	movlb	1	; select bank1
  6068  0E03  0521               	andwf	(_adf_config+1)^(0+128),w
  6069  0E04  0020               	movlb	0	; select bank0
  6070  0E05  00C4               	movwf	??_Adf_Write_Register_Zero+25
  6071  0E06  3000               	movlw	0
  6072  0E07  0021               	movlb	1	; select bank1
  6073  0E08  0522               	andwf	(_adf_config+2)^(0+128),w
  6074  0E09  0020               	movlb	0	; select bank0
  6075  0E0A  00C5               	movwf	??_Adf_Write_Register_Zero+26
  6076  0E0B  3000               	movlw	0
  6077  0E0C  0021               	movlb	1	; select bank1
  6078  0E0D  0523               	andwf	(_adf_config+3)^(0+128),w
  6079  0E0E  0020               	movlb	0	; select bank0
  6080  0E0F  00C6               	movwf	??_Adf_Write_Register_Zero+27
  6081  0E10  3002               	movlw	2
  6082  0E11                     u4095:	
  6083  0E11  35C3               	lslf	??_Adf_Write_Register_Zero+24,f
  6084  0E12  0DC4               	rlf	??_Adf_Write_Register_Zero+25,f
  6085  0E13  0DC5               	rlf	??_Adf_Write_Register_Zero+26,f
  6086  0E14  0DC6               	rlf	??_Adf_Write_Register_Zero+27,f
  6087  0E15  0B89               	decfsz	9,f
  6088  0E16  2E11               	goto	u4095
  6089  0E17  0843               	movf	??_Adf_Write_Register_Zero+24,w
  6090  0E18  04BF               	iorwf	??_Adf_Write_Register_Zero+20,f
  6091  0E19  0844               	movf	??_Adf_Write_Register_Zero+25,w
  6092  0E1A  04C0               	iorwf	??_Adf_Write_Register_Zero+21,f
  6093  0E1B  0845               	movf	??_Adf_Write_Register_Zero+26,w
  6094  0E1C  04C1               	iorwf	??_Adf_Write_Register_Zero+22,f
  6095  0E1D  0846               	movf	??_Adf_Write_Register_Zero+27,w
  6096  0E1E  04C2               	iorwf	??_Adf_Write_Register_Zero+23,f
  6097  0E1F  083F               	movf	??_Adf_Write_Register_Zero+20,w
  6098  0E20  04BB               	iorwf	??_Adf_Write_Register_Zero+16,f
  6099  0E21  0840               	movf	??_Adf_Write_Register_Zero+21,w
  6100  0E22  04BC               	iorwf	??_Adf_Write_Register_Zero+17,f
  6101  0E23  0841               	movf	??_Adf_Write_Register_Zero+22,w
  6102  0E24  04BD               	iorwf	??_Adf_Write_Register_Zero+18,f
  6103  0E25  0842               	movf	??_Adf_Write_Register_Zero+23,w
  6104  0E26  04BE               	iorwf	??_Adf_Write_Register_Zero+19,f
  6105  0E27  083B               	movf	??_Adf_Write_Register_Zero+16,w
  6106  0E28  04B7               	iorwf	??_Adf_Write_Register_Zero+12,f
  6107  0E29  083C               	movf	??_Adf_Write_Register_Zero+17,w
  6108  0E2A  04B8               	iorwf	??_Adf_Write_Register_Zero+13,f
  6109  0E2B  083D               	movf	??_Adf_Write_Register_Zero+18,w
  6110  0E2C  04B9               	iorwf	??_Adf_Write_Register_Zero+14,f
  6111  0E2D  083E               	movf	??_Adf_Write_Register_Zero+19,w
  6112  0E2E  04BA               	iorwf	??_Adf_Write_Register_Zero+15,f
  6113  0E2F  0837               	movf	??_Adf_Write_Register_Zero+12,w
  6114  0E30  04B3               	iorwf	??_Adf_Write_Register_Zero+8,f
  6115  0E31  0838               	movf	??_Adf_Write_Register_Zero+13,w
  6116  0E32  04B4               	iorwf	??_Adf_Write_Register_Zero+9,f
  6117  0E33  0839               	movf	??_Adf_Write_Register_Zero+14,w
  6118  0E34  04B5               	iorwf	??_Adf_Write_Register_Zero+10,f
  6119  0E35  083A               	movf	??_Adf_Write_Register_Zero+15,w
  6120  0E36  04B6               	iorwf	??_Adf_Write_Register_Zero+11,f
  6121  0E37  0833               	movf	??_Adf_Write_Register_Zero+8,w
  6122  0E38  04AF               	iorwf	??_Adf_Write_Register_Zero+4,f
  6123  0E39  0834               	movf	??_Adf_Write_Register_Zero+9,w
  6124  0E3A  04B0               	iorwf	??_Adf_Write_Register_Zero+5,f
  6125  0E3B  0835               	movf	??_Adf_Write_Register_Zero+10,w
  6126  0E3C  04B1               	iorwf	??_Adf_Write_Register_Zero+6,f
  6127  0E3D  0836               	movf	??_Adf_Write_Register_Zero+11,w
  6128  0E3E  04B2               	iorwf	??_Adf_Write_Register_Zero+7,f
  6129  0E3F  082B               	movf	??_Adf_Write_Register_Zero,w
  6130  0E40  042F               	iorwf	??_Adf_Write_Register_Zero+4,w
  6131  0E41  00CB               	movwf	Adf_Write_Register_Zero@reg
  6132  0E42  082C               	movf	??_Adf_Write_Register_Zero+1,w
  6133  0E43  0430               	iorwf	??_Adf_Write_Register_Zero+5,w
  6134  0E44  00CC               	movwf	Adf_Write_Register_Zero@reg+1
  6135  0E45  082D               	movf	??_Adf_Write_Register_Zero+2,w
  6136  0E46  0431               	iorwf	??_Adf_Write_Register_Zero+6,w
  6137  0E47  00CD               	movwf	Adf_Write_Register_Zero@reg+2
  6138  0E48  082E               	movf	??_Adf_Write_Register_Zero+3,w
  6139  0E49  0432               	iorwf	??_Adf_Write_Register_Zero+7,w
  6140  0E4A  00CE               	movwf	Adf_Write_Register_Zero@reg+3
  6141                           
  6142                           ;adf7012.c: 171: uint8_t reg_ptr[4];
  6143                           ;adf7012.c: 172: memcpy(reg_ptr, &reg, 4);
  6144  0E4B  304B               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  6145  0E4C  00AB               	movwf	??_Adf_Write_Register_Zero
  6146  0E4D  082B               	movf	??_Adf_Write_Register_Zero,w
  6147  0E4E  00F2               	movwf	memcpy@s1
  6148  0E4F  3004               	movlw	4
  6149  0E50  00F3               	movwf	memcpy@n
  6150  0E51  3000               	movlw	0
  6151  0E52  00F4               	movwf	memcpy@n+1
  6152  0E53  3047               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  6153  0E54  3188  2000  318D   	fcall	_memcpy
  6154                           
  6155                           ;adf7012.c: 173: Reverse_Array(reg_ptr,4);
  6156  0E57  3004               	movlw	4
  6157  0E58  0020               	movlb	0	; select bank0
  6158  0E59  00AB               	movwf	??_Adf_Write_Register_Zero
  6159  0E5A  082B               	movf	??_Adf_Write_Register_Zero,w
  6160  0E5B  00F9               	movwf	Reverse_Array@length
  6161  0E5C  3047               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  6162  0E5D  3197  27CC  318D   	fcall	_Reverse_Array
  6163                           
  6164                           ;adf7012.c: 174: Write_Adf7012_Reg(reg_ptr, 4);
  6165  0E60  3004               	movlw	4
  6166  0E61  0020               	movlb	0	; select bank0
  6167  0E62  00AB               	movwf	??_Adf_Write_Register_Zero
  6168  0E63  082B               	movf	??_Adf_Write_Register_Zero,w
  6169  0E64  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  6170  0E65  3047               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  6171  0E66  3188  205E         	fcall	_Write_Adf7012_Reg
  6172  0E68  0008               	return
  6173  0E69                     __end_of_Adf_Write_Register_Zero:	
  6174                           
  6175                           	psect	text31
  6176  0CEB                     __ptext31:	
  6177 ;; *************** function _Adf_Write_Register_Two *****************
  6178 ;; Defined at:
  6179 ;;		line 190 in file "adf7012.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;		None
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  reg_ptr         4   35[BANK0 ] unsigned char [4]
  6184 ;;  reg             4   39[BANK0 ] unsigned long 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;		None               void
  6187 ;; Registers used:
  6188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;Total ram usage:       32 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    5
  6201 ;; This function calls:
  6202 ;;		_Reverse_Array
  6203 ;;		_Write_Adf7012_Reg
  6204 ;;		_memcpy
  6205 ;; This function is called by:
  6206 ;;		_Adf_Write_Config
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           
  6211                           ;psect for function _Adf_Write_Register_Two
  6212  0CEB                     _Adf_Write_Register_Two:	
  6213                           
  6214                           ;adf7012.c: 191: uint32_t reg =
  6215                           ;adf7012.c: 192: (2) |
  6216                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  6217                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  6218                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  6219                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  6220                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  6221                           ;adf7012.c: 198: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  6222                           
  6223                           ;incstack = 0
  6224                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6225  0CEB  0021               	movlb	1	; select bank1
  6226  0CEC  0838               	movf	(_adf_config^(0+128)+24),w
  6227  0CED  3903               	andlw	3
  6228  0CEE  0020               	movlb	0	; select bank0
  6229  0CEF  00AB               	movwf	??_Adf_Write_Register_Two
  6230  0CF0  01AC               	clrf	??_Adf_Write_Register_Two+1
  6231  0CF1  01AD               	clrf	??_Adf_Write_Register_Two+2
  6232  0CF2  01AE               	clrf	??_Adf_Write_Register_Two+3
  6233  0CF3  3017               	movlw	23
  6234  0CF4                     u4135:	
  6235  0CF4  35AB               	lslf	??_Adf_Write_Register_Two,f
  6236  0CF5  0DAC               	rlf	??_Adf_Write_Register_Two+1,f
  6237  0CF6  0DAD               	rlf	??_Adf_Write_Register_Two+2,f
  6238  0CF7  0DAE               	rlf	??_Adf_Write_Register_Two+3,f
  6239  0CF8  0B89               	decfsz	9,f
  6240  0CF9  2CF4               	goto	u4135
  6241  0CFA  0021               	movlb	1	; select bank1
  6242  0CFB  0837               	movf	(_adf_config^(0+128)+23),w
  6243  0CFC  3907               	andlw	7
  6244  0CFD  0020               	movlb	0	; select bank0
  6245  0CFE  00AF               	movwf	??_Adf_Write_Register_Two+4
  6246  0CFF  01B0               	clrf	??_Adf_Write_Register_Two+5
  6247  0D00  01B1               	clrf	??_Adf_Write_Register_Two+6
  6248  0D01  01B2               	clrf	??_Adf_Write_Register_Two+7
  6249  0D02  3014               	movlw	20
  6250  0D03                     u4145:	
  6251  0D03  35AF               	lslf	??_Adf_Write_Register_Two+4,f
  6252  0D04  0DB0               	rlf	??_Adf_Write_Register_Two+5,f
  6253  0D05  0DB1               	rlf	??_Adf_Write_Register_Two+6,f
  6254  0D06  0DB2               	rlf	??_Adf_Write_Register_Two+7,f
  6255  0D07  0B89               	decfsz	9,f
  6256  0D08  2D03               	goto	u4145
  6257  0D09  3013               	movlw	19
  6258  0D0A  3EA0               	addlw	_adf_config& (0+255)
  6259  0D0B  0086               	movwf	6
  6260  0D0C  0187               	clrf	7
  6261  0D0D  30FF               	movlw	255
  6262  0D0E  0501               	andwf	1,w
  6263  0D0F  00B3               	movwf	??_Adf_Write_Register_Two+8
  6264  0D10  3141               	addfsr 1,1
  6265  0D11  3001               	movlw	1
  6266  0D12  0501               	andwf	1,w
  6267  0D13  00B4               	movwf	??_Adf_Write_Register_Two+9
  6268  0D14  3141               	addfsr 1,1
  6269  0D15  3000               	movlw	0
  6270  0D16  0501               	andwf	1,w
  6271  0D17  00B5               	movwf	??_Adf_Write_Register_Two+10
  6272  0D18  3141               	addfsr 1,1
  6273  0D19  3000               	movlw	0
  6274  0D1A  0501               	andwf	1,w
  6275  0D1B  00B6               	movwf	??_Adf_Write_Register_Two+11
  6276  0D1C  300B               	movlw	11
  6277  0D1D                     u4155:	
  6278  0D1D  35B3               	lslf	??_Adf_Write_Register_Two+8,f
  6279  0D1E  0DB4               	rlf	??_Adf_Write_Register_Two+9,f
  6280  0D1F  0DB5               	rlf	??_Adf_Write_Register_Two+10,f
  6281  0D20  0DB6               	rlf	??_Adf_Write_Register_Two+11,f
  6282  0D21  0B89               	decfsz	9,f
  6283  0D22  2D1D               	goto	u4155
  6284  0D23  0021               	movlb	1	; select bank1
  6285  0D24  0832               	movf	(_adf_config^(0+128)+18),w
  6286  0D25  393F               	andlw	63
  6287  0D26  0020               	movlb	0	; select bank0
  6288  0D27  00B7               	movwf	??_Adf_Write_Register_Two+12
  6289  0D28  01B8               	clrf	??_Adf_Write_Register_Two+13
  6290  0D29  01B9               	clrf	??_Adf_Write_Register_Two+14
  6291  0D2A  01BA               	clrf	??_Adf_Write_Register_Two+15
  6292  0D2B  3005               	movlw	5
  6293  0D2C                     u4165:	
  6294  0D2C  35B7               	lslf	??_Adf_Write_Register_Two+12,f
  6295  0D2D  0DB8               	rlf	??_Adf_Write_Register_Two+13,f
  6296  0D2E  0DB9               	rlf	??_Adf_Write_Register_Two+14,f
  6297  0D2F  0DBA               	rlf	??_Adf_Write_Register_Two+15,f
  6298  0D30  0B89               	decfsz	9,f
  6299  0D31  2D2C               	goto	u4165
  6300  0D32  0021               	movlb	1	; select bank1
  6301  0D33  0831               	movf	(_adf_config^(0+128)+17),w
  6302  0D34  3901               	andlw	1
  6303  0D35  0020               	movlb	0	; select bank0
  6304  0D36  00BB               	movwf	??_Adf_Write_Register_Two+16
  6305  0D37  01BC               	clrf	??_Adf_Write_Register_Two+17
  6306  0D38  01BD               	clrf	??_Adf_Write_Register_Two+18
  6307  0D39  01BE               	clrf	??_Adf_Write_Register_Two+19
  6308  0D3A  3004               	movlw	4
  6309  0D3B                     u4175:	
  6310  0D3B  35BB               	lslf	??_Adf_Write_Register_Two+16,f
  6311  0D3C  0DBC               	rlf	??_Adf_Write_Register_Two+17,f
  6312  0D3D  0DBD               	rlf	??_Adf_Write_Register_Two+18,f
  6313  0D3E  0DBE               	rlf	??_Adf_Write_Register_Two+19,f
  6314  0D3F  0B89               	decfsz	9,f
  6315  0D40  2D3B               	goto	u4175
  6316  0D41  0021               	movlb	1	; select bank1
  6317  0D42  0830               	movf	(_adf_config^(0+128)+16),w
  6318  0D43  3903               	andlw	3
  6319  0D44  0020               	movlb	0	; select bank0
  6320  0D45  00BF               	movwf	??_Adf_Write_Register_Two+20
  6321  0D46  01C0               	clrf	??_Adf_Write_Register_Two+21
  6322  0D47  01C1               	clrf	??_Adf_Write_Register_Two+22
  6323  0D48  01C2               	clrf	??_Adf_Write_Register_Two+23
  6324  0D49  3002               	movlw	2
  6325  0D4A                     u4185:	
  6326  0D4A  35BF               	lslf	??_Adf_Write_Register_Two+20,f
  6327  0D4B  0DC0               	rlf	??_Adf_Write_Register_Two+21,f
  6328  0D4C  0DC1               	rlf	??_Adf_Write_Register_Two+22,f
  6329  0D4D  0DC2               	rlf	??_Adf_Write_Register_Two+23,f
  6330  0D4E  0B89               	decfsz	9,f
  6331  0D4F  2D4A               	goto	u4185
  6332  0D50  083F               	movf	??_Adf_Write_Register_Two+20,w
  6333  0D51  04BB               	iorwf	??_Adf_Write_Register_Two+16,f
  6334  0D52  0840               	movf	??_Adf_Write_Register_Two+21,w
  6335  0D53  04BC               	iorwf	??_Adf_Write_Register_Two+17,f
  6336  0D54  0841               	movf	??_Adf_Write_Register_Two+22,w
  6337  0D55  04BD               	iorwf	??_Adf_Write_Register_Two+18,f
  6338  0D56  0842               	movf	??_Adf_Write_Register_Two+23,w
  6339  0D57  04BE               	iorwf	??_Adf_Write_Register_Two+19,f
  6340  0D58  083B               	movf	??_Adf_Write_Register_Two+16,w
  6341  0D59  04B7               	iorwf	??_Adf_Write_Register_Two+12,f
  6342  0D5A  083C               	movf	??_Adf_Write_Register_Two+17,w
  6343  0D5B  04B8               	iorwf	??_Adf_Write_Register_Two+13,f
  6344  0D5C  083D               	movf	??_Adf_Write_Register_Two+18,w
  6345  0D5D  04B9               	iorwf	??_Adf_Write_Register_Two+14,f
  6346  0D5E  083E               	movf	??_Adf_Write_Register_Two+19,w
  6347  0D5F  04BA               	iorwf	??_Adf_Write_Register_Two+15,f
  6348  0D60  0837               	movf	??_Adf_Write_Register_Two+12,w
  6349  0D61  04B3               	iorwf	??_Adf_Write_Register_Two+8,f
  6350  0D62  0838               	movf	??_Adf_Write_Register_Two+13,w
  6351  0D63  04B4               	iorwf	??_Adf_Write_Register_Two+9,f
  6352  0D64  0839               	movf	??_Adf_Write_Register_Two+14,w
  6353  0D65  04B5               	iorwf	??_Adf_Write_Register_Two+10,f
  6354  0D66  083A               	movf	??_Adf_Write_Register_Two+15,w
  6355  0D67  04B6               	iorwf	??_Adf_Write_Register_Two+11,f
  6356  0D68  0833               	movf	??_Adf_Write_Register_Two+8,w
  6357  0D69  04AF               	iorwf	??_Adf_Write_Register_Two+4,f
  6358  0D6A  0834               	movf	??_Adf_Write_Register_Two+9,w
  6359  0D6B  04B0               	iorwf	??_Adf_Write_Register_Two+5,f
  6360  0D6C  0835               	movf	??_Adf_Write_Register_Two+10,w
  6361  0D6D  04B1               	iorwf	??_Adf_Write_Register_Two+6,f
  6362  0D6E  0836               	movf	??_Adf_Write_Register_Two+11,w
  6363  0D6F  04B2               	iorwf	??_Adf_Write_Register_Two+7,f
  6364  0D70  082F               	movf	??_Adf_Write_Register_Two+4,w
  6365  0D71  04AB               	iorwf	??_Adf_Write_Register_Two,f
  6366  0D72  0830               	movf	??_Adf_Write_Register_Two+5,w
  6367  0D73  04AC               	iorwf	??_Adf_Write_Register_Two+1,f
  6368  0D74  0831               	movf	??_Adf_Write_Register_Two+6,w
  6369  0D75  04AD               	iorwf	??_Adf_Write_Register_Two+2,f
  6370  0D76  0832               	movf	??_Adf_Write_Register_Two+7,w
  6371  0D77  04AE               	iorwf	??_Adf_Write_Register_Two+3,f
  6372  0D78  3002               	movlw	2
  6373  0D79  042B               	iorwf	??_Adf_Write_Register_Two,w
  6374  0D7A  00C7               	movwf	Adf_Write_Register_Two@reg
  6375  0D7B  3000               	movlw	0
  6376  0D7C  042C               	iorwf	??_Adf_Write_Register_Two+1,w
  6377  0D7D  00C8               	movwf	Adf_Write_Register_Two@reg+1
  6378  0D7E  3000               	movlw	0
  6379  0D7F  042D               	iorwf	??_Adf_Write_Register_Two+2,w
  6380  0D80  00C9               	movwf	Adf_Write_Register_Two@reg+2
  6381  0D81  3000               	movlw	0
  6382  0D82  042E               	iorwf	??_Adf_Write_Register_Two+3,w
  6383  0D83  00CA               	movwf	Adf_Write_Register_Two@reg+3
  6384                           
  6385                           ;adf7012.c: 201: uint8_t reg_ptr[4];
  6386                           ;adf7012.c: 202: memcpy(reg_ptr, &reg, 4);
  6387  0D84  3047               	movlw	Adf_Write_Register_Two@reg& (0+255)
  6388  0D85  00AB               	movwf	??_Adf_Write_Register_Two
  6389  0D86  082B               	movf	??_Adf_Write_Register_Two,w
  6390  0D87  00F2               	movwf	memcpy@s1
  6391  0D88  3004               	movlw	4
  6392  0D89  00F3               	movwf	memcpy@n
  6393  0D8A  3000               	movlw	0
  6394  0D8B  00F4               	movwf	memcpy@n+1
  6395  0D8C  3043               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6396  0D8D  3188  2000  318C   	fcall	_memcpy
  6397                           
  6398                           ;adf7012.c: 203: Reverse_Array(reg_ptr,4);
  6399  0D90  3004               	movlw	4
  6400  0D91  0020               	movlb	0	; select bank0
  6401  0D92  00AB               	movwf	??_Adf_Write_Register_Two
  6402  0D93  082B               	movf	??_Adf_Write_Register_Two,w
  6403  0D94  00F9               	movwf	Reverse_Array@length
  6404  0D95  3043               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6405  0D96  3197  27CC  318C   	fcall	_Reverse_Array
  6406                           
  6407                           ;adf7012.c: 204: Write_Adf7012_Reg(reg_ptr, 4);
  6408  0D99  3004               	movlw	4
  6409  0D9A  0020               	movlb	0	; select bank0
  6410  0D9B  00AB               	movwf	??_Adf_Write_Register_Two
  6411  0D9C  082B               	movf	??_Adf_Write_Register_Two,w
  6412  0D9D  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  6413  0D9E  3043               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6414  0D9F  3188  205E         	fcall	_Write_Adf7012_Reg
  6415  0DA1  0008               	return
  6416  0DA2                     __end_of_Adf_Write_Register_Two:	
  6417                           
  6418                           	psect	text32
  6419  030E                     __ptext32:	
  6420 ;; *************** function _Adf_Write_Register_Three *****************
  6421 ;; Defined at:
  6422 ;;		line 207 in file "adf7012.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;  reg_ptr         4   67[BANK0 ] unsigned char [4]
  6427 ;;  reg             4   71[BANK0 ] unsigned long 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;		None               void
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Totals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;Total ram usage:       64 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    5
  6444 ;; This function calls:
  6445 ;;		_Reverse_Array
  6446 ;;		_Write_Adf7012_Reg
  6447 ;;		_memcpy
  6448 ;; This function is called by:
  6449 ;;		_Adf_Write_Config
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           
  6454                           ;psect for function _Adf_Write_Register_Three
  6455  030E                     _Adf_Write_Register_Three:	
  6456                           
  6457                           ;adf7012.c: 208: uint32_t reg =
  6458                           ;adf7012.c: 209: (3) |
  6459                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  6460                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  6461                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  6462                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  6463                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  6464                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  6465                           ;adf7012.c: 216: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  6469  030E  0021               	movlb	1	; select bank1
  6470  030F  0846               	movf	(_adf_config^(0+128)+38),w
  6471  0310  390F               	andlw	15
  6472  0311  0020               	movlb	0	; select bank0
  6473  0312  00AB               	movwf	??_Adf_Write_Register_Three
  6474  0313  01AC               	clrf	??_Adf_Write_Register_Three+1
  6475  0314  01AD               	clrf	??_Adf_Write_Register_Three+2
  6476  0315  01AE               	clrf	??_Adf_Write_Register_Three+3
  6477  0316  301C               	movlw	28
  6478  0317                     u4195:	
  6479  0317  35AB               	lslf	??_Adf_Write_Register_Three,f
  6480  0318  0DAC               	rlf	??_Adf_Write_Register_Three+1,f
  6481  0319  0DAD               	rlf	??_Adf_Write_Register_Three+2,f
  6482  031A  0DAE               	rlf	??_Adf_Write_Register_Three+3,f
  6483  031B  0B89               	decfsz	9,f
  6484  031C  2B17               	goto	u4195
  6485  031D  0021               	movlb	1	; select bank1
  6486  031E  0845               	movf	(_adf_config^(0+128)+37),w
  6487  031F  391F               	andlw	31
  6488  0320  0020               	movlb	0	; select bank0
  6489  0321  00AF               	movwf	??_Adf_Write_Register_Three+4
  6490  0322  01B0               	clrf	??_Adf_Write_Register_Three+5
  6491  0323  01B1               	clrf	??_Adf_Write_Register_Three+6
  6492  0324  01B2               	clrf	??_Adf_Write_Register_Three+7
  6493  0325  3017               	movlw	23
  6494  0326                     u4205:	
  6495  0326  35AF               	lslf	??_Adf_Write_Register_Three+4,f
  6496  0327  0DB0               	rlf	??_Adf_Write_Register_Three+5,f
  6497  0328  0DB1               	rlf	??_Adf_Write_Register_Three+6,f
  6498  0329  0DB2               	rlf	??_Adf_Write_Register_Three+7,f
  6499  032A  0B89               	decfsz	9,f
  6500  032B  2B26               	goto	u4205
  6501  032C  0021               	movlb	1	; select bank1
  6502  032D  0844               	movf	(_adf_config^(0+128)+36),w
  6503  032E  3907               	andlw	7
  6504  032F  0020               	movlb	0	; select bank0
  6505  0330  00B3               	movwf	??_Adf_Write_Register_Three+8
  6506  0331  01B4               	clrf	??_Adf_Write_Register_Three+9
  6507  0332  01B5               	clrf	??_Adf_Write_Register_Three+10
  6508  0333  01B6               	clrf	??_Adf_Write_Register_Three+11
  6509  0334  3014               	movlw	20
  6510  0335                     u4215:	
  6511  0335  35B3               	lslf	??_Adf_Write_Register_Three+8,f
  6512  0336  0DB4               	rlf	??_Adf_Write_Register_Three+9,f
  6513  0337  0DB5               	rlf	??_Adf_Write_Register_Three+10,f
  6514  0338  0DB6               	rlf	??_Adf_Write_Register_Three+11,f
  6515  0339  0B89               	decfsz	9,f
  6516  033A  2B35               	goto	u4215
  6517  033B  0021               	movlb	1	; select bank1
  6518  033C  0843               	movf	(_adf_config^(0+128)+35),w
  6519  033D  390F               	andlw	15
  6520  033E  0020               	movlb	0	; select bank0
  6521  033F  00B7               	movwf	??_Adf_Write_Register_Three+12
  6522  0340  01B8               	clrf	??_Adf_Write_Register_Three+13
  6523  0341  01B9               	clrf	??_Adf_Write_Register_Three+14
  6524  0342  01BA               	clrf	??_Adf_Write_Register_Three+15
  6525  0343  3010               	movlw	16
  6526  0344                     u4225:	
  6527  0344  35B7               	lslf	??_Adf_Write_Register_Three+12,f
  6528  0345  0DB8               	rlf	??_Adf_Write_Register_Three+13,f
  6529  0346  0DB9               	rlf	??_Adf_Write_Register_Three+14,f
  6530  0347  0DBA               	rlf	??_Adf_Write_Register_Three+15,f
  6531  0348  0B89               	decfsz	9,f
  6532  0349  2B44               	goto	u4225
  6533  034A  0021               	movlb	1	; select bank1
  6534  034B  0842               	movf	(_adf_config^(0+128)+34),w
  6535  034C  3901               	andlw	1
  6536  034D  0020               	movlb	0	; select bank0
  6537  034E  00BB               	movwf	??_Adf_Write_Register_Three+16
  6538  034F  01BC               	clrf	??_Adf_Write_Register_Three+17
  6539  0350  01BD               	clrf	??_Adf_Write_Register_Three+18
  6540  0351  01BE               	clrf	??_Adf_Write_Register_Three+19
  6541  0352  300F               	movlw	15
  6542  0353                     u4235:	
  6543  0353  35BB               	lslf	??_Adf_Write_Register_Three+16,f
  6544  0354  0DBC               	rlf	??_Adf_Write_Register_Three+17,f
  6545  0355  0DBD               	rlf	??_Adf_Write_Register_Three+18,f
  6546  0356  0DBE               	rlf	??_Adf_Write_Register_Three+19,f
  6547  0357  0B89               	decfsz	9,f
  6548  0358  2B53               	goto	u4235
  6549  0359  0021               	movlb	1	; select bank1
  6550  035A  0841               	movf	(_adf_config^(0+128)+33),w
  6551  035B  390F               	andlw	15
  6552  035C  0020               	movlb	0	; select bank0
  6553  035D  00BF               	movwf	??_Adf_Write_Register_Three+20
  6554  035E  01C0               	clrf	??_Adf_Write_Register_Three+21
  6555  035F  01C1               	clrf	??_Adf_Write_Register_Three+22
  6556  0360  01C2               	clrf	??_Adf_Write_Register_Three+23
  6557  0361  300B               	movlw	11
  6558  0362                     u4245:	
  6559  0362  35BF               	lslf	??_Adf_Write_Register_Three+20,f
  6560  0363  0DC0               	rlf	??_Adf_Write_Register_Three+21,f
  6561  0364  0DC1               	rlf	??_Adf_Write_Register_Three+22,f
  6562  0365  0DC2               	rlf	??_Adf_Write_Register_Three+23,f
  6563  0366  0B89               	decfsz	9,f
  6564  0367  2B62               	goto	u4245
  6565  0368  0021               	movlb	1	; select bank1
  6566  0369  0840               	movf	(_adf_config^(0+128)+32),w
  6567  036A  3901               	andlw	1
  6568  036B  0020               	movlb	0	; select bank0
  6569  036C  00C3               	movwf	??_Adf_Write_Register_Three+24
  6570  036D  01C4               	clrf	??_Adf_Write_Register_Three+25
  6571  036E  01C5               	clrf	??_Adf_Write_Register_Three+26
  6572  036F  01C6               	clrf	??_Adf_Write_Register_Three+27
  6573  0370  300A               	movlw	10
  6574  0371                     u4255:	
  6575  0371  35C3               	lslf	??_Adf_Write_Register_Three+24,f
  6576  0372  0DC4               	rlf	??_Adf_Write_Register_Three+25,f
  6577  0373  0DC5               	rlf	??_Adf_Write_Register_Three+26,f
  6578  0374  0DC6               	rlf	??_Adf_Write_Register_Three+27,f
  6579  0375  0B89               	decfsz	9,f
  6580  0376  2B71               	goto	u4255
  6581  0377  0021               	movlb	1	; select bank1
  6582  0378  083F               	movf	(_adf_config^(0+128)+31),w
  6583  0379  3901               	andlw	1
  6584  037A  0020               	movlb	0	; select bank0
  6585  037B  00C7               	movwf	??_Adf_Write_Register_Three+28
  6586  037C  01C8               	clrf	??_Adf_Write_Register_Three+29
  6587  037D  01C9               	clrf	??_Adf_Write_Register_Three+30
  6588  037E  01CA               	clrf	??_Adf_Write_Register_Three+31
  6589  037F  3009               	movlw	9
  6590  0380                     u4265:	
  6591  0380  35C7               	lslf	??_Adf_Write_Register_Three+28,f
  6592  0381  0DC8               	rlf	??_Adf_Write_Register_Three+29,f
  6593  0382  0DC9               	rlf	??_Adf_Write_Register_Three+30,f
  6594  0383  0DCA               	rlf	??_Adf_Write_Register_Three+31,f
  6595  0384  0B89               	decfsz	9,f
  6596  0385  2B80               	goto	u4265
  6597  0386  0021               	movlb	1	; select bank1
  6598  0387  083E               	movf	(_adf_config^(0+128)+30),w
  6599  0388  3901               	andlw	1
  6600  0389  0020               	movlb	0	; select bank0
  6601  038A  00CB               	movwf	??_Adf_Write_Register_Three+32
  6602  038B  01CC               	clrf	??_Adf_Write_Register_Three+33
  6603  038C  01CD               	clrf	??_Adf_Write_Register_Three+34
  6604  038D  01CE               	clrf	??_Adf_Write_Register_Three+35
  6605  038E  3008               	movlw	8
  6606  038F                     u4275:	
  6607  038F  35CB               	lslf	??_Adf_Write_Register_Three+32,f
  6608  0390  0DCC               	rlf	??_Adf_Write_Register_Three+33,f
  6609  0391  0DCD               	rlf	??_Adf_Write_Register_Three+34,f
  6610  0392  0DCE               	rlf	??_Adf_Write_Register_Three+35,f
  6611  0393  0B89               	decfsz	9,f
  6612  0394  2B8F               	goto	u4275
  6613  0395  0021               	movlb	1	; select bank1
  6614  0396  083D               	movf	(_adf_config^(0+128)+29),w
  6615  0397  3903               	andlw	3
  6616  0398  0020               	movlb	0	; select bank0
  6617  0399  00CF               	movwf	??_Adf_Write_Register_Three+36
  6618  039A  01D0               	clrf	??_Adf_Write_Register_Three+37
  6619  039B  01D1               	clrf	??_Adf_Write_Register_Three+38
  6620  039C  01D2               	clrf	??_Adf_Write_Register_Three+39
  6621  039D  3006               	movlw	6
  6622  039E                     u4285:	
  6623  039E  35CF               	lslf	??_Adf_Write_Register_Three+36,f
  6624  039F  0DD0               	rlf	??_Adf_Write_Register_Three+37,f
  6625  03A0  0DD1               	rlf	??_Adf_Write_Register_Three+38,f
  6626  03A1  0DD2               	rlf	??_Adf_Write_Register_Three+39,f
  6627  03A2  0B89               	decfsz	9,f
  6628  03A3  2B9E               	goto	u4285
  6629  03A4  0021               	movlb	1	; select bank1
  6630  03A5  083C               	movf	(_adf_config^(0+128)+28),w
  6631  03A6  3901               	andlw	1
  6632  03A7  0020               	movlb	0	; select bank0
  6633  03A8  00D3               	movwf	??_Adf_Write_Register_Three+40
  6634  03A9  01D4               	clrf	??_Adf_Write_Register_Three+41
  6635  03AA  01D5               	clrf	??_Adf_Write_Register_Three+42
  6636  03AB  01D6               	clrf	??_Adf_Write_Register_Three+43
  6637  03AC  3005               	movlw	5
  6638  03AD                     u4295:	
  6639  03AD  35D3               	lslf	??_Adf_Write_Register_Three+40,f
  6640  03AE  0DD4               	rlf	??_Adf_Write_Register_Three+41,f
  6641  03AF  0DD5               	rlf	??_Adf_Write_Register_Three+42,f
  6642  03B0  0DD6               	rlf	??_Adf_Write_Register_Three+43,f
  6643  03B1  0B89               	decfsz	9,f
  6644  03B2  2BAD               	goto	u4295
  6645  03B3  0021               	movlb	1	; select bank1
  6646  03B4  083B               	movf	(_adf_config^(0+128)+27),w
  6647  03B5  3901               	andlw	1
  6648  03B6  0020               	movlb	0	; select bank0
  6649  03B7  00D7               	movwf	??_Adf_Write_Register_Three+44
  6650  03B8  01D8               	clrf	??_Adf_Write_Register_Three+45
  6651  03B9  01D9               	clrf	??_Adf_Write_Register_Three+46
  6652  03BA  01DA               	clrf	??_Adf_Write_Register_Three+47
  6653  03BB  3004               	movlw	4
  6654  03BC                     u4305:	
  6655  03BC  35D7               	lslf	??_Adf_Write_Register_Three+44,f
  6656  03BD  0DD8               	rlf	??_Adf_Write_Register_Three+45,f
  6657  03BE  0DD9               	rlf	??_Adf_Write_Register_Three+46,f
  6658  03BF  0DDA               	rlf	??_Adf_Write_Register_Three+47,f
  6659  03C0  0B89               	decfsz	9,f
  6660  03C1  2BBC               	goto	u4305
  6661  03C2  0021               	movlb	1	; select bank1
  6662  03C3  083A               	movf	(_adf_config^(0+128)+26),w
  6663  03C4  3901               	andlw	1
  6664  03C5  0020               	movlb	0	; select bank0
  6665  03C6  00DB               	movwf	??_Adf_Write_Register_Three+48
  6666  03C7  01DC               	clrf	??_Adf_Write_Register_Three+49
  6667  03C8  01DD               	clrf	??_Adf_Write_Register_Three+50
  6668  03C9  01DE               	clrf	??_Adf_Write_Register_Three+51
  6669  03CA  3003               	movlw	3
  6670  03CB                     u4315:	
  6671  03CB  35DB               	lslf	??_Adf_Write_Register_Three+48,f
  6672  03CC  0DDC               	rlf	??_Adf_Write_Register_Three+49,f
  6673  03CD  0DDD               	rlf	??_Adf_Write_Register_Three+50,f
  6674  03CE  0DDE               	rlf	??_Adf_Write_Register_Three+51,f
  6675  03CF  0B89               	decfsz	9,f
  6676  03D0  2BCB               	goto	u4315
  6677  03D1  0021               	movlb	1	; select bank1
  6678  03D2  0839               	movf	(_adf_config^(0+128)+25),w
  6679  03D3  3901               	andlw	1
  6680  03D4  0020               	movlb	0	; select bank0
  6681  03D5  00DF               	movwf	??_Adf_Write_Register_Three+52
  6682  03D6  01E0               	clrf	??_Adf_Write_Register_Three+53
  6683  03D7  01E1               	clrf	??_Adf_Write_Register_Three+54
  6684  03D8  01E2               	clrf	??_Adf_Write_Register_Three+55
  6685  03D9  3002               	movlw	2
  6686  03DA                     u4325:	
  6687  03DA  35DF               	lslf	??_Adf_Write_Register_Three+52,f
  6688  03DB  0DE0               	rlf	??_Adf_Write_Register_Three+53,f
  6689  03DC  0DE1               	rlf	??_Adf_Write_Register_Three+54,f
  6690  03DD  0DE2               	rlf	??_Adf_Write_Register_Three+55,f
  6691  03DE  0B89               	decfsz	9,f
  6692  03DF  2BDA               	goto	u4325
  6693  03E0  085F               	movf	??_Adf_Write_Register_Three+52,w
  6694  03E1  04DB               	iorwf	??_Adf_Write_Register_Three+48,f
  6695  03E2  0860               	movf	??_Adf_Write_Register_Three+53,w
  6696  03E3  04DC               	iorwf	??_Adf_Write_Register_Three+49,f
  6697  03E4  0861               	movf	??_Adf_Write_Register_Three+54,w
  6698  03E5  04DD               	iorwf	??_Adf_Write_Register_Three+50,f
  6699  03E6  0862               	movf	??_Adf_Write_Register_Three+55,w
  6700  03E7  04DE               	iorwf	??_Adf_Write_Register_Three+51,f
  6701  03E8  085B               	movf	??_Adf_Write_Register_Three+48,w
  6702  03E9  04D7               	iorwf	??_Adf_Write_Register_Three+44,f
  6703  03EA  085C               	movf	??_Adf_Write_Register_Three+49,w
  6704  03EB  04D8               	iorwf	??_Adf_Write_Register_Three+45,f
  6705  03EC  085D               	movf	??_Adf_Write_Register_Three+50,w
  6706  03ED  04D9               	iorwf	??_Adf_Write_Register_Three+46,f
  6707  03EE  085E               	movf	??_Adf_Write_Register_Three+51,w
  6708  03EF  04DA               	iorwf	??_Adf_Write_Register_Three+47,f
  6709  03F0  0857               	movf	??_Adf_Write_Register_Three+44,w
  6710  03F1  04D3               	iorwf	??_Adf_Write_Register_Three+40,f
  6711  03F2  0858               	movf	??_Adf_Write_Register_Three+45,w
  6712  03F3  04D4               	iorwf	??_Adf_Write_Register_Three+41,f
  6713  03F4  0859               	movf	??_Adf_Write_Register_Three+46,w
  6714  03F5  04D5               	iorwf	??_Adf_Write_Register_Three+42,f
  6715  03F6  085A               	movf	??_Adf_Write_Register_Three+47,w
  6716  03F7  04D6               	iorwf	??_Adf_Write_Register_Three+43,f
  6717  03F8  0853               	movf	??_Adf_Write_Register_Three+40,w
  6718  03F9  04CF               	iorwf	??_Adf_Write_Register_Three+36,f
  6719  03FA  0854               	movf	??_Adf_Write_Register_Three+41,w
  6720  03FB  04D0               	iorwf	??_Adf_Write_Register_Three+37,f
  6721  03FC  0855               	movf	??_Adf_Write_Register_Three+42,w
  6722  03FD  04D1               	iorwf	??_Adf_Write_Register_Three+38,f
  6723  03FE  0856               	movf	??_Adf_Write_Register_Three+43,w
  6724  03FF  04D2               	iorwf	??_Adf_Write_Register_Three+39,f
  6725  0400  084F               	movf	??_Adf_Write_Register_Three+36,w
  6726  0401  04CB               	iorwf	??_Adf_Write_Register_Three+32,f
  6727  0402  0850               	movf	??_Adf_Write_Register_Three+37,w
  6728  0403  04CC               	iorwf	??_Adf_Write_Register_Three+33,f
  6729  0404  0851               	movf	??_Adf_Write_Register_Three+38,w
  6730  0405  04CD               	iorwf	??_Adf_Write_Register_Three+34,f
  6731  0406  0852               	movf	??_Adf_Write_Register_Three+39,w
  6732  0407  04CE               	iorwf	??_Adf_Write_Register_Three+35,f
  6733  0408  084B               	movf	??_Adf_Write_Register_Three+32,w
  6734  0409  04C7               	iorwf	??_Adf_Write_Register_Three+28,f
  6735  040A  084C               	movf	??_Adf_Write_Register_Three+33,w
  6736  040B  04C8               	iorwf	??_Adf_Write_Register_Three+29,f
  6737  040C  084D               	movf	??_Adf_Write_Register_Three+34,w
  6738  040D  04C9               	iorwf	??_Adf_Write_Register_Three+30,f
  6739  040E  084E               	movf	??_Adf_Write_Register_Three+35,w
  6740  040F  04CA               	iorwf	??_Adf_Write_Register_Three+31,f
  6741  0410  0847               	movf	??_Adf_Write_Register_Three+28,w
  6742  0411  04C3               	iorwf	??_Adf_Write_Register_Three+24,f
  6743  0412  0848               	movf	??_Adf_Write_Register_Three+29,w
  6744  0413  04C4               	iorwf	??_Adf_Write_Register_Three+25,f
  6745  0414  0849               	movf	??_Adf_Write_Register_Three+30,w
  6746  0415  04C5               	iorwf	??_Adf_Write_Register_Three+26,f
  6747  0416  084A               	movf	??_Adf_Write_Register_Three+31,w
  6748  0417  04C6               	iorwf	??_Adf_Write_Register_Three+27,f
  6749  0418  0843               	movf	??_Adf_Write_Register_Three+24,w
  6750  0419  04BF               	iorwf	??_Adf_Write_Register_Three+20,f
  6751  041A  0844               	movf	??_Adf_Write_Register_Three+25,w
  6752  041B  04C0               	iorwf	??_Adf_Write_Register_Three+21,f
  6753  041C  0845               	movf	??_Adf_Write_Register_Three+26,w
  6754  041D  04C1               	iorwf	??_Adf_Write_Register_Three+22,f
  6755  041E  0846               	movf	??_Adf_Write_Register_Three+27,w
  6756  041F  04C2               	iorwf	??_Adf_Write_Register_Three+23,f
  6757  0420  083F               	movf	??_Adf_Write_Register_Three+20,w
  6758  0421  04BB               	iorwf	??_Adf_Write_Register_Three+16,f
  6759  0422  0840               	movf	??_Adf_Write_Register_Three+21,w
  6760  0423  04BC               	iorwf	??_Adf_Write_Register_Three+17,f
  6761  0424  0841               	movf	??_Adf_Write_Register_Three+22,w
  6762  0425  04BD               	iorwf	??_Adf_Write_Register_Three+18,f
  6763  0426  0842               	movf	??_Adf_Write_Register_Three+23,w
  6764  0427  04BE               	iorwf	??_Adf_Write_Register_Three+19,f
  6765  0428  083B               	movf	??_Adf_Write_Register_Three+16,w
  6766  0429  04B7               	iorwf	??_Adf_Write_Register_Three+12,f
  6767  042A  083C               	movf	??_Adf_Write_Register_Three+17,w
  6768  042B  04B8               	iorwf	??_Adf_Write_Register_Three+13,f
  6769  042C  083D               	movf	??_Adf_Write_Register_Three+18,w
  6770  042D  04B9               	iorwf	??_Adf_Write_Register_Three+14,f
  6771  042E  083E               	movf	??_Adf_Write_Register_Three+19,w
  6772  042F  04BA               	iorwf	??_Adf_Write_Register_Three+15,f
  6773  0430  0837               	movf	??_Adf_Write_Register_Three+12,w
  6774  0431  04B3               	iorwf	??_Adf_Write_Register_Three+8,f
  6775  0432  0838               	movf	??_Adf_Write_Register_Three+13,w
  6776  0433  04B4               	iorwf	??_Adf_Write_Register_Three+9,f
  6777  0434  0839               	movf	??_Adf_Write_Register_Three+14,w
  6778  0435  04B5               	iorwf	??_Adf_Write_Register_Three+10,f
  6779  0436  083A               	movf	??_Adf_Write_Register_Three+15,w
  6780  0437  04B6               	iorwf	??_Adf_Write_Register_Three+11,f
  6781  0438  0833               	movf	??_Adf_Write_Register_Three+8,w
  6782  0439  04AF               	iorwf	??_Adf_Write_Register_Three+4,f
  6783  043A  0834               	movf	??_Adf_Write_Register_Three+9,w
  6784  043B  04B0               	iorwf	??_Adf_Write_Register_Three+5,f
  6785  043C  0835               	movf	??_Adf_Write_Register_Three+10,w
  6786  043D  04B1               	iorwf	??_Adf_Write_Register_Three+6,f
  6787  043E  0836               	movf	??_Adf_Write_Register_Three+11,w
  6788  043F  04B2               	iorwf	??_Adf_Write_Register_Three+7,f
  6789  0440  082F               	movf	??_Adf_Write_Register_Three+4,w
  6790  0441  04AB               	iorwf	??_Adf_Write_Register_Three,f
  6791  0442  0830               	movf	??_Adf_Write_Register_Three+5,w
  6792  0443  04AC               	iorwf	??_Adf_Write_Register_Three+1,f
  6793  0444  0831               	movf	??_Adf_Write_Register_Three+6,w
  6794  0445  04AD               	iorwf	??_Adf_Write_Register_Three+2,f
  6795  0446  0832               	movf	??_Adf_Write_Register_Three+7,w
  6796  0447  04AE               	iorwf	??_Adf_Write_Register_Three+3,f
  6797  0448  3003               	movlw	3
  6798  0449  042B               	iorwf	??_Adf_Write_Register_Three,w
  6799  044A  00E7               	movwf	Adf_Write_Register_Three@reg
  6800  044B  3000               	movlw	0
  6801  044C  042C               	iorwf	??_Adf_Write_Register_Three+1,w
  6802  044D  00E8               	movwf	Adf_Write_Register_Three@reg+1
  6803  044E  3000               	movlw	0
  6804  044F  042D               	iorwf	??_Adf_Write_Register_Three+2,w
  6805  0450  00E9               	movwf	Adf_Write_Register_Three@reg+2
  6806  0451  3000               	movlw	0
  6807  0452  042E               	iorwf	??_Adf_Write_Register_Three+3,w
  6808  0453  00EA               	movwf	Adf_Write_Register_Three@reg+3
  6809                           
  6810                           ;adf7012.c: 226: uint8_t reg_ptr[4];
  6811                           ;adf7012.c: 227: memcpy(reg_ptr, &reg, 4);
  6812  0454  3067               	movlw	Adf_Write_Register_Three@reg& (0+255)
  6813  0455  00AB               	movwf	??_Adf_Write_Register_Three
  6814  0456  082B               	movf	??_Adf_Write_Register_Three,w
  6815  0457  00F2               	movwf	memcpy@s1
  6816  0458  3004               	movlw	4
  6817  0459  00F3               	movwf	memcpy@n
  6818  045A  3000               	movlw	0
  6819  045B  00F4               	movwf	memcpy@n+1
  6820  045C  3063               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6821  045D  3188  2000  3183   	fcall	_memcpy
  6822                           
  6823                           ;adf7012.c: 228: Reverse_Array(reg_ptr,4);
  6824  0460  3004               	movlw	4
  6825  0461  0020               	movlb	0	; select bank0
  6826  0462  00AB               	movwf	??_Adf_Write_Register_Three
  6827  0463  082B               	movf	??_Adf_Write_Register_Three,w
  6828  0464  00F9               	movwf	Reverse_Array@length
  6829  0465  3063               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6830  0466  3197  27CC  3183   	fcall	_Reverse_Array
  6831                           
  6832                           ;adf7012.c: 229: Write_Adf7012_Reg(reg_ptr, 4);
  6833  0469  3004               	movlw	4
  6834  046A  0020               	movlb	0	; select bank0
  6835  046B  00AB               	movwf	??_Adf_Write_Register_Three
  6836  046C  082B               	movf	??_Adf_Write_Register_Three,w
  6837  046D  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  6838  046E  3063               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6839  046F  3188  205E         	fcall	_Write_Adf7012_Reg
  6840  0471  0008               	return
  6841  0472                     __end_of_Adf_Write_Register_Three:	
  6842                           
  6843                           	psect	text33
  6844  094A                     __ptext33:	
  6845 ;; *************** function _Adf_Write_Register_One *****************
  6846 ;; Defined at:
  6847 ;;		line 177 in file "adf7012.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  reg             4   26[BANK0 ] unsigned long 
  6852 ;;  reg_ptr         3   23[BANK0 ] unsigned char [3]
  6853 ;; Return value:  Size  Location     Type
  6854 ;;		None               void
  6855 ;; Registers used:
  6856 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6857 ;; Tracked objects:
  6858 ;;		On entry : 0/0
  6859 ;;		On exit  : 0/0
  6860 ;;		Unchanged: 0/0
  6861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6863 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6864 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6865 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6866 ;;Total ram usage:       19 bytes
  6867 ;; Hardware stack levels used:    1
  6868 ;; Hardware stack levels required when called:    5
  6869 ;; This function calls:
  6870 ;;		_Reverse_Array
  6871 ;;		_Write_Adf7012_Reg
  6872 ;;		_memcpy
  6873 ;; This function is called by:
  6874 ;;		_Adf_Write_Config
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           
  6879                           ;psect for function _Adf_Write_Register_One
  6880  094A                     _Adf_Write_Register_One:	
  6881                           
  6882                           ;adf7012.c: 178: uint32_t reg =
  6883                           ;adf7012.c: 179: (1) |
  6884                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  6885                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  6886                           ;adf7012.c: 182: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  6887                           
  6888                           ;incstack = 0
  6889                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6890  094A  0021               	movlb	1	; select bank1
  6891  094B  082F               	movf	(_adf_config^(0+128)+15),w
  6892  094C  3901               	andlw	1
  6893  094D  0020               	movlb	0	; select bank0
  6894  094E  00AB               	movwf	??_Adf_Write_Register_One
  6895  094F  01AC               	clrf	??_Adf_Write_Register_One+1
  6896  0950  01AD               	clrf	??_Adf_Write_Register_One+2
  6897  0951  01AE               	clrf	??_Adf_Write_Register_One+3
  6898  0952  3016               	movlw	22
  6899  0953                     u4105:	
  6900  0953  35AB               	lslf	??_Adf_Write_Register_One,f
  6901  0954  0DAC               	rlf	??_Adf_Write_Register_One+1,f
  6902  0955  0DAD               	rlf	??_Adf_Write_Register_One+2,f
  6903  0956  0DAE               	rlf	??_Adf_Write_Register_One+3,f
  6904  0957  0B89               	decfsz	9,f
  6905  0958  2953               	goto	u4105
  6906  0959  0021               	movlb	1	; select bank1
  6907  095A  082E               	movf	(_adf_config^(0+128)+14),w
  6908  095B  0020               	movlb	0	; select bank0
  6909  095C  00AF               	movwf	??_Adf_Write_Register_One+4
  6910  095D  01B0               	clrf	??_Adf_Write_Register_One+5
  6911  095E  01B1               	clrf	??_Adf_Write_Register_One+6
  6912  095F  01B2               	clrf	??_Adf_Write_Register_One+7
  6913  0960  300E               	movlw	14
  6914  0961                     u4115:	
  6915  0961  35AF               	lslf	??_Adf_Write_Register_One+4,f
  6916  0962  0DB0               	rlf	??_Adf_Write_Register_One+5,f
  6917  0963  0DB1               	rlf	??_Adf_Write_Register_One+6,f
  6918  0964  0DB2               	rlf	??_Adf_Write_Register_One+7,f
  6919  0965  0B89               	decfsz	9,f
  6920  0966  2961               	goto	u4115
  6921  0967  300A               	movlw	10
  6922  0968  3EA0               	addlw	_adf_config& (0+255)
  6923  0969  0086               	movwf	6
  6924  096A  0187               	clrf	7
  6925  096B  30FF               	movlw	255
  6926  096C  0501               	andwf	1,w
  6927  096D  00B3               	movwf	??_Adf_Write_Register_One+8
  6928  096E  3141               	addfsr 1,1
  6929  096F  300F               	movlw	15
  6930  0970  0501               	andwf	1,w
  6931  0971  00B4               	movwf	??_Adf_Write_Register_One+9
  6932  0972  3141               	addfsr 1,1
  6933  0973  3000               	movlw	0
  6934  0974  0501               	andwf	1,w
  6935  0975  00B5               	movwf	??_Adf_Write_Register_One+10
  6936  0976  3141               	addfsr 1,1
  6937  0977  3000               	movlw	0
  6938  0978  0501               	andwf	1,w
  6939  0979  00B6               	movwf	??_Adf_Write_Register_One+11
  6940  097A  3002               	movlw	2
  6941  097B                     u4125:	
  6942  097B  35B3               	lslf	??_Adf_Write_Register_One+8,f
  6943  097C  0DB4               	rlf	??_Adf_Write_Register_One+9,f
  6944  097D  0DB5               	rlf	??_Adf_Write_Register_One+10,f
  6945  097E  0DB6               	rlf	??_Adf_Write_Register_One+11,f
  6946  097F  0B89               	decfsz	9,f
  6947  0980  297B               	goto	u4125
  6948  0981  0833               	movf	??_Adf_Write_Register_One+8,w
  6949  0982  04AF               	iorwf	??_Adf_Write_Register_One+4,f
  6950  0983  0834               	movf	??_Adf_Write_Register_One+9,w
  6951  0984  04B0               	iorwf	??_Adf_Write_Register_One+5,f
  6952  0985  0835               	movf	??_Adf_Write_Register_One+10,w
  6953  0986  04B1               	iorwf	??_Adf_Write_Register_One+6,f
  6954  0987  0836               	movf	??_Adf_Write_Register_One+11,w
  6955  0988  04B2               	iorwf	??_Adf_Write_Register_One+7,f
  6956  0989  082F               	movf	??_Adf_Write_Register_One+4,w
  6957  098A  04AB               	iorwf	??_Adf_Write_Register_One,f
  6958  098B  0830               	movf	??_Adf_Write_Register_One+5,w
  6959  098C  04AC               	iorwf	??_Adf_Write_Register_One+1,f
  6960  098D  0831               	movf	??_Adf_Write_Register_One+6,w
  6961  098E  04AD               	iorwf	??_Adf_Write_Register_One+2,f
  6962  098F  0832               	movf	??_Adf_Write_Register_One+7,w
  6963  0990  04AE               	iorwf	??_Adf_Write_Register_One+3,f
  6964  0991  3001               	movlw	1
  6965  0992  042B               	iorwf	??_Adf_Write_Register_One,w
  6966  0993  00BA               	movwf	Adf_Write_Register_One@reg
  6967  0994  3000               	movlw	0
  6968  0995  042C               	iorwf	??_Adf_Write_Register_One+1,w
  6969  0996  00BB               	movwf	Adf_Write_Register_One@reg+1
  6970  0997  3000               	movlw	0
  6971  0998  042D               	iorwf	??_Adf_Write_Register_One+2,w
  6972  0999  00BC               	movwf	Adf_Write_Register_One@reg+2
  6973  099A  3000               	movlw	0
  6974  099B  042E               	iorwf	??_Adf_Write_Register_One+3,w
  6975  099C  00BD               	movwf	Adf_Write_Register_One@reg+3
  6976                           
  6977                           ;adf7012.c: 184: uint8_t reg_ptr[3];
  6978                           ;adf7012.c: 185: memcpy(reg_ptr, &reg, 3);
  6979  099D  303A               	movlw	Adf_Write_Register_One@reg& (0+255)
  6980  099E  00AB               	movwf	??_Adf_Write_Register_One
  6981  099F  082B               	movf	??_Adf_Write_Register_One,w
  6982  09A0  00F2               	movwf	memcpy@s1
  6983  09A1  3003               	movlw	3
  6984  09A2  00F3               	movwf	memcpy@n
  6985  09A3  3000               	movlw	0
  6986  09A4  00F4               	movwf	memcpy@n+1
  6987  09A5  3037               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  6988  09A6  3188  2000  3189   	fcall	_memcpy
  6989                           
  6990                           ;adf7012.c: 186: Reverse_Array(reg_ptr,3);
  6991  09A9  3003               	movlw	3
  6992  09AA  0020               	movlb	0	; select bank0
  6993  09AB  00AB               	movwf	??_Adf_Write_Register_One
  6994  09AC  082B               	movf	??_Adf_Write_Register_One,w
  6995  09AD  00F9               	movwf	Reverse_Array@length
  6996  09AE  3037               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  6997  09AF  3197  27CC  3189   	fcall	_Reverse_Array
  6998                           
  6999                           ;adf7012.c: 187: Write_Adf7012_Reg(reg_ptr, 3);
  7000  09B2  3003               	movlw	3
  7001  09B3  0020               	movlb	0	; select bank0
  7002  09B4  00AB               	movwf	??_Adf_Write_Register_One
  7003  09B5  082B               	movf	??_Adf_Write_Register_One,w
  7004  09B6  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  7005  09B7  3037               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  7006  09B8  3188  205E         	fcall	_Write_Adf7012_Reg
  7007  09BA  0008               	return
  7008  09BB                     __end_of_Adf_Write_Register_One:	
  7009                           
  7010                           	psect	text34
  7011  085E                     __ptext34:	
  7012 ;; *************** function _Write_Adf7012_Reg *****************
  7013 ;; Defined at:
  7014 ;;		line 91 in file "utility.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  reg_value       1    wreg     PTR unsigned char 
  7017 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7018 ;;  size_of_reg     1    3[BANK0 ] unsigned char 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  reg_value       1    4[BANK0 ] PTR unsigned char 
  7021 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7022 ;;  i               1    5[BANK0 ] unsigned char 
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  1    wreg      unsigned char 
  7025 ;; Registers used:
  7026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7032 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7033 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7035 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7036 ;;Total ram usage:        4 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    4
  7039 ;; This function calls:
  7040 ;;		_Delay_ms
  7041 ;;		_Spi_Byte_Send
  7042 ;; This function is called by:
  7043 ;;		_Adf_Write_Register_Zero
  7044 ;;		_Adf_Write_Register_One
  7045 ;;		_Adf_Write_Register_Two
  7046 ;;		_Adf_Write_Register_Three
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           
  7051                           ;psect for function _Write_Adf7012_Reg
  7052  085E                     _Write_Adf7012_Reg:	
  7053                           
  7054                           ;incstack = 0
  7055                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7056                           ;Write_Adf7012_Reg@reg_value stored from wreg
  7057  085E  0020               	movlb	0	; select bank0
  7058  085F  00A4               	movwf	Write_Adf7012_Reg@reg_value
  7059                           
  7060                           ;utility.c: 93: uint8_t i = 0;
  7061  0860  01A5               	clrf	Write_Adf7012_Reg@i
  7062                           
  7063                           ;utility.c: 94: Delay_ms(1);
  7064  0861  3001               	movlw	1
  7065  0862  00F2               	movwf	Delay_ms@time_to_delay
  7066  0863  3000               	movlw	0
  7067  0864  00F3               	movwf	Delay_ms@time_to_delay+1
  7068  0865  3196  26C8  3188   	fcall	_Delay_ms
  7069                           
  7070                           ;utility.c: 95: PORTAbits.RA4 = 0;;
  7071  0868  0020               	movlb	0	; select bank0
  7072  0869  120C               	bcf	12,4	;volatile
  7073                           
  7074                           ;utility.c: 96: Delay_ms(1);
  7075  086A  3001               	movlw	1
  7076  086B  00F2               	movwf	Delay_ms@time_to_delay
  7077  086C  3000               	movlw	0
  7078  086D  00F3               	movwf	Delay_ms@time_to_delay+1
  7079  086E  3196  26C8  3188   	fcall	_Delay_ms
  7080                           
  7081                           ;utility.c: 98: for (i = 0; i < size_of_reg; i++){
  7082  0871  0020               	movlb	0	; select bank0
  7083  0872  01A5               	clrf	Write_Adf7012_Reg@i
  7084  0873                     l3065:	
  7085  0873  0823               	movf	Write_Adf7012_Reg@size_of_reg,w
  7086  0874  0225               	subwf	Write_Adf7012_Reg@i,w
  7087  0875  1803               	btfsc	3,0
  7088  0876  2887               	goto	l3067
  7089                           
  7090                           ;utility.c: 99: Spi_Byte_Send(*(reg_value+i));
  7091  0877  0825               	movf	Write_Adf7012_Reg@i,w
  7092  0878  0724               	addwf	Write_Adf7012_Reg@reg_value,w
  7093  0879  00F9               	movwf	??_Write_Adf7012_Reg
  7094  087A  0879               	movf	??_Write_Adf7012_Reg,w
  7095  087B  0086               	movwf	6
  7096  087C  0187               	clrf	7
  7097  087D  0801               	movf	1,w
  7098  087E  3196  26EE  3188   	fcall	_Spi_Byte_Send
  7099  0881  3001               	movlw	1
  7100  0882  00F9               	movwf	??_Write_Adf7012_Reg
  7101  0883  0879               	movf	??_Write_Adf7012_Reg,w
  7102  0884  0020               	movlb	0	; select bank0
  7103  0885  07A5               	addwf	Write_Adf7012_Reg@i,f
  7104  0886  2873               	goto	l3065
  7105  0887                     l3067:	
  7106                           
  7107                           ;utility.c: 100: }
  7108                           ;utility.c: 102: Delay_ms(1);
  7109  0887  3001               	movlw	1
  7110  0888  00F2               	movwf	Delay_ms@time_to_delay
  7111  0889  3000               	movlw	0
  7112  088A  00F3               	movwf	Delay_ms@time_to_delay+1
  7113  088B  3196  26C8  3188   	fcall	_Delay_ms
  7114                           
  7115                           ;utility.c: 103: PORTAbits.RA4 = 1;;
  7116  088E  0020               	movlb	0	; select bank0
  7117  088F  160C               	bsf	12,4	;volatile
  7118                           
  7119                           ;utility.c: 105: Delay_ms(1);
  7120  0890  3001               	movlw	1
  7121  0891  00F2               	movwf	Delay_ms@time_to_delay
  7122  0892  3000               	movlw	0
  7123  0893  00F3               	movwf	Delay_ms@time_to_delay+1
  7124  0894  3196  26C8         	fcall	_Delay_ms
  7125  0896  0008               	return
  7126  0897                     __end_of_Write_Adf7012_Reg:	
  7127                           ;utility.c: 106: return 1;
  7128                           ;	Return value of _Write_Adf7012_Reg is never used
  7129                           
  7130                           
  7131                           	psect	text35
  7132  16EE                     __ptext35:	
  7133 ;; *************** function _Spi_Byte_Send *****************
  7134 ;; Defined at:
  7135 ;;		line 229 in file "utility.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  data            1    wreg     unsigned char 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  data            1    0[BANK0 ] unsigned char 
  7140 ;;  i               1    2[BANK0 ] unsigned char 
  7141 ;;  data_to_send    1    1[BANK0 ] unsigned char 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  1    wreg      unsigned char 
  7144 ;; Registers used:
  7145 ;;		wreg, status,2, status,0, pclath, cstack
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7152 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7154 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7155 ;;Total ram usage:        4 bytes
  7156 ;; Hardware stack levels used:    1
  7157 ;; Hardware stack levels required when called:    3
  7158 ;; This function calls:
  7159 ;;		_Delay_ms
  7160 ;; This function is called by:
  7161 ;;		_Write_Adf7012_Reg
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           
  7166                           ;psect for function _Spi_Byte_Send
  7167  16EE                     _Spi_Byte_Send:	
  7168                           
  7169                           ;incstack = 0
  7170                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  7171                           ;Spi_Byte_Send@data stored from wreg
  7172  16EE  0020               	movlb	0	; select bank0
  7173  16EF  00A0               	movwf	Spi_Byte_Send@data
  7174                           
  7175                           ;utility.c: 231: PORTAbits.RA2 = 0;
  7176  16F0  110C               	bcf	12,2	;volatile
  7177                           
  7178                           ;utility.c: 232: uint8_t i;
  7179                           ;utility.c: 233: uint8_t data_to_send;
  7180                           ;utility.c: 234: data_to_send = data;
  7181  16F1  0820               	movf	Spi_Byte_Send@data,w
  7182  16F2  00F8               	movwf	??_Spi_Byte_Send
  7183  16F3  0878               	movf	??_Spi_Byte_Send,w
  7184  16F4  00A1               	movwf	Spi_Byte_Send@data_to_send
  7185                           
  7186                           ;utility.c: 235: for(i = 0; i <8; i++){
  7187  16F5  01A2               	clrf	Spi_Byte_Send@i
  7188  16F6                     L1:	
  7189  16F6  3008               	movlw	8
  7190  16F7  0222               	subwf	Spi_Byte_Send@i,w
  7191  16F8  1803               	btfsc	3,0
  7192  16F9  0008               	return
  7193                           
  7194                           ;utility.c: 237: if(data_to_send & 0x80)
  7195  16FA  1FA1               	btfss	Spi_Byte_Send@data_to_send,7
  7196  16FB  2EFE               	goto	l221
  7197                           
  7198                           ;utility.c: 238: PORTCbits.RC2 = 1;
  7199  16FC  150E               	bsf	14,2	;volatile
  7200  16FD  2EFF               	goto	l3039
  7201  16FE                     l221:	
  7202                           
  7203                           ;utility.c: 239: else
  7204                           ;utility.c: 240: PORTCbits.RC2 = 0;
  7205  16FE  110E               	bcf	14,2	;volatile
  7206  16FF                     l3039:	
  7207                           
  7208                           ;utility.c: 242: data_to_send <<= 1;
  7209  16FF  1003               	clrc
  7210  1700  0DA1               	rlf	Spi_Byte_Send@data_to_send,f
  7211                           
  7212                           ;utility.c: 244: PORTAbits.RA2 = 1;
  7213  1701  150C               	bsf	12,2	;volatile
  7214                           
  7215                           ;utility.c: 245: Delay_ms(1);
  7216  1702  3001               	movlw	1
  7217  1703  00F2               	movwf	Delay_ms@time_to_delay
  7218  1704  3000               	movlw	0
  7219  1705  00F3               	movwf	Delay_ms@time_to_delay+1
  7220  1706  3196  26C8  3196   	fcall	_Delay_ms
  7221                           
  7222                           ;utility.c: 246: PORTAbits.RA2 = 0;
  7223  1709  0020               	movlb	0	; select bank0
  7224  170A  110C               	bcf	12,2	;volatile
  7225                           
  7226                           ;utility.c: 247: Delay_ms(1);
  7227  170B  3001               	movlw	1
  7228  170C  00F2               	movwf	Delay_ms@time_to_delay
  7229  170D  3000               	movlw	0
  7230  170E  00F3               	movwf	Delay_ms@time_to_delay+1
  7231  170F  3196  26C8  3196   	fcall	_Delay_ms
  7232  1712  3001               	movlw	1
  7233  1713  00F8               	movwf	??_Spi_Byte_Send
  7234  1714  0878               	movf	??_Spi_Byte_Send,w
  7235  1715  0020               	movlb	0	; select bank0
  7236  1716  07A2               	addwf	Spi_Byte_Send@i,f
  7237  1717  2EF6               	goto	L1
  7238  1718                     __end_of_Spi_Byte_Send:	
  7239                           ;utility.c: 249: }
  7240                           ;utility.c: 250: return 1;
  7241                           ;	Return value of _Spi_Byte_Send is never used
  7242                           
  7243                           
  7244                           	psect	text36
  7245  17CC                     __ptext36:	
  7246 ;; *************** function _Reverse_Array *****************
  7247 ;; Defined at:
  7248 ;;		line 207 in file "utility.c"
  7249 ;; Parameters:    Size  Location     Type
  7250 ;;  input           1    wreg     PTR unsigned char 
  7251 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7252 ;;  length          1    9[COMMON] unsigned char 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;  input           1    9[BANK0 ] PTR unsigned char 
  7255 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7256 ;;  buffer_array    4    5[BANK0 ] unsigned char [4]
  7257 ;;  i               1   10[BANK0 ] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      unsigned char 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7267 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;Total ram usage:       12 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    2
  7274 ;; This function calls:
  7275 ;;		_memcpy
  7276 ;; This function is called by:
  7277 ;;		_Adf_Write_Register_Zero
  7278 ;;		_Adf_Write_Register_One
  7279 ;;		_Adf_Write_Register_Two
  7280 ;;		_Adf_Write_Register_Three
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function _Reverse_Array
  7286  17CC                     _Reverse_Array:	
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7290                           ;Reverse_Array@input stored from wreg
  7291  17CC  0020               	movlb	0	; select bank0
  7292  17CD  00A9               	movwf	Reverse_Array@input
  7293                           
  7294                           ;utility.c: 208: uint8_t i = 0;
  7295  17CE  01AA               	clrf	Reverse_Array@i
  7296                           
  7297                           ;utility.c: 209: uint8_t buffer_array[4];
  7298                           ;utility.c: 210: memcpy(buffer_array, input, length);
  7299  17CF  0829               	movf	Reverse_Array@input,w
  7300  17D0  00A0               	movwf	??_Reverse_Array
  7301  17D1  0820               	movf	??_Reverse_Array,w
  7302  17D2  00F2               	movwf	memcpy@s1
  7303  17D3  0879               	movf	Reverse_Array@length,w
  7304  17D4  00A1               	movwf	??_Reverse_Array+1
  7305  17D5  01A2               	clrf	??_Reverse_Array+2
  7306  17D6  0821               	movf	??_Reverse_Array+1,w
  7307  17D7  00F3               	movwf	memcpy@n
  7308  17D8  0822               	movf	??_Reverse_Array+2,w
  7309  17D9  00F4               	movwf	memcpy@n+1
  7310  17DA  3025               	movlw	Reverse_Array@buffer_array& (0+255)
  7311  17DB  3188  2000  3197   	fcall	_memcpy
  7312                           
  7313                           ;utility.c: 212: for(i = 0; i<length; i++){
  7314  17DE  0020               	movlb	0	; select bank0
  7315  17DF  01AA               	clrf	Reverse_Array@i
  7316  17E0                     l2047:	
  7317  17E0  0879               	movf	Reverse_Array@length,w
  7318  17E1  022A               	subwf	Reverse_Array@i,w
  7319  17E2  1803               	btfsc	3,0
  7320  17E3  0008               	return
  7321                           
  7322                           ;utility.c: 213: *(input+i) = *(buffer_array+(length-1)-i);
  7323  17E4  30FF               	movlw	-1
  7324  17E5  0779               	addwf	Reverse_Array@length,w
  7325  17E6  00A0               	movwf	??_Reverse_Array
  7326  17E7  3025               	movlw	Reverse_Array@buffer_array& (0+255)
  7327  17E8  0720               	addwf	??_Reverse_Array,w
  7328  17E9  00A1               	movwf	??_Reverse_Array+1
  7329  17EA  032A               	decf	Reverse_Array@i,w
  7330  17EB  3AFF               	xorlw	255
  7331  17EC  0721               	addwf	??_Reverse_Array+1,w
  7332  17ED  00A2               	movwf	??_Reverse_Array+2
  7333  17EE  0822               	movf	??_Reverse_Array+2,w
  7334  17EF  0086               	movwf	6
  7335  17F0  0187               	clrf	7
  7336  17F1  0801               	movf	1,w
  7337  17F2  00A3               	movwf	??_Reverse_Array+3
  7338  17F3  082A               	movf	Reverse_Array@i,w
  7339  17F4  0729               	addwf	Reverse_Array@input,w
  7340  17F5  00A4               	movwf	??_Reverse_Array+4
  7341  17F6  0824               	movf	??_Reverse_Array+4,w
  7342  17F7  0086               	movwf	6
  7343  17F8  0187               	clrf	7
  7344  17F9  0823               	movf	??_Reverse_Array+3,w
  7345  17FA  0081               	movwf	1
  7346  17FB  3001               	movlw	1
  7347  17FC  00A0               	movwf	??_Reverse_Array
  7348  17FD  0820               	movf	??_Reverse_Array,w
  7349  17FE  07AA               	addwf	Reverse_Array@i,f
  7350  17FF  2FE0               	goto	l2047
  7351  1800                     __end_of_Reverse_Array:	
  7352                           ;utility.c: 214: }
  7353                           ;utility.c: 218: return 1;
  7354                           ;	Return value of _Reverse_Array is never used
  7355                           
  7356                           
  7357                           	psect	text37
  7358  0800                     __ptext37:	
  7359 ;; *************** function _memcpy *****************
  7360 ;; Defined at:
  7361 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  d1              1    wreg     PTR void 
  7364 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7365 ;;		 -> Reverse_Array@buffer_array(4), 
  7366 ;;  s1              1    2[COMMON] PTR const void 
  7367 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  7368 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  7369 ;;  n               2    3[COMMON] unsigned int 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  d1              1    8[COMMON] PTR void 
  7372 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7373 ;;		 -> Reverse_Array@buffer_array(4), 
  7374 ;;  s               1    7[COMMON] PTR const unsigned char 
  7375 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  7376 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  7377 ;;  d               1    6[COMMON] PTR unsigned char 
  7378 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7379 ;;		 -> Reverse_Array@buffer_array(4), 
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      PTR void 
  7382 ;; Registers used:
  7383 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7389 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;Total ram usage:        7 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    1
  7396 ;; This function calls:
  7397 ;;		Nothing
  7398 ;; This function is called by:
  7399 ;;		_Reverse_Array
  7400 ;;		_Adf_Write_Register_Zero
  7401 ;;		_Adf_Write_Register_One
  7402 ;;		_Adf_Write_Register_Two
  7403 ;;		_Adf_Write_Register_Three
  7404 ;; This function uses a non-reentrant model
  7405 ;;
  7406                           
  7407                           
  7408                           ;psect for function _memcpy
  7409  0800                     _memcpy:	
  7410                           
  7411                           ;incstack = 0
  7412                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7413                           ;memcpy@d1 stored from wreg
  7414  0800  00F8               	movwf	memcpy@d1
  7415  0801  0872               	movf	memcpy@s1,w
  7416  0802  00F5               	movwf	??_memcpy
  7417  0803  0875               	movf	??_memcpy,w
  7418  0804  00F7               	movwf	memcpy@s
  7419  0805  0878               	movf	memcpy@d1,w
  7420  0806  00F5               	movwf	??_memcpy
  7421  0807  0875               	movf	??_memcpy,w
  7422  0808  00F6               	movwf	memcpy@d
  7423  0809                     l2015:	
  7424  0809  3001               	movlw	1
  7425  080A  02F3               	subwf	memcpy@n,f
  7426  080B  3000               	movlw	0
  7427  080C  3BF4               	subwfb	memcpy@n+1,f
  7428  080D  30FF               	movlw	255
  7429  080E  0674               	xorwf	memcpy@n+1,w
  7430  080F  1D03               	skipz
  7431  0810  2813               	goto	u1985
  7432  0811  30FF               	movlw	255
  7433  0812  0673               	xorwf	memcpy@n,w
  7434  0813                     u1985:	
  7435  0813  1903               	btfsc	3,2
  7436  0814  0008               	return
  7437  0815  0877               	movf	memcpy@s,w
  7438  0816  0086               	movwf	6
  7439  0817  0187               	clrf	7
  7440  0818  0801               	movf	1,w
  7441  0819  00F5               	movwf	??_memcpy
  7442  081A  0876               	movf	memcpy@d,w
  7443  081B  0086               	movwf	6
  7444  081C  0187               	clrf	7
  7445  081D  0875               	movf	??_memcpy,w
  7446  081E  0081               	movwf	1
  7447  081F  3001               	movlw	1
  7448  0820  00F5               	movwf	??_memcpy
  7449  0821  0875               	movf	??_memcpy,w
  7450  0822  07F7               	addwf	memcpy@s,f
  7451  0823  3001               	movlw	1
  7452  0824  00F5               	movwf	??_memcpy
  7453  0825  0875               	movf	??_memcpy,w
  7454  0826  07F6               	addwf	memcpy@d,f
  7455  0827  2809               	goto	l2015
  7456  0828                     __end_of_memcpy:	
  7457                           ;	Return value of _memcpy is never used
  7458                           
  7459                           
  7460                           	psect	text38
  7461  156E                     __ptext38:	
  7462 ;; *************** function _Adf_Locked *****************
  7463 ;; Defined at:
  7464 ;;		line 272 in file "adf7012.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;		None
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;		None
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      unsigned char 
  7471 ;; Registers used:
  7472 ;;		wreg, status,2, status,0, pclath, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7482 ;;Total ram usage:        0 bytes
  7483 ;; Hardware stack levels used:    1
  7484 ;; Hardware stack levels required when called:    4
  7485 ;; This function calls:
  7486 ;;		_Read_Adf7012_Muxout
  7487 ;; This function is called by:
  7488 ;;		_Adf_Lock
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function _Adf_Locked
  7494  156E                     _Adf_Locked:	
  7495                           
  7496                           ;adf7012.c: 274: return Read_Adf7012_Muxout();
  7497                           
  7498                           ;incstack = 0
  7499                           ; Regs used in _Adf_Locked: [wreg+status,2+status,0+pclath+cstack]
  7500  156E  3195  25D5         	fcall	_Read_Adf7012_Muxout
  7501  1570  0008               	return
  7502  1571                     __end_of_Adf_Locked:	
  7503                           
  7504                           	psect	text39
  7505  15D5                     __ptext39:	
  7506 ;; *************** function _Read_Adf7012_Muxout *****************
  7507 ;; Defined at:
  7508 ;;		line 71 in file "utility.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;		None
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1    wreg      unsigned char 
  7515 ;; Registers used:
  7516 ;;		wreg, status,2, status,0, pclath, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7526 ;;Total ram usage:        0 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:    3
  7529 ;; This function calls:
  7530 ;;		_Delay_ms
  7531 ;; This function is called by:
  7532 ;;		_Adf_Locked
  7533 ;;		_Ptt_On
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           
  7538                           ;psect for function _Read_Adf7012_Muxout
  7539  15D5                     _Read_Adf7012_Muxout:	
  7540                           
  7541                           ;utility.c: 73: Delay_ms(1);
  7542                           
  7543                           ;incstack = 0
  7544                           ; Regs used in _Read_Adf7012_Muxout: [wreg+status,2+status,0+pclath+cstack]
  7545  15D5  3001               	movlw	1
  7546  15D6  00F2               	movwf	Delay_ms@time_to_delay
  7547  15D7  3000               	movlw	0
  7548  15D8  00F3               	movwf	Delay_ms@time_to_delay+1
  7549  15D9  3196  26C8  3195   	fcall	_Delay_ms
  7550                           
  7551                           ;utility.c: 75: if(PORTCbits.RC5)
  7552  15DC  0020               	movlb	0	; select bank0
  7553  15DD  1E8E               	btfss	14,5	;volatile
  7554  15DE  2DE1               	goto	l3083
  7555                           
  7556                           ;utility.c: 76: return 1;
  7557  15DF  3001               	movlw	1
  7558  15E0  0008               	return
  7559  15E1                     l3083:	
  7560                           
  7561                           ;utility.c: 77: else
  7562                           ;utility.c: 78: return 0;
  7563  15E1  3000               	movlw	0
  7564  15E2  0008               	return
  7565  15E3                     __end_of_Read_Adf7012_Muxout:	
  7566                           
  7567                           	psect	text40
  7568  16C8                     __ptext40:	
  7569 ;; *************** function _Delay_ms *****************
  7570 ;; Defined at:
  7571 ;;		line 50 in file "utility.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;  time_to_dela    2    2[COMMON] unsigned int 
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;  i               2    6[COMMON] unsigned int 
  7576 ;; Return value:  Size  Location     Type
  7577 ;;		None               void
  7578 ;; Registers used:
  7579 ;;		wreg, status,2, status,0, pclath, cstack
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7585 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7588 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7589 ;;Total ram usage:        6 bytes
  7590 ;; Hardware stack levels used:    1
  7591 ;; Hardware stack levels required when called:    2
  7592 ;; This function calls:
  7593 ;;		_Dac0_Start_Hold
  7594 ;; This function is called by:
  7595 ;;		_main
  7596 ;;		_Read_Adf7012_Muxout
  7597 ;;		_Write_Adf7012_Reg
  7598 ;;		_Spi_Byte_Send
  7599 ;;		_Adf_Reset
  7600 ;;		_Adf_Lock
  7601 ;;		_Radio_Setup
  7602 ;;		_Ptt_On
  7603 ;;		_Ptt_Off
  7604 ;;		_Modem_Flush_Frame
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           
  7609                           ;psect for function _Delay_ms
  7610  16C8                     _Delay_ms:	
  7611                           
  7612                           ;utility.c: 52: uint16_t i=0;
  7613                           
  7614                           ;incstack = 0
  7615                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  7616  16C8  01F6               	clrf	Delay_ms@i
  7617  16C9  01F7               	clrf	Delay_ms@i+1
  7618                           
  7619                           ;utility.c: 53: Dac0_Start_Hold();
  7620  16CA  3195  2576  3196   	fcall	_Dac0_Start_Hold
  7621                           
  7622                           ;utility.c: 54: INTCON &= ~0x80;
  7623  16CD  307F               	movlw	127
  7624  16CE  00F4               	movwf	??_Delay_ms
  7625  16CF  0874               	movf	??_Delay_ms,w
  7626  16D0  058B               	andwf	11,f	;volatile
  7627                           
  7628                           ;utility.c: 55: for(i=0; i<time_to_delay; i++){
  7629  16D1  01F6               	clrf	Delay_ms@i
  7630  16D2  01F7               	clrf	Delay_ms@i+1
  7631  16D3                     l193:	
  7632  16D3  0873               	movf	Delay_ms@time_to_delay+1,w
  7633  16D4  0277               	subwf	Delay_ms@i+1,w
  7634  16D5  1D03               	skipz
  7635  16D6  2ED9               	goto	u3975
  7636  16D7  0872               	movf	Delay_ms@time_to_delay,w
  7637  16D8  0276               	subwf	Delay_ms@i,w
  7638  16D9                     u3975:	
  7639  16D9  1803               	btfsc	3,0
  7640  16DA  2EE9               	goto	l3025
  7641                           
  7642                           ;utility.c: 56: _delay((unsigned long)((1)*(32000000/4000.0)));
  7643  16DB  300B               	movlw	11
  7644  16DC  00F5               	movwf	??_Delay_ms+1
  7645  16DD  3062               	movlw	98
  7646  16DE  00F4               	movwf	??_Delay_ms
  7647  16DF                     u5627:	
  7648  16DF  0BF4               	decfsz	??_Delay_ms,f
  7649  16E0  2EDF               	goto	u5627
  7650  16E1  0BF5               	decfsz	??_Delay_ms+1,f
  7651  16E2  2EDF               	goto	u5627
  7652  16E3  0000               	nop
  7653  16E4  3001               	movlw	1
  7654  16E5  07F6               	addwf	Delay_ms@i,f
  7655  16E6  3000               	movlw	0
  7656  16E7  3DF7               	addwfc	Delay_ms@i+1,f
  7657  16E8  2ED3               	goto	l193
  7658  16E9                     l3025:	
  7659                           
  7660                           ;utility.c: 57: }
  7661                           ;utility.c: 58: INTCON |= 0xC0;
  7662  16E9  30C0               	movlw	192
  7663  16EA  00F4               	movwf	??_Delay_ms
  7664  16EB  0874               	movf	??_Delay_ms,w
  7665  16EC  048B               	iorwf	11,f	;volatile
  7666  16ED  0008               	return
  7667  16EE                     __end_of_Delay_ms:	
  7668                           
  7669                           	psect	text41
  7670  1576                     __ptext41:	
  7671 ;; *************** function _Dac0_Start_Hold *****************
  7672 ;; Defined at:
  7673 ;;		line 287 in file "utility.c"
  7674 ;; Parameters:    Size  Location     Type
  7675 ;;		None
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;		None
  7678 ;; Return value:  Size  Location     Type
  7679 ;;		None               void
  7680 ;; Registers used:
  7681 ;;		wreg
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7691 ;;Total ram usage:        0 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:    1
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_main
  7698 ;;		_Delay_ms
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           
  7703                           ;psect for function _Dac0_Start_Hold
  7704  1576                     _Dac0_Start_Hold:	
  7705                           
  7706                           ;utility.c: 288: DACEN = 1;
  7707                           
  7708                           ;incstack = 0
  7709                           ; Regs used in _Dac0_Start_Hold: [wreg]
  7710  1576  0022               	movlb	2	; select bank2
  7711  1577  1798               	bsf	24,7	;volatile
  7712                           
  7713                           ;utility.c: 289: DACCON1 = 0x10;
  7714  1578  3010               	movlw	16
  7715  1579  0099               	movwf	25	;volatile
  7716  157A  0008               	return
  7717  157B                     __end_of_Dac0_Start_Hold:	
  7718                           
  7719                           	psect	text42
  7720  164C                     __ptext42:	
  7721 ;; *************** function _Ax25_Send_String *****************
  7722 ;; Defined at:
  7723 ;;		line 91 in file "ax25.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  string          2    6[BANK0 ] PTR const unsigned char 
  7726 ;;		 -> STR_1(6), 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  i               2    8[BANK0 ] int 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;		None               void
  7731 ;; Registers used:
  7732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7738 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7739 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7741 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;Total ram usage:        4 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:    4
  7745 ;; This function calls:
  7746 ;;		_Ax25_Send_Byte
  7747 ;; This function is called by:
  7748 ;;		_main
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           
  7753                           ;psect for function _Ax25_Send_String
  7754  164C                     _Ax25_Send_String:	
  7755                           
  7756                           ;ax25.c: 93: int i;
  7757                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  7758                           
  7759                           ;incstack = 0
  7760                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7761  164C  0020               	movlb	0	; select bank0
  7762  164D  01A8               	clrf	Ax25_Send_String@i
  7763  164E  01A9               	clrf	Ax25_Send_String@i+1
  7764  164F                     l3645:	
  7765  164F  0826               	movf	Ax25_Send_String@string,w
  7766  1650  0728               	addwf	Ax25_Send_String@i,w
  7767  1651  0084               	movwf	4
  7768  1652  0827               	movf	Ax25_Send_String@string+1,w
  7769  1653  3D29               	addwfc	Ax25_Send_String@i+1,w
  7770  1654  0085               	movwf	5
  7771  1655  0800               	movf	0,w	;code access
  7772  1656  3800               	iorlw	0
  7773  1657  1903               	btfsc	3,2
  7774  1658  0008               	return
  7775                           
  7776                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  7777  1659  0826               	movf	Ax25_Send_String@string,w
  7778  165A  0728               	addwf	Ax25_Send_String@i,w
  7779  165B  0084               	movwf	4
  7780  165C  0827               	movf	Ax25_Send_String@string+1,w
  7781  165D  3D29               	addwfc	Ax25_Send_String@i+1,w
  7782  165E  0085               	movwf	5
  7783  165F  0800               	movf	0,w	;code access
  7784  1660  3195  2571  3196   	fcall	_Ax25_Send_Byte
  7785  1663  3001               	movlw	1
  7786  1664  0020               	movlb	0	; select bank0
  7787  1665  07A8               	addwf	Ax25_Send_String@i,f
  7788  1666  3000               	movlw	0
  7789  1667  3DA9               	addwfc	Ax25_Send_String@i+1,f
  7790  1668  2E4F               	goto	l3645
  7791  1669                     __end_of_Ax25_Send_String:	
  7792                           
  7793                           	psect	text43
  7794  1571                     __ptext43:	
  7795 ;; *************** function _Ax25_Send_Byte *****************
  7796 ;; Defined at:
  7797 ;;		line 56 in file "ax25.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;  byte            1    wreg     unsigned char 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;  byte            1    8[COMMON] unsigned char 
  7802 ;; Return value:  Size  Location     Type
  7803 ;;		None               void
  7804 ;; Registers used:
  7805 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;Total ram usage:        1 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    3
  7818 ;; This function calls:
  7819 ;;		_Send_Byte
  7820 ;; This function is called by:
  7821 ;;		_Ax25_Send_String
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           
  7826                           ;psect for function _Ax25_Send_Byte
  7827  1571                     _Ax25_Send_Byte:	
  7828                           
  7829                           ;incstack = 0
  7830                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7831                           ;Ax25_Send_Byte@byte stored from wreg
  7832  1571  00F8               	movwf	Ax25_Send_Byte@byte
  7833                           
  7834                           ;ax25.c: 59: Send_Byte(byte);
  7835  1572  0878               	movf	Ax25_Send_Byte@byte,w
  7836  1573  318E  2669         	fcall	_Send_Byte
  7837  1575  0008               	return
  7838  1576                     __end_of_Ax25_Send_Byte:	
  7839                           
  7840                           	psect	text44
  7841  067A                     __ptext44:	
  7842 ;; *************** function _Ax25_Send_Header *****************
  7843 ;; Defined at:
  7844 ;;		line 99 in file "ax25.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  addresses       1    wreg     PTR struct .
  7847 ;;		 -> main@beacon_address(16), 
  7848 ;;  num_addresse    2    6[BANK0 ] int 
  7849 ;; Auto vars:     Size  Location     Type
  7850 ;;  addresses       1   11[BANK0 ] PTR struct .
  7851 ;;		 -> main@beacon_address(16), 
  7852 ;;  i               2   14[BANK0 ] int 
  7853 ;;  j               2   12[BANK0 ] int 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;		None               void
  7856 ;; Registers used:
  7857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7864 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;Total ram usage:       10 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    3
  7870 ;; This function calls:
  7871 ;;		_Ax25_Send_Flag
  7872 ;;		_Ax25_Send_Sync
  7873 ;;		_Send_Byte
  7874 ;; This function is called by:
  7875 ;;		_main
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           
  7880                           ;psect for function _Ax25_Send_Header
  7881  067A                     _Ax25_Send_Header:	
  7882                           
  7883                           ;incstack = 0
  7884                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7885                           ;Ax25_Send_Header@addresses stored from wreg
  7886  067A  0020               	movlb	0	; select bank0
  7887  067B  00AB               	movwf	Ax25_Send_Header@addresses
  7888                           
  7889                           ;ax25.c: 101: int i, j;
  7890                           ;ax25.c: 102: modem_packet_size = 0;
  7891  067C  3000               	movlw	0
  7892  067D  0021               	movlb	1	; select bank1
  7893  067E  00CA               	movwf	(_modem_packet_size+3)^(0+128)
  7894  067F  3000               	movlw	0
  7895  0680  00C9               	movwf	(_modem_packet_size+2)^(0+128)
  7896  0681  3000               	movlw	0
  7897  0682  00C8               	movwf	(_modem_packet_size+1)^(0+128)
  7898  0683  3000               	movlw	0
  7899  0684  00C7               	movwf	_modem_packet_size^(0+128)
  7900                           
  7901                           ;ax25.c: 103: ones_in_a_row = 0;
  7902  0685  01D1               	clrf	_ones_in_a_row^(0+128)
  7903  0686  01D2               	clrf	(_ones_in_a_row+1)^(0+128)
  7904                           
  7905                           ;ax25.c: 104: crc = 0xffff;
  7906  0687  30FF               	movlw	255
  7907  0688  00CF               	movwf	_crc^(0+128)
  7908  0689  30FF               	movlw	255
  7909  068A  00D0               	movwf	(_crc^(0+128)+1)
  7910                           
  7911                           ;ax25.c: 107: for (i = 0; i < 100; i++)
  7912  068B  0020               	movlb	0	; select bank0
  7913  068C  01AE               	clrf	Ax25_Send_Header@i
  7914  068D  01AF               	clrf	Ax25_Send_Header@i+1
  7915  068E  082F               	movf	Ax25_Send_Header@i+1,w
  7916  068F  3A80               	xorlw	128
  7917  0690  00A8               	movwf	??_Ax25_Send_Header
  7918  0691  3080               	movlw	128
  7919  0692  0228               	subwf	??_Ax25_Send_Header,w
  7920  0693  1D03               	skipz
  7921  0694  2E97               	goto	u5465
  7922  0695  3064               	movlw	100
  7923  0696  022E               	subwf	Ax25_Send_Header@i,w
  7924  0697                     u5465:	
  7925  0697  1803               	btfsc	3,0
  7926  0698  2EAC               	goto	l3601
  7927  0699                     l3595:	
  7928                           
  7929                           ;ax25.c: 108: {
  7930                           ;ax25.c: 109: Ax25_Send_Sync();
  7931  0699  318A  222D  3186   	fcall	_Ax25_Send_Sync
  7932  069C  3001               	movlw	1
  7933  069D  0020               	movlb	0	; select bank0
  7934  069E  07AE               	addwf	Ax25_Send_Header@i,f
  7935  069F  3000               	movlw	0
  7936  06A0  3DAF               	addwfc	Ax25_Send_Header@i+1,f
  7937  06A1  082F               	movf	Ax25_Send_Header@i+1,w
  7938  06A2  3A80               	xorlw	128
  7939  06A3  00A8               	movwf	??_Ax25_Send_Header
  7940  06A4  3080               	movlw	128
  7941  06A5  0228               	subwf	??_Ax25_Send_Header,w
  7942  06A6  1D03               	skipz
  7943  06A7  2EAA               	goto	u5475
  7944  06A8  3064               	movlw	100
  7945  06A9  022E               	subwf	Ax25_Send_Header@i,w
  7946  06AA                     u5475:	
  7947  06AA  1C03               	skipc
  7948  06AB  2E99               	goto	l3595
  7949  06AC                     l3601:	
  7950                           
  7951                           ;ax25.c: 110: }
  7952                           ;ax25.c: 113: for (i = 0; i < 3; i++)
  7953  06AC  0020               	movlb	0	; select bank0
  7954  06AD  01AE               	clrf	Ax25_Send_Header@i
  7955  06AE  01AF               	clrf	Ax25_Send_Header@i+1
  7956  06AF  082F               	movf	Ax25_Send_Header@i+1,w
  7957  06B0  3A80               	xorlw	128
  7958  06B1  00A8               	movwf	??_Ax25_Send_Header
  7959  06B2  3080               	movlw	128
  7960  06B3  0228               	subwf	??_Ax25_Send_Header,w
  7961  06B4  1D03               	skipz
  7962  06B5  2EB8               	goto	u5485
  7963  06B6  3003               	movlw	3
  7964  06B7  022E               	subwf	Ax25_Send_Header@i,w
  7965  06B8                     u5485:	
  7966  06B8  1803               	btfsc	3,0
  7967  06B9  2ECD               	goto	l3613
  7968  06BA                     l3607:	
  7969                           
  7970                           ;ax25.c: 114: {
  7971                           ;ax25.c: 115: Ax25_Send_Flag();
  7972  06BA  318A  22AC  3186   	fcall	_Ax25_Send_Flag
  7973  06BD  3001               	movlw	1
  7974  06BE  0020               	movlb	0	; select bank0
  7975  06BF  07AE               	addwf	Ax25_Send_Header@i,f
  7976  06C0  3000               	movlw	0
  7977  06C1  3DAF               	addwfc	Ax25_Send_Header@i+1,f
  7978  06C2  082F               	movf	Ax25_Send_Header@i+1,w
  7979  06C3  3A80               	xorlw	128
  7980  06C4  00A8               	movwf	??_Ax25_Send_Header
  7981  06C5  3080               	movlw	128
  7982  06C6  0228               	subwf	??_Ax25_Send_Header,w
  7983  06C7  1D03               	skipz
  7984  06C8  2ECB               	goto	u5495
  7985  06C9  3003               	movlw	3
  7986  06CA  022E               	subwf	Ax25_Send_Header@i,w
  7987  06CB                     u5495:	
  7988  06CB  1C03               	skipc
  7989  06CC  2EBA               	goto	l3607
  7990  06CD                     l3613:	
  7991                           
  7992                           ;ax25.c: 116: }
  7993                           ;ax25.c: 118: for (i = 0; i < num_addresses; i++) {
  7994  06CD  0020               	movlb	0	; select bank0
  7995  06CE  01AE               	clrf	Ax25_Send_Header@i
  7996  06CF  01AF               	clrf	Ax25_Send_Header@i+1
  7997  06D0                     l3635:	
  7998  06D0  082F               	movf	Ax25_Send_Header@i+1,w
  7999  06D1  3A80               	xorlw	128
  8000  06D2  00A8               	movwf	??_Ax25_Send_Header
  8001  06D3  0827               	movf	Ax25_Send_Header@num_addresses+1,w
  8002  06D4  3A80               	xorlw	128
  8003  06D5  0228               	subwf	??_Ax25_Send_Header,w
  8004  06D6  1D03               	skipz
  8005  06D7  2EDA               	goto	u5565
  8006  06D8  0826               	movf	Ax25_Send_Header@num_addresses,w
  8007  06D9  022E               	subwf	Ax25_Send_Header@i,w
  8008  06DA                     u5565:	
  8009  06DA  1803               	btfsc	3,0
  8010  06DB  2F4A               	goto	l3637
  8011                           
  8012                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  8013  06DC  0020               	movlb	0	; select bank0
  8014  06DD  01AC               	clrf	Ax25_Send_Header@j
  8015  06DE  01AD               	clrf	Ax25_Send_Header@j+1
  8016  06DF  082D               	movf	Ax25_Send_Header@j+1,w
  8017  06E0  3A80               	xorlw	128
  8018  06E1  00A8               	movwf	??_Ax25_Send_Header
  8019  06E2  3080               	movlw	128
  8020  06E3  0228               	subwf	??_Ax25_Send_Header,w
  8021  06E4  1D03               	skipz
  8022  06E5  2EE8               	goto	u5505
  8023  06E6  3006               	movlw	6
  8024  06E7  022C               	subwf	Ax25_Send_Header@j,w
  8025  06E8                     u5505:	
  8026  06E8  1803               	btfsc	3,0
  8027  06E9  2F0F               	goto	l3627
  8028  06EA                     l3621:	
  8029                           
  8030                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  8031  06EA  0020               	movlb	0	; select bank0
  8032  06EB  082E               	movf	Ax25_Send_Header@i,w
  8033  06EC  00A8               	movwf	??_Ax25_Send_Header
  8034  06ED  3002               	movlw	2
  8035  06EE                     u5515:	
  8036  06EE  35A8               	lslf	??_Ax25_Send_Header,f
  8037  06EF  3EFF               	addlw	-1
  8038  06F0  1D03               	skipz
  8039  06F1  2EEE               	goto	u5515
  8040  06F2  3528               	lslf	??_Ax25_Send_Header,w
  8041  06F3  072B               	addwf	Ax25_Send_Header@addresses,w
  8042  06F4  00A9               	movwf	??_Ax25_Send_Header+1
  8043  06F5  082C               	movf	Ax25_Send_Header@j,w
  8044  06F6  0729               	addwf	??_Ax25_Send_Header+1,w
  8045  06F7  00AA               	movwf	??_Ax25_Send_Header+2
  8046  06F8  082A               	movf	??_Ax25_Send_Header+2,w
  8047  06F9  0086               	movwf	6
  8048  06FA  0187               	clrf	7
  8049  06FB  3501               	lslf	1,w
  8050  06FC  318E  2669  3186   	fcall	_Send_Byte
  8051  06FF  3001               	movlw	1
  8052  0700  0020               	movlb	0	; select bank0
  8053  0701  07AC               	addwf	Ax25_Send_Header@j,f
  8054  0702  3000               	movlw	0
  8055  0703  3DAD               	addwfc	Ax25_Send_Header@j+1,f
  8056  0704  082D               	movf	Ax25_Send_Header@j+1,w
  8057  0705  3A80               	xorlw	128
  8058  0706  00A8               	movwf	??_Ax25_Send_Header
  8059  0707  3080               	movlw	128
  8060  0708  0228               	subwf	??_Ax25_Send_Header,w
  8061  0709  1D03               	skipz
  8062  070A  2F0D               	goto	u5525
  8063  070B  3006               	movlw	6
  8064  070C  022C               	subwf	Ax25_Send_Header@j,w
  8065  070D                     u5525:	
  8066  070D  1C03               	skipc
  8067  070E  2EEA               	goto	l3621
  8068  070F                     l3627:	
  8069                           
  8070                           ;ax25.c: 127: if (i == num_addresses - 1)
  8071  070F  0020               	movlb	0	; select bank0
  8072  0710  0826               	movf	Ax25_Send_Header@num_addresses,w
  8073  0711  3EFF               	addlw	255
  8074  0712  00A8               	movwf	??_Ax25_Send_Header
  8075  0713  30FF               	movlw	255
  8076  0714  3D27               	addwfc	Ax25_Send_Header@num_addresses+1,w
  8077  0715  00A9               	movwf	??_Ax25_Send_Header+1
  8078  0716  082F               	movf	Ax25_Send_Header@i+1,w
  8079  0717  0629               	xorwf	??_Ax25_Send_Header+1,w
  8080  0718  1D03               	skipz
  8081  0719  2F1C               	goto	u5535
  8082  071A  082E               	movf	Ax25_Send_Header@i,w
  8083  071B  0628               	xorwf	??_Ax25_Send_Header,w
  8084  071C                     u5535:	
  8085  071C  1D03               	skipz
  8086  071D  2F30               	goto	l3631
  8087                           
  8088                           ;ax25.c: 128: Send_Byte(('0' + addresses[i].ssid) << 1 | 1);
  8089  071E  082E               	movf	Ax25_Send_Header@i,w
  8090  071F  00A8               	movwf	??_Ax25_Send_Header
  8091  0720  3002               	movlw	2
  8092  0721                     u5545:	
  8093  0721  35A8               	lslf	??_Ax25_Send_Header,f
  8094  0722  3EFF               	addlw	-1
  8095  0723  1D03               	skipz
  8096  0724  2F21               	goto	u5545
  8097  0725  3528               	lslf	??_Ax25_Send_Header,w
  8098  0726  072B               	addwf	Ax25_Send_Header@addresses,w
  8099  0727  00A9               	movwf	??_Ax25_Send_Header+1
  8100  0728  0829               	movf	??_Ax25_Send_Header+1,w
  8101  0729  3E07               	addlw	7
  8102  072A  0086               	movwf	6
  8103  072B  0187               	clrf	7
  8104  072C  3501               	lslf	1,w
  8105  072D  3E60               	addlw	96
  8106  072E  3801               	iorlw	1
  8107  072F  2F41               	goto	L2
  8108  0730                     l3631:	
  8109                           
  8110                           ;ax25.c: 130: else
  8111                           ;ax25.c: 131: Send_Byte(('0' + addresses[i].ssid) << 1);
  8112  0730  0020               	movlb	0	; select bank0
  8113  0731  082E               	movf	Ax25_Send_Header@i,w
  8114  0732  00A8               	movwf	??_Ax25_Send_Header
  8115  0733  3002               	movlw	2
  8116  0734                     u5555:	
  8117  0734  35A8               	lslf	??_Ax25_Send_Header,f
  8118  0735  3EFF               	addlw	-1
  8119  0736  1D03               	skipz
  8120  0737  2F34               	goto	u5555
  8121  0738  3528               	lslf	??_Ax25_Send_Header,w
  8122  0739  072B               	addwf	Ax25_Send_Header@addresses,w
  8123  073A  00A9               	movwf	??_Ax25_Send_Header+1
  8124  073B  0829               	movf	??_Ax25_Send_Header+1,w
  8125  073C  3E07               	addlw	7
  8126  073D  0086               	movwf	6
  8127  073E  0187               	clrf	7
  8128  073F  3501               	lslf	1,w
  8129  0740  3E60               	addlw	96
  8130  0741                     L2:	
  8131  0741  318E  2669  3186   	fcall	_Send_Byte
  8132  0744  3001               	movlw	1
  8133  0745  0020               	movlb	0	; select bank0
  8134  0746  07AE               	addwf	Ax25_Send_Header@i,f
  8135  0747  3000               	movlw	0
  8136  0748  3DAF               	addwfc	Ax25_Send_Header@i+1,f
  8137  0749  2ED0               	goto	l3635
  8138  074A                     l3637:	
  8139                           
  8140                           ;ax25.c: 132: }
  8141                           ;ax25.c: 135: Send_Byte(0x03);
  8142  074A  3003               	movlw	3
  8143  074B  318E  2669  3186   	fcall	_Send_Byte
  8144                           
  8145                           ;ax25.c: 138: Send_Byte(0xf0);
  8146  074E  30F0               	movlw	240
  8147  074F  318E  2669         	fcall	_Send_Byte
  8148  0751  0008               	return
  8149  0752                     __end_of_Ax25_Send_Header:	
  8150                           
  8151                           	psect	text45
  8152  0A2D                     __ptext45:	
  8153 ;; *************** function _Ax25_Send_Sync *****************
  8154 ;; Defined at:
  8155 ;;		line 63 in file "ax25.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;  i               2    1[BANK0 ] int 
  8160 ;;  byte            1    0[BANK0 ] unsigned char 
  8161 ;; Return value:  Size  Location     Type
  8162 ;;		None               void
  8163 ;; Registers used:
  8164 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8165 ;; Tracked objects:
  8166 ;;		On entry : 0/0
  8167 ;;		On exit  : 0/0
  8168 ;;		Unchanged: 0/0
  8169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8171 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8172 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8173 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8174 ;;Total ram usage:        9 bytes
  8175 ;; Hardware stack levels used:    1
  8176 ;; Hardware stack levels required when called:    1
  8177 ;; This function calls:
  8178 ;;		Nothing
  8179 ;; This function is called by:
  8180 ;;		_Ax25_Send_Header
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           
  8185                           ;psect for function _Ax25_Send_Sync
  8186  0A2D                     _Ax25_Send_Sync:	
  8187                           
  8188                           ;ax25.c: 65: uint8_t byte = 0x00;
  8189                           
  8190                           ;incstack = 0
  8191                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  8192  0A2D  0020               	movlb	0	; select bank0
  8193  0A2E  01A0               	clrf	Ax25_Send_Sync@byte
  8194                           
  8195                           ;ax25.c: 66: int i;
  8196                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  8197  0A2F  01A1               	clrf	Ax25_Send_Sync@i
  8198  0A30  01A2               	clrf	Ax25_Send_Sync@i+1
  8199  0A31                     L3:	
  8200  0A31  0822               	movf	Ax25_Send_Sync@i+1,w
  8201  0A32  3A80               	xorlw	128
  8202  0A33  00F2               	movwf	??_Ax25_Send_Sync
  8203  0A34  3080               	movlw	128
  8204  0A35  0272               	subwf	??_Ax25_Send_Sync,w
  8205  0A36  3008               	movlw	8
  8206  0A37  1903               	btfsc	3,2
  8207  0A38  0221               	subwf	Ax25_Send_Sync@i,w
  8208  0A39  1803               	btfsc	3,0
  8209  0A3A  0008               	return
  8210                           
  8211                           ;ax25.c: 68: if (modem_packet_size >= 64 * 8)
  8212  0A3B  3000               	movlw	0
  8213  0A3C  0021               	movlb	1	; select bank1
  8214  0A3D  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8215  0A3E  1D03               	skipz
  8216  0A3F  2A4A               	goto	u5295
  8217  0A40  3000               	movlw	0
  8218  0A41  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8219  0A42  1D03               	skipz
  8220  0A43  2A4A               	goto	u5295
  8221  0A44  3002               	movlw	2
  8222  0A45  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8223  0A46  1D03               	skipz
  8224  0A47  2A4A               	goto	u5295
  8225  0A48  3000               	movlw	0
  8226  0A49  0247               	subwf	_modem_packet_size^(0+128),w
  8227  0A4A                     u5295:	
  8228  0A4A  1803               	btfsc	3,0
  8229  0A4B  0008               	return
  8230                           
  8231                           ;ax25.c: 70: if ((byte >> i) & 1)
  8232                           
  8233                           ;ax25.c: 69: return;
  8234  0A4C  0020               	movlb	0	; select bank0
  8235  0A4D  0820               	movf	Ax25_Send_Sync@byte,w
  8236  0A4E  00F2               	movwf	??_Ax25_Send_Sync
  8237  0A4F  0A21               	incf	Ax25_Send_Sync@i,w
  8238  0A50  2A52               	goto	u5304
  8239  0A51                     u5305:	
  8240  0A51  36F2               	lsrf	??_Ax25_Send_Sync,f
  8241  0A52                     u5304:	
  8242  0A52  0B89               	decfsz	9,f
  8243  0A53  2A51               	goto	u5305
  8244  0A54  1C72               	btfss	??_Ax25_Send_Sync,0
  8245  0A55  2A79               	goto	l3553
  8246                           
  8247                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8248  0A56  3001               	movlw	1
  8249  0A57  00F2               	movwf	??_Ax25_Send_Sync
  8250  0A58  0021               	movlb	1	; select bank1
  8251  0A59  0847               	movf	_modem_packet_size^(0+128),w
  8252  0A5A  3907               	andlw	7
  8253  0A5B  0A89               	incf	9,f
  8254  0A5C  2A5E               	goto	u5324
  8255  0A5D                     u5325:	
  8256  0A5D  35F2               	lslf	??_Ax25_Send_Sync,f
  8257  0A5E                     u5324:	
  8258  0A5E  0B89               	decfsz	9,f
  8259  0A5F  2A5D               	goto	u5325
  8260  0A60  0872               	movf	??_Ax25_Send_Sync,w
  8261  0A61  00F3               	movwf	??_Ax25_Send_Sync+1
  8262  0A62  0847               	movf	_modem_packet_size^(0+128),w
  8263  0A63  00F4               	movwf	??_Ax25_Send_Sync+2
  8264  0A64  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8265  0A65  00F5               	movwf	??_Ax25_Send_Sync+3
  8266  0A66  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8267  0A67  00F6               	movwf	??_Ax25_Send_Sync+4
  8268  0A68  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8269  0A69  00F7               	movwf	??_Ax25_Send_Sync+5
  8270  0A6A  3003               	movlw	3
  8271  0A6B                     u5335:	
  8272  0A6B  36F7               	lsrf	??_Ax25_Send_Sync+5,f
  8273  0A6C  0CF6               	rrf	??_Ax25_Send_Sync+4,f
  8274  0A6D  0CF5               	rrf	??_Ax25_Send_Sync+3,f
  8275  0A6E  0CF4               	rrf	??_Ax25_Send_Sync+2,f
  8276  0A6F  0B89               	decfsz	9,f
  8277  0A70  2A6B               	goto	u5335
  8278  0A71  0874               	movf	??_Ax25_Send_Sync+2,w
  8279  0A72  3EA0               	addlw	_modem_packet& (0+255)
  8280  0A73  0086               	movwf	6
  8281  0A74  3001               	movlw	1	; select bank3/4
  8282  0A75  0087               	movwf	7
  8283  0A76  0873               	movf	??_Ax25_Send_Sync+1,w
  8284  0A77  0481               	iorwf	1,f
  8285  0A78  2A9C               	goto	l3555
  8286  0A79                     l3553:	
  8287                           
  8288                           ;ax25.c: 72: else
  8289                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8290  0A79  3001               	movlw	1
  8291  0A7A  00F2               	movwf	??_Ax25_Send_Sync
  8292  0A7B  0021               	movlb	1	; select bank1
  8293  0A7C  0847               	movf	_modem_packet_size^(0+128),w
  8294  0A7D  3907               	andlw	7
  8295  0A7E  0A89               	incf	9,f
  8296  0A7F  2A81               	goto	u5344
  8297  0A80                     u5345:	
  8298  0A80  35F2               	lslf	??_Ax25_Send_Sync,f
  8299  0A81                     u5344:	
  8300  0A81  0B89               	decfsz	9,f
  8301  0A82  2A80               	goto	u5345
  8302  0A83  0872               	movf	??_Ax25_Send_Sync,w
  8303  0A84  3AFF               	xorlw	255
  8304  0A85  00F3               	movwf	??_Ax25_Send_Sync+1
  8305  0A86  0847               	movf	_modem_packet_size^(0+128),w
  8306  0A87  00F4               	movwf	??_Ax25_Send_Sync+2
  8307  0A88  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8308  0A89  00F5               	movwf	??_Ax25_Send_Sync+3
  8309  0A8A  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8310  0A8B  00F6               	movwf	??_Ax25_Send_Sync+4
  8311  0A8C  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8312  0A8D  00F7               	movwf	??_Ax25_Send_Sync+5
  8313  0A8E  3003               	movlw	3
  8314  0A8F                     u5355:	
  8315  0A8F  36F7               	lsrf	??_Ax25_Send_Sync+5,f
  8316  0A90  0CF6               	rrf	??_Ax25_Send_Sync+4,f
  8317  0A91  0CF5               	rrf	??_Ax25_Send_Sync+3,f
  8318  0A92  0CF4               	rrf	??_Ax25_Send_Sync+2,f
  8319  0A93  0B89               	decfsz	9,f
  8320  0A94  2A8F               	goto	u5355
  8321  0A95  0874               	movf	??_Ax25_Send_Sync+2,w
  8322  0A96  3EA0               	addlw	_modem_packet& (0+255)
  8323  0A97  0086               	movwf	6
  8324  0A98  3001               	movlw	1	; select bank3/4
  8325  0A99  0087               	movwf	7
  8326  0A9A  0873               	movf	??_Ax25_Send_Sync+1,w
  8327  0A9B  0581               	andwf	1,f
  8328  0A9C                     l3555:	
  8329  0A9C  3001               	movlw	1
  8330  0A9D  0020               	movlb	0	; select bank0
  8331  0A9E  07A1               	addwf	Ax25_Send_Sync@i,f
  8332  0A9F  3000               	movlw	0
  8333  0AA0  3DA2               	addwfc	Ax25_Send_Sync@i+1,f
  8334  0AA1  3001               	movlw	1
  8335  0AA2  0021               	movlb	1	; select bank1
  8336  0AA3  07C7               	addwf	_modem_packet_size^(0+128),f
  8337  0AA4  3000               	movlw	0
  8338  0AA5  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8339  0AA6  3000               	movlw	0
  8340  0AA7  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8341  0AA8  3000               	movlw	0
  8342  0AA9  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8343  0AAA  0020               	movlb	0	; select bank0
  8344  0AAB  2A31               	goto	L3
  8345  0AAC                     __end_of_Ax25_Send_Sync:	
  8346                           
  8347                           	psect	text46
  8348  00E9                     __ptext46:	
  8349 ;; *************** function _Ax25_Send_Footer *****************
  8350 ;; Defined at:
  8351 ;;		line 141 in file "ax25.c"
  8352 ;; Parameters:    Size  Location     Type
  8353 ;;		None
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;  final_crc       2    8[COMMON] unsigned int 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;		None               void
  8358 ;; Registers used:
  8359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;Total ram usage:        2 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:    3
  8372 ;; This function calls:
  8373 ;;		_Ax25_Send_Flag
  8374 ;;		_Send_Byte
  8375 ;; This function is called by:
  8376 ;;		_main
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           
  8381                           ;psect for function _Ax25_Send_Footer
  8382  00E9                     _Ax25_Send_Footer:	
  8383                           
  8384                           ;ax25.c: 144: uint16_t final_crc = crc;
  8385                           
  8386                           ;incstack = 0
  8387                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8388  00E9  0021               	movlb	1	; select bank1
  8389  00EA  0850               	movf	(_crc+1)^(0+128),w
  8390  00EB  01F9               	clrf	Ax25_Send_Footer@final_crc+1
  8391  00EC  07F9               	addwf	Ax25_Send_Footer@final_crc+1,f
  8392  00ED  084F               	movf	_crc^(0+128),w
  8393  00EE  01F8               	clrf	Ax25_Send_Footer@final_crc
  8394  00EF  07F8               	addwf	Ax25_Send_Footer@final_crc,f
  8395                           
  8396                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  8397  00F0  0978               	comf	Ax25_Send_Footer@final_crc,w
  8398  00F1  318E  2669  3180   	fcall	_Send_Byte
  8399                           
  8400                           ;ax25.c: 148: final_crc >>= 8;
  8401  00F4  3008               	movlw	8
  8402  00F5                     u5585:	
  8403  00F5  36F9               	lsrf	Ax25_Send_Footer@final_crc+1,f
  8404  00F6  0CF8               	rrf	Ax25_Send_Footer@final_crc,f
  8405  00F7  0B89               	decfsz	9,f
  8406  00F8  28F5               	goto	u5585
  8407                           
  8408                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  8409  00F9  0978               	comf	Ax25_Send_Footer@final_crc,w
  8410  00FA  318E  2669  3180   	fcall	_Send_Byte
  8411                           
  8412                           ;ax25.c: 152: Ax25_Send_Flag();
  8413  00FD  318A  22AC         	fcall	_Ax25_Send_Flag
  8414  00FF  0008               	return
  8415  0100                     __end_of_Ax25_Send_Footer:	
  8416                           
  8417                           	psect	text47
  8418  0E69                     __ptext47:	
  8419 ;; *************** function _Send_Byte *****************
  8420 ;; Defined at:
  8421 ;;		line 33 in file "ax25.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;  byte            1    wreg     unsigned char 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  byte            1    5[COMMON] unsigned char 
  8426 ;;  i               2    6[COMMON] int 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;		None               void
  8429 ;; Registers used:
  8430 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8440 ;;Total ram usage:        9 bytes
  8441 ;; Hardware stack levels used:    1
  8442 ;; Hardware stack levels required when called:    2
  8443 ;; This function calls:
  8444 ;;		_Update_Crc
  8445 ;; This function is called by:
  8446 ;;		_Ax25_Send_Byte
  8447 ;;		_Ax25_Send_Header
  8448 ;;		_Ax25_Send_Footer
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           
  8453                           ;psect for function _Send_Byte
  8454  0E69                     _Send_Byte:	
  8455                           
  8456                           ;incstack = 0
  8457                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8458                           ;Send_Byte@byte stored from wreg
  8459  0E69  00F5               	movwf	Send_Byte@byte
  8460                           
  8461                           ;ax25.c: 35: int i;
  8462                           ;ax25.c: 36: for (i = 0; i < 8; i++) {
  8463  0E6A  01F6               	clrf	Send_Byte@i
  8464  0E6B  01F7               	clrf	Send_Byte@i+1
  8465  0E6C                     L4:	
  8466  0E6C  0877               	movf	Send_Byte@i+1,w
  8467  0E6D  3A80               	xorlw	128
  8468  0E6E  0020               	movlb	0	; select bank0
  8469  0E6F  00A0               	movwf	??_Send_Byte
  8470  0E70  3080               	movlw	128
  8471  0E71  0220               	subwf	??_Send_Byte,w
  8472  0E72  3008               	movlw	8
  8473  0E73  1903               	btfsc	3,2
  8474  0E74  0276               	subwf	Send_Byte@i,w
  8475  0E75  1803               	btfsc	3,0
  8476  0E76  0008               	return
  8477                           
  8478                           ;ax25.c: 37: Update_Crc((byte >> i) & 1);
  8479  0E77  0875               	movf	Send_Byte@byte,w
  8480  0E78  0020               	movlb	0	; select bank0
  8481  0E79  00A0               	movwf	??_Send_Byte
  8482  0E7A  0A76               	incf	Send_Byte@i,w
  8483  0E7B  2E7D               	goto	u5144
  8484  0E7C                     u5145:	
  8485  0E7C  36A0               	lsrf	??_Send_Byte,f
  8486  0E7D                     u5144:	
  8487  0E7D  0B89               	decfsz	9,f
  8488  0E7E  2E7C               	goto	u5145
  8489  0E7F  0820               	movf	??_Send_Byte,w
  8490  0E80  3901               	andlw	1
  8491  0E81  3196  26A5  318E   	fcall	_Update_Crc
  8492                           
  8493                           ;ax25.c: 38: if ((byte >> i) & 1) {
  8494  0E84  0875               	movf	Send_Byte@byte,w
  8495  0E85  0020               	movlb	0	; select bank0
  8496  0E86  00A0               	movwf	??_Send_Byte
  8497  0E87  0A76               	incf	Send_Byte@i,w
  8498  0E88  2E8A               	goto	u5154
  8499  0E89                     u5155:	
  8500  0E89  36A0               	lsrf	??_Send_Byte,f
  8501  0E8A                     u5154:	
  8502  0E8A  0B89               	decfsz	9,f
  8503  0E8B  2E89               	goto	u5155
  8504  0E8C  1C20               	btfss	??_Send_Byte,0
  8505  0E8D  2EE5               	goto	l3487
  8506                           
  8507                           ;ax25.c: 40: if (modem_packet_size >= 64 * 8)
  8508  0E8E  3000               	movlw	0
  8509  0E8F  0021               	movlb	1	; select bank1
  8510  0E90  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8511  0E91  1D03               	skipz
  8512  0E92  2E9D               	goto	u5175
  8513  0E93  3000               	movlw	0
  8514  0E94  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8515  0E95  1D03               	skipz
  8516  0E96  2E9D               	goto	u5175
  8517  0E97  3002               	movlw	2
  8518  0E98  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8519  0E99  1D03               	skipz
  8520  0E9A  2E9D               	goto	u5175
  8521  0E9B  3000               	movlw	0
  8522  0E9C  0247               	subwf	_modem_packet_size^(0+128),w
  8523  0E9D                     u5175:	
  8524  0E9D  1803               	btfsc	3,0
  8525  0E9E  0008               	return
  8526                           
  8527                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8528                           
  8529                           ;ax25.c: 41: return;
  8530  0E9F  3001               	movlw	1
  8531  0EA0  0020               	movlb	0	; select bank0
  8532  0EA1  00A0               	movwf	??_Send_Byte
  8533  0EA2  0021               	movlb	1	; select bank1
  8534  0EA3  0847               	movf	_modem_packet_size^(0+128),w
  8535  0EA4  3907               	andlw	7
  8536  0EA5  0A89               	incf	9,f
  8537  0EA6  0020               	movlb	0	; select bank0
  8538  0EA7  2EA9               	goto	u5184
  8539  0EA8                     u5185:	
  8540  0EA8  35A0               	lslf	??_Send_Byte,f
  8541  0EA9                     u5184:	
  8542  0EA9  0B89               	decfsz	9,f
  8543  0EAA  2EA8               	goto	u5185
  8544  0EAB  0820               	movf	??_Send_Byte,w
  8545  0EAC  00A1               	movwf	??_Send_Byte+1
  8546  0EAD  0021               	movlb	1	; select bank1
  8547  0EAE  0847               	movf	_modem_packet_size^(0+128),w
  8548  0EAF  0020               	movlb	0	; select bank0
  8549  0EB0  00A2               	movwf	??_Send_Byte+2
  8550  0EB1  0021               	movlb	1	; select bank1
  8551  0EB2  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8552  0EB3  0020               	movlb	0	; select bank0
  8553  0EB4  00A3               	movwf	??_Send_Byte+3
  8554  0EB5  0021               	movlb	1	; select bank1
  8555  0EB6  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8556  0EB7  0020               	movlb	0	; select bank0
  8557  0EB8  00A4               	movwf	??_Send_Byte+4
  8558  0EB9  0021               	movlb	1	; select bank1
  8559  0EBA  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8560  0EBB  0020               	movlb	0	; select bank0
  8561  0EBC  00A5               	movwf	??_Send_Byte+5
  8562  0EBD  3003               	movlw	3
  8563  0EBE                     u5195:	
  8564  0EBE  36A5               	lsrf	??_Send_Byte+5,f
  8565  0EBF  0CA4               	rrf	??_Send_Byte+4,f
  8566  0EC0  0CA3               	rrf	??_Send_Byte+3,f
  8567  0EC1  0CA2               	rrf	??_Send_Byte+2,f
  8568  0EC2  0B89               	decfsz	9,f
  8569  0EC3  2EBE               	goto	u5195
  8570  0EC4  0822               	movf	??_Send_Byte+2,w
  8571  0EC5  3EA0               	addlw	_modem_packet& (0+255)
  8572  0EC6  0086               	movwf	6
  8573  0EC7  3001               	movlw	1	; select bank3/4
  8574  0EC8  0087               	movwf	7
  8575  0EC9  0821               	movf	??_Send_Byte+1,w
  8576  0ECA  0481               	iorwf	1,f
  8577                           
  8578                           ;ax25.c: 43: modem_packet_size++;
  8579  0ECB  3001               	movlw	1
  8580  0ECC  0021               	movlb	1	; select bank1
  8581  0ECD  07C7               	addwf	_modem_packet_size^(0+128),f
  8582  0ECE  3000               	movlw	0
  8583  0ECF  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8584  0ED0  3000               	movlw	0
  8585  0ED1  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8586  0ED2  3000               	movlw	0
  8587  0ED3  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8588                           
  8589                           ;ax25.c: 44: if (++ones_in_a_row < 5) continue;
  8590  0ED4  3001               	movlw	1
  8591  0ED5  07D1               	addwf	_ones_in_a_row^(0+128),f
  8592  0ED6  3000               	movlw	0
  8593  0ED7  3DD2               	addwfc	(_ones_in_a_row+1)^(0+128),f
  8594  0ED8  0852               	movf	(_ones_in_a_row+1)^(0+128),w
  8595  0ED9  3A80               	xorlw	128
  8596  0EDA  0020               	movlb	0	; select bank0
  8597  0EDB  00A0               	movwf	??_Send_Byte
  8598  0EDC  3080               	movlw	128
  8599  0EDD  0220               	subwf	??_Send_Byte,w
  8600  0EDE  1D03               	skipz
  8601  0EDF  2EE3               	goto	u5205
  8602  0EE0  3005               	movlw	5
  8603  0EE1  0021               	movlb	1	; select bank1
  8604  0EE2  0251               	subwf	_ones_in_a_row^(0+128),w
  8605  0EE3                     u5205:	
  8606  0EE3  1C03               	btfss	3,0
  8607  0EE4  2F2E               	goto	l3497
  8608  0EE5                     l3487:	
  8609                           
  8610                           ;ax25.c: 45: }
  8611                           ;ax25.c: 47: if (modem_packet_size >= 64 * 8)
  8612  0EE5  3000               	movlw	0
  8613  0EE6  0021               	movlb	1	; select bank1
  8614  0EE7  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8615  0EE8  1D03               	skipz
  8616  0EE9  2EF4               	goto	u5215
  8617  0EEA  3000               	movlw	0
  8618  0EEB  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8619  0EEC  1D03               	skipz
  8620  0EED  2EF4               	goto	u5215
  8621  0EEE  3002               	movlw	2
  8622  0EEF  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8623  0EF0  1D03               	skipz
  8624  0EF1  2EF4               	goto	u5215
  8625  0EF2  3000               	movlw	0
  8626  0EF3  0247               	subwf	_modem_packet_size^(0+128),w
  8627  0EF4                     u5215:	
  8628  0EF4  1803               	btfsc	3,0
  8629  0EF5  0008               	return
  8630                           
  8631                           ;ax25.c: 49: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8632                           
  8633                           ;ax25.c: 48: return;
  8634  0EF6  3001               	movlw	1
  8635  0EF7  0020               	movlb	0	; select bank0
  8636  0EF8  00A0               	movwf	??_Send_Byte
  8637  0EF9  0021               	movlb	1	; select bank1
  8638  0EFA  0847               	movf	_modem_packet_size^(0+128),w
  8639  0EFB  3907               	andlw	7
  8640  0EFC  0A89               	incf	9,f
  8641  0EFD  0020               	movlb	0	; select bank0
  8642  0EFE  2F00               	goto	u5224
  8643  0EFF                     u5225:	
  8644  0EFF  35A0               	lslf	??_Send_Byte,f
  8645  0F00                     u5224:	
  8646  0F00  0B89               	decfsz	9,f
  8647  0F01  2EFF               	goto	u5225
  8648  0F02  0820               	movf	??_Send_Byte,w
  8649  0F03  3AFF               	xorlw	255
  8650  0F04  00A1               	movwf	??_Send_Byte+1
  8651  0F05  0021               	movlb	1	; select bank1
  8652  0F06  0847               	movf	_modem_packet_size^(0+128),w
  8653  0F07  0020               	movlb	0	; select bank0
  8654  0F08  00A2               	movwf	??_Send_Byte+2
  8655  0F09  0021               	movlb	1	; select bank1
  8656  0F0A  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8657  0F0B  0020               	movlb	0	; select bank0
  8658  0F0C  00A3               	movwf	??_Send_Byte+3
  8659  0F0D  0021               	movlb	1	; select bank1
  8660  0F0E  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8661  0F0F  0020               	movlb	0	; select bank0
  8662  0F10  00A4               	movwf	??_Send_Byte+4
  8663  0F11  0021               	movlb	1	; select bank1
  8664  0F12  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8665  0F13  0020               	movlb	0	; select bank0
  8666  0F14  00A5               	movwf	??_Send_Byte+5
  8667  0F15  3003               	movlw	3
  8668  0F16                     u5235:	
  8669  0F16  36A5               	lsrf	??_Send_Byte+5,f
  8670  0F17  0CA4               	rrf	??_Send_Byte+4,f
  8671  0F18  0CA3               	rrf	??_Send_Byte+3,f
  8672  0F19  0CA2               	rrf	??_Send_Byte+2,f
  8673  0F1A  0B89               	decfsz	9,f
  8674  0F1B  2F16               	goto	u5235
  8675  0F1C  0822               	movf	??_Send_Byte+2,w
  8676  0F1D  3EA0               	addlw	_modem_packet& (0+255)
  8677  0F1E  0086               	movwf	6
  8678  0F1F  3001               	movlw	1	; select bank3/4
  8679  0F20  0087               	movwf	7
  8680  0F21  0821               	movf	??_Send_Byte+1,w
  8681  0F22  0581               	andwf	1,f
  8682                           
  8683                           ;ax25.c: 50: modem_packet_size++;
  8684  0F23  3001               	movlw	1
  8685  0F24  0021               	movlb	1	; select bank1
  8686  0F25  07C7               	addwf	_modem_packet_size^(0+128),f
  8687  0F26  3000               	movlw	0
  8688  0F27  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8689  0F28  3000               	movlw	0
  8690  0F29  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8691  0F2A  3000               	movlw	0
  8692  0F2B  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8693                           
  8694                           ;ax25.c: 51: ones_in_a_row = 0;
  8695  0F2C  01D1               	clrf	_ones_in_a_row^(0+128)
  8696  0F2D  01D2               	clrf	(_ones_in_a_row+1)^(0+128)
  8697  0F2E                     l3497:	
  8698  0F2E  3001               	movlw	1
  8699  0F2F  07F6               	addwf	Send_Byte@i,f
  8700  0F30  3000               	movlw	0
  8701  0F31  3DF7               	addwfc	Send_Byte@i+1,f
  8702  0F32  2E6C               	goto	L4
  8703  0F33                     __end_of_Send_Byte:	
  8704                           
  8705                           	psect	text48
  8706  16A5                     __ptext48:	
  8707 ;; *************** function _Update_Crc *****************
  8708 ;; Defined at:
  8709 ;;		line 24 in file "ax25.c"
  8710 ;; Parameters:    Size  Location     Type
  8711 ;;  input_bit       1    wreg     unsigned char 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  input_bit       1    4[COMMON] unsigned char 
  8714 ;; Return value:  Size  Location     Type
  8715 ;;		None               void
  8716 ;; Registers used:
  8717 ;;		wreg, status,2, status,0
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8726 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8727 ;;Total ram usage:        3 bytes
  8728 ;; Hardware stack levels used:    1
  8729 ;; Hardware stack levels required when called:    1
  8730 ;; This function calls:
  8731 ;;		Nothing
  8732 ;; This function is called by:
  8733 ;;		_Send_Byte
  8734 ;; This function uses a non-reentrant model
  8735 ;;
  8736                           
  8737                           
  8738                           ;psect for function _Update_Crc
  8739  16A5                     _Update_Crc:	
  8740                           
  8741                           ;incstack = 0
  8742                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  8743                           ;Update_Crc@input_bit stored from wreg
  8744  16A5  00F4               	movwf	Update_Crc@input_bit
  8745                           
  8746                           ;ax25.c: 26: crc ^= input_bit;
  8747  16A6  0874               	movf	Update_Crc@input_bit,w
  8748  16A7  00F2               	movwf	??_Update_Crc
  8749  16A8  01F3               	clrf	??_Update_Crc+1
  8750  16A9  0872               	movf	??_Update_Crc,w
  8751  16AA  0021               	movlb	1	; select bank1
  8752  16AB  06CF               	xorwf	_crc^(0+128),f
  8753  16AC  0873               	movf	??_Update_Crc+1,w
  8754  16AD  06D0               	xorwf	(_crc+1)^(0+128),f
  8755                           
  8756                           ;ax25.c: 27: if (crc & 1)
  8757  16AE  1C4F               	btfss	_crc^(0+128),0
  8758  16AF  2EBD               	goto	l3165
  8759                           
  8760                           ;ax25.c: 28: crc = (crc >> 1) ^ 0x8408;
  8761  16B0  0850               	movf	(_crc+1)^(0+128),w
  8762  16B1  00F3               	movwf	??_Update_Crc+1
  8763  16B2  084F               	movf	_crc^(0+128),w
  8764  16B3  00F2               	movwf	??_Update_Crc
  8765  16B4  36F3               	lsrf	??_Update_Crc+1,f
  8766  16B5  0CF2               	rrf	??_Update_Crc,f
  8767  16B6  3008               	movlw	8
  8768  16B7  0672               	xorwf	??_Update_Crc,w
  8769  16B8  00CF               	movwf	_crc^(0+128)
  8770  16B9  3084               	movlw	132
  8771  16BA  0673               	xorwf	??_Update_Crc+1,w
  8772  16BB  00D0               	movwf	(_crc+1)^(0+128)
  8773  16BC  0008               	return
  8774  16BD                     l3165:	
  8775                           
  8776                           ;ax25.c: 29: else
  8777                           ;ax25.c: 30: crc = crc >> 1;
  8778  16BD  0850               	movf	(_crc+1)^(0+128),w
  8779  16BE  00F3               	movwf	??_Update_Crc+1
  8780  16BF  084F               	movf	_crc^(0+128),w
  8781  16C0  00F2               	movwf	??_Update_Crc
  8782  16C1  36F3               	lsrf	??_Update_Crc+1,f
  8783  16C2  0CF2               	rrf	??_Update_Crc,f
  8784  16C3  0872               	movf	??_Update_Crc,w
  8785  16C4  00CF               	movwf	_crc^(0+128)
  8786  16C5  0873               	movf	??_Update_Crc+1,w
  8787  16C6  00D0               	movwf	(_crc+1)^(0+128)
  8788  16C7  0008               	return
  8789  16C8                     __end_of_Update_Crc:	
  8790                           
  8791                           	psect	text49
  8792  0AAC                     __ptext49:	
  8793 ;; *************** function _Ax25_Send_Flag *****************
  8794 ;; Defined at:
  8795 ;;		line 77 in file "ax25.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;		None
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;  i               2    1[BANK0 ] int 
  8800 ;;  byte            1    0[BANK0 ] unsigned char 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;		None               void
  8803 ;; Registers used:
  8804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8811 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;Total ram usage:        9 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    1
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_Ax25_Send_Header
  8821 ;;		_Ax25_Send_Footer
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           
  8826                           ;psect for function _Ax25_Send_Flag
  8827  0AAC                     _Ax25_Send_Flag:	
  8828                           
  8829                           ;ax25.c: 79: uint8_t byte = 0x7e;
  8830                           
  8831                           ;incstack = 0
  8832                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  8833  0AAC  307E               	movlw	126
  8834  0AAD  00F2               	movwf	??_Ax25_Send_Flag
  8835  0AAE  0872               	movf	??_Ax25_Send_Flag,w
  8836  0AAF  0020               	movlb	0	; select bank0
  8837  0AB0  00A0               	movwf	Ax25_Send_Flag@byte
  8838                           
  8839                           ;ax25.c: 80: int i;
  8840                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  8841  0AB1  01A1               	clrf	Ax25_Send_Flag@i
  8842  0AB2  01A2               	clrf	Ax25_Send_Flag@i+1
  8843  0AB3                     L5:	
  8844  0AB3  0822               	movf	Ax25_Send_Flag@i+1,w
  8845  0AB4  3A80               	xorlw	128
  8846  0AB5  00F2               	movwf	??_Ax25_Send_Flag
  8847  0AB6  3080               	movlw	128
  8848  0AB7  0272               	subwf	??_Ax25_Send_Flag,w
  8849  0AB8  3008               	movlw	8
  8850  0AB9  1903               	btfsc	3,2
  8851  0ABA  0221               	subwf	Ax25_Send_Flag@i,w
  8852  0ABB  1803               	btfsc	3,0
  8853  0ABC  0008               	return
  8854                           
  8855                           ;ax25.c: 82: if (modem_packet_size >= 64 * 8)
  8856  0ABD  3000               	movlw	0
  8857  0ABE  0021               	movlb	1	; select bank1
  8858  0ABF  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8859  0AC0  1D03               	skipz
  8860  0AC1  2ACC               	goto	u5385
  8861  0AC2  3000               	movlw	0
  8862  0AC3  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8863  0AC4  1D03               	skipz
  8864  0AC5  2ACC               	goto	u5385
  8865  0AC6  3002               	movlw	2
  8866  0AC7  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8867  0AC8  1D03               	skipz
  8868  0AC9  2ACC               	goto	u5385
  8869  0ACA  3000               	movlw	0
  8870  0ACB  0247               	subwf	_modem_packet_size^(0+128),w
  8871  0ACC                     u5385:	
  8872  0ACC  1803               	btfsc	3,0
  8873  0ACD  0008               	return
  8874                           
  8875                           ;ax25.c: 84: if ((byte >> i) & 1)
  8876                           
  8877                           ;ax25.c: 83: return;
  8878  0ACE  0020               	movlb	0	; select bank0
  8879  0ACF  0820               	movf	Ax25_Send_Flag@byte,w
  8880  0AD0  00F2               	movwf	??_Ax25_Send_Flag
  8881  0AD1  0A21               	incf	Ax25_Send_Flag@i,w
  8882  0AD2  2AD4               	goto	u5394
  8883  0AD3                     u5395:	
  8884  0AD3  36F2               	lsrf	??_Ax25_Send_Flag,f
  8885  0AD4                     u5394:	
  8886  0AD4  0B89               	decfsz	9,f
  8887  0AD5  2AD3               	goto	u5395
  8888  0AD6  1C72               	btfss	??_Ax25_Send_Flag,0
  8889  0AD7  2AFB               	goto	l3577
  8890                           
  8891                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8892  0AD8  3001               	movlw	1
  8893  0AD9  00F2               	movwf	??_Ax25_Send_Flag
  8894  0ADA  0021               	movlb	1	; select bank1
  8895  0ADB  0847               	movf	_modem_packet_size^(0+128),w
  8896  0ADC  3907               	andlw	7
  8897  0ADD  0A89               	incf	9,f
  8898  0ADE  2AE0               	goto	u5414
  8899  0ADF                     u5415:	
  8900  0ADF  35F2               	lslf	??_Ax25_Send_Flag,f
  8901  0AE0                     u5414:	
  8902  0AE0  0B89               	decfsz	9,f
  8903  0AE1  2ADF               	goto	u5415
  8904  0AE2  0872               	movf	??_Ax25_Send_Flag,w
  8905  0AE3  00F3               	movwf	??_Ax25_Send_Flag+1
  8906  0AE4  0847               	movf	_modem_packet_size^(0+128),w
  8907  0AE5  00F4               	movwf	??_Ax25_Send_Flag+2
  8908  0AE6  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8909  0AE7  00F5               	movwf	??_Ax25_Send_Flag+3
  8910  0AE8  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8911  0AE9  00F6               	movwf	??_Ax25_Send_Flag+4
  8912  0AEA  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8913  0AEB  00F7               	movwf	??_Ax25_Send_Flag+5
  8914  0AEC  3003               	movlw	3
  8915  0AED                     u5425:	
  8916  0AED  36F7               	lsrf	??_Ax25_Send_Flag+5,f
  8917  0AEE  0CF6               	rrf	??_Ax25_Send_Flag+4,f
  8918  0AEF  0CF5               	rrf	??_Ax25_Send_Flag+3,f
  8919  0AF0  0CF4               	rrf	??_Ax25_Send_Flag+2,f
  8920  0AF1  0B89               	decfsz	9,f
  8921  0AF2  2AED               	goto	u5425
  8922  0AF3  0874               	movf	??_Ax25_Send_Flag+2,w
  8923  0AF4  3EA0               	addlw	_modem_packet& (0+255)
  8924  0AF5  0086               	movwf	6
  8925  0AF6  3001               	movlw	1	; select bank3/4
  8926  0AF7  0087               	movwf	7
  8927  0AF8  0873               	movf	??_Ax25_Send_Flag+1,w
  8928  0AF9  0481               	iorwf	1,f
  8929  0AFA  2B1E               	goto	l3579
  8930  0AFB                     l3577:	
  8931                           
  8932                           ;ax25.c: 86: else
  8933                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8934  0AFB  3001               	movlw	1
  8935  0AFC  00F2               	movwf	??_Ax25_Send_Flag
  8936  0AFD  0021               	movlb	1	; select bank1
  8937  0AFE  0847               	movf	_modem_packet_size^(0+128),w
  8938  0AFF  3907               	andlw	7
  8939  0B00  0A89               	incf	9,f
  8940  0B01  2B03               	goto	u5434
  8941  0B02                     u5435:	
  8942  0B02  35F2               	lslf	??_Ax25_Send_Flag,f
  8943  0B03                     u5434:	
  8944  0B03  0B89               	decfsz	9,f
  8945  0B04  2B02               	goto	u5435
  8946  0B05  0872               	movf	??_Ax25_Send_Flag,w
  8947  0B06  3AFF               	xorlw	255
  8948  0B07  00F3               	movwf	??_Ax25_Send_Flag+1
  8949  0B08  0847               	movf	_modem_packet_size^(0+128),w
  8950  0B09  00F4               	movwf	??_Ax25_Send_Flag+2
  8951  0B0A  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8952  0B0B  00F5               	movwf	??_Ax25_Send_Flag+3
  8953  0B0C  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8954  0B0D  00F6               	movwf	??_Ax25_Send_Flag+4
  8955  0B0E  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8956  0B0F  00F7               	movwf	??_Ax25_Send_Flag+5
  8957  0B10  3003               	movlw	3
  8958  0B11                     u5445:	
  8959  0B11  36F7               	lsrf	??_Ax25_Send_Flag+5,f
  8960  0B12  0CF6               	rrf	??_Ax25_Send_Flag+4,f
  8961  0B13  0CF5               	rrf	??_Ax25_Send_Flag+3,f
  8962  0B14  0CF4               	rrf	??_Ax25_Send_Flag+2,f
  8963  0B15  0B89               	decfsz	9,f
  8964  0B16  2B11               	goto	u5445
  8965  0B17  0874               	movf	??_Ax25_Send_Flag+2,w
  8966  0B18  3EA0               	addlw	_modem_packet& (0+255)
  8967  0B19  0086               	movwf	6
  8968  0B1A  3001               	movlw	1	; select bank3/4
  8969  0B1B  0087               	movwf	7
  8970  0B1C  0873               	movf	??_Ax25_Send_Flag+1,w
  8971  0B1D  0581               	andwf	1,f
  8972  0B1E                     l3579:	
  8973  0B1E  3001               	movlw	1
  8974  0B1F  0020               	movlb	0	; select bank0
  8975  0B20  07A1               	addwf	Ax25_Send_Flag@i,f
  8976  0B21  3000               	movlw	0
  8977  0B22  3DA2               	addwfc	Ax25_Send_Flag@i+1,f
  8978  0B23  3001               	movlw	1
  8979  0B24  0021               	movlb	1	; select bank1
  8980  0B25  07C7               	addwf	_modem_packet_size^(0+128),f
  8981  0B26  3000               	movlw	0
  8982  0B27  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8983  0B28  3000               	movlw	0
  8984  0B29  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8985  0B2A  3000               	movlw	0
  8986  0B2B  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8987  0B2C  0020               	movlb	0	; select bank0
  8988  0B2D  2AB3               	goto	L5
  8989  0B2E                     __end_of_Ax25_Send_Flag:	
  8990                           
  8991                           	psect	text50
  8992  157B                     __ptext50:	
  8993 ;; *************** function _Adc1_Start *****************
  8994 ;; Defined at:
  8995 ;;		line 298 in file "utility.c"
  8996 ;; Parameters:    Size  Location     Type
  8997 ;;		None
  8998 ;; Auto vars:     Size  Location     Type
  8999 ;;		None
  9000 ;; Return value:  Size  Location     Type
  9001 ;;		None               void
  9002 ;; Registers used:
  9003 ;;		None
  9004 ;; Tracked objects:
  9005 ;;		On entry : 0/0
  9006 ;;		On exit  : 0/0
  9007 ;;		Unchanged: 0/0
  9008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9013 ;;Total ram usage:        0 bytes
  9014 ;; Hardware stack levels used:    1
  9015 ;; Hardware stack levels required when called:    1
  9016 ;; This function calls:
  9017 ;;		Nothing
  9018 ;; This function is called by:
  9019 ;;		_main
  9020 ;; This function uses a non-reentrant model
  9021 ;;
  9022                           
  9023                           
  9024                           ;psect for function _Adc1_Start
  9025  157B                     _Adc1_Start:	
  9026                           
  9027                           ;utility.c: 299: ADIF = 0;
  9028                           
  9029                           ;incstack = 0
  9030                           ; Regs used in _Adc1_Start: []
  9031  157B  0020               	movlb	0	; select bank0
  9032  157C  1311               	bcf	17,6	;volatile
  9033                           
  9034                           ;utility.c: 300: ADON = 1;
  9035  157D  0021               	movlb	1	; select bank1
  9036  157E  141D               	bsf	29,0	;volatile
  9037                           
  9038                           ;utility.c: 301: ADIE = 1;
  9039  157F  1711               	bsf	17,6	;volatile
  9040  1580  0008               	return
  9041  1581                     __end_of_Adc1_Start:	
  9042                           
  9043                           	psect	intentry
  9044  0004                     __pintentry:	
  9045 ;; *************** function _global_interrupt *****************
  9046 ;; Defined at:
  9047 ;;		line 43 in file "main.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;		None
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;		None
  9052 ;; Return value:  Size  Location     Type
  9053 ;;		None               void
  9054 ;; Registers used:
  9055 ;;		wreg, status,2, status,0
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9065 ;;Total ram usage:        2 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; This function calls:
  9068 ;;		Nothing
  9069 ;; This function is called by:
  9070 ;;		Interrupt level 1
  9071 ;; This function uses a non-reentrant model
  9072 ;;
  9073                           
  9074  0004                     _global_interrupt:	
  9075                           
  9076                           ;incstack = 0
  9077                           ; Regs used in _global_interrupt: [wreg+status,2+status,0]
  9078  0004  147E               	bsf	126,0	;set compiler interrupt flag
  9079  0005  3180               	pagesel	$
  9080  0006  0020               	movlb	0	; select bank0
  9081  0007  087F               	movf	127,w
  9082  0008  00F1               	movwf	??_global_interrupt+1
  9083                           
  9084                           ;main.c: 45: INTCON &= ~0x80;
  9085  0009  307F               	movlw	127
  9086  000A  00F0               	movwf	??_global_interrupt
  9087  000B  0870               	movf	??_global_interrupt,w
  9088  000C  058B               	andwf	11,f	;volatile
  9089                           
  9090                           ;main.c: 48: if(ADIF){
  9091  000D  1F11               	btfss	17,6	;volatile
  9092  000E  281A               	goto	i1l2863
  9093                           
  9094                           ;main.c: 49: adc_sonuc_high = ADRESH;
  9095  000F  0021               	movlb	1	; select bank1
  9096  0010  081C               	movf	28,w	;volatile
  9097  0011  00F0               	movwf	??_global_interrupt
  9098  0012  0870               	movf	??_global_interrupt,w
  9099  0013  00D5               	movwf	_adc_sonuc_high^(0+128)
  9100                           
  9101                           ;main.c: 50: adc_sonuc_low = ADRESL;
  9102  0014  081B               	movf	27,w	;volatile
  9103  0015  00F0               	movwf	??_global_interrupt
  9104  0016  0870               	movf	??_global_interrupt,w
  9105  0017  00D6               	movwf	_adc_sonuc_low^(0+128)
  9106                           
  9107                           ;main.c: 52: ADIF = 0;
  9108  0018  0020               	movlb	0	; select bank0
  9109  0019  1311               	bcf	17,6	;volatile
  9110  001A                     i1l2863:	
  9111                           
  9112                           ;main.c: 53: }
  9113                           ;main.c: 57: if(PIR1 & 0x04){
  9114  001A  1D11               	btfss	17,2	;volatile
  9115  001B  2828               	goto	i1l2873
  9116                           
  9117                           ;main.c: 59: Systick_Counter += 1;
  9118  001C  3001               	movlw	1
  9119  001D  0022               	movlb	2	; select bank2
  9120  001E  07BC               	addwf	_Systick_Counter^(0+256),f
  9121  001F  3000               	movlw	0
  9122  0020  3DBD               	addwfc	(_Systick_Counter+1)^(0+256),f
  9123                           
  9124                           ;main.c: 63: TMR1H = 0x00;
  9125  0021  0020               	movlb	0	; select bank0
  9126  0022  0197               	clrf	23	;volatile
  9127                           
  9128                           ;main.c: 64: TMR1L = 0x00;
  9129  0023  0196               	clrf	22	;volatile
  9130                           
  9131                           ;main.c: 66: PIR1 &= ~0x04;
  9132  0024  30FB               	movlw	251
  9133  0025  00F0               	movwf	??_global_interrupt
  9134  0026  0870               	movf	??_global_interrupt,w
  9135  0027  0591               	andwf	17,f	;volatile
  9136  0028                     i1l2873:	
  9137                           
  9138                           ;main.c: 70: }
  9139                           ;main.c: 74: if(INTCON & 0x04){
  9140  0028  1D0B               	btfss	11,2	;volatile
  9141  0029  282E               	goto	i1l2877
  9142                           
  9143                           ;main.c: 82: INTCON &= ~0x04;
  9144  002A  30FB               	movlw	251
  9145  002B  00F0               	movwf	??_global_interrupt
  9146  002C  0870               	movf	??_global_interrupt,w
  9147  002D  058B               	andwf	11,f	;volatile
  9148  002E                     i1l2877:	
  9149                           
  9150                           ;main.c: 83: }
  9151                           ;main.c: 88: INTCON |= 0x80;
  9152  002E  178B               	bsf	11,7	;volatile
  9153  002F  0871               	movf	??_global_interrupt+1,w
  9154  0030  00FF               	movwf	127
  9155  0031  107E               	bcf	126,0	;clear compiler interrupt flag
  9156  0032  0009               	retfie
  9157  0033                     __end_of_global_interrupt:	
  9158  007E                     btemp	set	126	;btemp
  9159  007E                     pic14e$flags	set	126
  9160  007E                     wtemp	set	126
  9161  007E                     wtemp0	set	126
  9162  0080                     wtemp1	set	128
  9163  0082                     wtemp2	set	130
  9164  0084                     wtemp3	set	132
  9165  0086                     wtemp4	set	134
  9166  0088                     wtemp5	set	136
  9167  007F                     wtemp6	set	127
  9168  007E                     ttemp	set	126
  9169  007E                     ttemp0	set	126
  9170  0081                     ttemp1	set	129
  9171  0084                     ttemp2	set	132
  9172  0087                     ttemp3	set	135
  9173  007F                     ttemp4	set	127
  9174  007E                     ltemp	set	126
  9175  007E                     ltemp0	set	126
  9176  0082                     ltemp1	set	130
  9177  0086                     ltemp2	set	134
  9178  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    520
    Data        30
    BSS         158
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     79      80
    BANK1            80     20      79
    BANK2            80      0      62
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Three@reg(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Three@reg(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_Ax25_Send_Footer
    _Set_Freq->___aldiv
    ___lltoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    _Adf_Reset->_Delay_ms
    _Modem_Init->___lmul
    ___lldiv->___lmul
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Zero->_Write_Adf7012_Reg
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Two->_Write_Adf7012_Reg
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_Three->_Write_Adf7012_Reg
    _Adf_Write_Register_One->_Reverse_Array
    _Adf_Write_Register_One->_Write_Adf7012_Reg
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy
    _Read_Adf7012_Muxout->_Delay_ms
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Ax25_Send_Flag
    _Ax25_Send_Header->_Ax25_Send_Sync
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Ax25_Send_Flag
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc

Critical Paths under _global_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Ptt_On
    _Set_Freq->___fttol
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftdiv->___lltoft
    ___ftadd->___ftneg
    _Modem_Init->___lldiv
    ___lldiv->___lmul
    _Modem_Flush_Frame->_Ptt_On
    _Ptt_On->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _Ptt_On->_Adf_Lock

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  190064
                                             78 BANK0      1     1      0
                                              4 BANK1     16    16      0
                         _Adc1_Start
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                             _Ptt_On
                       _System_Start
                       _Timer0_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   26916
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   42991
                         _Modem_Init
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   41926
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
                        _Gpio_Config
                           _Set_Freq
 ---------------------------------------------------------------------------------
 (3) _Set_Freq                                            26    22      4   13314
                                             30 BANK0     26    22      4
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4    2334
                                              0 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      98
                                              6 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2655
                                              0 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2587
                                              6 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3482
                                              9 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2037
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     575
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) _Gpio_Config                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1696
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1696
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Modem_Init                                           6     6      0    1065
                                             18 BANK0      6     6      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     304
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     761
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    0     0      0   59053
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (1) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ptt_On                                               1     1      0   57357
                                             77 BANK0      1     1      0
                           _Adf_Lock
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Adf_Lock                                             6     6      0   28745
                                             75 BANK0      2     2      0
                                              0 BANK1      4     4      0
                         _Adf_Locked
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   25220
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    6305
                                             11 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    6305
                                             11 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    6305
                                             11 BANK0     64    64      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    6305
                                             11 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    4041
                                              9 COMMON     1     1      0
                                              3 BANK0      3     2      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1832
                                              8 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1331
                                              9 COMMON     1     0      1
                                              0 BANK0     11    11      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              2 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (3) _Adf_Locked                                           0     0      0    1696
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Read_Adf7012_Muxout                                  0     0      0    1696
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             6     4      2    1696
                                              2 COMMON     6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (4) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     449
                                              6 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     254
                                              8 COMMON     1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2    1135
                                              6 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0     133
                                              2 COMMON     6     6      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     424
                                              8 COMMON     2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     223
                                              5 COMMON     3     3      0
                                              0 BANK0      6     6      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0     133
                                              2 COMMON     6     6      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _global_interrupt                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Lock
         _Adf_Locked
           _Read_Adf7012_Muxout
             _Delay_ms
               _Dac0_Start_Hold
         _Adf_Write_Config
           _Adf_Write_Register_One
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
           _Adf_Write_Register_Three
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
           _Adf_Write_Register_Two
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
           _Adf_Write_Register_Zero
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
         _Delay_ms
           _Dac0_Start_Hold
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
         _Delay_ms
           _Dac0_Start_Hold
     _Timer0_Start
   _Modem_Setup
     _Modem_Init
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Gpio_Config
       _Set_Freq
         ___aldiv
         ___ftadd
           ___ftneg (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
         ___ftneg
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lldiv
           ___lmul (ARG)
         ___lltoft
           ___ftpack
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ptt_On
     _Adf_Lock
       _Adf_Locked
         _Read_Adf7012_Muxout
           _Delay_ms
             _Dac0_Start_Hold
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
     _Read_Adf7012_Muxout
       _Delay_ms
         _Dac0_Start_Hold
   _System_Start
   _Timer0_Start
   _Timer1_Start

 _global_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3E       9       77.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     129      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     129      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Sep 22 18:44:53 2014

                                _i 00D7                        __CFG_CP$OFF 0000  
          _Adf_Reset_Register_Zero 1617                     Reverse_Array@i 002A  
                   Spi_Byte_Send@i 0022           __end_of_Adf_Reset_Config 15F2  
                     ___ftadd@exp1 0035                       ___ftadd@exp2 0034  
                      __CFG_LVP$ON 0000                       ___ftadd@sign 0033  
         _Adf_Reset_Register_Three 1669                                l221 16FE  
                              l128 0062                                l333 049E  
                              l193 16D3                                l627 0B3F  
                              l733 091C                                l762 0623  
                              l739 0933                       __CFG_CPD$OFF 0000  
                              _PSA 04AB                                _crc 00CF  
                     __CFG_BORV$LO 0000                                wreg 0009  
        Ax25_Send_Header@addresses 002B                       __CFG_IESO$ON 0000  
                    ??_Gpio_Config 0072             _Adf_Write_Register_One 094A  
           _Adf_Write_Register_Two 0CEB                       ___ftdiv@cntr 0030  
                     ___ftdiv@sign 0035                               l2015 0809  
                             l2047 17E0                               l3025 16E9  
                             l3203 0BA7                               l3131 0908  
                             l3123 08F2                               l2411 0BC9  
                             l3039 16FF                               l3127 08F9  
                             l3215 05AC                               l2431 0C07  
                             l3065 0873                               l3137 0921  
                             l3129 0903                               l3225 05C2  
                             l3313 07D9                               l3305 07C0  
                             l2441 0C20                               l3401 1757  
                             l3083 15E1                               l3067 0887  
                             l3139 0929                               l3243 05EF  
                             l3219 05B3                               l3165 16BD  
                             l3261 0635                               l3245 05F9  
                             l3237 05DC                               l3333 0C64  
                             l2445 0C2E                               l2437 0C14  
                             l2429 0BF9                               l3255 0615  
                             l3247 05FE                               l3327 0C4E  
                             l2439 0C1D                               l3601 06AC  
                             l3185 0B60                               l3177 0B50  
                             l3265 0647                               l3257 061F  
                             l3249 0602                               l3361 0CC3  
                             l3345 0C9F                               l3195 0B8E  
                             l3187 0B6E                               l3275 0662  
                             l3291 077F                               l3451 04B4  
                             l3621 06EA                               l3613 06CD  
                             l3437 09EB                               l3285 0769  
                             l3357 0CBB                               l3349 0CA7  
                             l3445 0488                               l3631 0730  
                             l3607 06BA                               l3391 08E1  
                             l3199 0B99                               l3711 00CE  
                             l3553 0A79                               l3377 08A8  
                             l2593 17AE                               l3555 0A9C  
                             l3627 070F                               l3635 06D0  
                             l3387 08D6                               l3379 08B6  
                             l3637 074A                               l3645 164F  
                             l2589 17A3                               l3717 00D7  
                             l3487 0EE5                               l3399 1747  
                             l3577 0AFB                               l3497 0F2E  
                             l3579 0B1E                               l3595 0699  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _ADON 04E8  
                             STR_1 0308                               u3025 0BFA  
                             u3055 0C15                               u4105 0953  
                             u4115 0961                               u4035 0DAB  
                             u4125 097B                               u4205 0326  
                             u4045 0DBA                               u4215 0335  
                             u4135 0CF4                               u4055 0DC9  
                             u5015 08B7                               u4305 03BC  
                             u4225 0344                               u4145 0D03  
                             u4065 0DD8                               u5025 08CB  
                             u5105 0483                               u4315 03CB  
                             u4235 0353                               u4155 0D1D  
                             u4075 0DE7                               u5035 08D7  
                             u5115 0497                               u5205 0EE3  
                             u4325 03DA                               u4245 0362  
                             u4165 0D2C                               u4085 0DF6  
                             u3365 17AF                               u5125 04AD  
                             u5215 0EF4                               u4255 0371  
                             u4175 0D3B                               u4095 0E11  
                             u3375 17B6                               u5055 174C  
                             u5224 0F00                               u5144 0E7D  
                             u5304 0A52                               u5225 0EFF  
                             u5145 0E7C                               u5305 0A51  
                             u4265 0380                               u4185 0D4A  
                             u4505 0B6F                               u4425 093A  
                             u5154 0E8A                               u5235 0F16  
                             u5155 0E89                               u4275 038F  
                             u4195 0317                               u4515 0B83  
                             u4355 08FE                               u5324 0A5E  
                             u5325 0A5D                               u4285 039E  
                             u4525 0B8F                               u5414 0AE0  
                             u5415 0ADF                               u5175 0E9D  
                             u5335 0A6B                               u4295 03AD  
                             u4375 0917                               u5184 0EA9  
                             u5344 0A81                               u5600 00A1  
                             u5425 0AED                               u5185 0EA8  
                             u5345 0A80                               u5505 06E8  
                             u1985 0813                               u5265 0F8B  
                             u4705 0603                               u5434 0B03  
                             u5435 0B02                               u5195 0EBE  
                             u5355 0A8F                               u5515 06EE  
                             u5275 0FDF                               u4395 0924  
                             u5445 0B11                               u5525 070D  
                             u4485 0B63                               u4645 05DD  
                             u4805 0791                               u5295 0A4A  
                             u5535 071C                               u4735 0616  
                             u4815 07A1                               u5385 0ACC  
                             u5545 0721                               u5465 0697  
                             u4825 07C1                               _PIR1 0011  
                             u5394 0AD4                               u5395 0AD3  
                             u5555 0734                               u5475 06AA  
                             u5627 16DF                               u4675 05F0  
                             u4835 07D0                               u4915 0CA8  
                             u2995 0BD0                               u5565 06DA  
                             u5485 06B8                               u4845 07DA  
                             u4925 0CAE                               u5495 06CB  
                             u3975 16D9                               u5585 00F5  
                             u4955 0CC4                               u4965 0CCA  
                             u4885 0C70                               u4895 0C80  
                             u4995 08AB                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 005F                       ___ftpack@arg 0072  
                     ___ftpack@exp 0075                               _test 00D8  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      Send_Byte@byte 0075  
                    __CFG_BOREN$ON 0000                               ltemp 007E  
                             start 0033                               ttemp 007E  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                       ___ftmul@sign 002F  
          _Adf_Write_Register_Zero 0DA2                       ___fttol@exp1 003D  
                     ___fttol@lval 0039                        ?_Adc1_Start 0070  
                     Adf_Lock@bias 00DD                 main@beacon_address 00DF  
                    __CFG_PLLEN$ON 0000                    __end_of_Ptt_Off 15D5  
                  __end_of___aldiv 0BB0                      ??_Radio_Setup 007A  
                            _ADCS0 04F4                              _ADCS1 04F5  
                            _ADCS2 04F6                              ?_main 0070  
                            _DACEN 08C7                              _DACOE 08C5  
                  __end_of___ftadd 067A                      __CFG_WDTE$OFF 0000  
                            _ANSA1 0C61                    __end_of___ftdiv 07FB  
                  __end_of___ftneg 15A5                    __end_of___lldiv 08EA  
                  __end_of___ftmul 0CEB                    __end_of___fttol 0C37  
                            _TMR1H 0017                              _TMR1L 0016  
                            _TRISA 008C                              _TRISC 008E  
       Write_Adf7012_Reg@reg_value 0024                ___lmul@multiplicand 0076  
                     ___lltoft@exp 0025                              _phase 012C  
                            _test2 00D9                      ___ftpack@sign 0076  
                 __end_of_Adf_Lock 0A2D                      ??_Modem_Setup 007A  
                    Set_Freq@f_pfd 0050                  __end_of_BAUD_RATE 0306  
                    Set_Freq@ratio 004A                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                 __size_of_Adf_Reset 0009  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                 _Adf_Write_Config 15B0                              wtemp6 007F  
              __end_of_Gpio_Config 15C8                   __end_of_Delay_ms 16EE  
                      ?_Adf_Locked 0070             _current_sample_in_baud 007B  
                Spi_Byte_Send@data 0020                         Send_Byte@i 0076  
                  __initialization 0035          ??_Adf_Reset_Register_Zero 0072  
        __size_of_Ax25_Send_Header 00D8              __size_of_System_Start 002E  
                     __end_of_main 00E9          __size_of_Ax25_Send_Footer 0017  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 1800  
         _Adf_Write_Register_Three 030E              __end_of_Spi_Byte_Send 1718  
                           ??_main 006E                      ___fttol@sign1 0038  
                       _Modem_Init 0F33                   __end_of_Set_Freq 0584  
              __end_of_Radio_Setup 164C       __size_of_Read_Adf7012_Muxout 000E  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _DACNSS 08C0  
                           _ADNREF 04F2                             _ADRESH 009C  
                           _ADRESL 009B                             _CCPR1H 0292  
                           _CCPR1L 0291                   __end_of___ftpack 094A  
    Adf_Write_Register_One@reg_ptr 0037                   __end_of___lltoft 176C  
                           i1l2863 001A                             i1l2873 0028  
                           i1l2877 002E                             _INTCON 000B  
              __size_of_Adc1_Start 0006                             _OSCCON 0099  
         __size_of_Dac0_Start_Hold 0005                             _TMR1GE 00CF  
                           _TMR0IE 005D                             _TMR0IF 005A  
                           _TMR0CS 04AD                             _TMR1ON 00C0  
                     _System_Start 176C                __end_of_Modem_Setup 1587  
                   __CFG_PWRTE$OFF 0000          ??_Adf_Write_Register_Zero 002B  
                           _Ptt_On 0828                          ??_Ptt_Off 007A  
                           ___lmul 179A                          ??___aldiv 0020  
               __size_of_Send_Byte 00CA                 Reverse_Array@input 0029  
                        ??___ftadd 002F                     __CFG_STVREN$ON 0000  
                        ??___ftdiv 002C                          ??___ftneg 007A  
                        ??___lldiv 002C                          ??___ftmul 0026  
                        ??___fttol 0034                   ??_Ax25_Send_Flag 0072  
                 ??_Ax25_Send_Byte 0078                             _memcpy 0800  
                 ??_Ax25_Send_Sync 0072                  __end_of_Adf_Reset 159C  
            ___ftmul@f3_as_product 002B                         _Update_Crc 16A5  
              __size_of_Adf_Locked 0003                        _Gpio_Config 15BC  
          __end_of__initialization 005B                      _adc_sonuc_low 00D6  
                       ___ftadd@f1 0029                         ___ftadd@f2 002C  
                       ___ftdiv@f1 0029                         ___ftdiv@f2 0026  
                       ___ftdiv@f3 0031                         ___ftneg@f1 0026  
        __size_of_global_interrupt 002F                 Write_Adf7012_Reg@i 0025  
                       ___ftmul@f1 0020                         ___ftmul@f2 0023  
       ??_Adf_Reset_Register_Three 0072                         ___fttol@f1 0030  
                   __pcstackCOMMON 0070           ??_Adf_Reset_Register_One 0072  
                     __pidataBANK2 1687           ??_Adf_Reset_Register_Two 0072  
                       ___lltoft@c 0020                         _adf_config 00A0  
                    _PLAYBACK_RATE 0300                          ?_Adf_Lock 0070  
                      ?_Modem_Init 0070                  ?_Adf_Reset_Config 0070  
                      _Radio_Setup 1630            ?_Adf_Write_Register_One 0070  
          ?_Adf_Write_Register_Two 0070          Spi_Byte_Send@data_to_send 0021  
               ??_Adf_Reset_Config 0078                          ?_Delay_ms 0072  
                __end_of_Send_Byte 0F33                   _PHASE_DELTA_1200 0124  
                 _PHASE_DELTA_2200 0128                        _Modem_Setup 1581  
                       __pbssBANK0 006F                         __pbssBANK1 00A0  
                       __pbssBANK2 0120                         __pbssBANK3 01A0  
               Ax25_Send_Flag@byte 0020                          ?_Set_Freq 003E  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 0067  
                    ?_Timer1_Start 0070                         __pmaintext 005F  
                 _Ax25_Send_Header 067A                            ?_Ptt_On 0070  
                ??_Dac0_Start_Hold 0072                            ?___lmul 0072  
               __end_of_TABLE_SIZE 0308                   _Ax25_Send_Footer 00E9  
                       __pintentry 0004                       ??_Adc1_Start 0072  
                          _DACCON1 0119                 Ax25_Send_Byte@byte 0078  
                          _DACPSS0 08C2                            _DACPSS1 08C3  
                          ?_memcpy 0072                   _Ax25_Send_String 164C  
                          _ADPREF0 04F0                            _ADPREF1 04F1  
                   ___lmul@product 0020                         ??_Adf_Lock 006B  
                        ?___ftpack 0072                          ?___lltoft 0020  
   __end_of_Adf_Write_Register_One 09BB     __end_of_Adf_Write_Register_Two 0DA2  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
         __end_of_Adf_Write_Config 15BC                        ?_Update_Crc 0070  
                       ??_Delay_ms 0074                            _OSCSTAT 009A  
                          _OSCTUNE 0098                            _TMR1CS0 00C6  
                          _TMR1CS1 00C7                            _PTT_OFF 00D4  
              Update_Crc@input_bit 0074      Adf_Write_Register_Two@reg_ptr 0043  
   Adf_Write_Register_Zero@reg_ptr 0047                 __end_of_Adc1_Start 1581  
                   ??_Timer0_Start 0072                __size_of_Modem_Init 00CD  
                   ??_Timer1_Start 0072                          _BAUD_RATE 0304  
                     ??_Adf_Locked 0078                         ??_Set_Freq 0042  
       ??_Adf_Write_Register_Three 002B                         _packet_pos 00CB  
                          _Ptt_Off 15C8                    __size_of_Ptt_On 0036  
              _Read_Adf7012_Muxout 15D5                            ___aldiv 0B2E  
                  __size_of___lmul 0032                            ___ftadd 0584  
  __size_of_Adf_Reset_Register_One 0010                            ___ftdiv 0752  
                          ___ftneg 159C                            ___lldiv 0897  
  __size_of_Adf_Reset_Register_Two 0015                            ___ftmul 0C37  
                          ___fttol 0BB0                 Ax25_Send_Sync@byte 0020  
              Reverse_Array@length 0079                    Ax25_Send_Flag@i 0021  
                  __size_of_memcpy 0028                         ??___ftpack 0077  
                       ??___lltoft 0024                            __ptext1 15A5  
                          __ptext2 176C                            __ptext3 15C8  
                          __ptext4 1581                            __ptext5 1630  
                          __ptext6 0472                            __ptext7 1742  
                          __ptext8 0BB0                            __ptext9 159C  
            Delay_ms@time_to_delay 0072          Adf_Write_Register_One@reg 003A  
                  Ax25_Send_Sync@i 0021                   ___aldiv@dividend 0076  
               __end_of_Adf_Locked 1571               ?_Read_Adf7012_Muxout 0070  
        Adf_Write_Register_Two@reg 0047                      _Delay_Counter 0120  
                          clrloop0 158E    Adf_Write_Register_Three@reg_ptr 0063  
             end_of_initialization 005B                            memcpy@d 0076  
                          memcpy@n 0073                            memcpy@s 0077  
                        Delay_ms@i 0076                            init_ram 1587  
                          initloop 1588                   _global_interrupt 0004  
                  ___lldiv@divisor 0024                    ___lldiv@counter 0031  
              __size_of_Update_Crc 0023                   ___aldiv@quotient 0023  
                       _sine_table 0100                       __pstringtext 0100  
                        _PORTAbits 000C                          _PORTCbits 000E  
                 __CFG_FOSC$INTOSC 0000                    _Systick_Counter 013C  
                        _Adf_Reset 1593                     _adc_sonuc_high 00D5  
            ??_Read_Adf7012_Muxout 0078                         _powerlevel 0134  
                 _SAMPLES_PER_BAUD 006F                       ?_Gpio_Config 0070  
           _Adf_Reset_Register_One 15F2       Write_Adf7012_Reg@size_of_reg 0023  
           _Adf_Reset_Register_Two 1602             __size_of_Reverse_Array 0034  
           __size_of_Spi_Byte_Send 002A                        ___ftdiv@exp 0034  
         ?_Adf_Reset_Register_Zero 0070                        ___ftmul@exp 002A  
                      Adf_Lock@adj 00DB                     __end_of_Ptt_On 085E  
                   __end_of___lmul 17CC                     __end_of_memcpy 0828  
                     ??_Modem_Init 0032                       ?_Radio_Setup 0070  
                     Set_Freq@freq 003E                       Set_Freq@rest 004D  
                __size_of_Adf_Lock 0072               __end_of_Timer0_Start 0800  
             __end_of_Timer1_Start 15B0                start_initialization 0035  
                       ?_Adf_Reset 0070           __end_of_Ax25_Send_Header 0752  
                        Set_Freq@m 0046                          Set_Freq@n 0054  
         __end_of_Ax25_Send_Footer 0100                  __size_of_Delay_ms 0026  
                     ?_Modem_Setup 0070                    _Dac0_Start_Hold 1576  
         __end_of_Ax25_Send_String 1669          __size_of_Adf_Reset_Config 000F  
         ?_Adf_Write_Register_Zero 0070                          _Send_Byte 0E69  
               __end_of_Modem_Init 1000                           ??_Ptt_On 006D  
                __size_of_Set_Freq 0112                           ??___lmul 007A  
                      __pdataBANK2 0140                           ??_memcpy 0075  
                    _Reverse_Array 17CC                      _Spi_Byte_Send 16EE  
                ?_Adf_Write_Config 0070                  __size_of___ftpack 0060  
                     ??_Update_Crc 0072                  __size_of___lltoft 002A  
                      __pbssCOMMON 007A                          ___latbits 0002  
__size_of_Adf_Reset_Register_Three 001E                      _ones_in_a_row 00D1  
                    __pcstackBANK0 0020                      __pcstackBANK1 00DB  
               ??_Adf_Write_Config 007A          ?_Adf_Reset_Register_Three 0070  
              __end_of__stringdata 030E            __size_of_Ax25_Send_Flag 0082  
          __size_of_Ax25_Send_Byte 0005            __size_of_Ax25_Send_Sync 007F  
  __end_of_Adf_Reset_Register_Zero 1630      Ax25_Send_Header@num_addresses 0026  
                       ?_Send_Byte 0070                  _Write_Adf7012_Reg 085E  
                     _current_byte 007A                  Ax25_Send_Header@i 002E  
                Ax25_Send_Header@j 002C                 ?_Write_Adf7012_Reg 0023  
        Ax25_Send_Footer@final_crc 0078             Ax25_Send_String@string 0026  
                         ?_Ptt_Off 0070                 __end_of_Update_Crc 16C8  
                         ?___aldiv 0072                           ?___ftadd 0029  
                         ?___ftdiv 0026                           ?___ftneg 0026  
                         ?___lldiv 0024                           ?___ftmul 0020  
                         ?___fttol 0030                ??_Write_Adf7012_Reg 0079  
                   ?_Reverse_Array 0079                     ?_Spi_Byte_Send 0070  
         __end_of_global_interrupt 0033            __end_of_Dac0_Start_Hold 157B  
                      ??_Adf_Reset 0078    __end_of_Adf_Write_Register_Zero 0E69  
                Ax25_Send_String@i 0028          __end_of_Write_Adf7012_Reg 0897  
             __size_of_Gpio_Config 000C                    ___aldiv@divisor 0072  
                    ?_System_Start 0070                       _modem_packet 01A0  
                  ___aldiv@counter 0021                          clear_ram0 158D  
                        main@F3177 0140              __size_of_Timer0_Start 0005  
                         _Adf_Lock 09BB              __size_of_Timer1_Start 000B  
        Reverse_Array@buffer_array 0025                        __stringdata 0308  
__size_of_Adf_Write_Register_Three 0164            ?_Adf_Reset_Register_One 0070  
        ?_Adf_Write_Register_Three 0070            ?_Adf_Reset_Register_Two 0070  
             __size_of_Radio_Setup 001C                           _Delay_ms 16C8  
                ___lmul@multiplier 0072                     ??_System_Start 0072  
                 _Adf_Reset_Config 15E3                        ??_Send_Byte 0020  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 1718  
                         _Set_Freq 0472                 ?_Modem_Flush_Frame 0070  
                     _Timer0_Start 07FB                       _Timer1_Start 15A5  
         ??_Adf_Write_Register_One 002B           ??_Adf_Write_Register_Two 002B  
                 __size_of_Ptt_Off 000D                    ??_Reverse_Array 0020  
                  ??_Spi_Byte_Send 0078                   __size_of___aldiv 0082  
            __end_of_PLAYBACK_RATE 0304                   __size_of___ftadd 00F6  
              ??_Modem_Flush_Frame 007A                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0009                   __size_of___lldiv 0053  
                 __size_of___ftmul 00B4                   __size_of___fttol 0087  
                         ___ftpack 08EA   __size_of_Adf_Reset_Register_Zero 0019  
                         ___lltoft 1742        __end_of_Read_Adf7012_Muxout 15E3  
   __end_of_Adf_Reset_Register_One 1602                           _dac_flag 013E  
   __end_of_Adf_Reset_Register_Two 1617                   ?_Dac0_Start_Hold 0070  
                   _Ax25_Send_Flag 0AAC                     _Ax25_Send_Byte 1571  
                   _Ax25_Send_Sync 0A2D                           __ptext10 0C37  
                         __ptext11 0752                           __ptext20 15F2  
                         __ptext12 0584                           __ptext21 1593  
                         __ptext13 08EA                           __ptext30 0DA2  
                         __ptext22 0F33                           __ptext14 0B2E  
                         __ptext31 0CEB                           __ptext23 179A  
                         __ptext15 15BC                           __ptext40 16C8  
                         __ptext32 030E                           __ptext24 0897  
                         __ptext16 15E3                           __ptext41 1576  
                         __ptext33 094A                           __ptext25 1718  
                         __ptext17 1617                           __ptext50 157B  
                         __ptext42 164C                           __ptext34 085E  
                         __ptext26 07FB                           __ptext18 1602  
                         __ptext43 1571                           __ptext35 16EE  
                         __ptext27 0828                           __ptext19 1669  
                         __ptext44 067A                           __ptext36 17CC  
                         __ptext28 09BB                           __ptext45 0A2D  
                         __ptext37 0800                           __ptext29 15B0  
                         __ptext46 00E9                           __ptext38 156E  
                         __ptext47 0E69                           __ptext39 15D5  
                         __ptext48 16A5                           __ptext49 0AAC  
                ?_Ax25_Send_Header 0026                  ?_Ax25_Send_Footer 0070  
               ??_Ax25_Send_Header 0028          __end_of_Modem_Flush_Frame 1742  
       __size_of_Write_Adf7012_Reg 0039                  ?_Ax25_Send_String 0026  
               ??_Ax25_Send_Footer 0078                      __size_of_main 008A  
                      _phase_delta 0130                 ??_Ax25_Send_String 0079  
 __end_of_Adf_Reset_Register_Three 1687         Adf_Write_Register_Zero@reg 004B  
 __size_of_Adf_Write_Register_Zero 00C7             __end_of_Ax25_Send_Flag 0B2E  
           __end_of_Ax25_Send_Byte 1576             __end_of_Ax25_Send_Sync 0AAC  
                       _TABLE_SIZE 0306                           memcpy@d1 0078  
                         memcpy@s1 0072                        pic14e$flags 007E  
                         intlevel1 0000                 __end_of_sine_table 0300  
                    _timeout_check 0138                   ___lldiv@dividend 0028  
        __size_of_Adf_Write_Config 000C                  __CFG_CLKOUTEN$OFF 0000  
               _MODEM_TRANSMITTING 00D3    __size_of_Adf_Write_Register_One 0071  
  __size_of_Adf_Write_Register_Two 00B7                         _Adc1_Start 157B  
                      _sine_table2 0150               __end_of_System_Start 179A  
                     _timeout_flag 00DA                    ?_Ax25_Send_Flag 0070  
                 ___lldiv@quotient 002D                    ?_Ax25_Send_Byte 0070  
                  ?_Ax25_Send_Sync 0070                  ?_global_interrupt 0070  
                     ___aldiv@sign 0022                 ??_global_interrupt 0070  
       __size_of_Modem_Flush_Frame 002A                         _Adf_Locked 156E  
                _modem_packet_size 00C7   __end_of_Adf_Write_Register_Three 0472  
