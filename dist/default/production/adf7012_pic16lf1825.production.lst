

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Sep 22 20:43:33 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	dabs	1,0x7E,2
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000E                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0016                     	;# 
    93  0017                     	;# 
    94  0018                     	;# 
    95  0019                     	;# 
    96  001A                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  008C                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  010C                     	;# 
   118  010E                     	;# 
   119  0111                     	;# 
   120  0112                     	;# 
   121  0113                     	;# 
   122  0114                     	;# 
   123  0115                     	;# 
   124  0116                     	;# 
   125  0117                     	;# 
   126  0118                     	;# 
   127  0119                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011D                     	;# 
   131  011E                     	;# 
   132  018C                     	;# 
   133  018E                     	;# 
   134  0191                     	;# 
   135  0191                     	;# 
   136  0192                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0193                     	;# 
   140  0194                     	;# 
   141  0195                     	;# 
   142  0196                     	;# 
   143  0199                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019E                     	;# 
   150  019F                     	;# 
   151  020C                     	;# 
   152  020E                     	;# 
   153  0211                     	;# 
   154  0211                     	;# 
   155  0212                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0213                     	;# 
   159  0214                     	;# 
   160  0214                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0215                     	;# 
   164  0216                     	;# 
   165  0216                     	;# 
   166  0217                     	;# 
   167  0217                     	;# 
   168  0291                     	;# 
   169  0291                     	;# 
   170  0292                     	;# 
   171  0293                     	;# 
   172  0294                     	;# 
   173  0295                     	;# 
   174  0295                     	;# 
   175  0296                     	;# 
   176  0298                     	;# 
   177  0298                     	;# 
   178  0299                     	;# 
   179  029A                     	;# 
   180  029B                     	;# 
   181  029C                     	;# 
   182  029D                     	;# 
   183  029E                     	;# 
   184  0311                     	;# 
   185  0311                     	;# 
   186  0312                     	;# 
   187  0313                     	;# 
   188  0318                     	;# 
   189  0318                     	;# 
   190  0319                     	;# 
   191  031A                     	;# 
   192  038C                     	;# 
   193  038E                     	;# 
   194  0391                     	;# 
   195  0392                     	;# 
   196  0393                     	;# 
   197  039A                     	;# 
   198  039C                     	;# 
   199  039D                     	;# 
   200  039E                     	;# 
   201  039F                     	;# 
   202  0415                     	;# 
   203  0416                     	;# 
   204  0417                     	;# 
   205  041C                     	;# 
   206  041D                     	;# 
   207  041E                     	;# 
   208  0FE4                     	;# 
   209  0FE5                     	;# 
   210  0FE6                     	;# 
   211  0FE7                     	;# 
   212  0FE8                     	;# 
   213  0FE9                     	;# 
   214  0FEA                     	;# 
   215  0FEB                     	;# 
   216  0FED                     	;# 
   217  0FEE                     	;# 
   218  0FEF                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000E                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  008C                     	;# 
   248  008E                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0095                     	;# 
   253  0096                     	;# 
   254  0097                     	;# 
   255  0098                     	;# 
   256  0099                     	;# 
   257  009A                     	;# 
   258  009B                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  010C                     	;# 
   264  010E                     	;# 
   265  0111                     	;# 
   266  0112                     	;# 
   267  0113                     	;# 
   268  0114                     	;# 
   269  0115                     	;# 
   270  0116                     	;# 
   271  0117                     	;# 
   272  0118                     	;# 
   273  0119                     	;# 
   274  011A                     	;# 
   275  011B                     	;# 
   276  011D                     	;# 
   277  011E                     	;# 
   278  018C                     	;# 
   279  018E                     	;# 
   280  0191                     	;# 
   281  0191                     	;# 
   282  0192                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0199                     	;# 
   290  019A                     	;# 
   291  019B                     	;# 
   292  019B                     	;# 
   293  019C                     	;# 
   294  019D                     	;# 
   295  019E                     	;# 
   296  019F                     	;# 
   297  020C                     	;# 
   298  020E                     	;# 
   299  0211                     	;# 
   300  0211                     	;# 
   301  0212                     	;# 
   302  0212                     	;# 
   303  0213                     	;# 
   304  0213                     	;# 
   305  0214                     	;# 
   306  0214                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0216                     	;# 
   311  0216                     	;# 
   312  0217                     	;# 
   313  0217                     	;# 
   314  0291                     	;# 
   315  0291                     	;# 
   316  0292                     	;# 
   317  0293                     	;# 
   318  0294                     	;# 
   319  0295                     	;# 
   320  0295                     	;# 
   321  0296                     	;# 
   322  0298                     	;# 
   323  0298                     	;# 
   324  0299                     	;# 
   325  029A                     	;# 
   326  029B                     	;# 
   327  029C                     	;# 
   328  029D                     	;# 
   329  029E                     	;# 
   330  0311                     	;# 
   331  0311                     	;# 
   332  0312                     	;# 
   333  0313                     	;# 
   334  0318                     	;# 
   335  0318                     	;# 
   336  0319                     	;# 
   337  031A                     	;# 
   338  038C                     	;# 
   339  038E                     	;# 
   340  0391                     	;# 
   341  0392                     	;# 
   342  0393                     	;# 
   343  039A                     	;# 
   344  039C                     	;# 
   345  039D                     	;# 
   346  039E                     	;# 
   347  039F                     	;# 
   348  0415                     	;# 
   349  0416                     	;# 
   350  0417                     	;# 
   351  041C                     	;# 
   352  041D                     	;# 
   353  041E                     	;# 
   354  0FE4                     	;# 
   355  0FE5                     	;# 
   356  0FE6                     	;# 
   357  0FE7                     	;# 
   358  0FE8                     	;# 
   359  0FE9                     	;# 
   360  0FEA                     	;# 
   361  0FEB                     	;# 
   362  0FED                     	;# 
   363  0FEE                     	;# 
   364  0FEF                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000E                     	;# 
   379  0011                     	;# 
   380  0012                     	;# 
   381  0013                     	;# 
   382  0015                     	;# 
   383  0016                     	;# 
   384  0016                     	;# 
   385  0017                     	;# 
   386  0018                     	;# 
   387  0019                     	;# 
   388  001A                     	;# 
   389  001B                     	;# 
   390  001C                     	;# 
   391  001E                     	;# 
   392  001F                     	;# 
   393  008C                     	;# 
   394  008E                     	;# 
   395  0091                     	;# 
   396  0092                     	;# 
   397  0093                     	;# 
   398  0095                     	;# 
   399  0096                     	;# 
   400  0097                     	;# 
   401  0098                     	;# 
   402  0099                     	;# 
   403  009A                     	;# 
   404  009B                     	;# 
   405  009B                     	;# 
   406  009C                     	;# 
   407  009D                     	;# 
   408  009E                     	;# 
   409  010C                     	;# 
   410  010E                     	;# 
   411  0111                     	;# 
   412  0112                     	;# 
   413  0113                     	;# 
   414  0114                     	;# 
   415  0115                     	;# 
   416  0116                     	;# 
   417  0117                     	;# 
   418  0118                     	;# 
   419  0119                     	;# 
   420  011A                     	;# 
   421  011B                     	;# 
   422  011D                     	;# 
   423  011E                     	;# 
   424  018C                     	;# 
   425  018E                     	;# 
   426  0191                     	;# 
   427  0191                     	;# 
   428  0192                     	;# 
   429  0193                     	;# 
   430  0193                     	;# 
   431  0193                     	;# 
   432  0194                     	;# 
   433  0195                     	;# 
   434  0196                     	;# 
   435  0199                     	;# 
   436  019A                     	;# 
   437  019B                     	;# 
   438  019B                     	;# 
   439  019C                     	;# 
   440  019D                     	;# 
   441  019E                     	;# 
   442  019F                     	;# 
   443  020C                     	;# 
   444  020E                     	;# 
   445  0211                     	;# 
   446  0211                     	;# 
   447  0212                     	;# 
   448  0212                     	;# 
   449  0213                     	;# 
   450  0213                     	;# 
   451  0214                     	;# 
   452  0214                     	;# 
   453  0215                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0216                     	;# 
   457  0216                     	;# 
   458  0217                     	;# 
   459  0217                     	;# 
   460  0291                     	;# 
   461  0291                     	;# 
   462  0292                     	;# 
   463  0293                     	;# 
   464  0294                     	;# 
   465  0295                     	;# 
   466  0295                     	;# 
   467  0296                     	;# 
   468  0298                     	;# 
   469  0298                     	;# 
   470  0299                     	;# 
   471  029A                     	;# 
   472  029B                     	;# 
   473  029C                     	;# 
   474  029D                     	;# 
   475  029E                     	;# 
   476  0311                     	;# 
   477  0311                     	;# 
   478  0312                     	;# 
   479  0313                     	;# 
   480  0318                     	;# 
   481  0318                     	;# 
   482  0319                     	;# 
   483  031A                     	;# 
   484  038C                     	;# 
   485  038E                     	;# 
   486  0391                     	;# 
   487  0392                     	;# 
   488  0393                     	;# 
   489  039A                     	;# 
   490  039C                     	;# 
   491  039D                     	;# 
   492  039E                     	;# 
   493  039F                     	;# 
   494  0415                     	;# 
   495  0416                     	;# 
   496  0417                     	;# 
   497  041C                     	;# 
   498  041D                     	;# 
   499  041E                     	;# 
   500  0FE4                     	;# 
   501  0FE5                     	;# 
   502  0FE6                     	;# 
   503  0FE7                     	;# 
   504  0FE8                     	;# 
   505  0FE9                     	;# 
   506  0FEA                     	;# 
   507  0FEB                     	;# 
   508  0FED                     	;# 
   509  0FEE                     	;# 
   510  0FEF                     	;# 
   511  0000                     	;# 
   512  0001                     	;# 
   513  0002                     	;# 
   514  0003                     	;# 
   515  0004                     	;# 
   516  0005                     	;# 
   517  0006                     	;# 
   518  0007                     	;# 
   519  0008                     	;# 
   520  0009                     	;# 
   521  000A                     	;# 
   522  000B                     	;# 
   523  000C                     	;# 
   524  000E                     	;# 
   525  0011                     	;# 
   526  0012                     	;# 
   527  0013                     	;# 
   528  0015                     	;# 
   529  0016                     	;# 
   530  0016                     	;# 
   531  0017                     	;# 
   532  0018                     	;# 
   533  0019                     	;# 
   534  001A                     	;# 
   535  001B                     	;# 
   536  001C                     	;# 
   537  001E                     	;# 
   538  001F                     	;# 
   539  008C                     	;# 
   540  008E                     	;# 
   541  0091                     	;# 
   542  0092                     	;# 
   543  0093                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0097                     	;# 
   547  0098                     	;# 
   548  0099                     	;# 
   549  009A                     	;# 
   550  009B                     	;# 
   551  009B                     	;# 
   552  009C                     	;# 
   553  009D                     	;# 
   554  009E                     	;# 
   555  010C                     	;# 
   556  010E                     	;# 
   557  0111                     	;# 
   558  0112                     	;# 
   559  0113                     	;# 
   560  0114                     	;# 
   561  0115                     	;# 
   562  0116                     	;# 
   563  0117                     	;# 
   564  0118                     	;# 
   565  0119                     	;# 
   566  011A                     	;# 
   567  011B                     	;# 
   568  011D                     	;# 
   569  011E                     	;# 
   570  018C                     	;# 
   571  018E                     	;# 
   572  0191                     	;# 
   573  0191                     	;# 
   574  0192                     	;# 
   575  0193                     	;# 
   576  0193                     	;# 
   577  0193                     	;# 
   578  0194                     	;# 
   579  0195                     	;# 
   580  0196                     	;# 
   581  0199                     	;# 
   582  019A                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019C                     	;# 
   586  019D                     	;# 
   587  019E                     	;# 
   588  019F                     	;# 
   589  020C                     	;# 
   590  020E                     	;# 
   591  0211                     	;# 
   592  0211                     	;# 
   593  0212                     	;# 
   594  0212                     	;# 
   595  0213                     	;# 
   596  0213                     	;# 
   597  0214                     	;# 
   598  0214                     	;# 
   599  0215                     	;# 
   600  0215                     	;# 
   601  0215                     	;# 
   602  0216                     	;# 
   603  0216                     	;# 
   604  0217                     	;# 
   605  0217                     	;# 
   606  0291                     	;# 
   607  0291                     	;# 
   608  0292                     	;# 
   609  0293                     	;# 
   610  0294                     	;# 
   611  0295                     	;# 
   612  0295                     	;# 
   613  0296                     	;# 
   614  0298                     	;# 
   615  0298                     	;# 
   616  0299                     	;# 
   617  029A                     	;# 
   618  029B                     	;# 
   619  029C                     	;# 
   620  029D                     	;# 
   621  029E                     	;# 
   622  0311                     	;# 
   623  0311                     	;# 
   624  0312                     	;# 
   625  0313                     	;# 
   626  0318                     	;# 
   627  0318                     	;# 
   628  0319                     	;# 
   629  031A                     	;# 
   630  038C                     	;# 
   631  038E                     	;# 
   632  0391                     	;# 
   633  0392                     	;# 
   634  0393                     	;# 
   635  039A                     	;# 
   636  039C                     	;# 
   637  039D                     	;# 
   638  039E                     	;# 
   639  039F                     	;# 
   640  0415                     	;# 
   641  0416                     	;# 
   642  0417                     	;# 
   643  041C                     	;# 
   644  041D                     	;# 
   645  041E                     	;# 
   646  0FE4                     	;# 
   647  0FE5                     	;# 
   648  0FE6                     	;# 
   649  0FE7                     	;# 
   650  0FE8                     	;# 
   651  0FE9                     	;# 
   652  0FEA                     	;# 
   653  0FEB                     	;# 
   654  0FED                     	;# 
   655  0FEE                     	;# 
   656  0FEF                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000E                     	;# 
   671  0011                     	;# 
   672  0012                     	;# 
   673  0013                     	;# 
   674  0015                     	;# 
   675  0016                     	;# 
   676  0016                     	;# 
   677  0017                     	;# 
   678  0018                     	;# 
   679  0019                     	;# 
   680  001A                     	;# 
   681  001B                     	;# 
   682  001C                     	;# 
   683  001E                     	;# 
   684  001F                     	;# 
   685  008C                     	;# 
   686  008E                     	;# 
   687  0091                     	;# 
   688  0092                     	;# 
   689  0093                     	;# 
   690  0095                     	;# 
   691  0096                     	;# 
   692  0097                     	;# 
   693  0098                     	;# 
   694  0099                     	;# 
   695  009A                     	;# 
   696  009B                     	;# 
   697  009B                     	;# 
   698  009C                     	;# 
   699  009D                     	;# 
   700  009E                     	;# 
   701  010C                     	;# 
   702  010E                     	;# 
   703  0111                     	;# 
   704  0112                     	;# 
   705  0113                     	;# 
   706  0114                     	;# 
   707  0115                     	;# 
   708  0116                     	;# 
   709  0117                     	;# 
   710  0118                     	;# 
   711  0119                     	;# 
   712  011A                     	;# 
   713  011B                     	;# 
   714  011D                     	;# 
   715  011E                     	;# 
   716  018C                     	;# 
   717  018E                     	;# 
   718  0191                     	;# 
   719  0191                     	;# 
   720  0192                     	;# 
   721  0193                     	;# 
   722  0193                     	;# 
   723  0193                     	;# 
   724  0194                     	;# 
   725  0195                     	;# 
   726  0196                     	;# 
   727  0199                     	;# 
   728  019A                     	;# 
   729  019B                     	;# 
   730  019B                     	;# 
   731  019C                     	;# 
   732  019D                     	;# 
   733  019E                     	;# 
   734  019F                     	;# 
   735  020C                     	;# 
   736  020E                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0214                     	;# 
   745  0215                     	;# 
   746  0215                     	;# 
   747  0215                     	;# 
   748  0216                     	;# 
   749  0216                     	;# 
   750  0217                     	;# 
   751  0217                     	;# 
   752  0291                     	;# 
   753  0291                     	;# 
   754  0292                     	;# 
   755  0293                     	;# 
   756  0294                     	;# 
   757  0295                     	;# 
   758  0295                     	;# 
   759  0296                     	;# 
   760  0298                     	;# 
   761  0298                     	;# 
   762  0299                     	;# 
   763  029A                     	;# 
   764  029B                     	;# 
   765  029C                     	;# 
   766  029D                     	;# 
   767  029E                     	;# 
   768  0311                     	;# 
   769  0311                     	;# 
   770  0312                     	;# 
   771  0313                     	;# 
   772  0318                     	;# 
   773  0318                     	;# 
   774  0319                     	;# 
   775  031A                     	;# 
   776  038C                     	;# 
   777  038E                     	;# 
   778  0391                     	;# 
   779  0392                     	;# 
   780  0393                     	;# 
   781  039A                     	;# 
   782  039C                     	;# 
   783  039D                     	;# 
   784  039E                     	;# 
   785  039F                     	;# 
   786  0415                     	;# 
   787  0416                     	;# 
   788  0417                     	;# 
   789  041C                     	;# 
   790  041D                     	;# 
   791  041E                     	;# 
   792  0FE4                     	;# 
   793  0FE5                     	;# 
   794  0FE6                     	;# 
   795  0FE7                     	;# 
   796  0FE8                     	;# 
   797  0FE9                     	;# 
   798  0FEA                     	;# 
   799  0FEB                     	;# 
   800  0FED                     	;# 
   801  0FEE                     	;# 
   802  0FEF                     	;# 
   803                           
   804                           	psect	idataBANK2
   805  173C                     __pidataBANK2:	
   806                           
   807                           ;initializer for main@F3176
   808  173C  3443               	retlw	67
   809  173D  3455               	retlw	85
   810  173E  3442               	retlw	66
   811  173F  3445               	retlw	69
   812  1740  3459               	retlw	89
   813  1741  3459               	retlw	89
   814  1742  3400               	retlw	0
   815  1743  3405               	retlw	5
   816  1744  3443               	retlw	67
   817  1745  3455               	retlw	85
   818  1746  3442               	retlw	66
   819  1747  3445               	retlw	69
   820  1748  3458               	retlw	88
   821  1749  3458               	retlw	88
   822  174A  3400               	retlw	0
   823  174B  3407               	retlw	7
   824                           
   825                           	psect	stringtext
   826  0700                     __pstringtext:	
   827  0700                     _sine_table2:	
   828  0700  3410               	retlw	16
   829  0701  3410               	retlw	16
   830  0702  3411               	retlw	17
   831  0703  3411               	retlw	17
   832  0704  3412               	retlw	18
   833  0705  3412               	retlw	18
   834  0706  3413               	retlw	19
   835  0707  3413               	retlw	19
   836  0708  3414               	retlw	20
   837  0709  3414               	retlw	20
   838  070A  3415               	retlw	21
   839  070B  3415               	retlw	21
   840  070C  3416               	retlw	22
   841  070D  3416               	retlw	22
   842  070E  3417               	retlw	23
   843  070F  3417               	retlw	23
   844  0710  3418               	retlw	24
   845  0711  3418               	retlw	24
   846  0712  3419               	retlw	25
   847  0713  3419               	retlw	25
   848  0714  3419               	retlw	25
   849  0715  341A               	retlw	26
   850  0716  341A               	retlw	26
   851  0717  341B               	retlw	27
   852  0718  341B               	retlw	27
   853  0719  341B               	retlw	27
   854  071A  341C               	retlw	28
   855  071B  341C               	retlw	28
   856  071C  341C               	retlw	28
   857  071D  341D               	retlw	29
   858  071E  341D               	retlw	29
   859  071F  341D               	retlw	29
   860  0720  341D               	retlw	29
   861  0721  341E               	retlw	30
   862  0722  341E               	retlw	30
   863  0723  341E               	retlw	30
   864  0724  341E               	retlw	30
   865  0725  341E               	retlw	30
   866  0726  341E               	retlw	30
   867  0727  341F               	retlw	31
   868  0728  341F               	retlw	31
   869  0729  341F               	retlw	31
   870  072A  341F               	retlw	31
   871  072B  341F               	retlw	31
   872  072C  341F               	retlw	31
   873  072D  341F               	retlw	31
   874  072E  341F               	retlw	31
   875  072F  341F               	retlw	31
   876  0730  341F               	retlw	31
   877  0731  341F               	retlw	31
   878  0732  341F               	retlw	31
   879  0733  341F               	retlw	31
   880  0734  341F               	retlw	31
   881  0735  341E               	retlw	30
   882  0736  341E               	retlw	30
   883  0737  341E               	retlw	30
   884  0738  341E               	retlw	30
   885  0739  341E               	retlw	30
   886  073A  341E               	retlw	30
   887  073B  341D               	retlw	29
   888  073C  341D               	retlw	29
   889  073D  341D               	retlw	29
   890  073E  341D               	retlw	29
   891  073F  341C               	retlw	28
   892  0740  341C               	retlw	28
   893  0741  341C               	retlw	28
   894  0742  341B               	retlw	27
   895  0743  341B               	retlw	27
   896  0744  341B               	retlw	27
   897  0745  341A               	retlw	26
   898  0746  341A               	retlw	26
   899  0747  3419               	retlw	25
   900  0748  3419               	retlw	25
   901  0749  3419               	retlw	25
   902  074A  3418               	retlw	24
   903  074B  3418               	retlw	24
   904  074C  3417               	retlw	23
   905  074D  3417               	retlw	23
   906  074E  3416               	retlw	22
   907  074F  3416               	retlw	22
   908  0750  3415               	retlw	21
   909  0751  3415               	retlw	21
   910  0752  3414               	retlw	20
   911  0753  3414               	retlw	20
   912  0754  3413               	retlw	19
   913  0755  3413               	retlw	19
   914  0756  3412               	retlw	18
   915  0757  3412               	retlw	18
   916  0758  3411               	retlw	17
   917  0759  3411               	retlw	17
   918  075A  3410               	retlw	16
   919  075B  3410               	retlw	16
   920  075C  340F               	retlw	15
   921  075D  340E               	retlw	14
   922  075E  340E               	retlw	14
   923  075F  340D               	retlw	13
   924  0760  340D               	retlw	13
   925  0761  340C               	retlw	12
   926  0762  340C               	retlw	12
   927  0763  340B               	retlw	11
   928  0764  340B               	retlw	11
   929  0765  340A               	retlw	10
   930  0766  340A               	retlw	10
   931  0767  3409               	retlw	9
   932  0768  3409               	retlw	9
   933  0769  3408               	retlw	8
   934  076A  3408               	retlw	8
   935  076B  3407               	retlw	7
   936  076C  3407               	retlw	7
   937  076D  3406               	retlw	6
   938  076E  3406               	retlw	6
   939  076F  3406               	retlw	6
   940  0770  3405               	retlw	5
   941  0771  3405               	retlw	5
   942  0772  3404               	retlw	4
   943  0773  3404               	retlw	4
   944  0774  3404               	retlw	4
   945  0775  3403               	retlw	3
   946  0776  3403               	retlw	3
   947  0777  3403               	retlw	3
   948  0778  3402               	retlw	2
   949  0779  3402               	retlw	2
   950  077A  3402               	retlw	2
   951  077B  3402               	retlw	2
   952  077C  3401               	retlw	1
   953  077D  3401               	retlw	1
   954  077E  3401               	retlw	1
   955  077F  3401               	retlw	1
   956  0780  3401               	retlw	1
   957  0781  3401               	retlw	1
   958  0782  3400               	retlw	0
   959  0783  3400               	retlw	0
   960  0784  3400               	retlw	0
   961  0785  3400               	retlw	0
   962  0786  3400               	retlw	0
   963  0787  3400               	retlw	0
   964  0788  3400               	retlw	0
   965  0789  3400               	retlw	0
   966  078A  3400               	retlw	0
   967  078B  3400               	retlw	0
   968  078C  3400               	retlw	0
   969  078D  3400               	retlw	0
   970  078E  3400               	retlw	0
   971  078F  3400               	retlw	0
   972  0790  3401               	retlw	1
   973  0791  3401               	retlw	1
   974  0792  3401               	retlw	1
   975  0793  3401               	retlw	1
   976  0794  3401               	retlw	1
   977  0795  3401               	retlw	1
   978  0796  3402               	retlw	2
   979  0797  3402               	retlw	2
   980  0798  3402               	retlw	2
   981  0799  3402               	retlw	2
   982  079A  3403               	retlw	3
   983  079B  3403               	retlw	3
   984  079C  3403               	retlw	3
   985  079D  3404               	retlw	4
   986  079E  3404               	retlw	4
   987  079F  3404               	retlw	4
   988  07A0  3405               	retlw	5
   989  07A1  3405               	retlw	5
   990  07A2  3406               	retlw	6
   991  07A3  3406               	retlw	6
   992  07A4  3406               	retlw	6
   993  07A5  3407               	retlw	7
   994  07A6  3407               	retlw	7
   995  07A7  3408               	retlw	8
   996  07A8  3408               	retlw	8
   997  07A9  3409               	retlw	9
   998  07AA  3409               	retlw	9
   999  07AB  340A               	retlw	10
  1000  07AC  340A               	retlw	10
  1001  07AD  340B               	retlw	11
  1002  07AE  340B               	retlw	11
  1003  07AF  340C               	retlw	12
  1004  07B0  340C               	retlw	12
  1005  07B1  340D               	retlw	13
  1006  07B2  340D               	retlw	13
  1007  07B3  340E               	retlw	14
  1008  07B4  340E               	retlw	14
  1009  07B5  340F               	retlw	15
  1010  07B6                     __end_of_sine_table2:	
  1011  07B6                     _PLAYBACK_RATE:	
  1012  07B6  3412               	retlw	18
  1013  07B7  347A               	retlw	122
  1014  07B8  3400               	retlw	0
  1015  07B9  3400               	retlw	0
  1016  07BA                     __end_of_PLAYBACK_RATE:	
  1017  07BA                     _BAUD_RATE:	
  1018  07BA  34B0               	retlw	176
  1019  07BB  3404               	retlw	4
  1020  07BC                     __end_of_BAUD_RATE:	
  1021  07BC                     _TABLE_SIZE:	
  1022  07BC  34B6               	retlw	182
  1023  07BD  3400               	retlw	0
  1024  07BE                     __end_of_TABLE_SIZE:	
  1025  000B                     _INTCON	set	11
  1026  0011                     _PIR1	set	17
  1027  000C                     _PORTAbits	set	12
  1028  000E                     _PORTCbits	set	14
  1029  0015                     _TMR0	set	21
  1030  0017                     _TMR1H	set	23
  1031  0016                     _TMR1L	set	22
  1032  008E                     _ADIF	set	142
  1033  008A                     _CCP1IF	set	138
  1034  00C4                     _T1CKPS0	set	196
  1035  00C5                     _T1CKPS1	set	197
  1036  005D                     _TMR0IE	set	93
  1037  005A                     _TMR0IF	set	90
  1038  00C6                     _TMR1CS0	set	198
  1039  00C7                     _TMR1CS1	set	199
  1040  00CF                     _TMR1GE	set	207
  1041  0088                     _TMR1IF	set	136
  1042  00C0                     _TMR1ON	set	192
  1043  009D                     _ADCON0	set	157
  1044  009C                     _ADRESH	set	156
  1045  009B                     _ADRESL	set	155
  1046  0099                     _OSCCON	set	153
  1047  009A                     _OSCSTAT	set	154
  1048  0098                     _OSCTUNE	set	152
  1049  008C                     _TRISA	set	140
  1050  008E                     _TRISC	set	142
  1051  04F4                     _ADCS0	set	1268
  1052  04F5                     _ADCS1	set	1269
  1053  04F6                     _ADCS2	set	1270
  1054  04F7                     _ADFM	set	1271
  1055  048E                     _ADIE	set	1166
  1056  04F2                     _ADNREF	set	1266
  1057  04E8                     _ADON	set	1256
  1058  04F0                     _ADPREF0	set	1264
  1059  04F1                     _ADPREF1	set	1265
  1060  048A                     _CCP1IE	set	1162
  1061  04AB                     _PSA	set	1195
  1062  04AD                     _TMR0CS	set	1197
  1063  0488                     _TMR1IE	set	1160
  1064  0119                     _DACCON1	set	281
  1065  08C7                     _DACEN	set	2247
  1066  08C0                     _DACNSS	set	2240
  1067  08C5                     _DACOE	set	2245
  1068  08C2                     _DACPSS0	set	2242
  1069  08C3                     _DACPSS1	set	2243
  1070  0C61                     _ANSA1	set	3169
  1071  0292                     _CCPR1H	set	658
  1072  0291                     _CCPR1L	set	657
  1073  1499                     _CCP1M1	set	5273
  1074  149A                     _CCP1M2	set	5274
  1075  149B                     _CCP1M3	set	5275
  1076  07BE                     __stringdata:	
  1077  07BE                     STR_1:	
  1078  07BE  3448               	retlw	72	;'H'
  1079  07BF  3445               	retlw	69	;'E'
  1080  07C0  344C               	retlw	76	;'L'
  1081  07C1  344C               	retlw	76	;'L'
  1082  07C2  344F               	retlw	79	;'O'
  1083  07C3  3400               	retlw	0
  1084  07C4                     __end_of__stringdata:	
  1085                           
  1086                           ; #config settings
  1087  0000                     
  1088                           	psect	cinit
  1089  003C                     start_initialization:	
  1090  003C                     __initialization:	
  1091                           
  1092                           ; Clear objects allocated to COMMON
  1093  003C  01F9               	clrf	__pbssCOMMON& (0+127)
  1094  003D  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1095  003E  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1096  003F  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1097  0040  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1098                           
  1099                           ; Clear objects allocated to BANK0
  1100  0041  01EF               	clrf	__pbssBANK0& (0+127)
  1101                           
  1102                           ; Clear objects allocated to BANK1
  1103  0042  30A0               	movlw	low __pbssBANK1
  1104  0043  0084               	movwf	4
  1105  0044  3000               	movlw	high __pbssBANK1
  1106  0045  0085               	movwf	5
  1107  0046  3033               	movlw	51
  1108  0047  3196  26CD  3180   	fcall	clear_ram0
  1109                           
  1110                           ; Clear objects allocated to BANK2
  1111  004A  3020               	movlw	low __pbssBANK2
  1112  004B  0084               	movwf	4
  1113  004C  3001               	movlw	high __pbssBANK2
  1114  004D  0085               	movwf	5
  1115  004E  301C               	movlw	28
  1116  004F  3196  26CD  3180   	fcall	clear_ram0
  1117                           
  1118                           ; Clear objects allocated to BANK3
  1119  0052  30A0               	movlw	low __pbssBANK3
  1120  0053  0084               	movwf	4
  1121  0054  3001               	movlw	high __pbssBANK3
  1122  0055  0085               	movwf	5
  1123  0056  3040               	movlw	64
  1124  0057  3196  26CD  3180   	fcall	clear_ram0
  1125                           
  1126                           ; Initialize objects allocated to BANK2
  1127  005A  303C               	movlw	low __pidataBANK2
  1128  005B  0084               	movwf	4
  1129  005C  3097               	movlw	(high __pidataBANK2)| (0+128)
  1130  005D  0085               	movwf	5
  1131  005E  303C               	movlw	low __pdataBANK2
  1132  005F  0086               	movwf	6
  1133  0060  3001               	movlw	high __pdataBANK2
  1134  0061  0087               	movwf	7
  1135  0062  3010               	movlw	16
  1136  0063  3196  26C7         	fcall	init_ram
  1137  0065                     end_of_initialization:	
  1138                           ;End of C runtime variable initialization code
  1139                           
  1140  0065                     __end_of__initialization:	
  1141  0065  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1142  0066  0020               	movlb	0
  1143  0067  318D  2D68         	ljmp	_main	;jump to C main() function
  1144                           
  1145                           	psect	bssCOMMON
  1146  0079                     __pbssCOMMON:	
  1147  0079                     _modem_packet_size:	
  1148  0079                     	ds	4
  1149  007D                     _current_byte:	
  1150  007D                     	ds	1
  1151                           
  1152                           	psect	bssBANK0
  1153  006F                     __pbssBANK0:	
  1154  006F                     _SAMPLES_PER_BAUD:	
  1155  006F                     	ds	1
  1156                           
  1157                           	psect	bssBANK1
  1158  00A0                     __pbssBANK1:	
  1159  00A0                     _adf_config:	
  1160  00A0                     	ds	39
  1161  00C7                     _crc:	
  1162  00C7                     	ds	2
  1163  00C9                     _ones_in_a_row:	
  1164  00C9                     	ds	2
  1165  00CB                     Sinus_Generator@tone_index:	
  1166  00CB                     	ds	1
  1167  00CC                     _MODEM_TRANSMITTING:	
  1168  00CC                     	ds	1
  1169  00CD                     _PTT_OFF:	
  1170  00CD                     	ds	1
  1171  00CE                     _adc_sonuc_high:	
  1172  00CE                     	ds	1
  1173  00CF                     _adc_sonuc_low:	
  1174  00CF                     	ds	1
  1175  00D0                     _current_sample_in_baud:	
  1176  00D0                     	ds	1
  1177  00D1                     _test:	
  1178  00D1                     	ds	1
  1179  00D2                     _test2:	
  1180  00D2                     	ds	1
  1181                           
  1182                           	psect	bssBANK2
  1183  0120                     __pbssBANK2:	
  1184  0120                     _PHASE_DELTA_1200:	
  1185  0120                     	ds	4
  1186  0124                     _PHASE_DELTA_2200:	
  1187  0124                     	ds	4
  1188  0128                     _packet_pos:	
  1189  0128                     	ds	4
  1190  012C                     _phase:	
  1191  012C                     	ds	4
  1192  0130                     _phase_delta:	
  1193  0130                     	ds	4
  1194  0134                     _powerlevel:	
  1195  0134                     	ds	4
  1196  0138                     _Systick_Counter:	
  1197  0138                     	ds	2
  1198  013A                     _dac_flag:	
  1199  013A                     	ds	2
  1200                           
  1201                           	psect	dataBANK2
  1202  013C                     __pdataBANK2:	
  1203  013C                     main@F3176:	
  1204  013C                     	ds	16
  1205                           
  1206                           	psect	bssBANK3
  1207  01A0                     __pbssBANK3:	
  1208  01A0                     _modem_packet:	
  1209  01A0                     	ds	64
  1210                           
  1211                           	psect	clrtext
  1212  16CD                     clear_ram0:	
  1213                           ;	Called with FSR0 containing the base address, and
  1214                           ;	WREG with the size to clear
  1215                           
  1216  16CD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1217  16CE                     clrloop0:	
  1218  16CE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1219  16CF  3101               	addfsr 0,1
  1220  16D0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1221  16D1  2ECE               	goto	clrloop0	;have we reached the end yet?
  1222  16D2  3400               	retlw	0	;all done for this memory range, return
  1223                           
  1224                           	psect	inittext
  1225  16C7                     init_ram:	
  1226  16C7  00FE               	movwf	126
  1227  16C8                     initloop:	
  1228  16C8  0012               	moviw fsr0++
  1229  16C9  001E               	movwi fsr1++
  1230  16CA  0BFE               	decfsz	126,f
  1231  16CB  2EC8               	goto	initloop
  1232  16CC  3400               	retlw	0
  1233                           
  1234                           	psect	cstackBANK1
  1235  00D3                     __pcstackBANK1:	
  1236  00D3                     Adf_Write_Register_Three@reg_ptr:	
  1237                           
  1238                           ; 4 bytes @ 0x0
  1239  00D3                     	ds	4
  1240  00D7                     Adf_Write_Register_Three@reg:	
  1241                           
  1242                           ; 4 bytes @ 0x4
  1243  00D7                     	ds	4
  1244  00DB                     Adf_Lock@adj:	
  1245                           
  1246                           ; 2 bytes @ 0x8
  1247  00DB                     	ds	2
  1248  00DD                     Adf_Lock@bias:	
  1249                           
  1250                           ; 2 bytes @ 0xA
  1251  00DD                     	ds	2
  1252  00DF                     main@beacon_address:	
  1253                           
  1254                           ; 16 bytes @ 0xC
  1255  00DF                     	ds	16
  1256                           
  1257                           	psect	cstackCOMMON
  1258  0070                     __pcstackCOMMON:	
  1259  0070                     ?_Sinus_Generator:	
  1260  0070                     ?_Timer1_Start:	
  1261                           ; 0 bytes @ 0x0
  1262                           
  1263  0070                     ?_Dac0_Start_Hold:	
  1264                           ; 0 bytes @ 0x0
  1265                           
  1266  0070                     ?_Adc1_Start:	
  1267                           ; 0 bytes @ 0x0
  1268                           
  1269  0070                     ?_Ax25_Send_Footer:	
  1270                           ; 0 bytes @ 0x0
  1271                           
  1272  0070                     ?_Modem_Setup:	
  1273                           ; 0 bytes @ 0x0
  1274                           
  1275  0070                     ?_Ptt_Off:	
  1276                           ; 0 bytes @ 0x0
  1277                           
  1278  0070                     ?_Modem_Flush_Frame:	
  1279                           ; 0 bytes @ 0x0
  1280                           
  1281  0070                     ?_Adf_Reset_Register_Zero:	
  1282                           ; 0 bytes @ 0x0
  1283                           
  1284  0070                     ?_Adf_Reset_Register_One:	
  1285                           ; 0 bytes @ 0x0
  1286                           
  1287  0070                     ?_Adf_Reset_Register_Two:	
  1288                           ; 0 bytes @ 0x0
  1289                           
  1290  0070                     ?_Adf_Reset_Register_Three:	
  1291                           ; 0 bytes @ 0x0
  1292                           
  1293  0070                     ?_Adf_Reset:	
  1294                           ; 0 bytes @ 0x0
  1295                           
  1296  0070                     ?_Adf_Write_Register_Zero:	
  1297                           ; 0 bytes @ 0x0
  1298                           
  1299  0070                     ?_Adf_Write_Register_One:	
  1300                           ; 0 bytes @ 0x0
  1301                           
  1302  0070                     ?_Adf_Write_Register_Two:	
  1303                           ; 0 bytes @ 0x0
  1304                           
  1305  0070                     ?_Adf_Write_Register_Three:	
  1306                           ; 0 bytes @ 0x0
  1307                           
  1308  0070                     ?_global_interrupt:	
  1309                           ; 0 bytes @ 0x0
  1310                           
  1311  0070                     ?_System_Start:	
  1312                           ; 0 bytes @ 0x0
  1313                           
  1314  0070                     ??_Send_Vcxo_Signal:	
  1315                           ; 0 bytes @ 0x0
  1316                           
  1317  0070                     ?_Timer0_Start:	
  1318                           ; 0 bytes @ 0x0
  1319                           
  1320  0070                     ?_Timer0_Stop:	
  1321                           ; 0 bytes @ 0x0
  1322                           
  1323  0070                     ??_Timer0_Stop:	
  1324                           ; 0 bytes @ 0x0
  1325                           
  1326  0070                     ?_Adf_Reset_Config:	
  1327                           ; 0 bytes @ 0x0
  1328                           
  1329  0070                     ?_Adf_Write_Config:	
  1330                           ; 0 bytes @ 0x0
  1331                           
  1332  0070                     ?_Radio_Setup:	
  1333                           ; 0 bytes @ 0x0
  1334                           
  1335  0070                     ?_Modem_Init:	
  1336                           ; 0 bytes @ 0x0
  1337                           
  1338  0070                     ?_Update_Crc:	
  1339                           ; 0 bytes @ 0x0
  1340                           
  1341  0070                     ?_Send_Byte:	
  1342                           ; 0 bytes @ 0x0
  1343                           
  1344  0070                     ?_Ax25_Send_Byte:	
  1345                           ; 0 bytes @ 0x0
  1346                           
  1347  0070                     ?_Ax25_Send_Sync:	
  1348                           ; 0 bytes @ 0x0
  1349                           
  1350  0070                     ?_Ax25_Send_Flag:	
  1351                           ; 0 bytes @ 0x0
  1352                           
  1353  0070                     ?_Gpio_Config:	
  1354                           ; 0 bytes @ 0x0
  1355                           
  1356  0070                     ?_Ptt_On:	
  1357                           ; 1 bytes @ 0x0
  1358                           
  1359  0070                     ?_Spi_Byte_Send:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0070                     ?_Adf_Locked:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0070                     ?_Read_Adf7012_Muxout:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0070                     ?_Send_Vcxo_Signal:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0070                     ?_main:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0070                     ?_Adf_Lock:	
  1375                           ; 2 bytes @ 0x0
  1376                           
  1377  0070                     Send_Vcxo_Signal@value:	
  1378                           ; 2 bytes @ 0x0
  1379                           
  1380                           
  1381                           ; 1 bytes @ 0x0
  1382  0070                     	ds	1
  1383  0071                     ??_Sinus_Generator:	
  1384                           
  1385                           ; 0 bytes @ 0x1
  1386  0071                     	ds	5
  1387  0076                     Sinus_Generator@Audio_Signal:	
  1388                           
  1389                           ; 1 bytes @ 0x6
  1390  0076                     	ds	1
  1391  0077                     ??_global_interrupt:	
  1392                           
  1393                           ; 0 bytes @ 0x7
  1394  0077                     	ds	2
  1395                           
  1396                           	psect	cstackBANK0
  1397  0020                     __pcstackBANK0:	
  1398  0020                     ??_Gpio_Config:	
  1399  0020                     ??_Timer1_Start:	
  1400                           ; 0 bytes @ 0x0
  1401                           
  1402  0020                     ??_Dac0_Start_Hold:	
  1403                           ; 0 bytes @ 0x0
  1404                           
  1405  0020                     ??_Adc1_Start:	
  1406                           ; 0 bytes @ 0x0
  1407                           
  1408  0020                     ?_Delay_ms:	
  1409                           ; 0 bytes @ 0x0
  1410                           
  1411  0020                     ??_Adf_Reset_Register_Zero:	
  1412                           ; 0 bytes @ 0x0
  1413                           
  1414  0020                     ??_Adf_Reset_Register_One:	
  1415                           ; 0 bytes @ 0x0
  1416                           
  1417  0020                     ??_Adf_Reset_Register_Two:	
  1418                           ; 0 bytes @ 0x0
  1419                           
  1420  0020                     ??_Adf_Reset_Register_Three:	
  1421                           ; 0 bytes @ 0x0
  1422                           
  1423  0020                     ??_System_Start:	
  1424                           ; 0 bytes @ 0x0
  1425                           
  1426  0020                     ??_Timer0_Start:	
  1427                           ; 0 bytes @ 0x0
  1428                           
  1429  0020                     ??_Modem_Init:	
  1430                           ; 0 bytes @ 0x0
  1431                           
  1432  0020                     ??_Update_Crc:	
  1433                           ; 0 bytes @ 0x0
  1434                           
  1435  0020                     ??_Ax25_Send_Sync:	
  1436                           ; 0 bytes @ 0x0
  1437                           
  1438  0020                     ??_Ax25_Send_Flag:	
  1439                           ; 0 bytes @ 0x0
  1440                           
  1441  0020                     ?_memcpy:	
  1442                           ; 0 bytes @ 0x0
  1443                           
  1444  0020                     ?___ftpack:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447  0020                     ?___aldiv:	
  1448                           ; 3 bytes @ 0x0
  1449                           
  1450  0020                     ?___lldiv:	
  1451                           ; 4 bytes @ 0x0
  1452                           
  1453  0020                     memcpy@s1:	
  1454                           ; 4 bytes @ 0x0
  1455                           
  1456  0020                     Delay_ms@time_to_delay:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459  0020                     ___ftpack@arg:	
  1460                           ; 2 bytes @ 0x0
  1461                           
  1462  0020                     ___aldiv@divisor:	
  1463                           ; 3 bytes @ 0x0
  1464                           
  1465  0020                     ___lldiv@divisor:	
  1466                           ; 4 bytes @ 0x0
  1467                           
  1468                           
  1469                           ; 4 bytes @ 0x0
  1470  0020                     	ds	1
  1471  0021                     memcpy@n:	
  1472                           
  1473                           ; 2 bytes @ 0x1
  1474  0021                     	ds	1
  1475  0022                     ??_Delay_ms:	
  1476  0022                     Update_Crc@input_bit:	
  1477                           ; 0 bytes @ 0x2
  1478                           
  1479                           
  1480                           ; 1 bytes @ 0x2
  1481  0022                     	ds	1
  1482  0023                     ??_memcpy:	
  1483  0023                     ??_Send_Byte:	
  1484                           ; 0 bytes @ 0x3
  1485                           
  1486  0023                     ___ftpack@exp:	
  1487                           ; 0 bytes @ 0x3
  1488                           
  1489                           
  1490                           ; 1 bytes @ 0x3
  1491  0023                     	ds	1
  1492  0024                     ___ftpack@sign:	
  1493  0024                     memcpy@d:	
  1494                           ; 1 bytes @ 0x4
  1495                           
  1496  0024                     Delay_ms@i:	
  1497                           ; 1 bytes @ 0x4
  1498                           
  1499  0024                     ___aldiv@dividend:	
  1500                           ; 2 bytes @ 0x4
  1501                           
  1502  0024                     ___lldiv@dividend:	
  1503                           ; 4 bytes @ 0x4
  1504                           
  1505                           
  1506                           ; 4 bytes @ 0x4
  1507  0024                     	ds	1
  1508  0025                     ??___ftpack:	
  1509  0025                     memcpy@s:	
  1510                           ; 0 bytes @ 0x5
  1511                           
  1512                           
  1513                           ; 1 bytes @ 0x5
  1514  0025                     	ds	1
  1515  0026                     ??_Spi_Byte_Send:	
  1516  0026                     ??_Adf_Reset:	
  1517                           ; 0 bytes @ 0x6
  1518                           
  1519  0026                     ??_Adf_Locked:	
  1520                           ; 0 bytes @ 0x6
  1521                           
  1522  0026                     ??_Read_Adf7012_Muxout:	
  1523                           ; 0 bytes @ 0x6
  1524                           
  1525  0026                     ??_Adf_Reset_Config:	
  1526                           ; 0 bytes @ 0x6
  1527                           
  1528  0026                     Ax25_Send_Sync@byte:	
  1529                           ; 0 bytes @ 0x6
  1530                           
  1531  0026                     Ax25_Send_Flag@byte:	
  1532                           ; 1 bytes @ 0x6
  1533                           
  1534  0026                     memcpy@d1:	
  1535                           ; 1 bytes @ 0x6
  1536                           
  1537                           
  1538                           ; 1 bytes @ 0x6
  1539  0026                     	ds	1
  1540  0027                     ?_Reverse_Array:	
  1541  0027                     Reverse_Array@length:	
  1542                           ; 1 bytes @ 0x7
  1543                           
  1544  0027                     Spi_Byte_Send@data:	
  1545                           ; 1 bytes @ 0x7
  1546                           
  1547  0027                     Ax25_Send_Sync@i:	
  1548                           ; 1 bytes @ 0x7
  1549                           
  1550  0027                     Ax25_Send_Flag@i:	
  1551                           ; 2 bytes @ 0x7
  1552                           
  1553                           
  1554                           ; 2 bytes @ 0x7
  1555  0027                     	ds	1
  1556  0028                     ??_Reverse_Array:	
  1557  0028                     ??___aldiv:	
  1558                           ; 0 bytes @ 0x8
  1559                           
  1560  0028                     ??___lldiv:	
  1561                           ; 0 bytes @ 0x8
  1562                           
  1563  0028                     ?___ftmul:	
  1564                           ; 0 bytes @ 0x8
  1565                           
  1566  0028                     ?___lltoft:	
  1567                           ; 3 bytes @ 0x8
  1568                           
  1569  0028                     Spi_Byte_Send@data_to_send:	
  1570                           ; 3 bytes @ 0x8
  1571                           
  1572  0028                     ___ftmul@f1:	
  1573                           ; 1 bytes @ 0x8
  1574                           
  1575  0028                     ___lltoft@c:	
  1576                           ; 3 bytes @ 0x8
  1577                           
  1578                           
  1579                           ; 4 bytes @ 0x8
  1580  0028                     	ds	1
  1581  0029                     Spi_Byte_Send@i:	
  1582  0029                     Send_Byte@byte:	
  1583                           ; 1 bytes @ 0x9
  1584                           
  1585  0029                     ___aldiv@counter:	
  1586                           ; 1 bytes @ 0x9
  1587                           
  1588  0029                     ___lldiv@quotient:	
  1589                           ; 1 bytes @ 0x9
  1590                           
  1591                           
  1592                           ; 4 bytes @ 0x9
  1593  0029                     	ds	1
  1594  002A                     ?_Write_Adf7012_Reg:	
  1595  002A                     Write_Adf7012_Reg@size_of_reg:	
  1596                           ; 1 bytes @ 0xA
  1597                           
  1598  002A                     ___aldiv@sign:	
  1599                           ; 1 bytes @ 0xA
  1600                           
  1601  002A                     Send_Byte@i:	
  1602                           ; 1 bytes @ 0xA
  1603                           
  1604                           
  1605                           ; 2 bytes @ 0xA
  1606  002A                     	ds	1
  1607  002B                     ??_Write_Adf7012_Reg:	
  1608  002B                     ___ftmul@f2:	
  1609                           ; 0 bytes @ 0xB
  1610                           
  1611  002B                     ___aldiv@quotient:	
  1612                           ; 3 bytes @ 0xB
  1613                           
  1614                           
  1615                           ; 4 bytes @ 0xB
  1616  002B                     	ds	1
  1617  002C                     ?_Ax25_Send_Header:	
  1618  002C                     ??_Ax25_Send_Footer:	
  1619                           ; 0 bytes @ 0xC
  1620                           
  1621  002C                     ??_Ax25_Send_Byte:	
  1622                           ; 0 bytes @ 0xC
  1623                           
  1624  002C                     ??___lltoft:	
  1625                           ; 0 bytes @ 0xC
  1626                           
  1627  002C                     Write_Adf7012_Reg@reg_value:	
  1628                           ; 0 bytes @ 0xC
  1629                           
  1630  002C                     Ax25_Send_Byte@byte:	
  1631                           ; 1 bytes @ 0xC
  1632                           
  1633  002C                     Ax25_Send_Header@num_addresses:	
  1634                           ; 1 bytes @ 0xC
  1635                           
  1636  002C                     Ax25_Send_Footer@final_crc:	
  1637                           ; 2 bytes @ 0xC
  1638                           
  1639                           
  1640                           ; 2 bytes @ 0xC
  1641  002C                     	ds	1
  1642  002D                     ?_Ax25_Send_String:	
  1643  002D                     Write_Adf7012_Reg@i:	
  1644                           ; 0 bytes @ 0xD
  1645                           
  1646  002D                     ___lldiv@counter:	
  1647                           ; 1 bytes @ 0xD
  1648                           
  1649  002D                     ___lltoft@exp:	
  1650                           ; 1 bytes @ 0xD
  1651                           
  1652  002D                     Ax25_Send_String@string:	
  1653                           ; 1 bytes @ 0xD
  1654                           
  1655  002D                     Reverse_Array@buffer_array:	
  1656                           ; 2 bytes @ 0xD
  1657                           
  1658                           
  1659                           ; 4 bytes @ 0xD
  1660  002D                     	ds	1
  1661  002E                     ??_Ax25_Send_Header:	
  1662  002E                     ??___ftmul:	
  1663                           ; 0 bytes @ 0xE
  1664                           
  1665  002E                     ?___ftdiv:	
  1666                           ; 0 bytes @ 0xE
  1667                           
  1668  002E                     ?___ftneg:	
  1669                           ; 3 bytes @ 0xE
  1670                           
  1671  002E                     ___ftdiv@f2:	
  1672                           ; 3 bytes @ 0xE
  1673                           
  1674  002E                     ___ftneg@f1:	
  1675                           ; 3 bytes @ 0xE
  1676                           
  1677                           
  1678                           ; 3 bytes @ 0xE
  1679  002E                     	ds	1
  1680  002F                     ??_Ax25_Send_String:	
  1681  002F                     Ax25_Send_String@i:	
  1682                           ; 0 bytes @ 0xF
  1683                           
  1684                           
  1685                           ; 2 bytes @ 0xF
  1686  002F                     	ds	2
  1687  0031                     ??___ftneg:	
  1688  0031                     ?___ftadd:	
  1689                           ; 0 bytes @ 0x11
  1690                           
  1691  0031                     Reverse_Array@input:	
  1692                           ; 3 bytes @ 0x11
  1693                           
  1694  0031                     Ax25_Send_Header@j:	
  1695                           ; 1 bytes @ 0x11
  1696                           
  1697  0031                     ___ftadd@f1:	
  1698                           ; 2 bytes @ 0x11
  1699                           
  1700  0031                     ___ftdiv@f1:	
  1701                           ; 3 bytes @ 0x11
  1702                           
  1703                           
  1704                           ; 3 bytes @ 0x11
  1705  0031                     	ds	1
  1706  0032                     Reverse_Array@i:	
  1707  0032                     ___ftmul@exp:	
  1708                           ; 1 bytes @ 0x12
  1709                           
  1710                           
  1711                           ; 1 bytes @ 0x12
  1712  0032                     	ds	1
  1713  0033                     ??_Adf_Write_Register_Zero:	
  1714  0033                     ??_Adf_Write_Register_One:	
  1715                           ; 0 bytes @ 0x13
  1716                           
  1717  0033                     ??_Adf_Write_Register_Two:	
  1718                           ; 0 bytes @ 0x13
  1719                           
  1720  0033                     ??_Adf_Write_Register_Three:	
  1721                           ; 0 bytes @ 0x13
  1722                           
  1723  0033                     Ax25_Send_Header@addresses:	
  1724                           ; 0 bytes @ 0x13
  1725                           
  1726  0033                     ___ftmul@f3_as_product:	
  1727                           ; 1 bytes @ 0x13
  1728                           
  1729                           
  1730                           ; 3 bytes @ 0x13
  1731  0033                     	ds	1
  1732  0034                     ??___ftdiv:	
  1733  0034                     Ax25_Send_Header@i:	
  1734                           ; 0 bytes @ 0x14
  1735                           
  1736  0034                     ___ftadd@f2:	
  1737                           ; 2 bytes @ 0x14
  1738                           
  1739                           
  1740                           ; 3 bytes @ 0x14
  1741  0034                     	ds	2
  1742  0036                     ___ftmul@cntr:	
  1743                           
  1744                           ; 1 bytes @ 0x16
  1745  0036                     	ds	1
  1746  0037                     ??___ftadd:	
  1747  0037                     ___ftmul@sign:	
  1748                           ; 0 bytes @ 0x17
  1749                           
  1750                           
  1751                           ; 1 bytes @ 0x17
  1752  0037                     	ds	1
  1753  0038                     ?___fttol:	
  1754  0038                     ___ftdiv@cntr:	
  1755                           ; 4 bytes @ 0x18
  1756                           
  1757  0038                     ___fttol@f1:	
  1758                           ; 1 bytes @ 0x18
  1759                           
  1760                           
  1761                           ; 3 bytes @ 0x18
  1762  0038                     	ds	1
  1763  0039                     ___ftdiv@f3:	
  1764                           
  1765                           ; 3 bytes @ 0x19
  1766  0039                     	ds	2
  1767  003B                     ___ftadd@sign:	
  1768                           
  1769                           ; 1 bytes @ 0x1B
  1770  003B                     	ds	1
  1771  003C                     ??___fttol:	
  1772  003C                     ___ftadd@exp2:	
  1773                           ; 0 bytes @ 0x1C
  1774                           
  1775  003C                     ___ftdiv@exp:	
  1776                           ; 1 bytes @ 0x1C
  1777                           
  1778                           
  1779                           ; 1 bytes @ 0x1C
  1780  003C                     	ds	1
  1781  003D                     ___ftadd@exp1:	
  1782  003D                     ___ftdiv@sign:	
  1783                           ; 1 bytes @ 0x1D
  1784                           
  1785                           
  1786                           ; 1 bytes @ 0x1D
  1787  003D                     	ds	2
  1788  003F                     Adf_Write_Register_One@reg:	
  1789                           
  1790                           ; 4 bytes @ 0x1F
  1791  003F                     	ds	1
  1792  0040                     ___fttol@sign1:	
  1793                           
  1794                           ; 1 bytes @ 0x20
  1795  0040                     	ds	1
  1796  0041                     ___fttol@lval:	
  1797                           
  1798                           ; 4 bytes @ 0x21
  1799  0041                     	ds	2
  1800  0043                     Adf_Write_Register_One@reg_ptr:	
  1801                           
  1802                           ; 3 bytes @ 0x23
  1803  0043                     	ds	2
  1804  0045                     ___fttol@exp1:	
  1805                           
  1806                           ; 1 bytes @ 0x25
  1807  0045                     	ds	1
  1808  0046                     ?_Set_Freq:	
  1809  0046                     Set_Freq@freq:	
  1810                           ; 0 bytes @ 0x26
  1811                           
  1812                           
  1813                           ; 4 bytes @ 0x26
  1814  0046                     	ds	4
  1815  004A                     ??_Set_Freq:	
  1816                           
  1817                           ; 0 bytes @ 0x2A
  1818  004A                     	ds	1
  1819  004B                     Adf_Write_Register_Two@reg_ptr:	
  1820                           
  1821                           ; 4 bytes @ 0x2B
  1822  004B                     	ds	3
  1823  004E                     Set_Freq@m:	
  1824                           
  1825                           ; 4 bytes @ 0x2E
  1826  004E                     	ds	1
  1827  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1828  004F                     Adf_Write_Register_Two@reg:	
  1829                           ; 4 bytes @ 0x2F
  1830                           
  1831                           
  1832                           ; 4 bytes @ 0x2F
  1833  004F                     	ds	3
  1834  0052                     Set_Freq@ratio:	
  1835                           
  1836                           ; 3 bytes @ 0x32
  1837  0052                     	ds	1
  1838  0053                     Adf_Write_Register_Zero@reg:	
  1839                           
  1840                           ; 4 bytes @ 0x33
  1841  0053                     	ds	2
  1842  0055                     Set_Freq@rest:	
  1843                           
  1844                           ; 3 bytes @ 0x35
  1845  0055                     	ds	3
  1846  0058                     Set_Freq@f_pfd:	
  1847                           
  1848                           ; 4 bytes @ 0x38
  1849  0058                     	ds	4
  1850  005C                     Set_Freq@n:	
  1851                           
  1852                           ; 4 bytes @ 0x3C
  1853  005C                     	ds	15
  1854  006B                     ??_Modem_Setup:	
  1855  006B                     ??_Ptt_Off:	
  1856                           ; 0 bytes @ 0x4B
  1857                           
  1858  006B                     ??_Adf_Write_Config:	
  1859                           ; 0 bytes @ 0x4B
  1860                           
  1861  006B                     ??_Adf_Lock:	
  1862                           ; 0 bytes @ 0x4B
  1863                           
  1864  006B                     ??_Radio_Setup:	
  1865                           ; 0 bytes @ 0x4B
  1866                           
  1867                           
  1868                           ; 0 bytes @ 0x4B
  1869  006B                     	ds	2
  1870  006D                     ??_Ptt_On:	
  1871                           
  1872                           ; 0 bytes @ 0x4D
  1873  006D                     	ds	1
  1874  006E                     ??_Modem_Flush_Frame:	
  1875  006E                     ??_main:	
  1876                           ; 0 bytes @ 0x4E
  1877                           
  1878                           
  1879                           ; 0 bytes @ 0x4E
  1880  006E                     	ds	1
  1881                           
  1882                           	psect	maintext
  1883  0D68                     __pmaintext:	
  1884 ;;
  1885 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1886 ;;
  1887 ;; *************** function _main *****************
  1888 ;; Defined at:
  1889 ;;		line 160 in file "main.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1894 ;;  adc_sonuc       2    0        unsigned int 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  2  131[COMMON] int 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 17F/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;Total ram usage:       17 bytes
  1909 ;; Hardware stack levels required when called:   12
  1910 ;; This function calls:
  1911 ;;		_Adc1_Start
  1912 ;;		_Ax25_Send_Footer
  1913 ;;		_Ax25_Send_Header
  1914 ;;		_Ax25_Send_String
  1915 ;;		_Dac0_Start_Hold
  1916 ;;		_Delay_ms
  1917 ;;		_Gpio_Config
  1918 ;;		_Modem_Flush_Frame
  1919 ;;		_Modem_Setup
  1920 ;;		_Ptt_Off
  1921 ;;		_Ptt_On
  1922 ;;		_System_Start
  1923 ;;		_Timer1_Start
  1924 ;; This function is called by:
  1925 ;;		Startup code after reset
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           
  1930                           ;psect for function _main
  1931  0D68                     _main:	
  1932                           
  1933                           ;main.c: 161: unsigned int adc_sonuc;
  1934                           ;main.c: 162: System_Start();
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1938  0D68  3189  2161  318D   	fcall	_System_Start
  1939  0D6B                     l132:	
  1940                           ;main.c: 163: while (!(OSCSTAT & (0x01))){}
  1941                           
  1942  0D6B  0021               	movlb	1	; select bank1
  1943  0D6C  1C1A               	btfss	26,0	;volatile
  1944  0D6D  2D6B               	goto	l132
  1945                           
  1946                           ;main.c: 166: Gpio_Config();
  1947  0D6E  3197  272C  318D   	fcall	_Gpio_Config
  1948                           
  1949                           ;main.c: 168: Timer1_Start();
  1950  0D71  3197  271D  318D   	fcall	_Timer1_Start
  1951                           
  1952                           ;main.c: 170: Dac0_Start_Hold();
  1953  0D74  3196  26AB  318D   	fcall	_Dac0_Start_Hold
  1954                           
  1955                           ;main.c: 172: Adc1_Start();
  1956  0D77  3196  26B5  318D   	fcall	_Adc1_Start
  1957                           
  1958                           ;main.c: 174: PORTAbits.RA5 = 0;;
  1959  0D7A  0020               	movlb	0	; select bank0
  1960  0D7B  128C               	bcf	12,5	;volatile
  1961                           
  1962                           ;main.c: 175: Delay_ms(10);
  1963  0D7C  300A               	movlw	10
  1964  0D7D  00A0               	movwf	Delay_ms@time_to_delay
  1965  0D7E  3000               	movlw	0
  1966  0D7F  00A1               	movwf	Delay_ms@time_to_delay+1
  1967  0D80  3188  202A  318D   	fcall	_Delay_ms
  1968                           
  1969                           ;main.c: 176: PORTAbits.RA4 = 1;;
  1970  0D83  0020               	movlb	0	; select bank0
  1971  0D84  160C               	bsf	12,4	;volatile
  1972                           
  1973                           ;main.c: 177: Delay_ms(10);
  1974  0D85  300A               	movlw	10
  1975  0D86  00A0               	movwf	Delay_ms@time_to_delay
  1976  0D87  3000               	movlw	0
  1977  0D88  00A1               	movwf	Delay_ms@time_to_delay+1
  1978  0D89  3188  202A  318D   	fcall	_Delay_ms
  1979                           
  1980                           ;main.c: 178: PORTAbits.RA5 = 1;;
  1981  0D8C  0020               	movlb	0	; select bank0
  1982  0D8D  168C               	bsf	12,5	;volatile
  1983                           
  1984                           ;main.c: 179: Delay_ms(10);
  1985  0D8E  300A               	movlw	10
  1986  0D8F  00A0               	movwf	Delay_ms@time_to_delay
  1987  0D90  3000               	movlw	0
  1988  0D91  00A1               	movwf	Delay_ms@time_to_delay+1
  1989  0D92  3188  202A  318D   	fcall	_Delay_ms
  1990                           
  1991                           ;main.c: 181: Delay_ms(200);
  1992  0D95  30C8               	movlw	200
  1993  0D96  0020               	movlb	0	; select bank0
  1994  0D97  00A0               	movwf	Delay_ms@time_to_delay
  1995  0D98  3000               	movlw	0
  1996  0D99  00A1               	movwf	Delay_ms@time_to_delay+1
  1997  0D9A  3188  202A  318D   	fcall	_Delay_ms
  1998                           
  1999                           ;main.c: 184: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 7}};
  2000  0D9D  303C               	movlw	low main@F3176
  2001  0D9E  0086               	movwf	6
  2002  0D9F  3001               	movlw	high main@F3176
  2003  0DA0  0087               	movwf	7
  2004  0DA1  30DF               	movlw	low main@beacon_address
  2005  0DA2  0084               	movwf	4
  2006  0DA3  3000               	movlw	high main@beacon_address
  2007  0DA4  0085               	movwf	5
  2008  0DA5  3010               	movlw	16
  2009  0DA6  0020               	movlb	0	; select bank0
  2010  0DA7  00EE               	movwf	??_main
  2011  0DA8                     u3760:	
  2012  0DA8  0016               	moviw fsr1++
  2013  0DA9  001A               	movwi fsr0++
  2014  0DAA  0BEE               	decfsz	??_main,f
  2015  0DAB  2DA8               	goto	u3760
  2016                           
  2017                           ;main.c: 186: Ax25_Send_Header(beacon_address,2);
  2018  0DAC  3002               	movlw	2
  2019  0DAD  00AC               	movwf	Ax25_Send_Header@num_addresses
  2020  0DAE  3000               	movlw	0
  2021  0DAF  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  2022  0DB0  30DF               	movlw	main@beacon_address& (0+255)
  2023  0DB1  3183  23DD  318D   	fcall	_Ax25_Send_Header
  2024                           
  2025                           ;main.c: 187: Ax25_Send_String("HELLO");
  2026  0DB4  30BE               	movlw	low (STR_1| (0+32768))
  2027  0DB5  0020               	movlb	0	; select bank0
  2028  0DB6  00AD               	movwf	Ax25_Send_String@string
  2029  0DB7  3087               	movlw	high (STR_1| (0+32768))
  2030  0DB8  00AE               	movwf	Ax25_Send_String@string+1
  2031  0DB9  3197  27A7  318D   	fcall	_Ax25_Send_String
  2032                           
  2033                           ;main.c: 188: Ax25_Send_Footer();
  2034  0DBC  3197  278C  318D   	fcall	_Ax25_Send_Footer
  2035                           
  2036                           ;main.c: 192: Modem_Setup();
  2037  0DBF  3196  26C1  318D   	fcall	_Modem_Setup
  2038                           
  2039                           ;main.c: 193: Delay_ms(100);
  2040  0DC2  3064               	movlw	100
  2041  0DC3  0020               	movlb	0	; select bank0
  2042  0DC4  00A0               	movwf	Delay_ms@time_to_delay
  2043  0DC5  3000               	movlw	0
  2044  0DC6  00A1               	movwf	Delay_ms@time_to_delay+1
  2045  0DC7  3188  202A  318D   	fcall	_Delay_ms
  2046                           
  2047                           ;main.c: 194: PORTCbits.RC3 = 0; ;
  2048  0DCA  0020               	movlb	0	; select bank0
  2049  0DCB  118E               	bcf	14,3	;volatile
  2050                           
  2051                           ;main.c: 195: Delay_ms(100);
  2052  0DCC  3064               	movlw	100
  2053  0DCD  00A0               	movwf	Delay_ms@time_to_delay
  2054  0DCE  3000               	movlw	0
  2055  0DCF  00A1               	movwf	Delay_ms@time_to_delay+1
  2056  0DD0  3188  202A  318D   	fcall	_Delay_ms
  2057                           
  2058                           ;main.c: 196: Ptt_On();
  2059  0DD3  3187  27C4  318D   	fcall	_Ptt_On
  2060  0DD6                     l2985:	
  2061                           ;main.c: 198: while(1){
  2062                           
  2063                           
  2064                           ;main.c: 200: if(PTT_OFF){
  2065  0DD6  0021               	movlb	1	; select bank1
  2066  0DD7  084D               	movf	_PTT_OFF^(0+128),w
  2067  0DD8  1903               	btfsc	3,2
  2068  0DD9  2DDF               	goto	l2991
  2069                           
  2070                           ;main.c: 201: Ptt_Off();
  2071  0DDA  3196  26F1  318D   	fcall	_Ptt_Off
  2072                           
  2073                           ;main.c: 202: PTT_OFF = 0;
  2074  0DDD  0021               	movlb	1	; select bank1
  2075  0DDE  01CD               	clrf	_PTT_OFF^(0+128)
  2076  0DDF                     l2991:	
  2077                           
  2078                           ;main.c: 203: }
  2079                           ;main.c: 206: Modem_Flush_Frame();
  2080  0DDF  3188  20D0  318D   	fcall	_Modem_Flush_Frame
  2081  0DE2                     l2993:	
  2082                           ;main.c: 207: while(MODEM_TRANSMITTING);
  2083                           
  2084  0DE2  0021               	movlb	1	; select bank1
  2085  0DE3  08CC               	movf	_MODEM_TRANSMITTING^(0+128),f
  2086  0DE4  1D03               	skipz
  2087  0DE5  2DE2               	goto	l2993
  2088                           
  2089                           ;main.c: 208: Delay_ms(2000);
  2090  0DE6  30D0               	movlw	208
  2091  0DE7  0020               	movlb	0	; select bank0
  2092  0DE8  00A0               	movwf	Delay_ms@time_to_delay
  2093  0DE9  3007               	movlw	7
  2094  0DEA  00A1               	movwf	Delay_ms@time_to_delay+1
  2095  0DEB  3188  202A  318D   	fcall	_Delay_ms
  2096  0DEE  2DD6               	goto	l2985
  2097  0DEF                     __end_of_main:	
  2098                           ;main.c: 210: }
  2099                           ;main.c: 211: return (0);
  2100                           ;	Return value of _main is never used
  2101                           
  2102                           
  2103                           	psect	text1
  2104  171D                     __ptext1:	
  2105 ;; *************** function _Timer1_Start *****************
  2106 ;; Defined at:
  2107 ;;		line 267 in file "utility.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;		None               void
  2114 ;; Registers used:
  2115 ;;		wreg, status,2
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;Total ram usage:        0 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    3
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _Timer1_Start
  2137  171D                     _Timer1_Start:	
  2138                           
  2139                           ;utility.c: 269: TMR1H = 0x00;
  2140                           
  2141                           ;incstack = 0
  2142                           ; Regs used in _Timer1_Start: [wreg+status,2]
  2143  171D  0020               	movlb	0	; select bank0
  2144  171E  0197               	clrf	23	;volatile
  2145                           
  2146                           ;utility.c: 270: TMR1L = 0x00;
  2147  171F  0196               	clrf	22	;volatile
  2148                           
  2149                           ;utility.c: 272: TMR1IE = 0;
  2150  1720  0021               	movlb	1	; select bank1
  2151  1721  1011               	bcf	17,0	;volatile
  2152                           
  2153                           ;utility.c: 275: CCPR1H = 0x03;
  2154  1722  3003               	movlw	3
  2155  1723  0025               	movlb	5	; select bank5
  2156  1724  0092               	movwf	18	;volatile
  2157                           
  2158                           ;utility.c: 276: CCPR1L = 0x41;
  2159  1725  3041               	movlw	65
  2160  1726  0091               	movwf	17	;volatile
  2161                           
  2162                           ;utility.c: 278: CCP1IF = 0;
  2163  1727  0020               	movlb	0	; select bank0
  2164  1728  1111               	bcf	17,2	;volatile
  2165                           
  2166                           ;utility.c: 280: CCP1IE = 1;
  2167  1729  0021               	movlb	1	; select bank1
  2168  172A  1511               	bsf	17,2	;volatile
  2169  172B  0008               	return
  2170  172C                     __end_of_Timer1_Start:	
  2171                           
  2172                           	psect	text2
  2173  0961                     __ptext2:	
  2174 ;; *************** function _System_Start *****************
  2175 ;; Defined at:
  2176 ;;		line 89 in file "main.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;		None               void
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2193 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2194 ;;Total ram usage:        1 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    3
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _System_Start
  2206  0961                     _System_Start:	
  2207                           
  2208                           ;main.c: 92: OSCCON = 0x00;
  2209                           
  2210                           ;incstack = 0
  2211                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2212  0961  0021               	movlb	1	; select bank1
  2213  0962  0199               	clrf	25	;volatile
  2214                           
  2215                           ;main.c: 93: OSCCON |= 0b11110000;
  2216  0963  30F0               	movlw	240
  2217  0964  0020               	movlb	0	; select bank0
  2218  0965  00A0               	movwf	??_System_Start
  2219  0966  0820               	movf	??_System_Start,w
  2220  0967  0021               	movlb	1	; select bank1
  2221  0968  0499               	iorwf	25,f	;volatile
  2222                           
  2223                           ;main.c: 94: OSCTUNE = 0x00;
  2224  0969  0198               	clrf	24	;volatile
  2225                           
  2226                           ;main.c: 98: TMR0CS = 0;
  2227  096A  1295               	bcf	21,5	;volatile
  2228                           
  2229                           ;main.c: 99: PSA = 1;
  2230  096B  1595               	bsf	21,3	;volatile
  2231                           
  2232                           ;main.c: 104: TMR1ON = 1;
  2233  096C  0020               	movlb	0	; select bank0
  2234  096D  1418               	bsf	24,0	;volatile
  2235                           
  2236                           ;main.c: 105: TMR1GE = 0;
  2237  096E  1399               	bcf	25,7	;volatile
  2238                           
  2239                           ;main.c: 108: TMR1CS1 = 0;
  2240  096F  1398               	bcf	24,7	;volatile
  2241                           
  2242                           ;main.c: 109: TMR1CS0 = 0;
  2243  0970  1318               	bcf	24,6	;volatile
  2244                           
  2245                           ;main.c: 112: T1CKPS1 = 1;
  2246  0971  1698               	bsf	24,5	;volatile
  2247                           
  2248                           ;main.c: 113: T1CKPS0 = 1;
  2249  0972  1618               	bsf	24,4	;volatile
  2250                           
  2251                           ;main.c: 116: CCP1M3 = 1;
  2252  0973  0025               	movlb	5	; select bank5
  2253  0974  1593               	bsf	19,3	;volatile
  2254                           
  2255                           ;main.c: 117: CCP1M2 = 0;
  2256  0975  1113               	bcf	19,2	;volatile
  2257                           
  2258                           ;main.c: 118: CCP1M1 = 1;
  2259  0976  1493               	bsf	19,1	;volatile
  2260                           
  2261                           ;main.c: 119: CCP1M1 = 0;
  2262  0977  1093               	bcf	19,1	;volatile
  2263                           
  2264                           ;main.c: 124: DACOE = 1;
  2265  0978  0022               	movlb	2	; select bank2
  2266  0979  1698               	bsf	24,5	;volatile
  2267                           
  2268                           ;main.c: 125: DACPSS1 = 0;
  2269  097A  1198               	bcf	24,3	;volatile
  2270                           
  2271                           ;main.c: 126: DACPSS0 = 0;
  2272  097B  1118               	bcf	24,2	;volatile
  2273                           
  2274                           ;main.c: 127: DACNSS = 0;
  2275  097C  1018               	bcf	24,0	;volatile
  2276                           
  2277                           ;main.c: 132: ANSA1 = 1;
  2278  097D  0023               	movlb	3	; select bank3
  2279  097E  148C               	bsf	12,1	;volatile
  2280                           
  2281                           ;main.c: 133: ADCON0 &= 0b10000011;
  2282  097F  3083               	movlw	131
  2283  0980  0020               	movlb	0	; select bank0
  2284  0981  00A0               	movwf	??_System_Start
  2285  0982  0820               	movf	??_System_Start,w
  2286  0983  0021               	movlb	1	; select bank1
  2287  0984  059D               	andwf	29,f	;volatile
  2288                           
  2289                           ;main.c: 134: ADCON0 |= 0b00000100;
  2290  0985  151D               	bsf	29,2	;volatile
  2291                           
  2292                           ;main.c: 135: ADNREF = 0;
  2293  0986  111E               	bcf	30,2	;volatile
  2294                           
  2295                           ;main.c: 136: ADPREF1 = 0;
  2296  0987  109E               	bcf	30,1	;volatile
  2297                           
  2298                           ;main.c: 137: ADPREF0 = 0;
  2299  0988  101E               	bcf	30,0	;volatile
  2300                           
  2301                           ;main.c: 138: ADCS2 = 1;
  2302  0989  171E               	bsf	30,6	;volatile
  2303                           
  2304                           ;main.c: 139: ADCS1 = 1;
  2305  098A  169E               	bsf	30,5	;volatile
  2306                           
  2307                           ;main.c: 140: ADCS0 = 0;
  2308  098B  121E               	bcf	30,4	;volatile
  2309                           
  2310                           ;main.c: 141: ADFM = 1;
  2311  098C  179E               	bsf	30,7	;volatile
  2312                           
  2313                           ;main.c: 146: TMR0IF = 0;
  2314  098D  110B               	bcf	11,2	;volatile
  2315                           
  2316                           ;main.c: 147: TMR1IF = 0;
  2317  098E  0020               	movlb	0	; select bank0
  2318  098F  1011               	bcf	17,0	;volatile
  2319                           
  2320                           ;main.c: 148: CCP1IF = 0;
  2321  0990  1111               	bcf	17,2	;volatile
  2322                           
  2323                           ;main.c: 149: ADIF = 0;
  2324  0991  1311               	bcf	17,6	;volatile
  2325                           
  2326                           ;main.c: 153: INTCON |= 0xC0;
  2327  0992  30C0               	movlw	192
  2328  0993  00A0               	movwf	??_System_Start
  2329  0994  0820               	movf	??_System_Start,w
  2330  0995  048B               	iorwf	11,f	;volatile
  2331  0996  0008               	return
  2332  0997                     __end_of_System_Start:	
  2333                           
  2334                           	psect	text3
  2335  16F1                     __ptext3:	
  2336 ;; *************** function _Ptt_Off *****************
  2337 ;; Defined at:
  2338 ;;		line 352 in file "adf7012.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;		None               void
  2345 ;; Registers used:
  2346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2356 ;;Total ram usage:        0 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    9
  2359 ;; This function calls:
  2360 ;;		_Adf_Write_Config
  2361 ;;		_Delay_ms
  2362 ;; This function is called by:
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           
  2368                           ;psect for function _Ptt_Off
  2369  16F1                     _Ptt_Off:	
  2370                           
  2371                           ;adf7012.c: 354: adf_config.r3.pa_enable = 0;
  2372                           
  2373                           ;incstack = 0
  2374                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2375  16F1  0021               	movlb	1	; select bank1
  2376  16F2  01BA               	clrf	(_adf_config^(0+128)+26)
  2377                           
  2378                           ;adf7012.c: 355: adf_config.r2.power_amplifier_level = 0;
  2379  16F3  01B2               	clrf	(_adf_config^(0+128)+18)
  2380                           
  2381                           ;adf7012.c: 356: Adf_Write_Config();
  2382  16F4  3196  26E5  3196   	fcall	_Adf_Write_Config
  2383                           
  2384                           ;adf7012.c: 357: Delay_ms(10);
  2385  16F7  300A               	movlw	10
  2386  16F8  0020               	movlb	0	; select bank0
  2387  16F9  00A0               	movwf	Delay_ms@time_to_delay
  2388  16FA  3000               	movlw	0
  2389  16FB  00A1               	movwf	Delay_ms@time_to_delay+1
  2390  16FC  3188  202A         	fcall	_Delay_ms
  2391  16FE  0008               	return
  2392  16FF                     __end_of_Ptt_Off:	
  2393                           
  2394                           	psect	text4
  2395  16C1                     __ptext4:	
  2396 ;; *************** function _Modem_Setup *****************
  2397 ;; Defined at:
  2398 ;;		line 48 in file "audio_tone.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;		None               void
  2405 ;; Registers used:
  2406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2416 ;;Total ram usage:        0 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:   10
  2419 ;; This function calls:
  2420 ;;		_Modem_Init
  2421 ;;		_Radio_Setup
  2422 ;; This function is called by:
  2423 ;;		_main
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function _Modem_Setup
  2429  16C1                     _Modem_Setup:	
  2430                           
  2431                           ;audio_tone.c: 50: Modem_Init();
  2432                           
  2433                           ;incstack = 0
  2434                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2435  16C1  3197  275D  3196   	fcall	_Modem_Init
  2436                           
  2437                           ;audio_tone.c: 51: Radio_Setup();
  2438  16C4  3197  27C4         	fcall	_Radio_Setup
  2439  16C6  0008               	return
  2440  16C7                     __end_of_Modem_Setup:	
  2441                           
  2442                           	psect	text5
  2443  17C4                     __ptext5:	
  2444 ;; *************** function _Radio_Setup *****************
  2445 ;; Defined at:
  2446 ;;		line 305 in file "adf7012.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;		None               void
  2453 ;; Registers used:
  2454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    9
  2467 ;; This function calls:
  2468 ;;		_Adf_Reset_Config
  2469 ;;		_Adf_Write_Config
  2470 ;;		_Delay_ms
  2471 ;;		_Gpio_Config
  2472 ;;		_Set_Freq
  2473 ;; This function is called by:
  2474 ;;		_Modem_Setup
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function _Radio_Setup
  2480  17C4                     _Radio_Setup:	
  2481                           
  2482                           ;adf7012.c: 308: Gpio_Config();
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2486  17C4  3197  272C  3197   	fcall	_Gpio_Config
  2487                           
  2488                           ;adf7012.c: 311: Adf_Reset_Config();
  2489  17C7  3197  270E  3197   	fcall	_Adf_Reset_Config
  2490                           
  2491                           ;adf7012.c: 312: Set_Freq(144390000UL);
  2492  17CA  3008               	movlw	8
  2493  17CB  0020               	movlb	0	; select bank0
  2494  17CC  00C9               	movwf	Set_Freq@freq+3
  2495  17CD  309B               	movlw	155
  2496  17CE  00C8               	movwf	Set_Freq@freq+2
  2497  17CF  3037               	movlw	55
  2498  17D0  00C7               	movwf	Set_Freq@freq+1
  2499  17D1  3070               	movlw	112
  2500  17D2  00C6               	movwf	Set_Freq@freq
  2501  17D3  3181  21D5  3197   	fcall	_Set_Freq
  2502                           
  2503                           ;adf7012.c: 313: Adf_Write_Config();
  2504  17D6  3196  26E5  3197   	fcall	_Adf_Write_Config
  2505                           
  2506                           ;adf7012.c: 315: Delay_ms(10);
  2507  17D9  300A               	movlw	10
  2508  17DA  0020               	movlb	0	; select bank0
  2509  17DB  00A0               	movwf	Delay_ms@time_to_delay
  2510  17DC  3000               	movlw	0
  2511  17DD  00A1               	movwf	Delay_ms@time_to_delay+1
  2512  17DE  3188  202A         	fcall	_Delay_ms
  2513  17E0  0008               	return
  2514  17E1                     __end_of_Radio_Setup:	
  2515                           
  2516                           	psect	text6
  2517  01D5                     __ptext6:	
  2518 ;; *************** function _Set_Freq *****************
  2519 ;; Defined at:
  2520 ;;		line 278 in file "adf7012.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  freq            4   38[BANK0 ] unsigned long 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  n               4   60[BANK0 ] unsigned long 
  2525 ;;  f_pfd           4   56[BANK0 ] unsigned long 
  2526 ;;  m               4   46[BANK0 ] unsigned long 
  2527 ;;  rest            3   53[BANK0 ] float 
  2528 ;;  ratio           3   50[BANK0 ] float 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;		None               void
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0, pclath, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2538 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2539 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2540 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2541 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2542 ;;Total ram usage:       26 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; Hardware stack levels required when called:    5
  2545 ;; This function calls:
  2546 ;;		___aldiv
  2547 ;;		___ftadd
  2548 ;;		___ftdiv
  2549 ;;		___ftmul
  2550 ;;		___ftneg
  2551 ;;		___fttol
  2552 ;;		___lldiv
  2553 ;;		___lltoft
  2554 ;; This function is called by:
  2555 ;;		_Radio_Setup
  2556 ;;		_Modem_Set_Tx_Freq
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           
  2561                           ;psect for function _Set_Freq
  2562  01D5                     _Set_Freq:	
  2563                           
  2564                           ;adf7012.c: 284: adf_config.r0.output_divider = 0;
  2565                           
  2566                           ;incstack = 0
  2567                           ; Regs used in _Set_Freq: [wreg+status,2+status,0+pclath+cstack]
  2568  01D5  0021               	movlb	1	; select bank1
  2569  01D6  01A9               	clrf	(_adf_config^(0+128)+9)
  2570                           
  2571                           ;adf7012.c: 285: if (freq < 410000000) { adf_config.r0.output_divider = 1; };
  2572  01D7  3018               	movlw	24
  2573  01D8  0020               	movlb	0	; select bank0
  2574  01D9  0249               	subwf	Set_Freq@freq+3,w
  2575  01DA  1D03               	skipz
  2576  01DB  29E6               	goto	u3165
  2577  01DC  3070               	movlw	112
  2578  01DD  0248               	subwf	Set_Freq@freq+2,w
  2579  01DE  1D03               	skipz
  2580  01DF  29E6               	goto	u3165
  2581  01E0  301A               	movlw	26
  2582  01E1  0247               	subwf	Set_Freq@freq+1,w
  2583  01E2  1D03               	skipz
  2584  01E3  29E6               	goto	u3165
  2585  01E4  3080               	movlw	128
  2586  01E5  0246               	subwf	Set_Freq@freq,w
  2587  01E6                     u3165:	
  2588  01E6  1803               	skipnc
  2589  01E7  29EB               	goto	l2553
  2590  01E8  0021               	movlb	1	; select bank1
  2591  01E9  01A9               	clrf	(_adf_config^(0+128)+9)
  2592  01EA  0AA9               	incf	(_adf_config^(0+128)+9),f
  2593  01EB                     l2553:	
  2594                           
  2595                           ;adf7012.c: 286: if (freq < 210000000) { adf_config.r0.output_divider = 2; };
  2596  01EB  300C               	movlw	12
  2597  01EC  0020               	movlb	0	; select bank0
  2598  01ED  0249               	subwf	Set_Freq@freq+3,w
  2599  01EE  1D03               	skipz
  2600  01EF  29FA               	goto	u3175
  2601  01F0  3084               	movlw	132
  2602  01F1  0248               	subwf	Set_Freq@freq+2,w
  2603  01F2  1D03               	skipz
  2604  01F3  29FA               	goto	u3175
  2605  01F4  3058               	movlw	88
  2606  01F5  0247               	subwf	Set_Freq@freq+1,w
  2607  01F6  1D03               	skipz
  2608  01F7  29FA               	goto	u3175
  2609  01F8  3080               	movlw	128
  2610  01F9  0246               	subwf	Set_Freq@freq,w
  2611  01FA                     u3175:	
  2612  01FA  1803               	skipnc
  2613  01FB  2A01               	goto	l338
  2614  01FC  3002               	movlw	2
  2615  01FD  00CA               	movwf	??_Set_Freq
  2616  01FE  084A               	movf	??_Set_Freq,w
  2617  01FF  0021               	movlb	1	; select bank1
  2618  0200  00A9               	movwf	(_adf_config^(0+128)+9)
  2619  0201                     l338:	
  2620                           
  2621                           ;adf7012.c: 287: if (freq < 130000000) { adf_config.r0.output_divider = 3; };
  2622  0201  3007               	movlw	7
  2623  0202  0020               	movlb	0	; select bank0
  2624  0203  0249               	subwf	Set_Freq@freq+3,w
  2625  0204  1D03               	skipz
  2626  0205  2A10               	goto	u3185
  2627  0206  30BF               	movlw	191
  2628  0207  0248               	subwf	Set_Freq@freq+2,w
  2629  0208  1D03               	skipz
  2630  0209  2A10               	goto	u3185
  2631  020A  30A4               	movlw	164
  2632  020B  0247               	subwf	Set_Freq@freq+1,w
  2633  020C  1D03               	skipz
  2634  020D  2A10               	goto	u3185
  2635  020E  3080               	movlw	128
  2636  020F  0246               	subwf	Set_Freq@freq,w
  2637  0210                     u3185:	
  2638  0210  1803               	skipnc
  2639  0211  2A17               	goto	l2559
  2640  0212  3003               	movlw	3
  2641  0213  00CA               	movwf	??_Set_Freq
  2642  0214  084A               	movf	??_Set_Freq,w
  2643  0215  0021               	movlb	1	; select bank1
  2644  0216  00A9               	movwf	(_adf_config^(0+128)+9)
  2645  0217                     l2559:	
  2646                           
  2647                           ;adf7012.c: 289: uint32_t f_pfd = 20000000L / adf_config.r0.r_divider;
  2648  0217  0021               	movlb	1	; select bank1
  2649  0218  0824               	movf	(_adf_config^(0+128)+4),w
  2650  0219  0020               	movlb	0	; select bank0
  2651  021A  00CA               	movwf	??_Set_Freq
  2652  021B  01CB               	clrf	??_Set_Freq+1
  2653  021C  01CC               	clrf	??_Set_Freq+2
  2654  021D  01CD               	clrf	??_Set_Freq+3
  2655  021E  084D               	movf	??_Set_Freq+3,w
  2656  021F  00A3               	movwf	___aldiv@divisor+3
  2657  0220  084C               	movf	??_Set_Freq+2,w
  2658  0221  00A2               	movwf	___aldiv@divisor+2
  2659  0222  084B               	movf	??_Set_Freq+1,w
  2660  0223  00A1               	movwf	___aldiv@divisor+1
  2661  0224  084A               	movf	??_Set_Freq,w
  2662  0225  00A0               	movwf	___aldiv@divisor
  2663  0226  3001               	movlw	1
  2664  0227  00A7               	movwf	___aldiv@dividend+3
  2665  0228  3031               	movlw	49
  2666  0229  00A6               	movwf	___aldiv@dividend+2
  2667  022A  302D               	movlw	45
  2668  022B  00A5               	movwf	___aldiv@dividend+1
  2669  022C  3000               	movlw	0
  2670  022D  00A4               	movwf	___aldiv@dividend
  2671  022E  318C  245F  3181   	fcall	___aldiv
  2672  0231  0020               	movlb	0	; select bank0
  2673  0232  0823               	movf	?___aldiv+3,w
  2674  0233  00DB               	movwf	Set_Freq@f_pfd+3
  2675  0234  0822               	movf	?___aldiv+2,w
  2676  0235  00DA               	movwf	Set_Freq@f_pfd+2
  2677  0236  0821               	movf	?___aldiv+1,w
  2678  0237  00D9               	movwf	Set_Freq@f_pfd+1
  2679  0238  0820               	movf	?___aldiv,w
  2680  0239  00D8               	movwf	Set_Freq@f_pfd
  2681                           
  2682                           ;adf7012.c: 291: uint32_t n = (uint32_t)(freq / f_pfd);
  2683  023A  085B               	movf	Set_Freq@f_pfd+3,w
  2684  023B  00A3               	movwf	___lldiv@divisor+3
  2685  023C  085A               	movf	Set_Freq@f_pfd+2,w
  2686  023D  00A2               	movwf	___lldiv@divisor+2
  2687  023E  0859               	movf	Set_Freq@f_pfd+1,w
  2688  023F  00A1               	movwf	___lldiv@divisor+1
  2689  0240  0858               	movf	Set_Freq@f_pfd,w
  2690  0241  00A0               	movwf	___lldiv@divisor
  2691  0242  0849               	movf	Set_Freq@freq+3,w
  2692  0243  00A7               	movwf	___lldiv@dividend+3
  2693  0244  0848               	movf	Set_Freq@freq+2,w
  2694  0245  00A6               	movwf	___lldiv@dividend+2
  2695  0246  0847               	movf	Set_Freq@freq+1,w
  2696  0247  00A5               	movwf	___lldiv@dividend+1
  2697  0248  0846               	movf	Set_Freq@freq,w
  2698  0249  00A4               	movwf	___lldiv@dividend
  2699  024A  3189  21D0  3181   	fcall	___lldiv
  2700  024D  0020               	movlb	0	; select bank0
  2701  024E  0823               	movf	?___lldiv+3,w
  2702  024F  00DF               	movwf	Set_Freq@n+3
  2703  0250  0822               	movf	?___lldiv+2,w
  2704  0251  00DE               	movwf	Set_Freq@n+2
  2705  0252  0821               	movf	?___lldiv+1,w
  2706  0253  00DD               	movwf	Set_Freq@n+1
  2707  0254  0820               	movf	?___lldiv,w
  2708  0255  00DC               	movwf	Set_Freq@n
  2709                           
  2710                           ;adf7012.c: 293: float ratio = (float)freq / (float)f_pfd;
  2711  0256  085B               	movf	Set_Freq@f_pfd+3,w
  2712  0257  00AB               	movwf	___lltoft@c+3
  2713  0258  085A               	movf	Set_Freq@f_pfd+2,w
  2714  0259  00AA               	movwf	___lltoft@c+2
  2715  025A  0859               	movf	Set_Freq@f_pfd+1,w
  2716  025B  00A9               	movwf	___lltoft@c+1
  2717  025C  0858               	movf	Set_Freq@f_pfd,w
  2718  025D  00A8               	movwf	___lltoft@c
  2719  025E  3188  20A6  3181   	fcall	___lltoft
  2720  0261  0020               	movlb	0	; select bank0
  2721  0262  0828               	movf	?___lltoft,w
  2722  0263  00AE               	movwf	___ftdiv@f2
  2723  0264  0829               	movf	?___lltoft+1,w
  2724  0265  00AF               	movwf	___ftdiv@f2+1
  2725  0266  082A               	movf	?___lltoft+2,w
  2726  0267  00B0               	movwf	___ftdiv@f2+2
  2727  0268  0849               	movf	Set_Freq@freq+3,w
  2728  0269  00AB               	movwf	___lltoft@c+3
  2729  026A  0848               	movf	Set_Freq@freq+2,w
  2730  026B  00AA               	movwf	___lltoft@c+2
  2731  026C  0847               	movf	Set_Freq@freq+1,w
  2732  026D  00A9               	movwf	___lltoft@c+1
  2733  026E  0846               	movf	Set_Freq@freq,w
  2734  026F  00A8               	movwf	___lltoft@c
  2735  0270  3188  20A6  3181   	fcall	___lltoft
  2736  0273  0020               	movlb	0	; select bank0
  2737  0274  0828               	movf	?___lltoft,w
  2738  0275  00B1               	movwf	___ftdiv@f1
  2739  0276  0829               	movf	?___lltoft+1,w
  2740  0277  00B2               	movwf	___ftdiv@f1+1
  2741  0278  082A               	movf	?___lltoft+2,w
  2742  0279  00B3               	movwf	___ftdiv@f1+2
  2743  027A  318D  25EF  3181   	fcall	___ftdiv
  2744  027D  0020               	movlb	0	; select bank0
  2745  027E  082E               	movf	?___ftdiv,w
  2746  027F  00D2               	movwf	Set_Freq@ratio
  2747  0280  082F               	movf	?___ftdiv+1,w
  2748  0281  00D3               	movwf	Set_Freq@ratio+1
  2749  0282  0830               	movf	?___ftdiv+2,w
  2750  0283  00D4               	movwf	Set_Freq@ratio+2
  2751                           
  2752                           ;adf7012.c: 294: float rest = ratio - (float)n;
  2753  0284  0852               	movf	Set_Freq@ratio,w
  2754  0285  00B1               	movwf	___ftadd@f1
  2755  0286  0853               	movf	Set_Freq@ratio+1,w
  2756  0287  00B2               	movwf	___ftadd@f1+1
  2757  0288  0854               	movf	Set_Freq@ratio+2,w
  2758  0289  00B3               	movwf	___ftadd@f1+2
  2759  028A  085F               	movf	Set_Freq@n+3,w
  2760  028B  00AB               	movwf	___lltoft@c+3
  2761  028C  085E               	movf	Set_Freq@n+2,w
  2762  028D  00AA               	movwf	___lltoft@c+2
  2763  028E  085D               	movf	Set_Freq@n+1,w
  2764  028F  00A9               	movwf	___lltoft@c+1
  2765  0290  085C               	movf	Set_Freq@n,w
  2766  0291  00A8               	movwf	___lltoft@c
  2767  0292  3188  20A6  3181   	fcall	___lltoft
  2768  0295  0020               	movlb	0	; select bank0
  2769  0296  0828               	movf	?___lltoft,w
  2770  0297  00AE               	movwf	___ftneg@f1
  2771  0298  0829               	movf	?___lltoft+1,w
  2772  0299  00AF               	movwf	___ftneg@f1+1
  2773  029A  082A               	movf	?___lltoft+2,w
  2774  029B  00B0               	movwf	___ftneg@f1+2
  2775  029C  3196  26DC  3181   	fcall	___ftneg
  2776  029F  0020               	movlb	0	; select bank0
  2777  02A0  082E               	movf	?___ftneg,w
  2778  02A1  00B4               	movwf	___ftadd@f2
  2779  02A2  082F               	movf	?___ftneg+1,w
  2780  02A3  00B5               	movwf	___ftadd@f2+1
  2781  02A4  0830               	movf	?___ftneg+2,w
  2782  02A5  00B6               	movwf	___ftadd@f2+2
  2783  02A6  3182  22E7  3181   	fcall	___ftadd
  2784  02A9  0020               	movlb	0	; select bank0
  2785  02AA  0831               	movf	?___ftadd,w
  2786  02AB  00D5               	movwf	Set_Freq@rest
  2787  02AC  0832               	movf	?___ftadd+1,w
  2788  02AD  00D6               	movwf	Set_Freq@rest+1
  2789  02AE  0833               	movf	?___ftadd+2,w
  2790  02AF  00D7               	movwf	Set_Freq@rest+2
  2791                           
  2792                           ;adf7012.c: 297: uint32_t m = (uint32_t)(rest * 4096);
  2793  02B0  0855               	movf	Set_Freq@rest,w
  2794  02B1  00AB               	movwf	___ftmul@f2
  2795  02B2  0856               	movf	Set_Freq@rest+1,w
  2796  02B3  00AC               	movwf	___ftmul@f2+1
  2797  02B4  0857               	movf	Set_Freq@rest+2,w
  2798  02B5  00AD               	movwf	___ftmul@f2+2
  2799  02B6  3000               	movlw	0
  2800  02B7  00A8               	movwf	___ftmul@f1
  2801  02B8  3080               	movlw	128
  2802  02B9  00A9               	movwf	___ftmul@f1+1
  2803  02BA  3045               	movlw	69
  2804  02BB  00AA               	movwf	___ftmul@f1+2
  2805  02BC  318F  274C  3181   	fcall	___ftmul
  2806  02BF  0020               	movlb	0	; select bank0
  2807  02C0  0828               	movf	?___ftmul,w
  2808  02C1  00B8               	movwf	___fttol@f1
  2809  02C2  0829               	movf	?___ftmul+1,w
  2810  02C3  00B9               	movwf	___fttol@f1+1
  2811  02C4  082A               	movf	?___ftmul+2,w
  2812  02C5  00BA               	movwf	___fttol@f1+2
  2813  02C6  318C  24E1         	fcall	___fttol
  2814  02C8  0020               	movlb	0	; select bank0
  2815  02C9  083B               	movf	?___fttol+3,w
  2816  02CA  00D1               	movwf	Set_Freq@m+3
  2817  02CB  083A               	movf	?___fttol+2,w
  2818  02CC  00D0               	movwf	Set_Freq@m+2
  2819  02CD  0839               	movf	?___fttol+1,w
  2820  02CE  00CF               	movwf	Set_Freq@m+1
  2821  02CF  0838               	movf	?___fttol,w
  2822  02D0  00CE               	movwf	Set_Freq@m
  2823                           
  2824                           ;adf7012.c: 299: adf_config.r1.integer_n = n;
  2825  02D1  085C               	movf	Set_Freq@n,w
  2826  02D2  00CA               	movwf	??_Set_Freq
  2827  02D3  084A               	movf	??_Set_Freq,w
  2828  02D4  0021               	movlb	1	; select bank1
  2829  02D5  00AE               	movwf	(_adf_config^(0+128)+14)
  2830                           
  2831                           ;adf7012.c: 300: adf_config.r1.fractional_n = m;
  2832  02D6  0020               	movlb	0	; select bank0
  2833  02D7  0851               	movf	Set_Freq@m+3,w
  2834  02D8  0021               	movlb	1	; select bank1
  2835  02D9  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  2836  02DA  0020               	movlb	0	; select bank0
  2837  02DB  0850               	movf	Set_Freq@m+2,w
  2838  02DC  0021               	movlb	1	; select bank1
  2839  02DD  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  2840  02DE  0020               	movlb	0	; select bank0
  2841  02DF  084F               	movf	Set_Freq@m+1,w
  2842  02E0  0021               	movlb	1	; select bank1
  2843  02E1  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  2844  02E2  0020               	movlb	0	; select bank0
  2845  02E3  084E               	movf	Set_Freq@m,w
  2846  02E4  0021               	movlb	1	; select bank1
  2847  02E5  00AA               	movwf	(_adf_config^(0+128)+10)
  2848  02E6  0008               	return
  2849  02E7                     __end_of_Set_Freq:	
  2850                           
  2851                           	psect	text7
  2852  08A6                     __ptext7:	
  2853 ;; *************** function ___lltoft *****************
  2854 ;; Defined at:
  2855 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  c               4    8[BANK0 ] unsigned long 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  exp             1   13[BANK0 ] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  3    8[BANK0 ] float 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0, pclath, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2869 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2870 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2871 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2872 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2873 ;;Total ram usage:        6 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:    4
  2876 ;; This function calls:
  2877 ;;		___ftpack
  2878 ;; This function is called by:
  2879 ;;		_Set_Freq
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function ___lltoft
  2885  08A6                     ___lltoft:	
  2886                           
  2887                           ;incstack = 0
  2888                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2889  08A6  308E               	movlw	142
  2890  08A7  0020               	movlb	0	; select bank0
  2891  08A8  00AC               	movwf	??___lltoft
  2892  08A9  082C               	movf	??___lltoft,w
  2893  08AA  00AD               	movwf	___lltoft@exp
  2894  08AB                     l2499:	
  2895  08AB  30FF               	movlw	255
  2896  08AC  052B               	andwf	___lltoft@c+3,w
  2897  08AD  1903               	btfsc	3,2
  2898  08AE  28BB               	goto	l2501
  2899  08AF  3001               	movlw	1
  2900  08B0                     u3115:	
  2901  08B0  36AB               	lsrf	___lltoft@c+3,f
  2902  08B1  0CAA               	rrf	___lltoft@c+2,f
  2903  08B2  0CA9               	rrf	___lltoft@c+1,f
  2904  08B3  0CA8               	rrf	___lltoft@c,f
  2905  08B4  0B89               	decfsz	9,f
  2906  08B5  28B0               	goto	u3115
  2907  08B6  3001               	movlw	1
  2908  08B7  00AC               	movwf	??___lltoft
  2909  08B8  082C               	movf	??___lltoft,w
  2910  08B9  07AD               	addwf	___lltoft@exp,f
  2911  08BA  28AB               	goto	l2499
  2912  08BB                     l2501:	
  2913  08BB  0828               	movf	___lltoft@c,w
  2914  08BC  00A0               	movwf	___ftpack@arg
  2915  08BD  0829               	movf	___lltoft@c+1,w
  2916  08BE  00A1               	movwf	___ftpack@arg+1
  2917  08BF  082A               	movf	___lltoft@c+2,w
  2918  08C0  00A2               	movwf	___ftpack@arg+2
  2919  08C1  082D               	movf	___lltoft@exp,w
  2920  08C2  00AC               	movwf	??___lltoft
  2921  08C3  082C               	movf	??___lltoft,w
  2922  08C4  00A3               	movwf	___ftpack@exp
  2923  08C5  01A4               	clrf	___ftpack@sign
  2924  08C6  318A  2223         	fcall	___ftpack
  2925  08C8  0020               	movlb	0	; select bank0
  2926  08C9  0820               	movf	?___ftpack,w
  2927  08CA  00A8               	movwf	?___lltoft
  2928  08CB  0821               	movf	?___ftpack+1,w
  2929  08CC  00A9               	movwf	?___lltoft+1
  2930  08CD  0822               	movf	?___ftpack+2,w
  2931  08CE  00AA               	movwf	?___lltoft+2
  2932  08CF  0008               	return
  2933  08D0                     __end_of___lltoft:	
  2934                           
  2935                           	psect	text8
  2936  09D0                     __ptext8:	
  2937 ;; *************** function ___lldiv *****************
  2938 ;; Defined at:
  2939 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  divisor         4    0[BANK0 ] unsigned long 
  2942 ;;  dividend        4    4[BANK0 ] unsigned long 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  quotient        4    9[BANK0 ] unsigned long 
  2945 ;;  counter         1   13[BANK0 ] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  4    0[BANK0 ] unsigned long 
  2948 ;; Registers used:
  2949 ;;		wreg, status,2, status,0
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2955 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;Total ram usage:       14 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    3
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_Set_Freq
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           
  2970                           ;psect for function ___lldiv
  2971  09D0                     ___lldiv:	
  2972                           
  2973                           ;incstack = 0
  2974                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2975  09D0  3000               	movlw	0
  2976  09D1  0020               	movlb	0	; select bank0
  2977  09D2  00AC               	movwf	___lldiv@quotient+3
  2978  09D3  3000               	movlw	0
  2979  09D4  00AB               	movwf	___lldiv@quotient+2
  2980  09D5  3000               	movlw	0
  2981  09D6  00AA               	movwf	___lldiv@quotient+1
  2982  09D7  3000               	movlw	0
  2983  09D8  00A9               	movwf	___lldiv@quotient
  2984  09D9  0823               	movf	___lldiv@divisor+3,w
  2985  09DA  0422               	iorwf	___lldiv@divisor+2,w
  2986  09DB  0421               	iorwf	___lldiv@divisor+1,w
  2987  09DC  0420               	iorwf	___lldiv@divisor,w
  2988  09DD  1903               	skipnz
  2989  09DE  2A1A               	goto	l2491
  2990  09DF  01AD               	clrf	___lldiv@counter
  2991  09E0  0AAD               	incf	___lldiv@counter,f
  2992  09E1                     l2477:	
  2993  09E1  1BA3               	btfsc	___lldiv@divisor+3,7
  2994  09E2  29EF               	goto	l2479
  2995  09E3  3001               	movlw	1
  2996  09E4                     u3055:	
  2997  09E4  35A0               	lslf	___lldiv@divisor,f
  2998  09E5  0DA1               	rlf	___lldiv@divisor+1,f
  2999  09E6  0DA2               	rlf	___lldiv@divisor+2,f
  3000  09E7  0DA3               	rlf	___lldiv@divisor+3,f
  3001  09E8  0B89               	decfsz	9,f
  3002  09E9  29E4               	goto	u3055
  3003  09EA  3001               	movlw	1
  3004  09EB  00A8               	movwf	??___lldiv
  3005  09EC  0828               	movf	??___lldiv,w
  3006  09ED  07AD               	addwf	___lldiv@counter,f
  3007  09EE  29E1               	goto	l2477
  3008  09EF                     l2479:	
  3009  09EF  3001               	movlw	1
  3010  09F0                     u3075:	
  3011  09F0  35A9               	lslf	___lldiv@quotient,f
  3012  09F1  0DAA               	rlf	___lldiv@quotient+1,f
  3013  09F2  0DAB               	rlf	___lldiv@quotient+2,f
  3014  09F3  0DAC               	rlf	___lldiv@quotient+3,f
  3015  09F4  0B89               	decfsz	9,f
  3016  09F5  29F0               	goto	u3075
  3017  09F6  0823               	movf	___lldiv@divisor+3,w
  3018  09F7  0227               	subwf	___lldiv@dividend+3,w
  3019  09F8  1D03               	skipz
  3020  09F9  2A04               	goto	u3085
  3021  09FA  0822               	movf	___lldiv@divisor+2,w
  3022  09FB  0226               	subwf	___lldiv@dividend+2,w
  3023  09FC  1D03               	skipz
  3024  09FD  2A04               	goto	u3085
  3025  09FE  0821               	movf	___lldiv@divisor+1,w
  3026  09FF  0225               	subwf	___lldiv@dividend+1,w
  3027  0A00  1D03               	skipz
  3028  0A01  2A04               	goto	u3085
  3029  0A02  0820               	movf	___lldiv@divisor,w
  3030  0A03  0224               	subwf	___lldiv@dividend,w
  3031  0A04                     u3085:	
  3032  0A04  1C03               	skipc
  3033  0A05  2A0F               	goto	l2487
  3034  0A06  0820               	movf	___lldiv@divisor,w
  3035  0A07  02A4               	subwf	___lldiv@dividend,f
  3036  0A08  0821               	movf	___lldiv@divisor+1,w
  3037  0A09  3BA5               	subwfb	___lldiv@dividend+1,f
  3038  0A0A  0822               	movf	___lldiv@divisor+2,w
  3039  0A0B  3BA6               	subwfb	___lldiv@dividend+2,f
  3040  0A0C  0823               	movf	___lldiv@divisor+3,w
  3041  0A0D  3BA7               	subwfb	___lldiv@dividend+3,f
  3042  0A0E  1429               	bsf	___lldiv@quotient,0
  3043  0A0F                     l2487:	
  3044  0A0F  3001               	movlw	1
  3045  0A10                     u3095:	
  3046  0A10  36A3               	lsrf	___lldiv@divisor+3,f
  3047  0A11  0CA2               	rrf	___lldiv@divisor+2,f
  3048  0A12  0CA1               	rrf	___lldiv@divisor+1,f
  3049  0A13  0CA0               	rrf	___lldiv@divisor,f
  3050  0A14  0B89               	decfsz	9,f
  3051  0A15  2A10               	goto	u3095
  3052  0A16  3001               	movlw	1
  3053  0A17  02AD               	subwf	___lldiv@counter,f
  3054  0A18  1D03               	btfss	3,2
  3055  0A19  29EF               	goto	l2479
  3056  0A1A                     l2491:	
  3057  0A1A  082C               	movf	___lldiv@quotient+3,w
  3058  0A1B  00A3               	movwf	?___lldiv+3
  3059  0A1C  082B               	movf	___lldiv@quotient+2,w
  3060  0A1D  00A2               	movwf	?___lldiv+2
  3061  0A1E  082A               	movf	___lldiv@quotient+1,w
  3062  0A1F  00A1               	movwf	?___lldiv+1
  3063  0A20  0829               	movf	___lldiv@quotient,w
  3064  0A21  00A0               	movwf	?___lldiv
  3065  0A22  0008               	return
  3066  0A23                     __end_of___lldiv:	
  3067                           
  3068                           	psect	text9
  3069  0CE1                     __ptext9:	
  3070 ;; *************** function ___fttol *****************
  3071 ;; Defined at:
  3072 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  f1              3   24[BANK0 ] float 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  lval            4   33[BANK0 ] unsigned long 
  3077 ;;  exp1            1   37[BANK0 ] unsigned char 
  3078 ;;  sign1           1   32[BANK0 ] unsigned char 
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  4   24[BANK0 ] long 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3088 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;Total ram usage:       14 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    3
  3095 ;; This function calls:
  3096 ;;		Nothing
  3097 ;; This function is called by:
  3098 ;;		_Set_Freq
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function ___fttol
  3104  0CE1                     ___fttol:	
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3108  0CE1  0020               	movlb	0	; select bank0
  3109  0CE2  0838               	movf	___fttol@f1,w
  3110  0CE3  00BC               	movwf	??___fttol
  3111  0CE4  0839               	movf	___fttol@f1+1,w
  3112  0CE5  00BD               	movwf	??___fttol+1
  3113  0CE6  083A               	movf	___fttol@f1+2,w
  3114  0CE7  00BE               	movwf	??___fttol+2
  3115  0CE8  1003               	clrc
  3116  0CE9  0D3D               	rlf	??___fttol+1,w
  3117  0CEA  0D3E               	rlf	??___fttol+2,w
  3118  0CEB  00BF               	movwf	??___fttol+3
  3119  0CEC  083F               	movf	??___fttol+3,w
  3120  0CED  00C5               	movwf	___fttol@exp1
  3121  0CEE  08C5               	movf	___fttol@exp1,f
  3122  0CEF  1D03               	skipz
  3123  0CF0  2CFA               	goto	l2433
  3124  0CF1  3000               	movlw	0
  3125  0CF2  00BB               	movwf	?___fttol+3
  3126  0CF3  3000               	movlw	0
  3127  0CF4  00BA               	movwf	?___fttol+2
  3128  0CF5  3000               	movlw	0
  3129  0CF6  00B9               	movwf	?___fttol+1
  3130  0CF7  3000               	movlw	0
  3131  0CF8  00B8               	movwf	?___fttol
  3132  0CF9  0008               	return
  3133  0CFA                     l2433:	
  3134  0CFA  0838               	movf	___fttol@f1,w
  3135  0CFB  00BC               	movwf	??___fttol
  3136  0CFC  0839               	movf	___fttol@f1+1,w
  3137  0CFD  00BD               	movwf	??___fttol+1
  3138  0CFE  083A               	movf	___fttol@f1+2,w
  3139  0CFF  00BE               	movwf	??___fttol+2
  3140  0D00  3017               	movlw	23
  3141  0D01                     u2955:	
  3142  0D01  36BE               	lsrf	??___fttol+2,f
  3143  0D02  0CBD               	rrf	??___fttol+1,f
  3144  0D03  0CBC               	rrf	??___fttol,f
  3145  0D04  0B89               	decfsz	9,f
  3146  0D05  2D01               	goto	u2955
  3147  0D06  083C               	movf	??___fttol,w
  3148  0D07  00BF               	movwf	??___fttol+3
  3149  0D08  083F               	movf	??___fttol+3,w
  3150  0D09  00C0               	movwf	___fttol@sign1
  3151  0D0A  17B9               	bsf	___fttol@f1+1,7
  3152  0D0B  30FF               	movlw	255
  3153  0D0C  05B8               	andwf	___fttol@f1,f
  3154  0D0D  30FF               	movlw	255
  3155  0D0E  05B9               	andwf	___fttol@f1+1,f
  3156  0D0F  3000               	movlw	0
  3157  0D10  05BA               	andwf	___fttol@f1+2,f
  3158  0D11  0838               	movf	___fttol@f1,w
  3159  0D12  00C1               	movwf	___fttol@lval
  3160  0D13  0839               	movf	___fttol@f1+1,w
  3161  0D14  00C2               	movwf	___fttol@lval+1
  3162  0D15  083A               	movf	___fttol@f1+2,w
  3163  0D16  00C3               	movwf	___fttol@lval+2
  3164  0D17  01C4               	clrf	___fttol@lval+3
  3165  0D18  308E               	movlw	142
  3166  0D19  02C5               	subwf	___fttol@exp1,f
  3167  0D1A  1FC5               	btfss	___fttol@exp1,7
  3168  0D1B  2D38               	goto	l2453
  3169  0D1C  0845               	movf	___fttol@exp1,w
  3170  0D1D  3A80               	xorlw	128
  3171  0D1E  3E8F               	addlw	143
  3172  0D1F  1803               	skipnc
  3173  0D20  2D2A               	goto	l2451
  3174  0D21  3000               	movlw	0
  3175  0D22  00BB               	movwf	?___fttol+3
  3176  0D23  3000               	movlw	0
  3177  0D24  00BA               	movwf	?___fttol+2
  3178  0D25  3000               	movlw	0
  3179  0D26  00B9               	movwf	?___fttol+1
  3180  0D27  3000               	movlw	0
  3181  0D28  00B8               	movwf	?___fttol
  3182  0D29  0008               	return
  3183  0D2A                     l2451:	
  3184  0D2A  3001               	movlw	1
  3185  0D2B                     u2985:	
  3186  0D2B  36C4               	lsrf	___fttol@lval+3,f
  3187  0D2C  0CC3               	rrf	___fttol@lval+2,f
  3188  0D2D  0CC2               	rrf	___fttol@lval+1,f
  3189  0D2E  0CC1               	rrf	___fttol@lval,f
  3190  0D2F  0B89               	decfsz	9,f
  3191  0D30  2D2B               	goto	u2985
  3192  0D31  3001               	movlw	1
  3193  0D32  00BC               	movwf	??___fttol
  3194  0D33  083C               	movf	??___fttol,w
  3195  0D34  07C5               	addwf	___fttol@exp1,f
  3196  0D35  1903               	btfsc	3,2
  3197  0D36  2D51               	goto	l2463
  3198  0D37  2D2A               	goto	l2451
  3199  0D38                     l2453:	
  3200  0D38  3018               	movlw	24
  3201  0D39  0245               	subwf	___fttol@exp1,w
  3202  0D3A  1C03               	skipc
  3203  0D3B  2D4E               	goto	l2461
  3204  0D3C  3000               	movlw	0
  3205  0D3D  00BB               	movwf	?___fttol+3
  3206  0D3E  3000               	movlw	0
  3207  0D3F  00BA               	movwf	?___fttol+2
  3208  0D40  3000               	movlw	0
  3209  0D41  00B9               	movwf	?___fttol+1
  3210  0D42  3000               	movlw	0
  3211  0D43  00B8               	movwf	?___fttol
  3212  0D44  0008               	return
  3213  0D45                     l2459:	
  3214  0D45  3001               	movlw	1
  3215  0D46                     u3015:	
  3216  0D46  35C1               	lslf	___fttol@lval,f
  3217  0D47  0DC2               	rlf	___fttol@lval+1,f
  3218  0D48  0DC3               	rlf	___fttol@lval+2,f
  3219  0D49  0DC4               	rlf	___fttol@lval+3,f
  3220  0D4A  0B89               	decfsz	9,f
  3221  0D4B  2D46               	goto	u3015
  3222  0D4C  3001               	movlw	1
  3223  0D4D  02C5               	subwf	___fttol@exp1,f
  3224  0D4E                     l2461:	
  3225  0D4E  08C5               	movf	___fttol@exp1,f
  3226  0D4F  1D03               	skipz
  3227  0D50  2D45               	goto	l2459
  3228  0D51                     l2463:	
  3229  0D51  0840               	movf	___fttol@sign1,w
  3230  0D52  1903               	btfsc	3,2
  3231  0D53  2D5F               	goto	l2467
  3232  0D54  09C1               	comf	___fttol@lval,f
  3233  0D55  09C2               	comf	___fttol@lval+1,f
  3234  0D56  09C3               	comf	___fttol@lval+2,f
  3235  0D57  09C4               	comf	___fttol@lval+3,f
  3236  0D58  0AC1               	incf	___fttol@lval,f
  3237  0D59  1903               	skipnz
  3238  0D5A  0AC2               	incf	___fttol@lval+1,f
  3239  0D5B  1903               	skipnz
  3240  0D5C  0AC3               	incf	___fttol@lval+2,f
  3241  0D5D  1903               	skipnz
  3242  0D5E  0AC4               	incf	___fttol@lval+3,f
  3243  0D5F                     l2467:	
  3244  0D5F  0844               	movf	___fttol@lval+3,w
  3245  0D60  00BB               	movwf	?___fttol+3
  3246  0D61  0843               	movf	___fttol@lval+2,w
  3247  0D62  00BA               	movwf	?___fttol+2
  3248  0D63  0842               	movf	___fttol@lval+1,w
  3249  0D64  00B9               	movwf	?___fttol+1
  3250  0D65  0841               	movf	___fttol@lval,w
  3251  0D66  00B8               	movwf	?___fttol
  3252  0D67  0008               	return
  3253  0D68                     __end_of___fttol:	
  3254                           
  3255                           	psect	text10
  3256  16DC                     __ptext10:	
  3257 ;; *************** function ___ftneg *****************
  3258 ;; Defined at:
  3259 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  f1              3   14[BANK0 ] float 
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  3   14[BANK0 ] float 
  3266 ;; Registers used:
  3267 ;;		wreg
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3273 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3276 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3277 ;;Total ram usage:        3 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    3
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_Set_Freq
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function ___ftneg
  3289  16DC                     ___ftneg:	
  3290                           
  3291                           ;incstack = 0
  3292                           ; Regs used in ___ftneg: [wreg]
  3293  16DC  0020               	movlb	0	; select bank0
  3294  16DD  0830               	movf	___ftneg@f1+2,w
  3295  16DE  042F               	iorwf	___ftneg@f1+1,w
  3296  16DF  042E               	iorwf	___ftneg@f1,w
  3297  16E0  1903               	skipnz
  3298  16E1  0008               	return
  3299  16E2  3080               	movlw	128
  3300  16E3  06B0               	xorwf	___ftneg@f1+2,f
  3301  16E4  0008               	return
  3302  16E5                     __end_of___ftneg:	
  3303                           
  3304                           	psect	text11
  3305  0F4C                     __ptext11:	
  3306 ;; *************** function ___ftmul *****************
  3307 ;; Defined at:
  3308 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  f1              3    8[BANK0 ] float 
  3311 ;;  f2              3   11[BANK0 ] float 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  3314 ;;  sign            1   23[BANK0 ] unsigned char 
  3315 ;;  cntr            1   22[BANK0 ] unsigned char 
  3316 ;;  exp             1   18[BANK0 ] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  3    8[BANK0 ] float 
  3319 ;; Registers used:
  3320 ;;		wreg, status,2, status,0, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3326 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;Total ram usage:       16 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    4
  3333 ;; This function calls:
  3334 ;;		___ftpack
  3335 ;; This function is called by:
  3336 ;;		_Set_Freq
  3337 ;; This function uses a non-reentrant model
  3338 ;;
  3339                           
  3340                           
  3341                           ;psect for function ___ftmul
  3342  0F4C                     ___ftmul:	
  3343                           
  3344                           ;incstack = 0
  3345                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3346  0F4C  0020               	movlb	0	; select bank0
  3347  0F4D  0828               	movf	___ftmul@f1,w
  3348  0F4E  00AE               	movwf	??___ftmul
  3349  0F4F  0829               	movf	___ftmul@f1+1,w
  3350  0F50  00AF               	movwf	??___ftmul+1
  3351  0F51  082A               	movf	___ftmul@f1+2,w
  3352  0F52  00B0               	movwf	??___ftmul+2
  3353  0F53  1003               	clrc
  3354  0F54  0D2F               	rlf	??___ftmul+1,w
  3355  0F55  0D30               	rlf	??___ftmul+2,w
  3356  0F56  00B1               	movwf	??___ftmul+3
  3357  0F57  0831               	movf	??___ftmul+3,w
  3358  0F58  00B2               	movwf	___ftmul@exp
  3359  0F59  08B2               	movf	___ftmul@exp,f
  3360  0F5A  1D03               	skipz
  3361  0F5B  2F63               	goto	l2375
  3362  0F5C  3000               	movlw	0
  3363  0F5D  00A8               	movwf	?___ftmul
  3364  0F5E  3000               	movlw	0
  3365  0F5F  00A9               	movwf	?___ftmul+1
  3366  0F60  3000               	movlw	0
  3367  0F61  00AA               	movwf	?___ftmul+2
  3368  0F62  0008               	return
  3369  0F63                     l2375:	
  3370  0F63  082B               	movf	___ftmul@f2,w
  3371  0F64  00AE               	movwf	??___ftmul
  3372  0F65  082C               	movf	___ftmul@f2+1,w
  3373  0F66  00AF               	movwf	??___ftmul+1
  3374  0F67  082D               	movf	___ftmul@f2+2,w
  3375  0F68  00B0               	movwf	??___ftmul+2
  3376  0F69  1003               	clrc
  3377  0F6A  0D2F               	rlf	??___ftmul+1,w
  3378  0F6B  0D30               	rlf	??___ftmul+2,w
  3379  0F6C  00B1               	movwf	??___ftmul+3
  3380  0F6D  0831               	movf	??___ftmul+3,w
  3381  0F6E  00B7               	movwf	___ftmul@sign
  3382  0F6F  08B7               	movf	___ftmul@sign,f
  3383  0F70  1D03               	skipz
  3384  0F71  2F79               	goto	l2381
  3385  0F72  3000               	movlw	0
  3386  0F73  00A8               	movwf	?___ftmul
  3387  0F74  3000               	movlw	0
  3388  0F75  00A9               	movwf	?___ftmul+1
  3389  0F76  3000               	movlw	0
  3390  0F77  00AA               	movwf	?___ftmul+2
  3391  0F78  0008               	return
  3392  0F79                     l2381:	
  3393  0F79  0837               	movf	___ftmul@sign,w
  3394  0F7A  3E7B               	addlw	123
  3395  0F7B  00AE               	movwf	??___ftmul
  3396  0F7C  082E               	movf	??___ftmul,w
  3397  0F7D  07B2               	addwf	___ftmul@exp,f
  3398  0F7E  0828               	movf	___ftmul@f1,w
  3399  0F7F  00AE               	movwf	??___ftmul
  3400  0F80  0829               	movf	___ftmul@f1+1,w
  3401  0F81  00AF               	movwf	??___ftmul+1
  3402  0F82  082A               	movf	___ftmul@f1+2,w
  3403  0F83  00B0               	movwf	??___ftmul+2
  3404  0F84  3010               	movlw	16
  3405  0F85                     u2835:	
  3406  0F85  36B0               	lsrf	??___ftmul+2,f
  3407  0F86  0CAF               	rrf	??___ftmul+1,f
  3408  0F87  0CAE               	rrf	??___ftmul,f
  3409  0F88  0B89               	decfsz	9,f
  3410  0F89  2F85               	goto	u2835
  3411  0F8A  082E               	movf	??___ftmul,w
  3412  0F8B  00B1               	movwf	??___ftmul+3
  3413  0F8C  0831               	movf	??___ftmul+3,w
  3414  0F8D  00B7               	movwf	___ftmul@sign
  3415  0F8E  082B               	movf	___ftmul@f2,w
  3416  0F8F  00AE               	movwf	??___ftmul
  3417  0F90  082C               	movf	___ftmul@f2+1,w
  3418  0F91  00AF               	movwf	??___ftmul+1
  3419  0F92  082D               	movf	___ftmul@f2+2,w
  3420  0F93  00B0               	movwf	??___ftmul+2
  3421  0F94  3010               	movlw	16
  3422  0F95                     u2845:	
  3423  0F95  36B0               	lsrf	??___ftmul+2,f
  3424  0F96  0CAF               	rrf	??___ftmul+1,f
  3425  0F97  0CAE               	rrf	??___ftmul,f
  3426  0F98  0B89               	decfsz	9,f
  3427  0F99  2F95               	goto	u2845
  3428  0F9A  082E               	movf	??___ftmul,w
  3429  0F9B  00B1               	movwf	??___ftmul+3
  3430  0F9C  0831               	movf	??___ftmul+3,w
  3431  0F9D  06B7               	xorwf	___ftmul@sign,f
  3432  0F9E  3080               	movlw	128
  3433  0F9F  00AE               	movwf	??___ftmul
  3434  0FA0  082E               	movf	??___ftmul,w
  3435  0FA1  05B7               	andwf	___ftmul@sign,f
  3436  0FA2  17A9               	bsf	___ftmul@f1+1,7
  3437  0FA3  17AC               	bsf	___ftmul@f2+1,7
  3438  0FA4  30FF               	movlw	255
  3439  0FA5  05AB               	andwf	___ftmul@f2,f
  3440  0FA6  30FF               	movlw	255
  3441  0FA7  05AC               	andwf	___ftmul@f2+1,f
  3442  0FA8  3000               	movlw	0
  3443  0FA9  05AD               	andwf	___ftmul@f2+2,f
  3444  0FAA  3000               	movlw	0
  3445  0FAB  00B3               	movwf	___ftmul@f3_as_product
  3446  0FAC  3000               	movlw	0
  3447  0FAD  00B4               	movwf	___ftmul@f3_as_product+1
  3448  0FAE  3000               	movlw	0
  3449  0FAF  00B5               	movwf	___ftmul@f3_as_product+2
  3450  0FB0  3007               	movlw	7
  3451  0FB1  00AE               	movwf	??___ftmul
  3452  0FB2  082E               	movf	??___ftmul,w
  3453  0FB3  00B6               	movwf	___ftmul@cntr
  3454  0FB4                     l2393:	
  3455  0FB4  1C28               	btfss	___ftmul@f1,0
  3456  0FB5  2FBC               	goto	l2397
  3457  0FB6  082B               	movf	___ftmul@f2,w
  3458  0FB7  07B3               	addwf	___ftmul@f3_as_product,f
  3459  0FB8  082C               	movf	___ftmul@f2+1,w
  3460  0FB9  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  3461  0FBA  082D               	movf	___ftmul@f2+2,w
  3462  0FBB  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  3463  0FBC                     l2397:	
  3464  0FBC  3001               	movlw	1
  3465  0FBD                     u2865:	
  3466  0FBD  36AA               	lsrf	___ftmul@f1+2,f
  3467  0FBE  0CA9               	rrf	___ftmul@f1+1,f
  3468  0FBF  0CA8               	rrf	___ftmul@f1,f
  3469  0FC0  0B89               	decfsz	9,f
  3470  0FC1  2FBD               	goto	u2865
  3471  0FC2  3001               	movlw	1
  3472  0FC3                     u2875:	
  3473  0FC3  35AB               	lslf	___ftmul@f2,f
  3474  0FC4  0DAC               	rlf	___ftmul@f2+1,f
  3475  0FC5  0DAD               	rlf	___ftmul@f2+2,f
  3476  0FC6  0B89               	decfsz	9,f
  3477  0FC7  2FC3               	goto	u2875
  3478  0FC8  3001               	movlw	1
  3479  0FC9  02B6               	subwf	___ftmul@cntr,f
  3480  0FCA  1D03               	btfss	3,2
  3481  0FCB  2FB4               	goto	l2393
  3482  0FCC  3009               	movlw	9
  3483  0FCD  00AE               	movwf	??___ftmul
  3484  0FCE  082E               	movf	??___ftmul,w
  3485  0FCF  00B6               	movwf	___ftmul@cntr
  3486  0FD0                     l2405:	
  3487  0FD0  1C28               	btfss	___ftmul@f1,0
  3488  0FD1  2FD8               	goto	l2409
  3489  0FD2  082B               	movf	___ftmul@f2,w
  3490  0FD3  07B3               	addwf	___ftmul@f3_as_product,f
  3491  0FD4  082C               	movf	___ftmul@f2+1,w
  3492  0FD5  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  3493  0FD6  082D               	movf	___ftmul@f2+2,w
  3494  0FD7  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  3495  0FD8                     l2409:	
  3496  0FD8  3001               	movlw	1
  3497  0FD9                     u2905:	
  3498  0FD9  36AA               	lsrf	___ftmul@f1+2,f
  3499  0FDA  0CA9               	rrf	___ftmul@f1+1,f
  3500  0FDB  0CA8               	rrf	___ftmul@f1,f
  3501  0FDC  0B89               	decfsz	9,f
  3502  0FDD  2FD9               	goto	u2905
  3503  0FDE  3001               	movlw	1
  3504  0FDF                     u2915:	
  3505  0FDF  36B5               	lsrf	___ftmul@f3_as_product+2,f
  3506  0FE0  0CB4               	rrf	___ftmul@f3_as_product+1,f
  3507  0FE1  0CB3               	rrf	___ftmul@f3_as_product,f
  3508  0FE2  0B89               	decfsz	9,f
  3509  0FE3  2FDF               	goto	u2915
  3510  0FE4  3001               	movlw	1
  3511  0FE5  02B6               	subwf	___ftmul@cntr,f
  3512  0FE6  1D03               	btfss	3,2
  3513  0FE7  2FD0               	goto	l2405
  3514  0FE8  0833               	movf	___ftmul@f3_as_product,w
  3515  0FE9  00A0               	movwf	___ftpack@arg
  3516  0FEA  0834               	movf	___ftmul@f3_as_product+1,w
  3517  0FEB  00A1               	movwf	___ftpack@arg+1
  3518  0FEC  0835               	movf	___ftmul@f3_as_product+2,w
  3519  0FED  00A2               	movwf	___ftpack@arg+2
  3520  0FEE  0832               	movf	___ftmul@exp,w
  3521  0FEF  00AE               	movwf	??___ftmul
  3522  0FF0  082E               	movf	??___ftmul,w
  3523  0FF1  00A3               	movwf	___ftpack@exp
  3524  0FF2  0837               	movf	___ftmul@sign,w
  3525  0FF3  00AF               	movwf	??___ftmul+1
  3526  0FF4  082F               	movf	??___ftmul+1,w
  3527  0FF5  00A4               	movwf	___ftpack@sign
  3528  0FF6  318A  2223         	fcall	___ftpack
  3529  0FF8  0020               	movlb	0	; select bank0
  3530  0FF9  0820               	movf	?___ftpack,w
  3531  0FFA  00A8               	movwf	?___ftmul
  3532  0FFB  0821               	movf	?___ftpack+1,w
  3533  0FFC  00A9               	movwf	?___ftmul+1
  3534  0FFD  0822               	movf	?___ftpack+2,w
  3535  0FFE  00AA               	movwf	?___ftmul+2
  3536  0FFF  0008               	return
  3537  1000                     __end_of___ftmul:	
  3538                           
  3539                           	psect	text12
  3540  0DEF                     __ptext12:	
  3541 ;; *************** function ___ftdiv *****************
  3542 ;; Defined at:
  3543 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  f2              3   14[BANK0 ] float 
  3546 ;;  f1              3   17[BANK0 ] float 
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;  f3              3   25[BANK0 ] float 
  3549 ;;  sign            1   29[BANK0 ] unsigned char 
  3550 ;;  exp             1   28[BANK0 ] unsigned char 
  3551 ;;  cntr            1   24[BANK0 ] unsigned char 
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  3   14[BANK0 ] float 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0, pclath, cstack
  3556 ;; Tracked objects:
  3557 ;;		On entry : 0/0
  3558 ;;		On exit  : 0/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3561 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3562 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3563 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3564 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3565 ;;Total ram usage:       16 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; Hardware stack levels required when called:    4
  3568 ;; This function calls:
  3569 ;;		___ftpack
  3570 ;; This function is called by:
  3571 ;;		_Set_Freq
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function ___ftdiv
  3577  0DEF                     ___ftdiv:	
  3578                           
  3579                           ;incstack = 0
  3580                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3581  0DEF  0020               	movlb	0	; select bank0
  3582  0DF0  0831               	movf	___ftdiv@f1,w
  3583  0DF1  00B4               	movwf	??___ftdiv
  3584  0DF2  0832               	movf	___ftdiv@f1+1,w
  3585  0DF3  00B5               	movwf	??___ftdiv+1
  3586  0DF4  0833               	movf	___ftdiv@f1+2,w
  3587  0DF5  00B6               	movwf	??___ftdiv+2
  3588  0DF6  1003               	clrc
  3589  0DF7  0D35               	rlf	??___ftdiv+1,w
  3590  0DF8  0D36               	rlf	??___ftdiv+2,w
  3591  0DF9  00B7               	movwf	??___ftdiv+3
  3592  0DFA  0837               	movf	??___ftdiv+3,w
  3593  0DFB  00BC               	movwf	___ftdiv@exp
  3594  0DFC  08BC               	movf	___ftdiv@exp,f
  3595  0DFD  1D03               	skipz
  3596  0DFE  2E06               	goto	l2333
  3597  0DFF  3000               	movlw	0
  3598  0E00  00AE               	movwf	?___ftdiv
  3599  0E01  3000               	movlw	0
  3600  0E02  00AF               	movwf	?___ftdiv+1
  3601  0E03  3000               	movlw	0
  3602  0E04  00B0               	movwf	?___ftdiv+2
  3603  0E05  0008               	return
  3604  0E06                     l2333:	
  3605  0E06  082E               	movf	___ftdiv@f2,w
  3606  0E07  00B4               	movwf	??___ftdiv
  3607  0E08  082F               	movf	___ftdiv@f2+1,w
  3608  0E09  00B5               	movwf	??___ftdiv+1
  3609  0E0A  0830               	movf	___ftdiv@f2+2,w
  3610  0E0B  00B6               	movwf	??___ftdiv+2
  3611  0E0C  1003               	clrc
  3612  0E0D  0D35               	rlf	??___ftdiv+1,w
  3613  0E0E  0D36               	rlf	??___ftdiv+2,w
  3614  0E0F  00B7               	movwf	??___ftdiv+3
  3615  0E10  0837               	movf	??___ftdiv+3,w
  3616  0E11  00BD               	movwf	___ftdiv@sign
  3617  0E12  08BD               	movf	___ftdiv@sign,f
  3618  0E13  1D03               	skipz
  3619  0E14  2E1C               	goto	l2339
  3620  0E15  3000               	movlw	0
  3621  0E16  00AE               	movwf	?___ftdiv
  3622  0E17  3000               	movlw	0
  3623  0E18  00AF               	movwf	?___ftdiv+1
  3624  0E19  3000               	movlw	0
  3625  0E1A  00B0               	movwf	?___ftdiv+2
  3626  0E1B  0008               	return
  3627  0E1C                     l2339:	
  3628  0E1C  3000               	movlw	0
  3629  0E1D  00B9               	movwf	___ftdiv@f3
  3630  0E1E  3000               	movlw	0
  3631  0E1F  00BA               	movwf	___ftdiv@f3+1
  3632  0E20  3000               	movlw	0
  3633  0E21  00BB               	movwf	___ftdiv@f3+2
  3634  0E22  3089               	movlw	137
  3635  0E23  073D               	addwf	___ftdiv@sign,w
  3636  0E24  00B4               	movwf	??___ftdiv
  3637  0E25  0834               	movf	??___ftdiv,w
  3638  0E26  02BC               	subwf	___ftdiv@exp,f
  3639  0E27  0831               	movf	___ftdiv@f1,w
  3640  0E28  00B4               	movwf	??___ftdiv
  3641  0E29  0832               	movf	___ftdiv@f1+1,w
  3642  0E2A  00B5               	movwf	??___ftdiv+1
  3643  0E2B  0833               	movf	___ftdiv@f1+2,w
  3644  0E2C  00B6               	movwf	??___ftdiv+2
  3645  0E2D  3010               	movlw	16
  3646  0E2E                     u2755:	
  3647  0E2E  36B6               	lsrf	??___ftdiv+2,f
  3648  0E2F  0CB5               	rrf	??___ftdiv+1,f
  3649  0E30  0CB4               	rrf	??___ftdiv,f
  3650  0E31  0B89               	decfsz	9,f
  3651  0E32  2E2E               	goto	u2755
  3652  0E33  0834               	movf	??___ftdiv,w
  3653  0E34  00B7               	movwf	??___ftdiv+3
  3654  0E35  0837               	movf	??___ftdiv+3,w
  3655  0E36  00BD               	movwf	___ftdiv@sign
  3656  0E37  082E               	movf	___ftdiv@f2,w
  3657  0E38  00B4               	movwf	??___ftdiv
  3658  0E39  082F               	movf	___ftdiv@f2+1,w
  3659  0E3A  00B5               	movwf	??___ftdiv+1
  3660  0E3B  0830               	movf	___ftdiv@f2+2,w
  3661  0E3C  00B6               	movwf	??___ftdiv+2
  3662  0E3D  3010               	movlw	16
  3663  0E3E                     u2765:	
  3664  0E3E  36B6               	lsrf	??___ftdiv+2,f
  3665  0E3F  0CB5               	rrf	??___ftdiv+1,f
  3666  0E40  0CB4               	rrf	??___ftdiv,f
  3667  0E41  0B89               	decfsz	9,f
  3668  0E42  2E3E               	goto	u2765
  3669  0E43  0834               	movf	??___ftdiv,w
  3670  0E44  00B7               	movwf	??___ftdiv+3
  3671  0E45  0837               	movf	??___ftdiv+3,w
  3672  0E46  06BD               	xorwf	___ftdiv@sign,f
  3673  0E47  3080               	movlw	128
  3674  0E48  00B4               	movwf	??___ftdiv
  3675  0E49  0834               	movf	??___ftdiv,w
  3676  0E4A  05BD               	andwf	___ftdiv@sign,f
  3677  0E4B  17B2               	bsf	___ftdiv@f1+1,7
  3678  0E4C  30FF               	movlw	255
  3679  0E4D  05B1               	andwf	___ftdiv@f1,f
  3680  0E4E  30FF               	movlw	255
  3681  0E4F  05B2               	andwf	___ftdiv@f1+1,f
  3682  0E50  3000               	movlw	0
  3683  0E51  05B3               	andwf	___ftdiv@f1+2,f
  3684  0E52  17AF               	bsf	___ftdiv@f2+1,7
  3685  0E53  30FF               	movlw	255
  3686  0E54  05AE               	andwf	___ftdiv@f2,f
  3687  0E55  30FF               	movlw	255
  3688  0E56  05AF               	andwf	___ftdiv@f2+1,f
  3689  0E57  3000               	movlw	0
  3690  0E58  05B0               	andwf	___ftdiv@f2+2,f
  3691  0E59  3018               	movlw	24
  3692  0E5A  00B4               	movwf	??___ftdiv
  3693  0E5B  0834               	movf	??___ftdiv,w
  3694  0E5C  00B8               	movwf	___ftdiv@cntr
  3695  0E5D                     l2353:	
  3696  0E5D  3001               	movlw	1
  3697  0E5E                     u2775:	
  3698  0E5E  35B9               	lslf	___ftdiv@f3,f
  3699  0E5F  0DBA               	rlf	___ftdiv@f3+1,f
  3700  0E60  0DBB               	rlf	___ftdiv@f3+2,f
  3701  0E61  0B89               	decfsz	9,f
  3702  0E62  2E5E               	goto	u2775
  3703  0E63  0830               	movf	___ftdiv@f2+2,w
  3704  0E64  0233               	subwf	___ftdiv@f1+2,w
  3705  0E65  1D03               	skipz
  3706  0E66  2E6D               	goto	u2785
  3707  0E67  082F               	movf	___ftdiv@f2+1,w
  3708  0E68  0232               	subwf	___ftdiv@f1+1,w
  3709  0E69  1D03               	skipz
  3710  0E6A  2E6D               	goto	u2785
  3711  0E6B  082E               	movf	___ftdiv@f2,w
  3712  0E6C  0231               	subwf	___ftdiv@f1,w
  3713  0E6D                     u2785:	
  3714  0E6D  1C03               	skipc
  3715  0E6E  2E76               	goto	l2361
  3716  0E6F  082E               	movf	___ftdiv@f2,w
  3717  0E70  02B1               	subwf	___ftdiv@f1,f
  3718  0E71  082F               	movf	___ftdiv@f2+1,w
  3719  0E72  3BB2               	subwfb	___ftdiv@f1+1,f
  3720  0E73  0830               	movf	___ftdiv@f2+2,w
  3721  0E74  3BB3               	subwfb	___ftdiv@f1+2,f
  3722  0E75  1439               	bsf	___ftdiv@f3,0
  3723  0E76                     l2361:	
  3724  0E76  3001               	movlw	1
  3725  0E77                     u2795:	
  3726  0E77  35B1               	lslf	___ftdiv@f1,f
  3727  0E78  0DB2               	rlf	___ftdiv@f1+1,f
  3728  0E79  0DB3               	rlf	___ftdiv@f1+2,f
  3729  0E7A  0B89               	decfsz	9,f
  3730  0E7B  2E77               	goto	u2795
  3731  0E7C  3001               	movlw	1
  3732  0E7D  02B8               	subwf	___ftdiv@cntr,f
  3733  0E7E  1D03               	btfss	3,2
  3734  0E7F  2E5D               	goto	l2353
  3735  0E80  0839               	movf	___ftdiv@f3,w
  3736  0E81  00A0               	movwf	___ftpack@arg
  3737  0E82  083A               	movf	___ftdiv@f3+1,w
  3738  0E83  00A1               	movwf	___ftpack@arg+1
  3739  0E84  083B               	movf	___ftdiv@f3+2,w
  3740  0E85  00A2               	movwf	___ftpack@arg+2
  3741  0E86  083C               	movf	___ftdiv@exp,w
  3742  0E87  00B4               	movwf	??___ftdiv
  3743  0E88  0834               	movf	??___ftdiv,w
  3744  0E89  00A3               	movwf	___ftpack@exp
  3745  0E8A  083D               	movf	___ftdiv@sign,w
  3746  0E8B  00B5               	movwf	??___ftdiv+1
  3747  0E8C  0835               	movf	??___ftdiv+1,w
  3748  0E8D  00A4               	movwf	___ftpack@sign
  3749  0E8E  318A  2223         	fcall	___ftpack
  3750  0E90  0020               	movlb	0	; select bank0
  3751  0E91  0820               	movf	?___ftpack,w
  3752  0E92  00AE               	movwf	?___ftdiv
  3753  0E93  0821               	movf	?___ftpack+1,w
  3754  0E94  00AF               	movwf	?___ftdiv+1
  3755  0E95  0822               	movf	?___ftpack+2,w
  3756  0E96  00B0               	movwf	?___ftdiv+2
  3757  0E97  0008               	return
  3758  0E98                     __end_of___ftdiv:	
  3759                           
  3760                           	psect	text13
  3761  02E7                     __ptext13:	
  3762 ;; *************** function ___ftadd *****************
  3763 ;; Defined at:
  3764 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  f1              3   17[BANK0 ] float 
  3767 ;;  f2              3   20[BANK0 ] float 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  exp1            1   29[BANK0 ] unsigned char 
  3770 ;;  exp2            1   28[BANK0 ] unsigned char 
  3771 ;;  sign            1   27[BANK0 ] unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  3   17[BANK0 ] float 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, status,0, pclath, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3781 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3784 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;Total ram usage:       13 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    4
  3788 ;; This function calls:
  3789 ;;		___ftpack
  3790 ;; This function is called by:
  3791 ;;		_Set_Freq
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           
  3796                           ;psect for function ___ftadd
  3797  02E7                     ___ftadd:	
  3798                           
  3799                           ;incstack = 0
  3800                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3801  02E7  0020               	movlb	0	; select bank0
  3802  02E8  0831               	movf	___ftadd@f1,w
  3803  02E9  00B7               	movwf	??___ftadd
  3804  02EA  0832               	movf	___ftadd@f1+1,w
  3805  02EB  00B8               	movwf	??___ftadd+1
  3806  02EC  0833               	movf	___ftadd@f1+2,w
  3807  02ED  00B9               	movwf	??___ftadd+2
  3808  02EE  1003               	clrc
  3809  02EF  0D38               	rlf	??___ftadd+1,w
  3810  02F0  0D39               	rlf	??___ftadd+2,w
  3811  02F1  00BA               	movwf	??___ftadd+3
  3812  02F2  083A               	movf	??___ftadd+3,w
  3813  02F3  00BD               	movwf	___ftadd@exp1
  3814  02F4  0834               	movf	___ftadd@f2,w
  3815  02F5  00B7               	movwf	??___ftadd
  3816  02F6  0835               	movf	___ftadd@f2+1,w
  3817  02F7  00B8               	movwf	??___ftadd+1
  3818  02F8  0836               	movf	___ftadd@f2+2,w
  3819  02F9  00B9               	movwf	??___ftadd+2
  3820  02FA  1003               	clrc
  3821  02FB  0D38               	rlf	??___ftadd+1,w
  3822  02FC  0D39               	rlf	??___ftadd+2,w
  3823  02FD  00BA               	movwf	??___ftadd+3
  3824  02FE  083A               	movf	??___ftadd+3,w
  3825  02FF  00BC               	movwf	___ftadd@exp2
  3826  0300  083D               	movf	___ftadd@exp1,w
  3827  0301  1903               	btfsc	3,2
  3828  0302  2B0F               	goto	l2263
  3829  0303  083C               	movf	___ftadd@exp2,w
  3830  0304  023D               	subwf	___ftadd@exp1,w
  3831  0305  1803               	skipnc
  3832  0306  2B16               	goto	l2267
  3833  0307  033D               	decf	___ftadd@exp1,w
  3834  0308  3AFF               	xorlw	255
  3835  0309  073C               	addwf	___ftadd@exp2,w
  3836  030A  00B7               	movwf	??___ftadd
  3837  030B  3019               	movlw	25
  3838  030C  0237               	subwf	??___ftadd,w
  3839  030D  1C03               	skipc
  3840  030E  2B16               	goto	l2267
  3841  030F                     l2263:	
  3842  030F  0834               	movf	___ftadd@f2,w
  3843  0310  00B1               	movwf	?___ftadd
  3844  0311  0835               	movf	___ftadd@f2+1,w
  3845  0312  00B2               	movwf	?___ftadd+1
  3846  0313  0836               	movf	___ftadd@f2+2,w
  3847  0314  00B3               	movwf	?___ftadd+2
  3848  0315  0008               	return
  3849  0316                     l2267:	
  3850  0316  083C               	movf	___ftadd@exp2,w
  3851  0317  1903               	btfsc	3,2
  3852  0318  0008               	return
  3853  0319  083D               	movf	___ftadd@exp1,w
  3854  031A  023C               	subwf	___ftadd@exp2,w
  3855  031B  1803               	skipnc
  3856  031C  2B25               	goto	l2273
  3857  031D  033C               	decf	___ftadd@exp2,w
  3858  031E  3AFF               	xorlw	255
  3859  031F  073D               	addwf	___ftadd@exp1,w
  3860  0320  00B7               	movwf	??___ftadd
  3861  0321  3019               	movlw	25
  3862  0322  0237               	subwf	??___ftadd,w
  3863  0323  1803               	btfsc	3,0
  3864  0324  0008               	return
  3865  0325                     l2273:	
  3866  0325  3006               	movlw	6
  3867  0326  00B7               	movwf	??___ftadd
  3868  0327  0837               	movf	??___ftadd,w
  3869  0328  00BB               	movwf	___ftadd@sign
  3870  0329  1BB3               	btfsc	___ftadd@f1+2,7
  3871  032A  17BB               	bsf	___ftadd@sign,7
  3872  032B  1BB6               	btfsc	___ftadd@f2+2,7
  3873  032C  173B               	bsf	___ftadd@sign,6
  3874  032D  17B2               	bsf	___ftadd@f1+1,7
  3875  032E  30FF               	movlw	255
  3876  032F  05B1               	andwf	___ftadd@f1,f
  3877  0330  30FF               	movlw	255
  3878  0331  05B2               	andwf	___ftadd@f1+1,f
  3879  0332  3000               	movlw	0
  3880  0333  05B3               	andwf	___ftadd@f1+2,f
  3881  0334  17B5               	bsf	___ftadd@f2+1,7
  3882  0335  30FF               	movlw	255
  3883  0336  05B4               	andwf	___ftadd@f2,f
  3884  0337  30FF               	movlw	255
  3885  0338  05B5               	andwf	___ftadd@f2+1,f
  3886  0339  3000               	movlw	0
  3887  033A  05B6               	andwf	___ftadd@f2+2,f
  3888  033B  083C               	movf	___ftadd@exp2,w
  3889  033C  023D               	subwf	___ftadd@exp1,w
  3890  033D  1803               	skipnc
  3891  033E  2B61               	goto	l2295
  3892  033F                     l2285:	
  3893  033F  3001               	movlw	1
  3894  0340                     u2595:	
  3895  0340  35B4               	lslf	___ftadd@f2,f
  3896  0341  0DB5               	rlf	___ftadd@f2+1,f
  3897  0342  0DB6               	rlf	___ftadd@f2+2,f
  3898  0343  0B89               	decfsz	9,f
  3899  0344  2B40               	goto	u2595
  3900  0345  3001               	movlw	1
  3901  0346  02BC               	subwf	___ftadd@exp2,f
  3902  0347  083C               	movf	___ftadd@exp2,w
  3903  0348  063D               	xorwf	___ftadd@exp1,w
  3904  0349  1903               	skipnz
  3905  034A  2B5C               	goto	l2293
  3906  034B  3001               	movlw	1
  3907  034C  02BB               	subwf	___ftadd@sign,f
  3908  034D  083B               	movf	___ftadd@sign,w
  3909  034E  3907               	andlw	7
  3910  034F  1903               	btfsc	3,2
  3911  0350  2B5C               	goto	l2293
  3912  0351  2B3F               	goto	l2285
  3913  0352                     l2291:	
  3914  0352  3001               	movlw	1
  3915  0353                     u2625:	
  3916  0353  36B3               	lsrf	___ftadd@f1+2,f
  3917  0354  0CB2               	rrf	___ftadd@f1+1,f
  3918  0355  0CB1               	rrf	___ftadd@f1,f
  3919  0356  0B89               	decfsz	9,f
  3920  0357  2B53               	goto	u2625
  3921  0358  3001               	movlw	1
  3922  0359  00B7               	movwf	??___ftadd
  3923  035A  0837               	movf	??___ftadd,w
  3924  035B  07BD               	addwf	___ftadd@exp1,f
  3925  035C                     l2293:	
  3926  035C  083D               	movf	___ftadd@exp1,w
  3927  035D  063C               	xorwf	___ftadd@exp2,w
  3928  035E  1903               	btfsc	3,2
  3929  035F  2B86               	goto	l772
  3930  0360  2B52               	goto	l2291
  3931  0361                     l2295:	
  3932  0361  083D               	movf	___ftadd@exp1,w
  3933  0362  023C               	subwf	___ftadd@exp2,w
  3934  0363  1803               	skipnc
  3935  0364  2B86               	goto	l772
  3936  0365                     l2297:	
  3937  0365  3001               	movlw	1
  3938  0366                     u2655:	
  3939  0366  35B1               	lslf	___ftadd@f1,f
  3940  0367  0DB2               	rlf	___ftadd@f1+1,f
  3941  0368  0DB3               	rlf	___ftadd@f1+2,f
  3942  0369  0B89               	decfsz	9,f
  3943  036A  2B66               	goto	u2655
  3944  036B  3001               	movlw	1
  3945  036C  02BD               	subwf	___ftadd@exp1,f
  3946  036D  083C               	movf	___ftadd@exp2,w
  3947  036E  063D               	xorwf	___ftadd@exp1,w
  3948  036F  1903               	skipnz
  3949  0370  2B82               	goto	l2305
  3950  0371  3001               	movlw	1
  3951  0372  02BB               	subwf	___ftadd@sign,f
  3952  0373  083B               	movf	___ftadd@sign,w
  3953  0374  3907               	andlw	7
  3954  0375  1903               	btfsc	3,2
  3955  0376  2B82               	goto	l2305
  3956  0377  2B65               	goto	l2297
  3957  0378                     l2303:	
  3958  0378  3001               	movlw	1
  3959  0379                     u2685:	
  3960  0379  36B6               	lsrf	___ftadd@f2+2,f
  3961  037A  0CB5               	rrf	___ftadd@f2+1,f
  3962  037B  0CB4               	rrf	___ftadd@f2,f
  3963  037C  0B89               	decfsz	9,f
  3964  037D  2B79               	goto	u2685
  3965  037E  3001               	movlw	1
  3966  037F  00B7               	movwf	??___ftadd
  3967  0380  0837               	movf	??___ftadd,w
  3968  0381  07BC               	addwf	___ftadd@exp2,f
  3969  0382                     l2305:	
  3970  0382  083D               	movf	___ftadd@exp1,w
  3971  0383  063C               	xorwf	___ftadd@exp2,w
  3972  0384  1D03               	skipz
  3973  0385  2B78               	goto	l2303
  3974  0386                     l772:	
  3975  0386  1FBB               	btfss	___ftadd@sign,7
  3976  0387  2B98               	goto	l2309
  3977  0388  30FF               	movlw	255
  3978  0389  06B1               	xorwf	___ftadd@f1,f
  3979  038A  30FF               	movlw	255
  3980  038B  06B2               	xorwf	___ftadd@f1+1,f
  3981  038C  30FF               	movlw	255
  3982  038D  06B3               	xorwf	___ftadd@f1+2,f
  3983  038E  3001               	movlw	1
  3984  038F  07B1               	addwf	___ftadd@f1,f
  3985  0390  3000               	movlw	0
  3986  0391  1803               	skipnc
  3987  0392  3001               	movlw	1
  3988  0393  07B2               	addwf	___ftadd@f1+1,f
  3989  0394  3000               	movlw	0
  3990  0395  1803               	skipnc
  3991  0396  3001               	movlw	1
  3992  0397  07B3               	addwf	___ftadd@f1+2,f
  3993  0398                     l2309:	
  3994  0398  1F3B               	btfss	___ftadd@sign,6
  3995  0399  2BAA               	goto	l2313
  3996  039A  30FF               	movlw	255
  3997  039B  06B4               	xorwf	___ftadd@f2,f
  3998  039C  30FF               	movlw	255
  3999  039D  06B5               	xorwf	___ftadd@f2+1,f
  4000  039E  30FF               	movlw	255
  4001  039F  06B6               	xorwf	___ftadd@f2+2,f
  4002  03A0  3001               	movlw	1
  4003  03A1  07B4               	addwf	___ftadd@f2,f
  4004  03A2  3000               	movlw	0
  4005  03A3  1803               	skipnc
  4006  03A4  3001               	movlw	1
  4007  03A5  07B5               	addwf	___ftadd@f2+1,f
  4008  03A6  3000               	movlw	0
  4009  03A7  1803               	skipnc
  4010  03A8  3001               	movlw	1
  4011  03A9  07B6               	addwf	___ftadd@f2+2,f
  4012  03AA                     l2313:	
  4013  03AA  01BB               	clrf	___ftadd@sign
  4014  03AB  0831               	movf	___ftadd@f1,w
  4015  03AC  07B4               	addwf	___ftadd@f2,f
  4016  03AD  0832               	movf	___ftadd@f1+1,w
  4017  03AE  3DB5               	addwfc	___ftadd@f2+1,f
  4018  03AF  0833               	movf	___ftadd@f1+2,w
  4019  03B0  3DB6               	addwfc	___ftadd@f2+2,f
  4020  03B1  1FB6               	btfss	___ftadd@f2+2,7
  4021  03B2  2BC5               	goto	l2323
  4022  03B3  30FF               	movlw	255
  4023  03B4  06B4               	xorwf	___ftadd@f2,f
  4024  03B5  30FF               	movlw	255
  4025  03B6  06B5               	xorwf	___ftadd@f2+1,f
  4026  03B7  30FF               	movlw	255
  4027  03B8  06B6               	xorwf	___ftadd@f2+2,f
  4028  03B9  3001               	movlw	1
  4029  03BA  07B4               	addwf	___ftadd@f2,f
  4030  03BB  3000               	movlw	0
  4031  03BC  1803               	skipnc
  4032  03BD  3001               	movlw	1
  4033  03BE  07B5               	addwf	___ftadd@f2+1,f
  4034  03BF  3000               	movlw	0
  4035  03C0  1803               	skipnc
  4036  03C1  3001               	movlw	1
  4037  03C2  07B6               	addwf	___ftadd@f2+2,f
  4038  03C3  01BB               	clrf	___ftadd@sign
  4039  03C4  0ABB               	incf	___ftadd@sign,f
  4040  03C5                     l2323:	
  4041  03C5  0834               	movf	___ftadd@f2,w
  4042  03C6  00A0               	movwf	___ftpack@arg
  4043  03C7  0835               	movf	___ftadd@f2+1,w
  4044  03C8  00A1               	movwf	___ftpack@arg+1
  4045  03C9  0836               	movf	___ftadd@f2+2,w
  4046  03CA  00A2               	movwf	___ftpack@arg+2
  4047  03CB  083D               	movf	___ftadd@exp1,w
  4048  03CC  00B7               	movwf	??___ftadd
  4049  03CD  0837               	movf	??___ftadd,w
  4050  03CE  00A3               	movwf	___ftpack@exp
  4051  03CF  083B               	movf	___ftadd@sign,w
  4052  03D0  00B8               	movwf	??___ftadd+1
  4053  03D1  0838               	movf	??___ftadd+1,w
  4054  03D2  00A4               	movwf	___ftpack@sign
  4055  03D3  318A  2223         	fcall	___ftpack
  4056  03D5  0020               	movlb	0	; select bank0
  4057  03D6  0820               	movf	?___ftpack,w
  4058  03D7  00B1               	movwf	?___ftadd
  4059  03D8  0821               	movf	?___ftpack+1,w
  4060  03D9  00B2               	movwf	?___ftadd+1
  4061  03DA  0822               	movf	?___ftpack+2,w
  4062  03DB  00B3               	movwf	?___ftadd+2
  4063  03DC  0008               	return
  4064  03DD                     __end_of___ftadd:	
  4065                           
  4066                           	psect	text14
  4067  0A23                     __ptext14:	
  4068 ;; *************** function ___ftpack *****************
  4069 ;; Defined at:
  4070 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  arg             3    0[BANK0 ] unsigned um
  4073 ;;  exp             1    3[BANK0 ] unsigned char 
  4074 ;;  sign            1    4[BANK0 ] unsigned char 
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  3    0[BANK0 ] float 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4086 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4088 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4089 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4090 ;;Total ram usage:        8 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    3
  4093 ;; This function calls:
  4094 ;;		Nothing
  4095 ;; This function is called by:
  4096 ;;		___ftadd
  4097 ;;		___ftdiv
  4098 ;;		___ftmul
  4099 ;;		___lltoft
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           
  4104                           ;psect for function ___ftpack
  4105  0A23                     ___ftpack:	
  4106                           
  4107                           ;incstack = 0
  4108                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4109  0A23  0020               	movlb	0	; select bank0
  4110  0A24  0823               	movf	___ftpack@exp,w
  4111  0A25  1903               	btfsc	3,2
  4112  0A26  2A2C               	goto	l2121
  4113  0A27  0822               	movf	___ftpack@arg+2,w
  4114  0A28  0421               	iorwf	___ftpack@arg+1,w
  4115  0A29  0420               	iorwf	___ftpack@arg,w
  4116  0A2A  1D03               	skipz
  4117  0A2B  2A3D               	goto	l2127
  4118  0A2C                     l2121:	
  4119  0A2C  3000               	movlw	0
  4120  0A2D  00A0               	movwf	?___ftpack
  4121  0A2E  3000               	movlw	0
  4122  0A2F  00A1               	movwf	?___ftpack+1
  4123  0A30  3000               	movlw	0
  4124  0A31  00A2               	movwf	?___ftpack+2
  4125  0A32  0008               	return
  4126  0A33                     l2125:	
  4127  0A33  3001               	movlw	1
  4128  0A34  00A5               	movwf	??___ftpack
  4129  0A35  0825               	movf	??___ftpack,w
  4130  0A36  07A3               	addwf	___ftpack@exp,f
  4131  0A37  3001               	movlw	1
  4132  0A38                     u2305:	
  4133  0A38  36A2               	lsrf	___ftpack@arg+2,f
  4134  0A39  0CA1               	rrf	___ftpack@arg+1,f
  4135  0A3A  0CA0               	rrf	___ftpack@arg,f
  4136  0A3B  0B89               	decfsz	9,f
  4137  0A3C  2A38               	goto	u2305
  4138  0A3D                     l2127:	
  4139  0A3D  30FE               	movlw	254
  4140  0A3E  0522               	andwf	___ftpack@arg+2,w
  4141  0A3F  1903               	btfsc	3,2
  4142  0A40  2A56               	goto	l743
  4143  0A41  2A33               	goto	l2125
  4144  0A42                     l2129:	
  4145  0A42  3001               	movlw	1
  4146  0A43  00A5               	movwf	??___ftpack
  4147  0A44  0825               	movf	??___ftpack,w
  4148  0A45  07A3               	addwf	___ftpack@exp,f
  4149  0A46  3001               	movlw	1
  4150  0A47  07A0               	addwf	___ftpack@arg,f
  4151  0A48  3000               	movlw	0
  4152  0A49  1803               	skipnc
  4153  0A4A  3001               	movlw	1
  4154  0A4B  07A1               	addwf	___ftpack@arg+1,f
  4155  0A4C  3000               	movlw	0
  4156  0A4D  1803               	skipnc
  4157  0A4E  3001               	movlw	1
  4158  0A4F  07A2               	addwf	___ftpack@arg+2,f
  4159  0A50  3001               	movlw	1
  4160  0A51                     u2325:	
  4161  0A51  36A2               	lsrf	___ftpack@arg+2,f
  4162  0A52  0CA1               	rrf	___ftpack@arg+1,f
  4163  0A53  0CA0               	rrf	___ftpack@arg,f
  4164  0A54  0B89               	decfsz	9,f
  4165  0A55  2A51               	goto	u2325
  4166  0A56                     l743:	
  4167  0A56  30FF               	movlw	255
  4168  0A57  0522               	andwf	___ftpack@arg+2,w
  4169  0A58  1903               	btfsc	3,2
  4170  0A59  2A63               	goto	l2137
  4171  0A5A  2A42               	goto	l2129
  4172  0A5B                     l2135:	
  4173  0A5B  3001               	movlw	1
  4174  0A5C  02A3               	subwf	___ftpack@exp,f
  4175  0A5D  3001               	movlw	1
  4176  0A5E                     u2345:	
  4177  0A5E  35A0               	lslf	___ftpack@arg,f
  4178  0A5F  0DA1               	rlf	___ftpack@arg+1,f
  4179  0A60  0DA2               	rlf	___ftpack@arg+2,f
  4180  0A61  0B89               	decfsz	9,f
  4181  0A62  2A5E               	goto	u2345
  4182  0A63                     l2137:	
  4183  0A63  1FA1               	btfss	___ftpack@arg+1,7
  4184  0A64  2A5B               	goto	l2135
  4185  0A65  1823               	btfsc	___ftpack@exp,0
  4186  0A66  2A6D               	goto	l749
  4187  0A67  30FF               	movlw	255
  4188  0A68  05A0               	andwf	___ftpack@arg,f
  4189  0A69  307F               	movlw	127
  4190  0A6A  05A1               	andwf	___ftpack@arg+1,f
  4191  0A6B  30FF               	movlw	255
  4192  0A6C  05A2               	andwf	___ftpack@arg+2,f
  4193  0A6D                     l749:	
  4194  0A6D  1003               	clrc
  4195  0A6E  0CA3               	rrf	___ftpack@exp,f
  4196  0A6F  0823               	movf	___ftpack@exp,w
  4197  0A70  00A5               	movwf	??___ftpack
  4198  0A71  01A6               	clrf	??___ftpack+1
  4199  0A72  01A7               	clrf	??___ftpack+2
  4200  0A73  3010               	movlw	16
  4201  0A74                     u2375:	
  4202  0A74  35A5               	lslf	??___ftpack,f
  4203  0A75  0DA6               	rlf	??___ftpack+1,f
  4204  0A76  0DA7               	rlf	??___ftpack+2,f
  4205  0A77  0B89               	decfsz	9,f
  4206  0A78  2A74               	goto	u2375
  4207  0A79  0825               	movf	??___ftpack,w
  4208  0A7A  04A0               	iorwf	___ftpack@arg,f
  4209  0A7B  0826               	movf	??___ftpack+1,w
  4210  0A7C  04A1               	iorwf	___ftpack@arg+1,f
  4211  0A7D  0827               	movf	??___ftpack+2,w
  4212  0A7E  04A2               	iorwf	___ftpack@arg+2,f
  4213  0A7F  0824               	movf	___ftpack@sign,w
  4214  0A80  1903               	btfsc	3,2
  4215  0A81  0008               	return
  4216  0A82  17A2               	bsf	___ftpack@arg+2,7
  4217  0A83  0008               	return
  4218  0A84                     __end_of___ftpack:	
  4219                           
  4220                           	psect	text15
  4221  0C5F                     __ptext15:	
  4222 ;; *************** function ___aldiv *****************
  4223 ;; Defined at:
  4224 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  divisor         4    0[BANK0 ] long 
  4227 ;;  dividend        4    4[BANK0 ] long 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  quotient        4   11[BANK0 ] long 
  4230 ;;  sign            1   10[BANK0 ] unsigned char 
  4231 ;;  counter         1    9[BANK0 ] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  4    0[BANK0 ] long 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, status,0
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4241 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4242 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4244 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;Total ram usage:       15 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    3
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_Set_Freq
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           
  4256                           ;psect for function ___aldiv
  4257  0C5F                     ___aldiv:	
  4258                           
  4259                           ;incstack = 0
  4260                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4261  0C5F  0020               	movlb	0	; select bank0
  4262  0C60  01AA               	clrf	___aldiv@sign
  4263  0C61  1FA3               	btfss	___aldiv@divisor+3,7
  4264  0C62  2C70               	goto	l637
  4265  0C63  09A0               	comf	___aldiv@divisor,f
  4266  0C64  09A1               	comf	___aldiv@divisor+1,f
  4267  0C65  09A2               	comf	___aldiv@divisor+2,f
  4268  0C66  09A3               	comf	___aldiv@divisor+3,f
  4269  0C67  0AA0               	incf	___aldiv@divisor,f
  4270  0C68  1903               	skipnz
  4271  0C69  0AA1               	incf	___aldiv@divisor+1,f
  4272  0C6A  1903               	skipnz
  4273  0C6B  0AA2               	incf	___aldiv@divisor+2,f
  4274  0C6C  1903               	skipnz
  4275  0C6D  0AA3               	incf	___aldiv@divisor+3,f
  4276  0C6E  01AA               	clrf	___aldiv@sign
  4277  0C6F  0AAA               	incf	___aldiv@sign,f
  4278  0C70                     l637:	
  4279  0C70  1FA7               	btfss	___aldiv@dividend+3,7
  4280  0C71  2C81               	goto	l2225
  4281  0C72  09A4               	comf	___aldiv@dividend,f
  4282  0C73  09A5               	comf	___aldiv@dividend+1,f
  4283  0C74  09A6               	comf	___aldiv@dividend+2,f
  4284  0C75  09A7               	comf	___aldiv@dividend+3,f
  4285  0C76  0AA4               	incf	___aldiv@dividend,f
  4286  0C77  1903               	skipnz
  4287  0C78  0AA5               	incf	___aldiv@dividend+1,f
  4288  0C79  1903               	skipnz
  4289  0C7A  0AA6               	incf	___aldiv@dividend+2,f
  4290  0C7B  1903               	skipnz
  4291  0C7C  0AA7               	incf	___aldiv@dividend+3,f
  4292  0C7D  3001               	movlw	1
  4293  0C7E  00A8               	movwf	??___aldiv
  4294  0C7F  0828               	movf	??___aldiv,w
  4295  0C80  06AA               	xorwf	___aldiv@sign,f
  4296  0C81                     l2225:	
  4297  0C81  3000               	movlw	0
  4298  0C82  00AE               	movwf	___aldiv@quotient+3
  4299  0C83  3000               	movlw	0
  4300  0C84  00AD               	movwf	___aldiv@quotient+2
  4301  0C85  3000               	movlw	0
  4302  0C86  00AC               	movwf	___aldiv@quotient+1
  4303  0C87  3000               	movlw	0
  4304  0C88  00AB               	movwf	___aldiv@quotient
  4305  0C89  0823               	movf	___aldiv@divisor+3,w
  4306  0C8A  0422               	iorwf	___aldiv@divisor+2,w
  4307  0C8B  0421               	iorwf	___aldiv@divisor+1,w
  4308  0C8C  0420               	iorwf	___aldiv@divisor,w
  4309  0C8D  1903               	skipnz
  4310  0C8E  2CCA               	goto	l2247
  4311  0C8F  01A9               	clrf	___aldiv@counter
  4312  0C90  0AA9               	incf	___aldiv@counter,f
  4313  0C91                     l2233:	
  4314  0C91  1BA3               	btfsc	___aldiv@divisor+3,7
  4315  0C92  2C9F               	goto	l2235
  4316  0C93  3001               	movlw	1
  4317  0C94                     u2435:	
  4318  0C94  35A0               	lslf	___aldiv@divisor,f
  4319  0C95  0DA1               	rlf	___aldiv@divisor+1,f
  4320  0C96  0DA2               	rlf	___aldiv@divisor+2,f
  4321  0C97  0DA3               	rlf	___aldiv@divisor+3,f
  4322  0C98  0B89               	decfsz	9,f
  4323  0C99  2C94               	goto	u2435
  4324  0C9A  3001               	movlw	1
  4325  0C9B  00A8               	movwf	??___aldiv
  4326  0C9C  0828               	movf	??___aldiv,w
  4327  0C9D  07A9               	addwf	___aldiv@counter,f
  4328  0C9E  2C91               	goto	l2233
  4329  0C9F                     l2235:	
  4330  0C9F  3001               	movlw	1
  4331  0CA0                     u2455:	
  4332  0CA0  35AB               	lslf	___aldiv@quotient,f
  4333  0CA1  0DAC               	rlf	___aldiv@quotient+1,f
  4334  0CA2  0DAD               	rlf	___aldiv@quotient+2,f
  4335  0CA3  0DAE               	rlf	___aldiv@quotient+3,f
  4336  0CA4  0B89               	decfsz	9,f
  4337  0CA5  2CA0               	goto	u2455
  4338  0CA6  0823               	movf	___aldiv@divisor+3,w
  4339  0CA7  0227               	subwf	___aldiv@dividend+3,w
  4340  0CA8  1D03               	skipz
  4341  0CA9  2CB4               	goto	u2465
  4342  0CAA  0822               	movf	___aldiv@divisor+2,w
  4343  0CAB  0226               	subwf	___aldiv@dividend+2,w
  4344  0CAC  1D03               	skipz
  4345  0CAD  2CB4               	goto	u2465
  4346  0CAE  0821               	movf	___aldiv@divisor+1,w
  4347  0CAF  0225               	subwf	___aldiv@dividend+1,w
  4348  0CB0  1D03               	skipz
  4349  0CB1  2CB4               	goto	u2465
  4350  0CB2  0820               	movf	___aldiv@divisor,w
  4351  0CB3  0224               	subwf	___aldiv@dividend,w
  4352  0CB4                     u2465:	
  4353  0CB4  1C03               	skipc
  4354  0CB5  2CBF               	goto	l2243
  4355  0CB6  0820               	movf	___aldiv@divisor,w
  4356  0CB7  02A4               	subwf	___aldiv@dividend,f
  4357  0CB8  0821               	movf	___aldiv@divisor+1,w
  4358  0CB9  3BA5               	subwfb	___aldiv@dividend+1,f
  4359  0CBA  0822               	movf	___aldiv@divisor+2,w
  4360  0CBB  3BA6               	subwfb	___aldiv@dividend+2,f
  4361  0CBC  0823               	movf	___aldiv@divisor+3,w
  4362  0CBD  3BA7               	subwfb	___aldiv@dividend+3,f
  4363  0CBE  142B               	bsf	___aldiv@quotient,0
  4364  0CBF                     l2243:	
  4365  0CBF  3001               	movlw	1
  4366  0CC0                     u2475:	
  4367  0CC0  36A3               	lsrf	___aldiv@divisor+3,f
  4368  0CC1  0CA2               	rrf	___aldiv@divisor+2,f
  4369  0CC2  0CA1               	rrf	___aldiv@divisor+1,f
  4370  0CC3  0CA0               	rrf	___aldiv@divisor,f
  4371  0CC4  0B89               	decfsz	9,f
  4372  0CC5  2CC0               	goto	u2475
  4373  0CC6  3001               	movlw	1
  4374  0CC7  02A9               	subwf	___aldiv@counter,f
  4375  0CC8  1D03               	btfss	3,2
  4376  0CC9  2C9F               	goto	l2235
  4377  0CCA                     l2247:	
  4378  0CCA  082A               	movf	___aldiv@sign,w
  4379  0CCB  1903               	btfsc	3,2
  4380  0CCC  2CD8               	goto	l2251
  4381  0CCD  09AB               	comf	___aldiv@quotient,f
  4382  0CCE  09AC               	comf	___aldiv@quotient+1,f
  4383  0CCF  09AD               	comf	___aldiv@quotient+2,f
  4384  0CD0  09AE               	comf	___aldiv@quotient+3,f
  4385  0CD1  0AAB               	incf	___aldiv@quotient,f
  4386  0CD2  1903               	skipnz
  4387  0CD3  0AAC               	incf	___aldiv@quotient+1,f
  4388  0CD4  1903               	skipnz
  4389  0CD5  0AAD               	incf	___aldiv@quotient+2,f
  4390  0CD6  1903               	skipnz
  4391  0CD7  0AAE               	incf	___aldiv@quotient+3,f
  4392  0CD8                     l2251:	
  4393  0CD8  082E               	movf	___aldiv@quotient+3,w
  4394  0CD9  00A3               	movwf	?___aldiv+3
  4395  0CDA  082D               	movf	___aldiv@quotient+2,w
  4396  0CDB  00A2               	movwf	?___aldiv+2
  4397  0CDC  082C               	movf	___aldiv@quotient+1,w
  4398  0CDD  00A1               	movwf	?___aldiv+1
  4399  0CDE  082B               	movf	___aldiv@quotient,w
  4400  0CDF  00A0               	movwf	?___aldiv
  4401  0CE0  0008               	return
  4402  0CE1                     __end_of___aldiv:	
  4403                           
  4404                           	psect	text16
  4405  172C                     __ptext16:	
  4406 ;; *************** function _Gpio_Config *****************
  4407 ;; Defined at:
  4408 ;;		line 37 in file "utility.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      unsigned char 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;Total ram usage:        1 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    3
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;;		_Radio_Setup
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           
  4438                           ;psect for function _Gpio_Config
  4439  172C                     _Gpio_Config:	
  4440                           
  4441                           ;utility.c: 40: TRISA |= 0b00000010;
  4442                           
  4443                           ;incstack = 0
  4444                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  4445  172C  0021               	movlb	1	; select bank1
  4446  172D  148C               	bsf	12,1	;volatile
  4447                           
  4448                           ;utility.c: 41: TRISA &= 0b11001011;
  4449  172E  30CB               	movlw	203
  4450  172F  0020               	movlb	0	; select bank0
  4451  1730  00A0               	movwf	??_Gpio_Config
  4452  1731  0820               	movf	??_Gpio_Config,w
  4453  1732  0021               	movlb	1	; select bank1
  4454  1733  058C               	andwf	12,f	;volatile
  4455                           
  4456                           ;utility.c: 42: TRISC |= 0b00100000;
  4457  1734  168E               	bsf	14,5	;volatile
  4458                           
  4459                           ;utility.c: 43: TRISC &= 0b11100000;
  4460  1735  30E0               	movlw	224
  4461  1736  0020               	movlb	0	; select bank0
  4462  1737  00A0               	movwf	??_Gpio_Config
  4463  1738  0820               	movf	??_Gpio_Config,w
  4464  1739  0021               	movlb	1	; select bank1
  4465  173A  058E               	andwf	14,f	;volatile
  4466  173B  0008               	return
  4467  173C                     __end_of_Gpio_Config:	
  4468                           ;utility.c: 45: return 1;
  4469                           ;	Return value of _Gpio_Config is never used
  4470                           
  4471                           
  4472                           	psect	text17
  4473  170E                     __ptext17:	
  4474 ;; *************** function _Adf_Reset_Config *****************
  4475 ;; Defined at:
  4476 ;;		line 87 in file "adf7012.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;		None               void
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0, pclath, cstack
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    6
  4497 ;; This function calls:
  4498 ;;		_Adf_Reset
  4499 ;;		_Adf_Reset_Register_One
  4500 ;;		_Adf_Reset_Register_Three
  4501 ;;		_Adf_Reset_Register_Two
  4502 ;;		_Adf_Reset_Register_Zero
  4503 ;; This function is called by:
  4504 ;;		_Radio_Setup
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           
  4509                           ;psect for function _Adf_Reset_Config
  4510  170E                     _Adf_Reset_Config:	
  4511                           
  4512                           ;adf7012.c: 90: Adf_Reset_Register_Zero();
  4513                           
  4514                           ;incstack = 0
  4515                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  4516  170E  3197  27E1  3197   	fcall	_Adf_Reset_Register_Zero
  4517                           
  4518                           ;adf7012.c: 91: Adf_Reset_Register_One();
  4519  1711  3197  274C  3197   	fcall	_Adf_Reset_Register_One
  4520                           
  4521                           ;adf7012.c: 92: Adf_Reset_Register_Two();
  4522  1714  3197  2774  3197   	fcall	_Adf_Reset_Register_Two
  4523                           
  4524                           ;adf7012.c: 93: Adf_Reset_Register_Three();
  4525  1717  3188  2004  3197   	fcall	_Adf_Reset_Register_Three
  4526                           
  4527                           ;adf7012.c: 95: Adf_Reset();
  4528  171A  3196  26D3         	fcall	_Adf_Reset
  4529  171C  0008               	return
  4530  171D                     __end_of_Adf_Reset_Config:	
  4531                           
  4532                           	psect	text18
  4533  17E1                     __ptext18:	
  4534 ;; *************** function _Adf_Reset_Register_Zero *****************
  4535 ;; Defined at:
  4536 ;;		line 99 in file "adf7012.c"
  4537 ;; Parameters:    Size  Location     Type
  4538 ;;		None
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;		None
  4541 ;; Return value:  Size  Location     Type
  4542 ;;		None               void
  4543 ;; Registers used:
  4544 ;;		wreg, status,2
  4545 ;; Tracked objects:
  4546 ;;		On entry : 0/0
  4547 ;;		On exit  : 0/0
  4548 ;;		Unchanged: 0/0
  4549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4554 ;;Total ram usage:        1 bytes
  4555 ;; Hardware stack levels used:    1
  4556 ;; Hardware stack levels required when called:    3
  4557 ;; This function calls:
  4558 ;;		Nothing
  4559 ;; This function is called by:
  4560 ;;		_Adf_Reset_Config
  4561 ;; This function uses a non-reentrant model
  4562 ;;
  4563                           
  4564                           
  4565                           ;psect for function _Adf_Reset_Register_Zero
  4566  17E1                     _Adf_Reset_Register_Zero:	
  4567                           
  4568                           ;adf7012.c: 100: adf_config.r0.frequency_error_correction = 0;
  4569                           
  4570                           ;incstack = 0
  4571                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  4572  17E1  3000               	movlw	0
  4573  17E2  0021               	movlb	1	; select bank1
  4574  17E3  00A3               	movwf	(_adf_config+3)^(0+128)
  4575  17E4  3000               	movlw	0
  4576  17E5  00A2               	movwf	(_adf_config+2)^(0+128)
  4577  17E6  3000               	movlw	0
  4578  17E7  00A1               	movwf	(_adf_config+1)^(0+128)
  4579  17E8  3000               	movlw	0
  4580  17E9  00A0               	movwf	_adf_config^(0+128)
  4581                           
  4582                           ;adf7012.c: 101: adf_config.r0.r_divider = 15;
  4583  17EA  300F               	movlw	15
  4584  17EB  0020               	movlb	0	; select bank0
  4585  17EC  00A0               	movwf	??_Adf_Reset_Register_Zero
  4586  17ED  0820               	movf	??_Adf_Reset_Register_Zero,w
  4587  17EE  0021               	movlb	1	; select bank1
  4588  17EF  00A4               	movwf	(_adf_config^(0+128)+4)
  4589                           
  4590                           ;adf7012.c: 102: adf_config.r0.crystal_doubler = 0;
  4591  17F0  01A5               	clrf	(_adf_config^(0+128)+5)
  4592                           
  4593                           ;adf7012.c: 103: adf_config.r0.crystal_oscillator_disable = 0;
  4594  17F1  01A6               	clrf	(_adf_config^(0+128)+6)
  4595                           
  4596                           ;adf7012.c: 104: adf_config.r0.clock_out_divider = 2;
  4597  17F2  3002               	movlw	2
  4598  17F3  0020               	movlb	0	; select bank0
  4599  17F4  00A0               	movwf	??_Adf_Reset_Register_Zero
  4600  17F5  0820               	movf	??_Adf_Reset_Register_Zero,w
  4601  17F6  0021               	movlb	1	; select bank1
  4602  17F7  00A7               	movwf	(_adf_config^(0+128)+7)
  4603                           
  4604                           ;adf7012.c: 105: adf_config.r0.vco_adjust = 0;
  4605  17F8  01A8               	clrf	(_adf_config^(0+128)+8)
  4606                           
  4607                           ;adf7012.c: 106: adf_config.r0.output_divider = 2;
  4608  17F9  3002               	movlw	2
  4609  17FA  0020               	movlb	0	; select bank0
  4610  17FB  00A0               	movwf	??_Adf_Reset_Register_Zero
  4611  17FC  0820               	movf	??_Adf_Reset_Register_Zero,w
  4612  17FD  0021               	movlb	1	; select bank1
  4613  17FE  00A9               	movwf	(_adf_config^(0+128)+9)
  4614  17FF  0008               	return
  4615  1800                     __end_of_Adf_Reset_Register_Zero:	
  4616                           
  4617                           	psect	text19
  4618  1774                     __ptext19:	
  4619 ;; *************** function _Adf_Reset_Register_Two *****************
  4620 ;; Defined at:
  4621 ;;		line 115 in file "adf7012.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;		None               void
  4628 ;; Registers used:
  4629 ;;		wreg, status,2
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4637 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4638 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4639 ;;Total ram usage:        1 bytes
  4640 ;; Hardware stack levels used:    1
  4641 ;; Hardware stack levels required when called:    3
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_Adf_Reset_Config
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           
  4650                           ;psect for function _Adf_Reset_Register_Two
  4651  1774                     _Adf_Reset_Register_Two:	
  4652                           
  4653                           ;adf7012.c: 116: adf_config.r2.mod_control = 3;
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  4657  1774  3003               	movlw	3
  4658  1775  0020               	movlb	0	; select bank0
  4659  1776  00A0               	movwf	??_Adf_Reset_Register_Two
  4660  1777  0820               	movf	??_Adf_Reset_Register_Two,w
  4661  1778  0021               	movlb	1	; select bank1
  4662  1779  00B0               	movwf	(_adf_config^(0+128)+16)
  4663                           
  4664                           ;adf7012.c: 117: adf_config.r2.gook = 0;
  4665  177A  01B1               	clrf	(_adf_config^(0+128)+17)
  4666                           
  4667                           ;adf7012.c: 118: adf_config.r2.power_amplifier_level = 15;
  4668  177B  300F               	movlw	15
  4669  177C  0020               	movlb	0	; select bank0
  4670  177D  00A0               	movwf	??_Adf_Reset_Register_Two
  4671  177E  0820               	movf	??_Adf_Reset_Register_Two,w
  4672  177F  0021               	movlb	1	; select bank1
  4673  1780  00B2               	movwf	(_adf_config^(0+128)+18)
  4674                           
  4675                           ;adf7012.c: 119: adf_config.r2.modulation_deviation = 16;
  4676  1781  3000               	movlw	0
  4677  1782  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  4678  1783  3000               	movlw	0
  4679  1784  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  4680  1785  3000               	movlw	0
  4681  1786  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  4682  1787  3010               	movlw	16
  4683  1788  00B3               	movwf	(_adf_config^(0+128)+19)
  4684                           
  4685                           ;adf7012.c: 120: adf_config.r2.gfsk_modulation_control = 0;
  4686  1789  01B7               	clrf	(_adf_config^(0+128)+23)
  4687                           
  4688                           ;adf7012.c: 121: adf_config.r2.index_counter = 0;
  4689  178A  01B8               	clrf	(_adf_config^(0+128)+24)
  4690  178B  0008               	return
  4691  178C                     __end_of_Adf_Reset_Register_Two:	
  4692                           
  4693                           	psect	text20
  4694  0804                     __ptext20:	
  4695 ;; *************** function _Adf_Reset_Register_Three *****************
  4696 ;; Defined at:
  4697 ;;		line 124 in file "adf7012.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;		None
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;		None
  4702 ;; Return value:  Size  Location     Type
  4703 ;;		None               void
  4704 ;; Registers used:
  4705 ;;		wreg, status,2
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4715 ;;Total ram usage:        1 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    3
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_Adf_Reset_Config
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           
  4726                           ;psect for function _Adf_Reset_Register_Three
  4727  0804                     _Adf_Reset_Register_Three:	
  4728                           
  4729                           ;adf7012.c: 125: adf_config.r3.pll_enable = 0;
  4730                           
  4731                           ;incstack = 0
  4732                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  4733  0804  0021               	movlb	1	; select bank1
  4734  0805  01B9               	clrf	(_adf_config^(0+128)+25)
  4735                           
  4736                           ;adf7012.c: 126: adf_config.r3.pa_enable = 0;
  4737  0806  01BA               	clrf	(_adf_config^(0+128)+26)
  4738                           
  4739                           ;adf7012.c: 127: adf_config.r3.clkout_enable = 1;
  4740  0807  01BB               	clrf	(_adf_config^(0+128)+27)
  4741  0808  0ABB               	incf	(_adf_config^(0+128)+27),f
  4742                           
  4743                           ;adf7012.c: 128: adf_config.r3.data_invert = 1;
  4744  0809  01BC               	clrf	(_adf_config^(0+128)+28)
  4745  080A  0ABC               	incf	(_adf_config^(0+128)+28),f
  4746                           
  4747                           ;adf7012.c: 129: adf_config.r3.charge_pump_current = 3;
  4748  080B  3003               	movlw	3
  4749  080C  0020               	movlb	0	; select bank0
  4750  080D  00A0               	movwf	??_Adf_Reset_Register_Three
  4751  080E  0820               	movf	??_Adf_Reset_Register_Three,w
  4752  080F  0021               	movlb	1	; select bank1
  4753  0810  00BD               	movwf	(_adf_config^(0+128)+29)
  4754                           
  4755                           ;adf7012.c: 130: adf_config.r3.bleed_up = 0;
  4756  0811  01BE               	clrf	(_adf_config^(0+128)+30)
  4757                           
  4758                           ;adf7012.c: 131: adf_config.r3.bleed_down = 0;
  4759  0812  01BF               	clrf	(_adf_config^(0+128)+31)
  4760                           
  4761                           ;adf7012.c: 132: adf_config.r3.vco_disable = 0;
  4762  0813  01C0               	clrf	(_adf_config^(0+128)+32)
  4763                           
  4764                           ;adf7012.c: 134: adf_config.r3.muxout = 3;
  4765  0814  3003               	movlw	3
  4766  0815  0020               	movlb	0	; select bank0
  4767  0816  00A0               	movwf	??_Adf_Reset_Register_Three
  4768  0817  0820               	movf	??_Adf_Reset_Register_Three,w
  4769  0818  0021               	movlb	1	; select bank1
  4770  0819  00C1               	movwf	(_adf_config^(0+128)+33)
  4771                           
  4772                           ;adf7012.c: 136: adf_config.r3.ld_precision = 0;
  4773  081A  01C2               	clrf	(_adf_config^(0+128)+34)
  4774                           
  4775                           ;adf7012.c: 137: adf_config.r3.vco_bias = 6;
  4776  081B  3006               	movlw	6
  4777  081C  0020               	movlb	0	; select bank0
  4778  081D  00A0               	movwf	??_Adf_Reset_Register_Three
  4779  081E  0820               	movf	??_Adf_Reset_Register_Three,w
  4780  081F  0021               	movlb	1	; select bank1
  4781  0820  00C3               	movwf	(_adf_config^(0+128)+35)
  4782                           
  4783                           ;adf7012.c: 138: adf_config.r3.pa_bias = 4;
  4784  0821  3004               	movlw	4
  4785  0822  0020               	movlb	0	; select bank0
  4786  0823  00A0               	movwf	??_Adf_Reset_Register_Three
  4787  0824  0820               	movf	??_Adf_Reset_Register_Three,w
  4788  0825  0021               	movlb	1	; select bank1
  4789  0826  00C4               	movwf	(_adf_config^(0+128)+36)
  4790                           
  4791                           ;adf7012.c: 139: adf_config.r3.pll_test_mode = 0;
  4792  0827  01C5               	clrf	(_adf_config^(0+128)+37)
  4793                           
  4794                           ;adf7012.c: 140: adf_config.r3.sd_test_mode = 0;
  4795  0828  01C6               	clrf	(_adf_config^(0+128)+38)
  4796  0829  0008               	return
  4797  082A                     __end_of_Adf_Reset_Register_Three:	
  4798                           
  4799                           	psect	text21
  4800  174C                     __ptext21:	
  4801 ;; *************** function _Adf_Reset_Register_One *****************
  4802 ;; Defined at:
  4803 ;;		line 109 in file "adf7012.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;		None               void
  4810 ;; Registers used:
  4811 ;;		wreg
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4819 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4820 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4821 ;;Total ram usage:        1 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    3
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_Adf_Reset_Config
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           
  4832                           ;psect for function _Adf_Reset_Register_One
  4833  174C                     _Adf_Reset_Register_One:	
  4834                           
  4835                           ;adf7012.c: 110: adf_config.r1.integer_n = 109;
  4836                           
  4837                           ;incstack = 0
  4838                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  4839  174C  306D               	movlw	109
  4840  174D  0020               	movlb	0	; select bank0
  4841  174E  00A0               	movwf	??_Adf_Reset_Register_One
  4842  174F  0820               	movf	??_Adf_Reset_Register_One,w
  4843  1750  0021               	movlb	1	; select bank1
  4844  1751  00AE               	movwf	(_adf_config^(0+128)+14)
  4845                           
  4846                           ;adf7012.c: 111: adf_config.r1.fractional_n = 0;
  4847  1752  3000               	movlw	0
  4848  1753  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  4849  1754  3000               	movlw	0
  4850  1755  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  4851  1756  3000               	movlw	0
  4852  1757  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  4853  1758  3000               	movlw	0
  4854  1759  00AA               	movwf	(_adf_config^(0+128)+10)
  4855                           
  4856                           ;adf7012.c: 112: adf_config.r1.prescaler = 1;
  4857  175A  01AF               	clrf	(_adf_config^(0+128)+15)
  4858  175B  0AAF               	incf	(_adf_config^(0+128)+15),f
  4859  175C  0008               	return
  4860  175D                     __end_of_Adf_Reset_Register_One:	
  4861                           
  4862                           	psect	text22
  4863  16D3                     __ptext22:	
  4864 ;; *************** function _Adf_Reset *****************
  4865 ;; Defined at:
  4866 ;;		line 143 in file "adf7012.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;		None               void
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    5
  4887 ;; This function calls:
  4888 ;;		_Delay_ms
  4889 ;; This function is called by:
  4890 ;;		_Adf_Reset_Config
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           
  4895                           ;psect for function _Adf_Reset
  4896  16D3                     _Adf_Reset:	
  4897                           
  4898                           ;adf7012.c: 145: PORTAbits.RA5 = 1;;
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  4902  16D3  0020               	movlb	0	; select bank0
  4903  16D4  168C               	bsf	12,5	;volatile
  4904                           
  4905                           ;adf7012.c: 146: Delay_ms(10);
  4906  16D5  300A               	movlw	10
  4907  16D6  00A0               	movwf	Delay_ms@time_to_delay
  4908  16D7  3000               	movlw	0
  4909  16D8  00A1               	movwf	Delay_ms@time_to_delay+1
  4910  16D9  3188  202A         	fcall	_Delay_ms
  4911  16DB  0008               	return
  4912  16DC                     __end_of_Adf_Reset:	
  4913                           
  4914                           	psect	text23
  4915  175D                     __ptext23:	
  4916 ;; *************** function _Modem_Init *****************
  4917 ;; Defined at:
  4918 ;;		line 42 in file "audio_tone.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;		None               void
  4925 ;; Registers used:
  4926 ;;		wreg
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;Total ram usage:        1 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    3
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_Modem_Setup
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _Modem_Init
  4948  175D                     _Modem_Init:	
  4949                           
  4950                           ;audio_tone.c: 43: SAMPLES_PER_BAUD = 26;
  4951                           
  4952                           ;incstack = 0
  4953                           ; Regs used in _Modem_Init: [wreg]
  4954  175D  301A               	movlw	26
  4955  175E  0020               	movlb	0	; select bank0
  4956  175F  00A0               	movwf	??_Modem_Init
  4957  1760  0820               	movf	??_Modem_Init,w
  4958  1761  00EF               	movwf	_SAMPLES_PER_BAUD
  4959                           
  4960                           ;audio_tone.c: 44: PHASE_DELTA_1200 = 7;
  4961  1762  3000               	movlw	0
  4962  1763  0022               	movlb	2	; select bank2
  4963  1764  00A3               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  4964  1765  3000               	movlw	0
  4965  1766  00A2               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  4966  1767  3000               	movlw	0
  4967  1768  00A1               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  4968  1769  3007               	movlw	7
  4969  176A  00A0               	movwf	_PHASE_DELTA_1200^(0+256)
  4970                           
  4971                           ;audio_tone.c: 45: PHASE_DELTA_2200 = 13;
  4972  176B  3000               	movlw	0
  4973  176C  00A7               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  4974  176D  3000               	movlw	0
  4975  176E  00A6               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  4976  176F  3000               	movlw	0
  4977  1770  00A5               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  4978  1771  300D               	movlw	13
  4979  1772  00A4               	movwf	_PHASE_DELTA_2200^(0+256)
  4980  1773  0008               	return
  4981  1774                     __end_of_Modem_Init:	
  4982                           
  4983                           	psect	text24
  4984  08D0                     __ptext24:	
  4985 ;; *************** function _Modem_Flush_Frame *****************
  4986 ;; Defined at:
  4987 ;;		line 65 in file "audio_tone.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;		None
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;		None
  4992 ;; Return value:  Size  Location     Type
  4993 ;;		None               void
  4994 ;; Registers used:
  4995 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5005 ;;Total ram usage:        0 bytes
  5006 ;; Hardware stack levels used:    1
  5007 ;; Hardware stack levels required when called:   11
  5008 ;; This function calls:
  5009 ;;		_Delay_ms
  5010 ;;		_Ptt_On
  5011 ;;		_Timer0_Start
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;;		_Ax25_Flush_Frame
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           
  5019                           ;psect for function _Modem_Flush_Frame
  5020  08D0                     _Modem_Flush_Frame:	
  5021                           
  5022                           ;audio_tone.c: 67: phase_delta = PHASE_DELTA_1200;
  5023                           
  5024                           ;incstack = 0
  5025                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5026  08D0  0022               	movlb	2	; select bank2
  5027  08D1  0823               	movf	(_PHASE_DELTA_1200+3)^(0+256),w
  5028  08D2  00B3               	movwf	(_phase_delta+3)^(0+256)
  5029  08D3  0822               	movf	(_PHASE_DELTA_1200+2)^(0+256),w
  5030  08D4  00B2               	movwf	(_phase_delta+2)^(0+256)
  5031  08D5  0821               	movf	(_PHASE_DELTA_1200+1)^(0+256),w
  5032  08D6  00B1               	movwf	(_phase_delta+1)^(0+256)
  5033  08D7  0820               	movf	_PHASE_DELTA_1200^(0+256),w
  5034  08D8  00B0               	movwf	_phase_delta^(0+256)
  5035                           
  5036                           ;audio_tone.c: 68: phase = 0;
  5037  08D9  3000               	movlw	0
  5038  08DA  00AF               	movwf	(_phase+3)^(0+256)
  5039  08DB  3000               	movlw	0
  5040  08DC  00AE               	movwf	(_phase+2)^(0+256)
  5041  08DD  3000               	movlw	0
  5042  08DE  00AD               	movwf	(_phase+1)^(0+256)
  5043  08DF  3000               	movlw	0
  5044  08E0  00AC               	movwf	_phase^(0+256)
  5045                           
  5046                           ;audio_tone.c: 69: packet_pos = 0;
  5047  08E1  3000               	movlw	0
  5048  08E2  00AB               	movwf	(_packet_pos+3)^(0+256)
  5049  08E3  3000               	movlw	0
  5050  08E4  00AA               	movwf	(_packet_pos+2)^(0+256)
  5051  08E5  3000               	movlw	0
  5052  08E6  00A9               	movwf	(_packet_pos+1)^(0+256)
  5053  08E7  3000               	movlw	0
  5054  08E8  00A8               	movwf	_packet_pos^(0+256)
  5055                           
  5056                           ;audio_tone.c: 70: current_sample_in_baud = 0;
  5057  08E9  0021               	movlb	1	; select bank1
  5058  08EA  01D0               	clrf	_current_sample_in_baud^(0+128)
  5059                           
  5060                           ;audio_tone.c: 71: MODEM_TRANSMITTING = 1;
  5061  08EB  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  5062  08EC  0ACC               	incf	_MODEM_TRANSMITTING^(0+128),f
  5063                           
  5064                           ;audio_tone.c: 74: Ptt_On();
  5065  08ED  3187  27C4  3188   	fcall	_Ptt_On
  5066                           
  5067                           ;audio_tone.c: 76: Delay_ms(100);
  5068  08F0  3064               	movlw	100
  5069  08F1  0020               	movlb	0	; select bank0
  5070  08F2  00A0               	movwf	Delay_ms@time_to_delay
  5071  08F3  3000               	movlw	0
  5072  08F4  00A1               	movwf	Delay_ms@time_to_delay+1
  5073  08F5  3188  202A  3188   	fcall	_Delay_ms
  5074                           
  5075                           ;audio_tone.c: 78: Timer0_Start();
  5076  08F8  3196  26B0         	fcall	_Timer0_Start
  5077  08FA  0008               	return
  5078  08FB                     __end_of_Modem_Flush_Frame:	
  5079                           
  5080                           	psect	text25
  5081  16B0                     __ptext25:	
  5082 ;; *************** function _Timer0_Start *****************
  5083 ;; Defined at:
  5084 ;;		line 257 in file "utility.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;		None               void
  5091 ;; Registers used:
  5092 ;;		status,2
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    3
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_Modem_Flush_Frame
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           
  5113                           ;psect for function _Timer0_Start
  5114  16B0                     _Timer0_Start:	
  5115                           
  5116                           ;utility.c: 258: TMR0 = 0x00;
  5117                           
  5118                           ;incstack = 0
  5119                           ; Regs used in _Timer0_Start: [status,2]
  5120  16B0  0020               	movlb	0	; select bank0
  5121  16B1  0195               	clrf	21	;volatile
  5122                           
  5123                           ;utility.c: 259: TMR0IF = 0;
  5124  16B2  110B               	bcf	11,2	;volatile
  5125                           
  5126                           ;utility.c: 260: TMR0IE = 1;
  5127  16B3  168B               	bsf	11,5	;volatile
  5128  16B4  0008               	return
  5129  16B5                     __end_of_Timer0_Start:	
  5130                           
  5131                           	psect	text26
  5132  07C4                     __ptext26:	
  5133 ;; *************** function _Ptt_On *****************
  5134 ;; Defined at:
  5135 ;;		line 319 in file "adf7012.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      unsigned char 
  5142 ;; Registers used:
  5143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5152 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5153 ;;Total ram usage:        1 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:   10
  5156 ;; This function calls:
  5157 ;;		_Adf_Lock
  5158 ;;		_Adf_Write_Config
  5159 ;;		_Delay_ms
  5160 ;;		_Read_Adf7012_Muxout
  5161 ;; This function is called by:
  5162 ;;		_main
  5163 ;;		_Modem_Flush_Frame
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           
  5168                           ;psect for function _Ptt_On
  5169  07C4                     _Ptt_On:	
  5170                           
  5171                           ;adf7012.c: 324: adf_config.r3.pa_enable = 0;
  5172                           
  5173                           ;incstack = 0
  5174                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5175  07C4  0021               	movlb	1	; select bank1
  5176  07C5  01BA               	clrf	(_adf_config^(0+128)+26)
  5177                           
  5178                           ;adf7012.c: 325: adf_config.r2.power_amplifier_level = 0;
  5179  07C6  01B2               	clrf	(_adf_config^(0+128)+18)
  5180                           
  5181                           ;adf7012.c: 326: adf_config.r3.muxout = 3;
  5182  07C7  3003               	movlw	3
  5183  07C8  0020               	movlb	0	; select bank0
  5184  07C9  00ED               	movwf	??_Ptt_On
  5185  07CA  086D               	movf	??_Ptt_On,w
  5186  07CB  0021               	movlb	1	; select bank1
  5187  07CC  00C1               	movwf	(_adf_config^(0+128)+33)
  5188                           
  5189                           ;adf7012.c: 328: Adf_Write_Config();
  5190  07CD  3196  26E5  3187   	fcall	_Adf_Write_Config
  5191                           
  5192                           ;adf7012.c: 329: Delay_ms(10);
  5193  07D0  300A               	movlw	10
  5194  07D1  0020               	movlb	0	; select bank0
  5195  07D2  00A0               	movwf	Delay_ms@time_to_delay
  5196  07D3  3000               	movlw	0
  5197  07D4  00A1               	movwf	Delay_ms@time_to_delay+1
  5198  07D5  3188  202A  3187   	fcall	_Delay_ms
  5199                           
  5200                           ;adf7012.c: 333: if (!Read_Adf7012_Muxout())
  5201  07D8  3196  26FF  3187   	fcall	_Read_Adf7012_Muxout
  5202  07DB  3800               	iorlw	0
  5203  07DC  1903               	btfsc	3,2
  5204  07DD  0008               	return
  5205                           
  5206                           ;adf7012.c: 337: else
  5207                           ;adf7012.c: 338: {
  5208                           ;adf7012.c: 340: Adf_Lock();
  5209                           
  5210                           ;adf7012.c: 336: }
  5211                           
  5212                           ;adf7012.c: 334: {
  5213                           ;adf7012.c: 335: return 0;
  5214                           ;	Return value of _Ptt_On is never used
  5215  07DE  318A  22F5  3187   	fcall	_Adf_Lock
  5216                           
  5217                           ;adf7012.c: 341: adf_config.r3.pa_enable = 1;
  5218  07E1  0021               	movlb	1	; select bank1
  5219  07E2  01BA               	clrf	(_adf_config^(0+128)+26)
  5220  07E3  0ABA               	incf	(_adf_config^(0+128)+26),f
  5221                           
  5222                           ;adf7012.c: 342: adf_config.r2.power_amplifier_level = 63;
  5223  07E4  303F               	movlw	63
  5224  07E5  0020               	movlb	0	; select bank0
  5225  07E6  00ED               	movwf	??_Ptt_On
  5226  07E7  086D               	movf	??_Ptt_On,w
  5227  07E8  0021               	movlb	1	; select bank1
  5228  07E9  00B2               	movwf	(_adf_config^(0+128)+18)
  5229                           
  5230                           ;adf7012.c: 344: Delay_ms(10);
  5231  07EA  300A               	movlw	10
  5232  07EB  0020               	movlb	0	; select bank0
  5233  07EC  00A0               	movwf	Delay_ms@time_to_delay
  5234  07ED  3000               	movlw	0
  5235  07EE  00A1               	movwf	Delay_ms@time_to_delay+1
  5236  07EF  3188  202A  3187   	fcall	_Delay_ms
  5237                           
  5238                           ;adf7012.c: 345: Adf_Write_Config();
  5239  07F2  3196  26E5  3187   	fcall	_Adf_Write_Config
  5240                           
  5241                           ;adf7012.c: 346: Delay_ms(1);
  5242  07F5  3001               	movlw	1
  5243  07F6  0020               	movlb	0	; select bank0
  5244  07F7  00A0               	movwf	Delay_ms@time_to_delay
  5245  07F8  3000               	movlw	0
  5246  07F9  00A1               	movwf	Delay_ms@time_to_delay+1
  5247  07FA  3188  202A         	fcall	_Delay_ms
  5248                           
  5249                           ;adf7012.c: 348: return 1;
  5250                           ;	Return value of _Ptt_On is never used
  5251  07FC  0008               	return
  5252  07FD                     __end_of_Ptt_On:	
  5253                           
  5254                           	psect	text27
  5255  0AF5                     __ptext27:	
  5256 ;; *************** function _Adf_Lock *****************
  5257 ;; Defined at:
  5258 ;;		line 232 in file "adf7012.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;		None
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  bias            2   10[BANK1 ] int 
  5263 ;;  adj             2    8[BANK1 ] int 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  2  325[COMMON] int 
  5266 ;; Registers used:
  5267 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;Total ram usage:        6 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    9
  5280 ;; This function calls:
  5281 ;;		_Adf_Locked
  5282 ;;		_Adf_Write_Config
  5283 ;;		_Delay_ms
  5284 ;; This function is called by:
  5285 ;;		_Ptt_On
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           
  5290                           ;psect for function _Adf_Lock
  5291  0AF5                     _Adf_Lock:	
  5292                           
  5293                           ;adf7012.c: 235: Delay_ms(200);
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5297  0AF5  30C8               	movlw	200
  5298  0AF6  0020               	movlb	0	; select bank0
  5299  0AF7  00A0               	movwf	Delay_ms@time_to_delay
  5300  0AF8  3000               	movlw	0
  5301  0AF9  00A1               	movwf	Delay_ms@time_to_delay+1
  5302  0AFA  3188  202A  318A   	fcall	_Delay_ms
  5303                           
  5304                           ;adf7012.c: 236: int adj = adf_config.r0.vco_adjust;
  5305  0AFD  0021               	movlb	1	; select bank1
  5306  0AFE  0828               	movf	(_adf_config^(0+128)+8),w
  5307  0AFF  0020               	movlb	0	; select bank0
  5308  0B00  00EB               	movwf	??_Adf_Lock
  5309  0B01  01EC               	clrf	??_Adf_Lock+1
  5310  0B02  086B               	movf	??_Adf_Lock,w
  5311  0B03  0021               	movlb	1	; select bank1
  5312  0B04  00DB               	movwf	Adf_Lock@adj^(0+128)
  5313  0B05  0020               	movlb	0	; select bank0
  5314  0B06  086C               	movf	??_Adf_Lock+1,w
  5315  0B07  0021               	movlb	1	; select bank1
  5316  0B08  00DC               	movwf	(Adf_Lock@adj+1)^(0+128)
  5317                           
  5318                           ;adf7012.c: 237: int bias = adf_config.r3.vco_bias;
  5319  0B09  0843               	movf	(_adf_config^(0+128)+35),w
  5320  0B0A  0020               	movlb	0	; select bank0
  5321  0B0B  00EB               	movwf	??_Adf_Lock
  5322  0B0C  01EC               	clrf	??_Adf_Lock+1
  5323  0B0D  086B               	movf	??_Adf_Lock,w
  5324  0B0E  0021               	movlb	1	; select bank1
  5325  0B0F  00DD               	movwf	Adf_Lock@bias^(0+128)
  5326  0B10  0020               	movlb	0	; select bank0
  5327  0B11  086C               	movf	??_Adf_Lock+1,w
  5328  0B12  0021               	movlb	1	; select bank1
  5329  0B13  00DE               	movwf	(Adf_Lock@bias+1)^(0+128)
  5330                           
  5331                           ;adf7012.c: 239: adf_config.r3.pll_enable = 1;
  5332  0B14  01B9               	clrf	(_adf_config^(0+128)+25)
  5333  0B15  0AB9               	incf	(_adf_config^(0+128)+25),f
  5334                           
  5335                           ;adf7012.c: 241: adf_config.r3.muxout = 5;
  5336  0B16  3005               	movlw	5
  5337  0B17  0020               	movlb	0	; select bank0
  5338  0B18  00EB               	movwf	??_Adf_Lock
  5339  0B19  086B               	movf	??_Adf_Lock,w
  5340  0B1A  0021               	movlb	1	; select bank1
  5341  0B1B  00C1               	movwf	(_adf_config^(0+128)+33)
  5342                           
  5343                           ;adf7012.c: 243: Adf_Write_Config();
  5344  0B1C  3196  26E5  318A   	fcall	_Adf_Write_Config
  5345                           
  5346                           ;adf7012.c: 244: Delay_ms(5);
  5347  0B1F  3005               	movlw	5
  5348  0B20  0020               	movlb	0	; select bank0
  5349  0B21  00A0               	movwf	Delay_ms@time_to_delay
  5350  0B22  3000               	movlw	0
  5351  0B23  00A1               	movwf	Delay_ms@time_to_delay+1
  5352  0B24  3188  202A  318A   	fcall	_Delay_ms
  5353  0B27                     l2545:	
  5354                           ;adf7012.c: 246: while(!Adf_Locked()) {
  5355                           
  5356  0B27  3187  27FD  318A   	fcall	_Adf_Locked
  5357  0B2A  3A00               	xorlw	0
  5358  0B2B  1D03               	btfss	3,2
  5359  0B2C  0008               	return
  5360                           
  5361                           ;adf7012.c: 248: adf_config.r0.vco_adjust = adj;
  5362  0B2D  0021               	movlb	1	; select bank1
  5363  0B2E  085B               	movf	Adf_Lock@adj^(0+128),w
  5364  0B2F  0020               	movlb	0	; select bank0
  5365  0B30  00EB               	movwf	??_Adf_Lock
  5366  0B31  086B               	movf	??_Adf_Lock,w
  5367  0B32  0021               	movlb	1	; select bank1
  5368  0B33  00A8               	movwf	(_adf_config^(0+128)+8)
  5369                           
  5370                           ;adf7012.c: 249: adf_config.r3.vco_bias = bias;
  5371  0B34  085D               	movf	Adf_Lock@bias^(0+128),w
  5372  0B35  0020               	movlb	0	; select bank0
  5373  0B36  00EB               	movwf	??_Adf_Lock
  5374  0B37  086B               	movf	??_Adf_Lock,w
  5375  0B38  0021               	movlb	1	; select bank1
  5376  0B39  00C3               	movwf	(_adf_config^(0+128)+35)
  5377                           
  5378                           ;adf7012.c: 251: adf_config.r3.muxout = 5;
  5379  0B3A  3005               	movlw	5
  5380  0B3B  0020               	movlb	0	; select bank0
  5381  0B3C  00EB               	movwf	??_Adf_Lock
  5382  0B3D  086B               	movf	??_Adf_Lock,w
  5383  0B3E  0021               	movlb	1	; select bank1
  5384  0B3F  00C1               	movwf	(_adf_config^(0+128)+33)
  5385                           
  5386                           ;adf7012.c: 252: Adf_Write_Config();
  5387  0B40  3196  26E5  318A   	fcall	_Adf_Write_Config
  5388                           
  5389                           ;adf7012.c: 253: Delay_ms(5);
  5390  0B43  3005               	movlw	5
  5391  0B44  0020               	movlb	0	; select bank0
  5392  0B45  00A0               	movwf	Delay_ms@time_to_delay
  5393  0B46  3000               	movlw	0
  5394  0B47  00A1               	movwf	Delay_ms@time_to_delay+1
  5395  0B48  3188  202A  318A   	fcall	_Delay_ms
  5396                           
  5397                           ;adf7012.c: 254: if(++bias == 14) {
  5398  0B4B  3001               	movlw	1
  5399  0B4C  0021               	movlb	1	; select bank1
  5400  0B4D  07DD               	addwf	Adf_Lock@bias^(0+128),f
  5401  0B4E  3000               	movlw	0
  5402  0B4F  3DDE               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  5403  0B50  300E               	movlw	14
  5404  0B51  065D               	xorwf	Adf_Lock@bias^(0+128),w
  5405  0B52  045E               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  5406  0B53  1D03               	skipz
  5407  0B54  2B27               	goto	l2545
  5408                           
  5409                           ;adf7012.c: 255: bias = 1;
  5410  0B55  3001               	movlw	1
  5411  0B56  00DD               	movwf	Adf_Lock@bias^(0+128)
  5412  0B57  3000               	movlw	0
  5413  0B58  00DE               	movwf	(Adf_Lock@bias^(0+128)+1)
  5414                           
  5415                           ;adf7012.c: 256: if(++adj == 4) {
  5416  0B59  3001               	movlw	1
  5417  0B5A  07DB               	addwf	Adf_Lock@adj^(0+128),f
  5418  0B5B  3000               	movlw	0
  5419  0B5C  3DDC               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  5420  0B5D  3004               	movlw	4
  5421  0B5E  065B               	xorwf	Adf_Lock@adj^(0+128),w
  5422  0B5F  045C               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  5423  0B60  1D03               	skipz
  5424  0B61  2B27               	goto	l2545
  5425                           
  5426                           ;adf7012.c: 259: adf_config.r0.vco_adjust = 0;
  5427  0B62  01A8               	clrf	(_adf_config^(0+128)+8)
  5428                           
  5429                           ;adf7012.c: 260: adf_config.r3.vco_bias = 5;
  5430  0B63  3005               	movlw	5
  5431  0B64  0020               	movlb	0	; select bank0
  5432  0B65  00EB               	movwf	??_Adf_Lock
  5433  0B66  086B               	movf	??_Adf_Lock,w
  5434  0B67  0021               	movlb	1	; select bank1
  5435  0B68  00C3               	movwf	(_adf_config^(0+128)+35)
  5436                           
  5437                           ;adf7012.c: 262: return 0;
  5438                           ;	Return value of _Adf_Lock is never used
  5439  0B69  0008               	return
  5440  0B6A                     __end_of_Adf_Lock:	
  5441                           ;adf7012.c: 263: }
  5442                           ;adf7012.c: 264: }
  5443                           ;adf7012.c: 265: }
  5444                           ;adf7012.c: 269: return 1;
  5445                           ;	Return value of _Adf_Lock is never used
  5446                           
  5447                           
  5448                           	psect	text28
  5449  16E5                     __ptext28:	
  5450 ;; *************** function _Adf_Write_Config *****************
  5451 ;; Defined at:
  5452 ;;		line 151 in file "adf7012.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;		None
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;		None
  5457 ;; Return value:  Size  Location     Type
  5458 ;;		None               void
  5459 ;; Registers used:
  5460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;Total ram usage:        0 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    8
  5473 ;; This function calls:
  5474 ;;		_Adf_Write_Register_One
  5475 ;;		_Adf_Write_Register_Three
  5476 ;;		_Adf_Write_Register_Two
  5477 ;;		_Adf_Write_Register_Zero
  5478 ;; This function is called by:
  5479 ;;		_Adf_Lock
  5480 ;;		_Radio_Setup
  5481 ;;		_Ptt_On
  5482 ;;		_Ptt_Off
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           
  5487                           ;psect for function _Adf_Write_Config
  5488  16E5                     _Adf_Write_Config:	
  5489                           
  5490                           ;adf7012.c: 152: Adf_Write_Register_Zero();
  5491                           
  5492                           ;incstack = 0
  5493                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5494  16E5  3185  257F  3196   	fcall	_Adf_Write_Register_Zero
  5495                           
  5496                           ;adf7012.c: 153: Adf_Write_Register_One();
  5497  16E8  318A  2284  3196   	fcall	_Adf_Write_Register_One
  5498                           
  5499                           ;adf7012.c: 154: Adf_Write_Register_Two();
  5500  16EB  3186  2646  3196   	fcall	_Adf_Write_Register_Two
  5501                           
  5502                           ;adf7012.c: 155: Adf_Write_Register_Three();
  5503  16EE  3180  2069         	fcall	_Adf_Write_Register_Three
  5504  16F0  0008               	return
  5505  16F1                     __end_of_Adf_Write_Config:	
  5506                           
  5507                           	psect	text29
  5508  057F                     __ptext29:	
  5509 ;; *************** function _Adf_Write_Register_Zero *****************
  5510 ;; Defined at:
  5511 ;;		line 158 in file "adf7012.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  5516 ;;  reg             4   51[BANK0 ] unsigned long 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;		None               void
  5519 ;; Registers used:
  5520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;Total ram usage:       36 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:    7
  5533 ;; This function calls:
  5534 ;;		_Reverse_Array
  5535 ;;		_Write_Adf7012_Reg
  5536 ;;		_memcpy
  5537 ;; This function is called by:
  5538 ;;		_Adf_Write_Config
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           
  5543                           ;psect for function _Adf_Write_Register_Zero
  5544  057F                     _Adf_Write_Register_Zero:	
  5545                           
  5546                           ;adf7012.c: 160: uint32_t reg =
  5547                           ;adf7012.c: 161: (0) |
  5548                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  5549                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  5550                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  5551                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  5552                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  5553                           ;adf7012.c: 167: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  5554                           
  5555                           ;incstack = 0
  5556                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5557  057F  0021               	movlb	1	; select bank1
  5558  0580  0829               	movf	(_adf_config^(0+128)+9),w
  5559  0581  3903               	andlw	3
  5560  0582  0020               	movlb	0	; select bank0
  5561  0583  00B3               	movwf	??_Adf_Write_Register_Zero
  5562  0584  01B4               	clrf	??_Adf_Write_Register_Zero+1
  5563  0585  01B5               	clrf	??_Adf_Write_Register_Zero+2
  5564  0586  01B6               	clrf	??_Adf_Write_Register_Zero+3
  5565  0587  3019               	movlw	25
  5566  0588                     u1985:	
  5567  0588  35B3               	lslf	??_Adf_Write_Register_Zero,f
  5568  0589  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  5569  058A  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  5570  058B  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  5571  058C  0B89               	decfsz	9,f
  5572  058D  2D88               	goto	u1985
  5573  058E  0021               	movlb	1	; select bank1
  5574  058F  0828               	movf	(_adf_config^(0+128)+8),w
  5575  0590  3903               	andlw	3
  5576  0591  0020               	movlb	0	; select bank0
  5577  0592  00B7               	movwf	??_Adf_Write_Register_Zero+4
  5578  0593  01B8               	clrf	??_Adf_Write_Register_Zero+5
  5579  0594  01B9               	clrf	??_Adf_Write_Register_Zero+6
  5580  0595  01BA               	clrf	??_Adf_Write_Register_Zero+7
  5581  0596  3017               	movlw	23
  5582  0597                     u1995:	
  5583  0597  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  5584  0598  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  5585  0599  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  5586  059A  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  5587  059B  0B89               	decfsz	9,f
  5588  059C  2D97               	goto	u1995
  5589  059D  0021               	movlb	1	; select bank1
  5590  059E  0827               	movf	(_adf_config^(0+128)+7),w
  5591  059F  390F               	andlw	15
  5592  05A0  0020               	movlb	0	; select bank0
  5593  05A1  00BB               	movwf	??_Adf_Write_Register_Zero+8
  5594  05A2  01BC               	clrf	??_Adf_Write_Register_Zero+9
  5595  05A3  01BD               	clrf	??_Adf_Write_Register_Zero+10
  5596  05A4  01BE               	clrf	??_Adf_Write_Register_Zero+11
  5597  05A5  3013               	movlw	19
  5598  05A6                     u2005:	
  5599  05A6  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  5600  05A7  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  5601  05A8  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  5602  05A9  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  5603  05AA  0B89               	decfsz	9,f
  5604  05AB  2DA6               	goto	u2005
  5605  05AC  0021               	movlb	1	; select bank1
  5606  05AD  0826               	movf	(_adf_config^(0+128)+6),w
  5607  05AE  3901               	andlw	1
  5608  05AF  0020               	movlb	0	; select bank0
  5609  05B0  00BF               	movwf	??_Adf_Write_Register_Zero+12
  5610  05B1  01C0               	clrf	??_Adf_Write_Register_Zero+13
  5611  05B2  01C1               	clrf	??_Adf_Write_Register_Zero+14
  5612  05B3  01C2               	clrf	??_Adf_Write_Register_Zero+15
  5613  05B4  3012               	movlw	18
  5614  05B5                     u2015:	
  5615  05B5  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  5616  05B6  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  5617  05B7  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  5618  05B8  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  5619  05B9  0B89               	decfsz	9,f
  5620  05BA  2DB5               	goto	u2015
  5621  05BB  0021               	movlb	1	; select bank1
  5622  05BC  0825               	movf	(_adf_config^(0+128)+5),w
  5623  05BD  3901               	andlw	1
  5624  05BE  0020               	movlb	0	; select bank0
  5625  05BF  00C3               	movwf	??_Adf_Write_Register_Zero+16
  5626  05C0  01C4               	clrf	??_Adf_Write_Register_Zero+17
  5627  05C1  01C5               	clrf	??_Adf_Write_Register_Zero+18
  5628  05C2  01C6               	clrf	??_Adf_Write_Register_Zero+19
  5629  05C3  3011               	movlw	17
  5630  05C4                     u2025:	
  5631  05C4  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  5632  05C5  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  5633  05C6  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  5634  05C7  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  5635  05C8  0B89               	decfsz	9,f
  5636  05C9  2DC4               	goto	u2025
  5637  05CA  0021               	movlb	1	; select bank1
  5638  05CB  0824               	movf	(_adf_config^(0+128)+4),w
  5639  05CC  390F               	andlw	15
  5640  05CD  0020               	movlb	0	; select bank0
  5641  05CE  00C7               	movwf	??_Adf_Write_Register_Zero+20
  5642  05CF  01C8               	clrf	??_Adf_Write_Register_Zero+21
  5643  05D0  01C9               	clrf	??_Adf_Write_Register_Zero+22
  5644  05D1  01CA               	clrf	??_Adf_Write_Register_Zero+23
  5645  05D2  300D               	movlw	13
  5646  05D3                     u2035:	
  5647  05D3  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  5648  05D4  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  5649  05D5  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  5650  05D6  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  5651  05D7  0B89               	decfsz	9,f
  5652  05D8  2DD3               	goto	u2035
  5653  05D9  30FF               	movlw	255
  5654  05DA  0021               	movlb	1	; select bank1
  5655  05DB  0520               	andwf	_adf_config^(0+128),w
  5656  05DC  0020               	movlb	0	; select bank0
  5657  05DD  00CB               	movwf	??_Adf_Write_Register_Zero+24
  5658  05DE  3007               	movlw	7
  5659  05DF  0021               	movlb	1	; select bank1
  5660  05E0  0521               	andwf	(_adf_config+1)^(0+128),w
  5661  05E1  0020               	movlb	0	; select bank0
  5662  05E2  00CC               	movwf	??_Adf_Write_Register_Zero+25
  5663  05E3  3000               	movlw	0
  5664  05E4  0021               	movlb	1	; select bank1
  5665  05E5  0522               	andwf	(_adf_config+2)^(0+128),w
  5666  05E6  0020               	movlb	0	; select bank0
  5667  05E7  00CD               	movwf	??_Adf_Write_Register_Zero+26
  5668  05E8  3000               	movlw	0
  5669  05E9  0021               	movlb	1	; select bank1
  5670  05EA  0523               	andwf	(_adf_config+3)^(0+128),w
  5671  05EB  0020               	movlb	0	; select bank0
  5672  05EC  00CE               	movwf	??_Adf_Write_Register_Zero+27
  5673  05ED  3002               	movlw	2
  5674  05EE                     u2045:	
  5675  05EE  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  5676  05EF  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  5677  05F0  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  5678  05F1  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  5679  05F2  0B89               	decfsz	9,f
  5680  05F3  2DEE               	goto	u2045
  5681  05F4  084B               	movf	??_Adf_Write_Register_Zero+24,w
  5682  05F5  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  5683  05F6  084C               	movf	??_Adf_Write_Register_Zero+25,w
  5684  05F7  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  5685  05F8  084D               	movf	??_Adf_Write_Register_Zero+26,w
  5686  05F9  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  5687  05FA  084E               	movf	??_Adf_Write_Register_Zero+27,w
  5688  05FB  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  5689  05FC  0847               	movf	??_Adf_Write_Register_Zero+20,w
  5690  05FD  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  5691  05FE  0848               	movf	??_Adf_Write_Register_Zero+21,w
  5692  05FF  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  5693  0600  0849               	movf	??_Adf_Write_Register_Zero+22,w
  5694  0601  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  5695  0602  084A               	movf	??_Adf_Write_Register_Zero+23,w
  5696  0603  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  5697  0604  0843               	movf	??_Adf_Write_Register_Zero+16,w
  5698  0605  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  5699  0606  0844               	movf	??_Adf_Write_Register_Zero+17,w
  5700  0607  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  5701  0608  0845               	movf	??_Adf_Write_Register_Zero+18,w
  5702  0609  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  5703  060A  0846               	movf	??_Adf_Write_Register_Zero+19,w
  5704  060B  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  5705  060C  083F               	movf	??_Adf_Write_Register_Zero+12,w
  5706  060D  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  5707  060E  0840               	movf	??_Adf_Write_Register_Zero+13,w
  5708  060F  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  5709  0610  0841               	movf	??_Adf_Write_Register_Zero+14,w
  5710  0611  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  5711  0612  0842               	movf	??_Adf_Write_Register_Zero+15,w
  5712  0613  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  5713  0614  083B               	movf	??_Adf_Write_Register_Zero+8,w
  5714  0615  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  5715  0616  083C               	movf	??_Adf_Write_Register_Zero+9,w
  5716  0617  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  5717  0618  083D               	movf	??_Adf_Write_Register_Zero+10,w
  5718  0619  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  5719  061A  083E               	movf	??_Adf_Write_Register_Zero+11,w
  5720  061B  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  5721  061C  0833               	movf	??_Adf_Write_Register_Zero,w
  5722  061D  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  5723  061E  00D3               	movwf	Adf_Write_Register_Zero@reg
  5724  061F  0834               	movf	??_Adf_Write_Register_Zero+1,w
  5725  0620  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  5726  0621  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  5727  0622  0835               	movf	??_Adf_Write_Register_Zero+2,w
  5728  0623  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  5729  0624  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  5730  0625  0836               	movf	??_Adf_Write_Register_Zero+3,w
  5731  0626  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  5732  0627  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  5733                           
  5734                           ;adf7012.c: 171: uint8_t reg_ptr[4];
  5735                           ;adf7012.c: 172: memcpy(reg_ptr, &reg, 4);
  5736  0628  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  5737  0629  00B3               	movwf	??_Adf_Write_Register_Zero
  5738  062A  0833               	movf	??_Adf_Write_Register_Zero,w
  5739  062B  00A0               	movwf	memcpy@s1
  5740  062C  3004               	movlw	4
  5741  062D  00A1               	movwf	memcpy@n
  5742  062E  3000               	movlw	0
  5743  062F  00A2               	movwf	memcpy@n+1
  5744  0630  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5745  0631  3188  2053  3185   	fcall	_memcpy
  5746                           
  5747                           ;adf7012.c: 173: Reverse_Array(reg_ptr,4);
  5748  0634  3004               	movlw	4
  5749  0635  0020               	movlb	0	; select bank0
  5750  0636  00B3               	movwf	??_Adf_Write_Register_Zero
  5751  0637  0833               	movf	??_Adf_Write_Register_Zero,w
  5752  0638  00A7               	movwf	Reverse_Array@length
  5753  0639  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5754  063A  3189  212D  3185   	fcall	_Reverse_Array
  5755                           
  5756                           ;adf7012.c: 174: Write_Adf7012_Reg(reg_ptr, 4);
  5757  063D  3004               	movlw	4
  5758  063E  0020               	movlb	0	; select bank0
  5759  063F  00B3               	movwf	??_Adf_Write_Register_Zero
  5760  0640  0833               	movf	??_Adf_Write_Register_Zero,w
  5761  0641  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5762  0642  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5763  0643  3189  2197         	fcall	_Write_Adf7012_Reg
  5764  0645  0008               	return
  5765  0646                     __end_of_Adf_Write_Register_Zero:	
  5766                           
  5767                           	psect	text30
  5768  0646                     __ptext30:	
  5769 ;; *************** function _Adf_Write_Register_Two *****************
  5770 ;; Defined at:
  5771 ;;		line 190 in file "adf7012.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  5776 ;;  reg             4   47[BANK0 ] unsigned long 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;		None               void
  5779 ;; Registers used:
  5780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5787 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5788 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5789 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;Total ram usage:       32 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; Hardware stack levels required when called:    7
  5793 ;; This function calls:
  5794 ;;		_Reverse_Array
  5795 ;;		_Write_Adf7012_Reg
  5796 ;;		_memcpy
  5797 ;; This function is called by:
  5798 ;;		_Adf_Write_Config
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _Adf_Write_Register_Two
  5804  0646                     _Adf_Write_Register_Two:	
  5805                           
  5806                           ;adf7012.c: 191: uint32_t reg =
  5807                           ;adf7012.c: 192: (2) |
  5808                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  5809                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  5810                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  5811                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  5812                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  5813                           ;adf7012.c: 198: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  5814                           
  5815                           ;incstack = 0
  5816                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5817  0646  0021               	movlb	1	; select bank1
  5818  0647  0838               	movf	(_adf_config^(0+128)+24),w
  5819  0648  3903               	andlw	3
  5820  0649  0020               	movlb	0	; select bank0
  5821  064A  00B3               	movwf	??_Adf_Write_Register_Two
  5822  064B  01B4               	clrf	??_Adf_Write_Register_Two+1
  5823  064C  01B5               	clrf	??_Adf_Write_Register_Two+2
  5824  064D  01B6               	clrf	??_Adf_Write_Register_Two+3
  5825  064E  3017               	movlw	23
  5826  064F                     u2085:	
  5827  064F  35B3               	lslf	??_Adf_Write_Register_Two,f
  5828  0650  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  5829  0651  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  5830  0652  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  5831  0653  0B89               	decfsz	9,f
  5832  0654  2E4F               	goto	u2085
  5833  0655  0021               	movlb	1	; select bank1
  5834  0656  0837               	movf	(_adf_config^(0+128)+23),w
  5835  0657  3907               	andlw	7
  5836  0658  0020               	movlb	0	; select bank0
  5837  0659  00B7               	movwf	??_Adf_Write_Register_Two+4
  5838  065A  01B8               	clrf	??_Adf_Write_Register_Two+5
  5839  065B  01B9               	clrf	??_Adf_Write_Register_Two+6
  5840  065C  01BA               	clrf	??_Adf_Write_Register_Two+7
  5841  065D  3014               	movlw	20
  5842  065E                     u2095:	
  5843  065E  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  5844  065F  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  5845  0660  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  5846  0661  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  5847  0662  0B89               	decfsz	9,f
  5848  0663  2E5E               	goto	u2095
  5849  0664  3013               	movlw	19
  5850  0665  3EA0               	addlw	_adf_config& (0+255)
  5851  0666  0086               	movwf	6
  5852  0667  0187               	clrf	7
  5853  0668  30FF               	movlw	255
  5854  0669  0501               	andwf	1,w
  5855  066A  00BB               	movwf	??_Adf_Write_Register_Two+8
  5856  066B  3141               	addfsr 1,1
  5857  066C  3001               	movlw	1
  5858  066D  0501               	andwf	1,w
  5859  066E  00BC               	movwf	??_Adf_Write_Register_Two+9
  5860  066F  3141               	addfsr 1,1
  5861  0670  3000               	movlw	0
  5862  0671  0501               	andwf	1,w
  5863  0672  00BD               	movwf	??_Adf_Write_Register_Two+10
  5864  0673  3141               	addfsr 1,1
  5865  0674  3000               	movlw	0
  5866  0675  0501               	andwf	1,w
  5867  0676  00BE               	movwf	??_Adf_Write_Register_Two+11
  5868  0677  300B               	movlw	11
  5869  0678                     u2105:	
  5870  0678  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  5871  0679  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  5872  067A  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  5873  067B  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  5874  067C  0B89               	decfsz	9,f
  5875  067D  2E78               	goto	u2105
  5876  067E  0021               	movlb	1	; select bank1
  5877  067F  0832               	movf	(_adf_config^(0+128)+18),w
  5878  0680  393F               	andlw	63
  5879  0681  0020               	movlb	0	; select bank0
  5880  0682  00BF               	movwf	??_Adf_Write_Register_Two+12
  5881  0683  01C0               	clrf	??_Adf_Write_Register_Two+13
  5882  0684  01C1               	clrf	??_Adf_Write_Register_Two+14
  5883  0685  01C2               	clrf	??_Adf_Write_Register_Two+15
  5884  0686  3005               	movlw	5
  5885  0687                     u2115:	
  5886  0687  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  5887  0688  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  5888  0689  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  5889  068A  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  5890  068B  0B89               	decfsz	9,f
  5891  068C  2E87               	goto	u2115
  5892  068D  0021               	movlb	1	; select bank1
  5893  068E  0831               	movf	(_adf_config^(0+128)+17),w
  5894  068F  3901               	andlw	1
  5895  0690  0020               	movlb	0	; select bank0
  5896  0691  00C3               	movwf	??_Adf_Write_Register_Two+16
  5897  0692  01C4               	clrf	??_Adf_Write_Register_Two+17
  5898  0693  01C5               	clrf	??_Adf_Write_Register_Two+18
  5899  0694  01C6               	clrf	??_Adf_Write_Register_Two+19
  5900  0695  3004               	movlw	4
  5901  0696                     u2125:	
  5902  0696  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  5903  0697  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  5904  0698  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  5905  0699  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  5906  069A  0B89               	decfsz	9,f
  5907  069B  2E96               	goto	u2125
  5908  069C  0021               	movlb	1	; select bank1
  5909  069D  0830               	movf	(_adf_config^(0+128)+16),w
  5910  069E  3903               	andlw	3
  5911  069F  0020               	movlb	0	; select bank0
  5912  06A0  00C7               	movwf	??_Adf_Write_Register_Two+20
  5913  06A1  01C8               	clrf	??_Adf_Write_Register_Two+21
  5914  06A2  01C9               	clrf	??_Adf_Write_Register_Two+22
  5915  06A3  01CA               	clrf	??_Adf_Write_Register_Two+23
  5916  06A4  3002               	movlw	2
  5917  06A5                     u2135:	
  5918  06A5  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  5919  06A6  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  5920  06A7  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  5921  06A8  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  5922  06A9  0B89               	decfsz	9,f
  5923  06AA  2EA5               	goto	u2135
  5924  06AB  0847               	movf	??_Adf_Write_Register_Two+20,w
  5925  06AC  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  5926  06AD  0848               	movf	??_Adf_Write_Register_Two+21,w
  5927  06AE  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  5928  06AF  0849               	movf	??_Adf_Write_Register_Two+22,w
  5929  06B0  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  5930  06B1  084A               	movf	??_Adf_Write_Register_Two+23,w
  5931  06B2  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  5932  06B3  0843               	movf	??_Adf_Write_Register_Two+16,w
  5933  06B4  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  5934  06B5  0844               	movf	??_Adf_Write_Register_Two+17,w
  5935  06B6  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  5936  06B7  0845               	movf	??_Adf_Write_Register_Two+18,w
  5937  06B8  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  5938  06B9  0846               	movf	??_Adf_Write_Register_Two+19,w
  5939  06BA  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  5940  06BB  083F               	movf	??_Adf_Write_Register_Two+12,w
  5941  06BC  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  5942  06BD  0840               	movf	??_Adf_Write_Register_Two+13,w
  5943  06BE  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  5944  06BF  0841               	movf	??_Adf_Write_Register_Two+14,w
  5945  06C0  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  5946  06C1  0842               	movf	??_Adf_Write_Register_Two+15,w
  5947  06C2  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  5948  06C3  083B               	movf	??_Adf_Write_Register_Two+8,w
  5949  06C4  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  5950  06C5  083C               	movf	??_Adf_Write_Register_Two+9,w
  5951  06C6  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  5952  06C7  083D               	movf	??_Adf_Write_Register_Two+10,w
  5953  06C8  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  5954  06C9  083E               	movf	??_Adf_Write_Register_Two+11,w
  5955  06CA  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  5956  06CB  0837               	movf	??_Adf_Write_Register_Two+4,w
  5957  06CC  04B3               	iorwf	??_Adf_Write_Register_Two,f
  5958  06CD  0838               	movf	??_Adf_Write_Register_Two+5,w
  5959  06CE  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  5960  06CF  0839               	movf	??_Adf_Write_Register_Two+6,w
  5961  06D0  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  5962  06D1  083A               	movf	??_Adf_Write_Register_Two+7,w
  5963  06D2  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  5964  06D3  3002               	movlw	2
  5965  06D4  0433               	iorwf	??_Adf_Write_Register_Two,w
  5966  06D5  00CF               	movwf	Adf_Write_Register_Two@reg
  5967  06D6  3000               	movlw	0
  5968  06D7  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  5969  06D8  00D0               	movwf	Adf_Write_Register_Two@reg+1
  5970  06D9  3000               	movlw	0
  5971  06DA  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  5972  06DB  00D1               	movwf	Adf_Write_Register_Two@reg+2
  5973  06DC  3000               	movlw	0
  5974  06DD  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  5975  06DE  00D2               	movwf	Adf_Write_Register_Two@reg+3
  5976                           
  5977                           ;adf7012.c: 201: uint8_t reg_ptr[4];
  5978                           ;adf7012.c: 202: memcpy(reg_ptr, &reg, 4);
  5979  06DF  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  5980  06E0  00B3               	movwf	??_Adf_Write_Register_Two
  5981  06E1  0833               	movf	??_Adf_Write_Register_Two,w
  5982  06E2  00A0               	movwf	memcpy@s1
  5983  06E3  3004               	movlw	4
  5984  06E4  00A1               	movwf	memcpy@n
  5985  06E5  3000               	movlw	0
  5986  06E6  00A2               	movwf	memcpy@n+1
  5987  06E7  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5988  06E8  3188  2053  3186   	fcall	_memcpy
  5989                           
  5990                           ;adf7012.c: 203: Reverse_Array(reg_ptr,4);
  5991  06EB  3004               	movlw	4
  5992  06EC  0020               	movlb	0	; select bank0
  5993  06ED  00B3               	movwf	??_Adf_Write_Register_Two
  5994  06EE  0833               	movf	??_Adf_Write_Register_Two,w
  5995  06EF  00A7               	movwf	Reverse_Array@length
  5996  06F0  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5997  06F1  3189  212D  3186   	fcall	_Reverse_Array
  5998                           
  5999                           ;adf7012.c: 204: Write_Adf7012_Reg(reg_ptr, 4);
  6000  06F4  3004               	movlw	4
  6001  06F5  0020               	movlb	0	; select bank0
  6002  06F6  00B3               	movwf	??_Adf_Write_Register_Two
  6003  06F7  0833               	movf	??_Adf_Write_Register_Two,w
  6004  06F8  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  6005  06F9  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6006  06FA  3189  2197         	fcall	_Write_Adf7012_Reg
  6007  06FC  0008               	return
  6008  06FD                     __end_of_Adf_Write_Register_Two:	
  6009                           
  6010                           	psect	text31
  6011  0069                     __ptext31:	
  6012 ;; *************** function _Adf_Write_Register_Three *****************
  6013 ;; Defined at:
  6014 ;;		line 207 in file "adf7012.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;		None
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  6019 ;;  reg             4    4[BANK1 ] unsigned long 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;		None               void
  6022 ;; Registers used:
  6023 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6030 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6031 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6032 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6033 ;;Total ram usage:       64 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    7
  6036 ;; This function calls:
  6037 ;;		_Reverse_Array
  6038 ;;		_Write_Adf7012_Reg
  6039 ;;		_memcpy
  6040 ;; This function is called by:
  6041 ;;		_Adf_Write_Config
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           
  6046                           ;psect for function _Adf_Write_Register_Three
  6047  0069                     _Adf_Write_Register_Three:	
  6048                           
  6049                           ;adf7012.c: 208: uint32_t reg =
  6050                           ;adf7012.c: 209: (3) |
  6051                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  6052                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  6053                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  6054                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  6055                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  6056                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  6057                           ;adf7012.c: 216: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  6058                           
  6059                           ;incstack = 0
  6060                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  6061  0069  0021               	movlb	1	; select bank1
  6062  006A  0846               	movf	(_adf_config^(0+128)+38),w
  6063  006B  390F               	andlw	15
  6064  006C  0020               	movlb	0	; select bank0
  6065  006D  00B3               	movwf	??_Adf_Write_Register_Three
  6066  006E  01B4               	clrf	??_Adf_Write_Register_Three+1
  6067  006F  01B5               	clrf	??_Adf_Write_Register_Three+2
  6068  0070  01B6               	clrf	??_Adf_Write_Register_Three+3
  6069  0071  301C               	movlw	28
  6070  0072                     u2145:	
  6071  0072  35B3               	lslf	??_Adf_Write_Register_Three,f
  6072  0073  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  6073  0074  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  6074  0075  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  6075  0076  0B89               	decfsz	9,f
  6076  0077  2872               	goto	u2145
  6077  0078  0021               	movlb	1	; select bank1
  6078  0079  0845               	movf	(_adf_config^(0+128)+37),w
  6079  007A  391F               	andlw	31
  6080  007B  0020               	movlb	0	; select bank0
  6081  007C  00B7               	movwf	??_Adf_Write_Register_Three+4
  6082  007D  01B8               	clrf	??_Adf_Write_Register_Three+5
  6083  007E  01B9               	clrf	??_Adf_Write_Register_Three+6
  6084  007F  01BA               	clrf	??_Adf_Write_Register_Three+7
  6085  0080  3017               	movlw	23
  6086  0081                     u2155:	
  6087  0081  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  6088  0082  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  6089  0083  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  6090  0084  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  6091  0085  0B89               	decfsz	9,f
  6092  0086  2881               	goto	u2155
  6093  0087  0021               	movlb	1	; select bank1
  6094  0088  0844               	movf	(_adf_config^(0+128)+36),w
  6095  0089  3907               	andlw	7
  6096  008A  0020               	movlb	0	; select bank0
  6097  008B  00BB               	movwf	??_Adf_Write_Register_Three+8
  6098  008C  01BC               	clrf	??_Adf_Write_Register_Three+9
  6099  008D  01BD               	clrf	??_Adf_Write_Register_Three+10
  6100  008E  01BE               	clrf	??_Adf_Write_Register_Three+11
  6101  008F  3014               	movlw	20
  6102  0090                     u2165:	
  6103  0090  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  6104  0091  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  6105  0092  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  6106  0093  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  6107  0094  0B89               	decfsz	9,f
  6108  0095  2890               	goto	u2165
  6109  0096  0021               	movlb	1	; select bank1
  6110  0097  0843               	movf	(_adf_config^(0+128)+35),w
  6111  0098  390F               	andlw	15
  6112  0099  0020               	movlb	0	; select bank0
  6113  009A  00BF               	movwf	??_Adf_Write_Register_Three+12
  6114  009B  01C0               	clrf	??_Adf_Write_Register_Three+13
  6115  009C  01C1               	clrf	??_Adf_Write_Register_Three+14
  6116  009D  01C2               	clrf	??_Adf_Write_Register_Three+15
  6117  009E  3010               	movlw	16
  6118  009F                     u2175:	
  6119  009F  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  6120  00A0  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  6121  00A1  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  6122  00A2  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  6123  00A3  0B89               	decfsz	9,f
  6124  00A4  289F               	goto	u2175
  6125  00A5  0021               	movlb	1	; select bank1
  6126  00A6  0842               	movf	(_adf_config^(0+128)+34),w
  6127  00A7  3901               	andlw	1
  6128  00A8  0020               	movlb	0	; select bank0
  6129  00A9  00C3               	movwf	??_Adf_Write_Register_Three+16
  6130  00AA  01C4               	clrf	??_Adf_Write_Register_Three+17
  6131  00AB  01C5               	clrf	??_Adf_Write_Register_Three+18
  6132  00AC  01C6               	clrf	??_Adf_Write_Register_Three+19
  6133  00AD  300F               	movlw	15
  6134  00AE                     u2185:	
  6135  00AE  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  6136  00AF  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  6137  00B0  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  6138  00B1  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  6139  00B2  0B89               	decfsz	9,f
  6140  00B3  28AE               	goto	u2185
  6141  00B4  0021               	movlb	1	; select bank1
  6142  00B5  0841               	movf	(_adf_config^(0+128)+33),w
  6143  00B6  390F               	andlw	15
  6144  00B7  0020               	movlb	0	; select bank0
  6145  00B8  00C7               	movwf	??_Adf_Write_Register_Three+20
  6146  00B9  01C8               	clrf	??_Adf_Write_Register_Three+21
  6147  00BA  01C9               	clrf	??_Adf_Write_Register_Three+22
  6148  00BB  01CA               	clrf	??_Adf_Write_Register_Three+23
  6149  00BC  300B               	movlw	11
  6150  00BD                     u2195:	
  6151  00BD  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  6152  00BE  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  6153  00BF  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  6154  00C0  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  6155  00C1  0B89               	decfsz	9,f
  6156  00C2  28BD               	goto	u2195
  6157  00C3  0021               	movlb	1	; select bank1
  6158  00C4  0840               	movf	(_adf_config^(0+128)+32),w
  6159  00C5  3901               	andlw	1
  6160  00C6  0020               	movlb	0	; select bank0
  6161  00C7  00CB               	movwf	??_Adf_Write_Register_Three+24
  6162  00C8  01CC               	clrf	??_Adf_Write_Register_Three+25
  6163  00C9  01CD               	clrf	??_Adf_Write_Register_Three+26
  6164  00CA  01CE               	clrf	??_Adf_Write_Register_Three+27
  6165  00CB  300A               	movlw	10
  6166  00CC                     u2205:	
  6167  00CC  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  6168  00CD  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  6169  00CE  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  6170  00CF  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  6171  00D0  0B89               	decfsz	9,f
  6172  00D1  28CC               	goto	u2205
  6173  00D2  0021               	movlb	1	; select bank1
  6174  00D3  083F               	movf	(_adf_config^(0+128)+31),w
  6175  00D4  3901               	andlw	1
  6176  00D5  0020               	movlb	0	; select bank0
  6177  00D6  00CF               	movwf	??_Adf_Write_Register_Three+28
  6178  00D7  01D0               	clrf	??_Adf_Write_Register_Three+29
  6179  00D8  01D1               	clrf	??_Adf_Write_Register_Three+30
  6180  00D9  01D2               	clrf	??_Adf_Write_Register_Three+31
  6181  00DA  3009               	movlw	9
  6182  00DB                     u2215:	
  6183  00DB  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  6184  00DC  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  6185  00DD  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  6186  00DE  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  6187  00DF  0B89               	decfsz	9,f
  6188  00E0  28DB               	goto	u2215
  6189  00E1  0021               	movlb	1	; select bank1
  6190  00E2  083E               	movf	(_adf_config^(0+128)+30),w
  6191  00E3  3901               	andlw	1
  6192  00E4  0020               	movlb	0	; select bank0
  6193  00E5  00D3               	movwf	??_Adf_Write_Register_Three+32
  6194  00E6  01D4               	clrf	??_Adf_Write_Register_Three+33
  6195  00E7  01D5               	clrf	??_Adf_Write_Register_Three+34
  6196  00E8  01D6               	clrf	??_Adf_Write_Register_Three+35
  6197  00E9  3008               	movlw	8
  6198  00EA                     u2225:	
  6199  00EA  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  6200  00EB  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  6201  00EC  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  6202  00ED  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  6203  00EE  0B89               	decfsz	9,f
  6204  00EF  28EA               	goto	u2225
  6205  00F0  0021               	movlb	1	; select bank1
  6206  00F1  083D               	movf	(_adf_config^(0+128)+29),w
  6207  00F2  3903               	andlw	3
  6208  00F3  0020               	movlb	0	; select bank0
  6209  00F4  00D7               	movwf	??_Adf_Write_Register_Three+36
  6210  00F5  01D8               	clrf	??_Adf_Write_Register_Three+37
  6211  00F6  01D9               	clrf	??_Adf_Write_Register_Three+38
  6212  00F7  01DA               	clrf	??_Adf_Write_Register_Three+39
  6213  00F8  3006               	movlw	6
  6214  00F9                     u2235:	
  6215  00F9  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  6216  00FA  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  6217  00FB  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  6218  00FC  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  6219  00FD  0B89               	decfsz	9,f
  6220  00FE  28F9               	goto	u2235
  6221  00FF  0021               	movlb	1	; select bank1
  6222  0100  083C               	movf	(_adf_config^(0+128)+28),w
  6223  0101  3901               	andlw	1
  6224  0102  0020               	movlb	0	; select bank0
  6225  0103  00DB               	movwf	??_Adf_Write_Register_Three+40
  6226  0104  01DC               	clrf	??_Adf_Write_Register_Three+41
  6227  0105  01DD               	clrf	??_Adf_Write_Register_Three+42
  6228  0106  01DE               	clrf	??_Adf_Write_Register_Three+43
  6229  0107  3005               	movlw	5
  6230  0108                     u2245:	
  6231  0108  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  6232  0109  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  6233  010A  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  6234  010B  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  6235  010C  0B89               	decfsz	9,f
  6236  010D  2908               	goto	u2245
  6237  010E  0021               	movlb	1	; select bank1
  6238  010F  083B               	movf	(_adf_config^(0+128)+27),w
  6239  0110  3901               	andlw	1
  6240  0111  0020               	movlb	0	; select bank0
  6241  0112  00DF               	movwf	??_Adf_Write_Register_Three+44
  6242  0113  01E0               	clrf	??_Adf_Write_Register_Three+45
  6243  0114  01E1               	clrf	??_Adf_Write_Register_Three+46
  6244  0115  01E2               	clrf	??_Adf_Write_Register_Three+47
  6245  0116  3004               	movlw	4
  6246  0117                     u2255:	
  6247  0117  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  6248  0118  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  6249  0119  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  6250  011A  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  6251  011B  0B89               	decfsz	9,f
  6252  011C  2917               	goto	u2255
  6253  011D  0021               	movlb	1	; select bank1
  6254  011E  083A               	movf	(_adf_config^(0+128)+26),w
  6255  011F  3901               	andlw	1
  6256  0120  0020               	movlb	0	; select bank0
  6257  0121  00E3               	movwf	??_Adf_Write_Register_Three+48
  6258  0122  01E4               	clrf	??_Adf_Write_Register_Three+49
  6259  0123  01E5               	clrf	??_Adf_Write_Register_Three+50
  6260  0124  01E6               	clrf	??_Adf_Write_Register_Three+51
  6261  0125  3003               	movlw	3
  6262  0126                     u2265:	
  6263  0126  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  6264  0127  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  6265  0128  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  6266  0129  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  6267  012A  0B89               	decfsz	9,f
  6268  012B  2926               	goto	u2265
  6269  012C  0021               	movlb	1	; select bank1
  6270  012D  0839               	movf	(_adf_config^(0+128)+25),w
  6271  012E  3901               	andlw	1
  6272  012F  0020               	movlb	0	; select bank0
  6273  0130  00E7               	movwf	??_Adf_Write_Register_Three+52
  6274  0131  01E8               	clrf	??_Adf_Write_Register_Three+53
  6275  0132  01E9               	clrf	??_Adf_Write_Register_Three+54
  6276  0133  01EA               	clrf	??_Adf_Write_Register_Three+55
  6277  0134  3002               	movlw	2
  6278  0135                     u2275:	
  6279  0135  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  6280  0136  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  6281  0137  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  6282  0138  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  6283  0139  0B89               	decfsz	9,f
  6284  013A  2935               	goto	u2275
  6285  013B  0867               	movf	??_Adf_Write_Register_Three+52,w
  6286  013C  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  6287  013D  0868               	movf	??_Adf_Write_Register_Three+53,w
  6288  013E  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  6289  013F  0869               	movf	??_Adf_Write_Register_Three+54,w
  6290  0140  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  6291  0141  086A               	movf	??_Adf_Write_Register_Three+55,w
  6292  0142  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  6293  0143  0863               	movf	??_Adf_Write_Register_Three+48,w
  6294  0144  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  6295  0145  0864               	movf	??_Adf_Write_Register_Three+49,w
  6296  0146  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  6297  0147  0865               	movf	??_Adf_Write_Register_Three+50,w
  6298  0148  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  6299  0149  0866               	movf	??_Adf_Write_Register_Three+51,w
  6300  014A  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  6301  014B  085F               	movf	??_Adf_Write_Register_Three+44,w
  6302  014C  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  6303  014D  0860               	movf	??_Adf_Write_Register_Three+45,w
  6304  014E  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  6305  014F  0861               	movf	??_Adf_Write_Register_Three+46,w
  6306  0150  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  6307  0151  0862               	movf	??_Adf_Write_Register_Three+47,w
  6308  0152  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  6309  0153  085B               	movf	??_Adf_Write_Register_Three+40,w
  6310  0154  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  6311  0155  085C               	movf	??_Adf_Write_Register_Three+41,w
  6312  0156  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  6313  0157  085D               	movf	??_Adf_Write_Register_Three+42,w
  6314  0158  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  6315  0159  085E               	movf	??_Adf_Write_Register_Three+43,w
  6316  015A  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  6317  015B  0857               	movf	??_Adf_Write_Register_Three+36,w
  6318  015C  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  6319  015D  0858               	movf	??_Adf_Write_Register_Three+37,w
  6320  015E  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  6321  015F  0859               	movf	??_Adf_Write_Register_Three+38,w
  6322  0160  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  6323  0161  085A               	movf	??_Adf_Write_Register_Three+39,w
  6324  0162  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  6325  0163  0853               	movf	??_Adf_Write_Register_Three+32,w
  6326  0164  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  6327  0165  0854               	movf	??_Adf_Write_Register_Three+33,w
  6328  0166  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  6329  0167  0855               	movf	??_Adf_Write_Register_Three+34,w
  6330  0168  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  6331  0169  0856               	movf	??_Adf_Write_Register_Three+35,w
  6332  016A  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  6333  016B  084F               	movf	??_Adf_Write_Register_Three+28,w
  6334  016C  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  6335  016D  0850               	movf	??_Adf_Write_Register_Three+29,w
  6336  016E  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  6337  016F  0851               	movf	??_Adf_Write_Register_Three+30,w
  6338  0170  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  6339  0171  0852               	movf	??_Adf_Write_Register_Three+31,w
  6340  0172  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  6341  0173  084B               	movf	??_Adf_Write_Register_Three+24,w
  6342  0174  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  6343  0175  084C               	movf	??_Adf_Write_Register_Three+25,w
  6344  0176  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  6345  0177  084D               	movf	??_Adf_Write_Register_Three+26,w
  6346  0178  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  6347  0179  084E               	movf	??_Adf_Write_Register_Three+27,w
  6348  017A  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  6349  017B  0847               	movf	??_Adf_Write_Register_Three+20,w
  6350  017C  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  6351  017D  0848               	movf	??_Adf_Write_Register_Three+21,w
  6352  017E  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  6353  017F  0849               	movf	??_Adf_Write_Register_Three+22,w
  6354  0180  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  6355  0181  084A               	movf	??_Adf_Write_Register_Three+23,w
  6356  0182  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  6357  0183  0843               	movf	??_Adf_Write_Register_Three+16,w
  6358  0184  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  6359  0185  0844               	movf	??_Adf_Write_Register_Three+17,w
  6360  0186  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  6361  0187  0845               	movf	??_Adf_Write_Register_Three+18,w
  6362  0188  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  6363  0189  0846               	movf	??_Adf_Write_Register_Three+19,w
  6364  018A  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  6365  018B  083F               	movf	??_Adf_Write_Register_Three+12,w
  6366  018C  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  6367  018D  0840               	movf	??_Adf_Write_Register_Three+13,w
  6368  018E  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  6369  018F  0841               	movf	??_Adf_Write_Register_Three+14,w
  6370  0190  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  6371  0191  0842               	movf	??_Adf_Write_Register_Three+15,w
  6372  0192  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  6373  0193  083B               	movf	??_Adf_Write_Register_Three+8,w
  6374  0194  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  6375  0195  083C               	movf	??_Adf_Write_Register_Three+9,w
  6376  0196  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  6377  0197  083D               	movf	??_Adf_Write_Register_Three+10,w
  6378  0198  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  6379  0199  083E               	movf	??_Adf_Write_Register_Three+11,w
  6380  019A  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  6381  019B  0837               	movf	??_Adf_Write_Register_Three+4,w
  6382  019C  04B3               	iorwf	??_Adf_Write_Register_Three,f
  6383  019D  0838               	movf	??_Adf_Write_Register_Three+5,w
  6384  019E  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  6385  019F  0839               	movf	??_Adf_Write_Register_Three+6,w
  6386  01A0  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  6387  01A1  083A               	movf	??_Adf_Write_Register_Three+7,w
  6388  01A2  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  6389  01A3  3003               	movlw	3
  6390  01A4  0433               	iorwf	??_Adf_Write_Register_Three,w
  6391  01A5  0021               	movlb	1	; select bank1
  6392  01A6  00D7               	movwf	Adf_Write_Register_Three@reg^(0+128)
  6393  01A7  3000               	movlw	0
  6394  01A8  0020               	movlb	0	; select bank0
  6395  01A9  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  6396  01AA  0021               	movlb	1	; select bank1
  6397  01AB  00D8               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  6398  01AC  3000               	movlw	0
  6399  01AD  0020               	movlb	0	; select bank0
  6400  01AE  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  6401  01AF  0021               	movlb	1	; select bank1
  6402  01B0  00D9               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  6403  01B1  3000               	movlw	0
  6404  01B2  0020               	movlb	0	; select bank0
  6405  01B3  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  6406  01B4  0021               	movlb	1	; select bank1
  6407  01B5  00DA               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  6408                           
  6409                           ;adf7012.c: 226: uint8_t reg_ptr[4];
  6410                           ;adf7012.c: 227: memcpy(reg_ptr, &reg, 4);
  6411  01B6  30D7               	movlw	Adf_Write_Register_Three@reg& (0+255)
  6412  01B7  0020               	movlb	0	; select bank0
  6413  01B8  00B3               	movwf	??_Adf_Write_Register_Three
  6414  01B9  0833               	movf	??_Adf_Write_Register_Three,w
  6415  01BA  00A0               	movwf	memcpy@s1
  6416  01BB  3004               	movlw	4
  6417  01BC  00A1               	movwf	memcpy@n
  6418  01BD  3000               	movlw	0
  6419  01BE  00A2               	movwf	memcpy@n+1
  6420  01BF  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6421  01C0  3188  2053  3180   	fcall	_memcpy
  6422                           
  6423                           ;adf7012.c: 228: Reverse_Array(reg_ptr,4);
  6424  01C3  3004               	movlw	4
  6425  01C4  0020               	movlb	0	; select bank0
  6426  01C5  00B3               	movwf	??_Adf_Write_Register_Three
  6427  01C6  0833               	movf	??_Adf_Write_Register_Three,w
  6428  01C7  00A7               	movwf	Reverse_Array@length
  6429  01C8  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6430  01C9  3189  212D  3180   	fcall	_Reverse_Array
  6431                           
  6432                           ;adf7012.c: 229: Write_Adf7012_Reg(reg_ptr, 4);
  6433  01CC  3004               	movlw	4
  6434  01CD  0020               	movlb	0	; select bank0
  6435  01CE  00B3               	movwf	??_Adf_Write_Register_Three
  6436  01CF  0833               	movf	??_Adf_Write_Register_Three,w
  6437  01D0  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  6438  01D1  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6439  01D2  3189  2197         	fcall	_Write_Adf7012_Reg
  6440  01D4  0008               	return
  6441  01D5                     __end_of_Adf_Write_Register_Three:	
  6442                           
  6443                           	psect	text32
  6444  0A84                     __ptext32:	
  6445 ;; *************** function _Adf_Write_Register_One *****************
  6446 ;; Defined at:
  6447 ;;		line 177 in file "adf7012.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  reg             4   31[BANK0 ] unsigned long 
  6452 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  6453 ;; Return value:  Size  Location     Type
  6454 ;;		None               void
  6455 ;; Registers used:
  6456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;Total ram usage:       19 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    7
  6469 ;; This function calls:
  6470 ;;		_Reverse_Array
  6471 ;;		_Write_Adf7012_Reg
  6472 ;;		_memcpy
  6473 ;; This function is called by:
  6474 ;;		_Adf_Write_Config
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           
  6479                           ;psect for function _Adf_Write_Register_One
  6480  0A84                     _Adf_Write_Register_One:	
  6481                           
  6482                           ;adf7012.c: 178: uint32_t reg =
  6483                           ;adf7012.c: 179: (1) |
  6484                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  6485                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  6486                           ;adf7012.c: 182: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  6487                           
  6488                           ;incstack = 0
  6489                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6490  0A84  0021               	movlb	1	; select bank1
  6491  0A85  082F               	movf	(_adf_config^(0+128)+15),w
  6492  0A86  3901               	andlw	1
  6493  0A87  0020               	movlb	0	; select bank0
  6494  0A88  00B3               	movwf	??_Adf_Write_Register_One
  6495  0A89  01B4               	clrf	??_Adf_Write_Register_One+1
  6496  0A8A  01B5               	clrf	??_Adf_Write_Register_One+2
  6497  0A8B  01B6               	clrf	??_Adf_Write_Register_One+3
  6498  0A8C  3016               	movlw	22
  6499  0A8D                     u2055:	
  6500  0A8D  35B3               	lslf	??_Adf_Write_Register_One,f
  6501  0A8E  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  6502  0A8F  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  6503  0A90  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  6504  0A91  0B89               	decfsz	9,f
  6505  0A92  2A8D               	goto	u2055
  6506  0A93  0021               	movlb	1	; select bank1
  6507  0A94  082E               	movf	(_adf_config^(0+128)+14),w
  6508  0A95  0020               	movlb	0	; select bank0
  6509  0A96  00B7               	movwf	??_Adf_Write_Register_One+4
  6510  0A97  01B8               	clrf	??_Adf_Write_Register_One+5
  6511  0A98  01B9               	clrf	??_Adf_Write_Register_One+6
  6512  0A99  01BA               	clrf	??_Adf_Write_Register_One+7
  6513  0A9A  300E               	movlw	14
  6514  0A9B                     u2065:	
  6515  0A9B  35B7               	lslf	??_Adf_Write_Register_One+4,f
  6516  0A9C  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  6517  0A9D  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  6518  0A9E  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  6519  0A9F  0B89               	decfsz	9,f
  6520  0AA0  2A9B               	goto	u2065
  6521  0AA1  300A               	movlw	10
  6522  0AA2  3EA0               	addlw	_adf_config& (0+255)
  6523  0AA3  0086               	movwf	6
  6524  0AA4  0187               	clrf	7
  6525  0AA5  30FF               	movlw	255
  6526  0AA6  0501               	andwf	1,w
  6527  0AA7  00BB               	movwf	??_Adf_Write_Register_One+8
  6528  0AA8  3141               	addfsr 1,1
  6529  0AA9  300F               	movlw	15
  6530  0AAA  0501               	andwf	1,w
  6531  0AAB  00BC               	movwf	??_Adf_Write_Register_One+9
  6532  0AAC  3141               	addfsr 1,1
  6533  0AAD  3000               	movlw	0
  6534  0AAE  0501               	andwf	1,w
  6535  0AAF  00BD               	movwf	??_Adf_Write_Register_One+10
  6536  0AB0  3141               	addfsr 1,1
  6537  0AB1  3000               	movlw	0
  6538  0AB2  0501               	andwf	1,w
  6539  0AB3  00BE               	movwf	??_Adf_Write_Register_One+11
  6540  0AB4  3002               	movlw	2
  6541  0AB5                     u2075:	
  6542  0AB5  35BB               	lslf	??_Adf_Write_Register_One+8,f
  6543  0AB6  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  6544  0AB7  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  6545  0AB8  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  6546  0AB9  0B89               	decfsz	9,f
  6547  0ABA  2AB5               	goto	u2075
  6548  0ABB  083B               	movf	??_Adf_Write_Register_One+8,w
  6549  0ABC  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  6550  0ABD  083C               	movf	??_Adf_Write_Register_One+9,w
  6551  0ABE  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  6552  0ABF  083D               	movf	??_Adf_Write_Register_One+10,w
  6553  0AC0  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  6554  0AC1  083E               	movf	??_Adf_Write_Register_One+11,w
  6555  0AC2  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  6556  0AC3  0837               	movf	??_Adf_Write_Register_One+4,w
  6557  0AC4  04B3               	iorwf	??_Adf_Write_Register_One,f
  6558  0AC5  0838               	movf	??_Adf_Write_Register_One+5,w
  6559  0AC6  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  6560  0AC7  0839               	movf	??_Adf_Write_Register_One+6,w
  6561  0AC8  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  6562  0AC9  083A               	movf	??_Adf_Write_Register_One+7,w
  6563  0ACA  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  6564  0ACB  3001               	movlw	1
  6565  0ACC  0433               	iorwf	??_Adf_Write_Register_One,w
  6566  0ACD  00BF               	movwf	Adf_Write_Register_One@reg
  6567  0ACE  3000               	movlw	0
  6568  0ACF  0434               	iorwf	??_Adf_Write_Register_One+1,w
  6569  0AD0  00C0               	movwf	Adf_Write_Register_One@reg+1
  6570  0AD1  3000               	movlw	0
  6571  0AD2  0435               	iorwf	??_Adf_Write_Register_One+2,w
  6572  0AD3  00C1               	movwf	Adf_Write_Register_One@reg+2
  6573  0AD4  3000               	movlw	0
  6574  0AD5  0436               	iorwf	??_Adf_Write_Register_One+3,w
  6575  0AD6  00C2               	movwf	Adf_Write_Register_One@reg+3
  6576                           
  6577                           ;adf7012.c: 184: uint8_t reg_ptr[3];
  6578                           ;adf7012.c: 185: memcpy(reg_ptr, &reg, 3);
  6579  0AD7  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  6580  0AD8  00B3               	movwf	??_Adf_Write_Register_One
  6581  0AD9  0833               	movf	??_Adf_Write_Register_One,w
  6582  0ADA  00A0               	movwf	memcpy@s1
  6583  0ADB  3003               	movlw	3
  6584  0ADC  00A1               	movwf	memcpy@n
  6585  0ADD  3000               	movlw	0
  6586  0ADE  00A2               	movwf	memcpy@n+1
  6587  0ADF  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  6588  0AE0  3188  2053  318A   	fcall	_memcpy
  6589                           
  6590                           ;adf7012.c: 186: Reverse_Array(reg_ptr,3);
  6591  0AE3  3003               	movlw	3
  6592  0AE4  0020               	movlb	0	; select bank0
  6593  0AE5  00B3               	movwf	??_Adf_Write_Register_One
  6594  0AE6  0833               	movf	??_Adf_Write_Register_One,w
  6595  0AE7  00A7               	movwf	Reverse_Array@length
  6596  0AE8  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  6597  0AE9  3189  212D  318A   	fcall	_Reverse_Array
  6598                           
  6599                           ;adf7012.c: 187: Write_Adf7012_Reg(reg_ptr, 3);
  6600  0AEC  3003               	movlw	3
  6601  0AED  0020               	movlb	0	; select bank0
  6602  0AEE  00B3               	movwf	??_Adf_Write_Register_One
  6603  0AEF  0833               	movf	??_Adf_Write_Register_One,w
  6604  0AF0  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  6605  0AF1  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  6606  0AF2  3189  2197         	fcall	_Write_Adf7012_Reg
  6607  0AF4  0008               	return
  6608  0AF5                     __end_of_Adf_Write_Register_One:	
  6609                           
  6610                           	psect	text33
  6611  0997                     __ptext33:	
  6612 ;; *************** function _Write_Adf7012_Reg *****************
  6613 ;; Defined at:
  6614 ;;		line 92 in file "utility.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  reg_value       1    wreg     PTR unsigned char 
  6617 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6618 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  6619 ;; Auto vars:     Size  Location     Type
  6620 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  6621 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6622 ;;  i               1   13[BANK0 ] unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  1    wreg      unsigned char 
  6625 ;; Registers used:
  6626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6632 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6633 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;Total ram usage:        4 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; Hardware stack levels required when called:    6
  6639 ;; This function calls:
  6640 ;;		_Delay_ms
  6641 ;;		_Spi_Byte_Send
  6642 ;; This function is called by:
  6643 ;;		_Adf_Write_Register_Zero
  6644 ;;		_Adf_Write_Register_One
  6645 ;;		_Adf_Write_Register_Two
  6646 ;;		_Adf_Write_Register_Three
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           
  6651                           ;psect for function _Write_Adf7012_Reg
  6652  0997                     _Write_Adf7012_Reg:	
  6653                           
  6654                           ;incstack = 0
  6655                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6656                           ;Write_Adf7012_Reg@reg_value stored from wreg
  6657  0997  0020               	movlb	0	; select bank0
  6658  0998  00AC               	movwf	Write_Adf7012_Reg@reg_value
  6659                           
  6660                           ;utility.c: 94: uint8_t i = 0;
  6661  0999  01AD               	clrf	Write_Adf7012_Reg@i
  6662                           
  6663                           ;utility.c: 95: Delay_ms(1);
  6664  099A  3001               	movlw	1
  6665  099B  00A0               	movwf	Delay_ms@time_to_delay
  6666  099C  3000               	movlw	0
  6667  099D  00A1               	movwf	Delay_ms@time_to_delay+1
  6668  099E  3188  202A  3189   	fcall	_Delay_ms
  6669                           
  6670                           ;utility.c: 96: PORTAbits.RA4 = 0;;
  6671  09A1  0020               	movlb	0	; select bank0
  6672  09A2  120C               	bcf	12,4	;volatile
  6673                           
  6674                           ;utility.c: 97: Delay_ms(1);
  6675  09A3  3001               	movlw	1
  6676  09A4  00A0               	movwf	Delay_ms@time_to_delay
  6677  09A5  3000               	movlw	0
  6678  09A6  00A1               	movwf	Delay_ms@time_to_delay+1
  6679  09A7  3188  202A  3189   	fcall	_Delay_ms
  6680                           
  6681                           ;utility.c: 99: for (i = 0; i < size_of_reg; i++){
  6682  09AA  0020               	movlb	0	; select bank0
  6683  09AB  01AD               	clrf	Write_Adf7012_Reg@i
  6684  09AC                     l2051:	
  6685  09AC  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  6686  09AD  022D               	subwf	Write_Adf7012_Reg@i,w
  6687  09AE  1803               	btfsc	3,0
  6688  09AF  29C0               	goto	l2053
  6689                           
  6690                           ;utility.c: 100: Spi_Byte_Send(*(reg_value+i));
  6691  09B0  082D               	movf	Write_Adf7012_Reg@i,w
  6692  09B1  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  6693  09B2  00AB               	movwf	??_Write_Adf7012_Reg
  6694  09B3  082B               	movf	??_Write_Adf7012_Reg,w
  6695  09B4  0086               	movwf	6
  6696  09B5  0187               	clrf	7
  6697  09B6  0801               	movf	1,w
  6698  09B7  3188  207C  3189   	fcall	_Spi_Byte_Send
  6699  09BA  3001               	movlw	1
  6700  09BB  0020               	movlb	0	; select bank0
  6701  09BC  00AB               	movwf	??_Write_Adf7012_Reg
  6702  09BD  082B               	movf	??_Write_Adf7012_Reg,w
  6703  09BE  07AD               	addwf	Write_Adf7012_Reg@i,f
  6704  09BF  29AC               	goto	l2051
  6705  09C0                     l2053:	
  6706                           
  6707                           ;utility.c: 101: }
  6708                           ;utility.c: 103: Delay_ms(1);
  6709  09C0  3001               	movlw	1
  6710  09C1  00A0               	movwf	Delay_ms@time_to_delay
  6711  09C2  3000               	movlw	0
  6712  09C3  00A1               	movwf	Delay_ms@time_to_delay+1
  6713  09C4  3188  202A  3189   	fcall	_Delay_ms
  6714                           
  6715                           ;utility.c: 104: PORTAbits.RA4 = 1;;
  6716  09C7  0020               	movlb	0	; select bank0
  6717  09C8  160C               	bsf	12,4	;volatile
  6718                           
  6719                           ;utility.c: 106: Delay_ms(1);
  6720  09C9  3001               	movlw	1
  6721  09CA  00A0               	movwf	Delay_ms@time_to_delay
  6722  09CB  3000               	movlw	0
  6723  09CC  00A1               	movwf	Delay_ms@time_to_delay+1
  6724  09CD  3188  202A         	fcall	_Delay_ms
  6725  09CF  0008               	return
  6726  09D0                     __end_of_Write_Adf7012_Reg:	
  6727                           ;utility.c: 107: return 1;
  6728                           ;	Return value of _Write_Adf7012_Reg is never used
  6729                           
  6730                           
  6731                           	psect	text34
  6732  087C                     __ptext34:	
  6733 ;; *************** function _Spi_Byte_Send *****************
  6734 ;; Defined at:
  6735 ;;		line 230 in file "utility.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;  data            1    wreg     unsigned char 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  data            1    7[BANK0 ] unsigned char 
  6740 ;;  i               1    9[BANK0 ] unsigned char 
  6741 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  1    wreg      unsigned char 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0, pclath, cstack
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6752 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6754 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6755 ;;Total ram usage:        4 bytes
  6756 ;; Hardware stack levels used:    1
  6757 ;; Hardware stack levels required when called:    5
  6758 ;; This function calls:
  6759 ;;		_Delay_ms
  6760 ;; This function is called by:
  6761 ;;		_Write_Adf7012_Reg
  6762 ;; This function uses a non-reentrant model
  6763 ;;
  6764                           
  6765                           
  6766                           ;psect for function _Spi_Byte_Send
  6767  087C                     _Spi_Byte_Send:	
  6768                           
  6769                           ;incstack = 0
  6770                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  6771                           ;Spi_Byte_Send@data stored from wreg
  6772  087C  0020               	movlb	0	; select bank0
  6773  087D  00A7               	movwf	Spi_Byte_Send@data
  6774                           
  6775                           ;utility.c: 232: PORTAbits.RA2 = 0;
  6776  087E  110C               	bcf	12,2	;volatile
  6777                           
  6778                           ;utility.c: 233: uint8_t i;
  6779                           ;utility.c: 234: uint8_t data_to_send;
  6780                           ;utility.c: 235: data_to_send = data;
  6781  087F  0827               	movf	Spi_Byte_Send@data,w
  6782  0880  00A6               	movwf	??_Spi_Byte_Send
  6783  0881  0826               	movf	??_Spi_Byte_Send,w
  6784  0882  00A8               	movwf	Spi_Byte_Send@data_to_send
  6785                           
  6786                           ;utility.c: 236: for(i = 0; i <8; i++){
  6787  0883  01A9               	clrf	Spi_Byte_Send@i
  6788  0884                     L1:	
  6789  0884  3008               	movlw	8
  6790  0885  0229               	subwf	Spi_Byte_Send@i,w
  6791  0886  1803               	btfsc	3,0
  6792  0887  0008               	return
  6793                           
  6794                           ;utility.c: 238: if(data_to_send & 0x80)
  6795  0888  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  6796  0889  288C               	goto	l226
  6797                           
  6798                           ;utility.c: 239: PORTCbits.RC2 = 1;
  6799  088A  150E               	bsf	14,2	;volatile
  6800  088B  288D               	goto	l2015
  6801  088C                     l226:	
  6802                           
  6803                           ;utility.c: 240: else
  6804                           ;utility.c: 241: PORTCbits.RC2 = 0;
  6805  088C  110E               	bcf	14,2	;volatile
  6806  088D                     l2015:	
  6807                           
  6808                           ;utility.c: 243: data_to_send <<= 1;
  6809  088D  1003               	clrc
  6810  088E  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  6811                           
  6812                           ;utility.c: 245: PORTAbits.RA2 = 1;
  6813  088F  150C               	bsf	12,2	;volatile
  6814                           
  6815                           ;utility.c: 246: Delay_ms(1);
  6816  0890  3001               	movlw	1
  6817  0891  00A0               	movwf	Delay_ms@time_to_delay
  6818  0892  3000               	movlw	0
  6819  0893  00A1               	movwf	Delay_ms@time_to_delay+1
  6820  0894  3188  202A  3188   	fcall	_Delay_ms
  6821                           
  6822                           ;utility.c: 247: PORTAbits.RA2 = 0;
  6823  0897  0020               	movlb	0	; select bank0
  6824  0898  110C               	bcf	12,2	;volatile
  6825                           
  6826                           ;utility.c: 248: Delay_ms(1);
  6827  0899  3001               	movlw	1
  6828  089A  00A0               	movwf	Delay_ms@time_to_delay
  6829  089B  3000               	movlw	0
  6830  089C  00A1               	movwf	Delay_ms@time_to_delay+1
  6831  089D  3188  202A  3188   	fcall	_Delay_ms
  6832  08A0  3001               	movlw	1
  6833  08A1  0020               	movlb	0	; select bank0
  6834  08A2  00A6               	movwf	??_Spi_Byte_Send
  6835  08A3  0826               	movf	??_Spi_Byte_Send,w
  6836  08A4  07A9               	addwf	Spi_Byte_Send@i,f
  6837  08A5  2884               	goto	L1
  6838  08A6                     __end_of_Spi_Byte_Send:	
  6839                           ;utility.c: 250: }
  6840                           ;utility.c: 251: return 1;
  6841                           ;	Return value of _Spi_Byte_Send is never used
  6842                           
  6843                           
  6844                           	psect	text35
  6845  092D                     __ptext35:	
  6846 ;; *************** function _Reverse_Array *****************
  6847 ;; Defined at:
  6848 ;;		line 208 in file "utility.c"
  6849 ;; Parameters:    Size  Location     Type
  6850 ;;  input           1    wreg     PTR unsigned char 
  6851 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6852 ;;  length          1    7[BANK0 ] unsigned char 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  input           1   17[BANK0 ] PTR unsigned char 
  6855 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6856 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  6857 ;;  i               1   18[BANK0 ] unsigned char 
  6858 ;; Return value:  Size  Location     Type
  6859 ;;                  1    wreg      unsigned char 
  6860 ;; Registers used:
  6861 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6862 ;; Tracked objects:
  6863 ;;		On entry : 0/0
  6864 ;;		On exit  : 0/0
  6865 ;;		Unchanged: 0/0
  6866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6867 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;Total ram usage:       12 bytes
  6872 ;; Hardware stack levels used:    1
  6873 ;; Hardware stack levels required when called:    4
  6874 ;; This function calls:
  6875 ;;		_memcpy
  6876 ;; This function is called by:
  6877 ;;		_Adf_Write_Register_Zero
  6878 ;;		_Adf_Write_Register_One
  6879 ;;		_Adf_Write_Register_Two
  6880 ;;		_Adf_Write_Register_Three
  6881 ;; This function uses a non-reentrant model
  6882 ;;
  6883                           
  6884                           
  6885                           ;psect for function _Reverse_Array
  6886  092D                     _Reverse_Array:	
  6887                           
  6888                           ;incstack = 0
  6889                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6890                           ;Reverse_Array@input stored from wreg
  6891  092D  0020               	movlb	0	; select bank0
  6892  092E  00B1               	movwf	Reverse_Array@input
  6893                           
  6894                           ;utility.c: 209: uint8_t i = 0;
  6895  092F  01B2               	clrf	Reverse_Array@i
  6896                           
  6897                           ;utility.c: 210: uint8_t buffer_array[4];
  6898                           ;utility.c: 211: memcpy(buffer_array, input, length);
  6899  0930  0831               	movf	Reverse_Array@input,w
  6900  0931  00A8               	movwf	??_Reverse_Array
  6901  0932  0828               	movf	??_Reverse_Array,w
  6902  0933  00A0               	movwf	memcpy@s1
  6903  0934  0827               	movf	Reverse_Array@length,w
  6904  0935  00A9               	movwf	??_Reverse_Array+1
  6905  0936  01AA               	clrf	??_Reverse_Array+2
  6906  0937  0829               	movf	??_Reverse_Array+1,w
  6907  0938  00A1               	movwf	memcpy@n
  6908  0939  082A               	movf	??_Reverse_Array+2,w
  6909  093A  00A2               	movwf	memcpy@n+1
  6910  093B  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6911  093C  3188  2053  3189   	fcall	_memcpy
  6912                           
  6913                           ;utility.c: 213: for(i = 0; i<length; i++){
  6914  093F  0020               	movlb	0	; select bank0
  6915  0940  01B2               	clrf	Reverse_Array@i
  6916  0941                     l2069:	
  6917  0941  0827               	movf	Reverse_Array@length,w
  6918  0942  0232               	subwf	Reverse_Array@i,w
  6919  0943  1803               	btfsc	3,0
  6920  0944  0008               	return
  6921                           
  6922                           ;utility.c: 214: *(input+i) = *(buffer_array+(length-1)-i);
  6923  0945  30FF               	movlw	-1
  6924  0946  0727               	addwf	Reverse_Array@length,w
  6925  0947  00A8               	movwf	??_Reverse_Array
  6926  0948  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6927  0949  0728               	addwf	??_Reverse_Array,w
  6928  094A  00A9               	movwf	??_Reverse_Array+1
  6929  094B  0332               	decf	Reverse_Array@i,w
  6930  094C  3AFF               	xorlw	255
  6931  094D  0729               	addwf	??_Reverse_Array+1,w
  6932  094E  00AA               	movwf	??_Reverse_Array+2
  6933  094F  082A               	movf	??_Reverse_Array+2,w
  6934  0950  0086               	movwf	6
  6935  0951  0187               	clrf	7
  6936  0952  0801               	movf	1,w
  6937  0953  00AB               	movwf	??_Reverse_Array+3
  6938  0954  0832               	movf	Reverse_Array@i,w
  6939  0955  0731               	addwf	Reverse_Array@input,w
  6940  0956  00AC               	movwf	??_Reverse_Array+4
  6941  0957  082C               	movf	??_Reverse_Array+4,w
  6942  0958  0086               	movwf	6
  6943  0959  0187               	clrf	7
  6944  095A  082B               	movf	??_Reverse_Array+3,w
  6945  095B  0081               	movwf	1
  6946  095C  3001               	movlw	1
  6947  095D  00A8               	movwf	??_Reverse_Array
  6948  095E  0828               	movf	??_Reverse_Array,w
  6949  095F  07B2               	addwf	Reverse_Array@i,f
  6950  0960  2941               	goto	l2069
  6951  0961                     __end_of_Reverse_Array:	
  6952                           ;utility.c: 215: }
  6953                           ;utility.c: 219: return 1;
  6954                           ;	Return value of _Reverse_Array is never used
  6955                           
  6956                           
  6957                           	psect	text36
  6958  0853                     __ptext36:	
  6959 ;; *************** function _memcpy *****************
  6960 ;; Defined at:
  6961 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  d1              1    wreg     PTR void 
  6964 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6965 ;;		 -> Reverse_Array@buffer_array(4), 
  6966 ;;  s1              1    0[BANK0 ] PTR const void 
  6967 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6968 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6969 ;;  n               2    1[BANK0 ] unsigned int 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  d1              1    6[BANK0 ] PTR void 
  6972 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6973 ;;		 -> Reverse_Array@buffer_array(4), 
  6974 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6975 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6976 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6977 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6978 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6979 ;;		 -> Reverse_Array@buffer_array(4), 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  1    wreg      PTR void 
  6982 ;; Registers used:
  6983 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6989 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6990 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6992 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6993 ;;Total ram usage:        7 bytes
  6994 ;; Hardware stack levels used:    1
  6995 ;; Hardware stack levels required when called:    3
  6996 ;; This function calls:
  6997 ;;		Nothing
  6998 ;; This function is called by:
  6999 ;;		_Reverse_Array
  7000 ;;		_Adf_Write_Register_Zero
  7001 ;;		_Adf_Write_Register_One
  7002 ;;		_Adf_Write_Register_Two
  7003 ;;		_Adf_Write_Register_Three
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           
  7008                           ;psect for function _memcpy
  7009  0853                     _memcpy:	
  7010                           
  7011                           ;incstack = 0
  7012                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7013                           ;memcpy@d1 stored from wreg
  7014  0853  0020               	movlb	0	; select bank0
  7015  0854  00A6               	movwf	memcpy@d1
  7016  0855  0820               	movf	memcpy@s1,w
  7017  0856  00A3               	movwf	??_memcpy
  7018  0857  0823               	movf	??_memcpy,w
  7019  0858  00A5               	movwf	memcpy@s
  7020  0859  0826               	movf	memcpy@d1,w
  7021  085A  00A3               	movwf	??_memcpy
  7022  085B  0823               	movf	??_memcpy,w
  7023  085C  00A4               	movwf	memcpy@d
  7024  085D                     l2037:	
  7025  085D  3001               	movlw	1
  7026  085E  02A1               	subwf	memcpy@n,f
  7027  085F  3000               	movlw	0
  7028  0860  3BA2               	subwfb	memcpy@n+1,f
  7029  0861  30FF               	movlw	255
  7030  0862  0622               	xorwf	memcpy@n+1,w
  7031  0863  1D03               	skipz
  7032  0864  2867               	goto	u1945
  7033  0865  30FF               	movlw	255
  7034  0866  0621               	xorwf	memcpy@n,w
  7035  0867                     u1945:	
  7036  0867  1903               	btfsc	3,2
  7037  0868  0008               	return
  7038  0869  0825               	movf	memcpy@s,w
  7039  086A  0086               	movwf	6
  7040  086B  0187               	clrf	7
  7041  086C  0801               	movf	1,w
  7042  086D  00A3               	movwf	??_memcpy
  7043  086E  0824               	movf	memcpy@d,w
  7044  086F  0086               	movwf	6
  7045  0870  0187               	clrf	7
  7046  0871  0823               	movf	??_memcpy,w
  7047  0872  0081               	movwf	1
  7048  0873  3001               	movlw	1
  7049  0874  00A3               	movwf	??_memcpy
  7050  0875  0823               	movf	??_memcpy,w
  7051  0876  07A5               	addwf	memcpy@s,f
  7052  0877  3001               	movlw	1
  7053  0878  00A3               	movwf	??_memcpy
  7054  0879  0823               	movf	??_memcpy,w
  7055  087A  07A4               	addwf	memcpy@d,f
  7056  087B  285D               	goto	l2037
  7057  087C                     __end_of_memcpy:	
  7058                           ;	Return value of _memcpy is never used
  7059                           
  7060                           
  7061                           	psect	text37
  7062  07FD                     __ptext37:	
  7063 ;; *************** function _Adf_Locked *****************
  7064 ;; Defined at:
  7065 ;;		line 272 in file "adf7012.c"
  7066 ;; Parameters:    Size  Location     Type
  7067 ;;		None
  7068 ;; Auto vars:     Size  Location     Type
  7069 ;;		None
  7070 ;; Return value:  Size  Location     Type
  7071 ;;                  1    wreg      unsigned char 
  7072 ;; Registers used:
  7073 ;;		wreg, status,2, status,0, pclath, cstack
  7074 ;; Tracked objects:
  7075 ;;		On entry : 0/0
  7076 ;;		On exit  : 0/0
  7077 ;;		Unchanged: 0/0
  7078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7083 ;;Total ram usage:        0 bytes
  7084 ;; Hardware stack levels used:    1
  7085 ;; Hardware stack levels required when called:    6
  7086 ;; This function calls:
  7087 ;;		_Read_Adf7012_Muxout
  7088 ;; This function is called by:
  7089 ;;		_Adf_Lock
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           
  7094                           ;psect for function _Adf_Locked
  7095  07FD                     _Adf_Locked:	
  7096                           
  7097                           ;adf7012.c: 274: return Read_Adf7012_Muxout();
  7098                           
  7099                           ;incstack = 0
  7100                           ; Regs used in _Adf_Locked: [wreg+status,2+status,0+pclath+cstack]
  7101  07FD  3196  26FF         	fcall	_Read_Adf7012_Muxout
  7102  07FF  0008               	return
  7103  0800                     __end_of_Adf_Locked:	
  7104                           
  7105                           	psect	text38
  7106  16FF                     __ptext38:	
  7107 ;; *************** function _Read_Adf7012_Muxout *****************
  7108 ;; Defined at:
  7109 ;;		line 72 in file "utility.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;		None
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;		None
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  1    wreg      unsigned char 
  7116 ;; Registers used:
  7117 ;;		wreg, status,2, status,0, pclath, cstack
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;Total ram usage:        0 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    5
  7130 ;; This function calls:
  7131 ;;		_Delay_ms
  7132 ;; This function is called by:
  7133 ;;		_Adf_Locked
  7134 ;;		_Ptt_On
  7135 ;; This function uses a non-reentrant model
  7136 ;;
  7137                           
  7138                           
  7139                           ;psect for function _Read_Adf7012_Muxout
  7140  16FF                     _Read_Adf7012_Muxout:	
  7141                           
  7142                           ;utility.c: 74: Delay_ms(1);
  7143                           
  7144                           ;incstack = 0
  7145                           ; Regs used in _Read_Adf7012_Muxout: [wreg+status,2+status,0+pclath+cstack]
  7146  16FF  3001               	movlw	1
  7147  1700  0020               	movlb	0	; select bank0
  7148  1701  00A0               	movwf	Delay_ms@time_to_delay
  7149  1702  3000               	movlw	0
  7150  1703  00A1               	movwf	Delay_ms@time_to_delay+1
  7151  1704  3188  202A  3196   	fcall	_Delay_ms
  7152                           
  7153                           ;utility.c: 76: if(PORTCbits.RC5)
  7154  1707  0020               	movlb	0	; select bank0
  7155  1708  1E8E               	btfss	14,5	;volatile
  7156  1709  2F0C               	goto	l2081
  7157                           
  7158                           ;utility.c: 77: return 1;
  7159  170A  3001               	movlw	1
  7160  170B  0008               	return
  7161  170C                     l2081:	
  7162                           
  7163                           ;utility.c: 78: else
  7164                           ;utility.c: 79: return 0;
  7165  170C  3000               	movlw	0
  7166  170D  0008               	return
  7167  170E                     __end_of_Read_Adf7012_Muxout:	
  7168                           
  7169                           	psect	text39
  7170  082A                     __ptext39:	
  7171 ;; *************** function _Delay_ms *****************
  7172 ;; Defined at:
  7173 ;;		line 50 in file "utility.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  7176 ;; Auto vars:     Size  Location     Type
  7177 ;;  i               2    4[BANK0 ] unsigned int 
  7178 ;; Return value:  Size  Location     Type
  7179 ;;		None               void
  7180 ;; Registers used:
  7181 ;;		wreg, status,2, status,0, pclath, cstack
  7182 ;; Tracked objects:
  7183 ;;		On entry : 0/0
  7184 ;;		On exit  : 0/0
  7185 ;;		Unchanged: 0/0
  7186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7188 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7189 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7190 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7191 ;;Total ram usage:        6 bytes
  7192 ;; Hardware stack levels used:    1
  7193 ;; Hardware stack levels required when called:    4
  7194 ;; This function calls:
  7195 ;;		_Dac0_Start_Hold
  7196 ;; This function is called by:
  7197 ;;		_main
  7198 ;;		_Read_Adf7012_Muxout
  7199 ;;		_Write_Adf7012_Reg
  7200 ;;		_Spi_Byte_Send
  7201 ;;		_Adf_Reset
  7202 ;;		_Adf_Lock
  7203 ;;		_Radio_Setup
  7204 ;;		_Ptt_On
  7205 ;;		_Ptt_Off
  7206 ;;		_Modem_Flush_Frame
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function _Delay_ms
  7212  082A                     _Delay_ms:	
  7213                           
  7214                           ;utility.c: 52: uint16_t i=0;
  7215                           
  7216                           ;incstack = 0
  7217                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  7218  082A  0020               	movlb	0	; select bank0
  7219  082B  01A4               	clrf	Delay_ms@i
  7220  082C  01A5               	clrf	Delay_ms@i+1
  7221                           
  7222                           ;utility.c: 54: INTCON &= ~0xC0;
  7223  082D  303F               	movlw	63
  7224  082E  00A2               	movwf	??_Delay_ms
  7225  082F  0822               	movf	??_Delay_ms,w
  7226  0830  058B               	andwf	11,f	;volatile
  7227                           
  7228                           ;utility.c: 55: Dac0_Start_Hold();
  7229  0831  3196  26AB  3188   	fcall	_Dac0_Start_Hold
  7230                           
  7231                           ;utility.c: 56: for(i=0; i<time_to_delay; i++){
  7232  0834  0020               	movlb	0	; select bank0
  7233  0835  01A4               	clrf	Delay_ms@i
  7234  0836  01A5               	clrf	Delay_ms@i+1
  7235  0837                     l198:	
  7236  0837  0821               	movf	Delay_ms@time_to_delay+1,w
  7237  0838  0225               	subwf	Delay_ms@i+1,w
  7238  0839  1D03               	skipz
  7239  083A  283D               	goto	u1905
  7240  083B  0820               	movf	Delay_ms@time_to_delay,w
  7241  083C  0224               	subwf	Delay_ms@i,w
  7242  083D                     u1905:	
  7243  083D  1803               	btfsc	3,0
  7244  083E  284E               	goto	l2001
  7245                           
  7246                           ;utility.c: 57: _delay((unsigned long)((1)*(32000000/4000.0)));
  7247  083F  300B               	movlw	11
  7248  0840  00A3               	movwf	??_Delay_ms+1
  7249  0841  3062               	movlw	98
  7250  0842  00A2               	movwf	??_Delay_ms
  7251  0843                     u3797:	
  7252  0843  0BA2               	decfsz	??_Delay_ms,f
  7253  0844  2843               	goto	u3797
  7254  0845  0BA3               	decfsz	??_Delay_ms+1,f
  7255  0846  2843               	goto	u3797
  7256  0847  0000               	nop
  7257  0848  3001               	movlw	1
  7258  0849  0020               	movlb	0	; select bank0
  7259  084A  07A4               	addwf	Delay_ms@i,f
  7260  084B  3000               	movlw	0
  7261  084C  3DA5               	addwfc	Delay_ms@i+1,f
  7262  084D  2837               	goto	l198
  7263  084E                     l2001:	
  7264                           
  7265                           ;utility.c: 58: }
  7266                           ;utility.c: 59: INTCON |= 0xC0;
  7267  084E  30C0               	movlw	192
  7268  084F  00A2               	movwf	??_Delay_ms
  7269  0850  0822               	movf	??_Delay_ms,w
  7270  0851  048B               	iorwf	11,f	;volatile
  7271  0852  0008               	return
  7272  0853                     __end_of_Delay_ms:	
  7273                           
  7274                           	psect	text40
  7275  16AB                     __ptext40:	
  7276 ;; *************** function _Dac0_Start_Hold *****************
  7277 ;; Defined at:
  7278 ;;		line 291 in file "utility.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;		None
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;		None               void
  7285 ;; Registers used:
  7286 ;;		wreg
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;Total ram usage:        0 bytes
  7297 ;; Hardware stack levels used:    1
  7298 ;; Hardware stack levels required when called:    3
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		_main
  7303 ;;		_Delay_ms
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           
  7308                           ;psect for function _Dac0_Start_Hold
  7309  16AB                     _Dac0_Start_Hold:	
  7310                           
  7311                           ;utility.c: 292: DACEN = 1;
  7312                           
  7313                           ;incstack = 0
  7314                           ; Regs used in _Dac0_Start_Hold: [wreg]
  7315  16AB  0022               	movlb	2	; select bank2
  7316  16AC  1798               	bsf	24,7	;volatile
  7317                           
  7318                           ;utility.c: 293: DACCON1 = 0x10;
  7319  16AD  3010               	movlw	16
  7320  16AE  0099               	movwf	25	;volatile
  7321  16AF  0008               	return
  7322  16B0                     __end_of_Dac0_Start_Hold:	
  7323                           
  7324                           	psect	text41
  7325  17A7                     __ptext41:	
  7326 ;; *************** function _Ax25_Send_String *****************
  7327 ;; Defined at:
  7328 ;;		line 91 in file "ax25.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  7331 ;;		 -> STR_1(6), 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;  i               2   15[BANK0 ] int 
  7334 ;; Return value:  Size  Location     Type
  7335 ;;		None               void
  7336 ;; Registers used:
  7337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7346 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7347 ;;Total ram usage:        4 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:    6
  7350 ;; This function calls:
  7351 ;;		_Ax25_Send_Byte
  7352 ;; This function is called by:
  7353 ;;		_main
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           
  7358                           ;psect for function _Ax25_Send_String
  7359  17A7                     _Ax25_Send_String:	
  7360                           
  7361                           ;ax25.c: 93: int i;
  7362                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  7363                           
  7364                           ;incstack = 0
  7365                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7366  17A7  0020               	movlb	0	; select bank0
  7367  17A8  01AF               	clrf	Ax25_Send_String@i
  7368  17A9  01B0               	clrf	Ax25_Send_String@i+1
  7369  17AA                     l2891:	
  7370  17AA  082D               	movf	Ax25_Send_String@string,w
  7371  17AB  072F               	addwf	Ax25_Send_String@i,w
  7372  17AC  0084               	movwf	4
  7373  17AD  082E               	movf	Ax25_Send_String@string+1,w
  7374  17AE  3D30               	addwfc	Ax25_Send_String@i+1,w
  7375  17AF  0085               	movwf	5
  7376  17B0  0800               	movf	0,w	;code access
  7377  17B1  3800               	iorlw	0
  7378  17B2  1903               	btfsc	3,2
  7379  17B3  0008               	return
  7380                           
  7381                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  7382  17B4  082D               	movf	Ax25_Send_String@string,w
  7383  17B5  072F               	addwf	Ax25_Send_String@i,w
  7384  17B6  0084               	movwf	4
  7385  17B7  082E               	movf	Ax25_Send_String@string+1,w
  7386  17B8  3D30               	addwfc	Ax25_Send_String@i+1,w
  7387  17B9  0085               	movwf	5
  7388  17BA  0800               	movf	0,w	;code access
  7389  17BB  3196  26BB  3197   	fcall	_Ax25_Send_Byte
  7390  17BE  3001               	movlw	1
  7391  17BF  0020               	movlb	0	; select bank0
  7392  17C0  07AF               	addwf	Ax25_Send_String@i,f
  7393  17C1  3000               	movlw	0
  7394  17C2  3DB0               	addwfc	Ax25_Send_String@i+1,f
  7395  17C3  2FAA               	goto	l2891
  7396  17C4                     __end_of_Ax25_Send_String:	
  7397                           
  7398                           	psect	text42
  7399  16BB                     __ptext42:	
  7400 ;; *************** function _Ax25_Send_Byte *****************
  7401 ;; Defined at:
  7402 ;;		line 56 in file "ax25.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  byte            1    wreg     unsigned char 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;  byte            1   12[BANK0 ] unsigned char 
  7407 ;; Return value:  Size  Location     Type
  7408 ;;		None               void
  7409 ;; Registers used:
  7410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7417 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7419 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7420 ;;Total ram usage:        1 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; Hardware stack levels required when called:    5
  7423 ;; This function calls:
  7424 ;;		_Send_Byte
  7425 ;; This function is called by:
  7426 ;;		_Ax25_Send_String
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           
  7431                           ;psect for function _Ax25_Send_Byte
  7432  16BB                     _Ax25_Send_Byte:	
  7433                           
  7434                           ;incstack = 0
  7435                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7436                           ;Ax25_Send_Byte@byte stored from wreg
  7437  16BB  0020               	movlb	0	; select bank0
  7438  16BC  00AC               	movwf	Ax25_Send_Byte@byte
  7439                           
  7440                           ;ax25.c: 59: Send_Byte(byte);
  7441  16BD  082C               	movf	Ax25_Send_Byte@byte,w
  7442  16BE  318E  2698         	fcall	_Send_Byte
  7443  16C0  0008               	return
  7444  16C1                     __end_of_Ax25_Send_Byte:	
  7445                           
  7446                           	psect	text43
  7447  03DD                     __ptext43:	
  7448 ;; *************** function _Ax25_Send_Header *****************
  7449 ;; Defined at:
  7450 ;;		line 99 in file "ax25.c"
  7451 ;; Parameters:    Size  Location     Type
  7452 ;;  addresses       1    wreg     PTR struct .
  7453 ;;		 -> main@beacon_address(16), 
  7454 ;;  num_addresse    2   12[BANK0 ] int 
  7455 ;; Auto vars:     Size  Location     Type
  7456 ;;  addresses       1   19[BANK0 ] PTR struct .
  7457 ;;		 -> main@beacon_address(16), 
  7458 ;;  i               2   20[BANK0 ] int 
  7459 ;;  j               2   17[BANK0 ] int 
  7460 ;; Return value:  Size  Location     Type
  7461 ;;		None               void
  7462 ;; Registers used:
  7463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;Total ram usage:       10 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    5
  7476 ;; This function calls:
  7477 ;;		_Ax25_Send_Flag
  7478 ;;		_Ax25_Send_Sync
  7479 ;;		_Send_Byte
  7480 ;; This function is called by:
  7481 ;;		_main
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           
  7486                           ;psect for function _Ax25_Send_Header
  7487  03DD                     _Ax25_Send_Header:	
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7491                           ;Ax25_Send_Header@addresses stored from wreg
  7492  03DD  0020               	movlb	0	; select bank0
  7493  03DE  00B3               	movwf	Ax25_Send_Header@addresses
  7494                           
  7495                           ;ax25.c: 101: int i, j;
  7496                           ;ax25.c: 102: modem_packet_size = 0;
  7497  03DF  3000               	movlw	0
  7498  03E0  00FC               	movwf	_modem_packet_size+3
  7499  03E1  3000               	movlw	0
  7500  03E2  00FB               	movwf	_modem_packet_size+2
  7501  03E3  3000               	movlw	0
  7502  03E4  00FA               	movwf	_modem_packet_size+1
  7503  03E5  3000               	movlw	0
  7504  03E6  00F9               	movwf	_modem_packet_size
  7505                           
  7506                           ;ax25.c: 103: ones_in_a_row = 0;
  7507  03E7  0021               	movlb	1	; select bank1
  7508  03E8  01C9               	clrf	_ones_in_a_row^(0+128)
  7509  03E9  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  7510                           
  7511                           ;ax25.c: 104: crc = 0xffff;
  7512  03EA  30FF               	movlw	255
  7513  03EB  00C7               	movwf	_crc^(0+128)
  7514  03EC  30FF               	movlw	255
  7515  03ED  00C8               	movwf	(_crc^(0+128)+1)
  7516                           
  7517                           ;ax25.c: 107: for (i = 0; i < 10; i++)
  7518  03EE  0020               	movlb	0	; select bank0
  7519  03EF  01B4               	clrf	Ax25_Send_Header@i
  7520  03F0  01B5               	clrf	Ax25_Send_Header@i+1
  7521  03F1  0835               	movf	Ax25_Send_Header@i+1,w
  7522  03F2  3A80               	xorlw	128
  7523  03F3  00AE               	movwf	??_Ax25_Send_Header
  7524  03F4  3080               	movlw	128
  7525  03F5  022E               	subwf	??_Ax25_Send_Header,w
  7526  03F6  1D03               	skipz
  7527  03F7  2BFA               	goto	u3595
  7528  03F8  300A               	movlw	10
  7529  03F9  0234               	subwf	Ax25_Send_Header@i,w
  7530  03FA                     u3595:	
  7531  03FA  1803               	btfsc	3,0
  7532  03FB  2C0F               	goto	l2847
  7533  03FC                     l2841:	
  7534                           
  7535                           ;ax25.c: 108: {
  7536                           ;ax25.c: 109: Ax25_Send_Sync();
  7537  03FC  318B  236A  3183   	fcall	_Ax25_Send_Sync
  7538  03FF  3001               	movlw	1
  7539  0400  0020               	movlb	0	; select bank0
  7540  0401  07B4               	addwf	Ax25_Send_Header@i,f
  7541  0402  3000               	movlw	0
  7542  0403  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  7543  0404  0835               	movf	Ax25_Send_Header@i+1,w
  7544  0405  3A80               	xorlw	128
  7545  0406  00AE               	movwf	??_Ax25_Send_Header
  7546  0407  3080               	movlw	128
  7547  0408  022E               	subwf	??_Ax25_Send_Header,w
  7548  0409  1D03               	skipz
  7549  040A  2C0D               	goto	u3605
  7550  040B  300A               	movlw	10
  7551  040C  0234               	subwf	Ax25_Send_Header@i,w
  7552  040D                     u3605:	
  7553  040D  1C03               	skipc
  7554  040E  2BFC               	goto	l2841
  7555  040F                     l2847:	
  7556                           
  7557                           ;ax25.c: 110: }
  7558                           ;ax25.c: 113: for (i = 0; i < 3; i++)
  7559  040F  0020               	movlb	0	; select bank0
  7560  0410  01B4               	clrf	Ax25_Send_Header@i
  7561  0411  01B5               	clrf	Ax25_Send_Header@i+1
  7562  0412  0835               	movf	Ax25_Send_Header@i+1,w
  7563  0413  3A80               	xorlw	128
  7564  0414  00AE               	movwf	??_Ax25_Send_Header
  7565  0415  3080               	movlw	128
  7566  0416  022E               	subwf	??_Ax25_Send_Header,w
  7567  0417  1D03               	skipz
  7568  0418  2C1B               	goto	u3615
  7569  0419  3003               	movlw	3
  7570  041A  0234               	subwf	Ax25_Send_Header@i,w
  7571  041B                     u3615:	
  7572  041B  1803               	btfsc	3,0
  7573  041C  2C30               	goto	l2859
  7574  041D                     l2853:	
  7575                           
  7576                           ;ax25.c: 114: {
  7577                           ;ax25.c: 115: Ax25_Send_Flag();
  7578  041D  318B  23E3  3183   	fcall	_Ax25_Send_Flag
  7579  0420  3001               	movlw	1
  7580  0421  0020               	movlb	0	; select bank0
  7581  0422  07B4               	addwf	Ax25_Send_Header@i,f
  7582  0423  3000               	movlw	0
  7583  0424  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  7584  0425  0835               	movf	Ax25_Send_Header@i+1,w
  7585  0426  3A80               	xorlw	128
  7586  0427  00AE               	movwf	??_Ax25_Send_Header
  7587  0428  3080               	movlw	128
  7588  0429  022E               	subwf	??_Ax25_Send_Header,w
  7589  042A  1D03               	skipz
  7590  042B  2C2E               	goto	u3625
  7591  042C  3003               	movlw	3
  7592  042D  0234               	subwf	Ax25_Send_Header@i,w
  7593  042E                     u3625:	
  7594  042E  1C03               	skipc
  7595  042F  2C1D               	goto	l2853
  7596  0430                     l2859:	
  7597                           
  7598                           ;ax25.c: 116: }
  7599                           ;ax25.c: 118: for (i = 0; i < num_addresses; i++) {
  7600  0430  0020               	movlb	0	; select bank0
  7601  0431  01B4               	clrf	Ax25_Send_Header@i
  7602  0432  01B5               	clrf	Ax25_Send_Header@i+1
  7603  0433                     l2881:	
  7604  0433  0835               	movf	Ax25_Send_Header@i+1,w
  7605  0434  3A80               	xorlw	128
  7606  0435  00AE               	movwf	??_Ax25_Send_Header
  7607  0436  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  7608  0437  3A80               	xorlw	128
  7609  0438  022E               	subwf	??_Ax25_Send_Header,w
  7610  0439  1D03               	skipz
  7611  043A  2C3D               	goto	u3695
  7612  043B  082C               	movf	Ax25_Send_Header@num_addresses,w
  7613  043C  0234               	subwf	Ax25_Send_Header@i,w
  7614  043D                     u3695:	
  7615  043D  1803               	btfsc	3,0
  7616  043E  2CAD               	goto	l2883
  7617                           
  7618                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  7619  043F  0020               	movlb	0	; select bank0
  7620  0440  01B1               	clrf	Ax25_Send_Header@j
  7621  0441  01B2               	clrf	Ax25_Send_Header@j+1
  7622  0442  0832               	movf	Ax25_Send_Header@j+1,w
  7623  0443  3A80               	xorlw	128
  7624  0444  00AE               	movwf	??_Ax25_Send_Header
  7625  0445  3080               	movlw	128
  7626  0446  022E               	subwf	??_Ax25_Send_Header,w
  7627  0447  1D03               	skipz
  7628  0448  2C4B               	goto	u3635
  7629  0449  3006               	movlw	6
  7630  044A  0231               	subwf	Ax25_Send_Header@j,w
  7631  044B                     u3635:	
  7632  044B  1803               	btfsc	3,0
  7633  044C  2C72               	goto	l2873
  7634  044D                     l2867:	
  7635                           
  7636                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  7637  044D  0020               	movlb	0	; select bank0
  7638  044E  0834               	movf	Ax25_Send_Header@i,w
  7639  044F  00AE               	movwf	??_Ax25_Send_Header
  7640  0450  3002               	movlw	2
  7641  0451                     u3645:	
  7642  0451  35AE               	lslf	??_Ax25_Send_Header,f
  7643  0452  3EFF               	addlw	-1
  7644  0453  1D03               	skipz
  7645  0454  2C51               	goto	u3645
  7646  0455  352E               	lslf	??_Ax25_Send_Header,w
  7647  0456  0733               	addwf	Ax25_Send_Header@addresses,w
  7648  0457  00AF               	movwf	??_Ax25_Send_Header+1
  7649  0458  0831               	movf	Ax25_Send_Header@j,w
  7650  0459  072F               	addwf	??_Ax25_Send_Header+1,w
  7651  045A  00B0               	movwf	??_Ax25_Send_Header+2
  7652  045B  0830               	movf	??_Ax25_Send_Header+2,w
  7653  045C  0086               	movwf	6
  7654  045D  0187               	clrf	7
  7655  045E  3501               	lslf	1,w
  7656  045F  318E  2698  3183   	fcall	_Send_Byte
  7657  0462  3001               	movlw	1
  7658  0463  0020               	movlb	0	; select bank0
  7659  0464  07B1               	addwf	Ax25_Send_Header@j,f
  7660  0465  3000               	movlw	0
  7661  0466  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  7662  0467  0832               	movf	Ax25_Send_Header@j+1,w
  7663  0468  3A80               	xorlw	128
  7664  0469  00AE               	movwf	??_Ax25_Send_Header
  7665  046A  3080               	movlw	128
  7666  046B  022E               	subwf	??_Ax25_Send_Header,w
  7667  046C  1D03               	skipz
  7668  046D  2C70               	goto	u3655
  7669  046E  3006               	movlw	6
  7670  046F  0231               	subwf	Ax25_Send_Header@j,w
  7671  0470                     u3655:	
  7672  0470  1C03               	skipc
  7673  0471  2C4D               	goto	l2867
  7674  0472                     l2873:	
  7675                           
  7676                           ;ax25.c: 127: if (i == num_addresses - 1)
  7677  0472  0020               	movlb	0	; select bank0
  7678  0473  082C               	movf	Ax25_Send_Header@num_addresses,w
  7679  0474  3EFF               	addlw	255
  7680  0475  00AE               	movwf	??_Ax25_Send_Header
  7681  0476  30FF               	movlw	255
  7682  0477  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  7683  0478  00AF               	movwf	??_Ax25_Send_Header+1
  7684  0479  0835               	movf	Ax25_Send_Header@i+1,w
  7685  047A  062F               	xorwf	??_Ax25_Send_Header+1,w
  7686  047B  1D03               	skipz
  7687  047C  2C7F               	goto	u3665
  7688  047D  0834               	movf	Ax25_Send_Header@i,w
  7689  047E  062E               	xorwf	??_Ax25_Send_Header,w
  7690  047F                     u3665:	
  7691  047F  1D03               	skipz
  7692  0480  2C93               	goto	l2877
  7693                           
  7694                           ;ax25.c: 128: Send_Byte(('0' + addresses[i].ssid) << 1 | 1);
  7695  0481  0834               	movf	Ax25_Send_Header@i,w
  7696  0482  00AE               	movwf	??_Ax25_Send_Header
  7697  0483  3002               	movlw	2
  7698  0484                     u3675:	
  7699  0484  35AE               	lslf	??_Ax25_Send_Header,f
  7700  0485  3EFF               	addlw	-1
  7701  0486  1D03               	skipz
  7702  0487  2C84               	goto	u3675
  7703  0488  352E               	lslf	??_Ax25_Send_Header,w
  7704  0489  0733               	addwf	Ax25_Send_Header@addresses,w
  7705  048A  00AF               	movwf	??_Ax25_Send_Header+1
  7706  048B  082F               	movf	??_Ax25_Send_Header+1,w
  7707  048C  3E07               	addlw	7
  7708  048D  0086               	movwf	6
  7709  048E  0187               	clrf	7
  7710  048F  3501               	lslf	1,w
  7711  0490  3E60               	addlw	96
  7712  0491  3801               	iorlw	1
  7713  0492  2CA4               	goto	L2
  7714  0493                     l2877:	
  7715                           
  7716                           ;ax25.c: 130: else
  7717                           ;ax25.c: 131: Send_Byte(('0' + addresses[i].ssid) << 1);
  7718  0493  0020               	movlb	0	; select bank0
  7719  0494  0834               	movf	Ax25_Send_Header@i,w
  7720  0495  00AE               	movwf	??_Ax25_Send_Header
  7721  0496  3002               	movlw	2
  7722  0497                     u3685:	
  7723  0497  35AE               	lslf	??_Ax25_Send_Header,f
  7724  0498  3EFF               	addlw	-1
  7725  0499  1D03               	skipz
  7726  049A  2C97               	goto	u3685
  7727  049B  352E               	lslf	??_Ax25_Send_Header,w
  7728  049C  0733               	addwf	Ax25_Send_Header@addresses,w
  7729  049D  00AF               	movwf	??_Ax25_Send_Header+1
  7730  049E  082F               	movf	??_Ax25_Send_Header+1,w
  7731  049F  3E07               	addlw	7
  7732  04A0  0086               	movwf	6
  7733  04A1  0187               	clrf	7
  7734  04A2  3501               	lslf	1,w
  7735  04A3  3E60               	addlw	96
  7736  04A4                     L2:	
  7737  04A4  318E  2698  3183   	fcall	_Send_Byte
  7738  04A7  3001               	movlw	1
  7739  04A8  0020               	movlb	0	; select bank0
  7740  04A9  07B4               	addwf	Ax25_Send_Header@i,f
  7741  04AA  3000               	movlw	0
  7742  04AB  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  7743  04AC  2C33               	goto	l2881
  7744  04AD                     l2883:	
  7745                           
  7746                           ;ax25.c: 132: }
  7747                           ;ax25.c: 135: Send_Byte(0x03);
  7748  04AD  3003               	movlw	3
  7749  04AE  318E  2698  3183   	fcall	_Send_Byte
  7750                           
  7751                           ;ax25.c: 138: Send_Byte(0xf0);
  7752  04B1  30F0               	movlw	240
  7753  04B2  318E  2698         	fcall	_Send_Byte
  7754  04B4  0008               	return
  7755  04B5                     __end_of_Ax25_Send_Header:	
  7756                           
  7757                           	psect	text44
  7758  0B6A                     __ptext44:	
  7759 ;; *************** function _Ax25_Send_Sync *****************
  7760 ;; Defined at:
  7761 ;;		line 63 in file "ax25.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;		None
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  i               2    7[BANK0 ] int 
  7766 ;;  byte            1    6[BANK0 ] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;		None               void
  7769 ;; Registers used:
  7770 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7777 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7778 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;Total ram usage:        9 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:    3
  7783 ;; This function calls:
  7784 ;;		Nothing
  7785 ;; This function is called by:
  7786 ;;		_Ax25_Send_Header
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           
  7791                           ;psect for function _Ax25_Send_Sync
  7792  0B6A                     _Ax25_Send_Sync:	
  7793                           
  7794                           ;ax25.c: 65: uint8_t byte = 0x00;
  7795                           
  7796                           ;incstack = 0
  7797                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  7798  0B6A  0020               	movlb	0	; select bank0
  7799  0B6B  01A6               	clrf	Ax25_Send_Sync@byte
  7800                           
  7801                           ;ax25.c: 66: int i;
  7802                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  7803  0B6C  01A7               	clrf	Ax25_Send_Sync@i
  7804  0B6D  01A8               	clrf	Ax25_Send_Sync@i+1
  7805  0B6E                     L3:	
  7806  0B6E  0828               	movf	Ax25_Send_Sync@i+1,w
  7807  0B6F  3A80               	xorlw	128
  7808  0B70  00A0               	movwf	??_Ax25_Send_Sync
  7809  0B71  3080               	movlw	128
  7810  0B72  0220               	subwf	??_Ax25_Send_Sync,w
  7811  0B73  3008               	movlw	8
  7812  0B74  1903               	btfsc	3,2
  7813  0B75  0227               	subwf	Ax25_Send_Sync@i,w
  7814  0B76  1803               	btfsc	3,0
  7815  0B77  0008               	return
  7816                           
  7817                           ;ax25.c: 68: if (modem_packet_size >= 64 * 8)
  7818  0B78  3000               	movlw	0
  7819  0B79  027C               	subwf	_modem_packet_size+3,w
  7820  0B7A  1D03               	skipz
  7821  0B7B  2B86               	goto	u3335
  7822  0B7C  3000               	movlw	0
  7823  0B7D  027B               	subwf	_modem_packet_size+2,w
  7824  0B7E  1D03               	skipz
  7825  0B7F  2B86               	goto	u3335
  7826  0B80  3002               	movlw	2
  7827  0B81  027A               	subwf	_modem_packet_size+1,w
  7828  0B82  1D03               	skipz
  7829  0B83  2B86               	goto	u3335
  7830  0B84  3000               	movlw	0
  7831  0B85  0279               	subwf	_modem_packet_size,w
  7832  0B86                     u3335:	
  7833  0B86  1803               	btfsc	3,0
  7834  0B87  0008               	return
  7835                           
  7836                           ;ax25.c: 70: if ((byte >> i) & 1)
  7837                           
  7838                           ;ax25.c: 69: return;
  7839  0B88  0020               	movlb	0	; select bank0
  7840  0B89  0826               	movf	Ax25_Send_Sync@byte,w
  7841  0B8A  00A0               	movwf	??_Ax25_Send_Sync
  7842  0B8B  0A27               	incf	Ax25_Send_Sync@i,w
  7843  0B8C  2B8E               	goto	u3344
  7844  0B8D                     u3345:	
  7845  0B8D  36A0               	lsrf	??_Ax25_Send_Sync,f
  7846  0B8E                     u3344:	
  7847  0B8E  0B89               	decfsz	9,f
  7848  0B8F  2B8D               	goto	u3345
  7849  0B90  1C20               	btfss	??_Ax25_Send_Sync,0
  7850  0B91  2BB4               	goto	l2675
  7851                           
  7852                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  7853  0B92  3001               	movlw	1
  7854  0B93  00A0               	movwf	??_Ax25_Send_Sync
  7855  0B94  0879               	movf	_modem_packet_size,w
  7856  0B95  3907               	andlw	7
  7857  0B96  0A89               	incf	9,f
  7858  0B97  2B99               	goto	u3364
  7859  0B98                     u3365:	
  7860  0B98  35A0               	lslf	??_Ax25_Send_Sync,f
  7861  0B99                     u3364:	
  7862  0B99  0B89               	decfsz	9,f
  7863  0B9A  2B98               	goto	u3365
  7864  0B9B  0820               	movf	??_Ax25_Send_Sync,w
  7865  0B9C  00A1               	movwf	??_Ax25_Send_Sync+1
  7866  0B9D  0879               	movf	_modem_packet_size,w
  7867  0B9E  00A2               	movwf	??_Ax25_Send_Sync+2
  7868  0B9F  087A               	movf	_modem_packet_size+1,w
  7869  0BA0  00A3               	movwf	??_Ax25_Send_Sync+3
  7870  0BA1  087B               	movf	_modem_packet_size+2,w
  7871  0BA2  00A4               	movwf	??_Ax25_Send_Sync+4
  7872  0BA3  087C               	movf	_modem_packet_size+3,w
  7873  0BA4  00A5               	movwf	??_Ax25_Send_Sync+5
  7874  0BA5  3003               	movlw	3
  7875  0BA6                     u3375:	
  7876  0BA6  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  7877  0BA7  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  7878  0BA8  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  7879  0BA9  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  7880  0BAA  0B89               	decfsz	9,f
  7881  0BAB  2BA6               	goto	u3375
  7882  0BAC  0822               	movf	??_Ax25_Send_Sync+2,w
  7883  0BAD  3EA0               	addlw	_modem_packet& (0+255)
  7884  0BAE  0086               	movwf	6
  7885  0BAF  3001               	movlw	1	; select bank3/4
  7886  0BB0  0087               	movwf	7
  7887  0BB1  0821               	movf	??_Ax25_Send_Sync+1,w
  7888  0BB2  0481               	iorwf	1,f
  7889  0BB3  2BD6               	goto	l2677
  7890  0BB4                     l2675:	
  7891                           
  7892                           ;ax25.c: 72: else
  7893                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  7894  0BB4  3001               	movlw	1
  7895  0BB5  00A0               	movwf	??_Ax25_Send_Sync
  7896  0BB6  0879               	movf	_modem_packet_size,w
  7897  0BB7  3907               	andlw	7
  7898  0BB8  0A89               	incf	9,f
  7899  0BB9  2BBB               	goto	u3384
  7900  0BBA                     u3385:	
  7901  0BBA  35A0               	lslf	??_Ax25_Send_Sync,f
  7902  0BBB                     u3384:	
  7903  0BBB  0B89               	decfsz	9,f
  7904  0BBC  2BBA               	goto	u3385
  7905  0BBD  0820               	movf	??_Ax25_Send_Sync,w
  7906  0BBE  3AFF               	xorlw	255
  7907  0BBF  00A1               	movwf	??_Ax25_Send_Sync+1
  7908  0BC0  0879               	movf	_modem_packet_size,w
  7909  0BC1  00A2               	movwf	??_Ax25_Send_Sync+2
  7910  0BC2  087A               	movf	_modem_packet_size+1,w
  7911  0BC3  00A3               	movwf	??_Ax25_Send_Sync+3
  7912  0BC4  087B               	movf	_modem_packet_size+2,w
  7913  0BC5  00A4               	movwf	??_Ax25_Send_Sync+4
  7914  0BC6  087C               	movf	_modem_packet_size+3,w
  7915  0BC7  00A5               	movwf	??_Ax25_Send_Sync+5
  7916  0BC8  3003               	movlw	3
  7917  0BC9                     u3395:	
  7918  0BC9  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  7919  0BCA  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  7920  0BCB  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  7921  0BCC  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  7922  0BCD  0B89               	decfsz	9,f
  7923  0BCE  2BC9               	goto	u3395
  7924  0BCF  0822               	movf	??_Ax25_Send_Sync+2,w
  7925  0BD0  3EA0               	addlw	_modem_packet& (0+255)
  7926  0BD1  0086               	movwf	6
  7927  0BD2  3001               	movlw	1	; select bank3/4
  7928  0BD3  0087               	movwf	7
  7929  0BD4  0821               	movf	??_Ax25_Send_Sync+1,w
  7930  0BD5  0581               	andwf	1,f
  7931  0BD6                     l2677:	
  7932  0BD6  3001               	movlw	1
  7933  0BD7  07A7               	addwf	Ax25_Send_Sync@i,f
  7934  0BD8  3000               	movlw	0
  7935  0BD9  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  7936  0BDA  3001               	movlw	1
  7937  0BDB  07F9               	addwf	_modem_packet_size,f
  7938  0BDC  3000               	movlw	0
  7939  0BDD  3DFA               	addwfc	_modem_packet_size+1,f
  7940  0BDE  3000               	movlw	0
  7941  0BDF  3DFB               	addwfc	_modem_packet_size+2,f
  7942  0BE0  3000               	movlw	0
  7943  0BE1  3DFC               	addwfc	_modem_packet_size+3,f
  7944  0BE2  2B6E               	goto	L3
  7945  0BE3                     __end_of_Ax25_Send_Sync:	
  7946                           
  7947                           	psect	text45
  7948  178C                     __ptext45:	
  7949 ;; *************** function _Ax25_Send_Footer *****************
  7950 ;; Defined at:
  7951 ;;		line 141 in file "ax25.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  final_crc       2   12[BANK0 ] unsigned int 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;		None               void
  7958 ;; Registers used:
  7959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;Total ram usage:        2 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    5
  7972 ;; This function calls:
  7973 ;;		_Ax25_Send_Flag
  7974 ;;		_Send_Byte
  7975 ;; This function is called by:
  7976 ;;		_main
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           
  7981                           ;psect for function _Ax25_Send_Footer
  7982  178C                     _Ax25_Send_Footer:	
  7983                           
  7984                           ;ax25.c: 144: uint16_t final_crc = crc;
  7985                           
  7986                           ;incstack = 0
  7987                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7988  178C  0021               	movlb	1	; select bank1
  7989  178D  0848               	movf	(_crc+1)^(0+128),w
  7990  178E  0020               	movlb	0	; select bank0
  7991  178F  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  7992  1790  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  7993  1791  0021               	movlb	1	; select bank1
  7994  1792  0847               	movf	_crc^(0+128),w
  7995  1793  0020               	movlb	0	; select bank0
  7996  1794  01AC               	clrf	Ax25_Send_Footer@final_crc
  7997  1795  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  7998                           
  7999                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  8000  1796  092C               	comf	Ax25_Send_Footer@final_crc,w
  8001  1797  318E  2698  3197   	fcall	_Send_Byte
  8002                           
  8003                           ;ax25.c: 148: final_crc >>= 8;
  8004  179A  3008               	movlw	8
  8005  179B  0020               	movlb	0	; select bank0
  8006  179C                     u3715:	
  8007  179C  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  8008  179D  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  8009  179E  0B89               	decfsz	9,f
  8010  179F  2F9C               	goto	u3715
  8011                           
  8012                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  8013  17A0  092C               	comf	Ax25_Send_Footer@final_crc,w
  8014  17A1  318E  2698  3197   	fcall	_Send_Byte
  8015                           
  8016                           ;ax25.c: 152: Ax25_Send_Flag();
  8017  17A4  318B  23E3         	fcall	_Ax25_Send_Flag
  8018  17A6  0008               	return
  8019  17A7                     __end_of_Ax25_Send_Footer:	
  8020                           
  8021                           	psect	text46
  8022  0E98                     __ptext46:	
  8023 ;; *************** function _Send_Byte *****************
  8024 ;; Defined at:
  8025 ;;		line 33 in file "ax25.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  byte            1    wreg     unsigned char 
  8028 ;; Auto vars:     Size  Location     Type
  8029 ;;  byte            1    9[BANK0 ] unsigned char 
  8030 ;;  i               2   10[BANK0 ] int 
  8031 ;; Return value:  Size  Location     Type
  8032 ;;		None               void
  8033 ;; Registers used:
  8034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8041 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8042 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8043 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8044 ;;Total ram usage:        9 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    4
  8047 ;; This function calls:
  8048 ;;		_Update_Crc
  8049 ;; This function is called by:
  8050 ;;		_Ax25_Send_Byte
  8051 ;;		_Ax25_Send_Header
  8052 ;;		_Ax25_Send_Footer
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           
  8057                           ;psect for function _Send_Byte
  8058  0E98                     _Send_Byte:	
  8059                           
  8060                           ;incstack = 0
  8061                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8062                           ;Send_Byte@byte stored from wreg
  8063  0E98  0020               	movlb	0	; select bank0
  8064  0E99  00A9               	movwf	Send_Byte@byte
  8065                           
  8066                           ;ax25.c: 35: int i;
  8067                           ;ax25.c: 36: for (i = 0; i < 8; i++) {
  8068  0E9A  01AA               	clrf	Send_Byte@i
  8069  0E9B  01AB               	clrf	Send_Byte@i+1
  8070  0E9C                     L4:	
  8071  0E9C  082B               	movf	Send_Byte@i+1,w
  8072  0E9D  3A80               	xorlw	128
  8073  0E9E  00A3               	movwf	??_Send_Byte
  8074  0E9F  3080               	movlw	128
  8075  0EA0  0223               	subwf	??_Send_Byte,w
  8076  0EA1  3008               	movlw	8
  8077  0EA2  1903               	btfsc	3,2
  8078  0EA3  022A               	subwf	Send_Byte@i,w
  8079  0EA4  1803               	btfsc	3,0
  8080  0EA5  0008               	return
  8081                           
  8082                           ;ax25.c: 37: Update_Crc((byte >> i) & 1);
  8083  0EA6  0020               	movlb	0	; select bank0
  8084  0EA7  0829               	movf	Send_Byte@byte,w
  8085  0EA8  00A3               	movwf	??_Send_Byte
  8086  0EA9  0A2A               	incf	Send_Byte@i,w
  8087  0EAA  2EAC               	goto	u3204
  8088  0EAB                     u3205:	
  8089  0EAB  36A3               	lsrf	??_Send_Byte,f
  8090  0EAC                     u3204:	
  8091  0EAC  0B89               	decfsz	9,f
  8092  0EAD  2EAB               	goto	u3205
  8093  0EAE  0823               	movf	??_Send_Byte,w
  8094  0EAF  3901               	andlw	1
  8095  0EB0  3188  20FB  318E   	fcall	_Update_Crc
  8096                           
  8097                           ;ax25.c: 38: if ((byte >> i) & 1) {
  8098  0EB3  0020               	movlb	0	; select bank0
  8099  0EB4  0829               	movf	Send_Byte@byte,w
  8100  0EB5  00A3               	movwf	??_Send_Byte
  8101  0EB6  0A2A               	incf	Send_Byte@i,w
  8102  0EB7  2EB9               	goto	u3214
  8103  0EB8                     u3215:	
  8104  0EB8  36A3               	lsrf	??_Send_Byte,f
  8105  0EB9                     u3214:	
  8106  0EB9  0B89               	decfsz	9,f
  8107  0EBA  2EB8               	goto	u3215
  8108  0EBB  1C23               	btfss	??_Send_Byte,0
  8109  0EBC  2F08               	goto	l2595
  8110                           
  8111                           ;ax25.c: 40: if (modem_packet_size >= 64 * 8)
  8112  0EBD  3000               	movlw	0
  8113  0EBE  027C               	subwf	_modem_packet_size+3,w
  8114  0EBF  1D03               	skipz
  8115  0EC0  2ECB               	goto	u3235
  8116  0EC1  3000               	movlw	0
  8117  0EC2  027B               	subwf	_modem_packet_size+2,w
  8118  0EC3  1D03               	skipz
  8119  0EC4  2ECB               	goto	u3235
  8120  0EC5  3002               	movlw	2
  8121  0EC6  027A               	subwf	_modem_packet_size+1,w
  8122  0EC7  1D03               	skipz
  8123  0EC8  2ECB               	goto	u3235
  8124  0EC9  3000               	movlw	0
  8125  0ECA  0279               	subwf	_modem_packet_size,w
  8126  0ECB                     u3235:	
  8127  0ECB  1803               	btfsc	3,0
  8128  0ECC  0008               	return
  8129                           
  8130                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8131                           
  8132                           ;ax25.c: 41: return;
  8133  0ECD  3001               	movlw	1
  8134  0ECE  00A3               	movwf	??_Send_Byte
  8135  0ECF  0879               	movf	_modem_packet_size,w
  8136  0ED0  3907               	andlw	7
  8137  0ED1  0A89               	incf	9,f
  8138  0ED2  2ED4               	goto	u3244
  8139  0ED3                     u3245:	
  8140  0ED3  35A3               	lslf	??_Send_Byte,f
  8141  0ED4                     u3244:	
  8142  0ED4  0B89               	decfsz	9,f
  8143  0ED5  2ED3               	goto	u3245
  8144  0ED6  0823               	movf	??_Send_Byte,w
  8145  0ED7  00A4               	movwf	??_Send_Byte+1
  8146  0ED8  0879               	movf	_modem_packet_size,w
  8147  0ED9  00A5               	movwf	??_Send_Byte+2
  8148  0EDA  087A               	movf	_modem_packet_size+1,w
  8149  0EDB  00A6               	movwf	??_Send_Byte+3
  8150  0EDC  087B               	movf	_modem_packet_size+2,w
  8151  0EDD  00A7               	movwf	??_Send_Byte+4
  8152  0EDE  087C               	movf	_modem_packet_size+3,w
  8153  0EDF  00A8               	movwf	??_Send_Byte+5
  8154  0EE0  3003               	movlw	3
  8155  0EE1                     u3255:	
  8156  0EE1  36A8               	lsrf	??_Send_Byte+5,f
  8157  0EE2  0CA7               	rrf	??_Send_Byte+4,f
  8158  0EE3  0CA6               	rrf	??_Send_Byte+3,f
  8159  0EE4  0CA5               	rrf	??_Send_Byte+2,f
  8160  0EE5  0B89               	decfsz	9,f
  8161  0EE6  2EE1               	goto	u3255
  8162  0EE7  0825               	movf	??_Send_Byte+2,w
  8163  0EE8  3EA0               	addlw	_modem_packet& (0+255)
  8164  0EE9  0086               	movwf	6
  8165  0EEA  3001               	movlw	1	; select bank3/4
  8166  0EEB  0087               	movwf	7
  8167  0EEC  0824               	movf	??_Send_Byte+1,w
  8168  0EED  0481               	iorwf	1,f
  8169                           
  8170                           ;ax25.c: 43: modem_packet_size++;
  8171  0EEE  3001               	movlw	1
  8172  0EEF  07F9               	addwf	_modem_packet_size,f
  8173  0EF0  3000               	movlw	0
  8174  0EF1  3DFA               	addwfc	_modem_packet_size+1,f
  8175  0EF2  3000               	movlw	0
  8176  0EF3  3DFB               	addwfc	_modem_packet_size+2,f
  8177  0EF4  3000               	movlw	0
  8178  0EF5  3DFC               	addwfc	_modem_packet_size+3,f
  8179                           
  8180                           ;ax25.c: 44: if (++ones_in_a_row < 5) continue;
  8181  0EF6  3001               	movlw	1
  8182  0EF7  0021               	movlb	1	; select bank1
  8183  0EF8  07C9               	addwf	_ones_in_a_row^(0+128),f
  8184  0EF9  3000               	movlw	0
  8185  0EFA  3DCA               	addwfc	(_ones_in_a_row+1)^(0+128),f
  8186  0EFB  084A               	movf	(_ones_in_a_row+1)^(0+128),w
  8187  0EFC  3A80               	xorlw	128
  8188  0EFD  0020               	movlb	0	; select bank0
  8189  0EFE  00A3               	movwf	??_Send_Byte
  8190  0EFF  3080               	movlw	128
  8191  0F00  0223               	subwf	??_Send_Byte,w
  8192  0F01  1D03               	skipz
  8193  0F02  2F06               	goto	u3265
  8194  0F03  3005               	movlw	5
  8195  0F04  0021               	movlb	1	; select bank1
  8196  0F05  0249               	subwf	_ones_in_a_row^(0+128),w
  8197  0F06                     u3265:	
  8198  0F06  1C03               	btfss	3,0
  8199  0F07  2F46               	goto	l2605
  8200  0F08                     l2595:	
  8201                           
  8202                           ;ax25.c: 45: }
  8203                           ;ax25.c: 47: if (modem_packet_size >= 64 * 8)
  8204  0F08  3000               	movlw	0
  8205  0F09  027C               	subwf	_modem_packet_size+3,w
  8206  0F0A  1D03               	skipz
  8207  0F0B  2F16               	goto	u3275
  8208  0F0C  3000               	movlw	0
  8209  0F0D  027B               	subwf	_modem_packet_size+2,w
  8210  0F0E  1D03               	skipz
  8211  0F0F  2F16               	goto	u3275
  8212  0F10  3002               	movlw	2
  8213  0F11  027A               	subwf	_modem_packet_size+1,w
  8214  0F12  1D03               	skipz
  8215  0F13  2F16               	goto	u3275
  8216  0F14  3000               	movlw	0
  8217  0F15  0279               	subwf	_modem_packet_size,w
  8218  0F16                     u3275:	
  8219  0F16  1803               	btfsc	3,0
  8220  0F17  0008               	return
  8221                           
  8222                           ;ax25.c: 49: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8223                           
  8224                           ;ax25.c: 48: return;
  8225  0F18  3001               	movlw	1
  8226  0F19  0020               	movlb	0	; select bank0
  8227  0F1A  00A3               	movwf	??_Send_Byte
  8228  0F1B  0879               	movf	_modem_packet_size,w
  8229  0F1C  3907               	andlw	7
  8230  0F1D  0A89               	incf	9,f
  8231  0F1E  2F20               	goto	u3284
  8232  0F1F                     u3285:	
  8233  0F1F  35A3               	lslf	??_Send_Byte,f
  8234  0F20                     u3284:	
  8235  0F20  0B89               	decfsz	9,f
  8236  0F21  2F1F               	goto	u3285
  8237  0F22  0823               	movf	??_Send_Byte,w
  8238  0F23  3AFF               	xorlw	255
  8239  0F24  00A4               	movwf	??_Send_Byte+1
  8240  0F25  0879               	movf	_modem_packet_size,w
  8241  0F26  00A5               	movwf	??_Send_Byte+2
  8242  0F27  087A               	movf	_modem_packet_size+1,w
  8243  0F28  00A6               	movwf	??_Send_Byte+3
  8244  0F29  087B               	movf	_modem_packet_size+2,w
  8245  0F2A  00A7               	movwf	??_Send_Byte+4
  8246  0F2B  087C               	movf	_modem_packet_size+3,w
  8247  0F2C  00A8               	movwf	??_Send_Byte+5
  8248  0F2D  3003               	movlw	3
  8249  0F2E                     u3295:	
  8250  0F2E  36A8               	lsrf	??_Send_Byte+5,f
  8251  0F2F  0CA7               	rrf	??_Send_Byte+4,f
  8252  0F30  0CA6               	rrf	??_Send_Byte+3,f
  8253  0F31  0CA5               	rrf	??_Send_Byte+2,f
  8254  0F32  0B89               	decfsz	9,f
  8255  0F33  2F2E               	goto	u3295
  8256  0F34  0825               	movf	??_Send_Byte+2,w
  8257  0F35  3EA0               	addlw	_modem_packet& (0+255)
  8258  0F36  0086               	movwf	6
  8259  0F37  3001               	movlw	1	; select bank3/4
  8260  0F38  0087               	movwf	7
  8261  0F39  0824               	movf	??_Send_Byte+1,w
  8262  0F3A  0581               	andwf	1,f
  8263                           
  8264                           ;ax25.c: 50: modem_packet_size++;
  8265  0F3B  3001               	movlw	1
  8266  0F3C  07F9               	addwf	_modem_packet_size,f
  8267  0F3D  3000               	movlw	0
  8268  0F3E  3DFA               	addwfc	_modem_packet_size+1,f
  8269  0F3F  3000               	movlw	0
  8270  0F40  3DFB               	addwfc	_modem_packet_size+2,f
  8271  0F41  3000               	movlw	0
  8272  0F42  3DFC               	addwfc	_modem_packet_size+3,f
  8273                           
  8274                           ;ax25.c: 51: ones_in_a_row = 0;
  8275  0F43  0021               	movlb	1	; select bank1
  8276  0F44  01C9               	clrf	_ones_in_a_row^(0+128)
  8277  0F45  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  8278  0F46                     l2605:	
  8279  0F46  3001               	movlw	1
  8280  0F47  0020               	movlb	0	; select bank0
  8281  0F48  07AA               	addwf	Send_Byte@i,f
  8282  0F49  3000               	movlw	0
  8283  0F4A  3DAB               	addwfc	Send_Byte@i+1,f
  8284  0F4B  2E9C               	goto	L4
  8285  0F4C                     __end_of_Send_Byte:	
  8286                           
  8287                           	psect	text47
  8288  08FB                     __ptext47:	
  8289 ;; *************** function _Update_Crc *****************
  8290 ;; Defined at:
  8291 ;;		line 24 in file "ax25.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  input_bit       1    wreg     unsigned char 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  input_bit       1    2[BANK0 ] unsigned char 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;		None               void
  8298 ;; Registers used:
  8299 ;;		wreg, status,2, status,0
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8307 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8308 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;Total ram usage:        3 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    3
  8312 ;; This function calls:
  8313 ;;		Nothing
  8314 ;; This function is called by:
  8315 ;;		_Send_Byte
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           
  8320                           ;psect for function _Update_Crc
  8321  08FB                     _Update_Crc:	
  8322                           
  8323                           ;incstack = 0
  8324                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  8325                           ;Update_Crc@input_bit stored from wreg
  8326  08FB  0020               	movlb	0	; select bank0
  8327  08FC  00A2               	movwf	Update_Crc@input_bit
  8328                           
  8329                           ;ax25.c: 26: crc ^= input_bit;
  8330  08FD  0822               	movf	Update_Crc@input_bit,w
  8331  08FE  00A0               	movwf	??_Update_Crc
  8332  08FF  01A1               	clrf	??_Update_Crc+1
  8333  0900  0820               	movf	??_Update_Crc,w
  8334  0901  0021               	movlb	1	; select bank1
  8335  0902  06C7               	xorwf	_crc^(0+128),f
  8336  0903  0020               	movlb	0	; select bank0
  8337  0904  0821               	movf	??_Update_Crc+1,w
  8338  0905  0021               	movlb	1	; select bank1
  8339  0906  06C8               	xorwf	(_crc+1)^(0+128),f
  8340                           
  8341                           ;ax25.c: 27: if (crc & 1)
  8342  0907  1C47               	btfss	_crc^(0+128),0
  8343  0908  291C               	goto	l2213
  8344                           
  8345                           ;ax25.c: 28: crc = (crc >> 1) ^ 0x8408;
  8346  0909  0848               	movf	(_crc+1)^(0+128),w
  8347  090A  0020               	movlb	0	; select bank0
  8348  090B  00A1               	movwf	??_Update_Crc+1
  8349  090C  0021               	movlb	1	; select bank1
  8350  090D  0847               	movf	_crc^(0+128),w
  8351  090E  0020               	movlb	0	; select bank0
  8352  090F  00A0               	movwf	??_Update_Crc
  8353  0910  36A1               	lsrf	??_Update_Crc+1,f
  8354  0911  0CA0               	rrf	??_Update_Crc,f
  8355  0912  3008               	movlw	8
  8356  0913  0620               	xorwf	??_Update_Crc,w
  8357  0914  0021               	movlb	1	; select bank1
  8358  0915  00C7               	movwf	_crc^(0+128)
  8359  0916  3084               	movlw	132
  8360  0917  0020               	movlb	0	; select bank0
  8361  0918  0621               	xorwf	??_Update_Crc+1,w
  8362  0919  0021               	movlb	1	; select bank1
  8363  091A  00C8               	movwf	(_crc+1)^(0+128)
  8364  091B  0008               	return
  8365  091C                     l2213:	
  8366                           
  8367                           ;ax25.c: 29: else
  8368                           ;ax25.c: 30: crc = crc >> 1;
  8369  091C  0848               	movf	(_crc+1)^(0+128),w
  8370  091D  0020               	movlb	0	; select bank0
  8371  091E  00A1               	movwf	??_Update_Crc+1
  8372  091F  0021               	movlb	1	; select bank1
  8373  0920  0847               	movf	_crc^(0+128),w
  8374  0921  0020               	movlb	0	; select bank0
  8375  0922  00A0               	movwf	??_Update_Crc
  8376  0923  36A1               	lsrf	??_Update_Crc+1,f
  8377  0924  0CA0               	rrf	??_Update_Crc,f
  8378  0925  0820               	movf	??_Update_Crc,w
  8379  0926  0021               	movlb	1	; select bank1
  8380  0927  00C7               	movwf	_crc^(0+128)
  8381  0928  0020               	movlb	0	; select bank0
  8382  0929  0821               	movf	??_Update_Crc+1,w
  8383  092A  0021               	movlb	1	; select bank1
  8384  092B  00C8               	movwf	(_crc+1)^(0+128)
  8385  092C  0008               	return
  8386  092D                     __end_of_Update_Crc:	
  8387                           
  8388                           	psect	text48
  8389  0BE3                     __ptext48:	
  8390 ;; *************** function _Ax25_Send_Flag *****************
  8391 ;; Defined at:
  8392 ;;		line 77 in file "ax25.c"
  8393 ;; Parameters:    Size  Location     Type
  8394 ;;		None
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  i               2    7[BANK0 ] int 
  8397 ;;  byte            1    6[BANK0 ] unsigned char 
  8398 ;; Return value:  Size  Location     Type
  8399 ;;		None               void
  8400 ;; Registers used:
  8401 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8408 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8409 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8410 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8411 ;;Total ram usage:        9 bytes
  8412 ;; Hardware stack levels used:    1
  8413 ;; Hardware stack levels required when called:    3
  8414 ;; This function calls:
  8415 ;;		Nothing
  8416 ;; This function is called by:
  8417 ;;		_Ax25_Send_Header
  8418 ;;		_Ax25_Send_Footer
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           
  8423                           ;psect for function _Ax25_Send_Flag
  8424  0BE3                     _Ax25_Send_Flag:	
  8425                           
  8426                           ;ax25.c: 79: uint8_t byte = 0x7e;
  8427                           
  8428                           ;incstack = 0
  8429                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  8430  0BE3  307E               	movlw	126
  8431  0BE4  0020               	movlb	0	; select bank0
  8432  0BE5  00A0               	movwf	??_Ax25_Send_Flag
  8433  0BE6  0820               	movf	??_Ax25_Send_Flag,w
  8434  0BE7  00A6               	movwf	Ax25_Send_Flag@byte
  8435                           
  8436                           ;ax25.c: 80: int i;
  8437                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  8438  0BE8  01A7               	clrf	Ax25_Send_Flag@i
  8439  0BE9  01A8               	clrf	Ax25_Send_Flag@i+1
  8440  0BEA                     L5:	
  8441  0BEA  0828               	movf	Ax25_Send_Flag@i+1,w
  8442  0BEB  3A80               	xorlw	128
  8443  0BEC  00A0               	movwf	??_Ax25_Send_Flag
  8444  0BED  3080               	movlw	128
  8445  0BEE  0220               	subwf	??_Ax25_Send_Flag,w
  8446  0BEF  3008               	movlw	8
  8447  0BF0  1903               	btfsc	3,2
  8448  0BF1  0227               	subwf	Ax25_Send_Flag@i,w
  8449  0BF2  1803               	btfsc	3,0
  8450  0BF3  0008               	return
  8451                           
  8452                           ;ax25.c: 82: if (modem_packet_size >= 64 * 8)
  8453  0BF4  3000               	movlw	0
  8454  0BF5  027C               	subwf	_modem_packet_size+3,w
  8455  0BF6  1D03               	skipz
  8456  0BF7  2C02               	goto	u3425
  8457  0BF8  3000               	movlw	0
  8458  0BF9  027B               	subwf	_modem_packet_size+2,w
  8459  0BFA  1D03               	skipz
  8460  0BFB  2C02               	goto	u3425
  8461  0BFC  3002               	movlw	2
  8462  0BFD  027A               	subwf	_modem_packet_size+1,w
  8463  0BFE  1D03               	skipz
  8464  0BFF  2C02               	goto	u3425
  8465  0C00  3000               	movlw	0
  8466  0C01  0279               	subwf	_modem_packet_size,w
  8467  0C02                     u3425:	
  8468  0C02  1803               	btfsc	3,0
  8469  0C03  0008               	return
  8470                           
  8471                           ;ax25.c: 84: if ((byte >> i) & 1)
  8472                           
  8473                           ;ax25.c: 83: return;
  8474  0C04  0020               	movlb	0	; select bank0
  8475  0C05  0826               	movf	Ax25_Send_Flag@byte,w
  8476  0C06  00A0               	movwf	??_Ax25_Send_Flag
  8477  0C07  0A27               	incf	Ax25_Send_Flag@i,w
  8478  0C08  2C0A               	goto	u3434
  8479  0C09                     u3435:	
  8480  0C09  36A0               	lsrf	??_Ax25_Send_Flag,f
  8481  0C0A                     u3434:	
  8482  0C0A  0B89               	decfsz	9,f
  8483  0C0B  2C09               	goto	u3435
  8484  0C0C  1C20               	btfss	??_Ax25_Send_Flag,0
  8485  0C0D  2C30               	goto	l2699
  8486                           
  8487                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8488  0C0E  3001               	movlw	1
  8489  0C0F  00A0               	movwf	??_Ax25_Send_Flag
  8490  0C10  0879               	movf	_modem_packet_size,w
  8491  0C11  3907               	andlw	7
  8492  0C12  0A89               	incf	9,f
  8493  0C13  2C15               	goto	u3454
  8494  0C14                     u3455:	
  8495  0C14  35A0               	lslf	??_Ax25_Send_Flag,f
  8496  0C15                     u3454:	
  8497  0C15  0B89               	decfsz	9,f
  8498  0C16  2C14               	goto	u3455
  8499  0C17  0820               	movf	??_Ax25_Send_Flag,w
  8500  0C18  00A1               	movwf	??_Ax25_Send_Flag+1
  8501  0C19  0879               	movf	_modem_packet_size,w
  8502  0C1A  00A2               	movwf	??_Ax25_Send_Flag+2
  8503  0C1B  087A               	movf	_modem_packet_size+1,w
  8504  0C1C  00A3               	movwf	??_Ax25_Send_Flag+3
  8505  0C1D  087B               	movf	_modem_packet_size+2,w
  8506  0C1E  00A4               	movwf	??_Ax25_Send_Flag+4
  8507  0C1F  087C               	movf	_modem_packet_size+3,w
  8508  0C20  00A5               	movwf	??_Ax25_Send_Flag+5
  8509  0C21  3003               	movlw	3
  8510  0C22                     u3465:	
  8511  0C22  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  8512  0C23  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  8513  0C24  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  8514  0C25  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  8515  0C26  0B89               	decfsz	9,f
  8516  0C27  2C22               	goto	u3465
  8517  0C28  0822               	movf	??_Ax25_Send_Flag+2,w
  8518  0C29  3EA0               	addlw	_modem_packet& (0+255)
  8519  0C2A  0086               	movwf	6
  8520  0C2B  3001               	movlw	1	; select bank3/4
  8521  0C2C  0087               	movwf	7
  8522  0C2D  0821               	movf	??_Ax25_Send_Flag+1,w
  8523  0C2E  0481               	iorwf	1,f
  8524  0C2F  2C52               	goto	l2701
  8525  0C30                     l2699:	
  8526                           
  8527                           ;ax25.c: 86: else
  8528                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8529  0C30  3001               	movlw	1
  8530  0C31  00A0               	movwf	??_Ax25_Send_Flag
  8531  0C32  0879               	movf	_modem_packet_size,w
  8532  0C33  3907               	andlw	7
  8533  0C34  0A89               	incf	9,f
  8534  0C35  2C37               	goto	u3474
  8535  0C36                     u3475:	
  8536  0C36  35A0               	lslf	??_Ax25_Send_Flag,f
  8537  0C37                     u3474:	
  8538  0C37  0B89               	decfsz	9,f
  8539  0C38  2C36               	goto	u3475
  8540  0C39  0820               	movf	??_Ax25_Send_Flag,w
  8541  0C3A  3AFF               	xorlw	255
  8542  0C3B  00A1               	movwf	??_Ax25_Send_Flag+1
  8543  0C3C  0879               	movf	_modem_packet_size,w
  8544  0C3D  00A2               	movwf	??_Ax25_Send_Flag+2
  8545  0C3E  087A               	movf	_modem_packet_size+1,w
  8546  0C3F  00A3               	movwf	??_Ax25_Send_Flag+3
  8547  0C40  087B               	movf	_modem_packet_size+2,w
  8548  0C41  00A4               	movwf	??_Ax25_Send_Flag+4
  8549  0C42  087C               	movf	_modem_packet_size+3,w
  8550  0C43  00A5               	movwf	??_Ax25_Send_Flag+5
  8551  0C44  3003               	movlw	3
  8552  0C45                     u3485:	
  8553  0C45  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  8554  0C46  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  8555  0C47  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  8556  0C48  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  8557  0C49  0B89               	decfsz	9,f
  8558  0C4A  2C45               	goto	u3485
  8559  0C4B  0822               	movf	??_Ax25_Send_Flag+2,w
  8560  0C4C  3EA0               	addlw	_modem_packet& (0+255)
  8561  0C4D  0086               	movwf	6
  8562  0C4E  3001               	movlw	1	; select bank3/4
  8563  0C4F  0087               	movwf	7
  8564  0C50  0821               	movf	??_Ax25_Send_Flag+1,w
  8565  0C51  0581               	andwf	1,f
  8566  0C52                     l2701:	
  8567  0C52  3001               	movlw	1
  8568  0C53  07A7               	addwf	Ax25_Send_Flag@i,f
  8569  0C54  3000               	movlw	0
  8570  0C55  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  8571  0C56  3001               	movlw	1
  8572  0C57  07F9               	addwf	_modem_packet_size,f
  8573  0C58  3000               	movlw	0
  8574  0C59  3DFA               	addwfc	_modem_packet_size+1,f
  8575  0C5A  3000               	movlw	0
  8576  0C5B  3DFB               	addwfc	_modem_packet_size+2,f
  8577  0C5C  3000               	movlw	0
  8578  0C5D  3DFC               	addwfc	_modem_packet_size+3,f
  8579  0C5E  2BEA               	goto	L5
  8580  0C5F                     __end_of_Ax25_Send_Flag:	
  8581                           
  8582                           	psect	text49
  8583  16B5                     __ptext49:	
  8584 ;; *************** function _Adc1_Start *****************
  8585 ;; Defined at:
  8586 ;;		line 302 in file "utility.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;		None
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;		None
  8591 ;; Return value:  Size  Location     Type
  8592 ;;		None               void
  8593 ;; Registers used:
  8594 ;;		None
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;Total ram usage:        0 bytes
  8605 ;; Hardware stack levels used:    1
  8606 ;; Hardware stack levels required when called:    3
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		_main
  8611 ;; This function uses a non-reentrant model
  8612 ;;
  8613                           
  8614                           
  8615                           ;psect for function _Adc1_Start
  8616  16B5                     _Adc1_Start:	
  8617                           
  8618                           ;utility.c: 303: ADIF = 0;
  8619                           
  8620                           ;incstack = 0
  8621                           ; Regs used in _Adc1_Start: []
  8622  16B5  0020               	movlb	0	; select bank0
  8623  16B6  1311               	bcf	17,6	;volatile
  8624                           
  8625                           ;utility.c: 304: ADON = 1;
  8626  16B7  0021               	movlb	1	; select bank1
  8627  16B8  141D               	bsf	29,0	;volatile
  8628                           
  8629                           ;utility.c: 305: ADIE = 1;
  8630  16B9  1711               	bsf	17,6	;volatile
  8631  16BA  0008               	return
  8632  16BB                     __end_of_Adc1_Start:	
  8633                           
  8634                           	psect	intentry
  8635  0004                     __pintentry:	
  8636 ;; *************** function _global_interrupt *****************
  8637 ;; Defined at:
  8638 ;;		line 42 in file "main.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;		None
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;		None               void
  8645 ;; Registers used:
  8646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;Total ram usage:        2 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; Hardware stack levels required when called:    2
  8659 ;; This function calls:
  8660 ;;		_Sinus_Generator
  8661 ;; This function is called by:
  8662 ;;		Interrupt level 1
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666  0004                     _global_interrupt:	
  8667                           
  8668                           ;incstack = 0
  8669                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8670  0004  147E               	bsf	126,0	;set compiler interrupt flag
  8671  0005  3180               	pagesel	$
  8672  0006  0020               	movlb	0	; select bank0
  8673  0007  087F               	movf	127,w
  8674  0008  00F8               	movwf	??_global_interrupt+1
  8675                           
  8676                           ;main.c: 44: INTCON &= ~0x80;
  8677  0009  307F               	movlw	127
  8678  000A  00F7               	movwf	??_global_interrupt
  8679  000B  0877               	movf	??_global_interrupt,w
  8680  000C  058B               	andwf	11,f	;volatile
  8681                           
  8682                           ;main.c: 47: if(ADIF){
  8683  000D  1F11               	btfss	17,6	;volatile
  8684  000E  281B               	goto	i1l123
  8685                           
  8686                           ;main.c: 48: adc_sonuc_high = ADRESH;
  8687  000F  0021               	movlb	1	; select bank1
  8688  0010  081C               	movf	28,w	;volatile
  8689  0011  00F7               	movwf	??_global_interrupt
  8690  0012  0877               	movf	??_global_interrupt,w
  8691  0013  00CE               	movwf	_adc_sonuc_high^(0+128)
  8692                           
  8693                           ;main.c: 49: adc_sonuc_low = ADRESL;
  8694  0014  081B               	movf	27,w	;volatile
  8695  0015  00F7               	movwf	??_global_interrupt
  8696  0016  0877               	movf	??_global_interrupt,w
  8697  0017  00CF               	movwf	_adc_sonuc_low^(0+128)
  8698                           
  8699                           ;main.c: 51: ADIF = 0;
  8700  0018  0020               	movlb	0	; select bank0
  8701  0019  1311               	bcf	17,6	;volatile
  8702                           
  8703                           ;main.c: 52: return;
  8704  001A  2835               	goto	i1l124
  8705  001B                     i1l123:	
  8706                           
  8707                           ;main.c: 53: }
  8708                           ;main.c: 57: if(PIR1 & 0x04){
  8709  001B  1D11               	btfss	17,2	;volatile
  8710  001C  282A               	goto	i1l125
  8711                           
  8712                           ;main.c: 59: Systick_Counter += 1;
  8713  001D  3001               	movlw	1
  8714  001E  0022               	movlb	2	; select bank2
  8715  001F  07B8               	addwf	_Systick_Counter^(0+256),f
  8716  0020  3000               	movlw	0
  8717  0021  3DB9               	addwfc	(_Systick_Counter+1)^(0+256),f
  8718                           
  8719                           ;main.c: 63: TMR1H = 0x00;
  8720  0022  0020               	movlb	0	; select bank0
  8721  0023  0197               	clrf	23	;volatile
  8722                           
  8723                           ;main.c: 64: TMR1L = 0x00;
  8724  0024  0196               	clrf	22	;volatile
  8725                           
  8726                           ;main.c: 66: PIR1 &= ~0x04;
  8727  0025  30FB               	movlw	251
  8728  0026  00F7               	movwf	??_global_interrupt
  8729  0027  0877               	movf	??_global_interrupt,w
  8730  0028  0591               	andwf	17,f	;volatile
  8731                           
  8732                           ;main.c: 69: return;
  8733  0029  2835               	goto	i1l124
  8734  002A                     i1l125:	
  8735                           
  8736                           ;main.c: 70: }
  8737                           ;main.c: 74: if(INTCON & 0x04){
  8738  002A  1D0B               	btfss	11,2	;volatile
  8739  002B  2834               	goto	i1l126
  8740                           
  8741                           ;main.c: 76: Sinus_Generator();
  8742  002C  3184  24B5  3180   	fcall	_Sinus_Generator
  8743                           
  8744                           ;main.c: 79: INTCON &= ~0x04;
  8745  002F  30FB               	movlw	251
  8746  0030  00F7               	movwf	??_global_interrupt
  8747  0031  0877               	movf	??_global_interrupt,w
  8748  0032  058B               	andwf	11,f	;volatile
  8749                           
  8750                           ;main.c: 80: return;
  8751  0033  2835               	goto	i1l124
  8752  0034                     i1l126:	
  8753                           
  8754                           ;main.c: 81: }
  8755                           ;main.c: 86: INTCON |= 0x80;
  8756  0034  178B               	bsf	11,7	;volatile
  8757  0035                     i1l124:	
  8758  0035  0878               	movf	??_global_interrupt+1,w
  8759  0036  0020               	movlb	0	; select bank0
  8760  0037  00FF               	movwf	127
  8761  0038  107E               	bcf	126,0	;clear compiler interrupt flag
  8762  0039  0009               	retfie
  8763  003A                     __end_of_global_interrupt:	
  8764                           
  8765                           	psect	text51
  8766  04B5                     __ptext51:	
  8767 ;; *************** function _Sinus_Generator *****************
  8768 ;; Defined at:
  8769 ;;		line 82 in file "audio_tone.c"
  8770 ;; Parameters:    Size  Location     Type
  8771 ;;		None
  8772 ;; Auto vars:     Size  Location     Type
  8773 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  8774 ;; Return value:  Size  Location     Type
  8775 ;;		None               void
  8776 ;; Registers used:
  8777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8778 ;; Tracked objects:
  8779 ;;		On entry : 0/0
  8780 ;;		On exit  : 0/0
  8781 ;;		Unchanged: 0/0
  8782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8785 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8786 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8787 ;;Total ram usage:        6 bytes
  8788 ;; Hardware stack levels used:    1
  8789 ;; Hardware stack levels required when called:    1
  8790 ;; This function calls:
  8791 ;;		_Send_Vcxo_Signal
  8792 ;;		_Timer0_Stop
  8793 ;; This function is called by:
  8794 ;;		_global_interrupt
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           
  8799                           ;psect for function _Sinus_Generator
  8800  04B5                     _Sinus_Generator:	
  8801                           
  8802                           ;audio_tone.c: 84: uint8_t Audio_Signal;
  8803                           ;audio_tone.c: 85: static uint8_t tone_index = 0;
  8804                           ;audio_tone.c: 86: if (MODEM_TRANSMITTING == 1) {
  8805                           
  8806                           ;incstack = 0
  8807                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8808  04B5  0021               	movlb	1	; select bank1
  8809  04B6  084C               	movf	_MODEM_TRANSMITTING^(0+128),w
  8810  04B7  3A01               	xorlw	1
  8811  04B8  1D03               	skipz
  8812  04B9  0008               	return
  8813                           
  8814                           ;audio_tone.c: 90: if (packet_pos == 50) {
  8815  04BA  3000               	movlw	0
  8816  04BB  0022               	movlb	2	; select bank2
  8817  04BC  062B               	xorwf	(_packet_pos+3)^(0+256),w
  8818  04BD  1D03               	skipz
  8819  04BE  2CC9               	goto	u351_25
  8820  04BF  3000               	movlw	0
  8821  04C0  062A               	xorwf	(_packet_pos+2)^(0+256),w
  8822  04C1  1D03               	skipz
  8823  04C2  2CC9               	goto	u351_25
  8824  04C3  3000               	movlw	0
  8825  04C4  0629               	xorwf	(_packet_pos+1)^(0+256),w
  8826  04C5  1D03               	skipz
  8827  04C6  2CC9               	goto	u351_25
  8828  04C7  3032               	movlw	50
  8829  04C8  0628               	xorwf	_packet_pos^(0+256),w
  8830  04C9                     u351_25:	
  8831  04C9  1D03               	skipz
  8832  04CA  2CD7               	goto	i1l2719
  8833                           
  8834                           ;audio_tone.c: 91: MODEM_TRANSMITTING = 0;
  8835  04CB  0021               	movlb	1	; select bank1
  8836  04CC  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  8837                           
  8838                           ;audio_tone.c: 92: Timer0_Stop();
  8839  04CD  3188  2000  3184   	fcall	_Timer0_Stop
  8840                           
  8841                           ;audio_tone.c: 94: Send_Vcxo_Signal(0x10);
  8842  04D0  3010               	movlw	16
  8843  04D1  3196  26A6         	fcall	_Send_Vcxo_Signal
  8844                           
  8845                           ;audio_tone.c: 96: PTT_OFF = 1;
  8846  04D3  0021               	movlb	1	; select bank1
  8847  04D4  01CD               	clrf	_PTT_OFF^(0+128)
  8848  04D5  0ACD               	incf	_PTT_OFF^(0+128),f
  8849                           
  8850                           ;audio_tone.c: 98: goto end_generator;
  8851  04D6  0008               	return
  8852  04D7                     i1l2719:	
  8853                           
  8854                           ;audio_tone.c: 99: }
  8855                           ;audio_tone.c: 102: if (current_sample_in_baud == 0) {
  8856  04D7  0021               	movlb	1	; select bank1
  8857  04D8  08D0               	movf	_current_sample_in_baud^(0+128),f
  8858  04D9  1D03               	skipz
  8859  04DA  2D28               	goto	i1l420
  8860                           
  8861                           ;audio_tone.c: 103: if ((packet_pos & 7) == 0)
  8862  04DB  3007               	movlw	7
  8863  04DC  0022               	movlb	2	; select bank2
  8864  04DD  0528               	andwf	_packet_pos^(0+256),w
  8865  04DE  00F1               	movwf	??_Sinus_Generator
  8866  04DF  3000               	movlw	0
  8867  04E0  0529               	andwf	(_packet_pos+1)^(0+256),w
  8868  04E1  00F2               	movwf	??_Sinus_Generator+1
  8869  04E2  3000               	movlw	0
  8870  04E3  052A               	andwf	(_packet_pos+2)^(0+256),w
  8871  04E4  00F3               	movwf	??_Sinus_Generator+2
  8872  04E5  3000               	movlw	0
  8873  04E6  052B               	andwf	(_packet_pos+3)^(0+256),w
  8874  04E7  00F4               	movwf	??_Sinus_Generator+3
  8875  04E8  0874               	movf	??_Sinus_Generator+3,w
  8876  04E9  0473               	iorwf	??_Sinus_Generator+2,w
  8877  04EA  0472               	iorwf	??_Sinus_Generator+1,w
  8878  04EB  0471               	iorwf	??_Sinus_Generator,w
  8879  04EC  1D03               	skipz
  8880  04ED  2D06               	goto	i1l2725
  8881                           
  8882                           ;audio_tone.c: 104: current_byte = modem_packet[packet_pos >> 3];
  8883  04EE  0828               	movf	_packet_pos^(0+256),w
  8884  04EF  00F1               	movwf	??_Sinus_Generator
  8885  04F0  0829               	movf	(_packet_pos+1)^(0+256),w
  8886  04F1  00F2               	movwf	??_Sinus_Generator+1
  8887  04F2  082A               	movf	(_packet_pos+2)^(0+256),w
  8888  04F3  00F3               	movwf	??_Sinus_Generator+2
  8889  04F4  082B               	movf	(_packet_pos+3)^(0+256),w
  8890  04F5  00F4               	movwf	??_Sinus_Generator+3
  8891  04F6  3003               	movlw	3
  8892  04F7                     u354_25:	
  8893  04F7  36F4               	lsrf	??_Sinus_Generator+3,f
  8894  04F8  0CF3               	rrf	??_Sinus_Generator+2,f
  8895  04F9  0CF2               	rrf	??_Sinus_Generator+1,f
  8896  04FA  0CF1               	rrf	??_Sinus_Generator,f
  8897  04FB  0B89               	decfsz	9,f
  8898  04FC  2CF7               	goto	u354_25
  8899  04FD  0871               	movf	??_Sinus_Generator,w
  8900  04FE  3EA0               	addlw	_modem_packet& (0+255)
  8901  04FF  0086               	movwf	6
  8902  0500  3001               	movlw	1	; select bank3/4
  8903  0501  0087               	movwf	7
  8904  0502  0801               	movf	1,w
  8905  0503  00F5               	movwf	??_Sinus_Generator+4
  8906  0504  0875               	movf	??_Sinus_Generator+4,w
  8907  0505  2D09               	goto	L6
  8908  0506                     i1l2725:	
  8909                           
  8910                           ;audio_tone.c: 105: else
  8911                           ;audio_tone.c: 106: current_byte = current_byte >> 1 ;
  8912  0506  367D               	lsrf	_current_byte,w
  8913  0507  00F1               	movwf	??_Sinus_Generator
  8914  0508  0871               	movf	??_Sinus_Generator,w
  8915  0509                     L6:	
  8916  0509  00FD               	movwf	_current_byte
  8917                           
  8918                           ;audio_tone.c: 107: if ((current_byte & 1) == 0) {
  8919  050A  187D               	btfsc	_current_byte,0
  8920  050B  2D28               	goto	i1l420
  8921                           
  8922                           ;audio_tone.c: 109: if(tone_index){
  8923  050C  0021               	movlb	1	; select bank1
  8924  050D  084B               	movf	Sinus_Generator@tone_index^(0+128),w
  8925  050E  1903               	btfsc	3,2
  8926  050F  2D1C               	goto	i1l2735
  8927                           
  8928                           ;audio_tone.c: 110: phase_delta = PHASE_DELTA_1200;
  8929  0510  0022               	movlb	2	; select bank2
  8930  0511  0823               	movf	(_PHASE_DELTA_1200+3)^(0+256),w
  8931  0512  00B3               	movwf	(_phase_delta+3)^(0+256)
  8932  0513  0822               	movf	(_PHASE_DELTA_1200+2)^(0+256),w
  8933  0514  00B2               	movwf	(_phase_delta+2)^(0+256)
  8934  0515  0821               	movf	(_PHASE_DELTA_1200+1)^(0+256),w
  8935  0516  00B1               	movwf	(_phase_delta+1)^(0+256)
  8936  0517  0820               	movf	_PHASE_DELTA_1200^(0+256),w
  8937  0518  00B0               	movwf	_phase_delta^(0+256)
  8938                           
  8939                           ;audio_tone.c: 111: tone_index = 0;
  8940  0519  0021               	movlb	1	; select bank1
  8941  051A  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  8942                           
  8943                           ;audio_tone.c: 112: }
  8944  051B  2D28               	goto	i1l420
  8945  051C                     i1l2735:	
  8946                           
  8947                           ;audio_tone.c: 113: else{
  8948                           ;audio_tone.c: 114: phase_delta = PHASE_DELTA_2200;
  8949  051C  0022               	movlb	2	; select bank2
  8950  051D  0827               	movf	(_PHASE_DELTA_2200+3)^(0+256),w
  8951  051E  00B3               	movwf	(_phase_delta+3)^(0+256)
  8952  051F  0826               	movf	(_PHASE_DELTA_2200+2)^(0+256),w
  8953  0520  00B2               	movwf	(_phase_delta+2)^(0+256)
  8954  0521  0825               	movf	(_PHASE_DELTA_2200+1)^(0+256),w
  8955  0522  00B1               	movwf	(_phase_delta+1)^(0+256)
  8956  0523  0824               	movf	_PHASE_DELTA_2200^(0+256),w
  8957  0524  00B0               	movwf	_phase_delta^(0+256)
  8958                           
  8959                           ;audio_tone.c: 115: tone_index = 1;
  8960  0525  0021               	movlb	1	; select bank1
  8961  0526  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  8962  0527  0ACB               	incf	Sinus_Generator@tone_index^(0+128),f
  8963  0528                     i1l420:	
  8964                           
  8965                           ;audio_tone.c: 116: }
  8966                           ;audio_tone.c: 117: }
  8967                           ;audio_tone.c: 118: }
  8968                           ;audio_tone.c: 120: phase += phase_delta;
  8969  0528  0022               	movlb	2	; select bank2
  8970  0529  0830               	movf	_phase_delta^(0+256),w
  8971  052A  07AC               	addwf	_phase^(0+256),f
  8972  052B  0831               	movf	(_phase_delta+1)^(0+256),w
  8973  052C  3DAD               	addwfc	(_phase+1)^(0+256),f
  8974  052D  0832               	movf	(_phase_delta+2)^(0+256),w
  8975  052E  3DAE               	addwfc	(_phase+2)^(0+256),f
  8976  052F  0833               	movf	(_phase_delta+3)^(0+256),w
  8977  0530  3DAF               	addwfc	(_phase+3)^(0+256),f
  8978                           
  8979                           ;audio_tone.c: 121: if(phase > 181)
  8980  0531  3000               	movlw	0
  8981  0532  022F               	subwf	(_phase+3)^(0+256),w
  8982  0533  1D03               	skipz
  8983  0534  2D3F               	goto	u357_25
  8984  0535  3000               	movlw	0
  8985  0536  022E               	subwf	(_phase+2)^(0+256),w
  8986  0537  1D03               	skipz
  8987  0538  2D3F               	goto	u357_25
  8988  0539  3000               	movlw	0
  8989  053A  022D               	subwf	(_phase+1)^(0+256),w
  8990  053B  1D03               	skipz
  8991  053C  2D3F               	goto	u357_25
  8992  053D  30B6               	movlw	182
  8993  053E  022C               	subwf	_phase^(0+256),w
  8994  053F                     u357_25:	
  8995  053F  1C03               	skipc
  8996  0540  2D59               	goto	i1l2741
  8997                           
  8998                           ;audio_tone.c: 122: phase = phase - 182;
  8999  0541  304A               	movlw	74
  9000  0542  00F1               	movwf	??_Sinus_Generator
  9001  0543  30FF               	movlw	255
  9002  0544  00F2               	movwf	??_Sinus_Generator+1
  9003  0545  30FF               	movlw	255
  9004  0546  00F3               	movwf	??_Sinus_Generator+2
  9005  0547  30FF               	movlw	255
  9006  0548  00F4               	movwf	??_Sinus_Generator+3
  9007  0549  082C               	movf	_phase^(0+256),w
  9008  054A  07F1               	addwf	??_Sinus_Generator,f
  9009  054B  082D               	movf	(_phase+1)^(0+256),w
  9010  054C  3DF2               	addwfc	??_Sinus_Generator+1,f
  9011  054D  082E               	movf	(_phase+2)^(0+256),w
  9012  054E  3DF3               	addwfc	??_Sinus_Generator+2,f
  9013  054F  082F               	movf	(_phase+3)^(0+256),w
  9014  0550  3DF4               	addwfc	??_Sinus_Generator+3,f
  9015  0551  0874               	movf	??_Sinus_Generator+3,w
  9016  0552  00AF               	movwf	(_phase+3)^(0+256)
  9017  0553  0873               	movf	??_Sinus_Generator+2,w
  9018  0554  00AE               	movwf	(_phase+2)^(0+256)
  9019  0555  0872               	movf	??_Sinus_Generator+1,w
  9020  0556  00AD               	movwf	(_phase+1)^(0+256)
  9021  0557  0871               	movf	??_Sinus_Generator,w
  9022  0558  00AC               	movwf	_phase^(0+256)
  9023  0559                     i1l2741:	
  9024                           
  9025                           ;audio_tone.c: 125: Audio_Signal = *(sine_table2 + phase);
  9026  0559  082D               	movf	(_phase+1)^(0+256),w
  9027  055A  0085               	movwf	5
  9028  055B  082C               	movf	_phase^(0+256),w
  9029  055C  0084               	movwf	4
  9030  055D  3000               	movlw	low (_sine_table2| (0+32768))
  9031  055E  0784               	addwf	4,f
  9032  055F  3087               	movlw	high (_sine_table2| (0+32768))
  9033  0560  3D85               	addwfc	5,f
  9034  0561  0800               	movf	0,w	;code access
  9035  0562  00F1               	movwf	??_Sinus_Generator
  9036  0563  0871               	movf	??_Sinus_Generator,w
  9037  0564  00F6               	movwf	Sinus_Generator@Audio_Signal
  9038                           
  9039                           ;audio_tone.c: 126: Send_Vcxo_Signal(Audio_Signal);
  9040  0565  0876               	movf	Sinus_Generator@Audio_Signal,w
  9041  0566  3196  26A6  3184   	fcall	_Send_Vcxo_Signal
  9042                           
  9043                           ;audio_tone.c: 128: if(++current_sample_in_baud == SAMPLES_PER_BAUD) {
  9044  0569  3001               	movlw	1
  9045  056A  00F1               	movwf	??_Sinus_Generator
  9046  056B  0871               	movf	??_Sinus_Generator,w
  9047  056C  0021               	movlb	1	; select bank1
  9048  056D  07D0               	addwf	_current_sample_in_baud^(0+128),f
  9049  056E  0850               	movf	_current_sample_in_baud^(0+128),w
  9050  056F  0020               	movlb	0	; select bank0
  9051  0570  066F               	xorwf	_SAMPLES_PER_BAUD,w
  9052  0571  1D03               	skipz
  9053  0572  0008               	return
  9054                           
  9055                           ;audio_tone.c: 129: current_sample_in_baud = 0;
  9056  0573  0021               	movlb	1	; select bank1
  9057  0574  01D0               	clrf	_current_sample_in_baud^(0+128)
  9058                           
  9059                           ;audio_tone.c: 130: packet_pos++;
  9060  0575  3001               	movlw	1
  9061  0576  0022               	movlb	2	; select bank2
  9062  0577  07A8               	addwf	_packet_pos^(0+256),f
  9063  0578  3000               	movlw	0
  9064  0579  3DA9               	addwfc	(_packet_pos+1)^(0+256),f
  9065  057A  3000               	movlw	0
  9066  057B  3DAA               	addwfc	(_packet_pos+2)^(0+256),f
  9067  057C  3000               	movlw	0
  9068  057D  3DAB               	addwfc	(_packet_pos+3)^(0+256),f
  9069                           
  9070                           ;audio_tone.c: 132: }
  9071                           ;audio_tone.c: 133: }
  9072                           ;audio_tone.c: 135: end_generator:
  9073  057E  0008               	return
  9074  057F                     __end_of_Sinus_Generator:	
  9075                           ;audio_tone.c: 137: return;
  9076                           
  9077                           
  9078                           	psect	text52
  9079  0800                     __ptext52:	
  9080 ;; *************** function _Timer0_Stop *****************
  9081 ;; Defined at:
  9082 ;;		line 262 in file "utility.c"
  9083 ;; Parameters:    Size  Location     Type
  9084 ;;		None
  9085 ;; Auto vars:     Size  Location     Type
  9086 ;;		None
  9087 ;; Return value:  Size  Location     Type
  9088 ;;		None               void
  9089 ;; Registers used:
  9090 ;;		status,2
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9100 ;;Total ram usage:        0 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_Sinus_Generator
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           
  9110                           ;psect for function _Timer0_Stop
  9111  0800                     _Timer0_Stop:	
  9112                           
  9113                           ;utility.c: 263: TMR0IE = 0;
  9114                           
  9115                           ;incstack = 0
  9116                           ; Regs used in _Timer0_Stop: [status,2]
  9117  0800  128B               	bcf	11,5	;volatile
  9118                           
  9119                           ;utility.c: 264: TMR0 = 0x00;
  9120  0801  0020               	movlb	0	; select bank0
  9121  0802  0195               	clrf	21	;volatile
  9122  0803  0008               	return
  9123  0804                     __end_of_Timer0_Stop:	
  9124                           
  9125                           	psect	text53
  9126  16A6                     __ptext53:	
  9127 ;; *************** function _Send_Vcxo_Signal *****************
  9128 ;; Defined at:
  9129 ;;		line 118 in file "utility.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  value           1    wreg     unsigned char 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  value           1    0[COMMON] unsigned char 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  1    wreg      unsigned char 
  9136 ;; Registers used:
  9137 ;;		wreg
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;Total ram usage:        1 bytes
  9148 ;; Hardware stack levels used:    1
  9149 ;; This function calls:
  9150 ;;		Nothing
  9151 ;; This function is called by:
  9152 ;;		_Sinus_Generator
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           
  9157                           ;psect for function _Send_Vcxo_Signal
  9158  16A6                     _Send_Vcxo_Signal:	
  9159                           
  9160                           ;incstack = 0
  9161                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  9162                           ;Send_Vcxo_Signal@value stored from wreg
  9163  16A6  00F0               	movwf	Send_Vcxo_Signal@value
  9164                           
  9165                           ;utility.c: 120: DACCON1 = value;
  9166  16A7  0870               	movf	Send_Vcxo_Signal@value,w
  9167  16A8  0022               	movlb	2	; select bank2
  9168  16A9  0099               	movwf	25	;volatile
  9169  16AA  0008               	return
  9170  16AB                     __end_of_Send_Vcxo_Signal:	
  9171                           ;utility.c: 121: return 1;
  9172                           ;	Return value of _Send_Vcxo_Signal is never used
  9173                           
  9174  007E                     btemp	set	126	;btemp
  9175  007E                     pic14e$flags	set	126
  9176  007E                     wtemp	set	126
  9177  007E                     wtemp0	set	126
  9178  0080                     wtemp1	set	128
  9179  0082                     wtemp2	set	130
  9180  0084                     wtemp3	set	132
  9181  0086                     wtemp4	set	134
  9182  0088                     wtemp5	set	136
  9183  007F                     wtemp6	set	127
  9184  007E                     ttemp	set	126
  9185  007E                     ttemp0	set	126
  9186  0081                     ttemp1	set	129
  9187  0084                     ttemp2	set	132
  9188  0087                     ttemp3	set	135
  9189  007F                     ttemp4	set	127
  9190  007E                     ltemp	set	126
  9191  007E                     ltemp0	set	126
  9192  0082                     ltemp1	set	130
  9193  0086                     ltemp2	set	134
  9194  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     79      80
    BANK1            80     28      79
    BANK2            80      0      44
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Ptt_On
    _Set_Freq->___fttol
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftdiv->___lltoft
    ___ftadd->___ftneg
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ptt_On->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy
    _Read_Adf7012_Muxout->_Delay_ms
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _Ptt_On->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  157505
                                             78 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                             _Ptt_On
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   22731
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   34314
                         _Modem_Init
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   34314
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
                        _Gpio_Config
                           _Set_Freq
 ---------------------------------------------------------------------------------
 (3) _Set_Freq                                            26    22      4   10264
                                             38 BANK0     26    22      4
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4    1913
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     268
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     305
                                             24 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      98
                                             14 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2117
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2071
                                             14 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    2711
                                             17 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1685
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     406
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1319
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1319
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Modem_Init                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    0     0      0   49510
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ptt_On                                               1     1      0   48191
                                             77 BANK0      1     1      0
                           _Adf_Lock
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Adf_Lock                                             6     6      0   24141
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   21412
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    5353
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    5353
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    5353
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    5353
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    3141
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1411
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1331
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (3) _Adf_Locked                                           0     0      0    1319
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Read_Adf7012_Muxout                                  0     0      0    1319
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             6     4      2    1319
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (4) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _global_interrupt                                    2     2      0      45
                                              7 COMMON     2     2      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (11) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (12) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Lock
         _Adf_Locked
           _Read_Adf7012_Muxout
             _Delay_ms
               _Dac0_Start_Hold
         _Adf_Write_Config
           _Adf_Write_Register_One
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
           _Adf_Write_Register_Three
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
           _Adf_Write_Register_Two
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
           _Adf_Write_Register_Zero
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
         _Delay_ms
           _Dac0_Start_Hold
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
         _Delay_ms
           _Dac0_Start_Hold
     _Timer0_Start
   _Modem_Setup
     _Modem_Init
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Gpio_Config
       _Set_Freq
         ___aldiv
         ___ftadd
           ___ftneg (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
         ___ftneg
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lldiv
         ___lltoft
           ___ftpack
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ptt_On
     _Adf_Lock
       _Adf_Locked
         _Read_Adf7012_Muxout
           _Delay_ms
             _Dac0_Start_Hold
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
     _Read_Adf7012_Muxout
       _Delay_ms
         _Dac0_Start_Hold
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _Sinus_Generator
     _Send_Vcxo_Signal
     _Timer0_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      2C       9       55.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     119      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     119      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Sep 22 20:43:33 2014

                      __CFG_CP$OFF 0000            _Adf_Reset_Register_Zero 17E1  
                   Reverse_Array@i 0032                     Spi_Byte_Send@i 0029  
         __end_of_Adf_Reset_Config 171D                       ___ftadd@exp1 003D  
                     ___ftadd@exp2 003C                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003B           _Adf_Reset_Register_Three 0804  
                              l132 0D6B                                l226 088C  
                              l338 0201                                l198 0837  
                              l637 0C70                                l743 0A56  
                              l772 0386                                l749 0A6D  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00C7                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 0033  
                     __CFG_IESO$ON 0000                      ??_Gpio_Config 0020  
           _Adf_Write_Register_One 0A84             _Adf_Write_Register_Two 0646  
                     ___ftdiv@cntr 0038                       ___ftdiv@sign 003D  
                             l2001 084E                               l2015 088D  
                             l2121 0A2C                               l2051 09AC  
                             l2213 091C                               l2037 085D  
                             l2053 09C0                               l2125 0A33  
                             l2135 0A5B                               l2127 0A3D  
                             l2303 0378                               l2081 170C  
                             l2233 0C91                               l2225 0C81  
                             l2137 0A63                               l2129 0A42  
                             l2313 03AA                               l2305 0382  
                             l2251 0CD8                               l2243 0CBF  
                             l2235 0C9F                               l2323 03C5  
                             l2069 0941                               l2309 0398  
                             l2333 0E06                               l2405 0FD0  
                             l2501 08BB                               l2247 0CCA  
                             l2263 030F                               l2273 0325  
                             l2361 0E76                               l2353 0E5D  
                             l2409 0FD8                               l2433 0CFA  
                             l2291 0352                               l2267 0316  
                             l2339 0E1C                               l2451 0D2A  
                             l2701 0C52                               l2605 0F46  
                             l2293 035C                               l2285 033F  
                             l2381 0F79                               l2461 0D4E  
                             l2453 0D38                               l2295 0361  
                             l2375 0F63                               l2463 0D51  
                             l2545 0B27                               l2297 0365  
                             l2393 0FB4                               l2553 01EB  
                             l2467 0D5F                               l2459 0D45  
                             l2491 0A1A                               l2397 0FBC  
                             l2477 09E1                               l2487 0A0F  
                             l2479 09EF                               l2559 0217  
                             l2841 03FC                               l2595 0F08  
                             l2675 0BB4                               l2499 08AB  
                             l2677 0BD6                               l2853 041D  
                             l2847 040F                               l2873 0472  
                             l2881 0433                               l2699 0C30  
                             l2883 04AD                               l2867 044D  
                             l2859 0430                               l2891 17AA  
                             l2877 0493                               l2991 0DDF  
                             l2993 0DE2                               l2985 0DD6  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _ADON 04E8  
                             STR_1 07BE                               u2005 05A6  
                             u2015 05B5                               u2105 0678  
                             u2025 05C4                               u2115 0687  
                             u2035 05D3                               u2205 00CC  
                             u2125 0696                               u2045 05EE  
                             u2055 0A8D                               u2215 00DB  
                             u2135 06A5                               u3015 0D46  
                             u2065 0A9B                               u2225 00EA  
                             u2145 0072                               u2305 0A38  
                             u2075 0AB5                               u2235 00F9  
                             u2155 0081                               u3115 08B0  
                             u3204 0EAC                               u3205 0EAB  
                             u2245 0108                               u2165 0090  
                             u2085 064F                               u2325 0A51  
                             u3214 0EB9                               u3215 0EB8  
                             u2255 0117                               u2175 009F  
                             u2095 065E                               u3055 09E4  
                             u2265 0126                               u2185 00AE  
                             u2345 0A5E                               u3235 0ECB  
                             u2275 0135                               u2195 00BD  
                             u2435 0C94                               u3075 09F0  
                             u3244 0ED4                               u3245 0ED3  
                             u3085 0A04                               u3165 01E6  
                             u3255 0EE1                               u3335 0B86  
                             u2455 0CA0                               u2375 0A74  
                             u3095 0A10                               u3175 01FA  
                             u3344 0B8E                               u3425 0C02  
                             u3265 0F06                               u3345 0B8D  
                             u1905 083D                               u2465 0CB4  
                             u2625 0353                               u3185 0210  
                             u3434 0C0A                               u3435 0C09  
                             u3275 0F16                               u2475 0CC0  
                             u3284 0F20                               u3364 0B99  
                             u3285 0F1F                               u3365 0B98  
                             u3605 040D                               u3454 0C15  
                             u3455 0C14                               u3295 0F2E  
                             u3375 0BA6                               u3615 041B  
                             u2655 0366                               u3384 0BBB  
                             u3465 0C22                               u3385 0BBA  
                             u3625 042E                               u1945 0867  
                             u2905 0FD9                               u3474 0C37  
                             u3475 0C36                               u3715 179C  
                             u3395 0BC9                               u3635 044B  
                             u2595 0340                               u2755 0E2E  
                             u2915 0FDF                               u2835 0F85  
                             u3485 0C45                               u3645 0451  
                             u2685 0379                               u2765 0E3E  
                             u2845 0F95                               u3655 0470  
                             u2775 0E5E                               u3760 0DA8  
                             u3665 047F                               u1985 0588  
                             u2785 0E6D                               u2865 0FBD  
                             u3675 0484                               u3595 03FA  
                             u1995 0597                               u2795 0E77  
                             u2875 0FC3                               u2955 0D01  
                             u3685 0497                               u3695 043D  
                             u2985 0D2B                               _PIR1 0011  
                             u3797 0843                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 0D68                       ___ftpack@arg 0020  
                     ___ftpack@exp 0023                               _test 00D1  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      Send_Byte@byte 0029  
                    __CFG_BOREN$ON 0000                               ltemp 007E  
                             start 003A                               ttemp 007E  
                  _Sinus_Generator 04B5                               wtemp 007E  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 0036  
                     ___ftmul@sign 0037            _Adf_Write_Register_Zero 057F  
                     ___fttol@exp1 0045                       ___fttol@lval 0041  
                      ?_Adc1_Start 0070                       Adf_Lock@bias 00DD  
               main@beacon_address 00DF                      __CFG_PLLEN$ON 0000  
                  __end_of_Ptt_Off 16FF                    __end_of___aldiv 0CE1  
                    ??_Radio_Setup 006B                              _ADCS0 04F4  
                            _ADCS1 04F5                              _ADCS2 04F6  
                            ?_main 0070                              _DACEN 08C7  
                            _DACOE 08C5                    __end_of___ftadd 03DD  
                    __CFG_WDTE$OFF 0000                              _ANSA1 0C61  
                  __end_of___ftdiv 0E98                    __end_of___ftneg 16E5  
                  __end_of___lldiv 0A23                    __end_of___ftmul 1000  
                  __end_of___fttol 0D68                              i1l123 001B  
                            i1l124 0035                              i1l125 002A  
                            i1l126 0034                              i1l420 0528  
                            _TMR1H 0017                              _TMR1L 0016  
                            _TRISA 008C                              _TRISC 008E  
       Write_Adf7012_Reg@reg_value 002C                       ___lltoft@exp 002D  
                            _phase 012C                              _test2 00D2  
                    ___ftpack@sign 0024                   __end_of_Adf_Lock 0B6A  
                    ??_Modem_Setup 006B                      Set_Freq@f_pfd 0058  
                __end_of_BAUD_RATE 07BC                      Set_Freq@ratio 0052  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
               __size_of_Adf_Reset 0009                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 16E5  
                            wtemp6 007F                __end_of_Gpio_Config 173C  
                 __end_of_Delay_ms 0853                        ?_Adf_Locked 0070  
           _current_sample_in_baud 00D0                  Spi_Byte_Send@data 0027  
                       Send_Byte@i 002A                    __initialization 003C  
        ??_Adf_Reset_Register_Zero 0020          __size_of_Ax25_Send_Header 00D8  
            __size_of_System_Start 0036                       __end_of_main 0DEF  
        __size_of_Ax25_Send_Footer 001B          __size_of_Ax25_Send_String 001D  
            __end_of_Reverse_Array 0961           _Adf_Write_Register_Three 0069  
            __end_of_Spi_Byte_Send 08A6                             ??_main 006E  
                    ___fttol@sign1 0040          __size_of_Send_Vcxo_Signal 0005  
                       _Modem_Init 175D                   __end_of_Set_Freq 02E7  
              __end_of_Radio_Setup 17E1       __size_of_Read_Adf7012_Muxout 000F  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _CCP1IF 008A  
                           _DACNSS 08C0                             _ADNREF 04F2  
                           _ADRESH 009C                             _ADRESL 009B  
                           _CCPR1H 0292                             _CCPR1L 0291  
                 __end_of___ftpack 0A84            __end_of_Sinus_Generator 057F  
    Adf_Write_Register_One@reg_ptr 0043                   __end_of___lltoft 08D0  
                           i1l2741 0559                             i1l2725 0506  
                           i1l2735 051C                             i1l2719 04D7  
                           _INTCON 000B                             u351_25 04C9  
              __size_of_Adc1_Start 0006                             u354_25 04F7  
                           u357_25 053F                             _OSCCON 0099  
         __size_of_Dac0_Start_Hold 0005                             _TMR1GE 00CF  
                           _TMR0IE 005D                             _TMR0IF 005A  
                           _TMR0CS 04AD                             _TMR1IE 0488  
                           _TMR1IF 0088                             _TMR1ON 00C0  
                     _System_Start 0961                __end_of_Modem_Setup 16C7  
                   __CFG_PWRTE$OFF 0000                      ??_Timer0_Stop 0070  
        ??_Adf_Write_Register_Zero 0033                             _Ptt_On 07C4  
                        ??_Ptt_Off 006B                          ??___aldiv 0028  
               __size_of_Send_Byte 00B4                 Reverse_Array@input 0031  
                        ??___ftadd 0037                     __CFG_STVREN$ON 0000  
                        ??___ftdiv 0034                          ??___ftneg 0031  
                        ??___lldiv 0028                          ??___ftmul 002E  
                        ??___fttol 003C                   ??_Ax25_Send_Flag 0020  
                 ??_Ax25_Send_Byte 002C                             _memcpy 0853  
                 ??_Ax25_Send_Sync 0020                  __end_of_Adf_Reset 16DC  
            ___ftmul@f3_as_product 0033                         _Update_Crc 08FB  
              __size_of_Adf_Locked 0003                        _Gpio_Config 172C  
          __end_of__initialization 0065                      _adc_sonuc_low 00CF  
                       ___ftadd@f1 0031                         ___ftadd@f2 0034  
                       ___ftdiv@f1 0031                         ___ftdiv@f2 002E  
                       ___ftdiv@f3 0039                         ___ftneg@f1 002E  
        __size_of_global_interrupt 0036                 Write_Adf7012_Reg@i 002D  
                       ___ftmul@f1 0028                         ___ftmul@f2 002B  
       ??_Adf_Reset_Register_Three 0020                         ___fttol@f1 0038  
                   __pcstackCOMMON 0070           ??_Adf_Reset_Register_One 0020  
                     __pidataBANK2 173C           ??_Adf_Reset_Register_Two 0020  
                       ___lltoft@c 0028                         _adf_config 00A0  
              __end_of_Timer0_Stop 0804                      _PLAYBACK_RATE 07B6  
                        ?_Adf_Lock 0070                        ?_Modem_Init 0070  
                ?_Adf_Reset_Config 0070                        _Radio_Setup 17C4  
          ?_Adf_Write_Register_One 0070            ?_Adf_Write_Register_Two 0070  
        Spi_Byte_Send@data_to_send 0028                 ??_Adf_Reset_Config 0026  
                        ?_Delay_ms 0020                  __end_of_Send_Byte 0F4C  
                 _PHASE_DELTA_1200 0120                   _PHASE_DELTA_2200 0124  
                      _Modem_Setup 16C1                         __pbssBANK0 006F  
                       __pbssBANK1 00A0                         __pbssBANK2 0120  
                       __pbssBANK3 01A0                   ?_Sinus_Generator 0070  
               Ax25_Send_Flag@byte 0026                          ?_Set_Freq 0046  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 00D7  
                    ?_Timer1_Start 0070                         __pmaintext 0D68  
                 _Ax25_Send_Header 03DD                            ?_Ptt_On 0070  
                ??_Dac0_Start_Hold 0020                 __end_of_TABLE_SIZE 07BE  
                 _Ax25_Send_Footer 178C                         __pintentry 0004  
                     ??_Adc1_Start 0020                            _DACCON1 0119  
               Ax25_Send_Byte@byte 002C                            _DACPSS0 08C2  
                          _DACPSS1 08C3                            ?_memcpy 0020  
                 _Ax25_Send_String 17A7                            _ADPREF0 04F0  
                          _ADPREF1 04F1                         ??_Adf_Lock 006B  
                        ?___ftpack 0020                          ?___lltoft 0028  
   __end_of_Adf_Write_Register_One 0AF5     __end_of_Adf_Write_Register_Two 06FD  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                 _Send_Vcxo_Signal 16A6           __end_of_Adf_Write_Config 16F1  
                      ?_Update_Crc 0070                         ??_Delay_ms 0022  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _PTT_OFF 00CD                Update_Crc@input_bit 0022  
    Adf_Write_Register_Two@reg_ptr 004B     Adf_Write_Register_Zero@reg_ptr 004F  
               __end_of_Adc1_Start 16BB                     ??_Timer0_Start 0020  
              __size_of_Modem_Init 0017                     ??_Timer1_Start 0020  
                        _BAUD_RATE 07BA                       ??_Adf_Locked 0026  
                       ??_Set_Freq 004A         ??_Adf_Write_Register_Three 0033  
                      _Timer0_Stop 0800                         _packet_pos 0128  
                          _Ptt_Off 16F1                    __size_of_Ptt_On 0039  
              _Read_Adf7012_Muxout 16FF                            ___aldiv 0C5F  
                          ___ftadd 02E7    __size_of_Adf_Reset_Register_One 0011  
                          ___ftdiv 0DEF                            ___ftneg 16DC  
                          ___lldiv 09D0    __size_of_Adf_Reset_Register_Two 0018  
                          ___ftmul 0F4C                            ___fttol 0CE1  
               Ax25_Send_Sync@byte 0026                Reverse_Array@length 0027  
                  Ax25_Send_Flag@i 0027                    __size_of_memcpy 0029  
                       ??___ftpack 0025                         ??___lltoft 002C  
                          __ptext1 171D                            __ptext2 0961  
                          __ptext3 16F1                            __ptext4 16C1  
                          __ptext5 17C4                            __ptext6 01D5  
                          __ptext7 08A6                            __ptext8 09D0  
                          __ptext9 0CE1              Delay_ms@time_to_delay 0020  
        Adf_Write_Register_One@reg 003F                    Ax25_Send_Sync@i 0027  
                 ___aldiv@dividend 0024                 __end_of_Adf_Locked 0800  
             ?_Read_Adf7012_Muxout 0070          Adf_Write_Register_Two@reg 004F  
                          clrloop0 16CE    Adf_Write_Register_Three@reg_ptr 00D3  
             end_of_initialization 0065                            memcpy@d 0024  
                          memcpy@n 0021                            memcpy@s 0025  
                        Delay_ms@i 0024                            init_ram 16C7  
                          initloop 16C8                   _global_interrupt 0004  
                  ___lldiv@divisor 0020                    ___lldiv@counter 002D  
              __size_of_Update_Crc 0032                   ___aldiv@quotient 002B  
                     __pstringtext 0700                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 0138                          _Adf_Reset 16D3  
                   _adc_sonuc_high 00CE              ??_Read_Adf7012_Muxout 0026  
                       _powerlevel 0134                   _SAMPLES_PER_BAUD 006F  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 174C  
     Write_Adf7012_Reg@size_of_reg 002A             _Adf_Reset_Register_Two 1774  
        Sinus_Generator@tone_index 00CB             __size_of_Reverse_Array 0034  
           __size_of_Spi_Byte_Send 002A                        ___ftdiv@exp 003C  
         ?_Adf_Reset_Register_Zero 0070                        ___ftmul@exp 0032  
                      Adf_Lock@adj 00DB                     __end_of_Ptt_On 07FD  
                   __end_of_memcpy 087C                       ??_Modem_Init 0020  
                     ?_Radio_Setup 0070                       Set_Freq@freq 0046  
                     Set_Freq@rest 0055                  __size_of_Adf_Lock 0075  
             __end_of_Timer0_Start 16B5               __end_of_Timer1_Start 172C  
              start_initialization 003C                         ?_Adf_Reset 0070  
         __end_of_Ax25_Send_Header 04B5                          Set_Freq@m 004E  
                        Set_Freq@n 005C           __end_of_Ax25_Send_Footer 17A7  
                __size_of_Delay_ms 0029                       ?_Modem_Setup 0070  
                  _Dac0_Start_Hold 16AB           __end_of_Ax25_Send_String 17C4  
        __size_of_Adf_Reset_Config 000F           ?_Adf_Write_Register_Zero 0070  
                        _Send_Byte 0E98           __end_of_Send_Vcxo_Signal 16AB  
               __end_of_Modem_Init 1774                           ??_Ptt_On 006D  
                __size_of_Set_Freq 0112                        __pdataBANK2 013C  
                         ??_memcpy 0023                      _Reverse_Array 092D  
                    _Spi_Byte_Send 087C                  ?_Adf_Write_Config 0070  
                __size_of___ftpack 0061                       ??_Update_Crc 0020  
                __size_of___lltoft 002A                        __pbssCOMMON 0079  
                        ___latbits 0002  __size_of_Adf_Reset_Register_Three 0026  
                    _ones_in_a_row 00C9                      __pcstackBANK0 0020  
                    __pcstackBANK1 00D3                 ??_Adf_Write_Config 006B  
        ?_Adf_Reset_Register_Three 0070                __end_of__stringdata 07C4  
          __size_of_Ax25_Send_Flag 007C            __size_of_Ax25_Send_Byte 0006  
          __size_of_Ax25_Send_Sync 0079    __end_of_Adf_Reset_Register_Zero 1800  
    Ax25_Send_Header@num_addresses 002C                         ?_Send_Byte 0070  
                _Write_Adf7012_Reg 0997                       _current_byte 007D  
                Ax25_Send_Header@i 0034                  Ax25_Send_Header@j 0031  
               ?_Write_Adf7012_Reg 002A                       ?_Timer0_Stop 0070  
         __size_of_Sinus_Generator 00CA          Ax25_Send_Footer@final_crc 002C  
           Ax25_Send_String@string 002D                           ?_Ptt_Off 0070  
               __end_of_Update_Crc 092D                           ?___aldiv 0020  
                         ?___ftadd 0031                           ?___ftdiv 002E  
                         ?___ftneg 002E                           ?___lldiv 0020  
                         ?___ftmul 0028                           ?___fttol 0038  
              ??_Write_Adf7012_Reg 002B                     ?_Reverse_Array 0027  
                   ?_Spi_Byte_Send 0070           __end_of_global_interrupt 003A  
          __end_of_Dac0_Start_Hold 16B0                        ??_Adf_Reset 0026  
  __end_of_Adf_Write_Register_Zero 0646                  Ax25_Send_String@i 002F  
        __end_of_Write_Adf7012_Reg 09D0               __size_of_Gpio_Config 0010  
                  ___aldiv@divisor 0020                      ?_System_Start 0070  
                     _modem_packet 01A0                    ___aldiv@counter 0029  
                        clear_ram0 16CD                          main@F3176 013C  
            __size_of_Timer0_Start 0005                           _Adf_Lock 0AF5  
            __size_of_Timer1_Start 000F          Reverse_Array@buffer_array 002D  
                      __stringdata 07BE  __size_of_Adf_Write_Register_Three 016C  
          ?_Adf_Reset_Register_One 0070          ?_Adf_Write_Register_Three 0070  
          ?_Adf_Reset_Register_Two 0070               __size_of_Radio_Setup 001D  
                         _Delay_ms 082A              Send_Vcxo_Signal@value 0070  
                   ??_System_Start 0020                   _Adf_Reset_Config 170E  
                      ??_Send_Byte 0023               __size_of_Modem_Setup 0006  
                _Modem_Flush_Frame 08D0                           _Set_Freq 01D5  
               ?_Modem_Flush_Frame 0070                       _Timer0_Start 16B0  
                     _Timer1_Start 171D           ??_Adf_Write_Register_One 0033  
         ??_Adf_Write_Register_Two 0033                   __size_of_Ptt_Off 000E  
                  ??_Reverse_Array 0028                    ??_Spi_Byte_Send 0026  
                 __size_of___aldiv 0082              __end_of_PLAYBACK_RATE 07BA  
                 __size_of___ftadd 00F6                ??_Modem_Flush_Frame 006E  
                 __size_of___ftdiv 00A9                   __size_of___ftneg 0009  
                 __size_of___lldiv 0053                   __size_of___ftmul 00B4  
                 __size_of___fttol 0087                           ___ftpack 0A23  
                ??_Sinus_Generator 0071   __size_of_Adf_Reset_Register_Zero 001F  
                         ___lltoft 08A6        __end_of_Read_Adf7012_Muxout 170E  
   __end_of_Adf_Reset_Register_One 175D                           _dac_flag 013A  
   __end_of_Adf_Reset_Register_Two 178C                __end_of_sine_table2 07B6  
                 ?_Dac0_Start_Hold 0070                     _Ax25_Send_Flag 0BE3  
                   _Ax25_Send_Byte 16BB                     _Ax25_Send_Sync 0B6A  
                         __ptext10 16DC                           __ptext11 0F4C  
                         __ptext20 0804                           __ptext12 0DEF  
                         __ptext21 174C                           __ptext13 02E7  
                         __ptext30 0646                           __ptext22 16D3  
                         __ptext14 0A23                           __ptext31 0069  
                         __ptext23 175D                           __ptext15 0C5F  
                         __ptext40 16AB                           __ptext32 0A84  
                         __ptext24 08D0                           __ptext16 172C  
                         __ptext41 17A7                           __ptext33 0997  
                         __ptext25 16B0                           __ptext17 170E  
                         __ptext42 16BB                           __ptext34 087C  
                         __ptext26 07C4                           __ptext18 17E1  
                         __ptext51 04B5                           __ptext43 03DD  
                         __ptext35 092D                           __ptext27 0AF5  
                         __ptext19 1774                           __ptext52 0800  
                         __ptext44 0B6A                           __ptext36 0853  
                         __ptext28 16E5                           __ptext53 16A6  
                         __ptext45 178C                           __ptext37 07FD  
                         __ptext29 057F                           __ptext46 0E98  
                         __ptext38 16FF                           __ptext47 08FB  
                         __ptext39 082A                           __ptext48 0BE3  
                         __ptext49 16B5                  ?_Ax25_Send_Header 002C  
                ?_Ax25_Send_Footer 0070                 ??_Ax25_Send_Header 002E  
        __end_of_Modem_Flush_Frame 08FB         __size_of_Write_Adf7012_Reg 0039  
                ?_Ax25_Send_String 002D                 ??_Ax25_Send_Footer 002C  
                    __size_of_main 0087                        _phase_delta 0130  
                ?_Send_Vcxo_Signal 0070                 ??_Ax25_Send_String 002F  
               ??_Send_Vcxo_Signal 0070   __end_of_Adf_Reset_Register_Three 082A  
             __size_of_Timer0_Stop 0004         Adf_Write_Register_Zero@reg 0053  
 __size_of_Adf_Write_Register_Zero 00C7             __end_of_Ax25_Send_Flag 0C5F  
           __end_of_Ax25_Send_Byte 16C1             __end_of_Ax25_Send_Sync 0BE3  
                       _TABLE_SIZE 07BC                           memcpy@d1 0026  
                         memcpy@s1 0020                        pic14e$flags 007E  
                         intlevel1 0000                   ___lldiv@dividend 0024  
        __size_of_Adf_Write_Config 000C                  __CFG_CLKOUTEN$OFF 0000  
               _MODEM_TRANSMITTING 00CC    __size_of_Adf_Write_Register_One 0071  
  __size_of_Adf_Write_Register_Two 00B7                         _Adc1_Start 16B5  
                      _sine_table2 0700               __end_of_System_Start 0997  
                  ?_Ax25_Send_Flag 0070                   ___lldiv@quotient 0029  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070                       ___aldiv@sign 002A  
      Sinus_Generator@Audio_Signal 0076                 ??_global_interrupt 0077  
       __size_of_Modem_Flush_Frame 002B                         _Adf_Locked 07FD  
                _modem_packet_size 0079   __end_of_Adf_Write_Register_Three 01D5  
