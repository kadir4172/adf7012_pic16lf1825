

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Sep 23 19:40:59 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	dabs	1,0x7E,2
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000E                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010E                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  011E                     	;# 
   131  018C                     	;# 
   132  018E                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020E                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  0291                     	;# 
   168  0291                     	;# 
   169  0292                     	;# 
   170  0293                     	;# 
   171  0294                     	;# 
   172  0295                     	;# 
   173  0295                     	;# 
   174  0296                     	;# 
   175  0298                     	;# 
   176  0298                     	;# 
   177  0299                     	;# 
   178  029A                     	;# 
   179  029B                     	;# 
   180  029C                     	;# 
   181  029D                     	;# 
   182  029E                     	;# 
   183  0311                     	;# 
   184  0311                     	;# 
   185  0312                     	;# 
   186  0313                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  038C                     	;# 
   192  038E                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  039A                     	;# 
   197  039C                     	;# 
   198  039D                     	;# 
   199  039E                     	;# 
   200  039F                     	;# 
   201  0415                     	;# 
   202  0416                     	;# 
   203  0417                     	;# 
   204  041C                     	;# 
   205  041D                     	;# 
   206  041E                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000E                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  008C                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  010C                     	;# 
   263  010E                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  011E                     	;# 
   277  018C                     	;# 
   278  018E                     	;# 
   279  0191                     	;# 
   280  0191                     	;# 
   281  0192                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0194                     	;# 
   286  0195                     	;# 
   287  0196                     	;# 
   288  0199                     	;# 
   289  019A                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019C                     	;# 
   293  019D                     	;# 
   294  019E                     	;# 
   295  019F                     	;# 
   296  020C                     	;# 
   297  020E                     	;# 
   298  0211                     	;# 
   299  0211                     	;# 
   300  0212                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0213                     	;# 
   304  0214                     	;# 
   305  0214                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0216                     	;# 
   310  0216                     	;# 
   311  0217                     	;# 
   312  0217                     	;# 
   313  0291                     	;# 
   314  0291                     	;# 
   315  0292                     	;# 
   316  0293                     	;# 
   317  0294                     	;# 
   318  0295                     	;# 
   319  0295                     	;# 
   320  0296                     	;# 
   321  0298                     	;# 
   322  0298                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029D                     	;# 
   328  029E                     	;# 
   329  0311                     	;# 
   330  0311                     	;# 
   331  0312                     	;# 
   332  0313                     	;# 
   333  0318                     	;# 
   334  0318                     	;# 
   335  0319                     	;# 
   336  031A                     	;# 
   337  038C                     	;# 
   338  038E                     	;# 
   339  0391                     	;# 
   340  0392                     	;# 
   341  0393                     	;# 
   342  039A                     	;# 
   343  039C                     	;# 
   344  039D                     	;# 
   345  039E                     	;# 
   346  039F                     	;# 
   347  0415                     	;# 
   348  0416                     	;# 
   349  0417                     	;# 
   350  041C                     	;# 
   351  041D                     	;# 
   352  041E                     	;# 
   353  0FE4                     	;# 
   354  0FE5                     	;# 
   355  0FE6                     	;# 
   356  0FE7                     	;# 
   357  0FE8                     	;# 
   358  0FE9                     	;# 
   359  0FEA                     	;# 
   360  0FEB                     	;# 
   361  0FED                     	;# 
   362  0FEE                     	;# 
   363  0FEF                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000E                     	;# 
   378  0011                     	;# 
   379  0012                     	;# 
   380  0013                     	;# 
   381  0015                     	;# 
   382  0016                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001C                     	;# 
   390  001E                     	;# 
   391  001F                     	;# 
   392  008C                     	;# 
   393  008E                     	;# 
   394  0091                     	;# 
   395  0092                     	;# 
   396  0093                     	;# 
   397  0095                     	;# 
   398  0096                     	;# 
   399  0097                     	;# 
   400  0098                     	;# 
   401  0099                     	;# 
   402  009A                     	;# 
   403  009B                     	;# 
   404  009B                     	;# 
   405  009C                     	;# 
   406  009D                     	;# 
   407  009E                     	;# 
   408  010C                     	;# 
   409  010E                     	;# 
   410  0111                     	;# 
   411  0112                     	;# 
   412  0113                     	;# 
   413  0114                     	;# 
   414  0115                     	;# 
   415  0116                     	;# 
   416  0117                     	;# 
   417  0118                     	;# 
   418  0119                     	;# 
   419  011A                     	;# 
   420  011B                     	;# 
   421  011D                     	;# 
   422  011E                     	;# 
   423  018C                     	;# 
   424  018E                     	;# 
   425  0191                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0193                     	;# 
   431  0194                     	;# 
   432  0195                     	;# 
   433  0196                     	;# 
   434  0199                     	;# 
   435  019A                     	;# 
   436  019B                     	;# 
   437  019B                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  020C                     	;# 
   443  020E                     	;# 
   444  0211                     	;# 
   445  0211                     	;# 
   446  0212                     	;# 
   447  0212                     	;# 
   448  0213                     	;# 
   449  0213                     	;# 
   450  0214                     	;# 
   451  0214                     	;# 
   452  0215                     	;# 
   453  0215                     	;# 
   454  0215                     	;# 
   455  0216                     	;# 
   456  0216                     	;# 
   457  0217                     	;# 
   458  0217                     	;# 
   459  0291                     	;# 
   460  0291                     	;# 
   461  0292                     	;# 
   462  0293                     	;# 
   463  0294                     	;# 
   464  0295                     	;# 
   465  0295                     	;# 
   466  0296                     	;# 
   467  0298                     	;# 
   468  0298                     	;# 
   469  0299                     	;# 
   470  029A                     	;# 
   471  029B                     	;# 
   472  029C                     	;# 
   473  029D                     	;# 
   474  029E                     	;# 
   475  0311                     	;# 
   476  0311                     	;# 
   477  0312                     	;# 
   478  0313                     	;# 
   479  0318                     	;# 
   480  0318                     	;# 
   481  0319                     	;# 
   482  031A                     	;# 
   483  038C                     	;# 
   484  038E                     	;# 
   485  0391                     	;# 
   486  0392                     	;# 
   487  0393                     	;# 
   488  039A                     	;# 
   489  039C                     	;# 
   490  039D                     	;# 
   491  039E                     	;# 
   492  039F                     	;# 
   493  0415                     	;# 
   494  0416                     	;# 
   495  0417                     	;# 
   496  041C                     	;# 
   497  041D                     	;# 
   498  041E                     	;# 
   499  0FE4                     	;# 
   500  0FE5                     	;# 
   501  0FE6                     	;# 
   502  0FE7                     	;# 
   503  0FE8                     	;# 
   504  0FE9                     	;# 
   505  0FEA                     	;# 
   506  0FEB                     	;# 
   507  0FED                     	;# 
   508  0FEE                     	;# 
   509  0FEF                     	;# 
   510  0000                     	;# 
   511  0001                     	;# 
   512  0002                     	;# 
   513  0003                     	;# 
   514  0004                     	;# 
   515  0005                     	;# 
   516  0006                     	;# 
   517  0007                     	;# 
   518  0008                     	;# 
   519  0009                     	;# 
   520  000A                     	;# 
   521  000B                     	;# 
   522  000C                     	;# 
   523  000E                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0013                     	;# 
   527  0015                     	;# 
   528  0016                     	;# 
   529  0016                     	;# 
   530  0017                     	;# 
   531  0018                     	;# 
   532  0019                     	;# 
   533  001A                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  001E                     	;# 
   537  001F                     	;# 
   538  008C                     	;# 
   539  008E                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0095                     	;# 
   544  0096                     	;# 
   545  0097                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  010C                     	;# 
   555  010E                     	;# 
   556  0111                     	;# 
   557  0112                     	;# 
   558  0113                     	;# 
   559  0114                     	;# 
   560  0115                     	;# 
   561  0116                     	;# 
   562  0117                     	;# 
   563  0118                     	;# 
   564  0119                     	;# 
   565  011A                     	;# 
   566  011B                     	;# 
   567  011D                     	;# 
   568  011E                     	;# 
   569  018C                     	;# 
   570  018E                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0193                     	;# 
   577  0194                     	;# 
   578  0195                     	;# 
   579  0196                     	;# 
   580  0199                     	;# 
   581  019A                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019C                     	;# 
   585  019D                     	;# 
   586  019E                     	;# 
   587  019F                     	;# 
   588  020C                     	;# 
   589  020E                     	;# 
   590  0211                     	;# 
   591  0211                     	;# 
   592  0212                     	;# 
   593  0212                     	;# 
   594  0213                     	;# 
   595  0213                     	;# 
   596  0214                     	;# 
   597  0214                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0215                     	;# 
   601  0216                     	;# 
   602  0216                     	;# 
   603  0217                     	;# 
   604  0217                     	;# 
   605  0291                     	;# 
   606  0291                     	;# 
   607  0292                     	;# 
   608  0293                     	;# 
   609  0294                     	;# 
   610  0295                     	;# 
   611  0295                     	;# 
   612  0296                     	;# 
   613  0298                     	;# 
   614  0298                     	;# 
   615  0299                     	;# 
   616  029A                     	;# 
   617  029B                     	;# 
   618  029C                     	;# 
   619  029D                     	;# 
   620  029E                     	;# 
   621  0311                     	;# 
   622  0311                     	;# 
   623  0312                     	;# 
   624  0313                     	;# 
   625  0318                     	;# 
   626  0318                     	;# 
   627  0319                     	;# 
   628  031A                     	;# 
   629  038C                     	;# 
   630  038E                     	;# 
   631  0391                     	;# 
   632  0392                     	;# 
   633  0393                     	;# 
   634  039A                     	;# 
   635  039C                     	;# 
   636  039D                     	;# 
   637  039E                     	;# 
   638  039F                     	;# 
   639  0415                     	;# 
   640  0416                     	;# 
   641  0417                     	;# 
   642  041C                     	;# 
   643  041D                     	;# 
   644  041E                     	;# 
   645  0FE4                     	;# 
   646  0FE5                     	;# 
   647  0FE6                     	;# 
   648  0FE7                     	;# 
   649  0FE8                     	;# 
   650  0FE9                     	;# 
   651  0FEA                     	;# 
   652  0FEB                     	;# 
   653  0FED                     	;# 
   654  0FEE                     	;# 
   655  0FEF                     	;# 
   656  0000                     	;# 
   657  0001                     	;# 
   658  0002                     	;# 
   659  0003                     	;# 
   660  0004                     	;# 
   661  0005                     	;# 
   662  0006                     	;# 
   663  0007                     	;# 
   664  0008                     	;# 
   665  0009                     	;# 
   666  000A                     	;# 
   667  000B                     	;# 
   668  000C                     	;# 
   669  000E                     	;# 
   670  0011                     	;# 
   671  0012                     	;# 
   672  0013                     	;# 
   673  0015                     	;# 
   674  0016                     	;# 
   675  0016                     	;# 
   676  0017                     	;# 
   677  0018                     	;# 
   678  0019                     	;# 
   679  001A                     	;# 
   680  001B                     	;# 
   681  001C                     	;# 
   682  001E                     	;# 
   683  001F                     	;# 
   684  008C                     	;# 
   685  008E                     	;# 
   686  0091                     	;# 
   687  0092                     	;# 
   688  0093                     	;# 
   689  0095                     	;# 
   690  0096                     	;# 
   691  0097                     	;# 
   692  0098                     	;# 
   693  0099                     	;# 
   694  009A                     	;# 
   695  009B                     	;# 
   696  009B                     	;# 
   697  009C                     	;# 
   698  009D                     	;# 
   699  009E                     	;# 
   700  010C                     	;# 
   701  010E                     	;# 
   702  0111                     	;# 
   703  0112                     	;# 
   704  0113                     	;# 
   705  0114                     	;# 
   706  0115                     	;# 
   707  0116                     	;# 
   708  0117                     	;# 
   709  0118                     	;# 
   710  0119                     	;# 
   711  011A                     	;# 
   712  011B                     	;# 
   713  011D                     	;# 
   714  011E                     	;# 
   715  018C                     	;# 
   716  018E                     	;# 
   717  0191                     	;# 
   718  0191                     	;# 
   719  0192                     	;# 
   720  0193                     	;# 
   721  0193                     	;# 
   722  0193                     	;# 
   723  0194                     	;# 
   724  0195                     	;# 
   725  0196                     	;# 
   726  0199                     	;# 
   727  019A                     	;# 
   728  019B                     	;# 
   729  019B                     	;# 
   730  019C                     	;# 
   731  019D                     	;# 
   732  019E                     	;# 
   733  019F                     	;# 
   734  020C                     	;# 
   735  020E                     	;# 
   736  0211                     	;# 
   737  0211                     	;# 
   738  0212                     	;# 
   739  0212                     	;# 
   740  0213                     	;# 
   741  0213                     	;# 
   742  0214                     	;# 
   743  0214                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0215                     	;# 
   747  0216                     	;# 
   748  0216                     	;# 
   749  0217                     	;# 
   750  0217                     	;# 
   751  0291                     	;# 
   752  0291                     	;# 
   753  0292                     	;# 
   754  0293                     	;# 
   755  0294                     	;# 
   756  0295                     	;# 
   757  0295                     	;# 
   758  0296                     	;# 
   759  0298                     	;# 
   760  0298                     	;# 
   761  0299                     	;# 
   762  029A                     	;# 
   763  029B                     	;# 
   764  029C                     	;# 
   765  029D                     	;# 
   766  029E                     	;# 
   767  0311                     	;# 
   768  0311                     	;# 
   769  0312                     	;# 
   770  0313                     	;# 
   771  0318                     	;# 
   772  0318                     	;# 
   773  0319                     	;# 
   774  031A                     	;# 
   775  038C                     	;# 
   776  038E                     	;# 
   777  0391                     	;# 
   778  0392                     	;# 
   779  0393                     	;# 
   780  039A                     	;# 
   781  039C                     	;# 
   782  039D                     	;# 
   783  039E                     	;# 
   784  039F                     	;# 
   785  0415                     	;# 
   786  0416                     	;# 
   787  0417                     	;# 
   788  041C                     	;# 
   789  041D                     	;# 
   790  041E                     	;# 
   791  0FE4                     	;# 
   792  0FE5                     	;# 
   793  0FE6                     	;# 
   794  0FE7                     	;# 
   795  0FE8                     	;# 
   796  0FE9                     	;# 
   797  0FEA                     	;# 
   798  0FEB                     	;# 
   799  0FED                     	;# 
   800  0FEE                     	;# 
   801  0FEF                     	;# 
   802                           
   803                           	psect	idataBANK2
   804  176B                     __pidataBANK2:	
   805                           
   806                           ;initializer for main@F3176
   807  176B  3443               	retlw	67
   808  176C  3455               	retlw	85
   809  176D  3442               	retlw	66
   810  176E  3445               	retlw	69
   811  176F  3459               	retlw	89
   812  1770  3459               	retlw	89
   813  1771  3400               	retlw	0
   814  1772  3405               	retlw	5
   815  1773  3443               	retlw	67
   816  1774  3455               	retlw	85
   817  1775  3442               	retlw	66
   818  1776  3445               	retlw	69
   819  1777  3458               	retlw	88
   820  1778  3458               	retlw	88
   821  1779  3400               	retlw	0
   822  177A  3406               	retlw	6
   823                           
   824                           	psect	stringtext
   825  0600                     __pstringtext:	
   826  0600                     _sine_table2:	
   827  0600  3410               	retlw	16
   828  0601  3410               	retlw	16
   829  0602  3411               	retlw	17
   830  0603  3411               	retlw	17
   831  0604  3412               	retlw	18
   832  0605  3412               	retlw	18
   833  0606  3413               	retlw	19
   834  0607  3413               	retlw	19
   835  0608  3414               	retlw	20
   836  0609  3414               	retlw	20
   837  060A  3415               	retlw	21
   838  060B  3415               	retlw	21
   839  060C  3416               	retlw	22
   840  060D  3416               	retlw	22
   841  060E  3417               	retlw	23
   842  060F  3417               	retlw	23
   843  0610  3418               	retlw	24
   844  0611  3418               	retlw	24
   845  0612  3419               	retlw	25
   846  0613  3419               	retlw	25
   847  0614  3419               	retlw	25
   848  0615  341A               	retlw	26
   849  0616  341A               	retlw	26
   850  0617  341B               	retlw	27
   851  0618  341B               	retlw	27
   852  0619  341B               	retlw	27
   853  061A  341C               	retlw	28
   854  061B  341C               	retlw	28
   855  061C  341C               	retlw	28
   856  061D  341D               	retlw	29
   857  061E  341D               	retlw	29
   858  061F  341D               	retlw	29
   859  0620  341D               	retlw	29
   860  0621  341E               	retlw	30
   861  0622  341E               	retlw	30
   862  0623  341E               	retlw	30
   863  0624  341E               	retlw	30
   864  0625  341E               	retlw	30
   865  0626  341E               	retlw	30
   866  0627  341F               	retlw	31
   867  0628  341F               	retlw	31
   868  0629  341F               	retlw	31
   869  062A  341F               	retlw	31
   870  062B  341F               	retlw	31
   871  062C  341F               	retlw	31
   872  062D  341F               	retlw	31
   873  062E  341F               	retlw	31
   874  062F  341F               	retlw	31
   875  0630  341F               	retlw	31
   876  0631  341F               	retlw	31
   877  0632  341F               	retlw	31
   878  0633  341F               	retlw	31
   879  0634  341F               	retlw	31
   880  0635  341E               	retlw	30
   881  0636  341E               	retlw	30
   882  0637  341E               	retlw	30
   883  0638  341E               	retlw	30
   884  0639  341E               	retlw	30
   885  063A  341E               	retlw	30
   886  063B  341D               	retlw	29
   887  063C  341D               	retlw	29
   888  063D  341D               	retlw	29
   889  063E  341D               	retlw	29
   890  063F  341C               	retlw	28
   891  0640  341C               	retlw	28
   892  0641  341C               	retlw	28
   893  0642  341B               	retlw	27
   894  0643  341B               	retlw	27
   895  0644  341B               	retlw	27
   896  0645  341A               	retlw	26
   897  0646  341A               	retlw	26
   898  0647  3419               	retlw	25
   899  0648  3419               	retlw	25
   900  0649  3419               	retlw	25
   901  064A  3418               	retlw	24
   902  064B  3418               	retlw	24
   903  064C  3417               	retlw	23
   904  064D  3417               	retlw	23
   905  064E  3416               	retlw	22
   906  064F  3416               	retlw	22
   907  0650  3415               	retlw	21
   908  0651  3415               	retlw	21
   909  0652  3414               	retlw	20
   910  0653  3414               	retlw	20
   911  0654  3413               	retlw	19
   912  0655  3413               	retlw	19
   913  0656  3412               	retlw	18
   914  0657  3412               	retlw	18
   915  0658  3411               	retlw	17
   916  0659  3411               	retlw	17
   917  065A  3410               	retlw	16
   918  065B  3410               	retlw	16
   919  065C  340F               	retlw	15
   920  065D  340E               	retlw	14
   921  065E  340E               	retlw	14
   922  065F  340D               	retlw	13
   923  0660  340D               	retlw	13
   924  0661  340C               	retlw	12
   925  0662  340C               	retlw	12
   926  0663  340B               	retlw	11
   927  0664  340B               	retlw	11
   928  0665  340A               	retlw	10
   929  0666  340A               	retlw	10
   930  0667  3409               	retlw	9
   931  0668  3409               	retlw	9
   932  0669  3408               	retlw	8
   933  066A  3408               	retlw	8
   934  066B  3407               	retlw	7
   935  066C  3407               	retlw	7
   936  066D  3406               	retlw	6
   937  066E  3406               	retlw	6
   938  066F  3406               	retlw	6
   939  0670  3405               	retlw	5
   940  0671  3405               	retlw	5
   941  0672  3404               	retlw	4
   942  0673  3404               	retlw	4
   943  0674  3404               	retlw	4
   944  0675  3403               	retlw	3
   945  0676  3403               	retlw	3
   946  0677  3403               	retlw	3
   947  0678  3402               	retlw	2
   948  0679  3402               	retlw	2
   949  067A  3402               	retlw	2
   950  067B  3402               	retlw	2
   951  067C  3401               	retlw	1
   952  067D  3401               	retlw	1
   953  067E  3401               	retlw	1
   954  067F  3401               	retlw	1
   955  0680  3401               	retlw	1
   956  0681  3401               	retlw	1
   957  0682  3400               	retlw	0
   958  0683  3400               	retlw	0
   959  0684  3400               	retlw	0
   960  0685  3400               	retlw	0
   961  0686  3400               	retlw	0
   962  0687  3400               	retlw	0
   963  0688  3400               	retlw	0
   964  0689  3400               	retlw	0
   965  068A  3400               	retlw	0
   966  068B  3400               	retlw	0
   967  068C  3400               	retlw	0
   968  068D  3400               	retlw	0
   969  068E  3400               	retlw	0
   970  068F  3400               	retlw	0
   971  0690  3401               	retlw	1
   972  0691  3401               	retlw	1
   973  0692  3401               	retlw	1
   974  0693  3401               	retlw	1
   975  0694  3401               	retlw	1
   976  0695  3401               	retlw	1
   977  0696  3402               	retlw	2
   978  0697  3402               	retlw	2
   979  0698  3402               	retlw	2
   980  0699  3402               	retlw	2
   981  069A  3403               	retlw	3
   982  069B  3403               	retlw	3
   983  069C  3403               	retlw	3
   984  069D  3404               	retlw	4
   985  069E  3404               	retlw	4
   986  069F  3404               	retlw	4
   987  06A0  3405               	retlw	5
   988  06A1  3405               	retlw	5
   989  06A2  3406               	retlw	6
   990  06A3  3406               	retlw	6
   991  06A4  3406               	retlw	6
   992  06A5  3407               	retlw	7
   993  06A6  3407               	retlw	7
   994  06A7  3408               	retlw	8
   995  06A8  3408               	retlw	8
   996  06A9  3409               	retlw	9
   997  06AA  3409               	retlw	9
   998  06AB  340A               	retlw	10
   999  06AC  340A               	retlw	10
  1000  06AD  340B               	retlw	11
  1001  06AE  340B               	retlw	11
  1002  06AF  340C               	retlw	12
  1003  06B0  340C               	retlw	12
  1004  06B1  340D               	retlw	13
  1005  06B2  340D               	retlw	13
  1006  06B3  340E               	retlw	14
  1007  06B4  340E               	retlw	14
  1008  06B5  340F               	retlw	15
  1009  06B6                     __end_of_sine_table2:	
  1010  06B6                     _PLAYBACK_RATE:	
  1011  06B6  3412               	retlw	18
  1012  06B7  347A               	retlw	122
  1013  06B8  3400               	retlw	0
  1014  06B9  3400               	retlw	0
  1015  06BA                     __end_of_PLAYBACK_RATE:	
  1016  06BA                     _BAUD_RATE:	
  1017  06BA  34B0               	retlw	176
  1018  06BB  3404               	retlw	4
  1019  06BC                     __end_of_BAUD_RATE:	
  1020  06BC                     _TABLE_SIZE:	
  1021  06BC  34B6               	retlw	182
  1022  06BD  3400               	retlw	0
  1023  06BE                     __end_of_TABLE_SIZE:	
  1024  000B                     _INTCON	set	11
  1025  0011                     _PIR1	set	17
  1026  000C                     _PORTAbits	set	12
  1027  000E                     _PORTCbits	set	14
  1028  0015                     _TMR0	set	21
  1029  0017                     _TMR1H	set	23
  1030  0016                     _TMR1L	set	22
  1031  008E                     _ADIF	set	142
  1032  008A                     _CCP1IF	set	138
  1033  00C4                     _T1CKPS0	set	196
  1034  00C5                     _T1CKPS1	set	197
  1035  005D                     _TMR0IE	set	93
  1036  005A                     _TMR0IF	set	90
  1037  00C6                     _TMR1CS0	set	198
  1038  00C7                     _TMR1CS1	set	199
  1039  00CF                     _TMR1GE	set	207
  1040  0088                     _TMR1IF	set	136
  1041  00C0                     _TMR1ON	set	192
  1042  009D                     _ADCON0	set	157
  1043  009C                     _ADRESH	set	156
  1044  009B                     _ADRESL	set	155
  1045  0099                     _OSCCON	set	153
  1046  009A                     _OSCSTAT	set	154
  1047  0098                     _OSCTUNE	set	152
  1048  008C                     _TRISA	set	140
  1049  008E                     _TRISC	set	142
  1050  04F4                     _ADCS0	set	1268
  1051  04F5                     _ADCS1	set	1269
  1052  04F6                     _ADCS2	set	1270
  1053  04F7                     _ADFM	set	1271
  1054  048E                     _ADIE	set	1166
  1055  04F2                     _ADNREF	set	1266
  1056  04E8                     _ADON	set	1256
  1057  04F0                     _ADPREF0	set	1264
  1058  04F1                     _ADPREF1	set	1265
  1059  048A                     _CCP1IE	set	1162
  1060  04AB                     _PSA	set	1195
  1061  04AD                     _TMR0CS	set	1197
  1062  0488                     _TMR1IE	set	1160
  1063  0119                     _DACCON1	set	281
  1064  08C7                     _DACEN	set	2247
  1065  08C0                     _DACNSS	set	2240
  1066  08C5                     _DACOE	set	2245
  1067  08C2                     _DACPSS0	set	2242
  1068  08C3                     _DACPSS1	set	2243
  1069  0C61                     _ANSA1	set	3169
  1070  0292                     _CCPR1H	set	658
  1071  0291                     _CCPR1L	set	657
  1072  1499                     _CCP1M1	set	5273
  1073  149A                     _CCP1M2	set	5274
  1074  149B                     _CCP1M3	set	5275
  1075  06BE                     __stringdata:	
  1076  06BE                     STR_1:	
  1077  06BE  3448               	retlw	72	;'H'
  1078  06BF  3445               	retlw	69	;'E'
  1079  06C0  344C               	retlw	76	;'L'
  1080  06C1  344C               	retlw	76	;'L'
  1081  06C2  344F               	retlw	79	;'O'
  1082  06C3  3400               	retlw	0
  1083  06C4                     __end_of__stringdata:	
  1084                           
  1085                           ; #config settings
  1086  0000                     
  1087                           	psect	cinit
  1088  003C                     start_initialization:	
  1089  003C                     __initialization:	
  1090                           
  1091                           ; Clear objects allocated to COMMON
  1092  003C  01F9               	clrf	__pbssCOMMON& (0+127)
  1093  003D  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1094  003E  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1095  003F  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1096  0040  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1097                           
  1098                           ; Clear objects allocated to BANK1
  1099  0041  30A0               	movlw	low __pbssBANK1
  1100  0042  0084               	movwf	4
  1101  0043  3000               	movlw	high __pbssBANK1
  1102  0044  0085               	movwf	5
  1103  0045  3034               	movlw	52
  1104  0046  3185  25F8  3180   	fcall	clear_ram0
  1105                           
  1106                           ; Clear objects allocated to BANK2
  1107  0049  3020               	movlw	low __pbssBANK2
  1108  004A  0084               	movwf	4
  1109  004B  3001               	movlw	high __pbssBANK2
  1110  004C  0085               	movwf	5
  1111  004D  3016               	movlw	22
  1112  004E  3185  25F8  3180   	fcall	clear_ram0
  1113                           
  1114                           ; Clear objects allocated to BANK3
  1115  0051  30A0               	movlw	low __pbssBANK3
  1116  0052  0084               	movwf	4
  1117  0053  3001               	movlw	high __pbssBANK3
  1118  0054  0085               	movwf	5
  1119  0055  3040               	movlw	64
  1120  0056  3185  25F8  3180   	fcall	clear_ram0
  1121                           
  1122                           ; Initialize objects allocated to BANK2
  1123  0059  306B               	movlw	low __pidataBANK2
  1124  005A  0084               	movwf	4
  1125  005B  3097               	movlw	(high __pidataBANK2)| (0+128)
  1126  005C  0085               	movwf	5
  1127  005D  3036               	movlw	low __pdataBANK2
  1128  005E  0086               	movwf	6
  1129  005F  3001               	movlw	high __pdataBANK2
  1130  0060  0087               	movwf	7
  1131  0061  3010               	movlw	16
  1132  0062  3196  26FC         	fcall	init_ram
  1133  0064                     end_of_initialization:	
  1134                           ;End of C runtime variable initialization code
  1135                           
  1136  0064                     __end_of__initialization:	
  1137  0064  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1138  0065  0020               	movlb	0
  1139  0066  318C  2CCC         	ljmp	_main	;jump to C main() function
  1140                           
  1141                           	psect	bssCOMMON
  1142  0079                     __pbssCOMMON:	
  1143  0079                     _modem_packet_size:	
  1144  0079                     	ds	4
  1145  007D                     _phase:	
  1146  007D                     	ds	1
  1147                           
  1148                           	psect	bssBANK1
  1149  00A0                     __pbssBANK1:	
  1150  00A0                     _adf_config:	
  1151  00A0                     	ds	39
  1152  00C7                     _crc:	
  1153  00C7                     	ds	2
  1154  00C9                     Sinus_Generator@tone_index:	
  1155  00C9                     	ds	1
  1156  00CA                     _MODEM_TRANSMITTING:	
  1157  00CA                     	ds	1
  1158  00CB                     _PTT_OFF:	
  1159  00CB                     	ds	1
  1160  00CC                     _SAMPLES_PER_BAUD:	
  1161  00CC                     	ds	1
  1162  00CD                     _adc_sonuc_high:	
  1163  00CD                     	ds	1
  1164  00CE                     _adc_sonuc_low:	
  1165  00CE                     	ds	1
  1166  00CF                     _current_byte:	
  1167  00CF                     	ds	1
  1168  00D0                     _current_sample_in_baud:	
  1169  00D0                     	ds	1
  1170  00D1                     _phase_delta:	
  1171  00D1                     	ds	1
  1172  00D2                     _test:	
  1173  00D2                     	ds	1
  1174  00D3                     _test2:	
  1175  00D3                     	ds	1
  1176                           
  1177                           	psect	bssBANK2
  1178  0120                     __pbssBANK2:	
  1179  0120                     _PHASE_DELTA_1200:	
  1180  0120                     	ds	4
  1181  0124                     _PHASE_DELTA_2200:	
  1182  0124                     	ds	4
  1183  0128                     _packet_pos:	
  1184  0128                     	ds	4
  1185  012C                     _powerlevel:	
  1186  012C                     	ds	4
  1187  0130                     _Systick_Counter:	
  1188  0130                     	ds	2
  1189  0132                     _dac_flag:	
  1190  0132                     	ds	2
  1191  0134                     _ones_in_a_row:	
  1192  0134                     	ds	2
  1193                           
  1194                           	psect	dataBANK2
  1195  0136                     __pdataBANK2:	
  1196  0136                     main@F3176:	
  1197  0136                     	ds	16
  1198                           
  1199                           	psect	bssBANK3
  1200  01A0                     __pbssBANK3:	
  1201  01A0                     _modem_packet:	
  1202  01A0                     	ds	64
  1203                           
  1204                           	psect	clrtext
  1205  05F8                     clear_ram0:	
  1206                           ;	Called with FSR0 containing the base address, and
  1207                           ;	WREG with the size to clear
  1208                           
  1209  05F8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1210  05F9                     clrloop0:	
  1211  05F9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1212  05FA  3101               	addfsr 0,1
  1213  05FB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1214  05FC  2DF9               	goto	clrloop0	;have we reached the end yet?
  1215  05FD  3400               	retlw	0	;all done for this memory range, return
  1216                           
  1217                           	psect	inittext
  1218  16FC                     init_ram:	
  1219  16FC  00FE               	movwf	126
  1220  16FD                     initloop:	
  1221  16FD  0012               	moviw fsr0++
  1222  16FE  001E               	movwi fsr1++
  1223  16FF  0BFE               	decfsz	126,f
  1224  1700  2EFD               	goto	initloop
  1225  1701  3400               	retlw	0
  1226                           
  1227                           	psect	cstackBANK1
  1228  00D4                     __pcstackBANK1:	
  1229  00D4                     Adf_Write_Register_Three@reg_ptr:	
  1230                           
  1231                           ; 4 bytes @ 0x0
  1232  00D4                     	ds	4
  1233  00D8                     Adf_Write_Register_Three@reg:	
  1234                           
  1235                           ; 4 bytes @ 0x4
  1236  00D8                     	ds	4
  1237  00DC                     Adf_Lock@adj:	
  1238                           
  1239                           ; 2 bytes @ 0x8
  1240  00DC                     	ds	2
  1241  00DE                     Adf_Lock@bias:	
  1242                           
  1243                           ; 2 bytes @ 0xA
  1244  00DE                     	ds	2
  1245  00E0                     main@beacon_address:	
  1246                           
  1247                           ; 16 bytes @ 0xC
  1248  00E0                     	ds	16
  1249                           
  1250                           	psect	cstackCOMMON
  1251  0070                     __pcstackCOMMON:	
  1252  0070                     ?_Sinus_Generator:	
  1253  0070                     ?_Timer1_Start:	
  1254                           ; 0 bytes @ 0x0
  1255                           
  1256  0070                     ?_Dac0_Start_Hold:	
  1257                           ; 0 bytes @ 0x0
  1258                           
  1259  0070                     ?_Adc1_Start:	
  1260                           ; 0 bytes @ 0x0
  1261                           
  1262  0070                     ?_Ax25_Send_Footer:	
  1263                           ; 0 bytes @ 0x0
  1264                           
  1265  0070                     ?_Modem_Setup:	
  1266                           ; 0 bytes @ 0x0
  1267                           
  1268  0070                     ?_Ptt_Off:	
  1269                           ; 0 bytes @ 0x0
  1270                           
  1271  0070                     ?_Modem_Flush_Frame:	
  1272                           ; 0 bytes @ 0x0
  1273                           
  1274  0070                     ?_Adf_Reset_Register_Zero:	
  1275                           ; 0 bytes @ 0x0
  1276                           
  1277  0070                     ?_Adf_Reset_Register_One:	
  1278                           ; 0 bytes @ 0x0
  1279                           
  1280  0070                     ?_Adf_Reset_Register_Two:	
  1281                           ; 0 bytes @ 0x0
  1282                           
  1283  0070                     ?_Adf_Reset_Register_Three:	
  1284                           ; 0 bytes @ 0x0
  1285                           
  1286  0070                     ?_Adf_Reset:	
  1287                           ; 0 bytes @ 0x0
  1288                           
  1289  0070                     ?_Adf_Write_Register_Zero:	
  1290                           ; 0 bytes @ 0x0
  1291                           
  1292  0070                     ?_Adf_Write_Register_One:	
  1293                           ; 0 bytes @ 0x0
  1294                           
  1295  0070                     ?_Adf_Write_Register_Two:	
  1296                           ; 0 bytes @ 0x0
  1297                           
  1298  0070                     ?_Adf_Write_Register_Three:	
  1299                           ; 0 bytes @ 0x0
  1300                           
  1301  0070                     ?_global_interrupt:	
  1302                           ; 0 bytes @ 0x0
  1303                           
  1304  0070                     ?_System_Start:	
  1305                           ; 0 bytes @ 0x0
  1306                           
  1307  0070                     ??_Send_Vcxo_Signal:	
  1308                           ; 0 bytes @ 0x0
  1309                           
  1310  0070                     ?_Timer0_Start:	
  1311                           ; 0 bytes @ 0x0
  1312                           
  1313  0070                     ?_Timer0_Stop:	
  1314                           ; 0 bytes @ 0x0
  1315                           
  1316  0070                     ??_Timer0_Stop:	
  1317                           ; 0 bytes @ 0x0
  1318                           
  1319  0070                     ?_Adf_Reset_Config:	
  1320                           ; 0 bytes @ 0x0
  1321                           
  1322  0070                     ?_Adf_Write_Config:	
  1323                           ; 0 bytes @ 0x0
  1324                           
  1325  0070                     ?_Radio_Setup:	
  1326                           ; 0 bytes @ 0x0
  1327                           
  1328  0070                     ?_Modem_Init:	
  1329                           ; 0 bytes @ 0x0
  1330                           
  1331  0070                     ?_Update_Crc:	
  1332                           ; 0 bytes @ 0x0
  1333                           
  1334  0070                     ?_Send_Byte:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  0070                     ?_Ax25_Send_Byte:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  0070                     ?_Ax25_Send_Sync:	
  1341                           ; 0 bytes @ 0x0
  1342                           
  1343  0070                     ?_Ax25_Send_Flag:	
  1344                           ; 0 bytes @ 0x0
  1345                           
  1346  0070                     ?_Gpio_Config:	
  1347                           ; 0 bytes @ 0x0
  1348                           
  1349  0070                     ?_Ptt_On:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_Spi_Byte_Send:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_Adf_Locked:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_Read_Adf7012_Muxout:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_Send_Vcxo_Signal:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_main:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_Adf_Lock:	
  1368                           ; 2 bytes @ 0x0
  1369                           
  1370  0070                     Send_Vcxo_Signal@value:	
  1371                           ; 2 bytes @ 0x0
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x0
  1375  0070                     	ds	1
  1376  0071                     ??_Sinus_Generator:	
  1377                           
  1378                           ; 0 bytes @ 0x1
  1379  0071                     	ds	5
  1380  0076                     Sinus_Generator@Audio_Signal:	
  1381                           
  1382                           ; 1 bytes @ 0x6
  1383  0076                     	ds	1
  1384  0077                     ??_global_interrupt:	
  1385                           
  1386                           ; 0 bytes @ 0x7
  1387  0077                     	ds	2
  1388                           
  1389                           	psect	cstackBANK0
  1390  0020                     __pcstackBANK0:	
  1391  0020                     ??_Gpio_Config:	
  1392  0020                     ??_Timer1_Start:	
  1393                           ; 0 bytes @ 0x0
  1394                           
  1395  0020                     ??_Dac0_Start_Hold:	
  1396                           ; 0 bytes @ 0x0
  1397                           
  1398  0020                     ??_Adc1_Start:	
  1399                           ; 0 bytes @ 0x0
  1400                           
  1401  0020                     ?_Delay_ms:	
  1402                           ; 0 bytes @ 0x0
  1403                           
  1404  0020                     ??_Adf_Reset_Register_Zero:	
  1405                           ; 0 bytes @ 0x0
  1406                           
  1407  0020                     ??_Adf_Reset_Register_One:	
  1408                           ; 0 bytes @ 0x0
  1409                           
  1410  0020                     ??_Adf_Reset_Register_Two:	
  1411                           ; 0 bytes @ 0x0
  1412                           
  1413  0020                     ??_Adf_Reset_Register_Three:	
  1414                           ; 0 bytes @ 0x0
  1415                           
  1416  0020                     ??_System_Start:	
  1417                           ; 0 bytes @ 0x0
  1418                           
  1419  0020                     ??_Timer0_Start:	
  1420                           ; 0 bytes @ 0x0
  1421                           
  1422  0020                     ??_Modem_Init:	
  1423                           ; 0 bytes @ 0x0
  1424                           
  1425  0020                     ??_Update_Crc:	
  1426                           ; 0 bytes @ 0x0
  1427                           
  1428  0020                     ??_Ax25_Send_Sync:	
  1429                           ; 0 bytes @ 0x0
  1430                           
  1431  0020                     ??_Ax25_Send_Flag:	
  1432                           ; 0 bytes @ 0x0
  1433                           
  1434  0020                     ?_memcpy:	
  1435                           ; 0 bytes @ 0x0
  1436                           
  1437  0020                     ?___ftpack:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0020                     ?___aldiv:	
  1441                           ; 3 bytes @ 0x0
  1442                           
  1443  0020                     ?___lldiv:	
  1444                           ; 4 bytes @ 0x0
  1445                           
  1446  0020                     memcpy@s1:	
  1447                           ; 4 bytes @ 0x0
  1448                           
  1449  0020                     Delay_ms@time_to_delay:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452  0020                     ___ftpack@arg:	
  1453                           ; 2 bytes @ 0x0
  1454                           
  1455  0020                     ___aldiv@divisor:	
  1456                           ; 3 bytes @ 0x0
  1457                           
  1458  0020                     ___lldiv@divisor:	
  1459                           ; 4 bytes @ 0x0
  1460                           
  1461                           
  1462                           ; 4 bytes @ 0x0
  1463  0020                     	ds	1
  1464  0021                     memcpy@n:	
  1465                           
  1466                           ; 2 bytes @ 0x1
  1467  0021                     	ds	1
  1468  0022                     ??_Delay_ms:	
  1469  0022                     Update_Crc@input_bit:	
  1470                           ; 0 bytes @ 0x2
  1471                           
  1472                           
  1473                           ; 1 bytes @ 0x2
  1474  0022                     	ds	1
  1475  0023                     ??_memcpy:	
  1476  0023                     ??_Send_Byte:	
  1477                           ; 0 bytes @ 0x3
  1478                           
  1479  0023                     ___ftpack@exp:	
  1480                           ; 0 bytes @ 0x3
  1481                           
  1482                           
  1483                           ; 1 bytes @ 0x3
  1484  0023                     	ds	1
  1485  0024                     ___ftpack@sign:	
  1486  0024                     memcpy@d:	
  1487                           ; 1 bytes @ 0x4
  1488                           
  1489  0024                     Delay_ms@i:	
  1490                           ; 1 bytes @ 0x4
  1491                           
  1492  0024                     ___aldiv@dividend:	
  1493                           ; 2 bytes @ 0x4
  1494                           
  1495  0024                     ___lldiv@dividend:	
  1496                           ; 4 bytes @ 0x4
  1497                           
  1498                           
  1499                           ; 4 bytes @ 0x4
  1500  0024                     	ds	1
  1501  0025                     ??___ftpack:	
  1502  0025                     memcpy@s:	
  1503                           ; 0 bytes @ 0x5
  1504                           
  1505                           
  1506                           ; 1 bytes @ 0x5
  1507  0025                     	ds	1
  1508  0026                     ??_Spi_Byte_Send:	
  1509  0026                     ??_Adf_Reset:	
  1510                           ; 0 bytes @ 0x6
  1511                           
  1512  0026                     ??_Adf_Locked:	
  1513                           ; 0 bytes @ 0x6
  1514                           
  1515  0026                     ??_Read_Adf7012_Muxout:	
  1516                           ; 0 bytes @ 0x6
  1517                           
  1518  0026                     ??_Adf_Reset_Config:	
  1519                           ; 0 bytes @ 0x6
  1520                           
  1521  0026                     Ax25_Send_Sync@byte:	
  1522                           ; 0 bytes @ 0x6
  1523                           
  1524  0026                     Ax25_Send_Flag@byte:	
  1525                           ; 1 bytes @ 0x6
  1526                           
  1527  0026                     memcpy@d1:	
  1528                           ; 1 bytes @ 0x6
  1529                           
  1530                           
  1531                           ; 1 bytes @ 0x6
  1532  0026                     	ds	1
  1533  0027                     ?_Reverse_Array:	
  1534  0027                     Reverse_Array@length:	
  1535                           ; 1 bytes @ 0x7
  1536                           
  1537  0027                     Spi_Byte_Send@data:	
  1538                           ; 1 bytes @ 0x7
  1539                           
  1540  0027                     Ax25_Send_Sync@i:	
  1541                           ; 1 bytes @ 0x7
  1542                           
  1543  0027                     Ax25_Send_Flag@i:	
  1544                           ; 2 bytes @ 0x7
  1545                           
  1546                           
  1547                           ; 2 bytes @ 0x7
  1548  0027                     	ds	1
  1549  0028                     ??_Reverse_Array:	
  1550  0028                     ??___aldiv:	
  1551                           ; 0 bytes @ 0x8
  1552                           
  1553  0028                     ??___lldiv:	
  1554                           ; 0 bytes @ 0x8
  1555                           
  1556  0028                     ?___ftmul:	
  1557                           ; 0 bytes @ 0x8
  1558                           
  1559  0028                     ?___lltoft:	
  1560                           ; 3 bytes @ 0x8
  1561                           
  1562  0028                     Spi_Byte_Send@data_to_send:	
  1563                           ; 3 bytes @ 0x8
  1564                           
  1565  0028                     ___ftmul@f1:	
  1566                           ; 1 bytes @ 0x8
  1567                           
  1568  0028                     ___lltoft@c:	
  1569                           ; 3 bytes @ 0x8
  1570                           
  1571                           
  1572                           ; 4 bytes @ 0x8
  1573  0028                     	ds	1
  1574  0029                     Spi_Byte_Send@i:	
  1575  0029                     Send_Byte@byte:	
  1576                           ; 1 bytes @ 0x9
  1577                           
  1578  0029                     ___aldiv@counter:	
  1579                           ; 1 bytes @ 0x9
  1580                           
  1581  0029                     ___lldiv@quotient:	
  1582                           ; 1 bytes @ 0x9
  1583                           
  1584                           
  1585                           ; 4 bytes @ 0x9
  1586  0029                     	ds	1
  1587  002A                     ?_Write_Adf7012_Reg:	
  1588  002A                     Write_Adf7012_Reg@size_of_reg:	
  1589                           ; 1 bytes @ 0xA
  1590                           
  1591  002A                     ___aldiv@sign:	
  1592                           ; 1 bytes @ 0xA
  1593                           
  1594  002A                     Send_Byte@i:	
  1595                           ; 1 bytes @ 0xA
  1596                           
  1597                           
  1598                           ; 2 bytes @ 0xA
  1599  002A                     	ds	1
  1600  002B                     ??_Write_Adf7012_Reg:	
  1601  002B                     ___ftmul@f2:	
  1602                           ; 0 bytes @ 0xB
  1603                           
  1604  002B                     ___aldiv@quotient:	
  1605                           ; 3 bytes @ 0xB
  1606                           
  1607                           
  1608                           ; 4 bytes @ 0xB
  1609  002B                     	ds	1
  1610  002C                     ?_Ax25_Send_Header:	
  1611  002C                     ??_Ax25_Send_Footer:	
  1612                           ; 0 bytes @ 0xC
  1613                           
  1614  002C                     ??_Ax25_Send_Byte:	
  1615                           ; 0 bytes @ 0xC
  1616                           
  1617  002C                     ??___lltoft:	
  1618                           ; 0 bytes @ 0xC
  1619                           
  1620  002C                     Write_Adf7012_Reg@reg_value:	
  1621                           ; 0 bytes @ 0xC
  1622                           
  1623  002C                     Ax25_Send_Byte@byte:	
  1624                           ; 1 bytes @ 0xC
  1625                           
  1626  002C                     Ax25_Send_Header@num_addresses:	
  1627                           ; 1 bytes @ 0xC
  1628                           
  1629  002C                     Ax25_Send_Footer@final_crc:	
  1630                           ; 2 bytes @ 0xC
  1631                           
  1632                           
  1633                           ; 2 bytes @ 0xC
  1634  002C                     	ds	1
  1635  002D                     ?_Ax25_Send_String:	
  1636  002D                     Write_Adf7012_Reg@i:	
  1637                           ; 0 bytes @ 0xD
  1638                           
  1639  002D                     ___lldiv@counter:	
  1640                           ; 1 bytes @ 0xD
  1641                           
  1642  002D                     ___lltoft@exp:	
  1643                           ; 1 bytes @ 0xD
  1644                           
  1645  002D                     Ax25_Send_String@string:	
  1646                           ; 1 bytes @ 0xD
  1647                           
  1648  002D                     Reverse_Array@buffer_array:	
  1649                           ; 2 bytes @ 0xD
  1650                           
  1651                           
  1652                           ; 4 bytes @ 0xD
  1653  002D                     	ds	1
  1654  002E                     ??_Ax25_Send_Header:	
  1655  002E                     ??___ftmul:	
  1656                           ; 0 bytes @ 0xE
  1657                           
  1658  002E                     ?___ftdiv:	
  1659                           ; 0 bytes @ 0xE
  1660                           
  1661  002E                     ?___ftneg:	
  1662                           ; 3 bytes @ 0xE
  1663                           
  1664  002E                     ___ftdiv@f2:	
  1665                           ; 3 bytes @ 0xE
  1666                           
  1667  002E                     ___ftneg@f1:	
  1668                           ; 3 bytes @ 0xE
  1669                           
  1670                           
  1671                           ; 3 bytes @ 0xE
  1672  002E                     	ds	1
  1673  002F                     ??_Ax25_Send_String:	
  1674  002F                     Ax25_Send_String@i:	
  1675                           ; 0 bytes @ 0xF
  1676                           
  1677                           
  1678                           ; 2 bytes @ 0xF
  1679  002F                     	ds	2
  1680  0031                     ??___ftneg:	
  1681  0031                     ?___ftadd:	
  1682                           ; 0 bytes @ 0x11
  1683                           
  1684  0031                     Reverse_Array@input:	
  1685                           ; 3 bytes @ 0x11
  1686                           
  1687  0031                     Ax25_Send_Header@j:	
  1688                           ; 1 bytes @ 0x11
  1689                           
  1690  0031                     ___ftadd@f1:	
  1691                           ; 2 bytes @ 0x11
  1692                           
  1693  0031                     ___ftdiv@f1:	
  1694                           ; 3 bytes @ 0x11
  1695                           
  1696                           
  1697                           ; 3 bytes @ 0x11
  1698  0031                     	ds	1
  1699  0032                     Reverse_Array@i:	
  1700  0032                     ___ftmul@exp:	
  1701                           ; 1 bytes @ 0x12
  1702                           
  1703                           
  1704                           ; 1 bytes @ 0x12
  1705  0032                     	ds	1
  1706  0033                     ??_Adf_Write_Register_Zero:	
  1707  0033                     ??_Adf_Write_Register_One:	
  1708                           ; 0 bytes @ 0x13
  1709                           
  1710  0033                     ??_Adf_Write_Register_Two:	
  1711                           ; 0 bytes @ 0x13
  1712                           
  1713  0033                     ??_Adf_Write_Register_Three:	
  1714                           ; 0 bytes @ 0x13
  1715                           
  1716  0033                     Ax25_Send_Header@addresses:	
  1717                           ; 0 bytes @ 0x13
  1718                           
  1719  0033                     ___ftmul@f3_as_product:	
  1720                           ; 1 bytes @ 0x13
  1721                           
  1722                           
  1723                           ; 3 bytes @ 0x13
  1724  0033                     	ds	1
  1725  0034                     ??___ftdiv:	
  1726  0034                     Ax25_Send_Header@i:	
  1727                           ; 0 bytes @ 0x14
  1728                           
  1729  0034                     ___ftadd@f2:	
  1730                           ; 2 bytes @ 0x14
  1731                           
  1732                           
  1733                           ; 3 bytes @ 0x14
  1734  0034                     	ds	2
  1735  0036                     ___ftmul@cntr:	
  1736                           
  1737                           ; 1 bytes @ 0x16
  1738  0036                     	ds	1
  1739  0037                     ??___ftadd:	
  1740  0037                     ___ftmul@sign:	
  1741                           ; 0 bytes @ 0x17
  1742                           
  1743                           
  1744                           ; 1 bytes @ 0x17
  1745  0037                     	ds	1
  1746  0038                     ?___fttol:	
  1747  0038                     ___ftdiv@cntr:	
  1748                           ; 4 bytes @ 0x18
  1749                           
  1750  0038                     ___fttol@f1:	
  1751                           ; 1 bytes @ 0x18
  1752                           
  1753                           
  1754                           ; 3 bytes @ 0x18
  1755  0038                     	ds	1
  1756  0039                     ___ftdiv@f3:	
  1757                           
  1758                           ; 3 bytes @ 0x19
  1759  0039                     	ds	2
  1760  003B                     ___ftadd@sign:	
  1761                           
  1762                           ; 1 bytes @ 0x1B
  1763  003B                     	ds	1
  1764  003C                     ??___fttol:	
  1765  003C                     ___ftadd@exp2:	
  1766                           ; 0 bytes @ 0x1C
  1767                           
  1768  003C                     ___ftdiv@exp:	
  1769                           ; 1 bytes @ 0x1C
  1770                           
  1771                           
  1772                           ; 1 bytes @ 0x1C
  1773  003C                     	ds	1
  1774  003D                     ___ftadd@exp1:	
  1775  003D                     ___ftdiv@sign:	
  1776                           ; 1 bytes @ 0x1D
  1777                           
  1778                           
  1779                           ; 1 bytes @ 0x1D
  1780  003D                     	ds	2
  1781  003F                     Adf_Write_Register_One@reg:	
  1782                           
  1783                           ; 4 bytes @ 0x1F
  1784  003F                     	ds	1
  1785  0040                     ___fttol@sign1:	
  1786                           
  1787                           ; 1 bytes @ 0x20
  1788  0040                     	ds	1
  1789  0041                     ___fttol@lval:	
  1790                           
  1791                           ; 4 bytes @ 0x21
  1792  0041                     	ds	2
  1793  0043                     Adf_Write_Register_One@reg_ptr:	
  1794                           
  1795                           ; 3 bytes @ 0x23
  1796  0043                     	ds	2
  1797  0045                     ___fttol@exp1:	
  1798                           
  1799                           ; 1 bytes @ 0x25
  1800  0045                     	ds	1
  1801  0046                     ?_Set_Freq:	
  1802  0046                     Set_Freq@freq:	
  1803                           ; 0 bytes @ 0x26
  1804                           
  1805                           
  1806                           ; 4 bytes @ 0x26
  1807  0046                     	ds	4
  1808  004A                     ??_Set_Freq:	
  1809                           
  1810                           ; 0 bytes @ 0x2A
  1811  004A                     	ds	1
  1812  004B                     Adf_Write_Register_Two@reg_ptr:	
  1813                           
  1814                           ; 4 bytes @ 0x2B
  1815  004B                     	ds	3
  1816  004E                     Set_Freq@m:	
  1817                           
  1818                           ; 4 bytes @ 0x2E
  1819  004E                     	ds	1
  1820  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1821  004F                     Adf_Write_Register_Two@reg:	
  1822                           ; 4 bytes @ 0x2F
  1823                           
  1824                           
  1825                           ; 4 bytes @ 0x2F
  1826  004F                     	ds	3
  1827  0052                     Set_Freq@ratio:	
  1828                           
  1829                           ; 3 bytes @ 0x32
  1830  0052                     	ds	1
  1831  0053                     Adf_Write_Register_Zero@reg:	
  1832                           
  1833                           ; 4 bytes @ 0x33
  1834  0053                     	ds	2
  1835  0055                     Set_Freq@rest:	
  1836                           
  1837                           ; 3 bytes @ 0x35
  1838  0055                     	ds	3
  1839  0058                     Set_Freq@f_pfd:	
  1840                           
  1841                           ; 4 bytes @ 0x38
  1842  0058                     	ds	4
  1843  005C                     Set_Freq@n:	
  1844                           
  1845                           ; 4 bytes @ 0x3C
  1846  005C                     	ds	15
  1847  006B                     ??_Modem_Setup:	
  1848  006B                     ??_Ptt_Off:	
  1849                           ; 0 bytes @ 0x4B
  1850                           
  1851  006B                     ??_Adf_Write_Config:	
  1852                           ; 0 bytes @ 0x4B
  1853                           
  1854  006B                     ??_Adf_Lock:	
  1855                           ; 0 bytes @ 0x4B
  1856                           
  1857  006B                     ??_Radio_Setup:	
  1858                           ; 0 bytes @ 0x4B
  1859                           
  1860                           
  1861                           ; 0 bytes @ 0x4B
  1862  006B                     	ds	2
  1863  006D                     ??_Ptt_On:	
  1864                           
  1865                           ; 0 bytes @ 0x4D
  1866  006D                     	ds	1
  1867  006E                     ??_Modem_Flush_Frame:	
  1868                           
  1869                           ; 0 bytes @ 0x4E
  1870  006E                     	ds	1
  1871  006F                     ??_main:	
  1872                           
  1873                           ; 0 bytes @ 0x4F
  1874  006F                     	ds	1
  1875                           
  1876                           	psect	maintext
  1877  0CCC                     __pmaintext:	
  1878 ;;
  1879 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1880 ;;
  1881 ;; *************** function _main *****************
  1882 ;; Defined at:
  1883 ;;		line 165 in file "main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;		None
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1888 ;;  adc_sonuc       2    0        unsigned int 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  2  131[COMMON] int 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 17F/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;Total ram usage:       17 bytes
  1903 ;; Hardware stack levels required when called:   12
  1904 ;; This function calls:
  1905 ;;		_Adc1_Start
  1906 ;;		_Ax25_Send_Footer
  1907 ;;		_Ax25_Send_Header
  1908 ;;		_Ax25_Send_String
  1909 ;;		_Dac0_Start_Hold
  1910 ;;		_Delay_ms
  1911 ;;		_Gpio_Config
  1912 ;;		_Modem_Flush_Frame
  1913 ;;		_Modem_Setup
  1914 ;;		_Ptt_Off
  1915 ;;		_Ptt_On
  1916 ;;		_System_Start
  1917 ;;		_Timer1_Start
  1918 ;; This function is called by:
  1919 ;;		Startup code after reset
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function _main
  1925  0CCC                     _main:	
  1926                           
  1927                           ;main.c: 166: unsigned int adc_sonuc;
  1928                           ;main.c: 167: System_Start();
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1932  0CCC  3189  218A  318C   	fcall	_System_Start
  1933  0CCF                     l132:	
  1934                           ;main.c: 168: while (!(OSCSTAT & (0x01))){}
  1935                           
  1936  0CCF  0021               	movlb	1	; select bank1
  1937  0CD0  1C1A               	btfss	26,0	;volatile
  1938  0CD1  2CCF               	goto	l132
  1939                           
  1940                           ;main.c: 171: Gpio_Config();
  1941  0CD2  3197  275B  318C   	fcall	_Gpio_Config
  1942                           
  1943                           ;main.c: 173: Timer1_Start();
  1944  0CD5  3197  274C  318C   	fcall	_Timer1_Start
  1945                           
  1946                           ;main.c: 175: Dac0_Start_Hold();
  1947  0CD8  3196  26E5  318C   	fcall	_Dac0_Start_Hold
  1948                           
  1949                           ;main.c: 177: Adc1_Start();
  1950  0CDB  3196  26EA  318C   	fcall	_Adc1_Start
  1951                           
  1952                           ;main.c: 179: PORTAbits.RA5 = 0;;
  1953  0CDE  0020               	movlb	0	; select bank0
  1954  0CDF  128C               	bcf	12,5	;volatile
  1955                           
  1956                           ;main.c: 180: Delay_ms(10);
  1957  0CE0  300A               	movlw	10
  1958  0CE1  00A0               	movwf	Delay_ms@time_to_delay
  1959  0CE2  3000               	movlw	0
  1960  0CE3  00A1               	movwf	Delay_ms@time_to_delay+1
  1961  0CE4  3188  207E  318C   	fcall	_Delay_ms
  1962                           
  1963                           ;main.c: 181: PORTAbits.RA4 = 1;;
  1964  0CE7  0020               	movlb	0	; select bank0
  1965  0CE8  160C               	bsf	12,4	;volatile
  1966                           
  1967                           ;main.c: 182: Delay_ms(10);
  1968  0CE9  300A               	movlw	10
  1969  0CEA  00A0               	movwf	Delay_ms@time_to_delay
  1970  0CEB  3000               	movlw	0
  1971  0CEC  00A1               	movwf	Delay_ms@time_to_delay+1
  1972  0CED  3188  207E  318C   	fcall	_Delay_ms
  1973                           
  1974                           ;main.c: 183: PORTAbits.RA5 = 1;;
  1975  0CF0  0020               	movlb	0	; select bank0
  1976  0CF1  168C               	bsf	12,5	;volatile
  1977                           
  1978                           ;main.c: 184: Delay_ms(10);
  1979  0CF2  300A               	movlw	10
  1980  0CF3  00A0               	movwf	Delay_ms@time_to_delay
  1981  0CF4  3000               	movlw	0
  1982  0CF5  00A1               	movwf	Delay_ms@time_to_delay+1
  1983  0CF6  3188  207E  318C   	fcall	_Delay_ms
  1984                           
  1985                           ;main.c: 186: Delay_ms(200);
  1986  0CF9  30C8               	movlw	200
  1987  0CFA  0020               	movlb	0	; select bank0
  1988  0CFB  00A0               	movwf	Delay_ms@time_to_delay
  1989  0CFC  3000               	movlw	0
  1990  0CFD  00A1               	movwf	Delay_ms@time_to_delay+1
  1991  0CFE  3188  207E  318C   	fcall	_Delay_ms
  1992                           
  1993                           ;main.c: 189: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1994  0D01  3036               	movlw	low main@F3176
  1995  0D02  0086               	movwf	6
  1996  0D03  3001               	movlw	high main@F3176
  1997  0D04  0087               	movwf	7
  1998  0D05  30E0               	movlw	low main@beacon_address
  1999  0D06  0084               	movwf	4
  2000  0D07  3000               	movlw	high main@beacon_address
  2001  0D08  0085               	movwf	5
  2002  0D09  3010               	movlw	16
  2003  0D0A  0020               	movlb	0	; select bank0
  2004  0D0B  00EF               	movwf	??_main
  2005  0D0C                     u3760:	
  2006  0D0C  0016               	moviw fsr1++
  2007  0D0D  001A               	movwi fsr0++
  2008  0D0E  0BEF               	decfsz	??_main,f
  2009  0D0F  2D0C               	goto	u3760
  2010                           
  2011                           ;main.c: 191: Ax25_Send_Header(beacon_address,2);
  2012  0D10  3002               	movlw	2
  2013  0D11  00AC               	movwf	Ax25_Send_Header@num_addresses
  2014  0D12  3000               	movlw	0
  2015  0D13  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  2016  0D14  30E0               	movlw	main@beacon_address& (0+255)
  2017  0D15  3183  23DC  318C   	fcall	_Ax25_Send_Header
  2018                           
  2019                           ;main.c: 192: Ax25_Send_String("HELLO");
  2020  0D18  30BE               	movlw	low (STR_1| (0+32768))
  2021  0D19  0020               	movlb	0	; select bank0
  2022  0D1A  00AD               	movwf	Ax25_Send_String@string
  2023  0D1B  3086               	movlw	high (STR_1| (0+32768))
  2024  0D1C  00AE               	movwf	Ax25_Send_String@string+1
  2025  0D1D  3197  27C6  318C   	fcall	_Ax25_Send_String
  2026                           
  2027                           ;main.c: 193: Ax25_Send_Footer();
  2028  0D20  3197  27AB  318C   	fcall	_Ax25_Send_Footer
  2029                           
  2030                           ;main.c: 197: Modem_Setup();
  2031  0D23  3196  26F6  318C   	fcall	_Modem_Setup
  2032                           
  2033                           ;main.c: 198: Delay_ms(100);
  2034  0D26  3064               	movlw	100
  2035  0D27  0020               	movlb	0	; select bank0
  2036  0D28  00A0               	movwf	Delay_ms@time_to_delay
  2037  0D29  3000               	movlw	0
  2038  0D2A  00A1               	movwf	Delay_ms@time_to_delay+1
  2039  0D2B  3188  207E  318C   	fcall	_Delay_ms
  2040                           
  2041                           ;main.c: 199: PORTCbits.RC3 = 0; ;
  2042  0D2E  0020               	movlb	0	; select bank0
  2043  0D2F  118E               	bcf	14,3	;volatile
  2044                           
  2045                           ;main.c: 200: Delay_ms(100);
  2046  0D30  3064               	movlw	100
  2047  0D31  00A0               	movwf	Delay_ms@time_to_delay
  2048  0D32  3000               	movlw	0
  2049  0D33  00A1               	movwf	Delay_ms@time_to_delay+1
  2050  0D34  3188  207E  318C   	fcall	_Delay_ms
  2051                           
  2052                           ;main.c: 201: Ptt_On();
  2053  0D37  3189  21F9  318C   	fcall	_Ptt_On
  2054  0D3A                     l2997:	
  2055                           ;main.c: 203: while(1){
  2056                           
  2057                           
  2058                           ;main.c: 205: if(PTT_OFF){
  2059  0D3A  0021               	movlb	1	; select bank1
  2060  0D3B  084B               	movf	_PTT_OFF^(0+128),w
  2061  0D3C  1903               	btfsc	3,2
  2062  0D3D  2D43               	goto	l3003
  2063                           
  2064                           ;main.c: 206: Ptt_Off();
  2065  0D3E  3197  2720  318C   	fcall	_Ptt_Off
  2066                           
  2067                           ;main.c: 207: PTT_OFF = 0;
  2068  0D41  0021               	movlb	1	; select bank1
  2069  0D42  01CB               	clrf	_PTT_OFF^(0+128)
  2070  0D43                     l3003:	
  2071                           
  2072                           ;main.c: 208: }
  2073                           ;main.c: 211: Modem_Flush_Frame();
  2074  0D43  3188  2035  318C   	fcall	_Modem_Flush_Frame
  2075  0D46                     l3005:	
  2076                           ;main.c: 212: while(MODEM_TRANSMITTING);
  2077                           
  2078  0D46  0021               	movlb	1	; select bank1
  2079  0D47  08CA               	movf	_MODEM_TRANSMITTING^(0+128),f
  2080  0D48  1D03               	skipz
  2081  0D49  2D46               	goto	l3005
  2082                           
  2083                           ;main.c: 213: Delay_ms(2000);
  2084  0D4A  30D0               	movlw	208
  2085  0D4B  0020               	movlb	0	; select bank0
  2086  0D4C  00A0               	movwf	Delay_ms@time_to_delay
  2087  0D4D  3007               	movlw	7
  2088  0D4E  00A1               	movwf	Delay_ms@time_to_delay+1
  2089  0D4F  3188  207E  318C   	fcall	_Delay_ms
  2090  0D52  2D3A               	goto	l2997
  2091  0D53                     __end_of_main:	
  2092                           ;main.c: 223: }
  2093                           ;main.c: 224: return (0);
  2094                           ;	Return value of _main is never used
  2095                           
  2096                           
  2097                           	psect	text1
  2098  174C                     __ptext1:	
  2099 ;; *************** function _Timer1_Start *****************
  2100 ;; Defined at:
  2101 ;;		line 263 in file "utility.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;		None
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;		None
  2106 ;; Return value:  Size  Location     Type
  2107 ;;		None               void
  2108 ;; Registers used:
  2109 ;;		wreg, status,2
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2119 ;;Total ram usage:        0 bytes
  2120 ;; Hardware stack levels used:    1
  2121 ;; Hardware stack levels required when called:    3
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function _Timer1_Start
  2131  174C                     _Timer1_Start:	
  2132                           
  2133                           ;utility.c: 265: TMR1H = 0x00;
  2134                           
  2135                           ;incstack = 0
  2136                           ; Regs used in _Timer1_Start: [wreg+status,2]
  2137  174C  0020               	movlb	0	; select bank0
  2138  174D  0197               	clrf	23	;volatile
  2139                           
  2140                           ;utility.c: 266: TMR1L = 0x00;
  2141  174E  0196               	clrf	22	;volatile
  2142                           
  2143                           ;utility.c: 268: TMR1IE = 0;
  2144  174F  0021               	movlb	1	; select bank1
  2145  1750  1011               	bcf	17,0	;volatile
  2146                           
  2147                           ;utility.c: 271: CCPR1H = 0x03;
  2148  1751  3003               	movlw	3
  2149  1752  0025               	movlb	5	; select bank5
  2150  1753  0092               	movwf	18	;volatile
  2151                           
  2152                           ;utility.c: 272: CCPR1L = 0x41;
  2153  1754  3041               	movlw	65
  2154  1755  0091               	movwf	17	;volatile
  2155                           
  2156                           ;utility.c: 274: CCP1IF = 0;
  2157  1756  0020               	movlb	0	; select bank0
  2158  1757  1111               	bcf	17,2	;volatile
  2159                           
  2160                           ;utility.c: 276: CCP1IE = 1;
  2161  1758  0021               	movlb	1	; select bank1
  2162  1759  1511               	bsf	17,2	;volatile
  2163  175A  0008               	return
  2164  175B                     __end_of_Timer1_Start:	
  2165                           
  2166                           	psect	text2
  2167  098A                     __ptext2:	
  2168 ;; *************** function _System_Start *****************
  2169 ;; Defined at:
  2170 ;;		line 94 in file "main.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;		None
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;		None               void
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2187 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2188 ;;Total ram usage:        1 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    3
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function _System_Start
  2200  098A                     _System_Start:	
  2201                           
  2202                           ;main.c: 97: OSCCON = 0x00;
  2203                           
  2204                           ;incstack = 0
  2205                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2206  098A  0021               	movlb	1	; select bank1
  2207  098B  0199               	clrf	25	;volatile
  2208                           
  2209                           ;main.c: 98: OSCCON |= 0b11110000;
  2210  098C  30F0               	movlw	240
  2211  098D  0020               	movlb	0	; select bank0
  2212  098E  00A0               	movwf	??_System_Start
  2213  098F  0820               	movf	??_System_Start,w
  2214  0990  0021               	movlb	1	; select bank1
  2215  0991  0499               	iorwf	25,f	;volatile
  2216                           
  2217                           ;main.c: 99: OSCTUNE = 0x00;
  2218  0992  0198               	clrf	24	;volatile
  2219                           
  2220                           ;main.c: 103: TMR0CS = 0;
  2221  0993  1295               	bcf	21,5	;volatile
  2222                           
  2223                           ;main.c: 104: PSA = 1;
  2224  0994  1595               	bsf	21,3	;volatile
  2225                           
  2226                           ;main.c: 109: TMR1ON = 1;
  2227  0995  0020               	movlb	0	; select bank0
  2228  0996  1418               	bsf	24,0	;volatile
  2229                           
  2230                           ;main.c: 110: TMR1GE = 0;
  2231  0997  1399               	bcf	25,7	;volatile
  2232                           
  2233                           ;main.c: 113: TMR1CS1 = 0;
  2234  0998  1398               	bcf	24,7	;volatile
  2235                           
  2236                           ;main.c: 114: TMR1CS0 = 0;
  2237  0999  1318               	bcf	24,6	;volatile
  2238                           
  2239                           ;main.c: 117: T1CKPS1 = 1;
  2240  099A  1698               	bsf	24,5	;volatile
  2241                           
  2242                           ;main.c: 118: T1CKPS0 = 1;
  2243  099B  1618               	bsf	24,4	;volatile
  2244                           
  2245                           ;main.c: 121: CCP1M3 = 1;
  2246  099C  0025               	movlb	5	; select bank5
  2247  099D  1593               	bsf	19,3	;volatile
  2248                           
  2249                           ;main.c: 122: CCP1M2 = 0;
  2250  099E  1113               	bcf	19,2	;volatile
  2251                           
  2252                           ;main.c: 123: CCP1M1 = 1;
  2253  099F  1493               	bsf	19,1	;volatile
  2254                           
  2255                           ;main.c: 124: CCP1M1 = 0;
  2256  09A0  1093               	bcf	19,1	;volatile
  2257                           
  2258                           ;main.c: 129: DACOE = 1;
  2259  09A1  0022               	movlb	2	; select bank2
  2260  09A2  1698               	bsf	24,5	;volatile
  2261                           
  2262                           ;main.c: 130: DACPSS1 = 0;
  2263  09A3  1198               	bcf	24,3	;volatile
  2264                           
  2265                           ;main.c: 131: DACPSS0 = 0;
  2266  09A4  1118               	bcf	24,2	;volatile
  2267                           
  2268                           ;main.c: 132: DACNSS = 0;
  2269  09A5  1018               	bcf	24,0	;volatile
  2270                           
  2271                           ;main.c: 137: ANSA1 = 1;
  2272  09A6  0023               	movlb	3	; select bank3
  2273  09A7  148C               	bsf	12,1	;volatile
  2274                           
  2275                           ;main.c: 138: ADCON0 &= 0b10000011;
  2276  09A8  3083               	movlw	131
  2277  09A9  0020               	movlb	0	; select bank0
  2278  09AA  00A0               	movwf	??_System_Start
  2279  09AB  0820               	movf	??_System_Start,w
  2280  09AC  0021               	movlb	1	; select bank1
  2281  09AD  059D               	andwf	29,f	;volatile
  2282                           
  2283                           ;main.c: 139: ADCON0 |= 0b00000100;
  2284  09AE  151D               	bsf	29,2	;volatile
  2285                           
  2286                           ;main.c: 140: ADNREF = 0;
  2287  09AF  111E               	bcf	30,2	;volatile
  2288                           
  2289                           ;main.c: 141: ADPREF1 = 0;
  2290  09B0  109E               	bcf	30,1	;volatile
  2291                           
  2292                           ;main.c: 142: ADPREF0 = 0;
  2293  09B1  101E               	bcf	30,0	;volatile
  2294                           
  2295                           ;main.c: 143: ADCS2 = 1;
  2296  09B2  171E               	bsf	30,6	;volatile
  2297                           
  2298                           ;main.c: 144: ADCS1 = 1;
  2299  09B3  169E               	bsf	30,5	;volatile
  2300                           
  2301                           ;main.c: 145: ADCS0 = 0;
  2302  09B4  121E               	bcf	30,4	;volatile
  2303                           
  2304                           ;main.c: 146: ADFM = 1;
  2305  09B5  179E               	bsf	30,7	;volatile
  2306                           
  2307                           ;main.c: 151: TMR0IF = 0;
  2308  09B6  110B               	bcf	11,2	;volatile
  2309                           
  2310                           ;main.c: 152: TMR1IF = 0;
  2311  09B7  0020               	movlb	0	; select bank0
  2312  09B8  1011               	bcf	17,0	;volatile
  2313                           
  2314                           ;main.c: 153: CCP1IF = 0;
  2315  09B9  1111               	bcf	17,2	;volatile
  2316                           
  2317                           ;main.c: 154: ADIF = 0;
  2318  09BA  1311               	bcf	17,6	;volatile
  2319                           
  2320                           ;main.c: 158: INTCON |= 0xC0;
  2321  09BB  30C0               	movlw	192
  2322  09BC  00A0               	movwf	??_System_Start
  2323  09BD  0820               	movf	??_System_Start,w
  2324  09BE  048B               	iorwf	11,f	;volatile
  2325  09BF  0008               	return
  2326  09C0                     __end_of_System_Start:	
  2327                           
  2328                           	psect	text3
  2329  1720                     __ptext3:	
  2330 ;; *************** function _Ptt_Off *****************
  2331 ;; Defined at:
  2332 ;;		line 351 in file "adf7012.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;		None
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;		None
  2337 ;; Return value:  Size  Location     Type
  2338 ;;		None               void
  2339 ;; Registers used:
  2340 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2350 ;;Total ram usage:        0 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    9
  2353 ;; This function calls:
  2354 ;;		_Adf_Write_Config
  2355 ;;		_Delay_ms
  2356 ;; This function is called by:
  2357 ;;		_main
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _Ptt_Off
  2363  1720                     _Ptt_Off:	
  2364                           
  2365                           ;adf7012.c: 353: adf_config.r3.pa_enable = 0;
  2366                           
  2367                           ;incstack = 0
  2368                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2369  1720  0021               	movlb	1	; select bank1
  2370  1721  01BA               	clrf	(_adf_config^(0+128)+26)
  2371                           
  2372                           ;adf7012.c: 354: adf_config.r2.power_amplifier_level = 0;
  2373  1722  01B2               	clrf	(_adf_config^(0+128)+18)
  2374                           
  2375                           ;adf7012.c: 355: Adf_Write_Config();
  2376  1723  3197  2714  3197   	fcall	_Adf_Write_Config
  2377                           
  2378                           ;adf7012.c: 356: Delay_ms(10);
  2379  1726  300A               	movlw	10
  2380  1727  0020               	movlb	0	; select bank0
  2381  1728  00A0               	movwf	Delay_ms@time_to_delay
  2382  1729  3000               	movlw	0
  2383  172A  00A1               	movwf	Delay_ms@time_to_delay+1
  2384  172B  3188  207E         	fcall	_Delay_ms
  2385  172D  0008               	return
  2386  172E                     __end_of_Ptt_Off:	
  2387                           
  2388                           	psect	text4
  2389  16F6                     __ptext4:	
  2390 ;; *************** function _Modem_Setup *****************
  2391 ;; Defined at:
  2392 ;;		line 48 in file "audio_tone.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;		None               void
  2399 ;; Registers used:
  2400 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2410 ;;Total ram usage:        0 bytes
  2411 ;; Hardware stack levels used:    1
  2412 ;; Hardware stack levels required when called:   10
  2413 ;; This function calls:
  2414 ;;		_Modem_Init
  2415 ;;		_Radio_Setup
  2416 ;; This function is called by:
  2417 ;;		_main
  2418 ;; This function uses a non-reentrant model
  2419 ;;
  2420                           
  2421                           
  2422                           ;psect for function _Modem_Setup
  2423  16F6                     _Modem_Setup:	
  2424                           
  2425                           ;audio_tone.c: 50: Modem_Init();
  2426                           
  2427                           ;incstack = 0
  2428                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2429  16F6  3197  277B  3196   	fcall	_Modem_Init
  2430                           
  2431                           ;audio_tone.c: 51: Radio_Setup();
  2432  16F9  3197  27E3         	fcall	_Radio_Setup
  2433  16FB  0008               	return
  2434  16FC                     __end_of_Modem_Setup:	
  2435                           
  2436                           	psect	text5
  2437  17E3                     __ptext5:	
  2438 ;; *************** function _Radio_Setup *****************
  2439 ;; Defined at:
  2440 ;;		line 304 in file "adf7012.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;		None
  2445 ;; Return value:  Size  Location     Type
  2446 ;;		None               void
  2447 ;; Registers used:
  2448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2458 ;;Total ram usage:        0 bytes
  2459 ;; Hardware stack levels used:    1
  2460 ;; Hardware stack levels required when called:    9
  2461 ;; This function calls:
  2462 ;;		_Adf_Reset_Config
  2463 ;;		_Adf_Write_Config
  2464 ;;		_Delay_ms
  2465 ;;		_Gpio_Config
  2466 ;;		_Set_Freq
  2467 ;; This function is called by:
  2468 ;;		_Modem_Setup
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           
  2473                           ;psect for function _Radio_Setup
  2474  17E3                     _Radio_Setup:	
  2475                           
  2476                           ;adf7012.c: 307: Gpio_Config();
  2477                           
  2478                           ;incstack = 0
  2479                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2480  17E3  3197  275B  3197   	fcall	_Gpio_Config
  2481                           
  2482                           ;adf7012.c: 310: Adf_Reset_Config();
  2483  17E6  3197  273D  3197   	fcall	_Adf_Reset_Config
  2484                           
  2485                           ;adf7012.c: 311: Set_Freq(144390000UL);
  2486  17E9  3008               	movlw	8
  2487  17EA  0020               	movlb	0	; select bank0
  2488  17EB  00C9               	movwf	Set_Freq@freq+3
  2489  17EC  309B               	movlw	155
  2490  17ED  00C8               	movwf	Set_Freq@freq+2
  2491  17EE  3037               	movlw	55
  2492  17EF  00C7               	movwf	Set_Freq@freq+1
  2493  17F0  3070               	movlw	112
  2494  17F1  00C6               	movwf	Set_Freq@freq
  2495  17F2  3181  21D4  3197   	fcall	_Set_Freq
  2496                           
  2497                           ;adf7012.c: 312: Adf_Write_Config();
  2498  17F5  3197  2714  3197   	fcall	_Adf_Write_Config
  2499                           
  2500                           ;adf7012.c: 314: Delay_ms(10);
  2501  17F8  300A               	movlw	10
  2502  17F9  0020               	movlb	0	; select bank0
  2503  17FA  00A0               	movwf	Delay_ms@time_to_delay
  2504  17FB  3000               	movlw	0
  2505  17FC  00A1               	movwf	Delay_ms@time_to_delay+1
  2506  17FD  3188  207E         	fcall	_Delay_ms
  2507  17FF  0008               	return
  2508  1800                     __end_of_Radio_Setup:	
  2509                           
  2510                           	psect	text6
  2511  01D4                     __ptext6:	
  2512 ;; *************** function _Set_Freq *****************
  2513 ;; Defined at:
  2514 ;;		line 277 in file "adf7012.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  freq            4   38[BANK0 ] unsigned long 
  2517 ;; Auto vars:     Size  Location     Type
  2518 ;;  n               4   60[BANK0 ] unsigned long 
  2519 ;;  f_pfd           4   56[BANK0 ] unsigned long 
  2520 ;;  m               4   46[BANK0 ] unsigned long 
  2521 ;;  rest            3   53[BANK0 ] float 
  2522 ;;  ratio           3   50[BANK0 ] float 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;		None               void
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, pclath, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2532 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2533 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2534 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2535 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2536 ;;Total ram usage:       26 bytes
  2537 ;; Hardware stack levels used:    1
  2538 ;; Hardware stack levels required when called:    5
  2539 ;; This function calls:
  2540 ;;		___aldiv
  2541 ;;		___ftadd
  2542 ;;		___ftdiv
  2543 ;;		___ftmul
  2544 ;;		___ftneg
  2545 ;;		___fttol
  2546 ;;		___lldiv
  2547 ;;		___lltoft
  2548 ;; This function is called by:
  2549 ;;		_Radio_Setup
  2550 ;;		_Modem_Set_Tx_Freq
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _Set_Freq
  2556  01D4                     _Set_Freq:	
  2557                           
  2558                           ;adf7012.c: 283: adf_config.r0.output_divider = 0;
  2559                           
  2560                           ;incstack = 0
  2561                           ; Regs used in _Set_Freq: [wreg+status,2+status,0+pclath+cstack]
  2562  01D4  0021               	movlb	1	; select bank1
  2563  01D5  01A9               	clrf	(_adf_config^(0+128)+9)
  2564                           
  2565                           ;adf7012.c: 284: if (freq < 410000000) { adf_config.r0.output_divider = 1; };
  2566  01D6  3018               	movlw	24
  2567  01D7  0020               	movlb	0	; select bank0
  2568  01D8  0249               	subwf	Set_Freq@freq+3,w
  2569  01D9  1D03               	skipz
  2570  01DA  29E5               	goto	u3165
  2571  01DB  3070               	movlw	112
  2572  01DC  0248               	subwf	Set_Freq@freq+2,w
  2573  01DD  1D03               	skipz
  2574  01DE  29E5               	goto	u3165
  2575  01DF  301A               	movlw	26
  2576  01E0  0247               	subwf	Set_Freq@freq+1,w
  2577  01E1  1D03               	skipz
  2578  01E2  29E5               	goto	u3165
  2579  01E3  3080               	movlw	128
  2580  01E4  0246               	subwf	Set_Freq@freq,w
  2581  01E5                     u3165:	
  2582  01E5  1803               	skipnc
  2583  01E6  29EA               	goto	l2559
  2584  01E7  0021               	movlb	1	; select bank1
  2585  01E8  01A9               	clrf	(_adf_config^(0+128)+9)
  2586  01E9  0AA9               	incf	(_adf_config^(0+128)+9),f
  2587  01EA                     l2559:	
  2588                           
  2589                           ;adf7012.c: 285: if (freq < 210000000) { adf_config.r0.output_divider = 2; };
  2590  01EA  300C               	movlw	12
  2591  01EB  0020               	movlb	0	; select bank0
  2592  01EC  0249               	subwf	Set_Freq@freq+3,w
  2593  01ED  1D03               	skipz
  2594  01EE  29F9               	goto	u3175
  2595  01EF  3084               	movlw	132
  2596  01F0  0248               	subwf	Set_Freq@freq+2,w
  2597  01F1  1D03               	skipz
  2598  01F2  29F9               	goto	u3175
  2599  01F3  3058               	movlw	88
  2600  01F4  0247               	subwf	Set_Freq@freq+1,w
  2601  01F5  1D03               	skipz
  2602  01F6  29F9               	goto	u3175
  2603  01F7  3080               	movlw	128
  2604  01F8  0246               	subwf	Set_Freq@freq,w
  2605  01F9                     u3175:	
  2606  01F9  1803               	skipnc
  2607  01FA  2A00               	goto	l338
  2608  01FB  3002               	movlw	2
  2609  01FC  00CA               	movwf	??_Set_Freq
  2610  01FD  084A               	movf	??_Set_Freq,w
  2611  01FE  0021               	movlb	1	; select bank1
  2612  01FF  00A9               	movwf	(_adf_config^(0+128)+9)
  2613  0200                     l338:	
  2614                           
  2615                           ;adf7012.c: 286: if (freq < 130000000) { adf_config.r0.output_divider = 3; };
  2616  0200  3007               	movlw	7
  2617  0201  0020               	movlb	0	; select bank0
  2618  0202  0249               	subwf	Set_Freq@freq+3,w
  2619  0203  1D03               	skipz
  2620  0204  2A0F               	goto	u3185
  2621  0205  30BF               	movlw	191
  2622  0206  0248               	subwf	Set_Freq@freq+2,w
  2623  0207  1D03               	skipz
  2624  0208  2A0F               	goto	u3185
  2625  0209  30A4               	movlw	164
  2626  020A  0247               	subwf	Set_Freq@freq+1,w
  2627  020B  1D03               	skipz
  2628  020C  2A0F               	goto	u3185
  2629  020D  3080               	movlw	128
  2630  020E  0246               	subwf	Set_Freq@freq,w
  2631  020F                     u3185:	
  2632  020F  1803               	skipnc
  2633  0210  2A16               	goto	l2565
  2634  0211  3003               	movlw	3
  2635  0212  00CA               	movwf	??_Set_Freq
  2636  0213  084A               	movf	??_Set_Freq,w
  2637  0214  0021               	movlb	1	; select bank1
  2638  0215  00A9               	movwf	(_adf_config^(0+128)+9)
  2639  0216                     l2565:	
  2640                           
  2641                           ;adf7012.c: 288: uint32_t f_pfd = 20000000L / adf_config.r0.r_divider;
  2642  0216  0021               	movlb	1	; select bank1
  2643  0217  0824               	movf	(_adf_config^(0+128)+4),w
  2644  0218  0020               	movlb	0	; select bank0
  2645  0219  00CA               	movwf	??_Set_Freq
  2646  021A  01CB               	clrf	??_Set_Freq+1
  2647  021B  01CC               	clrf	??_Set_Freq+2
  2648  021C  01CD               	clrf	??_Set_Freq+3
  2649  021D  084D               	movf	??_Set_Freq+3,w
  2650  021E  00A3               	movwf	___aldiv@divisor+3
  2651  021F  084C               	movf	??_Set_Freq+2,w
  2652  0220  00A2               	movwf	___aldiv@divisor+2
  2653  0221  084B               	movf	??_Set_Freq+1,w
  2654  0222  00A1               	movwf	___aldiv@divisor+1
  2655  0223  084A               	movf	??_Set_Freq,w
  2656  0224  00A0               	movwf	___aldiv@divisor
  2657  0225  3001               	movlw	1
  2658  0226  00A7               	movwf	___aldiv@dividend+3
  2659  0227  3031               	movlw	49
  2660  0228  00A6               	movwf	___aldiv@dividend+2
  2661  0229  302D               	movlw	45
  2662  022A  00A5               	movwf	___aldiv@dividend+1
  2663  022B  3000               	movlw	0
  2664  022C  00A4               	movwf	___aldiv@dividend
  2665  022D  3187  277B  3181   	fcall	___aldiv
  2666  0230  0020               	movlb	0	; select bank0
  2667  0231  0823               	movf	?___aldiv+3,w
  2668  0232  00DB               	movwf	Set_Freq@f_pfd+3
  2669  0233  0822               	movf	?___aldiv+2,w
  2670  0234  00DA               	movwf	Set_Freq@f_pfd+2
  2671  0235  0821               	movf	?___aldiv+1,w
  2672  0236  00D9               	movwf	Set_Freq@f_pfd+1
  2673  0237  0820               	movf	?___aldiv,w
  2674  0238  00D8               	movwf	Set_Freq@f_pfd
  2675                           
  2676                           ;adf7012.c: 290: uint32_t n = (uint32_t)(freq / f_pfd);
  2677  0239  085B               	movf	Set_Freq@f_pfd+3,w
  2678  023A  00A3               	movwf	___lldiv@divisor+3
  2679  023B  085A               	movf	Set_Freq@f_pfd+2,w
  2680  023C  00A2               	movwf	___lldiv@divisor+2
  2681  023D  0859               	movf	Set_Freq@f_pfd+1,w
  2682  023E  00A1               	movwf	___lldiv@divisor+1
  2683  023F  0858               	movf	Set_Freq@f_pfd,w
  2684  0240  00A0               	movwf	___lldiv@divisor
  2685  0241  0849               	movf	Set_Freq@freq+3,w
  2686  0242  00A7               	movwf	___lldiv@dividend+3
  2687  0243  0848               	movf	Set_Freq@freq+2,w
  2688  0244  00A6               	movwf	___lldiv@dividend+2
  2689  0245  0847               	movf	Set_Freq@freq+1,w
  2690  0246  00A5               	movwf	___lldiv@dividend+1
  2691  0247  0846               	movf	Set_Freq@freq,w
  2692  0248  00A4               	movwf	___lldiv@dividend
  2693  0249  318A  2232  3181   	fcall	___lldiv
  2694  024C  0020               	movlb	0	; select bank0
  2695  024D  0823               	movf	?___lldiv+3,w
  2696  024E  00DF               	movwf	Set_Freq@n+3
  2697  024F  0822               	movf	?___lldiv+2,w
  2698  0250  00DE               	movwf	Set_Freq@n+2
  2699  0251  0821               	movf	?___lldiv+1,w
  2700  0252  00DD               	movwf	Set_Freq@n+1
  2701  0253  0820               	movf	?___lldiv,w
  2702  0254  00DC               	movwf	Set_Freq@n
  2703                           
  2704                           ;adf7012.c: 292: float ratio = (float)freq / (float)f_pfd;
  2705  0255  085B               	movf	Set_Freq@f_pfd+3,w
  2706  0256  00AB               	movwf	___lltoft@c+3
  2707  0257  085A               	movf	Set_Freq@f_pfd+2,w
  2708  0258  00AA               	movwf	___lltoft@c+2
  2709  0259  0859               	movf	Set_Freq@f_pfd+1,w
  2710  025A  00A9               	movwf	___lltoft@c+1
  2711  025B  0858               	movf	Set_Freq@f_pfd,w
  2712  025C  00A8               	movwf	___lltoft@c
  2713  025D  3188  20FA  3181   	fcall	___lltoft
  2714  0260  0020               	movlb	0	; select bank0
  2715  0261  0828               	movf	?___lltoft,w
  2716  0262  00AE               	movwf	___ftdiv@f2
  2717  0263  0829               	movf	?___lltoft+1,w
  2718  0264  00AF               	movwf	___ftdiv@f2+1
  2719  0265  082A               	movf	?___lltoft+2,w
  2720  0266  00B0               	movwf	___ftdiv@f2+2
  2721  0267  0849               	movf	Set_Freq@freq+3,w
  2722  0268  00AB               	movwf	___lltoft@c+3
  2723  0269  0848               	movf	Set_Freq@freq+2,w
  2724  026A  00AA               	movwf	___lltoft@c+2
  2725  026B  0847               	movf	Set_Freq@freq+1,w
  2726  026C  00A9               	movwf	___lltoft@c+1
  2727  026D  0846               	movf	Set_Freq@freq,w
  2728  026E  00A8               	movwf	___lltoft@c
  2729  026F  3188  20FA  3181   	fcall	___lltoft
  2730  0272  0020               	movlb	0	; select bank0
  2731  0273  0828               	movf	?___lltoft,w
  2732  0274  00B1               	movwf	___ftdiv@f1
  2733  0275  0829               	movf	?___lltoft+1,w
  2734  0276  00B2               	movwf	___ftdiv@f1+1
  2735  0277  082A               	movf	?___lltoft+2,w
  2736  0278  00B3               	movwf	___ftdiv@f1+2
  2737  0279  318D  25EF  3181   	fcall	___ftdiv
  2738  027C  0020               	movlb	0	; select bank0
  2739  027D  082E               	movf	?___ftdiv,w
  2740  027E  00D2               	movwf	Set_Freq@ratio
  2741  027F  082F               	movf	?___ftdiv+1,w
  2742  0280  00D3               	movwf	Set_Freq@ratio+1
  2743  0281  0830               	movf	?___ftdiv+2,w
  2744  0282  00D4               	movwf	Set_Freq@ratio+2
  2745                           
  2746                           ;adf7012.c: 293: float rest = ratio - (float)n;
  2747  0283  0852               	movf	Set_Freq@ratio,w
  2748  0284  00B1               	movwf	___ftadd@f1
  2749  0285  0853               	movf	Set_Freq@ratio+1,w
  2750  0286  00B2               	movwf	___ftadd@f1+1
  2751  0287  0854               	movf	Set_Freq@ratio+2,w
  2752  0288  00B3               	movwf	___ftadd@f1+2
  2753  0289  085F               	movf	Set_Freq@n+3,w
  2754  028A  00AB               	movwf	___lltoft@c+3
  2755  028B  085E               	movf	Set_Freq@n+2,w
  2756  028C  00AA               	movwf	___lltoft@c+2
  2757  028D  085D               	movf	Set_Freq@n+1,w
  2758  028E  00A9               	movwf	___lltoft@c+1
  2759  028F  085C               	movf	Set_Freq@n,w
  2760  0290  00A8               	movwf	___lltoft@c
  2761  0291  3188  20FA  3181   	fcall	___lltoft
  2762  0294  0020               	movlb	0	; select bank0
  2763  0295  0828               	movf	?___lltoft,w
  2764  0296  00AE               	movwf	___ftneg@f1
  2765  0297  0829               	movf	?___lltoft+1,w
  2766  0298  00AF               	movwf	___ftneg@f1+1
  2767  0299  082A               	movf	?___lltoft+2,w
  2768  029A  00B0               	movwf	___ftneg@f1+2
  2769  029B  3197  270B  3181   	fcall	___ftneg
  2770  029E  0020               	movlb	0	; select bank0
  2771  029F  082E               	movf	?___ftneg,w
  2772  02A0  00B4               	movwf	___ftadd@f2
  2773  02A1  082F               	movf	?___ftneg+1,w
  2774  02A2  00B5               	movwf	___ftadd@f2+1
  2775  02A3  0830               	movf	?___ftneg+2,w
  2776  02A4  00B6               	movwf	___ftadd@f2+2
  2777  02A5  3182  22E6  3181   	fcall	___ftadd
  2778  02A8  0020               	movlb	0	; select bank0
  2779  02A9  0831               	movf	?___ftadd,w
  2780  02AA  00D5               	movwf	Set_Freq@rest
  2781  02AB  0832               	movf	?___ftadd+1,w
  2782  02AC  00D6               	movwf	Set_Freq@rest+1
  2783  02AD  0833               	movf	?___ftadd+2,w
  2784  02AE  00D7               	movwf	Set_Freq@rest+2
  2785                           
  2786                           ;adf7012.c: 296: uint32_t m = (uint32_t)(rest * 4096);
  2787  02AF  0855               	movf	Set_Freq@rest,w
  2788  02B0  00AB               	movwf	___ftmul@f2
  2789  02B1  0856               	movf	Set_Freq@rest+1,w
  2790  02B2  00AC               	movwf	___ftmul@f2+1
  2791  02B3  0857               	movf	Set_Freq@rest+2,w
  2792  02B4  00AD               	movwf	___ftmul@f2+2
  2793  02B5  3000               	movlw	0
  2794  02B6  00A8               	movwf	___ftmul@f1
  2795  02B7  3080               	movlw	128
  2796  02B8  00A9               	movwf	___ftmul@f1+1
  2797  02B9  3045               	movlw	69
  2798  02BA  00AA               	movwf	___ftmul@f1+2
  2799  02BB  318F  274C  3181   	fcall	___ftmul
  2800  02BE  0020               	movlb	0	; select bank0
  2801  02BF  0828               	movf	?___ftmul,w
  2802  02C0  00B8               	movwf	___fttol@f1
  2803  02C1  0829               	movf	?___ftmul+1,w
  2804  02C2  00B9               	movwf	___fttol@f1+1
  2805  02C3  082A               	movf	?___ftmul+2,w
  2806  02C4  00BA               	movwf	___fttol@f1+2
  2807  02C5  318C  2445         	fcall	___fttol
  2808  02C7  0020               	movlb	0	; select bank0
  2809  02C8  083B               	movf	?___fttol+3,w
  2810  02C9  00D1               	movwf	Set_Freq@m+3
  2811  02CA  083A               	movf	?___fttol+2,w
  2812  02CB  00D0               	movwf	Set_Freq@m+2
  2813  02CC  0839               	movf	?___fttol+1,w
  2814  02CD  00CF               	movwf	Set_Freq@m+1
  2815  02CE  0838               	movf	?___fttol,w
  2816  02CF  00CE               	movwf	Set_Freq@m
  2817                           
  2818                           ;adf7012.c: 298: adf_config.r1.integer_n = n;
  2819  02D0  085C               	movf	Set_Freq@n,w
  2820  02D1  00CA               	movwf	??_Set_Freq
  2821  02D2  084A               	movf	??_Set_Freq,w
  2822  02D3  0021               	movlb	1	; select bank1
  2823  02D4  00AE               	movwf	(_adf_config^(0+128)+14)
  2824                           
  2825                           ;adf7012.c: 299: adf_config.r1.fractional_n = m;
  2826  02D5  0020               	movlb	0	; select bank0
  2827  02D6  0851               	movf	Set_Freq@m+3,w
  2828  02D7  0021               	movlb	1	; select bank1
  2829  02D8  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  2830  02D9  0020               	movlb	0	; select bank0
  2831  02DA  0850               	movf	Set_Freq@m+2,w
  2832  02DB  0021               	movlb	1	; select bank1
  2833  02DC  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  2834  02DD  0020               	movlb	0	; select bank0
  2835  02DE  084F               	movf	Set_Freq@m+1,w
  2836  02DF  0021               	movlb	1	; select bank1
  2837  02E0  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  2838  02E1  0020               	movlb	0	; select bank0
  2839  02E2  084E               	movf	Set_Freq@m,w
  2840  02E3  0021               	movlb	1	; select bank1
  2841  02E4  00AA               	movwf	(_adf_config^(0+128)+10)
  2842  02E5  0008               	return
  2843  02E6                     __end_of_Set_Freq:	
  2844                           
  2845                           	psect	text7
  2846  08FA                     __ptext7:	
  2847 ;; *************** function ___lltoft *****************
  2848 ;; Defined at:
  2849 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  c               4    8[BANK0 ] unsigned long 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  exp             1   13[BANK0 ] unsigned char 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  3    8[BANK0 ] float 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, pclath, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2863 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;Total ram usage:        6 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    4
  2870 ;; This function calls:
  2871 ;;		___ftpack
  2872 ;; This function is called by:
  2873 ;;		_Set_Freq
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           
  2878                           ;psect for function ___lltoft
  2879  08FA                     ___lltoft:	
  2880                           
  2881                           ;incstack = 0
  2882                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  2883  08FA  308E               	movlw	142
  2884  08FB  0020               	movlb	0	; select bank0
  2885  08FC  00AC               	movwf	??___lltoft
  2886  08FD  082C               	movf	??___lltoft,w
  2887  08FE  00AD               	movwf	___lltoft@exp
  2888  08FF                     l2505:	
  2889  08FF  30FF               	movlw	255
  2890  0900  052B               	andwf	___lltoft@c+3,w
  2891  0901  1903               	btfsc	3,2
  2892  0902  290F               	goto	l2507
  2893  0903  3001               	movlw	1
  2894  0904                     u3115:	
  2895  0904  36AB               	lsrf	___lltoft@c+3,f
  2896  0905  0CAA               	rrf	___lltoft@c+2,f
  2897  0906  0CA9               	rrf	___lltoft@c+1,f
  2898  0907  0CA8               	rrf	___lltoft@c,f
  2899  0908  0B89               	decfsz	9,f
  2900  0909  2904               	goto	u3115
  2901  090A  3001               	movlw	1
  2902  090B  00AC               	movwf	??___lltoft
  2903  090C  082C               	movf	??___lltoft,w
  2904  090D  07AD               	addwf	___lltoft@exp,f
  2905  090E  28FF               	goto	l2505
  2906  090F                     l2507:	
  2907  090F  0828               	movf	___lltoft@c,w
  2908  0910  00A0               	movwf	___ftpack@arg
  2909  0911  0829               	movf	___lltoft@c+1,w
  2910  0912  00A1               	movwf	___ftpack@arg+1
  2911  0913  082A               	movf	___lltoft@c+2,w
  2912  0914  00A2               	movwf	___ftpack@arg+2
  2913  0915  082D               	movf	___lltoft@exp,w
  2914  0916  00AC               	movwf	??___lltoft
  2915  0917  082C               	movf	??___lltoft,w
  2916  0918  00A3               	movwf	___ftpack@exp
  2917  0919  01A4               	clrf	___ftpack@sign
  2918  091A  318A  2285         	fcall	___ftpack
  2919  091C  0020               	movlb	0	; select bank0
  2920  091D  0820               	movf	?___ftpack,w
  2921  091E  00A8               	movwf	?___lltoft
  2922  091F  0821               	movf	?___ftpack+1,w
  2923  0920  00A9               	movwf	?___lltoft+1
  2924  0921  0822               	movf	?___ftpack+2,w
  2925  0922  00AA               	movwf	?___lltoft+2
  2926  0923  0008               	return
  2927  0924                     __end_of___lltoft:	
  2928                           
  2929                           	psect	text8
  2930  0A32                     __ptext8:	
  2931 ;; *************** function ___lldiv *****************
  2932 ;; Defined at:
  2933 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  divisor         4    0[BANK0 ] unsigned long 
  2936 ;;  dividend        4    4[BANK0 ] unsigned long 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  quotient        4    9[BANK0 ] unsigned long 
  2939 ;;  counter         1   13[BANK0 ] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  4    0[BANK0 ] unsigned long 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2949 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;Total ram usage:       14 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    3
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_Set_Freq
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function ___lldiv
  2965  0A32                     ___lldiv:	
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2969  0A32  3000               	movlw	0
  2970  0A33  0020               	movlb	0	; select bank0
  2971  0A34  00AC               	movwf	___lldiv@quotient+3
  2972  0A35  3000               	movlw	0
  2973  0A36  00AB               	movwf	___lldiv@quotient+2
  2974  0A37  3000               	movlw	0
  2975  0A38  00AA               	movwf	___lldiv@quotient+1
  2976  0A39  3000               	movlw	0
  2977  0A3A  00A9               	movwf	___lldiv@quotient
  2978  0A3B  0823               	movf	___lldiv@divisor+3,w
  2979  0A3C  0422               	iorwf	___lldiv@divisor+2,w
  2980  0A3D  0421               	iorwf	___lldiv@divisor+1,w
  2981  0A3E  0420               	iorwf	___lldiv@divisor,w
  2982  0A3F  1903               	skipnz
  2983  0A40  2A7C               	goto	l2497
  2984  0A41  01AD               	clrf	___lldiv@counter
  2985  0A42  0AAD               	incf	___lldiv@counter,f
  2986  0A43                     l2483:	
  2987  0A43  1BA3               	btfsc	___lldiv@divisor+3,7
  2988  0A44  2A51               	goto	l2485
  2989  0A45  3001               	movlw	1
  2990  0A46                     u3055:	
  2991  0A46  35A0               	lslf	___lldiv@divisor,f
  2992  0A47  0DA1               	rlf	___lldiv@divisor+1,f
  2993  0A48  0DA2               	rlf	___lldiv@divisor+2,f
  2994  0A49  0DA3               	rlf	___lldiv@divisor+3,f
  2995  0A4A  0B89               	decfsz	9,f
  2996  0A4B  2A46               	goto	u3055
  2997  0A4C  3001               	movlw	1
  2998  0A4D  00A8               	movwf	??___lldiv
  2999  0A4E  0828               	movf	??___lldiv,w
  3000  0A4F  07AD               	addwf	___lldiv@counter,f
  3001  0A50  2A43               	goto	l2483
  3002  0A51                     l2485:	
  3003  0A51  3001               	movlw	1
  3004  0A52                     u3075:	
  3005  0A52  35A9               	lslf	___lldiv@quotient,f
  3006  0A53  0DAA               	rlf	___lldiv@quotient+1,f
  3007  0A54  0DAB               	rlf	___lldiv@quotient+2,f
  3008  0A55  0DAC               	rlf	___lldiv@quotient+3,f
  3009  0A56  0B89               	decfsz	9,f
  3010  0A57  2A52               	goto	u3075
  3011  0A58  0823               	movf	___lldiv@divisor+3,w
  3012  0A59  0227               	subwf	___lldiv@dividend+3,w
  3013  0A5A  1D03               	skipz
  3014  0A5B  2A66               	goto	u3085
  3015  0A5C  0822               	movf	___lldiv@divisor+2,w
  3016  0A5D  0226               	subwf	___lldiv@dividend+2,w
  3017  0A5E  1D03               	skipz
  3018  0A5F  2A66               	goto	u3085
  3019  0A60  0821               	movf	___lldiv@divisor+1,w
  3020  0A61  0225               	subwf	___lldiv@dividend+1,w
  3021  0A62  1D03               	skipz
  3022  0A63  2A66               	goto	u3085
  3023  0A64  0820               	movf	___lldiv@divisor,w
  3024  0A65  0224               	subwf	___lldiv@dividend,w
  3025  0A66                     u3085:	
  3026  0A66  1C03               	skipc
  3027  0A67  2A71               	goto	l2493
  3028  0A68  0820               	movf	___lldiv@divisor,w
  3029  0A69  02A4               	subwf	___lldiv@dividend,f
  3030  0A6A  0821               	movf	___lldiv@divisor+1,w
  3031  0A6B  3BA5               	subwfb	___lldiv@dividend+1,f
  3032  0A6C  0822               	movf	___lldiv@divisor+2,w
  3033  0A6D  3BA6               	subwfb	___lldiv@dividend+2,f
  3034  0A6E  0823               	movf	___lldiv@divisor+3,w
  3035  0A6F  3BA7               	subwfb	___lldiv@dividend+3,f
  3036  0A70  1429               	bsf	___lldiv@quotient,0
  3037  0A71                     l2493:	
  3038  0A71  3001               	movlw	1
  3039  0A72                     u3095:	
  3040  0A72  36A3               	lsrf	___lldiv@divisor+3,f
  3041  0A73  0CA2               	rrf	___lldiv@divisor+2,f
  3042  0A74  0CA1               	rrf	___lldiv@divisor+1,f
  3043  0A75  0CA0               	rrf	___lldiv@divisor,f
  3044  0A76  0B89               	decfsz	9,f
  3045  0A77  2A72               	goto	u3095
  3046  0A78  3001               	movlw	1
  3047  0A79  02AD               	subwf	___lldiv@counter,f
  3048  0A7A  1D03               	btfss	3,2
  3049  0A7B  2A51               	goto	l2485
  3050  0A7C                     l2497:	
  3051  0A7C  082C               	movf	___lldiv@quotient+3,w
  3052  0A7D  00A3               	movwf	?___lldiv+3
  3053  0A7E  082B               	movf	___lldiv@quotient+2,w
  3054  0A7F  00A2               	movwf	?___lldiv+2
  3055  0A80  082A               	movf	___lldiv@quotient+1,w
  3056  0A81  00A1               	movwf	?___lldiv+1
  3057  0A82  0829               	movf	___lldiv@quotient,w
  3058  0A83  00A0               	movwf	?___lldiv
  3059  0A84  0008               	return
  3060  0A85                     __end_of___lldiv:	
  3061                           
  3062                           	psect	text9
  3063  0C45                     __ptext9:	
  3064 ;; *************** function ___fttol *****************
  3065 ;; Defined at:
  3066 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  f1              3   24[BANK0 ] float 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  lval            4   33[BANK0 ] unsigned long 
  3071 ;;  exp1            1   37[BANK0 ] unsigned char 
  3072 ;;  sign1           1   32[BANK0 ] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  4   24[BANK0 ] long 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3082 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;Total ram usage:       14 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    3
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_Set_Freq
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           
  3097                           ;psect for function ___fttol
  3098  0C45                     ___fttol:	
  3099                           
  3100                           ;incstack = 0
  3101                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3102  0C45  0020               	movlb	0	; select bank0
  3103  0C46  0838               	movf	___fttol@f1,w
  3104  0C47  00BC               	movwf	??___fttol
  3105  0C48  0839               	movf	___fttol@f1+1,w
  3106  0C49  00BD               	movwf	??___fttol+1
  3107  0C4A  083A               	movf	___fttol@f1+2,w
  3108  0C4B  00BE               	movwf	??___fttol+2
  3109  0C4C  1003               	clrc
  3110  0C4D  0D3D               	rlf	??___fttol+1,w
  3111  0C4E  0D3E               	rlf	??___fttol+2,w
  3112  0C4F  00BF               	movwf	??___fttol+3
  3113  0C50  083F               	movf	??___fttol+3,w
  3114  0C51  00C5               	movwf	___fttol@exp1
  3115  0C52  08C5               	movf	___fttol@exp1,f
  3116  0C53  1D03               	skipz
  3117  0C54  2C5E               	goto	l2439
  3118  0C55  3000               	movlw	0
  3119  0C56  00BB               	movwf	?___fttol+3
  3120  0C57  3000               	movlw	0
  3121  0C58  00BA               	movwf	?___fttol+2
  3122  0C59  3000               	movlw	0
  3123  0C5A  00B9               	movwf	?___fttol+1
  3124  0C5B  3000               	movlw	0
  3125  0C5C  00B8               	movwf	?___fttol
  3126  0C5D  0008               	return
  3127  0C5E                     l2439:	
  3128  0C5E  0838               	movf	___fttol@f1,w
  3129  0C5F  00BC               	movwf	??___fttol
  3130  0C60  0839               	movf	___fttol@f1+1,w
  3131  0C61  00BD               	movwf	??___fttol+1
  3132  0C62  083A               	movf	___fttol@f1+2,w
  3133  0C63  00BE               	movwf	??___fttol+2
  3134  0C64  3017               	movlw	23
  3135  0C65                     u2955:	
  3136  0C65  36BE               	lsrf	??___fttol+2,f
  3137  0C66  0CBD               	rrf	??___fttol+1,f
  3138  0C67  0CBC               	rrf	??___fttol,f
  3139  0C68  0B89               	decfsz	9,f
  3140  0C69  2C65               	goto	u2955
  3141  0C6A  083C               	movf	??___fttol,w
  3142  0C6B  00BF               	movwf	??___fttol+3
  3143  0C6C  083F               	movf	??___fttol+3,w
  3144  0C6D  00C0               	movwf	___fttol@sign1
  3145  0C6E  17B9               	bsf	___fttol@f1+1,7
  3146  0C6F  30FF               	movlw	255
  3147  0C70  05B8               	andwf	___fttol@f1,f
  3148  0C71  30FF               	movlw	255
  3149  0C72  05B9               	andwf	___fttol@f1+1,f
  3150  0C73  3000               	movlw	0
  3151  0C74  05BA               	andwf	___fttol@f1+2,f
  3152  0C75  0838               	movf	___fttol@f1,w
  3153  0C76  00C1               	movwf	___fttol@lval
  3154  0C77  0839               	movf	___fttol@f1+1,w
  3155  0C78  00C2               	movwf	___fttol@lval+1
  3156  0C79  083A               	movf	___fttol@f1+2,w
  3157  0C7A  00C3               	movwf	___fttol@lval+2
  3158  0C7B  01C4               	clrf	___fttol@lval+3
  3159  0C7C  308E               	movlw	142
  3160  0C7D  02C5               	subwf	___fttol@exp1,f
  3161  0C7E  1FC5               	btfss	___fttol@exp1,7
  3162  0C7F  2C9C               	goto	l2459
  3163  0C80  0845               	movf	___fttol@exp1,w
  3164  0C81  3A80               	xorlw	128
  3165  0C82  3E8F               	addlw	143
  3166  0C83  1803               	skipnc
  3167  0C84  2C8E               	goto	l2457
  3168  0C85  3000               	movlw	0
  3169  0C86  00BB               	movwf	?___fttol+3
  3170  0C87  3000               	movlw	0
  3171  0C88  00BA               	movwf	?___fttol+2
  3172  0C89  3000               	movlw	0
  3173  0C8A  00B9               	movwf	?___fttol+1
  3174  0C8B  3000               	movlw	0
  3175  0C8C  00B8               	movwf	?___fttol
  3176  0C8D  0008               	return
  3177  0C8E                     l2457:	
  3178  0C8E  3001               	movlw	1
  3179  0C8F                     u2985:	
  3180  0C8F  36C4               	lsrf	___fttol@lval+3,f
  3181  0C90  0CC3               	rrf	___fttol@lval+2,f
  3182  0C91  0CC2               	rrf	___fttol@lval+1,f
  3183  0C92  0CC1               	rrf	___fttol@lval,f
  3184  0C93  0B89               	decfsz	9,f
  3185  0C94  2C8F               	goto	u2985
  3186  0C95  3001               	movlw	1
  3187  0C96  00BC               	movwf	??___fttol
  3188  0C97  083C               	movf	??___fttol,w
  3189  0C98  07C5               	addwf	___fttol@exp1,f
  3190  0C99  1903               	btfsc	3,2
  3191  0C9A  2CB5               	goto	l2469
  3192  0C9B  2C8E               	goto	l2457
  3193  0C9C                     l2459:	
  3194  0C9C  3018               	movlw	24
  3195  0C9D  0245               	subwf	___fttol@exp1,w
  3196  0C9E  1C03               	skipc
  3197  0C9F  2CB2               	goto	l2467
  3198  0CA0  3000               	movlw	0
  3199  0CA1  00BB               	movwf	?___fttol+3
  3200  0CA2  3000               	movlw	0
  3201  0CA3  00BA               	movwf	?___fttol+2
  3202  0CA4  3000               	movlw	0
  3203  0CA5  00B9               	movwf	?___fttol+1
  3204  0CA6  3000               	movlw	0
  3205  0CA7  00B8               	movwf	?___fttol
  3206  0CA8  0008               	return
  3207  0CA9                     l2465:	
  3208  0CA9  3001               	movlw	1
  3209  0CAA                     u3015:	
  3210  0CAA  35C1               	lslf	___fttol@lval,f
  3211  0CAB  0DC2               	rlf	___fttol@lval+1,f
  3212  0CAC  0DC3               	rlf	___fttol@lval+2,f
  3213  0CAD  0DC4               	rlf	___fttol@lval+3,f
  3214  0CAE  0B89               	decfsz	9,f
  3215  0CAF  2CAA               	goto	u3015
  3216  0CB0  3001               	movlw	1
  3217  0CB1  02C5               	subwf	___fttol@exp1,f
  3218  0CB2                     l2467:	
  3219  0CB2  08C5               	movf	___fttol@exp1,f
  3220  0CB3  1D03               	skipz
  3221  0CB4  2CA9               	goto	l2465
  3222  0CB5                     l2469:	
  3223  0CB5  0840               	movf	___fttol@sign1,w
  3224  0CB6  1903               	btfsc	3,2
  3225  0CB7  2CC3               	goto	l2473
  3226  0CB8  09C1               	comf	___fttol@lval,f
  3227  0CB9  09C2               	comf	___fttol@lval+1,f
  3228  0CBA  09C3               	comf	___fttol@lval+2,f
  3229  0CBB  09C4               	comf	___fttol@lval+3,f
  3230  0CBC  0AC1               	incf	___fttol@lval,f
  3231  0CBD  1903               	skipnz
  3232  0CBE  0AC2               	incf	___fttol@lval+1,f
  3233  0CBF  1903               	skipnz
  3234  0CC0  0AC3               	incf	___fttol@lval+2,f
  3235  0CC1  1903               	skipnz
  3236  0CC2  0AC4               	incf	___fttol@lval+3,f
  3237  0CC3                     l2473:	
  3238  0CC3  0844               	movf	___fttol@lval+3,w
  3239  0CC4  00BB               	movwf	?___fttol+3
  3240  0CC5  0843               	movf	___fttol@lval+2,w
  3241  0CC6  00BA               	movwf	?___fttol+2
  3242  0CC7  0842               	movf	___fttol@lval+1,w
  3243  0CC8  00B9               	movwf	?___fttol+1
  3244  0CC9  0841               	movf	___fttol@lval,w
  3245  0CCA  00B8               	movwf	?___fttol
  3246  0CCB  0008               	return
  3247  0CCC                     __end_of___fttol:	
  3248                           
  3249                           	psect	text10
  3250  170B                     __ptext10:	
  3251 ;; *************** function ___ftneg *****************
  3252 ;; Defined at:
  3253 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  f1              3   14[BANK0 ] float 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;		None
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  3   14[BANK0 ] float 
  3260 ;; Registers used:
  3261 ;;		wreg
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3267 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3270 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;Total ram usage:        3 bytes
  3272 ;; Hardware stack levels used:    1
  3273 ;; Hardware stack levels required when called:    3
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_Set_Freq
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           
  3282                           ;psect for function ___ftneg
  3283  170B                     ___ftneg:	
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in ___ftneg: [wreg]
  3287  170B  0020               	movlb	0	; select bank0
  3288  170C  0830               	movf	___ftneg@f1+2,w
  3289  170D  042F               	iorwf	___ftneg@f1+1,w
  3290  170E  042E               	iorwf	___ftneg@f1,w
  3291  170F  1903               	skipnz
  3292  1710  0008               	return
  3293  1711  3080               	movlw	128
  3294  1712  06B0               	xorwf	___ftneg@f1+2,f
  3295  1713  0008               	return
  3296  1714                     __end_of___ftneg:	
  3297                           
  3298                           	psect	text11
  3299  0F4C                     __ptext11:	
  3300 ;; *************** function ___ftmul *****************
  3301 ;; Defined at:
  3302 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  f1              3    8[BANK0 ] float 
  3305 ;;  f2              3   11[BANK0 ] float 
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  f3_as_produc    3   19[BANK0 ] unsigned um
  3308 ;;  sign            1   23[BANK0 ] unsigned char 
  3309 ;;  cntr            1   22[BANK0 ] unsigned char 
  3310 ;;  exp             1   18[BANK0 ] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  3    8[BANK0 ] float 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, pclath, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3320 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3321 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3322 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;Total ram usage:       16 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    4
  3327 ;; This function calls:
  3328 ;;		___ftpack
  3329 ;; This function is called by:
  3330 ;;		_Set_Freq
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function ___ftmul
  3336  0F4C                     ___ftmul:	
  3337                           
  3338                           ;incstack = 0
  3339                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3340  0F4C  0020               	movlb	0	; select bank0
  3341  0F4D  0828               	movf	___ftmul@f1,w
  3342  0F4E  00AE               	movwf	??___ftmul
  3343  0F4F  0829               	movf	___ftmul@f1+1,w
  3344  0F50  00AF               	movwf	??___ftmul+1
  3345  0F51  082A               	movf	___ftmul@f1+2,w
  3346  0F52  00B0               	movwf	??___ftmul+2
  3347  0F53  1003               	clrc
  3348  0F54  0D2F               	rlf	??___ftmul+1,w
  3349  0F55  0D30               	rlf	??___ftmul+2,w
  3350  0F56  00B1               	movwf	??___ftmul+3
  3351  0F57  0831               	movf	??___ftmul+3,w
  3352  0F58  00B2               	movwf	___ftmul@exp
  3353  0F59  08B2               	movf	___ftmul@exp,f
  3354  0F5A  1D03               	skipz
  3355  0F5B  2F63               	goto	l2381
  3356  0F5C  3000               	movlw	0
  3357  0F5D  00A8               	movwf	?___ftmul
  3358  0F5E  3000               	movlw	0
  3359  0F5F  00A9               	movwf	?___ftmul+1
  3360  0F60  3000               	movlw	0
  3361  0F61  00AA               	movwf	?___ftmul+2
  3362  0F62  0008               	return
  3363  0F63                     l2381:	
  3364  0F63  082B               	movf	___ftmul@f2,w
  3365  0F64  00AE               	movwf	??___ftmul
  3366  0F65  082C               	movf	___ftmul@f2+1,w
  3367  0F66  00AF               	movwf	??___ftmul+1
  3368  0F67  082D               	movf	___ftmul@f2+2,w
  3369  0F68  00B0               	movwf	??___ftmul+2
  3370  0F69  1003               	clrc
  3371  0F6A  0D2F               	rlf	??___ftmul+1,w
  3372  0F6B  0D30               	rlf	??___ftmul+2,w
  3373  0F6C  00B1               	movwf	??___ftmul+3
  3374  0F6D  0831               	movf	??___ftmul+3,w
  3375  0F6E  00B7               	movwf	___ftmul@sign
  3376  0F6F  08B7               	movf	___ftmul@sign,f
  3377  0F70  1D03               	skipz
  3378  0F71  2F79               	goto	l2387
  3379  0F72  3000               	movlw	0
  3380  0F73  00A8               	movwf	?___ftmul
  3381  0F74  3000               	movlw	0
  3382  0F75  00A9               	movwf	?___ftmul+1
  3383  0F76  3000               	movlw	0
  3384  0F77  00AA               	movwf	?___ftmul+2
  3385  0F78  0008               	return
  3386  0F79                     l2387:	
  3387  0F79  0837               	movf	___ftmul@sign,w
  3388  0F7A  3E7B               	addlw	123
  3389  0F7B  00AE               	movwf	??___ftmul
  3390  0F7C  082E               	movf	??___ftmul,w
  3391  0F7D  07B2               	addwf	___ftmul@exp,f
  3392  0F7E  0828               	movf	___ftmul@f1,w
  3393  0F7F  00AE               	movwf	??___ftmul
  3394  0F80  0829               	movf	___ftmul@f1+1,w
  3395  0F81  00AF               	movwf	??___ftmul+1
  3396  0F82  082A               	movf	___ftmul@f1+2,w
  3397  0F83  00B0               	movwf	??___ftmul+2
  3398  0F84  3010               	movlw	16
  3399  0F85                     u2835:	
  3400  0F85  36B0               	lsrf	??___ftmul+2,f
  3401  0F86  0CAF               	rrf	??___ftmul+1,f
  3402  0F87  0CAE               	rrf	??___ftmul,f
  3403  0F88  0B89               	decfsz	9,f
  3404  0F89  2F85               	goto	u2835
  3405  0F8A  082E               	movf	??___ftmul,w
  3406  0F8B  00B1               	movwf	??___ftmul+3
  3407  0F8C  0831               	movf	??___ftmul+3,w
  3408  0F8D  00B7               	movwf	___ftmul@sign
  3409  0F8E  082B               	movf	___ftmul@f2,w
  3410  0F8F  00AE               	movwf	??___ftmul
  3411  0F90  082C               	movf	___ftmul@f2+1,w
  3412  0F91  00AF               	movwf	??___ftmul+1
  3413  0F92  082D               	movf	___ftmul@f2+2,w
  3414  0F93  00B0               	movwf	??___ftmul+2
  3415  0F94  3010               	movlw	16
  3416  0F95                     u2845:	
  3417  0F95  36B0               	lsrf	??___ftmul+2,f
  3418  0F96  0CAF               	rrf	??___ftmul+1,f
  3419  0F97  0CAE               	rrf	??___ftmul,f
  3420  0F98  0B89               	decfsz	9,f
  3421  0F99  2F95               	goto	u2845
  3422  0F9A  082E               	movf	??___ftmul,w
  3423  0F9B  00B1               	movwf	??___ftmul+3
  3424  0F9C  0831               	movf	??___ftmul+3,w
  3425  0F9D  06B7               	xorwf	___ftmul@sign,f
  3426  0F9E  3080               	movlw	128
  3427  0F9F  00AE               	movwf	??___ftmul
  3428  0FA0  082E               	movf	??___ftmul,w
  3429  0FA1  05B7               	andwf	___ftmul@sign,f
  3430  0FA2  17A9               	bsf	___ftmul@f1+1,7
  3431  0FA3  17AC               	bsf	___ftmul@f2+1,7
  3432  0FA4  30FF               	movlw	255
  3433  0FA5  05AB               	andwf	___ftmul@f2,f
  3434  0FA6  30FF               	movlw	255
  3435  0FA7  05AC               	andwf	___ftmul@f2+1,f
  3436  0FA8  3000               	movlw	0
  3437  0FA9  05AD               	andwf	___ftmul@f2+2,f
  3438  0FAA  3000               	movlw	0
  3439  0FAB  00B3               	movwf	___ftmul@f3_as_product
  3440  0FAC  3000               	movlw	0
  3441  0FAD  00B4               	movwf	___ftmul@f3_as_product+1
  3442  0FAE  3000               	movlw	0
  3443  0FAF  00B5               	movwf	___ftmul@f3_as_product+2
  3444  0FB0  3007               	movlw	7
  3445  0FB1  00AE               	movwf	??___ftmul
  3446  0FB2  082E               	movf	??___ftmul,w
  3447  0FB3  00B6               	movwf	___ftmul@cntr
  3448  0FB4                     l2399:	
  3449  0FB4  1C28               	btfss	___ftmul@f1,0
  3450  0FB5  2FBC               	goto	l2403
  3451  0FB6  082B               	movf	___ftmul@f2,w
  3452  0FB7  07B3               	addwf	___ftmul@f3_as_product,f
  3453  0FB8  082C               	movf	___ftmul@f2+1,w
  3454  0FB9  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  3455  0FBA  082D               	movf	___ftmul@f2+2,w
  3456  0FBB  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  3457  0FBC                     l2403:	
  3458  0FBC  3001               	movlw	1
  3459  0FBD                     u2865:	
  3460  0FBD  36AA               	lsrf	___ftmul@f1+2,f
  3461  0FBE  0CA9               	rrf	___ftmul@f1+1,f
  3462  0FBF  0CA8               	rrf	___ftmul@f1,f
  3463  0FC0  0B89               	decfsz	9,f
  3464  0FC1  2FBD               	goto	u2865
  3465  0FC2  3001               	movlw	1
  3466  0FC3                     u2875:	
  3467  0FC3  35AB               	lslf	___ftmul@f2,f
  3468  0FC4  0DAC               	rlf	___ftmul@f2+1,f
  3469  0FC5  0DAD               	rlf	___ftmul@f2+2,f
  3470  0FC6  0B89               	decfsz	9,f
  3471  0FC7  2FC3               	goto	u2875
  3472  0FC8  3001               	movlw	1
  3473  0FC9  02B6               	subwf	___ftmul@cntr,f
  3474  0FCA  1D03               	btfss	3,2
  3475  0FCB  2FB4               	goto	l2399
  3476  0FCC  3009               	movlw	9
  3477  0FCD  00AE               	movwf	??___ftmul
  3478  0FCE  082E               	movf	??___ftmul,w
  3479  0FCF  00B6               	movwf	___ftmul@cntr
  3480  0FD0                     l2411:	
  3481  0FD0  1C28               	btfss	___ftmul@f1,0
  3482  0FD1  2FD8               	goto	l2415
  3483  0FD2  082B               	movf	___ftmul@f2,w
  3484  0FD3  07B3               	addwf	___ftmul@f3_as_product,f
  3485  0FD4  082C               	movf	___ftmul@f2+1,w
  3486  0FD5  3DB4               	addwfc	___ftmul@f3_as_product+1,f
  3487  0FD6  082D               	movf	___ftmul@f2+2,w
  3488  0FD7  3DB5               	addwfc	___ftmul@f3_as_product+2,f
  3489  0FD8                     l2415:	
  3490  0FD8  3001               	movlw	1
  3491  0FD9                     u2905:	
  3492  0FD9  36AA               	lsrf	___ftmul@f1+2,f
  3493  0FDA  0CA9               	rrf	___ftmul@f1+1,f
  3494  0FDB  0CA8               	rrf	___ftmul@f1,f
  3495  0FDC  0B89               	decfsz	9,f
  3496  0FDD  2FD9               	goto	u2905
  3497  0FDE  3001               	movlw	1
  3498  0FDF                     u2915:	
  3499  0FDF  36B5               	lsrf	___ftmul@f3_as_product+2,f
  3500  0FE0  0CB4               	rrf	___ftmul@f3_as_product+1,f
  3501  0FE1  0CB3               	rrf	___ftmul@f3_as_product,f
  3502  0FE2  0B89               	decfsz	9,f
  3503  0FE3  2FDF               	goto	u2915
  3504  0FE4  3001               	movlw	1
  3505  0FE5  02B6               	subwf	___ftmul@cntr,f
  3506  0FE6  1D03               	btfss	3,2
  3507  0FE7  2FD0               	goto	l2411
  3508  0FE8  0833               	movf	___ftmul@f3_as_product,w
  3509  0FE9  00A0               	movwf	___ftpack@arg
  3510  0FEA  0834               	movf	___ftmul@f3_as_product+1,w
  3511  0FEB  00A1               	movwf	___ftpack@arg+1
  3512  0FEC  0835               	movf	___ftmul@f3_as_product+2,w
  3513  0FED  00A2               	movwf	___ftpack@arg+2
  3514  0FEE  0832               	movf	___ftmul@exp,w
  3515  0FEF  00AE               	movwf	??___ftmul
  3516  0FF0  082E               	movf	??___ftmul,w
  3517  0FF1  00A3               	movwf	___ftpack@exp
  3518  0FF2  0837               	movf	___ftmul@sign,w
  3519  0FF3  00AF               	movwf	??___ftmul+1
  3520  0FF4  082F               	movf	??___ftmul+1,w
  3521  0FF5  00A4               	movwf	___ftpack@sign
  3522  0FF6  318A  2285         	fcall	___ftpack
  3523  0FF8  0020               	movlb	0	; select bank0
  3524  0FF9  0820               	movf	?___ftpack,w
  3525  0FFA  00A8               	movwf	?___ftmul
  3526  0FFB  0821               	movf	?___ftpack+1,w
  3527  0FFC  00A9               	movwf	?___ftmul+1
  3528  0FFD  0822               	movf	?___ftpack+2,w
  3529  0FFE  00AA               	movwf	?___ftmul+2
  3530  0FFF  0008               	return
  3531  1000                     __end_of___ftmul:	
  3532                           
  3533                           	psect	text12
  3534  0DEF                     __ptext12:	
  3535 ;; *************** function ___ftdiv *****************
  3536 ;; Defined at:
  3537 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  f2              3   14[BANK0 ] float 
  3540 ;;  f1              3   17[BANK0 ] float 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  f3              3   25[BANK0 ] float 
  3543 ;;  sign            1   29[BANK0 ] unsigned char 
  3544 ;;  exp             1   28[BANK0 ] unsigned char 
  3545 ;;  cntr            1   24[BANK0 ] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  3   14[BANK0 ] float 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, pclath, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3555 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3556 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3557 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3558 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3559 ;;Total ram usage:       16 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    4
  3562 ;; This function calls:
  3563 ;;		___ftpack
  3564 ;; This function is called by:
  3565 ;;		_Set_Freq
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           
  3570                           ;psect for function ___ftdiv
  3571  0DEF                     ___ftdiv:	
  3572                           
  3573                           ;incstack = 0
  3574                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3575  0DEF  0020               	movlb	0	; select bank0
  3576  0DF0  0831               	movf	___ftdiv@f1,w
  3577  0DF1  00B4               	movwf	??___ftdiv
  3578  0DF2  0832               	movf	___ftdiv@f1+1,w
  3579  0DF3  00B5               	movwf	??___ftdiv+1
  3580  0DF4  0833               	movf	___ftdiv@f1+2,w
  3581  0DF5  00B6               	movwf	??___ftdiv+2
  3582  0DF6  1003               	clrc
  3583  0DF7  0D35               	rlf	??___ftdiv+1,w
  3584  0DF8  0D36               	rlf	??___ftdiv+2,w
  3585  0DF9  00B7               	movwf	??___ftdiv+3
  3586  0DFA  0837               	movf	??___ftdiv+3,w
  3587  0DFB  00BC               	movwf	___ftdiv@exp
  3588  0DFC  08BC               	movf	___ftdiv@exp,f
  3589  0DFD  1D03               	skipz
  3590  0DFE  2E06               	goto	l2339
  3591  0DFF  3000               	movlw	0
  3592  0E00  00AE               	movwf	?___ftdiv
  3593  0E01  3000               	movlw	0
  3594  0E02  00AF               	movwf	?___ftdiv+1
  3595  0E03  3000               	movlw	0
  3596  0E04  00B0               	movwf	?___ftdiv+2
  3597  0E05  0008               	return
  3598  0E06                     l2339:	
  3599  0E06  082E               	movf	___ftdiv@f2,w
  3600  0E07  00B4               	movwf	??___ftdiv
  3601  0E08  082F               	movf	___ftdiv@f2+1,w
  3602  0E09  00B5               	movwf	??___ftdiv+1
  3603  0E0A  0830               	movf	___ftdiv@f2+2,w
  3604  0E0B  00B6               	movwf	??___ftdiv+2
  3605  0E0C  1003               	clrc
  3606  0E0D  0D35               	rlf	??___ftdiv+1,w
  3607  0E0E  0D36               	rlf	??___ftdiv+2,w
  3608  0E0F  00B7               	movwf	??___ftdiv+3
  3609  0E10  0837               	movf	??___ftdiv+3,w
  3610  0E11  00BD               	movwf	___ftdiv@sign
  3611  0E12  08BD               	movf	___ftdiv@sign,f
  3612  0E13  1D03               	skipz
  3613  0E14  2E1C               	goto	l2345
  3614  0E15  3000               	movlw	0
  3615  0E16  00AE               	movwf	?___ftdiv
  3616  0E17  3000               	movlw	0
  3617  0E18  00AF               	movwf	?___ftdiv+1
  3618  0E19  3000               	movlw	0
  3619  0E1A  00B0               	movwf	?___ftdiv+2
  3620  0E1B  0008               	return
  3621  0E1C                     l2345:	
  3622  0E1C  3000               	movlw	0
  3623  0E1D  00B9               	movwf	___ftdiv@f3
  3624  0E1E  3000               	movlw	0
  3625  0E1F  00BA               	movwf	___ftdiv@f3+1
  3626  0E20  3000               	movlw	0
  3627  0E21  00BB               	movwf	___ftdiv@f3+2
  3628  0E22  3089               	movlw	137
  3629  0E23  073D               	addwf	___ftdiv@sign,w
  3630  0E24  00B4               	movwf	??___ftdiv
  3631  0E25  0834               	movf	??___ftdiv,w
  3632  0E26  02BC               	subwf	___ftdiv@exp,f
  3633  0E27  0831               	movf	___ftdiv@f1,w
  3634  0E28  00B4               	movwf	??___ftdiv
  3635  0E29  0832               	movf	___ftdiv@f1+1,w
  3636  0E2A  00B5               	movwf	??___ftdiv+1
  3637  0E2B  0833               	movf	___ftdiv@f1+2,w
  3638  0E2C  00B6               	movwf	??___ftdiv+2
  3639  0E2D  3010               	movlw	16
  3640  0E2E                     u2755:	
  3641  0E2E  36B6               	lsrf	??___ftdiv+2,f
  3642  0E2F  0CB5               	rrf	??___ftdiv+1,f
  3643  0E30  0CB4               	rrf	??___ftdiv,f
  3644  0E31  0B89               	decfsz	9,f
  3645  0E32  2E2E               	goto	u2755
  3646  0E33  0834               	movf	??___ftdiv,w
  3647  0E34  00B7               	movwf	??___ftdiv+3
  3648  0E35  0837               	movf	??___ftdiv+3,w
  3649  0E36  00BD               	movwf	___ftdiv@sign
  3650  0E37  082E               	movf	___ftdiv@f2,w
  3651  0E38  00B4               	movwf	??___ftdiv
  3652  0E39  082F               	movf	___ftdiv@f2+1,w
  3653  0E3A  00B5               	movwf	??___ftdiv+1
  3654  0E3B  0830               	movf	___ftdiv@f2+2,w
  3655  0E3C  00B6               	movwf	??___ftdiv+2
  3656  0E3D  3010               	movlw	16
  3657  0E3E                     u2765:	
  3658  0E3E  36B6               	lsrf	??___ftdiv+2,f
  3659  0E3F  0CB5               	rrf	??___ftdiv+1,f
  3660  0E40  0CB4               	rrf	??___ftdiv,f
  3661  0E41  0B89               	decfsz	9,f
  3662  0E42  2E3E               	goto	u2765
  3663  0E43  0834               	movf	??___ftdiv,w
  3664  0E44  00B7               	movwf	??___ftdiv+3
  3665  0E45  0837               	movf	??___ftdiv+3,w
  3666  0E46  06BD               	xorwf	___ftdiv@sign,f
  3667  0E47  3080               	movlw	128
  3668  0E48  00B4               	movwf	??___ftdiv
  3669  0E49  0834               	movf	??___ftdiv,w
  3670  0E4A  05BD               	andwf	___ftdiv@sign,f
  3671  0E4B  17B2               	bsf	___ftdiv@f1+1,7
  3672  0E4C  30FF               	movlw	255
  3673  0E4D  05B1               	andwf	___ftdiv@f1,f
  3674  0E4E  30FF               	movlw	255
  3675  0E4F  05B2               	andwf	___ftdiv@f1+1,f
  3676  0E50  3000               	movlw	0
  3677  0E51  05B3               	andwf	___ftdiv@f1+2,f
  3678  0E52  17AF               	bsf	___ftdiv@f2+1,7
  3679  0E53  30FF               	movlw	255
  3680  0E54  05AE               	andwf	___ftdiv@f2,f
  3681  0E55  30FF               	movlw	255
  3682  0E56  05AF               	andwf	___ftdiv@f2+1,f
  3683  0E57  3000               	movlw	0
  3684  0E58  05B0               	andwf	___ftdiv@f2+2,f
  3685  0E59  3018               	movlw	24
  3686  0E5A  00B4               	movwf	??___ftdiv
  3687  0E5B  0834               	movf	??___ftdiv,w
  3688  0E5C  00B8               	movwf	___ftdiv@cntr
  3689  0E5D                     l2359:	
  3690  0E5D  3001               	movlw	1
  3691  0E5E                     u2775:	
  3692  0E5E  35B9               	lslf	___ftdiv@f3,f
  3693  0E5F  0DBA               	rlf	___ftdiv@f3+1,f
  3694  0E60  0DBB               	rlf	___ftdiv@f3+2,f
  3695  0E61  0B89               	decfsz	9,f
  3696  0E62  2E5E               	goto	u2775
  3697  0E63  0830               	movf	___ftdiv@f2+2,w
  3698  0E64  0233               	subwf	___ftdiv@f1+2,w
  3699  0E65  1D03               	skipz
  3700  0E66  2E6D               	goto	u2785
  3701  0E67  082F               	movf	___ftdiv@f2+1,w
  3702  0E68  0232               	subwf	___ftdiv@f1+1,w
  3703  0E69  1D03               	skipz
  3704  0E6A  2E6D               	goto	u2785
  3705  0E6B  082E               	movf	___ftdiv@f2,w
  3706  0E6C  0231               	subwf	___ftdiv@f1,w
  3707  0E6D                     u2785:	
  3708  0E6D  1C03               	skipc
  3709  0E6E  2E76               	goto	l2367
  3710  0E6F  082E               	movf	___ftdiv@f2,w
  3711  0E70  02B1               	subwf	___ftdiv@f1,f
  3712  0E71  082F               	movf	___ftdiv@f2+1,w
  3713  0E72  3BB2               	subwfb	___ftdiv@f1+1,f
  3714  0E73  0830               	movf	___ftdiv@f2+2,w
  3715  0E74  3BB3               	subwfb	___ftdiv@f1+2,f
  3716  0E75  1439               	bsf	___ftdiv@f3,0
  3717  0E76                     l2367:	
  3718  0E76  3001               	movlw	1
  3719  0E77                     u2795:	
  3720  0E77  35B1               	lslf	___ftdiv@f1,f
  3721  0E78  0DB2               	rlf	___ftdiv@f1+1,f
  3722  0E79  0DB3               	rlf	___ftdiv@f1+2,f
  3723  0E7A  0B89               	decfsz	9,f
  3724  0E7B  2E77               	goto	u2795
  3725  0E7C  3001               	movlw	1
  3726  0E7D  02B8               	subwf	___ftdiv@cntr,f
  3727  0E7E  1D03               	btfss	3,2
  3728  0E7F  2E5D               	goto	l2359
  3729  0E80  0839               	movf	___ftdiv@f3,w
  3730  0E81  00A0               	movwf	___ftpack@arg
  3731  0E82  083A               	movf	___ftdiv@f3+1,w
  3732  0E83  00A1               	movwf	___ftpack@arg+1
  3733  0E84  083B               	movf	___ftdiv@f3+2,w
  3734  0E85  00A2               	movwf	___ftpack@arg+2
  3735  0E86  083C               	movf	___ftdiv@exp,w
  3736  0E87  00B4               	movwf	??___ftdiv
  3737  0E88  0834               	movf	??___ftdiv,w
  3738  0E89  00A3               	movwf	___ftpack@exp
  3739  0E8A  083D               	movf	___ftdiv@sign,w
  3740  0E8B  00B5               	movwf	??___ftdiv+1
  3741  0E8C  0835               	movf	??___ftdiv+1,w
  3742  0E8D  00A4               	movwf	___ftpack@sign
  3743  0E8E  318A  2285         	fcall	___ftpack
  3744  0E90  0020               	movlb	0	; select bank0
  3745  0E91  0820               	movf	?___ftpack,w
  3746  0E92  00AE               	movwf	?___ftdiv
  3747  0E93  0821               	movf	?___ftpack+1,w
  3748  0E94  00AF               	movwf	?___ftdiv+1
  3749  0E95  0822               	movf	?___ftpack+2,w
  3750  0E96  00B0               	movwf	?___ftdiv+2
  3751  0E97  0008               	return
  3752  0E98                     __end_of___ftdiv:	
  3753                           
  3754                           	psect	text13
  3755  02E6                     __ptext13:	
  3756 ;; *************** function ___ftadd *****************
  3757 ;; Defined at:
  3758 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;  f1              3   17[BANK0 ] float 
  3761 ;;  f2              3   20[BANK0 ] float 
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;  exp1            1   29[BANK0 ] unsigned char 
  3764 ;;  exp2            1   28[BANK0 ] unsigned char 
  3765 ;;  sign            1   27[BANK0 ] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  3   17[BANK0 ] float 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, pclath, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3775 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3776 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3777 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3778 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;Total ram usage:       13 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    4
  3782 ;; This function calls:
  3783 ;;		___ftpack
  3784 ;; This function is called by:
  3785 ;;		_Set_Freq
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           
  3790                           ;psect for function ___ftadd
  3791  02E6                     ___ftadd:	
  3792                           
  3793                           ;incstack = 0
  3794                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3795  02E6  0020               	movlb	0	; select bank0
  3796  02E7  0831               	movf	___ftadd@f1,w
  3797  02E8  00B7               	movwf	??___ftadd
  3798  02E9  0832               	movf	___ftadd@f1+1,w
  3799  02EA  00B8               	movwf	??___ftadd+1
  3800  02EB  0833               	movf	___ftadd@f1+2,w
  3801  02EC  00B9               	movwf	??___ftadd+2
  3802  02ED  1003               	clrc
  3803  02EE  0D38               	rlf	??___ftadd+1,w
  3804  02EF  0D39               	rlf	??___ftadd+2,w
  3805  02F0  00BA               	movwf	??___ftadd+3
  3806  02F1  083A               	movf	??___ftadd+3,w
  3807  02F2  00BD               	movwf	___ftadd@exp1
  3808  02F3  0834               	movf	___ftadd@f2,w
  3809  02F4  00B7               	movwf	??___ftadd
  3810  02F5  0835               	movf	___ftadd@f2+1,w
  3811  02F6  00B8               	movwf	??___ftadd+1
  3812  02F7  0836               	movf	___ftadd@f2+2,w
  3813  02F8  00B9               	movwf	??___ftadd+2
  3814  02F9  1003               	clrc
  3815  02FA  0D38               	rlf	??___ftadd+1,w
  3816  02FB  0D39               	rlf	??___ftadd+2,w
  3817  02FC  00BA               	movwf	??___ftadd+3
  3818  02FD  083A               	movf	??___ftadd+3,w
  3819  02FE  00BC               	movwf	___ftadd@exp2
  3820  02FF  083D               	movf	___ftadd@exp1,w
  3821  0300  1903               	btfsc	3,2
  3822  0301  2B0E               	goto	l2269
  3823  0302  083C               	movf	___ftadd@exp2,w
  3824  0303  023D               	subwf	___ftadd@exp1,w
  3825  0304  1803               	skipnc
  3826  0305  2B15               	goto	l2273
  3827  0306  033D               	decf	___ftadd@exp1,w
  3828  0307  3AFF               	xorlw	255
  3829  0308  073C               	addwf	___ftadd@exp2,w
  3830  0309  00B7               	movwf	??___ftadd
  3831  030A  3019               	movlw	25
  3832  030B  0237               	subwf	??___ftadd,w
  3833  030C  1C03               	skipc
  3834  030D  2B15               	goto	l2273
  3835  030E                     l2269:	
  3836  030E  0834               	movf	___ftadd@f2,w
  3837  030F  00B1               	movwf	?___ftadd
  3838  0310  0835               	movf	___ftadd@f2+1,w
  3839  0311  00B2               	movwf	?___ftadd+1
  3840  0312  0836               	movf	___ftadd@f2+2,w
  3841  0313  00B3               	movwf	?___ftadd+2
  3842  0314  0008               	return
  3843  0315                     l2273:	
  3844  0315  083C               	movf	___ftadd@exp2,w
  3845  0316  1903               	btfsc	3,2
  3846  0317  0008               	return
  3847  0318  083D               	movf	___ftadd@exp1,w
  3848  0319  023C               	subwf	___ftadd@exp2,w
  3849  031A  1803               	skipnc
  3850  031B  2B24               	goto	l2279
  3851  031C  033C               	decf	___ftadd@exp2,w
  3852  031D  3AFF               	xorlw	255
  3853  031E  073D               	addwf	___ftadd@exp1,w
  3854  031F  00B7               	movwf	??___ftadd
  3855  0320  3019               	movlw	25
  3856  0321  0237               	subwf	??___ftadd,w
  3857  0322  1803               	btfsc	3,0
  3858  0323  0008               	return
  3859  0324                     l2279:	
  3860  0324  3006               	movlw	6
  3861  0325  00B7               	movwf	??___ftadd
  3862  0326  0837               	movf	??___ftadd,w
  3863  0327  00BB               	movwf	___ftadd@sign
  3864  0328  1BB3               	btfsc	___ftadd@f1+2,7
  3865  0329  17BB               	bsf	___ftadd@sign,7
  3866  032A  1BB6               	btfsc	___ftadd@f2+2,7
  3867  032B  173B               	bsf	___ftadd@sign,6
  3868  032C  17B2               	bsf	___ftadd@f1+1,7
  3869  032D  30FF               	movlw	255
  3870  032E  05B1               	andwf	___ftadd@f1,f
  3871  032F  30FF               	movlw	255
  3872  0330  05B2               	andwf	___ftadd@f1+1,f
  3873  0331  3000               	movlw	0
  3874  0332  05B3               	andwf	___ftadd@f1+2,f
  3875  0333  17B5               	bsf	___ftadd@f2+1,7
  3876  0334  30FF               	movlw	255
  3877  0335  05B4               	andwf	___ftadd@f2,f
  3878  0336  30FF               	movlw	255
  3879  0337  05B5               	andwf	___ftadd@f2+1,f
  3880  0338  3000               	movlw	0
  3881  0339  05B6               	andwf	___ftadd@f2+2,f
  3882  033A  083C               	movf	___ftadd@exp2,w
  3883  033B  023D               	subwf	___ftadd@exp1,w
  3884  033C  1803               	skipnc
  3885  033D  2B60               	goto	l2301
  3886  033E                     l2291:	
  3887  033E  3001               	movlw	1
  3888  033F                     u2595:	
  3889  033F  35B4               	lslf	___ftadd@f2,f
  3890  0340  0DB5               	rlf	___ftadd@f2+1,f
  3891  0341  0DB6               	rlf	___ftadd@f2+2,f
  3892  0342  0B89               	decfsz	9,f
  3893  0343  2B3F               	goto	u2595
  3894  0344  3001               	movlw	1
  3895  0345  02BC               	subwf	___ftadd@exp2,f
  3896  0346  083C               	movf	___ftadd@exp2,w
  3897  0347  063D               	xorwf	___ftadd@exp1,w
  3898  0348  1903               	skipnz
  3899  0349  2B5B               	goto	l2299
  3900  034A  3001               	movlw	1
  3901  034B  02BB               	subwf	___ftadd@sign,f
  3902  034C  083B               	movf	___ftadd@sign,w
  3903  034D  3907               	andlw	7
  3904  034E  1903               	btfsc	3,2
  3905  034F  2B5B               	goto	l2299
  3906  0350  2B3E               	goto	l2291
  3907  0351                     l2297:	
  3908  0351  3001               	movlw	1
  3909  0352                     u2625:	
  3910  0352  36B3               	lsrf	___ftadd@f1+2,f
  3911  0353  0CB2               	rrf	___ftadd@f1+1,f
  3912  0354  0CB1               	rrf	___ftadd@f1,f
  3913  0355  0B89               	decfsz	9,f
  3914  0356  2B52               	goto	u2625
  3915  0357  3001               	movlw	1
  3916  0358  00B7               	movwf	??___ftadd
  3917  0359  0837               	movf	??___ftadd,w
  3918  035A  07BD               	addwf	___ftadd@exp1,f
  3919  035B                     l2299:	
  3920  035B  083D               	movf	___ftadd@exp1,w
  3921  035C  063C               	xorwf	___ftadd@exp2,w
  3922  035D  1903               	btfsc	3,2
  3923  035E  2B85               	goto	l772
  3924  035F  2B51               	goto	l2297
  3925  0360                     l2301:	
  3926  0360  083D               	movf	___ftadd@exp1,w
  3927  0361  023C               	subwf	___ftadd@exp2,w
  3928  0362  1803               	skipnc
  3929  0363  2B85               	goto	l772
  3930  0364                     l2303:	
  3931  0364  3001               	movlw	1
  3932  0365                     u2655:	
  3933  0365  35B1               	lslf	___ftadd@f1,f
  3934  0366  0DB2               	rlf	___ftadd@f1+1,f
  3935  0367  0DB3               	rlf	___ftadd@f1+2,f
  3936  0368  0B89               	decfsz	9,f
  3937  0369  2B65               	goto	u2655
  3938  036A  3001               	movlw	1
  3939  036B  02BD               	subwf	___ftadd@exp1,f
  3940  036C  083C               	movf	___ftadd@exp2,w
  3941  036D  063D               	xorwf	___ftadd@exp1,w
  3942  036E  1903               	skipnz
  3943  036F  2B81               	goto	l2311
  3944  0370  3001               	movlw	1
  3945  0371  02BB               	subwf	___ftadd@sign,f
  3946  0372  083B               	movf	___ftadd@sign,w
  3947  0373  3907               	andlw	7
  3948  0374  1903               	btfsc	3,2
  3949  0375  2B81               	goto	l2311
  3950  0376  2B64               	goto	l2303
  3951  0377                     l2309:	
  3952  0377  3001               	movlw	1
  3953  0378                     u2685:	
  3954  0378  36B6               	lsrf	___ftadd@f2+2,f
  3955  0379  0CB5               	rrf	___ftadd@f2+1,f
  3956  037A  0CB4               	rrf	___ftadd@f2,f
  3957  037B  0B89               	decfsz	9,f
  3958  037C  2B78               	goto	u2685
  3959  037D  3001               	movlw	1
  3960  037E  00B7               	movwf	??___ftadd
  3961  037F  0837               	movf	??___ftadd,w
  3962  0380  07BC               	addwf	___ftadd@exp2,f
  3963  0381                     l2311:	
  3964  0381  083D               	movf	___ftadd@exp1,w
  3965  0382  063C               	xorwf	___ftadd@exp2,w
  3966  0383  1D03               	skipz
  3967  0384  2B77               	goto	l2309
  3968  0385                     l772:	
  3969  0385  1FBB               	btfss	___ftadd@sign,7
  3970  0386  2B97               	goto	l2315
  3971  0387  30FF               	movlw	255
  3972  0388  06B1               	xorwf	___ftadd@f1,f
  3973  0389  30FF               	movlw	255
  3974  038A  06B2               	xorwf	___ftadd@f1+1,f
  3975  038B  30FF               	movlw	255
  3976  038C  06B3               	xorwf	___ftadd@f1+2,f
  3977  038D  3001               	movlw	1
  3978  038E  07B1               	addwf	___ftadd@f1,f
  3979  038F  3000               	movlw	0
  3980  0390  1803               	skipnc
  3981  0391  3001               	movlw	1
  3982  0392  07B2               	addwf	___ftadd@f1+1,f
  3983  0393  3000               	movlw	0
  3984  0394  1803               	skipnc
  3985  0395  3001               	movlw	1
  3986  0396  07B3               	addwf	___ftadd@f1+2,f
  3987  0397                     l2315:	
  3988  0397  1F3B               	btfss	___ftadd@sign,6
  3989  0398  2BA9               	goto	l2319
  3990  0399  30FF               	movlw	255
  3991  039A  06B4               	xorwf	___ftadd@f2,f
  3992  039B  30FF               	movlw	255
  3993  039C  06B5               	xorwf	___ftadd@f2+1,f
  3994  039D  30FF               	movlw	255
  3995  039E  06B6               	xorwf	___ftadd@f2+2,f
  3996  039F  3001               	movlw	1
  3997  03A0  07B4               	addwf	___ftadd@f2,f
  3998  03A1  3000               	movlw	0
  3999  03A2  1803               	skipnc
  4000  03A3  3001               	movlw	1
  4001  03A4  07B5               	addwf	___ftadd@f2+1,f
  4002  03A5  3000               	movlw	0
  4003  03A6  1803               	skipnc
  4004  03A7  3001               	movlw	1
  4005  03A8  07B6               	addwf	___ftadd@f2+2,f
  4006  03A9                     l2319:	
  4007  03A9  01BB               	clrf	___ftadd@sign
  4008  03AA  0831               	movf	___ftadd@f1,w
  4009  03AB  07B4               	addwf	___ftadd@f2,f
  4010  03AC  0832               	movf	___ftadd@f1+1,w
  4011  03AD  3DB5               	addwfc	___ftadd@f2+1,f
  4012  03AE  0833               	movf	___ftadd@f1+2,w
  4013  03AF  3DB6               	addwfc	___ftadd@f2+2,f
  4014  03B0  1FB6               	btfss	___ftadd@f2+2,7
  4015  03B1  2BC4               	goto	l2329
  4016  03B2  30FF               	movlw	255
  4017  03B3  06B4               	xorwf	___ftadd@f2,f
  4018  03B4  30FF               	movlw	255
  4019  03B5  06B5               	xorwf	___ftadd@f2+1,f
  4020  03B6  30FF               	movlw	255
  4021  03B7  06B6               	xorwf	___ftadd@f2+2,f
  4022  03B8  3001               	movlw	1
  4023  03B9  07B4               	addwf	___ftadd@f2,f
  4024  03BA  3000               	movlw	0
  4025  03BB  1803               	skipnc
  4026  03BC  3001               	movlw	1
  4027  03BD  07B5               	addwf	___ftadd@f2+1,f
  4028  03BE  3000               	movlw	0
  4029  03BF  1803               	skipnc
  4030  03C0  3001               	movlw	1
  4031  03C1  07B6               	addwf	___ftadd@f2+2,f
  4032  03C2  01BB               	clrf	___ftadd@sign
  4033  03C3  0ABB               	incf	___ftadd@sign,f
  4034  03C4                     l2329:	
  4035  03C4  0834               	movf	___ftadd@f2,w
  4036  03C5  00A0               	movwf	___ftpack@arg
  4037  03C6  0835               	movf	___ftadd@f2+1,w
  4038  03C7  00A1               	movwf	___ftpack@arg+1
  4039  03C8  0836               	movf	___ftadd@f2+2,w
  4040  03C9  00A2               	movwf	___ftpack@arg+2
  4041  03CA  083D               	movf	___ftadd@exp1,w
  4042  03CB  00B7               	movwf	??___ftadd
  4043  03CC  0837               	movf	??___ftadd,w
  4044  03CD  00A3               	movwf	___ftpack@exp
  4045  03CE  083B               	movf	___ftadd@sign,w
  4046  03CF  00B8               	movwf	??___ftadd+1
  4047  03D0  0838               	movf	??___ftadd+1,w
  4048  03D1  00A4               	movwf	___ftpack@sign
  4049  03D2  318A  2285         	fcall	___ftpack
  4050  03D4  0020               	movlb	0	; select bank0
  4051  03D5  0820               	movf	?___ftpack,w
  4052  03D6  00B1               	movwf	?___ftadd
  4053  03D7  0821               	movf	?___ftpack+1,w
  4054  03D8  00B2               	movwf	?___ftadd+1
  4055  03D9  0822               	movf	?___ftpack+2,w
  4056  03DA  00B3               	movwf	?___ftadd+2
  4057  03DB  0008               	return
  4058  03DC                     __end_of___ftadd:	
  4059                           
  4060                           	psect	text14
  4061  0A85                     __ptext14:	
  4062 ;; *************** function ___ftpack *****************
  4063 ;; Defined at:
  4064 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  arg             3    0[BANK0 ] unsigned um
  4067 ;;  exp             1    3[BANK0 ] unsigned char 
  4068 ;;  sign            1    4[BANK0 ] unsigned char 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  3    0[BANK0 ] float 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4080 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4082 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4083 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4084 ;;Total ram usage:        8 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:    3
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		___ftadd
  4091 ;;		___ftdiv
  4092 ;;		___ftmul
  4093 ;;		___lltoft
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           
  4098                           ;psect for function ___ftpack
  4099  0A85                     ___ftpack:	
  4100                           
  4101                           ;incstack = 0
  4102                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4103  0A85  0020               	movlb	0	; select bank0
  4104  0A86  0823               	movf	___ftpack@exp,w
  4105  0A87  1903               	btfsc	3,2
  4106  0A88  2A8E               	goto	l2127
  4107  0A89  0822               	movf	___ftpack@arg+2,w
  4108  0A8A  0421               	iorwf	___ftpack@arg+1,w
  4109  0A8B  0420               	iorwf	___ftpack@arg,w
  4110  0A8C  1D03               	skipz
  4111  0A8D  2A9F               	goto	l2133
  4112  0A8E                     l2127:	
  4113  0A8E  3000               	movlw	0
  4114  0A8F  00A0               	movwf	?___ftpack
  4115  0A90  3000               	movlw	0
  4116  0A91  00A1               	movwf	?___ftpack+1
  4117  0A92  3000               	movlw	0
  4118  0A93  00A2               	movwf	?___ftpack+2
  4119  0A94  0008               	return
  4120  0A95                     l2131:	
  4121  0A95  3001               	movlw	1
  4122  0A96  00A5               	movwf	??___ftpack
  4123  0A97  0825               	movf	??___ftpack,w
  4124  0A98  07A3               	addwf	___ftpack@exp,f
  4125  0A99  3001               	movlw	1
  4126  0A9A                     u2305:	
  4127  0A9A  36A2               	lsrf	___ftpack@arg+2,f
  4128  0A9B  0CA1               	rrf	___ftpack@arg+1,f
  4129  0A9C  0CA0               	rrf	___ftpack@arg,f
  4130  0A9D  0B89               	decfsz	9,f
  4131  0A9E  2A9A               	goto	u2305
  4132  0A9F                     l2133:	
  4133  0A9F  30FE               	movlw	254
  4134  0AA0  0522               	andwf	___ftpack@arg+2,w
  4135  0AA1  1903               	btfsc	3,2
  4136  0AA2  2AB8               	goto	l743
  4137  0AA3  2A95               	goto	l2131
  4138  0AA4                     l2135:	
  4139  0AA4  3001               	movlw	1
  4140  0AA5  00A5               	movwf	??___ftpack
  4141  0AA6  0825               	movf	??___ftpack,w
  4142  0AA7  07A3               	addwf	___ftpack@exp,f
  4143  0AA8  3001               	movlw	1
  4144  0AA9  07A0               	addwf	___ftpack@arg,f
  4145  0AAA  3000               	movlw	0
  4146  0AAB  1803               	skipnc
  4147  0AAC  3001               	movlw	1
  4148  0AAD  07A1               	addwf	___ftpack@arg+1,f
  4149  0AAE  3000               	movlw	0
  4150  0AAF  1803               	skipnc
  4151  0AB0  3001               	movlw	1
  4152  0AB1  07A2               	addwf	___ftpack@arg+2,f
  4153  0AB2  3001               	movlw	1
  4154  0AB3                     u2325:	
  4155  0AB3  36A2               	lsrf	___ftpack@arg+2,f
  4156  0AB4  0CA1               	rrf	___ftpack@arg+1,f
  4157  0AB5  0CA0               	rrf	___ftpack@arg,f
  4158  0AB6  0B89               	decfsz	9,f
  4159  0AB7  2AB3               	goto	u2325
  4160  0AB8                     l743:	
  4161  0AB8  30FF               	movlw	255
  4162  0AB9  0522               	andwf	___ftpack@arg+2,w
  4163  0ABA  1903               	btfsc	3,2
  4164  0ABB  2AC5               	goto	l2143
  4165  0ABC  2AA4               	goto	l2135
  4166  0ABD                     l2141:	
  4167  0ABD  3001               	movlw	1
  4168  0ABE  02A3               	subwf	___ftpack@exp,f
  4169  0ABF  3001               	movlw	1
  4170  0AC0                     u2345:	
  4171  0AC0  35A0               	lslf	___ftpack@arg,f
  4172  0AC1  0DA1               	rlf	___ftpack@arg+1,f
  4173  0AC2  0DA2               	rlf	___ftpack@arg+2,f
  4174  0AC3  0B89               	decfsz	9,f
  4175  0AC4  2AC0               	goto	u2345
  4176  0AC5                     l2143:	
  4177  0AC5  1FA1               	btfss	___ftpack@arg+1,7
  4178  0AC6  2ABD               	goto	l2141
  4179  0AC7  1823               	btfsc	___ftpack@exp,0
  4180  0AC8  2ACF               	goto	l749
  4181  0AC9  30FF               	movlw	255
  4182  0ACA  05A0               	andwf	___ftpack@arg,f
  4183  0ACB  307F               	movlw	127
  4184  0ACC  05A1               	andwf	___ftpack@arg+1,f
  4185  0ACD  30FF               	movlw	255
  4186  0ACE  05A2               	andwf	___ftpack@arg+2,f
  4187  0ACF                     l749:	
  4188  0ACF  1003               	clrc
  4189  0AD0  0CA3               	rrf	___ftpack@exp,f
  4190  0AD1  0823               	movf	___ftpack@exp,w
  4191  0AD2  00A5               	movwf	??___ftpack
  4192  0AD3  01A6               	clrf	??___ftpack+1
  4193  0AD4  01A7               	clrf	??___ftpack+2
  4194  0AD5  3010               	movlw	16
  4195  0AD6                     u2375:	
  4196  0AD6  35A5               	lslf	??___ftpack,f
  4197  0AD7  0DA6               	rlf	??___ftpack+1,f
  4198  0AD8  0DA7               	rlf	??___ftpack+2,f
  4199  0AD9  0B89               	decfsz	9,f
  4200  0ADA  2AD6               	goto	u2375
  4201  0ADB  0825               	movf	??___ftpack,w
  4202  0ADC  04A0               	iorwf	___ftpack@arg,f
  4203  0ADD  0826               	movf	??___ftpack+1,w
  4204  0ADE  04A1               	iorwf	___ftpack@arg+1,f
  4205  0ADF  0827               	movf	??___ftpack+2,w
  4206  0AE0  04A2               	iorwf	___ftpack@arg+2,f
  4207  0AE1  0824               	movf	___ftpack@sign,w
  4208  0AE2  1903               	btfsc	3,2
  4209  0AE3  0008               	return
  4210  0AE4  17A2               	bsf	___ftpack@arg+2,7
  4211  0AE5  0008               	return
  4212  0AE6                     __end_of___ftpack:	
  4213                           
  4214                           	psect	text15
  4215  077B                     __ptext15:	
  4216 ;; *************** function ___aldiv *****************
  4217 ;; Defined at:
  4218 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  divisor         4    0[BANK0 ] long 
  4221 ;;  dividend        4    4[BANK0 ] long 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  quotient        4   11[BANK0 ] long 
  4224 ;;  sign            1   10[BANK0 ] unsigned char 
  4225 ;;  counter         1    9[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  4    0[BANK0 ] long 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4235 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;Total ram usage:       15 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    3
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_Set_Freq
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function ___aldiv
  4251  077B                     ___aldiv:	
  4252                           
  4253                           ;incstack = 0
  4254                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4255  077B  0020               	movlb	0	; select bank0
  4256  077C  01AA               	clrf	___aldiv@sign
  4257  077D  1FA3               	btfss	___aldiv@divisor+3,7
  4258  077E  2F8C               	goto	l637
  4259  077F  09A0               	comf	___aldiv@divisor,f
  4260  0780  09A1               	comf	___aldiv@divisor+1,f
  4261  0781  09A2               	comf	___aldiv@divisor+2,f
  4262  0782  09A3               	comf	___aldiv@divisor+3,f
  4263  0783  0AA0               	incf	___aldiv@divisor,f
  4264  0784  1903               	skipnz
  4265  0785  0AA1               	incf	___aldiv@divisor+1,f
  4266  0786  1903               	skipnz
  4267  0787  0AA2               	incf	___aldiv@divisor+2,f
  4268  0788  1903               	skipnz
  4269  0789  0AA3               	incf	___aldiv@divisor+3,f
  4270  078A  01AA               	clrf	___aldiv@sign
  4271  078B  0AAA               	incf	___aldiv@sign,f
  4272  078C                     l637:	
  4273  078C  1FA7               	btfss	___aldiv@dividend+3,7
  4274  078D  2F9D               	goto	l2231
  4275  078E  09A4               	comf	___aldiv@dividend,f
  4276  078F  09A5               	comf	___aldiv@dividend+1,f
  4277  0790  09A6               	comf	___aldiv@dividend+2,f
  4278  0791  09A7               	comf	___aldiv@dividend+3,f
  4279  0792  0AA4               	incf	___aldiv@dividend,f
  4280  0793  1903               	skipnz
  4281  0794  0AA5               	incf	___aldiv@dividend+1,f
  4282  0795  1903               	skipnz
  4283  0796  0AA6               	incf	___aldiv@dividend+2,f
  4284  0797  1903               	skipnz
  4285  0798  0AA7               	incf	___aldiv@dividend+3,f
  4286  0799  3001               	movlw	1
  4287  079A  00A8               	movwf	??___aldiv
  4288  079B  0828               	movf	??___aldiv,w
  4289  079C  06AA               	xorwf	___aldiv@sign,f
  4290  079D                     l2231:	
  4291  079D  3000               	movlw	0
  4292  079E  00AE               	movwf	___aldiv@quotient+3
  4293  079F  3000               	movlw	0
  4294  07A0  00AD               	movwf	___aldiv@quotient+2
  4295  07A1  3000               	movlw	0
  4296  07A2  00AC               	movwf	___aldiv@quotient+1
  4297  07A3  3000               	movlw	0
  4298  07A4  00AB               	movwf	___aldiv@quotient
  4299  07A5  0823               	movf	___aldiv@divisor+3,w
  4300  07A6  0422               	iorwf	___aldiv@divisor+2,w
  4301  07A7  0421               	iorwf	___aldiv@divisor+1,w
  4302  07A8  0420               	iorwf	___aldiv@divisor,w
  4303  07A9  1903               	skipnz
  4304  07AA  2FE6               	goto	l2253
  4305  07AB  01A9               	clrf	___aldiv@counter
  4306  07AC  0AA9               	incf	___aldiv@counter,f
  4307  07AD                     l2239:	
  4308  07AD  1BA3               	btfsc	___aldiv@divisor+3,7
  4309  07AE  2FBB               	goto	l2241
  4310  07AF  3001               	movlw	1
  4311  07B0                     u2435:	
  4312  07B0  35A0               	lslf	___aldiv@divisor,f
  4313  07B1  0DA1               	rlf	___aldiv@divisor+1,f
  4314  07B2  0DA2               	rlf	___aldiv@divisor+2,f
  4315  07B3  0DA3               	rlf	___aldiv@divisor+3,f
  4316  07B4  0B89               	decfsz	9,f
  4317  07B5  2FB0               	goto	u2435
  4318  07B6  3001               	movlw	1
  4319  07B7  00A8               	movwf	??___aldiv
  4320  07B8  0828               	movf	??___aldiv,w
  4321  07B9  07A9               	addwf	___aldiv@counter,f
  4322  07BA  2FAD               	goto	l2239
  4323  07BB                     l2241:	
  4324  07BB  3001               	movlw	1
  4325  07BC                     u2455:	
  4326  07BC  35AB               	lslf	___aldiv@quotient,f
  4327  07BD  0DAC               	rlf	___aldiv@quotient+1,f
  4328  07BE  0DAD               	rlf	___aldiv@quotient+2,f
  4329  07BF  0DAE               	rlf	___aldiv@quotient+3,f
  4330  07C0  0B89               	decfsz	9,f
  4331  07C1  2FBC               	goto	u2455
  4332  07C2  0823               	movf	___aldiv@divisor+3,w
  4333  07C3  0227               	subwf	___aldiv@dividend+3,w
  4334  07C4  1D03               	skipz
  4335  07C5  2FD0               	goto	u2465
  4336  07C6  0822               	movf	___aldiv@divisor+2,w
  4337  07C7  0226               	subwf	___aldiv@dividend+2,w
  4338  07C8  1D03               	skipz
  4339  07C9  2FD0               	goto	u2465
  4340  07CA  0821               	movf	___aldiv@divisor+1,w
  4341  07CB  0225               	subwf	___aldiv@dividend+1,w
  4342  07CC  1D03               	skipz
  4343  07CD  2FD0               	goto	u2465
  4344  07CE  0820               	movf	___aldiv@divisor,w
  4345  07CF  0224               	subwf	___aldiv@dividend,w
  4346  07D0                     u2465:	
  4347  07D0  1C03               	skipc
  4348  07D1  2FDB               	goto	l2249
  4349  07D2  0820               	movf	___aldiv@divisor,w
  4350  07D3  02A4               	subwf	___aldiv@dividend,f
  4351  07D4  0821               	movf	___aldiv@divisor+1,w
  4352  07D5  3BA5               	subwfb	___aldiv@dividend+1,f
  4353  07D6  0822               	movf	___aldiv@divisor+2,w
  4354  07D7  3BA6               	subwfb	___aldiv@dividend+2,f
  4355  07D8  0823               	movf	___aldiv@divisor+3,w
  4356  07D9  3BA7               	subwfb	___aldiv@dividend+3,f
  4357  07DA  142B               	bsf	___aldiv@quotient,0
  4358  07DB                     l2249:	
  4359  07DB  3001               	movlw	1
  4360  07DC                     u2475:	
  4361  07DC  36A3               	lsrf	___aldiv@divisor+3,f
  4362  07DD  0CA2               	rrf	___aldiv@divisor+2,f
  4363  07DE  0CA1               	rrf	___aldiv@divisor+1,f
  4364  07DF  0CA0               	rrf	___aldiv@divisor,f
  4365  07E0  0B89               	decfsz	9,f
  4366  07E1  2FDC               	goto	u2475
  4367  07E2  3001               	movlw	1
  4368  07E3  02A9               	subwf	___aldiv@counter,f
  4369  07E4  1D03               	btfss	3,2
  4370  07E5  2FBB               	goto	l2241
  4371  07E6                     l2253:	
  4372  07E6  082A               	movf	___aldiv@sign,w
  4373  07E7  1903               	btfsc	3,2
  4374  07E8  2FF4               	goto	l2257
  4375  07E9  09AB               	comf	___aldiv@quotient,f
  4376  07EA  09AC               	comf	___aldiv@quotient+1,f
  4377  07EB  09AD               	comf	___aldiv@quotient+2,f
  4378  07EC  09AE               	comf	___aldiv@quotient+3,f
  4379  07ED  0AAB               	incf	___aldiv@quotient,f
  4380  07EE  1903               	skipnz
  4381  07EF  0AAC               	incf	___aldiv@quotient+1,f
  4382  07F0  1903               	skipnz
  4383  07F1  0AAD               	incf	___aldiv@quotient+2,f
  4384  07F2  1903               	skipnz
  4385  07F3  0AAE               	incf	___aldiv@quotient+3,f
  4386  07F4                     l2257:	
  4387  07F4  082E               	movf	___aldiv@quotient+3,w
  4388  07F5  00A3               	movwf	?___aldiv+3
  4389  07F6  082D               	movf	___aldiv@quotient+2,w
  4390  07F7  00A2               	movwf	?___aldiv+2
  4391  07F8  082C               	movf	___aldiv@quotient+1,w
  4392  07F9  00A1               	movwf	?___aldiv+1
  4393  07FA  082B               	movf	___aldiv@quotient,w
  4394  07FB  00A0               	movwf	?___aldiv
  4395  07FC  0008               	return
  4396  07FD                     __end_of___aldiv:	
  4397                           
  4398                           	psect	text16
  4399  175B                     __ptext16:	
  4400 ;; *************** function _Gpio_Config *****************
  4401 ;; Defined at:
  4402 ;;		line 33 in file "utility.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;		None
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;		None
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      unsigned char 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;Total ram usage:        1 bytes
  4421 ;; Hardware stack levels used:    1
  4422 ;; Hardware stack levels required when called:    3
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_main
  4427 ;;		_Radio_Setup
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           
  4432                           ;psect for function _Gpio_Config
  4433  175B                     _Gpio_Config:	
  4434                           
  4435                           ;utility.c: 36: TRISA |= 0b00000010;
  4436                           
  4437                           ;incstack = 0
  4438                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  4439  175B  0021               	movlb	1	; select bank1
  4440  175C  148C               	bsf	12,1	;volatile
  4441                           
  4442                           ;utility.c: 37: TRISA &= 0b11001011;
  4443  175D  30CB               	movlw	203
  4444  175E  0020               	movlb	0	; select bank0
  4445  175F  00A0               	movwf	??_Gpio_Config
  4446  1760  0820               	movf	??_Gpio_Config,w
  4447  1761  0021               	movlb	1	; select bank1
  4448  1762  058C               	andwf	12,f	;volatile
  4449                           
  4450                           ;utility.c: 38: TRISC |= 0b00100000;
  4451  1763  168E               	bsf	14,5	;volatile
  4452                           
  4453                           ;utility.c: 39: TRISC &= 0b11100000;
  4454  1764  30E0               	movlw	224
  4455  1765  0020               	movlb	0	; select bank0
  4456  1766  00A0               	movwf	??_Gpio_Config
  4457  1767  0820               	movf	??_Gpio_Config,w
  4458  1768  0021               	movlb	1	; select bank1
  4459  1769  058E               	andwf	14,f	;volatile
  4460  176A  0008               	return
  4461  176B                     __end_of_Gpio_Config:	
  4462                           ;utility.c: 41: return 1;
  4463                           ;	Return value of _Gpio_Config is never used
  4464                           
  4465                           
  4466                           	psect	text17
  4467  173D                     __ptext17:	
  4468 ;; *************** function _Adf_Reset_Config *****************
  4469 ;; Defined at:
  4470 ;;		line 86 in file "adf7012.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;		None               void
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0, pclath, cstack
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    6
  4491 ;; This function calls:
  4492 ;;		_Adf_Reset
  4493 ;;		_Adf_Reset_Register_One
  4494 ;;		_Adf_Reset_Register_Three
  4495 ;;		_Adf_Reset_Register_Two
  4496 ;;		_Adf_Reset_Register_Zero
  4497 ;; This function is called by:
  4498 ;;		_Radio_Setup
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           
  4503                           ;psect for function _Adf_Reset_Config
  4504  173D                     _Adf_Reset_Config:	
  4505                           
  4506                           ;adf7012.c: 89: Adf_Reset_Register_Zero();
  4507                           
  4508                           ;incstack = 0
  4509                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  4510  173D  3188  2016  3197   	fcall	_Adf_Reset_Register_Zero
  4511                           
  4512                           ;adf7012.c: 90: Adf_Reset_Register_One();
  4513  1740  3188  2005  3197   	fcall	_Adf_Reset_Register_One
  4514                           
  4515                           ;adf7012.c: 91: Adf_Reset_Register_Two();
  4516  1743  3197  2793  3197   	fcall	_Adf_Reset_Register_Two
  4517                           
  4518                           ;adf7012.c: 92: Adf_Reset_Register_Three();
  4519  1746  3188  2058  3197   	fcall	_Adf_Reset_Register_Three
  4520                           
  4521                           ;adf7012.c: 94: Adf_Reset();
  4522  1749  3197  2702         	fcall	_Adf_Reset
  4523  174B  0008               	return
  4524  174C                     __end_of_Adf_Reset_Config:	
  4525                           
  4526                           	psect	text18
  4527  0816                     __ptext18:	
  4528 ;; *************** function _Adf_Reset_Register_Zero *****************
  4529 ;; Defined at:
  4530 ;;		line 98 in file "adf7012.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;		None               void
  4537 ;; Registers used:
  4538 ;;		wreg, status,2
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4546 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;Total ram usage:        1 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    3
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_Adf_Reset_Config
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           
  4559                           ;psect for function _Adf_Reset_Register_Zero
  4560  0816                     _Adf_Reset_Register_Zero:	
  4561                           
  4562                           ;adf7012.c: 99: adf_config.r0.frequency_error_correction = 0;
  4563                           
  4564                           ;incstack = 0
  4565                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  4566  0816  3000               	movlw	0
  4567  0817  0021               	movlb	1	; select bank1
  4568  0818  00A3               	movwf	(_adf_config+3)^(0+128)
  4569  0819  3000               	movlw	0
  4570  081A  00A2               	movwf	(_adf_config+2)^(0+128)
  4571  081B  3000               	movlw	0
  4572  081C  00A1               	movwf	(_adf_config+1)^(0+128)
  4573  081D  3000               	movlw	0
  4574  081E  00A0               	movwf	_adf_config^(0+128)
  4575                           
  4576                           ;adf7012.c: 100: adf_config.r0.r_divider = 15;
  4577  081F  300F               	movlw	15
  4578  0820  0020               	movlb	0	; select bank0
  4579  0821  00A0               	movwf	??_Adf_Reset_Register_Zero
  4580  0822  0820               	movf	??_Adf_Reset_Register_Zero,w
  4581  0823  0021               	movlb	1	; select bank1
  4582  0824  00A4               	movwf	(_adf_config^(0+128)+4)
  4583                           
  4584                           ;adf7012.c: 101: adf_config.r0.crystal_doubler = 0;
  4585  0825  01A5               	clrf	(_adf_config^(0+128)+5)
  4586                           
  4587                           ;adf7012.c: 102: adf_config.r0.crystal_oscillator_disable = 0;
  4588  0826  01A6               	clrf	(_adf_config^(0+128)+6)
  4589                           
  4590                           ;adf7012.c: 103: adf_config.r0.clock_out_divider = 2;
  4591  0827  3002               	movlw	2
  4592  0828  0020               	movlb	0	; select bank0
  4593  0829  00A0               	movwf	??_Adf_Reset_Register_Zero
  4594  082A  0820               	movf	??_Adf_Reset_Register_Zero,w
  4595  082B  0021               	movlb	1	; select bank1
  4596  082C  00A7               	movwf	(_adf_config^(0+128)+7)
  4597                           
  4598                           ;adf7012.c: 104: adf_config.r0.vco_adjust = 0;
  4599  082D  01A8               	clrf	(_adf_config^(0+128)+8)
  4600                           
  4601                           ;adf7012.c: 105: adf_config.r0.output_divider = 2;
  4602  082E  3002               	movlw	2
  4603  082F  0020               	movlb	0	; select bank0
  4604  0830  00A0               	movwf	??_Adf_Reset_Register_Zero
  4605  0831  0820               	movf	??_Adf_Reset_Register_Zero,w
  4606  0832  0021               	movlb	1	; select bank1
  4607  0833  00A9               	movwf	(_adf_config^(0+128)+9)
  4608  0834  0008               	return
  4609  0835                     __end_of_Adf_Reset_Register_Zero:	
  4610                           
  4611                           	psect	text19
  4612  1793                     __ptext19:	
  4613 ;; *************** function _Adf_Reset_Register_Two *****************
  4614 ;; Defined at:
  4615 ;;		line 114 in file "adf7012.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;		None               void
  4622 ;; Registers used:
  4623 ;;		wreg, status,2
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4631 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4632 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4633 ;;Total ram usage:        1 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    3
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_Adf_Reset_Config
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _Adf_Reset_Register_Two
  4645  1793                     _Adf_Reset_Register_Two:	
  4646                           
  4647                           ;adf7012.c: 115: adf_config.r2.mod_control = 3;
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  4651  1793  3003               	movlw	3
  4652  1794  0020               	movlb	0	; select bank0
  4653  1795  00A0               	movwf	??_Adf_Reset_Register_Two
  4654  1796  0820               	movf	??_Adf_Reset_Register_Two,w
  4655  1797  0021               	movlb	1	; select bank1
  4656  1798  00B0               	movwf	(_adf_config^(0+128)+16)
  4657                           
  4658                           ;adf7012.c: 116: adf_config.r2.gook = 0;
  4659  1799  01B1               	clrf	(_adf_config^(0+128)+17)
  4660                           
  4661                           ;adf7012.c: 117: adf_config.r2.power_amplifier_level = 15;
  4662  179A  300F               	movlw	15
  4663  179B  0020               	movlb	0	; select bank0
  4664  179C  00A0               	movwf	??_Adf_Reset_Register_Two
  4665  179D  0820               	movf	??_Adf_Reset_Register_Two,w
  4666  179E  0021               	movlb	1	; select bank1
  4667  179F  00B2               	movwf	(_adf_config^(0+128)+18)
  4668                           
  4669                           ;adf7012.c: 118: adf_config.r2.modulation_deviation = 16;
  4670  17A0  3000               	movlw	0
  4671  17A1  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  4672  17A2  3000               	movlw	0
  4673  17A3  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  4674  17A4  3000               	movlw	0
  4675  17A5  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  4676  17A6  3010               	movlw	16
  4677  17A7  00B3               	movwf	(_adf_config^(0+128)+19)
  4678                           
  4679                           ;adf7012.c: 119: adf_config.r2.gfsk_modulation_control = 0;
  4680  17A8  01B7               	clrf	(_adf_config^(0+128)+23)
  4681                           
  4682                           ;adf7012.c: 120: adf_config.r2.index_counter = 0;
  4683  17A9  01B8               	clrf	(_adf_config^(0+128)+24)
  4684  17AA  0008               	return
  4685  17AB                     __end_of_Adf_Reset_Register_Two:	
  4686                           
  4687                           	psect	text20
  4688  0858                     __ptext20:	
  4689 ;; *************** function _Adf_Reset_Register_Three *****************
  4690 ;; Defined at:
  4691 ;;		line 123 in file "adf7012.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;		None
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;		None               void
  4698 ;; Registers used:
  4699 ;;		wreg, status,2
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4707 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;Total ram usage:        1 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    3
  4712 ;; This function calls:
  4713 ;;		Nothing
  4714 ;; This function is called by:
  4715 ;;		_Adf_Reset_Config
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _Adf_Reset_Register_Three
  4721  0858                     _Adf_Reset_Register_Three:	
  4722                           
  4723                           ;adf7012.c: 124: adf_config.r3.pll_enable = 0;
  4724                           
  4725                           ;incstack = 0
  4726                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  4727  0858  0021               	movlb	1	; select bank1
  4728  0859  01B9               	clrf	(_adf_config^(0+128)+25)
  4729                           
  4730                           ;adf7012.c: 125: adf_config.r3.pa_enable = 0;
  4731  085A  01BA               	clrf	(_adf_config^(0+128)+26)
  4732                           
  4733                           ;adf7012.c: 126: adf_config.r3.clkout_enable = 1;
  4734  085B  01BB               	clrf	(_adf_config^(0+128)+27)
  4735  085C  0ABB               	incf	(_adf_config^(0+128)+27),f
  4736                           
  4737                           ;adf7012.c: 127: adf_config.r3.data_invert = 1;
  4738  085D  01BC               	clrf	(_adf_config^(0+128)+28)
  4739  085E  0ABC               	incf	(_adf_config^(0+128)+28),f
  4740                           
  4741                           ;adf7012.c: 128: adf_config.r3.charge_pump_current = 3;
  4742  085F  3003               	movlw	3
  4743  0860  0020               	movlb	0	; select bank0
  4744  0861  00A0               	movwf	??_Adf_Reset_Register_Three
  4745  0862  0820               	movf	??_Adf_Reset_Register_Three,w
  4746  0863  0021               	movlb	1	; select bank1
  4747  0864  00BD               	movwf	(_adf_config^(0+128)+29)
  4748                           
  4749                           ;adf7012.c: 129: adf_config.r3.bleed_up = 0;
  4750  0865  01BE               	clrf	(_adf_config^(0+128)+30)
  4751                           
  4752                           ;adf7012.c: 130: adf_config.r3.bleed_down = 0;
  4753  0866  01BF               	clrf	(_adf_config^(0+128)+31)
  4754                           
  4755                           ;adf7012.c: 131: adf_config.r3.vco_disable = 0;
  4756  0867  01C0               	clrf	(_adf_config^(0+128)+32)
  4757                           
  4758                           ;adf7012.c: 133: adf_config.r3.muxout = 3;
  4759  0868  3003               	movlw	3
  4760  0869  0020               	movlb	0	; select bank0
  4761  086A  00A0               	movwf	??_Adf_Reset_Register_Three
  4762  086B  0820               	movf	??_Adf_Reset_Register_Three,w
  4763  086C  0021               	movlb	1	; select bank1
  4764  086D  00C1               	movwf	(_adf_config^(0+128)+33)
  4765                           
  4766                           ;adf7012.c: 135: adf_config.r3.ld_precision = 0;
  4767  086E  01C2               	clrf	(_adf_config^(0+128)+34)
  4768                           
  4769                           ;adf7012.c: 136: adf_config.r3.vco_bias = 6;
  4770  086F  3006               	movlw	6
  4771  0870  0020               	movlb	0	; select bank0
  4772  0871  00A0               	movwf	??_Adf_Reset_Register_Three
  4773  0872  0820               	movf	??_Adf_Reset_Register_Three,w
  4774  0873  0021               	movlb	1	; select bank1
  4775  0874  00C3               	movwf	(_adf_config^(0+128)+35)
  4776                           
  4777                           ;adf7012.c: 137: adf_config.r3.pa_bias = 4;
  4778  0875  3004               	movlw	4
  4779  0876  0020               	movlb	0	; select bank0
  4780  0877  00A0               	movwf	??_Adf_Reset_Register_Three
  4781  0878  0820               	movf	??_Adf_Reset_Register_Three,w
  4782  0879  0021               	movlb	1	; select bank1
  4783  087A  00C4               	movwf	(_adf_config^(0+128)+36)
  4784                           
  4785                           ;adf7012.c: 138: adf_config.r3.pll_test_mode = 0;
  4786  087B  01C5               	clrf	(_adf_config^(0+128)+37)
  4787                           
  4788                           ;adf7012.c: 139: adf_config.r3.sd_test_mode = 0;
  4789  087C  01C6               	clrf	(_adf_config^(0+128)+38)
  4790  087D  0008               	return
  4791  087E                     __end_of_Adf_Reset_Register_Three:	
  4792                           
  4793                           	psect	text21
  4794  0805                     __ptext21:	
  4795 ;; *************** function _Adf_Reset_Register_One *****************
  4796 ;; Defined at:
  4797 ;;		line 108 in file "adf7012.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;		None
  4802 ;; Return value:  Size  Location     Type
  4803 ;;		None               void
  4804 ;; Registers used:
  4805 ;;		wreg
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;Total ram usage:        1 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; Hardware stack levels required when called:    3
  4818 ;; This function calls:
  4819 ;;		Nothing
  4820 ;; This function is called by:
  4821 ;;		_Adf_Reset_Config
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           
  4826                           ;psect for function _Adf_Reset_Register_One
  4827  0805                     _Adf_Reset_Register_One:	
  4828                           
  4829                           ;adf7012.c: 109: adf_config.r1.integer_n = 109;
  4830                           
  4831                           ;incstack = 0
  4832                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  4833  0805  306D               	movlw	109
  4834  0806  0020               	movlb	0	; select bank0
  4835  0807  00A0               	movwf	??_Adf_Reset_Register_One
  4836  0808  0820               	movf	??_Adf_Reset_Register_One,w
  4837  0809  0021               	movlb	1	; select bank1
  4838  080A  00AE               	movwf	(_adf_config^(0+128)+14)
  4839                           
  4840                           ;adf7012.c: 110: adf_config.r1.fractional_n = 0;
  4841  080B  3000               	movlw	0
  4842  080C  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  4843  080D  3000               	movlw	0
  4844  080E  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  4845  080F  3000               	movlw	0
  4846  0810  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  4847  0811  3000               	movlw	0
  4848  0812  00AA               	movwf	(_adf_config^(0+128)+10)
  4849                           
  4850                           ;adf7012.c: 111: adf_config.r1.prescaler = 1;
  4851  0813  01AF               	clrf	(_adf_config^(0+128)+15)
  4852  0814  0AAF               	incf	(_adf_config^(0+128)+15),f
  4853  0815  0008               	return
  4854  0816                     __end_of_Adf_Reset_Register_One:	
  4855                           
  4856                           	psect	text22
  4857  1702                     __ptext22:	
  4858 ;; *************** function _Adf_Reset *****************
  4859 ;; Defined at:
  4860 ;;		line 142 in file "adf7012.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;		None
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;		None               void
  4867 ;; Registers used:
  4868 ;;		wreg, status,2, status,0, pclath, cstack
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4878 ;;Total ram usage:        0 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:    5
  4881 ;; This function calls:
  4882 ;;		_Delay_ms
  4883 ;; This function is called by:
  4884 ;;		_Adf_Reset_Config
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function _Adf_Reset
  4890  1702                     _Adf_Reset:	
  4891                           
  4892                           ;adf7012.c: 144: PORTAbits.RA5 = 1;;
  4893                           
  4894                           ;incstack = 0
  4895                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  4896  1702  0020               	movlb	0	; select bank0
  4897  1703  168C               	bsf	12,5	;volatile
  4898                           
  4899                           ;adf7012.c: 145: Delay_ms(10);
  4900  1704  300A               	movlw	10
  4901  1705  00A0               	movwf	Delay_ms@time_to_delay
  4902  1706  3000               	movlw	0
  4903  1707  00A1               	movwf	Delay_ms@time_to_delay+1
  4904  1708  3188  207E         	fcall	_Delay_ms
  4905  170A  0008               	return
  4906  170B                     __end_of_Adf_Reset:	
  4907                           
  4908                           	psect	text23
  4909  177B                     __ptext23:	
  4910 ;; *************** function _Modem_Init *****************
  4911 ;; Defined at:
  4912 ;;		line 42 in file "audio_tone.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;		None
  4917 ;; Return value:  Size  Location     Type
  4918 ;;		None               void
  4919 ;; Registers used:
  4920 ;;		wreg
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;Total ram usage:        1 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; Hardware stack levels required when called:    3
  4933 ;; This function calls:
  4934 ;;		Nothing
  4935 ;; This function is called by:
  4936 ;;		_Modem_Setup
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940                           
  4941                           ;psect for function _Modem_Init
  4942  177B                     _Modem_Init:	
  4943                           
  4944                           ;audio_tone.c: 43: SAMPLES_PER_BAUD = 26;
  4945                           
  4946                           ;incstack = 0
  4947                           ; Regs used in _Modem_Init: [wreg]
  4948  177B  301A               	movlw	26
  4949  177C  0020               	movlb	0	; select bank0
  4950  177D  00A0               	movwf	??_Modem_Init
  4951  177E  0820               	movf	??_Modem_Init,w
  4952  177F  0021               	movlb	1	; select bank1
  4953  1780  00CC               	movwf	_SAMPLES_PER_BAUD^(0+128)
  4954                           
  4955                           ;audio_tone.c: 44: PHASE_DELTA_1200 = 7;
  4956  1781  3000               	movlw	0
  4957  1782  0022               	movlb	2	; select bank2
  4958  1783  00A3               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  4959  1784  3000               	movlw	0
  4960  1785  00A2               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  4961  1786  3000               	movlw	0
  4962  1787  00A1               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  4963  1788  3007               	movlw	7
  4964  1789  00A0               	movwf	_PHASE_DELTA_1200^(0+256)
  4965                           
  4966                           ;audio_tone.c: 45: PHASE_DELTA_2200 = 13;
  4967  178A  3000               	movlw	0
  4968  178B  00A7               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  4969  178C  3000               	movlw	0
  4970  178D  00A6               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  4971  178E  3000               	movlw	0
  4972  178F  00A5               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  4973  1790  300D               	movlw	13
  4974  1791  00A4               	movwf	_PHASE_DELTA_2200^(0+256)
  4975  1792  0008               	return
  4976  1793                     __end_of_Modem_Init:	
  4977                           
  4978                           	psect	text24
  4979  0835                     __ptext24:	
  4980 ;; *************** function _Modem_Flush_Frame *****************
  4981 ;; Defined at:
  4982 ;;		line 65 in file "audio_tone.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;		None               void
  4989 ;; Registers used:
  4990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;Total ram usage:        1 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:   11
  5003 ;; This function calls:
  5004 ;;		_Delay_ms
  5005 ;;		_Ptt_On
  5006 ;;		_Timer0_Start
  5007 ;; This function is called by:
  5008 ;;		_main
  5009 ;;		_Ax25_Flush_Frame
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function _Modem_Flush_Frame
  5015  0835                     _Modem_Flush_Frame:	
  5016                           
  5017                           ;audio_tone.c: 67: phase_delta = PHASE_DELTA_1200;
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5021  0835  0022               	movlb	2	; select bank2
  5022  0836  0820               	movf	_PHASE_DELTA_1200^(0+256),w
  5023  0837  0020               	movlb	0	; select bank0
  5024  0838  00EE               	movwf	??_Modem_Flush_Frame
  5025  0839  086E               	movf	??_Modem_Flush_Frame,w
  5026  083A  0021               	movlb	1	; select bank1
  5027  083B  00D1               	movwf	_phase_delta^(0+128)
  5028                           
  5029                           ;audio_tone.c: 68: phase = 0;
  5030  083C  01FD               	clrf	_phase
  5031                           
  5032                           ;audio_tone.c: 69: packet_pos = 0;
  5033  083D  3000               	movlw	0
  5034  083E  0022               	movlb	2	; select bank2
  5035  083F  00AB               	movwf	(_packet_pos+3)^(0+256)
  5036  0840  3000               	movlw	0
  5037  0841  00AA               	movwf	(_packet_pos+2)^(0+256)
  5038  0842  3000               	movlw	0
  5039  0843  00A9               	movwf	(_packet_pos+1)^(0+256)
  5040  0844  3000               	movlw	0
  5041  0845  00A8               	movwf	_packet_pos^(0+256)
  5042                           
  5043                           ;audio_tone.c: 70: current_sample_in_baud = 0;
  5044  0846  0021               	movlb	1	; select bank1
  5045  0847  01D0               	clrf	_current_sample_in_baud^(0+128)
  5046                           
  5047                           ;audio_tone.c: 71: MODEM_TRANSMITTING = 1;
  5048  0848  01CA               	clrf	_MODEM_TRANSMITTING^(0+128)
  5049  0849  0ACA               	incf	_MODEM_TRANSMITTING^(0+128),f
  5050                           
  5051                           ;audio_tone.c: 74: Ptt_On();
  5052  084A  3189  21F9  3188   	fcall	_Ptt_On
  5053                           
  5054                           ;audio_tone.c: 76: Delay_ms(100);
  5055  084D  3064               	movlw	100
  5056  084E  0020               	movlb	0	; select bank0
  5057  084F  00A0               	movwf	Delay_ms@time_to_delay
  5058  0850  3000               	movlw	0
  5059  0851  00A1               	movwf	Delay_ms@time_to_delay+1
  5060  0852  3188  207E  3188   	fcall	_Delay_ms
  5061                           
  5062                           ;audio_tone.c: 77: Timer0_Start();
  5063  0855  3188  2000         	fcall	_Timer0_Start
  5064  0857  0008               	return
  5065  0858                     __end_of_Modem_Flush_Frame:	
  5066                           
  5067                           	psect	text25
  5068  0800                     __ptext25:	
  5069 ;; *************** function _Timer0_Start *****************
  5070 ;; Defined at:
  5071 ;;		line 253 in file "utility.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;		None
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;		None
  5076 ;; Return value:  Size  Location     Type
  5077 ;;		None               void
  5078 ;; Registers used:
  5079 ;;		status,2
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:    3
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_Modem_Flush_Frame
  5096 ;; This function uses a non-reentrant model
  5097 ;;
  5098                           
  5099                           
  5100                           ;psect for function _Timer0_Start
  5101  0800                     _Timer0_Start:	
  5102                           
  5103                           ;utility.c: 254: TMR0 = 0x00;
  5104                           
  5105                           ;incstack = 0
  5106                           ; Regs used in _Timer0_Start: [status,2]
  5107  0800  0020               	movlb	0	; select bank0
  5108  0801  0195               	clrf	21	;volatile
  5109                           
  5110                           ;utility.c: 255: TMR0IF = 0;
  5111  0802  110B               	bcf	11,2	;volatile
  5112                           
  5113                           ;utility.c: 256: TMR0IE = 1;
  5114  0803  168B               	bsf	11,5	;volatile
  5115  0804  0008               	return
  5116  0805                     __end_of_Timer0_Start:	
  5117                           
  5118                           	psect	text26
  5119  09F9                     __ptext26:	
  5120 ;; *************** function _Ptt_On *****************
  5121 ;; Defined at:
  5122 ;;		line 318 in file "adf7012.c"
  5123 ;; Parameters:    Size  Location     Type
  5124 ;;		None
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;		None
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      unsigned char 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;Total ram usage:        1 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:   10
  5143 ;; This function calls:
  5144 ;;		_Adf_Lock
  5145 ;;		_Adf_Write_Config
  5146 ;;		_Delay_ms
  5147 ;;		_Read_Adf7012_Muxout
  5148 ;; This function is called by:
  5149 ;;		_main
  5150 ;;		_Modem_Flush_Frame
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function _Ptt_On
  5156  09F9                     _Ptt_On:	
  5157                           
  5158                           ;adf7012.c: 323: adf_config.r3.pa_enable = 0;
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5162  09F9  0021               	movlb	1	; select bank1
  5163  09FA  01BA               	clrf	(_adf_config^(0+128)+26)
  5164                           
  5165                           ;adf7012.c: 324: adf_config.r2.power_amplifier_level = 0;
  5166  09FB  01B2               	clrf	(_adf_config^(0+128)+18)
  5167                           
  5168                           ;adf7012.c: 325: adf_config.r3.muxout = 3;
  5169  09FC  3003               	movlw	3
  5170  09FD  0020               	movlb	0	; select bank0
  5171  09FE  00ED               	movwf	??_Ptt_On
  5172  09FF  086D               	movf	??_Ptt_On,w
  5173  0A00  0021               	movlb	1	; select bank1
  5174  0A01  00C1               	movwf	(_adf_config^(0+128)+33)
  5175                           
  5176                           ;adf7012.c: 327: Adf_Write_Config();
  5177  0A02  3197  2714  3189   	fcall	_Adf_Write_Config
  5178                           
  5179                           ;adf7012.c: 328: Delay_ms(10);
  5180  0A05  300A               	movlw	10
  5181  0A06  0020               	movlb	0	; select bank0
  5182  0A07  00A0               	movwf	Delay_ms@time_to_delay
  5183  0A08  3000               	movlw	0
  5184  0A09  00A1               	movwf	Delay_ms@time_to_delay+1
  5185  0A0A  3188  207E  3189   	fcall	_Delay_ms
  5186                           
  5187                           ;adf7012.c: 332: if (!Read_Adf7012_Muxout())
  5188  0A0D  3197  272E  3189   	fcall	_Read_Adf7012_Muxout
  5189  0A10  3800               	iorlw	0
  5190  0A11  1903               	btfsc	3,2
  5191  0A12  0008               	return
  5192                           
  5193                           ;adf7012.c: 336: else
  5194                           ;adf7012.c: 337: {
  5195                           ;adf7012.c: 339: Adf_Lock();
  5196                           
  5197                           ;adf7012.c: 335: }
  5198                           
  5199                           ;adf7012.c: 333: {
  5200                           ;adf7012.c: 334: return 0;
  5201                           ;	Return value of _Ptt_On is never used
  5202  0A13  318B  2357  3189   	fcall	_Adf_Lock
  5203                           
  5204                           ;adf7012.c: 340: adf_config.r3.pa_enable = 1;
  5205  0A16  0021               	movlb	1	; select bank1
  5206  0A17  01BA               	clrf	(_adf_config^(0+128)+26)
  5207  0A18  0ABA               	incf	(_adf_config^(0+128)+26),f
  5208                           
  5209                           ;adf7012.c: 341: adf_config.r2.power_amplifier_level = 63;
  5210  0A19  303F               	movlw	63
  5211  0A1A  0020               	movlb	0	; select bank0
  5212  0A1B  00ED               	movwf	??_Ptt_On
  5213  0A1C  086D               	movf	??_Ptt_On,w
  5214  0A1D  0021               	movlb	1	; select bank1
  5215  0A1E  00B2               	movwf	(_adf_config^(0+128)+18)
  5216                           
  5217                           ;adf7012.c: 343: Delay_ms(10);
  5218  0A1F  300A               	movlw	10
  5219  0A20  0020               	movlb	0	; select bank0
  5220  0A21  00A0               	movwf	Delay_ms@time_to_delay
  5221  0A22  3000               	movlw	0
  5222  0A23  00A1               	movwf	Delay_ms@time_to_delay+1
  5223  0A24  3188  207E  3189   	fcall	_Delay_ms
  5224                           
  5225                           ;adf7012.c: 344: Adf_Write_Config();
  5226  0A27  3197  2714  3189   	fcall	_Adf_Write_Config
  5227                           
  5228                           ;adf7012.c: 345: Delay_ms(1);
  5229  0A2A  3001               	movlw	1
  5230  0A2B  0020               	movlb	0	; select bank0
  5231  0A2C  00A0               	movwf	Delay_ms@time_to_delay
  5232  0A2D  3000               	movlw	0
  5233  0A2E  00A1               	movwf	Delay_ms@time_to_delay+1
  5234  0A2F  3188  207E         	fcall	_Delay_ms
  5235                           
  5236                           ;adf7012.c: 347: return 1;
  5237                           ;	Return value of _Ptt_On is never used
  5238  0A31  0008               	return
  5239  0A32                     __end_of_Ptt_On:	
  5240                           
  5241                           	psect	text27
  5242  0B57                     __ptext27:	
  5243 ;; *************** function _Adf_Lock *****************
  5244 ;; Defined at:
  5245 ;;		line 231 in file "adf7012.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  bias            2   10[BANK1 ] int 
  5250 ;;  adj             2    8[BANK1 ] int 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  2  325[COMMON] int 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5263 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5264 ;;Total ram usage:        6 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    9
  5267 ;; This function calls:
  5268 ;;		_Adf_Locked
  5269 ;;		_Adf_Write_Config
  5270 ;;		_Delay_ms
  5271 ;; This function is called by:
  5272 ;;		_Ptt_On
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           
  5277                           ;psect for function _Adf_Lock
  5278  0B57                     _Adf_Lock:	
  5279                           
  5280                           ;adf7012.c: 234: Delay_ms(200);
  5281                           
  5282                           ;incstack = 0
  5283                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5284  0B57  30C8               	movlw	200
  5285  0B58  0020               	movlb	0	; select bank0
  5286  0B59  00A0               	movwf	Delay_ms@time_to_delay
  5287  0B5A  3000               	movlw	0
  5288  0B5B  00A1               	movwf	Delay_ms@time_to_delay+1
  5289  0B5C  3188  207E  318B   	fcall	_Delay_ms
  5290                           
  5291                           ;adf7012.c: 235: int adj = adf_config.r0.vco_adjust;
  5292  0B5F  0021               	movlb	1	; select bank1
  5293  0B60  0828               	movf	(_adf_config^(0+128)+8),w
  5294  0B61  0020               	movlb	0	; select bank0
  5295  0B62  00EB               	movwf	??_Adf_Lock
  5296  0B63  01EC               	clrf	??_Adf_Lock+1
  5297  0B64  086B               	movf	??_Adf_Lock,w
  5298  0B65  0021               	movlb	1	; select bank1
  5299  0B66  00DC               	movwf	Adf_Lock@adj^(0+128)
  5300  0B67  0020               	movlb	0	; select bank0
  5301  0B68  086C               	movf	??_Adf_Lock+1,w
  5302  0B69  0021               	movlb	1	; select bank1
  5303  0B6A  00DD               	movwf	(Adf_Lock@adj+1)^(0+128)
  5304                           
  5305                           ;adf7012.c: 236: int bias = adf_config.r3.vco_bias;
  5306  0B6B  0843               	movf	(_adf_config^(0+128)+35),w
  5307  0B6C  0020               	movlb	0	; select bank0
  5308  0B6D  00EB               	movwf	??_Adf_Lock
  5309  0B6E  01EC               	clrf	??_Adf_Lock+1
  5310  0B6F  086B               	movf	??_Adf_Lock,w
  5311  0B70  0021               	movlb	1	; select bank1
  5312  0B71  00DE               	movwf	Adf_Lock@bias^(0+128)
  5313  0B72  0020               	movlb	0	; select bank0
  5314  0B73  086C               	movf	??_Adf_Lock+1,w
  5315  0B74  0021               	movlb	1	; select bank1
  5316  0B75  00DF               	movwf	(Adf_Lock@bias+1)^(0+128)
  5317                           
  5318                           ;adf7012.c: 238: adf_config.r3.pll_enable = 1;
  5319  0B76  01B9               	clrf	(_adf_config^(0+128)+25)
  5320  0B77  0AB9               	incf	(_adf_config^(0+128)+25),f
  5321                           
  5322                           ;adf7012.c: 240: adf_config.r3.muxout = 5;
  5323  0B78  3005               	movlw	5
  5324  0B79  0020               	movlb	0	; select bank0
  5325  0B7A  00EB               	movwf	??_Adf_Lock
  5326  0B7B  086B               	movf	??_Adf_Lock,w
  5327  0B7C  0021               	movlb	1	; select bank1
  5328  0B7D  00C1               	movwf	(_adf_config^(0+128)+33)
  5329                           
  5330                           ;adf7012.c: 242: Adf_Write_Config();
  5331  0B7E  3197  2714  318B   	fcall	_Adf_Write_Config
  5332                           
  5333                           ;adf7012.c: 243: Delay_ms(5);
  5334  0B81  3005               	movlw	5
  5335  0B82  0020               	movlb	0	; select bank0
  5336  0B83  00A0               	movwf	Delay_ms@time_to_delay
  5337  0B84  3000               	movlw	0
  5338  0B85  00A1               	movwf	Delay_ms@time_to_delay+1
  5339  0B86  3188  207E  318B   	fcall	_Delay_ms
  5340  0B89                     l2551:	
  5341                           ;adf7012.c: 245: while(!Adf_Locked()) {
  5342                           
  5343  0B89  3187  27FD  318B   	fcall	_Adf_Locked
  5344  0B8C  3A00               	xorlw	0
  5345  0B8D  1D03               	btfss	3,2
  5346  0B8E  0008               	return
  5347                           
  5348                           ;adf7012.c: 247: adf_config.r0.vco_adjust = adj;
  5349  0B8F  0021               	movlb	1	; select bank1
  5350  0B90  085C               	movf	Adf_Lock@adj^(0+128),w
  5351  0B91  0020               	movlb	0	; select bank0
  5352  0B92  00EB               	movwf	??_Adf_Lock
  5353  0B93  086B               	movf	??_Adf_Lock,w
  5354  0B94  0021               	movlb	1	; select bank1
  5355  0B95  00A8               	movwf	(_adf_config^(0+128)+8)
  5356                           
  5357                           ;adf7012.c: 248: adf_config.r3.vco_bias = bias;
  5358  0B96  085E               	movf	Adf_Lock@bias^(0+128),w
  5359  0B97  0020               	movlb	0	; select bank0
  5360  0B98  00EB               	movwf	??_Adf_Lock
  5361  0B99  086B               	movf	??_Adf_Lock,w
  5362  0B9A  0021               	movlb	1	; select bank1
  5363  0B9B  00C3               	movwf	(_adf_config^(0+128)+35)
  5364                           
  5365                           ;adf7012.c: 250: adf_config.r3.muxout = 5;
  5366  0B9C  3005               	movlw	5
  5367  0B9D  0020               	movlb	0	; select bank0
  5368  0B9E  00EB               	movwf	??_Adf_Lock
  5369  0B9F  086B               	movf	??_Adf_Lock,w
  5370  0BA0  0021               	movlb	1	; select bank1
  5371  0BA1  00C1               	movwf	(_adf_config^(0+128)+33)
  5372                           
  5373                           ;adf7012.c: 251: Adf_Write_Config();
  5374  0BA2  3197  2714  318B   	fcall	_Adf_Write_Config
  5375                           
  5376                           ;adf7012.c: 252: Delay_ms(5);
  5377  0BA5  3005               	movlw	5
  5378  0BA6  0020               	movlb	0	; select bank0
  5379  0BA7  00A0               	movwf	Delay_ms@time_to_delay
  5380  0BA8  3000               	movlw	0
  5381  0BA9  00A1               	movwf	Delay_ms@time_to_delay+1
  5382  0BAA  3188  207E  318B   	fcall	_Delay_ms
  5383                           
  5384                           ;adf7012.c: 253: if(++bias == 14) {
  5385  0BAD  3001               	movlw	1
  5386  0BAE  0021               	movlb	1	; select bank1
  5387  0BAF  07DE               	addwf	Adf_Lock@bias^(0+128),f
  5388  0BB0  3000               	movlw	0
  5389  0BB1  3DDF               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  5390  0BB2  300E               	movlw	14
  5391  0BB3  065E               	xorwf	Adf_Lock@bias^(0+128),w
  5392  0BB4  045F               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  5393  0BB5  1D03               	skipz
  5394  0BB6  2B89               	goto	l2551
  5395                           
  5396                           ;adf7012.c: 254: bias = 1;
  5397  0BB7  3001               	movlw	1
  5398  0BB8  00DE               	movwf	Adf_Lock@bias^(0+128)
  5399  0BB9  3000               	movlw	0
  5400  0BBA  00DF               	movwf	(Adf_Lock@bias^(0+128)+1)
  5401                           
  5402                           ;adf7012.c: 255: if(++adj == 4) {
  5403  0BBB  3001               	movlw	1
  5404  0BBC  07DC               	addwf	Adf_Lock@adj^(0+128),f
  5405  0BBD  3000               	movlw	0
  5406  0BBE  3DDD               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  5407  0BBF  3004               	movlw	4
  5408  0BC0  065C               	xorwf	Adf_Lock@adj^(0+128),w
  5409  0BC1  045D               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  5410  0BC2  1D03               	skipz
  5411  0BC3  2B89               	goto	l2551
  5412                           
  5413                           ;adf7012.c: 258: adf_config.r0.vco_adjust = 0;
  5414  0BC4  01A8               	clrf	(_adf_config^(0+128)+8)
  5415                           
  5416                           ;adf7012.c: 259: adf_config.r3.vco_bias = 5;
  5417  0BC5  3005               	movlw	5
  5418  0BC6  0020               	movlb	0	; select bank0
  5419  0BC7  00EB               	movwf	??_Adf_Lock
  5420  0BC8  086B               	movf	??_Adf_Lock,w
  5421  0BC9  0021               	movlb	1	; select bank1
  5422  0BCA  00C3               	movwf	(_adf_config^(0+128)+35)
  5423                           
  5424                           ;adf7012.c: 261: return 0;
  5425                           ;	Return value of _Adf_Lock is never used
  5426  0BCB  0008               	return
  5427  0BCC                     __end_of_Adf_Lock:	
  5428                           ;adf7012.c: 262: }
  5429                           ;adf7012.c: 263: }
  5430                           ;adf7012.c: 264: }
  5431                           ;adf7012.c: 268: return 1;
  5432                           ;	Return value of _Adf_Lock is never used
  5433                           
  5434                           
  5435                           	psect	text28
  5436  1714                     __ptext28:	
  5437 ;; *************** function _Adf_Write_Config *****************
  5438 ;; Defined at:
  5439 ;;		line 150 in file "adf7012.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;		None
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;		None               void
  5446 ;; Registers used:
  5447 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5457 ;;Total ram usage:        0 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    8
  5460 ;; This function calls:
  5461 ;;		_Adf_Write_Register_One
  5462 ;;		_Adf_Write_Register_Three
  5463 ;;		_Adf_Write_Register_Two
  5464 ;;		_Adf_Write_Register_Zero
  5465 ;; This function is called by:
  5466 ;;		_Adf_Lock
  5467 ;;		_Radio_Setup
  5468 ;;		_Ptt_On
  5469 ;;		_Ptt_Off
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           
  5474                           ;psect for function _Adf_Write_Config
  5475  1714                     _Adf_Write_Config:	
  5476                           
  5477                           ;adf7012.c: 151: Adf_Write_Register_Zero();
  5478                           
  5479                           ;incstack = 0
  5480                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5481  1714  3184  24B5  3197   	fcall	_Adf_Write_Register_Zero
  5482                           
  5483                           ;adf7012.c: 152: Adf_Write_Register_One();
  5484  1717  318A  22E6  3197   	fcall	_Adf_Write_Register_One
  5485                           
  5486                           ;adf7012.c: 153: Adf_Write_Register_Two();
  5487  171A  3186  26C4  3197   	fcall	_Adf_Write_Register_Two
  5488                           
  5489                           ;adf7012.c: 154: Adf_Write_Register_Three();
  5490  171D  3180  2068         	fcall	_Adf_Write_Register_Three
  5491  171F  0008               	return
  5492  1720                     __end_of_Adf_Write_Config:	
  5493                           
  5494                           	psect	text29
  5495  04B5                     __ptext29:	
  5496 ;; *************** function _Adf_Write_Register_Zero *****************
  5497 ;; Defined at:
  5498 ;;		line 157 in file "adf7012.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  5503 ;;  reg             4   51[BANK0 ] unsigned long 
  5504 ;; Return value:  Size  Location     Type
  5505 ;;		None               void
  5506 ;; Registers used:
  5507 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5514 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5515 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5516 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5517 ;;Total ram usage:       36 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    7
  5520 ;; This function calls:
  5521 ;;		_Reverse_Array
  5522 ;;		_Write_Adf7012_Reg
  5523 ;;		_memcpy
  5524 ;; This function is called by:
  5525 ;;		_Adf_Write_Config
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           
  5530                           ;psect for function _Adf_Write_Register_Zero
  5531  04B5                     _Adf_Write_Register_Zero:	
  5532                           
  5533                           ;adf7012.c: 159: uint32_t reg =
  5534                           ;adf7012.c: 160: (0) |
  5535                           ;adf7012.c: 161: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  5536                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  5537                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  5538                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  5539                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  5540                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  5541                           
  5542                           ;incstack = 0
  5543                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5544  04B5  0021               	movlb	1	; select bank1
  5545  04B6  0829               	movf	(_adf_config^(0+128)+9),w
  5546  04B7  3903               	andlw	3
  5547  04B8  0020               	movlb	0	; select bank0
  5548  04B9  00B3               	movwf	??_Adf_Write_Register_Zero
  5549  04BA  01B4               	clrf	??_Adf_Write_Register_Zero+1
  5550  04BB  01B5               	clrf	??_Adf_Write_Register_Zero+2
  5551  04BC  01B6               	clrf	??_Adf_Write_Register_Zero+3
  5552  04BD  3019               	movlw	25
  5553  04BE                     u1985:	
  5554  04BE  35B3               	lslf	??_Adf_Write_Register_Zero,f
  5555  04BF  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  5556  04C0  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  5557  04C1  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  5558  04C2  0B89               	decfsz	9,f
  5559  04C3  2CBE               	goto	u1985
  5560  04C4  0021               	movlb	1	; select bank1
  5561  04C5  0828               	movf	(_adf_config^(0+128)+8),w
  5562  04C6  3903               	andlw	3
  5563  04C7  0020               	movlb	0	; select bank0
  5564  04C8  00B7               	movwf	??_Adf_Write_Register_Zero+4
  5565  04C9  01B8               	clrf	??_Adf_Write_Register_Zero+5
  5566  04CA  01B9               	clrf	??_Adf_Write_Register_Zero+6
  5567  04CB  01BA               	clrf	??_Adf_Write_Register_Zero+7
  5568  04CC  3017               	movlw	23
  5569  04CD                     u1995:	
  5570  04CD  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  5571  04CE  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  5572  04CF  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  5573  04D0  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  5574  04D1  0B89               	decfsz	9,f
  5575  04D2  2CCD               	goto	u1995
  5576  04D3  0021               	movlb	1	; select bank1
  5577  04D4  0827               	movf	(_adf_config^(0+128)+7),w
  5578  04D5  390F               	andlw	15
  5579  04D6  0020               	movlb	0	; select bank0
  5580  04D7  00BB               	movwf	??_Adf_Write_Register_Zero+8
  5581  04D8  01BC               	clrf	??_Adf_Write_Register_Zero+9
  5582  04D9  01BD               	clrf	??_Adf_Write_Register_Zero+10
  5583  04DA  01BE               	clrf	??_Adf_Write_Register_Zero+11
  5584  04DB  3013               	movlw	19
  5585  04DC                     u2005:	
  5586  04DC  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  5587  04DD  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  5588  04DE  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  5589  04DF  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  5590  04E0  0B89               	decfsz	9,f
  5591  04E1  2CDC               	goto	u2005
  5592  04E2  0021               	movlb	1	; select bank1
  5593  04E3  0826               	movf	(_adf_config^(0+128)+6),w
  5594  04E4  3901               	andlw	1
  5595  04E5  0020               	movlb	0	; select bank0
  5596  04E6  00BF               	movwf	??_Adf_Write_Register_Zero+12
  5597  04E7  01C0               	clrf	??_Adf_Write_Register_Zero+13
  5598  04E8  01C1               	clrf	??_Adf_Write_Register_Zero+14
  5599  04E9  01C2               	clrf	??_Adf_Write_Register_Zero+15
  5600  04EA  3012               	movlw	18
  5601  04EB                     u2015:	
  5602  04EB  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  5603  04EC  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  5604  04ED  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  5605  04EE  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  5606  04EF  0B89               	decfsz	9,f
  5607  04F0  2CEB               	goto	u2015
  5608  04F1  0021               	movlb	1	; select bank1
  5609  04F2  0825               	movf	(_adf_config^(0+128)+5),w
  5610  04F3  3901               	andlw	1
  5611  04F4  0020               	movlb	0	; select bank0
  5612  04F5  00C3               	movwf	??_Adf_Write_Register_Zero+16
  5613  04F6  01C4               	clrf	??_Adf_Write_Register_Zero+17
  5614  04F7  01C5               	clrf	??_Adf_Write_Register_Zero+18
  5615  04F8  01C6               	clrf	??_Adf_Write_Register_Zero+19
  5616  04F9  3011               	movlw	17
  5617  04FA                     u2025:	
  5618  04FA  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  5619  04FB  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  5620  04FC  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  5621  04FD  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  5622  04FE  0B89               	decfsz	9,f
  5623  04FF  2CFA               	goto	u2025
  5624  0500  0021               	movlb	1	; select bank1
  5625  0501  0824               	movf	(_adf_config^(0+128)+4),w
  5626  0502  390F               	andlw	15
  5627  0503  0020               	movlb	0	; select bank0
  5628  0504  00C7               	movwf	??_Adf_Write_Register_Zero+20
  5629  0505  01C8               	clrf	??_Adf_Write_Register_Zero+21
  5630  0506  01C9               	clrf	??_Adf_Write_Register_Zero+22
  5631  0507  01CA               	clrf	??_Adf_Write_Register_Zero+23
  5632  0508  300D               	movlw	13
  5633  0509                     u2035:	
  5634  0509  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  5635  050A  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  5636  050B  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  5637  050C  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  5638  050D  0B89               	decfsz	9,f
  5639  050E  2D09               	goto	u2035
  5640  050F  30FF               	movlw	255
  5641  0510  0021               	movlb	1	; select bank1
  5642  0511  0520               	andwf	_adf_config^(0+128),w
  5643  0512  0020               	movlb	0	; select bank0
  5644  0513  00CB               	movwf	??_Adf_Write_Register_Zero+24
  5645  0514  3007               	movlw	7
  5646  0515  0021               	movlb	1	; select bank1
  5647  0516  0521               	andwf	(_adf_config+1)^(0+128),w
  5648  0517  0020               	movlb	0	; select bank0
  5649  0518  00CC               	movwf	??_Adf_Write_Register_Zero+25
  5650  0519  3000               	movlw	0
  5651  051A  0021               	movlb	1	; select bank1
  5652  051B  0522               	andwf	(_adf_config+2)^(0+128),w
  5653  051C  0020               	movlb	0	; select bank0
  5654  051D  00CD               	movwf	??_Adf_Write_Register_Zero+26
  5655  051E  3000               	movlw	0
  5656  051F  0021               	movlb	1	; select bank1
  5657  0520  0523               	andwf	(_adf_config+3)^(0+128),w
  5658  0521  0020               	movlb	0	; select bank0
  5659  0522  00CE               	movwf	??_Adf_Write_Register_Zero+27
  5660  0523  3002               	movlw	2
  5661  0524                     u2045:	
  5662  0524  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  5663  0525  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  5664  0526  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  5665  0527  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  5666  0528  0B89               	decfsz	9,f
  5667  0529  2D24               	goto	u2045
  5668  052A  084B               	movf	??_Adf_Write_Register_Zero+24,w
  5669  052B  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  5670  052C  084C               	movf	??_Adf_Write_Register_Zero+25,w
  5671  052D  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  5672  052E  084D               	movf	??_Adf_Write_Register_Zero+26,w
  5673  052F  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  5674  0530  084E               	movf	??_Adf_Write_Register_Zero+27,w
  5675  0531  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  5676  0532  0847               	movf	??_Adf_Write_Register_Zero+20,w
  5677  0533  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  5678  0534  0848               	movf	??_Adf_Write_Register_Zero+21,w
  5679  0535  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  5680  0536  0849               	movf	??_Adf_Write_Register_Zero+22,w
  5681  0537  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  5682  0538  084A               	movf	??_Adf_Write_Register_Zero+23,w
  5683  0539  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  5684  053A  0843               	movf	??_Adf_Write_Register_Zero+16,w
  5685  053B  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  5686  053C  0844               	movf	??_Adf_Write_Register_Zero+17,w
  5687  053D  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  5688  053E  0845               	movf	??_Adf_Write_Register_Zero+18,w
  5689  053F  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  5690  0540  0846               	movf	??_Adf_Write_Register_Zero+19,w
  5691  0541  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  5692  0542  083F               	movf	??_Adf_Write_Register_Zero+12,w
  5693  0543  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  5694  0544  0840               	movf	??_Adf_Write_Register_Zero+13,w
  5695  0545  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  5696  0546  0841               	movf	??_Adf_Write_Register_Zero+14,w
  5697  0547  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  5698  0548  0842               	movf	??_Adf_Write_Register_Zero+15,w
  5699  0549  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  5700  054A  083B               	movf	??_Adf_Write_Register_Zero+8,w
  5701  054B  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  5702  054C  083C               	movf	??_Adf_Write_Register_Zero+9,w
  5703  054D  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  5704  054E  083D               	movf	??_Adf_Write_Register_Zero+10,w
  5705  054F  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  5706  0550  083E               	movf	??_Adf_Write_Register_Zero+11,w
  5707  0551  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  5708  0552  0833               	movf	??_Adf_Write_Register_Zero,w
  5709  0553  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  5710  0554  00D3               	movwf	Adf_Write_Register_Zero@reg
  5711  0555  0834               	movf	??_Adf_Write_Register_Zero+1,w
  5712  0556  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  5713  0557  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  5714  0558  0835               	movf	??_Adf_Write_Register_Zero+2,w
  5715  0559  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  5716  055A  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  5717  055B  0836               	movf	??_Adf_Write_Register_Zero+3,w
  5718  055C  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  5719  055D  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  5720                           
  5721                           ;adf7012.c: 170: uint8_t reg_ptr[4];
  5722                           ;adf7012.c: 171: memcpy(reg_ptr, &reg, 4);
  5723  055E  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  5724  055F  00B3               	movwf	??_Adf_Write_Register_Zero
  5725  0560  0833               	movf	??_Adf_Write_Register_Zero,w
  5726  0561  00A0               	movwf	memcpy@s1
  5727  0562  3004               	movlw	4
  5728  0563  00A1               	movwf	memcpy@n
  5729  0564  3000               	movlw	0
  5730  0565  00A2               	movwf	memcpy@n+1
  5731  0566  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5732  0567  3188  20A7  3184   	fcall	_memcpy
  5733                           
  5734                           ;adf7012.c: 172: Reverse_Array(reg_ptr,4);
  5735  056A  3004               	movlw	4
  5736  056B  0020               	movlb	0	; select bank0
  5737  056C  00B3               	movwf	??_Adf_Write_Register_Zero
  5738  056D  0833               	movf	??_Adf_Write_Register_Zero,w
  5739  056E  00A7               	movwf	Reverse_Array@length
  5740  056F  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5741  0570  3189  2156  3184   	fcall	_Reverse_Array
  5742                           
  5743                           ;adf7012.c: 173: Write_Adf7012_Reg(reg_ptr, 4);
  5744  0573  3004               	movlw	4
  5745  0574  0020               	movlb	0	; select bank0
  5746  0575  00B3               	movwf	??_Adf_Write_Register_Zero
  5747  0576  0833               	movf	??_Adf_Write_Register_Zero,w
  5748  0577  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5749  0578  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5750  0579  3189  21C0         	fcall	_Write_Adf7012_Reg
  5751  057B  0008               	return
  5752  057C                     __end_of_Adf_Write_Register_Zero:	
  5753                           
  5754                           	psect	text30
  5755  06C4                     __ptext30:	
  5756 ;; *************** function _Adf_Write_Register_Two *****************
  5757 ;; Defined at:
  5758 ;;		line 189 in file "adf7012.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;		None
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  5763 ;;  reg             4   47[BANK0 ] unsigned long 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;		None               void
  5766 ;; Registers used:
  5767 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;Total ram usage:       32 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    7
  5780 ;; This function calls:
  5781 ;;		_Reverse_Array
  5782 ;;		_Write_Adf7012_Reg
  5783 ;;		_memcpy
  5784 ;; This function is called by:
  5785 ;;		_Adf_Write_Config
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           
  5790                           ;psect for function _Adf_Write_Register_Two
  5791  06C4                     _Adf_Write_Register_Two:	
  5792                           
  5793                           ;adf7012.c: 190: uint32_t reg =
  5794                           ;adf7012.c: 191: (2) |
  5795                           ;adf7012.c: 192: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  5796                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  5797                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  5798                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  5799                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  5800                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  5801                           
  5802                           ;incstack = 0
  5803                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5804  06C4  0021               	movlb	1	; select bank1
  5805  06C5  0838               	movf	(_adf_config^(0+128)+24),w
  5806  06C6  3903               	andlw	3
  5807  06C7  0020               	movlb	0	; select bank0
  5808  06C8  00B3               	movwf	??_Adf_Write_Register_Two
  5809  06C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  5810  06CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  5811  06CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  5812  06CC  3017               	movlw	23
  5813  06CD                     u2085:	
  5814  06CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  5815  06CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  5816  06CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  5817  06D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  5818  06D1  0B89               	decfsz	9,f
  5819  06D2  2ECD               	goto	u2085
  5820  06D3  0021               	movlb	1	; select bank1
  5821  06D4  0837               	movf	(_adf_config^(0+128)+23),w
  5822  06D5  3907               	andlw	7
  5823  06D6  0020               	movlb	0	; select bank0
  5824  06D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  5825  06D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  5826  06D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  5827  06DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  5828  06DB  3014               	movlw	20
  5829  06DC                     u2095:	
  5830  06DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  5831  06DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  5832  06DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  5833  06DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  5834  06E0  0B89               	decfsz	9,f
  5835  06E1  2EDC               	goto	u2095
  5836  06E2  3013               	movlw	19
  5837  06E3  3EA0               	addlw	_adf_config& (0+255)
  5838  06E4  0086               	movwf	6
  5839  06E5  0187               	clrf	7
  5840  06E6  30FF               	movlw	255
  5841  06E7  0501               	andwf	1,w
  5842  06E8  00BB               	movwf	??_Adf_Write_Register_Two+8
  5843  06E9  3141               	addfsr 1,1
  5844  06EA  3001               	movlw	1
  5845  06EB  0501               	andwf	1,w
  5846  06EC  00BC               	movwf	??_Adf_Write_Register_Two+9
  5847  06ED  3141               	addfsr 1,1
  5848  06EE  3000               	movlw	0
  5849  06EF  0501               	andwf	1,w
  5850  06F0  00BD               	movwf	??_Adf_Write_Register_Two+10
  5851  06F1  3141               	addfsr 1,1
  5852  06F2  3000               	movlw	0
  5853  06F3  0501               	andwf	1,w
  5854  06F4  00BE               	movwf	??_Adf_Write_Register_Two+11
  5855  06F5  300B               	movlw	11
  5856  06F6                     u2105:	
  5857  06F6  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  5858  06F7  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  5859  06F8  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  5860  06F9  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  5861  06FA  0B89               	decfsz	9,f
  5862  06FB  2EF6               	goto	u2105
  5863  06FC  0021               	movlb	1	; select bank1
  5864  06FD  0832               	movf	(_adf_config^(0+128)+18),w
  5865  06FE  393F               	andlw	63
  5866  06FF  0020               	movlb	0	; select bank0
  5867  0700  00BF               	movwf	??_Adf_Write_Register_Two+12
  5868  0701  01C0               	clrf	??_Adf_Write_Register_Two+13
  5869  0702  01C1               	clrf	??_Adf_Write_Register_Two+14
  5870  0703  01C2               	clrf	??_Adf_Write_Register_Two+15
  5871  0704  3005               	movlw	5
  5872  0705                     u2115:	
  5873  0705  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  5874  0706  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  5875  0707  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  5876  0708  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  5877  0709  0B89               	decfsz	9,f
  5878  070A  2F05               	goto	u2115
  5879  070B  0021               	movlb	1	; select bank1
  5880  070C  0831               	movf	(_adf_config^(0+128)+17),w
  5881  070D  3901               	andlw	1
  5882  070E  0020               	movlb	0	; select bank0
  5883  070F  00C3               	movwf	??_Adf_Write_Register_Two+16
  5884  0710  01C4               	clrf	??_Adf_Write_Register_Two+17
  5885  0711  01C5               	clrf	??_Adf_Write_Register_Two+18
  5886  0712  01C6               	clrf	??_Adf_Write_Register_Two+19
  5887  0713  3004               	movlw	4
  5888  0714                     u2125:	
  5889  0714  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  5890  0715  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  5891  0716  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  5892  0717  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  5893  0718  0B89               	decfsz	9,f
  5894  0719  2F14               	goto	u2125
  5895  071A  0021               	movlb	1	; select bank1
  5896  071B  0830               	movf	(_adf_config^(0+128)+16),w
  5897  071C  3903               	andlw	3
  5898  071D  0020               	movlb	0	; select bank0
  5899  071E  00C7               	movwf	??_Adf_Write_Register_Two+20
  5900  071F  01C8               	clrf	??_Adf_Write_Register_Two+21
  5901  0720  01C9               	clrf	??_Adf_Write_Register_Two+22
  5902  0721  01CA               	clrf	??_Adf_Write_Register_Two+23
  5903  0722  3002               	movlw	2
  5904  0723                     u2135:	
  5905  0723  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  5906  0724  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  5907  0725  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  5908  0726  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  5909  0727  0B89               	decfsz	9,f
  5910  0728  2F23               	goto	u2135
  5911  0729  0847               	movf	??_Adf_Write_Register_Two+20,w
  5912  072A  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  5913  072B  0848               	movf	??_Adf_Write_Register_Two+21,w
  5914  072C  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  5915  072D  0849               	movf	??_Adf_Write_Register_Two+22,w
  5916  072E  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  5917  072F  084A               	movf	??_Adf_Write_Register_Two+23,w
  5918  0730  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  5919  0731  0843               	movf	??_Adf_Write_Register_Two+16,w
  5920  0732  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  5921  0733  0844               	movf	??_Adf_Write_Register_Two+17,w
  5922  0734  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  5923  0735  0845               	movf	??_Adf_Write_Register_Two+18,w
  5924  0736  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  5925  0737  0846               	movf	??_Adf_Write_Register_Two+19,w
  5926  0738  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  5927  0739  083F               	movf	??_Adf_Write_Register_Two+12,w
  5928  073A  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  5929  073B  0840               	movf	??_Adf_Write_Register_Two+13,w
  5930  073C  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  5931  073D  0841               	movf	??_Adf_Write_Register_Two+14,w
  5932  073E  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  5933  073F  0842               	movf	??_Adf_Write_Register_Two+15,w
  5934  0740  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  5935  0741  083B               	movf	??_Adf_Write_Register_Two+8,w
  5936  0742  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  5937  0743  083C               	movf	??_Adf_Write_Register_Two+9,w
  5938  0744  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  5939  0745  083D               	movf	??_Adf_Write_Register_Two+10,w
  5940  0746  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  5941  0747  083E               	movf	??_Adf_Write_Register_Two+11,w
  5942  0748  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  5943  0749  0837               	movf	??_Adf_Write_Register_Two+4,w
  5944  074A  04B3               	iorwf	??_Adf_Write_Register_Two,f
  5945  074B  0838               	movf	??_Adf_Write_Register_Two+5,w
  5946  074C  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  5947  074D  0839               	movf	??_Adf_Write_Register_Two+6,w
  5948  074E  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  5949  074F  083A               	movf	??_Adf_Write_Register_Two+7,w
  5950  0750  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  5951  0751  3002               	movlw	2
  5952  0752  0433               	iorwf	??_Adf_Write_Register_Two,w
  5953  0753  00CF               	movwf	Adf_Write_Register_Two@reg
  5954  0754  3000               	movlw	0
  5955  0755  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  5956  0756  00D0               	movwf	Adf_Write_Register_Two@reg+1
  5957  0757  3000               	movlw	0
  5958  0758  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  5959  0759  00D1               	movwf	Adf_Write_Register_Two@reg+2
  5960  075A  3000               	movlw	0
  5961  075B  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  5962  075C  00D2               	movwf	Adf_Write_Register_Two@reg+3
  5963                           
  5964                           ;adf7012.c: 200: uint8_t reg_ptr[4];
  5965                           ;adf7012.c: 201: memcpy(reg_ptr, &reg, 4);
  5966  075D  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  5967  075E  00B3               	movwf	??_Adf_Write_Register_Two
  5968  075F  0833               	movf	??_Adf_Write_Register_Two,w
  5969  0760  00A0               	movwf	memcpy@s1
  5970  0761  3004               	movlw	4
  5971  0762  00A1               	movwf	memcpy@n
  5972  0763  3000               	movlw	0
  5973  0764  00A2               	movwf	memcpy@n+1
  5974  0765  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5975  0766  3188  20A7  3186   	fcall	_memcpy
  5976                           
  5977                           ;adf7012.c: 202: Reverse_Array(reg_ptr,4);
  5978  0769  3004               	movlw	4
  5979  076A  0020               	movlb	0	; select bank0
  5980  076B  00B3               	movwf	??_Adf_Write_Register_Two
  5981  076C  0833               	movf	??_Adf_Write_Register_Two,w
  5982  076D  00A7               	movwf	Reverse_Array@length
  5983  076E  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5984  076F  3189  2156  3186   	fcall	_Reverse_Array
  5985                           
  5986                           ;adf7012.c: 203: Write_Adf7012_Reg(reg_ptr, 4);
  5987  0772  3004               	movlw	4
  5988  0773  0020               	movlb	0	; select bank0
  5989  0774  00B3               	movwf	??_Adf_Write_Register_Two
  5990  0775  0833               	movf	??_Adf_Write_Register_Two,w
  5991  0776  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5992  0777  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5993  0778  3189  21C0         	fcall	_Write_Adf7012_Reg
  5994  077A  0008               	return
  5995  077B                     __end_of_Adf_Write_Register_Two:	
  5996                           
  5997                           	psect	text31
  5998  0068                     __ptext31:	
  5999 ;; *************** function _Adf_Write_Register_Three *****************
  6000 ;; Defined at:
  6001 ;;		line 206 in file "adf7012.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;		None
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  6006 ;;  reg             4    4[BANK1 ] unsigned long 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;		None               void
  6009 ;; Registers used:
  6010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6018 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6019 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6020 ;;Total ram usage:       64 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    7
  6023 ;; This function calls:
  6024 ;;		_Reverse_Array
  6025 ;;		_Write_Adf7012_Reg
  6026 ;;		_memcpy
  6027 ;; This function is called by:
  6028 ;;		_Adf_Write_Config
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           
  6033                           ;psect for function _Adf_Write_Register_Three
  6034  0068                     _Adf_Write_Register_Three:	
  6035                           
  6036                           ;adf7012.c: 207: uint32_t reg =
  6037                           ;adf7012.c: 208: (3) |
  6038                           ;adf7012.c: 209: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  6039                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  6040                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  6041                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  6042                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  6043                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  6044                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  6045                           
  6046                           ;incstack = 0
  6047                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  6048  0068  0021               	movlb	1	; select bank1
  6049  0069  0846               	movf	(_adf_config^(0+128)+38),w
  6050  006A  390F               	andlw	15
  6051  006B  0020               	movlb	0	; select bank0
  6052  006C  00B3               	movwf	??_Adf_Write_Register_Three
  6053  006D  01B4               	clrf	??_Adf_Write_Register_Three+1
  6054  006E  01B5               	clrf	??_Adf_Write_Register_Three+2
  6055  006F  01B6               	clrf	??_Adf_Write_Register_Three+3
  6056  0070  301C               	movlw	28
  6057  0071                     u2145:	
  6058  0071  35B3               	lslf	??_Adf_Write_Register_Three,f
  6059  0072  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  6060  0073  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  6061  0074  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  6062  0075  0B89               	decfsz	9,f
  6063  0076  2871               	goto	u2145
  6064  0077  0021               	movlb	1	; select bank1
  6065  0078  0845               	movf	(_adf_config^(0+128)+37),w
  6066  0079  391F               	andlw	31
  6067  007A  0020               	movlb	0	; select bank0
  6068  007B  00B7               	movwf	??_Adf_Write_Register_Three+4
  6069  007C  01B8               	clrf	??_Adf_Write_Register_Three+5
  6070  007D  01B9               	clrf	??_Adf_Write_Register_Three+6
  6071  007E  01BA               	clrf	??_Adf_Write_Register_Three+7
  6072  007F  3017               	movlw	23
  6073  0080                     u2155:	
  6074  0080  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  6075  0081  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  6076  0082  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  6077  0083  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  6078  0084  0B89               	decfsz	9,f
  6079  0085  2880               	goto	u2155
  6080  0086  0021               	movlb	1	; select bank1
  6081  0087  0844               	movf	(_adf_config^(0+128)+36),w
  6082  0088  3907               	andlw	7
  6083  0089  0020               	movlb	0	; select bank0
  6084  008A  00BB               	movwf	??_Adf_Write_Register_Three+8
  6085  008B  01BC               	clrf	??_Adf_Write_Register_Three+9
  6086  008C  01BD               	clrf	??_Adf_Write_Register_Three+10
  6087  008D  01BE               	clrf	??_Adf_Write_Register_Three+11
  6088  008E  3014               	movlw	20
  6089  008F                     u2165:	
  6090  008F  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  6091  0090  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  6092  0091  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  6093  0092  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  6094  0093  0B89               	decfsz	9,f
  6095  0094  288F               	goto	u2165
  6096  0095  0021               	movlb	1	; select bank1
  6097  0096  0843               	movf	(_adf_config^(0+128)+35),w
  6098  0097  390F               	andlw	15
  6099  0098  0020               	movlb	0	; select bank0
  6100  0099  00BF               	movwf	??_Adf_Write_Register_Three+12
  6101  009A  01C0               	clrf	??_Adf_Write_Register_Three+13
  6102  009B  01C1               	clrf	??_Adf_Write_Register_Three+14
  6103  009C  01C2               	clrf	??_Adf_Write_Register_Three+15
  6104  009D  3010               	movlw	16
  6105  009E                     u2175:	
  6106  009E  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  6107  009F  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  6108  00A0  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  6109  00A1  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  6110  00A2  0B89               	decfsz	9,f
  6111  00A3  289E               	goto	u2175
  6112  00A4  0021               	movlb	1	; select bank1
  6113  00A5  0842               	movf	(_adf_config^(0+128)+34),w
  6114  00A6  3901               	andlw	1
  6115  00A7  0020               	movlb	0	; select bank0
  6116  00A8  00C3               	movwf	??_Adf_Write_Register_Three+16
  6117  00A9  01C4               	clrf	??_Adf_Write_Register_Three+17
  6118  00AA  01C5               	clrf	??_Adf_Write_Register_Three+18
  6119  00AB  01C6               	clrf	??_Adf_Write_Register_Three+19
  6120  00AC  300F               	movlw	15
  6121  00AD                     u2185:	
  6122  00AD  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  6123  00AE  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  6124  00AF  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  6125  00B0  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  6126  00B1  0B89               	decfsz	9,f
  6127  00B2  28AD               	goto	u2185
  6128  00B3  0021               	movlb	1	; select bank1
  6129  00B4  0841               	movf	(_adf_config^(0+128)+33),w
  6130  00B5  390F               	andlw	15
  6131  00B6  0020               	movlb	0	; select bank0
  6132  00B7  00C7               	movwf	??_Adf_Write_Register_Three+20
  6133  00B8  01C8               	clrf	??_Adf_Write_Register_Three+21
  6134  00B9  01C9               	clrf	??_Adf_Write_Register_Three+22
  6135  00BA  01CA               	clrf	??_Adf_Write_Register_Three+23
  6136  00BB  300B               	movlw	11
  6137  00BC                     u2195:	
  6138  00BC  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  6139  00BD  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  6140  00BE  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  6141  00BF  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  6142  00C0  0B89               	decfsz	9,f
  6143  00C1  28BC               	goto	u2195
  6144  00C2  0021               	movlb	1	; select bank1
  6145  00C3  0840               	movf	(_adf_config^(0+128)+32),w
  6146  00C4  3901               	andlw	1
  6147  00C5  0020               	movlb	0	; select bank0
  6148  00C6  00CB               	movwf	??_Adf_Write_Register_Three+24
  6149  00C7  01CC               	clrf	??_Adf_Write_Register_Three+25
  6150  00C8  01CD               	clrf	??_Adf_Write_Register_Three+26
  6151  00C9  01CE               	clrf	??_Adf_Write_Register_Three+27
  6152  00CA  300A               	movlw	10
  6153  00CB                     u2205:	
  6154  00CB  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  6155  00CC  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  6156  00CD  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  6157  00CE  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  6158  00CF  0B89               	decfsz	9,f
  6159  00D0  28CB               	goto	u2205
  6160  00D1  0021               	movlb	1	; select bank1
  6161  00D2  083F               	movf	(_adf_config^(0+128)+31),w
  6162  00D3  3901               	andlw	1
  6163  00D4  0020               	movlb	0	; select bank0
  6164  00D5  00CF               	movwf	??_Adf_Write_Register_Three+28
  6165  00D6  01D0               	clrf	??_Adf_Write_Register_Three+29
  6166  00D7  01D1               	clrf	??_Adf_Write_Register_Three+30
  6167  00D8  01D2               	clrf	??_Adf_Write_Register_Three+31
  6168  00D9  3009               	movlw	9
  6169  00DA                     u2215:	
  6170  00DA  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  6171  00DB  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  6172  00DC  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  6173  00DD  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  6174  00DE  0B89               	decfsz	9,f
  6175  00DF  28DA               	goto	u2215
  6176  00E0  0021               	movlb	1	; select bank1
  6177  00E1  083E               	movf	(_adf_config^(0+128)+30),w
  6178  00E2  3901               	andlw	1
  6179  00E3  0020               	movlb	0	; select bank0
  6180  00E4  00D3               	movwf	??_Adf_Write_Register_Three+32
  6181  00E5  01D4               	clrf	??_Adf_Write_Register_Three+33
  6182  00E6  01D5               	clrf	??_Adf_Write_Register_Three+34
  6183  00E7  01D6               	clrf	??_Adf_Write_Register_Three+35
  6184  00E8  3008               	movlw	8
  6185  00E9                     u2225:	
  6186  00E9  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  6187  00EA  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  6188  00EB  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  6189  00EC  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  6190  00ED  0B89               	decfsz	9,f
  6191  00EE  28E9               	goto	u2225
  6192  00EF  0021               	movlb	1	; select bank1
  6193  00F0  083D               	movf	(_adf_config^(0+128)+29),w
  6194  00F1  3903               	andlw	3
  6195  00F2  0020               	movlb	0	; select bank0
  6196  00F3  00D7               	movwf	??_Adf_Write_Register_Three+36
  6197  00F4  01D8               	clrf	??_Adf_Write_Register_Three+37
  6198  00F5  01D9               	clrf	??_Adf_Write_Register_Three+38
  6199  00F6  01DA               	clrf	??_Adf_Write_Register_Three+39
  6200  00F7  3006               	movlw	6
  6201  00F8                     u2235:	
  6202  00F8  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  6203  00F9  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  6204  00FA  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  6205  00FB  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  6206  00FC  0B89               	decfsz	9,f
  6207  00FD  28F8               	goto	u2235
  6208  00FE  0021               	movlb	1	; select bank1
  6209  00FF  083C               	movf	(_adf_config^(0+128)+28),w
  6210  0100  3901               	andlw	1
  6211  0101  0020               	movlb	0	; select bank0
  6212  0102  00DB               	movwf	??_Adf_Write_Register_Three+40
  6213  0103  01DC               	clrf	??_Adf_Write_Register_Three+41
  6214  0104  01DD               	clrf	??_Adf_Write_Register_Three+42
  6215  0105  01DE               	clrf	??_Adf_Write_Register_Three+43
  6216  0106  3005               	movlw	5
  6217  0107                     u2245:	
  6218  0107  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  6219  0108  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  6220  0109  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  6221  010A  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  6222  010B  0B89               	decfsz	9,f
  6223  010C  2907               	goto	u2245
  6224  010D  0021               	movlb	1	; select bank1
  6225  010E  083B               	movf	(_adf_config^(0+128)+27),w
  6226  010F  3901               	andlw	1
  6227  0110  0020               	movlb	0	; select bank0
  6228  0111  00DF               	movwf	??_Adf_Write_Register_Three+44
  6229  0112  01E0               	clrf	??_Adf_Write_Register_Three+45
  6230  0113  01E1               	clrf	??_Adf_Write_Register_Three+46
  6231  0114  01E2               	clrf	??_Adf_Write_Register_Three+47
  6232  0115  3004               	movlw	4
  6233  0116                     u2255:	
  6234  0116  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  6235  0117  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  6236  0118  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  6237  0119  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  6238  011A  0B89               	decfsz	9,f
  6239  011B  2916               	goto	u2255
  6240  011C  0021               	movlb	1	; select bank1
  6241  011D  083A               	movf	(_adf_config^(0+128)+26),w
  6242  011E  3901               	andlw	1
  6243  011F  0020               	movlb	0	; select bank0
  6244  0120  00E3               	movwf	??_Adf_Write_Register_Three+48
  6245  0121  01E4               	clrf	??_Adf_Write_Register_Three+49
  6246  0122  01E5               	clrf	??_Adf_Write_Register_Three+50
  6247  0123  01E6               	clrf	??_Adf_Write_Register_Three+51
  6248  0124  3003               	movlw	3
  6249  0125                     u2265:	
  6250  0125  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  6251  0126  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  6252  0127  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  6253  0128  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  6254  0129  0B89               	decfsz	9,f
  6255  012A  2925               	goto	u2265
  6256  012B  0021               	movlb	1	; select bank1
  6257  012C  0839               	movf	(_adf_config^(0+128)+25),w
  6258  012D  3901               	andlw	1
  6259  012E  0020               	movlb	0	; select bank0
  6260  012F  00E7               	movwf	??_Adf_Write_Register_Three+52
  6261  0130  01E8               	clrf	??_Adf_Write_Register_Three+53
  6262  0131  01E9               	clrf	??_Adf_Write_Register_Three+54
  6263  0132  01EA               	clrf	??_Adf_Write_Register_Three+55
  6264  0133  3002               	movlw	2
  6265  0134                     u2275:	
  6266  0134  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  6267  0135  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  6268  0136  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  6269  0137  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  6270  0138  0B89               	decfsz	9,f
  6271  0139  2934               	goto	u2275
  6272  013A  0867               	movf	??_Adf_Write_Register_Three+52,w
  6273  013B  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  6274  013C  0868               	movf	??_Adf_Write_Register_Three+53,w
  6275  013D  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  6276  013E  0869               	movf	??_Adf_Write_Register_Three+54,w
  6277  013F  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  6278  0140  086A               	movf	??_Adf_Write_Register_Three+55,w
  6279  0141  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  6280  0142  0863               	movf	??_Adf_Write_Register_Three+48,w
  6281  0143  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  6282  0144  0864               	movf	??_Adf_Write_Register_Three+49,w
  6283  0145  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  6284  0146  0865               	movf	??_Adf_Write_Register_Three+50,w
  6285  0147  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  6286  0148  0866               	movf	??_Adf_Write_Register_Three+51,w
  6287  0149  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  6288  014A  085F               	movf	??_Adf_Write_Register_Three+44,w
  6289  014B  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  6290  014C  0860               	movf	??_Adf_Write_Register_Three+45,w
  6291  014D  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  6292  014E  0861               	movf	??_Adf_Write_Register_Three+46,w
  6293  014F  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  6294  0150  0862               	movf	??_Adf_Write_Register_Three+47,w
  6295  0151  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  6296  0152  085B               	movf	??_Adf_Write_Register_Three+40,w
  6297  0153  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  6298  0154  085C               	movf	??_Adf_Write_Register_Three+41,w
  6299  0155  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  6300  0156  085D               	movf	??_Adf_Write_Register_Three+42,w
  6301  0157  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  6302  0158  085E               	movf	??_Adf_Write_Register_Three+43,w
  6303  0159  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  6304  015A  0857               	movf	??_Adf_Write_Register_Three+36,w
  6305  015B  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  6306  015C  0858               	movf	??_Adf_Write_Register_Three+37,w
  6307  015D  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  6308  015E  0859               	movf	??_Adf_Write_Register_Three+38,w
  6309  015F  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  6310  0160  085A               	movf	??_Adf_Write_Register_Three+39,w
  6311  0161  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  6312  0162  0853               	movf	??_Adf_Write_Register_Three+32,w
  6313  0163  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  6314  0164  0854               	movf	??_Adf_Write_Register_Three+33,w
  6315  0165  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  6316  0166  0855               	movf	??_Adf_Write_Register_Three+34,w
  6317  0167  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  6318  0168  0856               	movf	??_Adf_Write_Register_Three+35,w
  6319  0169  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  6320  016A  084F               	movf	??_Adf_Write_Register_Three+28,w
  6321  016B  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  6322  016C  0850               	movf	??_Adf_Write_Register_Three+29,w
  6323  016D  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  6324  016E  0851               	movf	??_Adf_Write_Register_Three+30,w
  6325  016F  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  6326  0170  0852               	movf	??_Adf_Write_Register_Three+31,w
  6327  0171  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  6328  0172  084B               	movf	??_Adf_Write_Register_Three+24,w
  6329  0173  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  6330  0174  084C               	movf	??_Adf_Write_Register_Three+25,w
  6331  0175  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  6332  0176  084D               	movf	??_Adf_Write_Register_Three+26,w
  6333  0177  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  6334  0178  084E               	movf	??_Adf_Write_Register_Three+27,w
  6335  0179  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  6336  017A  0847               	movf	??_Adf_Write_Register_Three+20,w
  6337  017B  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  6338  017C  0848               	movf	??_Adf_Write_Register_Three+21,w
  6339  017D  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  6340  017E  0849               	movf	??_Adf_Write_Register_Three+22,w
  6341  017F  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  6342  0180  084A               	movf	??_Adf_Write_Register_Three+23,w
  6343  0181  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  6344  0182  0843               	movf	??_Adf_Write_Register_Three+16,w
  6345  0183  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  6346  0184  0844               	movf	??_Adf_Write_Register_Three+17,w
  6347  0185  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  6348  0186  0845               	movf	??_Adf_Write_Register_Three+18,w
  6349  0187  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  6350  0188  0846               	movf	??_Adf_Write_Register_Three+19,w
  6351  0189  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  6352  018A  083F               	movf	??_Adf_Write_Register_Three+12,w
  6353  018B  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  6354  018C  0840               	movf	??_Adf_Write_Register_Three+13,w
  6355  018D  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  6356  018E  0841               	movf	??_Adf_Write_Register_Three+14,w
  6357  018F  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  6358  0190  0842               	movf	??_Adf_Write_Register_Three+15,w
  6359  0191  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  6360  0192  083B               	movf	??_Adf_Write_Register_Three+8,w
  6361  0193  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  6362  0194  083C               	movf	??_Adf_Write_Register_Three+9,w
  6363  0195  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  6364  0196  083D               	movf	??_Adf_Write_Register_Three+10,w
  6365  0197  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  6366  0198  083E               	movf	??_Adf_Write_Register_Three+11,w
  6367  0199  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  6368  019A  0837               	movf	??_Adf_Write_Register_Three+4,w
  6369  019B  04B3               	iorwf	??_Adf_Write_Register_Three,f
  6370  019C  0838               	movf	??_Adf_Write_Register_Three+5,w
  6371  019D  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  6372  019E  0839               	movf	??_Adf_Write_Register_Three+6,w
  6373  019F  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  6374  01A0  083A               	movf	??_Adf_Write_Register_Three+7,w
  6375  01A1  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  6376  01A2  3003               	movlw	3
  6377  01A3  0433               	iorwf	??_Adf_Write_Register_Three,w
  6378  01A4  0021               	movlb	1	; select bank1
  6379  01A5  00D8               	movwf	Adf_Write_Register_Three@reg^(0+128)
  6380  01A6  3000               	movlw	0
  6381  01A7  0020               	movlb	0	; select bank0
  6382  01A8  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  6383  01A9  0021               	movlb	1	; select bank1
  6384  01AA  00D9               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  6385  01AB  3000               	movlw	0
  6386  01AC  0020               	movlb	0	; select bank0
  6387  01AD  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  6388  01AE  0021               	movlb	1	; select bank1
  6389  01AF  00DA               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  6390  01B0  3000               	movlw	0
  6391  01B1  0020               	movlb	0	; select bank0
  6392  01B2  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  6393  01B3  0021               	movlb	1	; select bank1
  6394  01B4  00DB               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  6395                           
  6396                           ;adf7012.c: 225: uint8_t reg_ptr[4];
  6397                           ;adf7012.c: 226: memcpy(reg_ptr, &reg, 4);
  6398  01B5  30D8               	movlw	Adf_Write_Register_Three@reg& (0+255)
  6399  01B6  0020               	movlb	0	; select bank0
  6400  01B7  00B3               	movwf	??_Adf_Write_Register_Three
  6401  01B8  0833               	movf	??_Adf_Write_Register_Three,w
  6402  01B9  00A0               	movwf	memcpy@s1
  6403  01BA  3004               	movlw	4
  6404  01BB  00A1               	movwf	memcpy@n
  6405  01BC  3000               	movlw	0
  6406  01BD  00A2               	movwf	memcpy@n+1
  6407  01BE  30D4               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6408  01BF  3188  20A7  3180   	fcall	_memcpy
  6409                           
  6410                           ;adf7012.c: 227: Reverse_Array(reg_ptr,4);
  6411  01C2  3004               	movlw	4
  6412  01C3  0020               	movlb	0	; select bank0
  6413  01C4  00B3               	movwf	??_Adf_Write_Register_Three
  6414  01C5  0833               	movf	??_Adf_Write_Register_Three,w
  6415  01C6  00A7               	movwf	Reverse_Array@length
  6416  01C7  30D4               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6417  01C8  3189  2156  3180   	fcall	_Reverse_Array
  6418                           
  6419                           ;adf7012.c: 228: Write_Adf7012_Reg(reg_ptr, 4);
  6420  01CB  3004               	movlw	4
  6421  01CC  0020               	movlb	0	; select bank0
  6422  01CD  00B3               	movwf	??_Adf_Write_Register_Three
  6423  01CE  0833               	movf	??_Adf_Write_Register_Three,w
  6424  01CF  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  6425  01D0  30D4               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6426  01D1  3189  21C0         	fcall	_Write_Adf7012_Reg
  6427  01D3  0008               	return
  6428  01D4                     __end_of_Adf_Write_Register_Three:	
  6429                           
  6430                           	psect	text32
  6431  0AE6                     __ptext32:	
  6432 ;; *************** function _Adf_Write_Register_One *****************
  6433 ;; Defined at:
  6434 ;;		line 176 in file "adf7012.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;		None
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;  reg             4   31[BANK0 ] unsigned long 
  6439 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  6440 ;; Return value:  Size  Location     Type
  6441 ;;		None               void
  6442 ;; Registers used:
  6443 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;Total ram usage:       19 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    7
  6456 ;; This function calls:
  6457 ;;		_Reverse_Array
  6458 ;;		_Write_Adf7012_Reg
  6459 ;;		_memcpy
  6460 ;; This function is called by:
  6461 ;;		_Adf_Write_Config
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           
  6466                           ;psect for function _Adf_Write_Register_One
  6467  0AE6                     _Adf_Write_Register_One:	
  6468                           
  6469                           ;adf7012.c: 177: uint32_t reg =
  6470                           ;adf7012.c: 178: (1) |
  6471                           ;adf7012.c: 179: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  6472                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  6473                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  6474                           
  6475                           ;incstack = 0
  6476                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6477  0AE6  0021               	movlb	1	; select bank1
  6478  0AE7  082F               	movf	(_adf_config^(0+128)+15),w
  6479  0AE8  3901               	andlw	1
  6480  0AE9  0020               	movlb	0	; select bank0
  6481  0AEA  00B3               	movwf	??_Adf_Write_Register_One
  6482  0AEB  01B4               	clrf	??_Adf_Write_Register_One+1
  6483  0AEC  01B5               	clrf	??_Adf_Write_Register_One+2
  6484  0AED  01B6               	clrf	??_Adf_Write_Register_One+3
  6485  0AEE  3016               	movlw	22
  6486  0AEF                     u2055:	
  6487  0AEF  35B3               	lslf	??_Adf_Write_Register_One,f
  6488  0AF0  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  6489  0AF1  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  6490  0AF2  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  6491  0AF3  0B89               	decfsz	9,f
  6492  0AF4  2AEF               	goto	u2055
  6493  0AF5  0021               	movlb	1	; select bank1
  6494  0AF6  082E               	movf	(_adf_config^(0+128)+14),w
  6495  0AF7  0020               	movlb	0	; select bank0
  6496  0AF8  00B7               	movwf	??_Adf_Write_Register_One+4
  6497  0AF9  01B8               	clrf	??_Adf_Write_Register_One+5
  6498  0AFA  01B9               	clrf	??_Adf_Write_Register_One+6
  6499  0AFB  01BA               	clrf	??_Adf_Write_Register_One+7
  6500  0AFC  300E               	movlw	14
  6501  0AFD                     u2065:	
  6502  0AFD  35B7               	lslf	??_Adf_Write_Register_One+4,f
  6503  0AFE  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  6504  0AFF  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  6505  0B00  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  6506  0B01  0B89               	decfsz	9,f
  6507  0B02  2AFD               	goto	u2065
  6508  0B03  300A               	movlw	10
  6509  0B04  3EA0               	addlw	_adf_config& (0+255)
  6510  0B05  0086               	movwf	6
  6511  0B06  0187               	clrf	7
  6512  0B07  30FF               	movlw	255
  6513  0B08  0501               	andwf	1,w
  6514  0B09  00BB               	movwf	??_Adf_Write_Register_One+8
  6515  0B0A  3141               	addfsr 1,1
  6516  0B0B  300F               	movlw	15
  6517  0B0C  0501               	andwf	1,w
  6518  0B0D  00BC               	movwf	??_Adf_Write_Register_One+9
  6519  0B0E  3141               	addfsr 1,1
  6520  0B0F  3000               	movlw	0
  6521  0B10  0501               	andwf	1,w
  6522  0B11  00BD               	movwf	??_Adf_Write_Register_One+10
  6523  0B12  3141               	addfsr 1,1
  6524  0B13  3000               	movlw	0
  6525  0B14  0501               	andwf	1,w
  6526  0B15  00BE               	movwf	??_Adf_Write_Register_One+11
  6527  0B16  3002               	movlw	2
  6528  0B17                     u2075:	
  6529  0B17  35BB               	lslf	??_Adf_Write_Register_One+8,f
  6530  0B18  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  6531  0B19  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  6532  0B1A  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  6533  0B1B  0B89               	decfsz	9,f
  6534  0B1C  2B17               	goto	u2075
  6535  0B1D  083B               	movf	??_Adf_Write_Register_One+8,w
  6536  0B1E  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  6537  0B1F  083C               	movf	??_Adf_Write_Register_One+9,w
  6538  0B20  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  6539  0B21  083D               	movf	??_Adf_Write_Register_One+10,w
  6540  0B22  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  6541  0B23  083E               	movf	??_Adf_Write_Register_One+11,w
  6542  0B24  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  6543  0B25  0837               	movf	??_Adf_Write_Register_One+4,w
  6544  0B26  04B3               	iorwf	??_Adf_Write_Register_One,f
  6545  0B27  0838               	movf	??_Adf_Write_Register_One+5,w
  6546  0B28  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  6547  0B29  0839               	movf	??_Adf_Write_Register_One+6,w
  6548  0B2A  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  6549  0B2B  083A               	movf	??_Adf_Write_Register_One+7,w
  6550  0B2C  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  6551  0B2D  3001               	movlw	1
  6552  0B2E  0433               	iorwf	??_Adf_Write_Register_One,w
  6553  0B2F  00BF               	movwf	Adf_Write_Register_One@reg
  6554  0B30  3000               	movlw	0
  6555  0B31  0434               	iorwf	??_Adf_Write_Register_One+1,w
  6556  0B32  00C0               	movwf	Adf_Write_Register_One@reg+1
  6557  0B33  3000               	movlw	0
  6558  0B34  0435               	iorwf	??_Adf_Write_Register_One+2,w
  6559  0B35  00C1               	movwf	Adf_Write_Register_One@reg+2
  6560  0B36  3000               	movlw	0
  6561  0B37  0436               	iorwf	??_Adf_Write_Register_One+3,w
  6562  0B38  00C2               	movwf	Adf_Write_Register_One@reg+3
  6563                           
  6564                           ;adf7012.c: 183: uint8_t reg_ptr[3];
  6565                           ;adf7012.c: 184: memcpy(reg_ptr, &reg, 3);
  6566  0B39  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  6567  0B3A  00B3               	movwf	??_Adf_Write_Register_One
  6568  0B3B  0833               	movf	??_Adf_Write_Register_One,w
  6569  0B3C  00A0               	movwf	memcpy@s1
  6570  0B3D  3003               	movlw	3
  6571  0B3E  00A1               	movwf	memcpy@n
  6572  0B3F  3000               	movlw	0
  6573  0B40  00A2               	movwf	memcpy@n+1
  6574  0B41  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  6575  0B42  3188  20A7  318A   	fcall	_memcpy
  6576                           
  6577                           ;adf7012.c: 185: Reverse_Array(reg_ptr,3);
  6578  0B45  3003               	movlw	3
  6579  0B46  0020               	movlb	0	; select bank0
  6580  0B47  00B3               	movwf	??_Adf_Write_Register_One
  6581  0B48  0833               	movf	??_Adf_Write_Register_One,w
  6582  0B49  00A7               	movwf	Reverse_Array@length
  6583  0B4A  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  6584  0B4B  3189  2156  318A   	fcall	_Reverse_Array
  6585                           
  6586                           ;adf7012.c: 186: Write_Adf7012_Reg(reg_ptr, 3);
  6587  0B4E  3003               	movlw	3
  6588  0B4F  0020               	movlb	0	; select bank0
  6589  0B50  00B3               	movwf	??_Adf_Write_Register_One
  6590  0B51  0833               	movf	??_Adf_Write_Register_One,w
  6591  0B52  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  6592  0B53  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  6593  0B54  3189  21C0         	fcall	_Write_Adf7012_Reg
  6594  0B56  0008               	return
  6595  0B57                     __end_of_Adf_Write_Register_One:	
  6596                           
  6597                           	psect	text33
  6598  09C0                     __ptext33:	
  6599 ;; *************** function _Write_Adf7012_Reg *****************
  6600 ;; Defined at:
  6601 ;;		line 88 in file "utility.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  reg_value       1    wreg     PTR unsigned char 
  6604 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6605 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  6608 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6609 ;;  i               1   13[BANK0 ] unsigned char 
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      unsigned char 
  6612 ;; Registers used:
  6613 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6619 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6620 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;Total ram usage:        4 bytes
  6624 ;; Hardware stack levels used:    1
  6625 ;; Hardware stack levels required when called:    6
  6626 ;; This function calls:
  6627 ;;		_Delay_ms
  6628 ;;		_Spi_Byte_Send
  6629 ;; This function is called by:
  6630 ;;		_Adf_Write_Register_Zero
  6631 ;;		_Adf_Write_Register_One
  6632 ;;		_Adf_Write_Register_Two
  6633 ;;		_Adf_Write_Register_Three
  6634 ;; This function uses a non-reentrant model
  6635 ;;
  6636                           
  6637                           
  6638                           ;psect for function _Write_Adf7012_Reg
  6639  09C0                     _Write_Adf7012_Reg:	
  6640                           
  6641                           ;incstack = 0
  6642                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6643                           ;Write_Adf7012_Reg@reg_value stored from wreg
  6644  09C0  0020               	movlb	0	; select bank0
  6645  09C1  00AC               	movwf	Write_Adf7012_Reg@reg_value
  6646                           
  6647                           ;utility.c: 90: uint8_t i = 0;
  6648  09C2  01AD               	clrf	Write_Adf7012_Reg@i
  6649                           
  6650                           ;utility.c: 91: Delay_ms(1);
  6651  09C3  3001               	movlw	1
  6652  09C4  00A0               	movwf	Delay_ms@time_to_delay
  6653  09C5  3000               	movlw	0
  6654  09C6  00A1               	movwf	Delay_ms@time_to_delay+1
  6655  09C7  3188  207E  3189   	fcall	_Delay_ms
  6656                           
  6657                           ;utility.c: 92: PORTAbits.RA4 = 0;;
  6658  09CA  0020               	movlb	0	; select bank0
  6659  09CB  120C               	bcf	12,4	;volatile
  6660                           
  6661                           ;utility.c: 93: Delay_ms(1);
  6662  09CC  3001               	movlw	1
  6663  09CD  00A0               	movwf	Delay_ms@time_to_delay
  6664  09CE  3000               	movlw	0
  6665  09CF  00A1               	movwf	Delay_ms@time_to_delay+1
  6666  09D0  3188  207E  3189   	fcall	_Delay_ms
  6667                           
  6668                           ;utility.c: 95: for (i = 0; i < size_of_reg; i++){
  6669  09D3  0020               	movlb	0	; select bank0
  6670  09D4  01AD               	clrf	Write_Adf7012_Reg@i
  6671  09D5                     l2057:	
  6672  09D5  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  6673  09D6  022D               	subwf	Write_Adf7012_Reg@i,w
  6674  09D7  1803               	btfsc	3,0
  6675  09D8  29E9               	goto	l2059
  6676                           
  6677                           ;utility.c: 96: Spi_Byte_Send(*(reg_value+i));
  6678  09D9  082D               	movf	Write_Adf7012_Reg@i,w
  6679  09DA  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  6680  09DB  00AB               	movwf	??_Write_Adf7012_Reg
  6681  09DC  082B               	movf	??_Write_Adf7012_Reg,w
  6682  09DD  0086               	movwf	6
  6683  09DE  0187               	clrf	7
  6684  09DF  0801               	movf	1,w
  6685  09E0  3188  20D0  3189   	fcall	_Spi_Byte_Send
  6686  09E3  3001               	movlw	1
  6687  09E4  0020               	movlb	0	; select bank0
  6688  09E5  00AB               	movwf	??_Write_Adf7012_Reg
  6689  09E6  082B               	movf	??_Write_Adf7012_Reg,w
  6690  09E7  07AD               	addwf	Write_Adf7012_Reg@i,f
  6691  09E8  29D5               	goto	l2057
  6692  09E9                     l2059:	
  6693                           
  6694                           ;utility.c: 97: }
  6695                           ;utility.c: 99: Delay_ms(1);
  6696  09E9  3001               	movlw	1
  6697  09EA  00A0               	movwf	Delay_ms@time_to_delay
  6698  09EB  3000               	movlw	0
  6699  09EC  00A1               	movwf	Delay_ms@time_to_delay+1
  6700  09ED  3188  207E  3189   	fcall	_Delay_ms
  6701                           
  6702                           ;utility.c: 100: PORTAbits.RA4 = 1;;
  6703  09F0  0020               	movlb	0	; select bank0
  6704  09F1  160C               	bsf	12,4	;volatile
  6705                           
  6706                           ;utility.c: 102: Delay_ms(1);
  6707  09F2  3001               	movlw	1
  6708  09F3  00A0               	movwf	Delay_ms@time_to_delay
  6709  09F4  3000               	movlw	0
  6710  09F5  00A1               	movwf	Delay_ms@time_to_delay+1
  6711  09F6  3188  207E         	fcall	_Delay_ms
  6712  09F8  0008               	return
  6713  09F9                     __end_of_Write_Adf7012_Reg:	
  6714                           ;utility.c: 103: return 1;
  6715                           ;	Return value of _Write_Adf7012_Reg is never used
  6716                           
  6717                           
  6718                           	psect	text34
  6719  08D0                     __ptext34:	
  6720 ;; *************** function _Spi_Byte_Send *****************
  6721 ;; Defined at:
  6722 ;;		line 226 in file "utility.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  data            1    wreg     unsigned char 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  data            1    7[BANK0 ] unsigned char 
  6727 ;;  i               1    9[BANK0 ] unsigned char 
  6728 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      unsigned char 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0, pclath, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6741 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6742 ;;Total ram usage:        4 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    5
  6745 ;; This function calls:
  6746 ;;		_Delay_ms
  6747 ;; This function is called by:
  6748 ;;		_Write_Adf7012_Reg
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function _Spi_Byte_Send
  6754  08D0                     _Spi_Byte_Send:	
  6755                           
  6756                           ;incstack = 0
  6757                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  6758                           ;Spi_Byte_Send@data stored from wreg
  6759  08D0  0020               	movlb	0	; select bank0
  6760  08D1  00A7               	movwf	Spi_Byte_Send@data
  6761                           
  6762                           ;utility.c: 228: PORTAbits.RA2 = 0;
  6763  08D2  110C               	bcf	12,2	;volatile
  6764                           
  6765                           ;utility.c: 229: uint8_t i;
  6766                           ;utility.c: 230: uint8_t data_to_send;
  6767                           ;utility.c: 231: data_to_send = data;
  6768  08D3  0827               	movf	Spi_Byte_Send@data,w
  6769  08D4  00A6               	movwf	??_Spi_Byte_Send
  6770  08D5  0826               	movf	??_Spi_Byte_Send,w
  6771  08D6  00A8               	movwf	Spi_Byte_Send@data_to_send
  6772                           
  6773                           ;utility.c: 232: for(i = 0; i <8; i++){
  6774  08D7  01A9               	clrf	Spi_Byte_Send@i
  6775  08D8                     L1:	
  6776  08D8  3008               	movlw	8
  6777  08D9  0229               	subwf	Spi_Byte_Send@i,w
  6778  08DA  1803               	btfsc	3,0
  6779  08DB  0008               	return
  6780                           
  6781                           ;utility.c: 234: if(data_to_send & 0x80)
  6782  08DC  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  6783  08DD  28E0               	goto	l226
  6784                           
  6785                           ;utility.c: 235: PORTCbits.RC2 = 1;
  6786  08DE  150E               	bsf	14,2	;volatile
  6787  08DF  28E1               	goto	l2021
  6788  08E0                     l226:	
  6789                           
  6790                           ;utility.c: 236: else
  6791                           ;utility.c: 237: PORTCbits.RC2 = 0;
  6792  08E0  110E               	bcf	14,2	;volatile
  6793  08E1                     l2021:	
  6794                           
  6795                           ;utility.c: 239: data_to_send <<= 1;
  6796  08E1  1003               	clrc
  6797  08E2  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  6798                           
  6799                           ;utility.c: 241: PORTAbits.RA2 = 1;
  6800  08E3  150C               	bsf	12,2	;volatile
  6801                           
  6802                           ;utility.c: 242: Delay_ms(1);
  6803  08E4  3001               	movlw	1
  6804  08E5  00A0               	movwf	Delay_ms@time_to_delay
  6805  08E6  3000               	movlw	0
  6806  08E7  00A1               	movwf	Delay_ms@time_to_delay+1
  6807  08E8  3188  207E  3188   	fcall	_Delay_ms
  6808                           
  6809                           ;utility.c: 243: PORTAbits.RA2 = 0;
  6810  08EB  0020               	movlb	0	; select bank0
  6811  08EC  110C               	bcf	12,2	;volatile
  6812                           
  6813                           ;utility.c: 244: Delay_ms(1);
  6814  08ED  3001               	movlw	1
  6815  08EE  00A0               	movwf	Delay_ms@time_to_delay
  6816  08EF  3000               	movlw	0
  6817  08F0  00A1               	movwf	Delay_ms@time_to_delay+1
  6818  08F1  3188  207E  3188   	fcall	_Delay_ms
  6819  08F4  3001               	movlw	1
  6820  08F5  0020               	movlb	0	; select bank0
  6821  08F6  00A6               	movwf	??_Spi_Byte_Send
  6822  08F7  0826               	movf	??_Spi_Byte_Send,w
  6823  08F8  07A9               	addwf	Spi_Byte_Send@i,f
  6824  08F9  28D8               	goto	L1
  6825  08FA                     __end_of_Spi_Byte_Send:	
  6826                           ;utility.c: 246: }
  6827                           ;utility.c: 247: return 1;
  6828                           ;	Return value of _Spi_Byte_Send is never used
  6829                           
  6830                           
  6831                           	psect	text35
  6832  0956                     __ptext35:	
  6833 ;; *************** function _Reverse_Array *****************
  6834 ;; Defined at:
  6835 ;;		line 204 in file "utility.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  input           1    wreg     PTR unsigned char 
  6838 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6839 ;;  length          1    7[BANK0 ] unsigned char 
  6840 ;; Auto vars:     Size  Location     Type
  6841 ;;  input           1   17[BANK0 ] PTR unsigned char 
  6842 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6843 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  6844 ;;  i               1   18[BANK0 ] unsigned char 
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  1    wreg      unsigned char 
  6847 ;; Registers used:
  6848 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6854 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6855 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6856 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6857 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6858 ;;Total ram usage:       12 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; Hardware stack levels required when called:    4
  6861 ;; This function calls:
  6862 ;;		_memcpy
  6863 ;; This function is called by:
  6864 ;;		_Adf_Write_Register_Zero
  6865 ;;		_Adf_Write_Register_One
  6866 ;;		_Adf_Write_Register_Two
  6867 ;;		_Adf_Write_Register_Three
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           
  6872                           ;psect for function _Reverse_Array
  6873  0956                     _Reverse_Array:	
  6874                           
  6875                           ;incstack = 0
  6876                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6877                           ;Reverse_Array@input stored from wreg
  6878  0956  0020               	movlb	0	; select bank0
  6879  0957  00B1               	movwf	Reverse_Array@input
  6880                           
  6881                           ;utility.c: 205: uint8_t i = 0;
  6882  0958  01B2               	clrf	Reverse_Array@i
  6883                           
  6884                           ;utility.c: 206: uint8_t buffer_array[4];
  6885                           ;utility.c: 207: memcpy(buffer_array, input, length);
  6886  0959  0831               	movf	Reverse_Array@input,w
  6887  095A  00A8               	movwf	??_Reverse_Array
  6888  095B  0828               	movf	??_Reverse_Array,w
  6889  095C  00A0               	movwf	memcpy@s1
  6890  095D  0827               	movf	Reverse_Array@length,w
  6891  095E  00A9               	movwf	??_Reverse_Array+1
  6892  095F  01AA               	clrf	??_Reverse_Array+2
  6893  0960  0829               	movf	??_Reverse_Array+1,w
  6894  0961  00A1               	movwf	memcpy@n
  6895  0962  082A               	movf	??_Reverse_Array+2,w
  6896  0963  00A2               	movwf	memcpy@n+1
  6897  0964  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6898  0965  3188  20A7  3189   	fcall	_memcpy
  6899                           
  6900                           ;utility.c: 209: for(i = 0; i<length; i++){
  6901  0968  0020               	movlb	0	; select bank0
  6902  0969  01B2               	clrf	Reverse_Array@i
  6903  096A                     l2075:	
  6904  096A  0827               	movf	Reverse_Array@length,w
  6905  096B  0232               	subwf	Reverse_Array@i,w
  6906  096C  1803               	btfsc	3,0
  6907  096D  0008               	return
  6908                           
  6909                           ;utility.c: 210: *(input+i) = *(buffer_array+(length-1)-i);
  6910  096E  30FF               	movlw	-1
  6911  096F  0727               	addwf	Reverse_Array@length,w
  6912  0970  00A8               	movwf	??_Reverse_Array
  6913  0971  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6914  0972  0728               	addwf	??_Reverse_Array,w
  6915  0973  00A9               	movwf	??_Reverse_Array+1
  6916  0974  0332               	decf	Reverse_Array@i,w
  6917  0975  3AFF               	xorlw	255
  6918  0976  0729               	addwf	??_Reverse_Array+1,w
  6919  0977  00AA               	movwf	??_Reverse_Array+2
  6920  0978  082A               	movf	??_Reverse_Array+2,w
  6921  0979  0086               	movwf	6
  6922  097A  0187               	clrf	7
  6923  097B  0801               	movf	1,w
  6924  097C  00AB               	movwf	??_Reverse_Array+3
  6925  097D  0832               	movf	Reverse_Array@i,w
  6926  097E  0731               	addwf	Reverse_Array@input,w
  6927  097F  00AC               	movwf	??_Reverse_Array+4
  6928  0980  082C               	movf	??_Reverse_Array+4,w
  6929  0981  0086               	movwf	6
  6930  0982  0187               	clrf	7
  6931  0983  082B               	movf	??_Reverse_Array+3,w
  6932  0984  0081               	movwf	1
  6933  0985  3001               	movlw	1
  6934  0986  00A8               	movwf	??_Reverse_Array
  6935  0987  0828               	movf	??_Reverse_Array,w
  6936  0988  07B2               	addwf	Reverse_Array@i,f
  6937  0989  296A               	goto	l2075
  6938  098A                     __end_of_Reverse_Array:	
  6939                           ;utility.c: 211: }
  6940                           ;utility.c: 215: return 1;
  6941                           ;	Return value of _Reverse_Array is never used
  6942                           
  6943                           
  6944                           	psect	text36
  6945  08A7                     __ptext36:	
  6946 ;; *************** function _memcpy *****************
  6947 ;; Defined at:
  6948 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  d1              1    wreg     PTR void 
  6951 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6952 ;;		 -> Reverse_Array@buffer_array(4), 
  6953 ;;  s1              1    0[BANK0 ] PTR const void 
  6954 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6955 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6956 ;;  n               2    1[BANK0 ] unsigned int 
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;  d1              1    6[BANK0 ] PTR void 
  6959 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6960 ;;		 -> Reverse_Array@buffer_array(4), 
  6961 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6962 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6963 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6964 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6965 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6966 ;;		 -> Reverse_Array@buffer_array(4), 
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      PTR void 
  6969 ;; Registers used:
  6970 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6976 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;Total ram usage:        7 bytes
  6981 ;; Hardware stack levels used:    1
  6982 ;; Hardware stack levels required when called:    3
  6983 ;; This function calls:
  6984 ;;		Nothing
  6985 ;; This function is called by:
  6986 ;;		_Reverse_Array
  6987 ;;		_Adf_Write_Register_Zero
  6988 ;;		_Adf_Write_Register_One
  6989 ;;		_Adf_Write_Register_Two
  6990 ;;		_Adf_Write_Register_Three
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           
  6995                           ;psect for function _memcpy
  6996  08A7                     _memcpy:	
  6997                           
  6998                           ;incstack = 0
  6999                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7000                           ;memcpy@d1 stored from wreg
  7001  08A7  0020               	movlb	0	; select bank0
  7002  08A8  00A6               	movwf	memcpy@d1
  7003  08A9  0820               	movf	memcpy@s1,w
  7004  08AA  00A3               	movwf	??_memcpy
  7005  08AB  0823               	movf	??_memcpy,w
  7006  08AC  00A5               	movwf	memcpy@s
  7007  08AD  0826               	movf	memcpy@d1,w
  7008  08AE  00A3               	movwf	??_memcpy
  7009  08AF  0823               	movf	??_memcpy,w
  7010  08B0  00A4               	movwf	memcpy@d
  7011  08B1                     l2043:	
  7012  08B1  3001               	movlw	1
  7013  08B2  02A1               	subwf	memcpy@n,f
  7014  08B3  3000               	movlw	0
  7015  08B4  3BA2               	subwfb	memcpy@n+1,f
  7016  08B5  30FF               	movlw	255
  7017  08B6  0622               	xorwf	memcpy@n+1,w
  7018  08B7  1D03               	skipz
  7019  08B8  28BB               	goto	u1945
  7020  08B9  30FF               	movlw	255
  7021  08BA  0621               	xorwf	memcpy@n,w
  7022  08BB                     u1945:	
  7023  08BB  1903               	btfsc	3,2
  7024  08BC  0008               	return
  7025  08BD  0825               	movf	memcpy@s,w
  7026  08BE  0086               	movwf	6
  7027  08BF  0187               	clrf	7
  7028  08C0  0801               	movf	1,w
  7029  08C1  00A3               	movwf	??_memcpy
  7030  08C2  0824               	movf	memcpy@d,w
  7031  08C3  0086               	movwf	6
  7032  08C4  0187               	clrf	7
  7033  08C5  0823               	movf	??_memcpy,w
  7034  08C6  0081               	movwf	1
  7035  08C7  3001               	movlw	1
  7036  08C8  00A3               	movwf	??_memcpy
  7037  08C9  0823               	movf	??_memcpy,w
  7038  08CA  07A5               	addwf	memcpy@s,f
  7039  08CB  3001               	movlw	1
  7040  08CC  00A3               	movwf	??_memcpy
  7041  08CD  0823               	movf	??_memcpy,w
  7042  08CE  07A4               	addwf	memcpy@d,f
  7043  08CF  28B1               	goto	l2043
  7044  08D0                     __end_of_memcpy:	
  7045                           ;	Return value of _memcpy is never used
  7046                           
  7047                           
  7048                           	psect	text37
  7049  07FD                     __ptext37:	
  7050 ;; *************** function _Adf_Locked *****************
  7051 ;; Defined at:
  7052 ;;		line 271 in file "adf7012.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;		None
  7055 ;; Auto vars:     Size  Location     Type
  7056 ;;		None
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      unsigned char 
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0, pclath, cstack
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7070 ;;Total ram usage:        0 bytes
  7071 ;; Hardware stack levels used:    1
  7072 ;; Hardware stack levels required when called:    6
  7073 ;; This function calls:
  7074 ;;		_Read_Adf7012_Muxout
  7075 ;; This function is called by:
  7076 ;;		_Adf_Lock
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           
  7081                           ;psect for function _Adf_Locked
  7082  07FD                     _Adf_Locked:	
  7083                           
  7084                           ;adf7012.c: 273: return Read_Adf7012_Muxout();
  7085                           
  7086                           ;incstack = 0
  7087                           ; Regs used in _Adf_Locked: [wreg+status,2+status,0+pclath+cstack]
  7088  07FD  3197  272E         	fcall	_Read_Adf7012_Muxout
  7089  07FF  0008               	return
  7090  0800                     __end_of_Adf_Locked:	
  7091                           
  7092                           	psect	text38
  7093  172E                     __ptext38:	
  7094 ;; *************** function _Read_Adf7012_Muxout *****************
  7095 ;; Defined at:
  7096 ;;		line 68 in file "utility.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      unsigned char 
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0, pclath, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7114 ;;Total ram usage:        0 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    5
  7117 ;; This function calls:
  7118 ;;		_Delay_ms
  7119 ;; This function is called by:
  7120 ;;		_Adf_Locked
  7121 ;;		_Ptt_On
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           
  7126                           ;psect for function _Read_Adf7012_Muxout
  7127  172E                     _Read_Adf7012_Muxout:	
  7128                           
  7129                           ;utility.c: 70: Delay_ms(1);
  7130                           
  7131                           ;incstack = 0
  7132                           ; Regs used in _Read_Adf7012_Muxout: [wreg+status,2+status,0+pclath+cstack]
  7133  172E  3001               	movlw	1
  7134  172F  0020               	movlb	0	; select bank0
  7135  1730  00A0               	movwf	Delay_ms@time_to_delay
  7136  1731  3000               	movlw	0
  7137  1732  00A1               	movwf	Delay_ms@time_to_delay+1
  7138  1733  3188  207E  3197   	fcall	_Delay_ms
  7139                           
  7140                           ;utility.c: 72: if(PORTCbits.RC5)
  7141  1736  0020               	movlb	0	; select bank0
  7142  1737  1E8E               	btfss	14,5	;volatile
  7143  1738  2F3B               	goto	l2087
  7144                           
  7145                           ;utility.c: 73: return 1;
  7146  1739  3001               	movlw	1
  7147  173A  0008               	return
  7148  173B                     l2087:	
  7149                           
  7150                           ;utility.c: 74: else
  7151                           ;utility.c: 75: return 0;
  7152  173B  3000               	movlw	0
  7153  173C  0008               	return
  7154  173D                     __end_of_Read_Adf7012_Muxout:	
  7155                           
  7156                           	psect	text39
  7157  087E                     __ptext39:	
  7158 ;; *************** function _Delay_ms *****************
  7159 ;; Defined at:
  7160 ;;		line 46 in file "utility.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  i               2    4[BANK0 ] unsigned int 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;		None               void
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0, pclath, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7174 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7177 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7178 ;;Total ram usage:        6 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    4
  7181 ;; This function calls:
  7182 ;;		_Dac0_Start_Hold
  7183 ;; This function is called by:
  7184 ;;		_main
  7185 ;;		_Read_Adf7012_Muxout
  7186 ;;		_Write_Adf7012_Reg
  7187 ;;		_Spi_Byte_Send
  7188 ;;		_Adf_Reset
  7189 ;;		_Adf_Lock
  7190 ;;		_Radio_Setup
  7191 ;;		_Ptt_On
  7192 ;;		_Ptt_Off
  7193 ;;		_Modem_Flush_Frame
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           
  7198                           ;psect for function _Delay_ms
  7199  087E                     _Delay_ms:	
  7200                           
  7201                           ;utility.c: 48: uint16_t i=0;
  7202                           
  7203                           ;incstack = 0
  7204                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  7205  087E  0020               	movlb	0	; select bank0
  7206  087F  01A4               	clrf	Delay_ms@i
  7207  0880  01A5               	clrf	Delay_ms@i+1
  7208                           
  7209                           ;utility.c: 50: INTCON &= ~0xC0;
  7210  0881  303F               	movlw	63
  7211  0882  00A2               	movwf	??_Delay_ms
  7212  0883  0822               	movf	??_Delay_ms,w
  7213  0884  058B               	andwf	11,f	;volatile
  7214                           
  7215                           ;utility.c: 51: Dac0_Start_Hold();
  7216  0885  3196  26E5  3188   	fcall	_Dac0_Start_Hold
  7217                           
  7218                           ;utility.c: 52: for(i=0; i<time_to_delay; i++){
  7219  0888  0020               	movlb	0	; select bank0
  7220  0889  01A4               	clrf	Delay_ms@i
  7221  088A  01A5               	clrf	Delay_ms@i+1
  7222  088B                     l198:	
  7223  088B  0821               	movf	Delay_ms@time_to_delay+1,w
  7224  088C  0225               	subwf	Delay_ms@i+1,w
  7225  088D  1D03               	skipz
  7226  088E  2891               	goto	u1905
  7227  088F  0820               	movf	Delay_ms@time_to_delay,w
  7228  0890  0224               	subwf	Delay_ms@i,w
  7229  0891                     u1905:	
  7230  0891  1803               	btfsc	3,0
  7231  0892  28A2               	goto	l2007
  7232                           
  7233                           ;utility.c: 53: _delay((unsigned long)((1)*(32000000/4000.0)));
  7234  0893  300B               	movlw	11
  7235  0894  00A3               	movwf	??_Delay_ms+1
  7236  0895  3062               	movlw	98
  7237  0896  00A2               	movwf	??_Delay_ms
  7238  0897                     u3797:	
  7239  0897  0BA2               	decfsz	??_Delay_ms,f
  7240  0898  2897               	goto	u3797
  7241  0899  0BA3               	decfsz	??_Delay_ms+1,f
  7242  089A  2897               	goto	u3797
  7243  089B  0000               	nop
  7244  089C  3001               	movlw	1
  7245  089D  0020               	movlb	0	; select bank0
  7246  089E  07A4               	addwf	Delay_ms@i,f
  7247  089F  3000               	movlw	0
  7248  08A0  3DA5               	addwfc	Delay_ms@i+1,f
  7249  08A1  288B               	goto	l198
  7250  08A2                     l2007:	
  7251                           
  7252                           ;utility.c: 54: }
  7253                           ;utility.c: 55: INTCON |= 0xC0;
  7254  08A2  30C0               	movlw	192
  7255  08A3  00A2               	movwf	??_Delay_ms
  7256  08A4  0822               	movf	??_Delay_ms,w
  7257  08A5  048B               	iorwf	11,f	;volatile
  7258  08A6  0008               	return
  7259  08A7                     __end_of_Delay_ms:	
  7260                           
  7261                           	psect	text40
  7262  16E5                     __ptext40:	
  7263 ;; *************** function _Dac0_Start_Hold *****************
  7264 ;; Defined at:
  7265 ;;		line 287 in file "utility.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;		None
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;		None
  7270 ;; Return value:  Size  Location     Type
  7271 ;;		None               void
  7272 ;; Registers used:
  7273 ;;		wreg
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7283 ;;Total ram usage:        0 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:    3
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_main
  7290 ;;		_Delay_ms
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           
  7295                           ;psect for function _Dac0_Start_Hold
  7296  16E5                     _Dac0_Start_Hold:	
  7297                           
  7298                           ;utility.c: 288: DACEN = 1;
  7299                           
  7300                           ;incstack = 0
  7301                           ; Regs used in _Dac0_Start_Hold: [wreg]
  7302  16E5  0022               	movlb	2	; select bank2
  7303  16E6  1798               	bsf	24,7	;volatile
  7304                           
  7305                           ;utility.c: 289: DACCON1 = 0x10;
  7306  16E7  3010               	movlw	16
  7307  16E8  0099               	movwf	25	;volatile
  7308  16E9  0008               	return
  7309  16EA                     __end_of_Dac0_Start_Hold:	
  7310                           
  7311                           	psect	text41
  7312  17C6                     __ptext41:	
  7313 ;; *************** function _Ax25_Send_String *****************
  7314 ;; Defined at:
  7315 ;;		line 94 in file "ax25.c"
  7316 ;; Parameters:    Size  Location     Type
  7317 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  7318 ;;		 -> STR_1(6), 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  i               2   15[BANK0 ] int 
  7321 ;; Return value:  Size  Location     Type
  7322 ;;		None               void
  7323 ;; Registers used:
  7324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7325 ;; Tracked objects:
  7326 ;;		On entry : 0/0
  7327 ;;		On exit  : 0/0
  7328 ;;		Unchanged: 0/0
  7329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7330 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;Total ram usage:        4 bytes
  7335 ;; Hardware stack levels used:    1
  7336 ;; Hardware stack levels required when called:    6
  7337 ;; This function calls:
  7338 ;;		_Ax25_Send_Byte
  7339 ;; This function is called by:
  7340 ;;		_main
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           
  7345                           ;psect for function _Ax25_Send_String
  7346  17C6                     _Ax25_Send_String:	
  7347                           
  7348                           ;ax25.c: 96: int i;
  7349                           ;ax25.c: 97: for (i = 0; string[i]; i++) {
  7350                           
  7351                           ;incstack = 0
  7352                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7353  17C6  0020               	movlb	0	; select bank0
  7354  17C7  01AF               	clrf	Ax25_Send_String@i
  7355  17C8  01B0               	clrf	Ax25_Send_String@i+1
  7356  17C9                     l2901:	
  7357  17C9  082D               	movf	Ax25_Send_String@string,w
  7358  17CA  072F               	addwf	Ax25_Send_String@i,w
  7359  17CB  0084               	movwf	4
  7360  17CC  082E               	movf	Ax25_Send_String@string+1,w
  7361  17CD  3D30               	addwfc	Ax25_Send_String@i+1,w
  7362  17CE  0085               	movwf	5
  7363  17CF  0800               	movf	0,w	;code access
  7364  17D0  3800               	iorlw	0
  7365  17D1  1903               	btfsc	3,2
  7366  17D2  0008               	return
  7367                           
  7368                           ;ax25.c: 98: Ax25_Send_Byte(string[i]);
  7369  17D3  082D               	movf	Ax25_Send_String@string,w
  7370  17D4  072F               	addwf	Ax25_Send_String@i,w
  7371  17D5  0084               	movwf	4
  7372  17D6  082E               	movf	Ax25_Send_String@string+1,w
  7373  17D7  3D30               	addwfc	Ax25_Send_String@i+1,w
  7374  17D8  0085               	movwf	5
  7375  17D9  0800               	movf	0,w	;code access
  7376  17DA  3196  26F0  3197   	fcall	_Ax25_Send_Byte
  7377  17DD  3001               	movlw	1
  7378  17DE  0020               	movlb	0	; select bank0
  7379  17DF  07AF               	addwf	Ax25_Send_String@i,f
  7380  17E0  3000               	movlw	0
  7381  17E1  3DB0               	addwfc	Ax25_Send_String@i+1,f
  7382  17E2  2FC9               	goto	l2901
  7383  17E3                     __end_of_Ax25_Send_String:	
  7384                           
  7385                           	psect	text42
  7386  16F0                     __ptext42:	
  7387 ;; *************** function _Ax25_Send_Byte *****************
  7388 ;; Defined at:
  7389 ;;		line 59 in file "ax25.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;  byte            1    wreg     unsigned char 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;  byte            1   12[BANK0 ] unsigned char 
  7394 ;; Return value:  Size  Location     Type
  7395 ;;		None               void
  7396 ;; Registers used:
  7397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7406 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7407 ;;Total ram usage:        1 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; Hardware stack levels required when called:    5
  7410 ;; This function calls:
  7411 ;;		_Send_Byte
  7412 ;; This function is called by:
  7413 ;;		_Ax25_Send_String
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           
  7418                           ;psect for function _Ax25_Send_Byte
  7419  16F0                     _Ax25_Send_Byte:	
  7420                           
  7421                           ;incstack = 0
  7422                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7423                           ;Ax25_Send_Byte@byte stored from wreg
  7424  16F0  0020               	movlb	0	; select bank0
  7425  16F1  00AC               	movwf	Ax25_Send_Byte@byte
  7426                           
  7427                           ;ax25.c: 62: Send_Byte(byte);
  7428  16F2  082C               	movf	Ax25_Send_Byte@byte,w
  7429  16F3  318E  2698         	fcall	_Send_Byte
  7430  16F5  0008               	return
  7431  16F6                     __end_of_Ax25_Send_Byte:	
  7432                           
  7433                           	psect	text43
  7434  03DC                     __ptext43:	
  7435 ;; *************** function _Ax25_Send_Header *****************
  7436 ;; Defined at:
  7437 ;;		line 102 in file "ax25.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  addresses       1    wreg     PTR struct .
  7440 ;;		 -> main@beacon_address(16), 
  7441 ;;  num_addresse    2   12[BANK0 ] int 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;  addresses       1   19[BANK0 ] PTR struct .
  7444 ;;		 -> main@beacon_address(16), 
  7445 ;;  i               2   20[BANK0 ] int 
  7446 ;;  j               2   17[BANK0 ] int 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;		None               void
  7449 ;; Registers used:
  7450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7456 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;Total ram usage:       10 bytes
  7461 ;; Hardware stack levels used:    1
  7462 ;; Hardware stack levels required when called:    5
  7463 ;; This function calls:
  7464 ;;		_Ax25_Send_Flag
  7465 ;;		_Ax25_Send_Sync
  7466 ;;		_Send_Byte
  7467 ;; This function is called by:
  7468 ;;		_main
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           
  7473                           ;psect for function _Ax25_Send_Header
  7474  03DC                     _Ax25_Send_Header:	
  7475                           
  7476                           ;incstack = 0
  7477                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7478                           ;Ax25_Send_Header@addresses stored from wreg
  7479  03DC  0020               	movlb	0	; select bank0
  7480  03DD  00B3               	movwf	Ax25_Send_Header@addresses
  7481                           
  7482                           ;ax25.c: 105: int i, j;
  7483                           ;ax25.c: 106: modem_packet_size = 0;
  7484  03DE  3000               	movlw	0
  7485  03DF  00FC               	movwf	_modem_packet_size+3
  7486  03E0  3000               	movlw	0
  7487  03E1  00FB               	movwf	_modem_packet_size+2
  7488  03E2  3000               	movlw	0
  7489  03E3  00FA               	movwf	_modem_packet_size+1
  7490  03E4  3000               	movlw	0
  7491  03E5  00F9               	movwf	_modem_packet_size
  7492                           
  7493                           ;ax25.c: 107: ones_in_a_row = 0;
  7494  03E6  0022               	movlb	2	; select bank2
  7495  03E7  01B4               	clrf	_ones_in_a_row^(0+256)
  7496  03E8  01B5               	clrf	(_ones_in_a_row+1)^(0+256)
  7497                           
  7498                           ;ax25.c: 108: crc = 0xffff;
  7499  03E9  30FF               	movlw	255
  7500  03EA  0021               	movlb	1	; select bank1
  7501  03EB  00C7               	movwf	_crc^(0+128)
  7502  03EC  30FF               	movlw	255
  7503  03ED  00C8               	movwf	(_crc^(0+128)+1)
  7504                           
  7505                           ;ax25.c: 111: for (i = 0; i < 10; i++)
  7506  03EE  0020               	movlb	0	; select bank0
  7507  03EF  01B4               	clrf	Ax25_Send_Header@i
  7508  03F0  01B5               	clrf	Ax25_Send_Header@i+1
  7509  03F1  0835               	movf	Ax25_Send_Header@i+1,w
  7510  03F2  3A80               	xorlw	128
  7511  03F3  00AE               	movwf	??_Ax25_Send_Header
  7512  03F4  3080               	movlw	128
  7513  03F5  022E               	subwf	??_Ax25_Send_Header,w
  7514  03F6  1D03               	skipz
  7515  03F7  2BFA               	goto	u3595
  7516  03F8  300A               	movlw	10
  7517  03F9  0234               	subwf	Ax25_Send_Header@i,w
  7518  03FA                     u3595:	
  7519  03FA  1803               	btfsc	3,0
  7520  03FB  2C0F               	goto	l2857
  7521  03FC                     l2851:	
  7522                           
  7523                           ;ax25.c: 112: {
  7524                           ;ax25.c: 113: Ax25_Send_Sync();
  7525  03FC  318B  23CC  3183   	fcall	_Ax25_Send_Sync
  7526  03FF  3001               	movlw	1
  7527  0400  0020               	movlb	0	; select bank0
  7528  0401  07B4               	addwf	Ax25_Send_Header@i,f
  7529  0402  3000               	movlw	0
  7530  0403  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  7531  0404  0835               	movf	Ax25_Send_Header@i+1,w
  7532  0405  3A80               	xorlw	128
  7533  0406  00AE               	movwf	??_Ax25_Send_Header
  7534  0407  3080               	movlw	128
  7535  0408  022E               	subwf	??_Ax25_Send_Header,w
  7536  0409  1D03               	skipz
  7537  040A  2C0D               	goto	u3605
  7538  040B  300A               	movlw	10
  7539  040C  0234               	subwf	Ax25_Send_Header@i,w
  7540  040D                     u3605:	
  7541  040D  1C03               	skipc
  7542  040E  2BFC               	goto	l2851
  7543  040F                     l2857:	
  7544                           
  7545                           ;ax25.c: 114: }
  7546                           ;ax25.c: 117: for (i = 0; i < 3; i++)
  7547  040F  0020               	movlb	0	; select bank0
  7548  0410  01B4               	clrf	Ax25_Send_Header@i
  7549  0411  01B5               	clrf	Ax25_Send_Header@i+1
  7550  0412  0835               	movf	Ax25_Send_Header@i+1,w
  7551  0413  3A80               	xorlw	128
  7552  0414  00AE               	movwf	??_Ax25_Send_Header
  7553  0415  3080               	movlw	128
  7554  0416  022E               	subwf	??_Ax25_Send_Header,w
  7555  0417  1D03               	skipz
  7556  0418  2C1B               	goto	u3615
  7557  0419  3003               	movlw	3
  7558  041A  0234               	subwf	Ax25_Send_Header@i,w
  7559  041B                     u3615:	
  7560  041B  1803               	btfsc	3,0
  7561  041C  2C30               	goto	l2869
  7562  041D                     l2863:	
  7563                           
  7564                           ;ax25.c: 118: {
  7565                           ;ax25.c: 119: Ax25_Send_Flag();
  7566  041D  3185  257C  3183   	fcall	_Ax25_Send_Flag
  7567  0420  3001               	movlw	1
  7568  0421  0020               	movlb	0	; select bank0
  7569  0422  07B4               	addwf	Ax25_Send_Header@i,f
  7570  0423  3000               	movlw	0
  7571  0424  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  7572  0425  0835               	movf	Ax25_Send_Header@i+1,w
  7573  0426  3A80               	xorlw	128
  7574  0427  00AE               	movwf	??_Ax25_Send_Header
  7575  0428  3080               	movlw	128
  7576  0429  022E               	subwf	??_Ax25_Send_Header,w
  7577  042A  1D03               	skipz
  7578  042B  2C2E               	goto	u3625
  7579  042C  3003               	movlw	3
  7580  042D  0234               	subwf	Ax25_Send_Header@i,w
  7581  042E                     u3625:	
  7582  042E  1C03               	skipc
  7583  042F  2C1D               	goto	l2863
  7584  0430                     l2869:	
  7585                           
  7586                           ;ax25.c: 120: }
  7587                           ;ax25.c: 122: for (i = 0; i < num_addresses; i++) {
  7588  0430  0020               	movlb	0	; select bank0
  7589  0431  01B4               	clrf	Ax25_Send_Header@i
  7590  0432  01B5               	clrf	Ax25_Send_Header@i+1
  7591  0433                     l2891:	
  7592  0433  0835               	movf	Ax25_Send_Header@i+1,w
  7593  0434  3A80               	xorlw	128
  7594  0435  00AE               	movwf	??_Ax25_Send_Header
  7595  0436  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  7596  0437  3A80               	xorlw	128
  7597  0438  022E               	subwf	??_Ax25_Send_Header,w
  7598  0439  1D03               	skipz
  7599  043A  2C3D               	goto	u3695
  7600  043B  082C               	movf	Ax25_Send_Header@num_addresses,w
  7601  043C  0234               	subwf	Ax25_Send_Header@i,w
  7602  043D                     u3695:	
  7603  043D  1803               	btfsc	3,0
  7604  043E  2CAD               	goto	l2893
  7605                           
  7606                           ;ax25.c: 124: for (j = 0; j < 6; j++)
  7607  043F  0020               	movlb	0	; select bank0
  7608  0440  01B1               	clrf	Ax25_Send_Header@j
  7609  0441  01B2               	clrf	Ax25_Send_Header@j+1
  7610  0442  0832               	movf	Ax25_Send_Header@j+1,w
  7611  0443  3A80               	xorlw	128
  7612  0444  00AE               	movwf	??_Ax25_Send_Header
  7613  0445  3080               	movlw	128
  7614  0446  022E               	subwf	??_Ax25_Send_Header,w
  7615  0447  1D03               	skipz
  7616  0448  2C4B               	goto	u3635
  7617  0449  3006               	movlw	6
  7618  044A  0231               	subwf	Ax25_Send_Header@j,w
  7619  044B                     u3635:	
  7620  044B  1803               	btfsc	3,0
  7621  044C  2C72               	goto	l2883
  7622  044D                     l2877:	
  7623                           
  7624                           ;ax25.c: 125: Send_Byte(addresses[i].callsign[j] << 1);
  7625  044D  0020               	movlb	0	; select bank0
  7626  044E  0834               	movf	Ax25_Send_Header@i,w
  7627  044F  00AE               	movwf	??_Ax25_Send_Header
  7628  0450  3002               	movlw	2
  7629  0451                     u3645:	
  7630  0451  35AE               	lslf	??_Ax25_Send_Header,f
  7631  0452  3EFF               	addlw	-1
  7632  0453  1D03               	skipz
  7633  0454  2C51               	goto	u3645
  7634  0455  352E               	lslf	??_Ax25_Send_Header,w
  7635  0456  0733               	addwf	Ax25_Send_Header@addresses,w
  7636  0457  00AF               	movwf	??_Ax25_Send_Header+1
  7637  0458  0831               	movf	Ax25_Send_Header@j,w
  7638  0459  072F               	addwf	??_Ax25_Send_Header+1,w
  7639  045A  00B0               	movwf	??_Ax25_Send_Header+2
  7640  045B  0830               	movf	??_Ax25_Send_Header+2,w
  7641  045C  0086               	movwf	6
  7642  045D  0187               	clrf	7
  7643  045E  3501               	lslf	1,w
  7644  045F  318E  2698  3183   	fcall	_Send_Byte
  7645  0462  3001               	movlw	1
  7646  0463  0020               	movlb	0	; select bank0
  7647  0464  07B1               	addwf	Ax25_Send_Header@j,f
  7648  0465  3000               	movlw	0
  7649  0466  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  7650  0467  0832               	movf	Ax25_Send_Header@j+1,w
  7651  0468  3A80               	xorlw	128
  7652  0469  00AE               	movwf	??_Ax25_Send_Header
  7653  046A  3080               	movlw	128
  7654  046B  022E               	subwf	??_Ax25_Send_Header,w
  7655  046C  1D03               	skipz
  7656  046D  2C70               	goto	u3655
  7657  046E  3006               	movlw	6
  7658  046F  0231               	subwf	Ax25_Send_Header@j,w
  7659  0470                     u3655:	
  7660  0470  1C03               	skipc
  7661  0471  2C4D               	goto	l2877
  7662  0472                     l2883:	
  7663                           
  7664                           ;ax25.c: 128: if (i == num_addresses - 1){
  7665  0472  0020               	movlb	0	; select bank0
  7666  0473  082C               	movf	Ax25_Send_Header@num_addresses,w
  7667  0474  3EFF               	addlw	255
  7668  0475  00AE               	movwf	??_Ax25_Send_Header
  7669  0476  30FF               	movlw	255
  7670  0477  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  7671  0478  00AF               	movwf	??_Ax25_Send_Header+1
  7672  0479  0835               	movf	Ax25_Send_Header@i+1,w
  7673  047A  062F               	xorwf	??_Ax25_Send_Header+1,w
  7674  047B  1D03               	skipz
  7675  047C  2C7F               	goto	u3665
  7676  047D  0834               	movf	Ax25_Send_Header@i,w
  7677  047E  062E               	xorwf	??_Ax25_Send_Header,w
  7678  047F                     u3665:	
  7679  047F  1D03               	skipz
  7680  0480  2C93               	goto	l2887
  7681                           
  7682                           ;ax25.c: 129: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  7683  0481  0834               	movf	Ax25_Send_Header@i,w
  7684  0482  00AE               	movwf	??_Ax25_Send_Header
  7685  0483  3002               	movlw	2
  7686  0484                     u3675:	
  7687  0484  35AE               	lslf	??_Ax25_Send_Header,f
  7688  0485  3EFF               	addlw	-1
  7689  0486  1D03               	skipz
  7690  0487  2C84               	goto	u3675
  7691  0488  352E               	lslf	??_Ax25_Send_Header,w
  7692  0489  0733               	addwf	Ax25_Send_Header@addresses,w
  7693  048A  00AF               	movwf	??_Ax25_Send_Header+1
  7694  048B  082F               	movf	??_Ax25_Send_Header+1,w
  7695  048C  3E07               	addlw	7
  7696  048D  0086               	movwf	6
  7697  048E  0187               	clrf	7
  7698  048F  3501               	lslf	1,w
  7699  0490  3E60               	addlw	96
  7700  0491  3801               	iorlw	1
  7701  0492  2CA4               	goto	L2
  7702  0493                     l2887:	
  7703                           ;ax25.c: 131: }
  7704                           
  7705                           
  7706                           ;ax25.c: 132: else
  7707                           ;ax25.c: 133: Send_Byte(('0' + addresses[i].ssid) << 1);
  7708  0493  0020               	movlb	0	; select bank0
  7709  0494  0834               	movf	Ax25_Send_Header@i,w
  7710  0495  00AE               	movwf	??_Ax25_Send_Header
  7711  0496  3002               	movlw	2
  7712  0497                     u3685:	
  7713  0497  35AE               	lslf	??_Ax25_Send_Header,f
  7714  0498  3EFF               	addlw	-1
  7715  0499  1D03               	skipz
  7716  049A  2C97               	goto	u3685
  7717  049B  352E               	lslf	??_Ax25_Send_Header,w
  7718  049C  0733               	addwf	Ax25_Send_Header@addresses,w
  7719  049D  00AF               	movwf	??_Ax25_Send_Header+1
  7720  049E  082F               	movf	??_Ax25_Send_Header+1,w
  7721  049F  3E07               	addlw	7
  7722  04A0  0086               	movwf	6
  7723  04A1  0187               	clrf	7
  7724  04A2  3501               	lslf	1,w
  7725  04A3  3E60               	addlw	96
  7726  04A4                     L2:	
  7727  04A4  318E  2698  3183   	fcall	_Send_Byte
  7728  04A7  3001               	movlw	1
  7729  04A8  0020               	movlb	0	; select bank0
  7730  04A9  07B4               	addwf	Ax25_Send_Header@i,f
  7731  04AA  3000               	movlw	0
  7732  04AB  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  7733  04AC  2C33               	goto	l2891
  7734  04AD                     l2893:	
  7735                           
  7736                           ;ax25.c: 134: }
  7737                           ;ax25.c: 137: Send_Byte(0x03);
  7738  04AD  3003               	movlw	3
  7739  04AE  318E  2698  3183   	fcall	_Send_Byte
  7740                           
  7741                           ;ax25.c: 140: Send_Byte(0xf0);
  7742  04B1  30F0               	movlw	240
  7743  04B2  318E  2698         	fcall	_Send_Byte
  7744  04B4  0008               	return
  7745  04B5                     __end_of_Ax25_Send_Header:	
  7746                           
  7747                           	psect	text44
  7748  0BCC                     __ptext44:	
  7749 ;; *************** function _Ax25_Send_Sync *****************
  7750 ;; Defined at:
  7751 ;;		line 66 in file "ax25.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;		None
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;  i               2    7[BANK0 ] int 
  7756 ;;  byte            1    6[BANK0 ] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;		None               void
  7759 ;; Registers used:
  7760 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;Total ram usage:        9 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    3
  7773 ;; This function calls:
  7774 ;;		Nothing
  7775 ;; This function is called by:
  7776 ;;		_Ax25_Send_Header
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           
  7781                           ;psect for function _Ax25_Send_Sync
  7782  0BCC                     _Ax25_Send_Sync:	
  7783                           
  7784                           ;ax25.c: 68: uint8_t byte = 0x00;
  7785                           
  7786                           ;incstack = 0
  7787                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  7788  0BCC  0020               	movlb	0	; select bank0
  7789  0BCD  01A6               	clrf	Ax25_Send_Sync@byte
  7790                           
  7791                           ;ax25.c: 69: int i;
  7792                           ;ax25.c: 70: for (i = 0; i < 8; i++, modem_packet_size++) {
  7793  0BCE  01A7               	clrf	Ax25_Send_Sync@i
  7794  0BCF  01A8               	clrf	Ax25_Send_Sync@i+1
  7795  0BD0                     L3:	
  7796  0BD0  0828               	movf	Ax25_Send_Sync@i+1,w
  7797  0BD1  3A80               	xorlw	128
  7798  0BD2  00A0               	movwf	??_Ax25_Send_Sync
  7799  0BD3  3080               	movlw	128
  7800  0BD4  0220               	subwf	??_Ax25_Send_Sync,w
  7801  0BD5  3008               	movlw	8
  7802  0BD6  1903               	btfsc	3,2
  7803  0BD7  0227               	subwf	Ax25_Send_Sync@i,w
  7804  0BD8  1803               	btfsc	3,0
  7805  0BD9  0008               	return
  7806                           
  7807                           ;ax25.c: 71: if (modem_packet_size >= 64 * 8)
  7808  0BDA  3000               	movlw	0
  7809  0BDB  027C               	subwf	_modem_packet_size+3,w
  7810  0BDC  1D03               	skipz
  7811  0BDD  2BE8               	goto	u3335
  7812  0BDE  3000               	movlw	0
  7813  0BDF  027B               	subwf	_modem_packet_size+2,w
  7814  0BE0  1D03               	skipz
  7815  0BE1  2BE8               	goto	u3335
  7816  0BE2  3002               	movlw	2
  7817  0BE3  027A               	subwf	_modem_packet_size+1,w
  7818  0BE4  1D03               	skipz
  7819  0BE5  2BE8               	goto	u3335
  7820  0BE6  3000               	movlw	0
  7821  0BE7  0279               	subwf	_modem_packet_size,w
  7822  0BE8                     u3335:	
  7823  0BE8  1803               	btfsc	3,0
  7824  0BE9  0008               	return
  7825                           
  7826                           ;ax25.c: 73: if ((byte >> i) & 1)
  7827                           
  7828                           ;ax25.c: 72: return;
  7829  0BEA  0020               	movlb	0	; select bank0
  7830  0BEB  0826               	movf	Ax25_Send_Sync@byte,w
  7831  0BEC  00A0               	movwf	??_Ax25_Send_Sync
  7832  0BED  0A27               	incf	Ax25_Send_Sync@i,w
  7833  0BEE  2BF0               	goto	u3344
  7834  0BEF                     u3345:	
  7835  0BEF  36A0               	lsrf	??_Ax25_Send_Sync,f
  7836  0BF0                     u3344:	
  7837  0BF0  0B89               	decfsz	9,f
  7838  0BF1  2BEF               	goto	u3345
  7839  0BF2  1C20               	btfss	??_Ax25_Send_Sync,0
  7840  0BF3  2C16               	goto	l2681
  7841                           
  7842                           ;ax25.c: 74: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  7843  0BF4  3001               	movlw	1
  7844  0BF5  00A0               	movwf	??_Ax25_Send_Sync
  7845  0BF6  0879               	movf	_modem_packet_size,w
  7846  0BF7  3907               	andlw	7
  7847  0BF8  0A89               	incf	9,f
  7848  0BF9  2BFB               	goto	u3364
  7849  0BFA                     u3365:	
  7850  0BFA  35A0               	lslf	??_Ax25_Send_Sync,f
  7851  0BFB                     u3364:	
  7852  0BFB  0B89               	decfsz	9,f
  7853  0BFC  2BFA               	goto	u3365
  7854  0BFD  0820               	movf	??_Ax25_Send_Sync,w
  7855  0BFE  00A1               	movwf	??_Ax25_Send_Sync+1
  7856  0BFF  0879               	movf	_modem_packet_size,w
  7857  0C00  00A2               	movwf	??_Ax25_Send_Sync+2
  7858  0C01  087A               	movf	_modem_packet_size+1,w
  7859  0C02  00A3               	movwf	??_Ax25_Send_Sync+3
  7860  0C03  087B               	movf	_modem_packet_size+2,w
  7861  0C04  00A4               	movwf	??_Ax25_Send_Sync+4
  7862  0C05  087C               	movf	_modem_packet_size+3,w
  7863  0C06  00A5               	movwf	??_Ax25_Send_Sync+5
  7864  0C07  3003               	movlw	3
  7865  0C08                     u3375:	
  7866  0C08  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  7867  0C09  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  7868  0C0A  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  7869  0C0B  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  7870  0C0C  0B89               	decfsz	9,f
  7871  0C0D  2C08               	goto	u3375
  7872  0C0E  0822               	movf	??_Ax25_Send_Sync+2,w
  7873  0C0F  3EA0               	addlw	_modem_packet& (0+255)
  7874  0C10  0086               	movwf	6
  7875  0C11  3001               	movlw	1	; select bank3/4
  7876  0C12  0087               	movwf	7
  7877  0C13  0821               	movf	??_Ax25_Send_Sync+1,w
  7878  0C14  0481               	iorwf	1,f
  7879  0C15  2C38               	goto	l2683
  7880  0C16                     l2681:	
  7881                           
  7882                           ;ax25.c: 75: else
  7883                           ;ax25.c: 76: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  7884  0C16  3001               	movlw	1
  7885  0C17  00A0               	movwf	??_Ax25_Send_Sync
  7886  0C18  0879               	movf	_modem_packet_size,w
  7887  0C19  3907               	andlw	7
  7888  0C1A  0A89               	incf	9,f
  7889  0C1B  2C1D               	goto	u3384
  7890  0C1C                     u3385:	
  7891  0C1C  35A0               	lslf	??_Ax25_Send_Sync,f
  7892  0C1D                     u3384:	
  7893  0C1D  0B89               	decfsz	9,f
  7894  0C1E  2C1C               	goto	u3385
  7895  0C1F  0820               	movf	??_Ax25_Send_Sync,w
  7896  0C20  3AFF               	xorlw	255
  7897  0C21  00A1               	movwf	??_Ax25_Send_Sync+1
  7898  0C22  0879               	movf	_modem_packet_size,w
  7899  0C23  00A2               	movwf	??_Ax25_Send_Sync+2
  7900  0C24  087A               	movf	_modem_packet_size+1,w
  7901  0C25  00A3               	movwf	??_Ax25_Send_Sync+3
  7902  0C26  087B               	movf	_modem_packet_size+2,w
  7903  0C27  00A4               	movwf	??_Ax25_Send_Sync+4
  7904  0C28  087C               	movf	_modem_packet_size+3,w
  7905  0C29  00A5               	movwf	??_Ax25_Send_Sync+5
  7906  0C2A  3003               	movlw	3
  7907  0C2B                     u3395:	
  7908  0C2B  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  7909  0C2C  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  7910  0C2D  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  7911  0C2E  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  7912  0C2F  0B89               	decfsz	9,f
  7913  0C30  2C2B               	goto	u3395
  7914  0C31  0822               	movf	??_Ax25_Send_Sync+2,w
  7915  0C32  3EA0               	addlw	_modem_packet& (0+255)
  7916  0C33  0086               	movwf	6
  7917  0C34  3001               	movlw	1	; select bank3/4
  7918  0C35  0087               	movwf	7
  7919  0C36  0821               	movf	??_Ax25_Send_Sync+1,w
  7920  0C37  0581               	andwf	1,f
  7921  0C38                     l2683:	
  7922  0C38  3001               	movlw	1
  7923  0C39  07A7               	addwf	Ax25_Send_Sync@i,f
  7924  0C3A  3000               	movlw	0
  7925  0C3B  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  7926  0C3C  3001               	movlw	1
  7927  0C3D  07F9               	addwf	_modem_packet_size,f
  7928  0C3E  3000               	movlw	0
  7929  0C3F  3DFA               	addwfc	_modem_packet_size+1,f
  7930  0C40  3000               	movlw	0
  7931  0C41  3DFB               	addwfc	_modem_packet_size+2,f
  7932  0C42  3000               	movlw	0
  7933  0C43  3DFC               	addwfc	_modem_packet_size+3,f
  7934  0C44  2BD0               	goto	L3
  7935  0C45                     __end_of_Ax25_Send_Sync:	
  7936                           
  7937                           	psect	text45
  7938  17AB                     __ptext45:	
  7939 ;; *************** function _Ax25_Send_Footer *****************
  7940 ;; Defined at:
  7941 ;;		line 144 in file "ax25.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;		None
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;  final_crc       2   12[BANK0 ] unsigned int 
  7946 ;; Return value:  Size  Location     Type
  7947 ;;		None               void
  7948 ;; Registers used:
  7949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7956 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;Total ram usage:        2 bytes
  7960 ;; Hardware stack levels used:    1
  7961 ;; Hardware stack levels required when called:    5
  7962 ;; This function calls:
  7963 ;;		_Ax25_Send_Flag
  7964 ;;		_Send_Byte
  7965 ;; This function is called by:
  7966 ;;		_main
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           
  7971                           ;psect for function _Ax25_Send_Footer
  7972  17AB                     _Ax25_Send_Footer:	
  7973                           
  7974                           ;ax25.c: 147: uint16_t final_crc = crc;
  7975                           
  7976                           ;incstack = 0
  7977                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7978  17AB  0021               	movlb	1	; select bank1
  7979  17AC  0848               	movf	(_crc+1)^(0+128),w
  7980  17AD  0020               	movlb	0	; select bank0
  7981  17AE  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  7982  17AF  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  7983  17B0  0021               	movlb	1	; select bank1
  7984  17B1  0847               	movf	_crc^(0+128),w
  7985  17B2  0020               	movlb	0	; select bank0
  7986  17B3  01AC               	clrf	Ax25_Send_Footer@final_crc
  7987  17B4  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  7988                           
  7989                           ;ax25.c: 150: Send_Byte(~(final_crc & 0xff));
  7990  17B5  092C               	comf	Ax25_Send_Footer@final_crc,w
  7991  17B6  318E  2698  3197   	fcall	_Send_Byte
  7992                           
  7993                           ;ax25.c: 151: final_crc >>= 8;
  7994  17B9  3008               	movlw	8
  7995  17BA  0020               	movlb	0	; select bank0
  7996  17BB                     u3715:	
  7997  17BB  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  7998  17BC  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  7999  17BD  0B89               	decfsz	9,f
  8000  17BE  2FBB               	goto	u3715
  8001                           
  8002                           ;ax25.c: 152: Send_Byte(~(final_crc & 0xff));
  8003  17BF  092C               	comf	Ax25_Send_Footer@final_crc,w
  8004  17C0  318E  2698  3197   	fcall	_Send_Byte
  8005                           
  8006                           ;ax25.c: 155: Ax25_Send_Flag();
  8007  17C3  3185  257C         	fcall	_Ax25_Send_Flag
  8008  17C5  0008               	return
  8009  17C6                     __end_of_Ax25_Send_Footer:	
  8010                           
  8011                           	psect	text46
  8012  0E98                     __ptext46:	
  8013 ;; *************** function _Send_Byte *****************
  8014 ;; Defined at:
  8015 ;;		line 33 in file "ax25.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  byte            1    wreg     unsigned char 
  8018 ;; Auto vars:     Size  Location     Type
  8019 ;;  byte            1    9[BANK0 ] unsigned char 
  8020 ;;  i               2   10[BANK0 ] int 
  8021 ;; Return value:  Size  Location     Type
  8022 ;;		None               void
  8023 ;; Registers used:
  8024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8031 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8032 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8033 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8034 ;;Total ram usage:        9 bytes
  8035 ;; Hardware stack levels used:    1
  8036 ;; Hardware stack levels required when called:    4
  8037 ;; This function calls:
  8038 ;;		_Update_Crc
  8039 ;; This function is called by:
  8040 ;;		_Ax25_Send_Byte
  8041 ;;		_Ax25_Send_Header
  8042 ;;		_Ax25_Send_Footer
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           
  8047                           ;psect for function _Send_Byte
  8048  0E98                     _Send_Byte:	
  8049                           
  8050                           ;incstack = 0
  8051                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8052                           ;Send_Byte@byte stored from wreg
  8053  0E98  0020               	movlb	0	; select bank0
  8054  0E99  00A9               	movwf	Send_Byte@byte
  8055                           
  8056                           ;ax25.c: 35: int i;
  8057                           ;ax25.c: 36: for (i = 0; i < 8; i++) {
  8058  0E9A  01AA               	clrf	Send_Byte@i
  8059  0E9B  01AB               	clrf	Send_Byte@i+1
  8060  0E9C                     L4:	
  8061  0E9C  082B               	movf	Send_Byte@i+1,w
  8062  0E9D  3A80               	xorlw	128
  8063  0E9E  00A3               	movwf	??_Send_Byte
  8064  0E9F  3080               	movlw	128
  8065  0EA0  0223               	subwf	??_Send_Byte,w
  8066  0EA1  3008               	movlw	8
  8067  0EA2  1903               	btfsc	3,2
  8068  0EA3  022A               	subwf	Send_Byte@i,w
  8069  0EA4  1803               	btfsc	3,0
  8070  0EA5  0008               	return
  8071                           
  8072                           ;ax25.c: 37: Update_Crc((byte >> i) & 1);
  8073  0EA6  0020               	movlb	0	; select bank0
  8074  0EA7  0829               	movf	Send_Byte@byte,w
  8075  0EA8  00A3               	movwf	??_Send_Byte
  8076  0EA9  0A2A               	incf	Send_Byte@i,w
  8077  0EAA  2EAC               	goto	u3204
  8078  0EAB                     u3205:	
  8079  0EAB  36A3               	lsrf	??_Send_Byte,f
  8080  0EAC                     u3204:	
  8081  0EAC  0B89               	decfsz	9,f
  8082  0EAD  2EAB               	goto	u3205
  8083  0EAE  0823               	movf	??_Send_Byte,w
  8084  0EAF  3901               	andlw	1
  8085  0EB0  3189  2124  318E   	fcall	_Update_Crc
  8086                           
  8087                           ;ax25.c: 38: if ((byte >> i) & 1) {
  8088  0EB3  0020               	movlb	0	; select bank0
  8089  0EB4  0829               	movf	Send_Byte@byte,w
  8090  0EB5  00A3               	movwf	??_Send_Byte
  8091  0EB6  0A2A               	incf	Send_Byte@i,w
  8092  0EB7  2EB9               	goto	u3214
  8093  0EB8                     u3215:	
  8094  0EB8  36A3               	lsrf	??_Send_Byte,f
  8095  0EB9                     u3214:	
  8096  0EB9  0B89               	decfsz	9,f
  8097  0EBA  2EB8               	goto	u3215
  8098  0EBB  1C23               	btfss	??_Send_Byte,0
  8099  0EBC  2F08               	goto	l2601
  8100                           
  8101                           ;ax25.c: 40: if (modem_packet_size >= (64 * 8))
  8102  0EBD  3000               	movlw	0
  8103  0EBE  027C               	subwf	_modem_packet_size+3,w
  8104  0EBF  1D03               	skipz
  8105  0EC0  2ECB               	goto	u3235
  8106  0EC1  3000               	movlw	0
  8107  0EC2  027B               	subwf	_modem_packet_size+2,w
  8108  0EC3  1D03               	skipz
  8109  0EC4  2ECB               	goto	u3235
  8110  0EC5  3002               	movlw	2
  8111  0EC6  027A               	subwf	_modem_packet_size+1,w
  8112  0EC7  1D03               	skipz
  8113  0EC8  2ECB               	goto	u3235
  8114  0EC9  3000               	movlw	0
  8115  0ECA  0279               	subwf	_modem_packet_size,w
  8116  0ECB                     u3235:	
  8117  0ECB  1803               	btfsc	3,0
  8118  0ECC  0008               	return
  8119                           
  8120                           ;ax25.c: 43: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8121                           
  8122                           ;ax25.c: 41: return;
  8123  0ECD  3001               	movlw	1
  8124  0ECE  00A3               	movwf	??_Send_Byte
  8125  0ECF  0879               	movf	_modem_packet_size,w
  8126  0ED0  3907               	andlw	7
  8127  0ED1  0A89               	incf	9,f
  8128  0ED2  2ED4               	goto	u3244
  8129  0ED3                     u3245:	
  8130  0ED3  35A3               	lslf	??_Send_Byte,f
  8131  0ED4                     u3244:	
  8132  0ED4  0B89               	decfsz	9,f
  8133  0ED5  2ED3               	goto	u3245
  8134  0ED6  0823               	movf	??_Send_Byte,w
  8135  0ED7  00A4               	movwf	??_Send_Byte+1
  8136  0ED8  0879               	movf	_modem_packet_size,w
  8137  0ED9  00A5               	movwf	??_Send_Byte+2
  8138  0EDA  087A               	movf	_modem_packet_size+1,w
  8139  0EDB  00A6               	movwf	??_Send_Byte+3
  8140  0EDC  087B               	movf	_modem_packet_size+2,w
  8141  0EDD  00A7               	movwf	??_Send_Byte+4
  8142  0EDE  087C               	movf	_modem_packet_size+3,w
  8143  0EDF  00A8               	movwf	??_Send_Byte+5
  8144  0EE0  3003               	movlw	3
  8145  0EE1                     u3255:	
  8146  0EE1  36A8               	lsrf	??_Send_Byte+5,f
  8147  0EE2  0CA7               	rrf	??_Send_Byte+4,f
  8148  0EE3  0CA6               	rrf	??_Send_Byte+3,f
  8149  0EE4  0CA5               	rrf	??_Send_Byte+2,f
  8150  0EE5  0B89               	decfsz	9,f
  8151  0EE6  2EE1               	goto	u3255
  8152  0EE7  0825               	movf	??_Send_Byte+2,w
  8153  0EE8  3EA0               	addlw	_modem_packet& (0+255)
  8154  0EE9  0086               	movwf	6
  8155  0EEA  3001               	movlw	1	; select bank3/4
  8156  0EEB  0087               	movwf	7
  8157  0EEC  0824               	movf	??_Send_Byte+1,w
  8158  0EED  0481               	iorwf	1,f
  8159                           
  8160                           ;ax25.c: 45: modem_packet_size++;
  8161  0EEE  3001               	movlw	1
  8162  0EEF  07F9               	addwf	_modem_packet_size,f
  8163  0EF0  3000               	movlw	0
  8164  0EF1  3DFA               	addwfc	_modem_packet_size+1,f
  8165  0EF2  3000               	movlw	0
  8166  0EF3  3DFB               	addwfc	_modem_packet_size+2,f
  8167  0EF4  3000               	movlw	0
  8168  0EF5  3DFC               	addwfc	_modem_packet_size+3,f
  8169                           
  8170                           ;ax25.c: 46: if (++ones_in_a_row < 5) continue;
  8171  0EF6  3001               	movlw	1
  8172  0EF7  0022               	movlb	2	; select bank2
  8173  0EF8  07B4               	addwf	_ones_in_a_row^(0+256),f
  8174  0EF9  3000               	movlw	0
  8175  0EFA  3DB5               	addwfc	(_ones_in_a_row+1)^(0+256),f
  8176  0EFB  0835               	movf	(_ones_in_a_row+1)^(0+256),w
  8177  0EFC  3A80               	xorlw	128
  8178  0EFD  0020               	movlb	0	; select bank0
  8179  0EFE  00A3               	movwf	??_Send_Byte
  8180  0EFF  3080               	movlw	128
  8181  0F00  0223               	subwf	??_Send_Byte,w
  8182  0F01  1D03               	skipz
  8183  0F02  2F06               	goto	u3265
  8184  0F03  3005               	movlw	5
  8185  0F04  0022               	movlb	2	; select bank2
  8186  0F05  0234               	subwf	_ones_in_a_row^(0+256),w
  8187  0F06                     u3265:	
  8188  0F06  1C03               	btfss	3,0
  8189  0F07  2F46               	goto	l2611
  8190  0F08                     l2601:	
  8191                           
  8192                           ;ax25.c: 47: }
  8193                           ;ax25.c: 49: if (modem_packet_size >= (64 * 8))
  8194  0F08  3000               	movlw	0
  8195  0F09  027C               	subwf	_modem_packet_size+3,w
  8196  0F0A  1D03               	skipz
  8197  0F0B  2F16               	goto	u3275
  8198  0F0C  3000               	movlw	0
  8199  0F0D  027B               	subwf	_modem_packet_size+2,w
  8200  0F0E  1D03               	skipz
  8201  0F0F  2F16               	goto	u3275
  8202  0F10  3002               	movlw	2
  8203  0F11  027A               	subwf	_modem_packet_size+1,w
  8204  0F12  1D03               	skipz
  8205  0F13  2F16               	goto	u3275
  8206  0F14  3000               	movlw	0
  8207  0F15  0279               	subwf	_modem_packet_size,w
  8208  0F16                     u3275:	
  8209  0F16  1803               	btfsc	3,0
  8210  0F17  0008               	return
  8211                           
  8212                           ;ax25.c: 51: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8213                           
  8214                           ;ax25.c: 50: return;
  8215  0F18  3001               	movlw	1
  8216  0F19  0020               	movlb	0	; select bank0
  8217  0F1A  00A3               	movwf	??_Send_Byte
  8218  0F1B  0879               	movf	_modem_packet_size,w
  8219  0F1C  3907               	andlw	7
  8220  0F1D  0A89               	incf	9,f
  8221  0F1E  2F20               	goto	u3284
  8222  0F1F                     u3285:	
  8223  0F1F  35A3               	lslf	??_Send_Byte,f
  8224  0F20                     u3284:	
  8225  0F20  0B89               	decfsz	9,f
  8226  0F21  2F1F               	goto	u3285
  8227  0F22  0823               	movf	??_Send_Byte,w
  8228  0F23  3AFF               	xorlw	255
  8229  0F24  00A4               	movwf	??_Send_Byte+1
  8230  0F25  0879               	movf	_modem_packet_size,w
  8231  0F26  00A5               	movwf	??_Send_Byte+2
  8232  0F27  087A               	movf	_modem_packet_size+1,w
  8233  0F28  00A6               	movwf	??_Send_Byte+3
  8234  0F29  087B               	movf	_modem_packet_size+2,w
  8235  0F2A  00A7               	movwf	??_Send_Byte+4
  8236  0F2B  087C               	movf	_modem_packet_size+3,w
  8237  0F2C  00A8               	movwf	??_Send_Byte+5
  8238  0F2D  3003               	movlw	3
  8239  0F2E                     u3295:	
  8240  0F2E  36A8               	lsrf	??_Send_Byte+5,f
  8241  0F2F  0CA7               	rrf	??_Send_Byte+4,f
  8242  0F30  0CA6               	rrf	??_Send_Byte+3,f
  8243  0F31  0CA5               	rrf	??_Send_Byte+2,f
  8244  0F32  0B89               	decfsz	9,f
  8245  0F33  2F2E               	goto	u3295
  8246  0F34  0825               	movf	??_Send_Byte+2,w
  8247  0F35  3EA0               	addlw	_modem_packet& (0+255)
  8248  0F36  0086               	movwf	6
  8249  0F37  3001               	movlw	1	; select bank3/4
  8250  0F38  0087               	movwf	7
  8251  0F39  0824               	movf	??_Send_Byte+1,w
  8252  0F3A  0581               	andwf	1,f
  8253                           
  8254                           ;ax25.c: 53: modem_packet_size++;
  8255  0F3B  3001               	movlw	1
  8256  0F3C  07F9               	addwf	_modem_packet_size,f
  8257  0F3D  3000               	movlw	0
  8258  0F3E  3DFA               	addwfc	_modem_packet_size+1,f
  8259  0F3F  3000               	movlw	0
  8260  0F40  3DFB               	addwfc	_modem_packet_size+2,f
  8261  0F41  3000               	movlw	0
  8262  0F42  3DFC               	addwfc	_modem_packet_size+3,f
  8263                           
  8264                           ;ax25.c: 54: ones_in_a_row = 0;
  8265  0F43  0022               	movlb	2	; select bank2
  8266  0F44  01B4               	clrf	_ones_in_a_row^(0+256)
  8267  0F45  01B5               	clrf	(_ones_in_a_row+1)^(0+256)
  8268  0F46                     l2611:	
  8269  0F46  3001               	movlw	1
  8270  0F47  0020               	movlb	0	; select bank0
  8271  0F48  07AA               	addwf	Send_Byte@i,f
  8272  0F49  3000               	movlw	0
  8273  0F4A  3DAB               	addwfc	Send_Byte@i+1,f
  8274  0F4B  2E9C               	goto	L4
  8275  0F4C                     __end_of_Send_Byte:	
  8276                           
  8277                           	psect	text47
  8278  0924                     __ptext47:	
  8279 ;; *************** function _Update_Crc *****************
  8280 ;; Defined at:
  8281 ;;		line 24 in file "ax25.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;  input_bit       1    wreg     unsigned char 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;  input_bit       1    2[BANK0 ] unsigned char 
  8286 ;; Return value:  Size  Location     Type
  8287 ;;		None               void
  8288 ;; Registers used:
  8289 ;;		wreg, status,2, status,0
  8290 ;; Tracked objects:
  8291 ;;		On entry : 0/0
  8292 ;;		On exit  : 0/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;Total ram usage:        3 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; Hardware stack levels required when called:    3
  8302 ;; This function calls:
  8303 ;;		Nothing
  8304 ;; This function is called by:
  8305 ;;		_Send_Byte
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           
  8310                           ;psect for function _Update_Crc
  8311  0924                     _Update_Crc:	
  8312                           
  8313                           ;incstack = 0
  8314                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  8315                           ;Update_Crc@input_bit stored from wreg
  8316  0924  0020               	movlb	0	; select bank0
  8317  0925  00A2               	movwf	Update_Crc@input_bit
  8318                           
  8319                           ;ax25.c: 26: crc ^= input_bit;
  8320  0926  0822               	movf	Update_Crc@input_bit,w
  8321  0927  00A0               	movwf	??_Update_Crc
  8322  0928  01A1               	clrf	??_Update_Crc+1
  8323  0929  0820               	movf	??_Update_Crc,w
  8324  092A  0021               	movlb	1	; select bank1
  8325  092B  06C7               	xorwf	_crc^(0+128),f
  8326  092C  0020               	movlb	0	; select bank0
  8327  092D  0821               	movf	??_Update_Crc+1,w
  8328  092E  0021               	movlb	1	; select bank1
  8329  092F  06C8               	xorwf	(_crc+1)^(0+128),f
  8330                           
  8331                           ;ax25.c: 27: if (crc & 1)
  8332  0930  1C47               	btfss	_crc^(0+128),0
  8333  0931  2945               	goto	l2219
  8334                           
  8335                           ;ax25.c: 28: crc = (crc >> 1) ^ 0x8408;
  8336  0932  0848               	movf	(_crc+1)^(0+128),w
  8337  0933  0020               	movlb	0	; select bank0
  8338  0934  00A1               	movwf	??_Update_Crc+1
  8339  0935  0021               	movlb	1	; select bank1
  8340  0936  0847               	movf	_crc^(0+128),w
  8341  0937  0020               	movlb	0	; select bank0
  8342  0938  00A0               	movwf	??_Update_Crc
  8343  0939  36A1               	lsrf	??_Update_Crc+1,f
  8344  093A  0CA0               	rrf	??_Update_Crc,f
  8345  093B  3008               	movlw	8
  8346  093C  0620               	xorwf	??_Update_Crc,w
  8347  093D  0021               	movlb	1	; select bank1
  8348  093E  00C7               	movwf	_crc^(0+128)
  8349  093F  3084               	movlw	132
  8350  0940  0020               	movlb	0	; select bank0
  8351  0941  0621               	xorwf	??_Update_Crc+1,w
  8352  0942  0021               	movlb	1	; select bank1
  8353  0943  00C8               	movwf	(_crc+1)^(0+128)
  8354  0944  0008               	return
  8355  0945                     l2219:	
  8356                           
  8357                           ;ax25.c: 29: else
  8358                           ;ax25.c: 30: crc = crc >> 1;
  8359  0945  0848               	movf	(_crc+1)^(0+128),w
  8360  0946  0020               	movlb	0	; select bank0
  8361  0947  00A1               	movwf	??_Update_Crc+1
  8362  0948  0021               	movlb	1	; select bank1
  8363  0949  0847               	movf	_crc^(0+128),w
  8364  094A  0020               	movlb	0	; select bank0
  8365  094B  00A0               	movwf	??_Update_Crc
  8366  094C  36A1               	lsrf	??_Update_Crc+1,f
  8367  094D  0CA0               	rrf	??_Update_Crc,f
  8368  094E  0820               	movf	??_Update_Crc,w
  8369  094F  0021               	movlb	1	; select bank1
  8370  0950  00C7               	movwf	_crc^(0+128)
  8371  0951  0020               	movlb	0	; select bank0
  8372  0952  0821               	movf	??_Update_Crc+1,w
  8373  0953  0021               	movlb	1	; select bank1
  8374  0954  00C8               	movwf	(_crc+1)^(0+128)
  8375  0955  0008               	return
  8376  0956                     __end_of_Update_Crc:	
  8377                           
  8378                           	psect	text48
  8379  057C                     __ptext48:	
  8380 ;; *************** function _Ax25_Send_Flag *****************
  8381 ;; Defined at:
  8382 ;;		line 80 in file "ax25.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  i               2    7[BANK0 ] int 
  8387 ;;  byte            1    6[BANK0 ] unsigned char 
  8388 ;; Return value:  Size  Location     Type
  8389 ;;		None               void
  8390 ;; Registers used:
  8391 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8392 ;; Tracked objects:
  8393 ;;		On entry : 0/0
  8394 ;;		On exit  : 0/0
  8395 ;;		Unchanged: 0/0
  8396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8400 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8401 ;;Total ram usage:        9 bytes
  8402 ;; Hardware stack levels used:    1
  8403 ;; Hardware stack levels required when called:    3
  8404 ;; This function calls:
  8405 ;;		Nothing
  8406 ;; This function is called by:
  8407 ;;		_Ax25_Send_Header
  8408 ;;		_Ax25_Send_Footer
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           
  8413                           ;psect for function _Ax25_Send_Flag
  8414  057C                     _Ax25_Send_Flag:	
  8415                           
  8416                           ;ax25.c: 82: uint8_t byte = 0x7e;
  8417                           
  8418                           ;incstack = 0
  8419                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  8420  057C  307E               	movlw	126
  8421  057D  0020               	movlb	0	; select bank0
  8422  057E  00A0               	movwf	??_Ax25_Send_Flag
  8423  057F  0820               	movf	??_Ax25_Send_Flag,w
  8424  0580  00A6               	movwf	Ax25_Send_Flag@byte
  8425                           
  8426                           ;ax25.c: 83: int i;
  8427                           ;ax25.c: 84: for (i = 0; i < 8; i++, modem_packet_size++) {
  8428  0581  01A7               	clrf	Ax25_Send_Flag@i
  8429  0582  01A8               	clrf	Ax25_Send_Flag@i+1
  8430  0583                     L5:	
  8431  0583  0828               	movf	Ax25_Send_Flag@i+1,w
  8432  0584  3A80               	xorlw	128
  8433  0585  00A0               	movwf	??_Ax25_Send_Flag
  8434  0586  3080               	movlw	128
  8435  0587  0220               	subwf	??_Ax25_Send_Flag,w
  8436  0588  3008               	movlw	8
  8437  0589  1903               	btfsc	3,2
  8438  058A  0227               	subwf	Ax25_Send_Flag@i,w
  8439  058B  1803               	btfsc	3,0
  8440  058C  0008               	return
  8441                           
  8442                           ;ax25.c: 85: if (modem_packet_size >= 64 * 8)
  8443  058D  3000               	movlw	0
  8444  058E  027C               	subwf	_modem_packet_size+3,w
  8445  058F  1D03               	skipz
  8446  0590  2D9B               	goto	u3425
  8447  0591  3000               	movlw	0
  8448  0592  027B               	subwf	_modem_packet_size+2,w
  8449  0593  1D03               	skipz
  8450  0594  2D9B               	goto	u3425
  8451  0595  3002               	movlw	2
  8452  0596  027A               	subwf	_modem_packet_size+1,w
  8453  0597  1D03               	skipz
  8454  0598  2D9B               	goto	u3425
  8455  0599  3000               	movlw	0
  8456  059A  0279               	subwf	_modem_packet_size,w
  8457  059B                     u3425:	
  8458  059B  1803               	btfsc	3,0
  8459  059C  0008               	return
  8460                           
  8461                           ;ax25.c: 87: if ((byte >> i) & 1)
  8462                           
  8463                           ;ax25.c: 86: return;
  8464  059D  0020               	movlb	0	; select bank0
  8465  059E  0826               	movf	Ax25_Send_Flag@byte,w
  8466  059F  00A0               	movwf	??_Ax25_Send_Flag
  8467  05A0  0A27               	incf	Ax25_Send_Flag@i,w
  8468  05A1  2DA3               	goto	u3434
  8469  05A2                     u3435:	
  8470  05A2  36A0               	lsrf	??_Ax25_Send_Flag,f
  8471  05A3                     u3434:	
  8472  05A3  0B89               	decfsz	9,f
  8473  05A4  2DA2               	goto	u3435
  8474  05A5  1C20               	btfss	??_Ax25_Send_Flag,0
  8475  05A6  2DC9               	goto	l2705
  8476                           
  8477                           ;ax25.c: 88: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8478  05A7  3001               	movlw	1
  8479  05A8  00A0               	movwf	??_Ax25_Send_Flag
  8480  05A9  0879               	movf	_modem_packet_size,w
  8481  05AA  3907               	andlw	7
  8482  05AB  0A89               	incf	9,f
  8483  05AC  2DAE               	goto	u3454
  8484  05AD                     u3455:	
  8485  05AD  35A0               	lslf	??_Ax25_Send_Flag,f
  8486  05AE                     u3454:	
  8487  05AE  0B89               	decfsz	9,f
  8488  05AF  2DAD               	goto	u3455
  8489  05B0  0820               	movf	??_Ax25_Send_Flag,w
  8490  05B1  00A1               	movwf	??_Ax25_Send_Flag+1
  8491  05B2  0879               	movf	_modem_packet_size,w
  8492  05B3  00A2               	movwf	??_Ax25_Send_Flag+2
  8493  05B4  087A               	movf	_modem_packet_size+1,w
  8494  05B5  00A3               	movwf	??_Ax25_Send_Flag+3
  8495  05B6  087B               	movf	_modem_packet_size+2,w
  8496  05B7  00A4               	movwf	??_Ax25_Send_Flag+4
  8497  05B8  087C               	movf	_modem_packet_size+3,w
  8498  05B9  00A5               	movwf	??_Ax25_Send_Flag+5
  8499  05BA  3003               	movlw	3
  8500  05BB                     u3465:	
  8501  05BB  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  8502  05BC  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  8503  05BD  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  8504  05BE  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  8505  05BF  0B89               	decfsz	9,f
  8506  05C0  2DBB               	goto	u3465
  8507  05C1  0822               	movf	??_Ax25_Send_Flag+2,w
  8508  05C2  3EA0               	addlw	_modem_packet& (0+255)
  8509  05C3  0086               	movwf	6
  8510  05C4  3001               	movlw	1	; select bank3/4
  8511  05C5  0087               	movwf	7
  8512  05C6  0821               	movf	??_Ax25_Send_Flag+1,w
  8513  05C7  0481               	iorwf	1,f
  8514  05C8  2DEB               	goto	l2707
  8515  05C9                     l2705:	
  8516                           
  8517                           ;ax25.c: 89: else
  8518                           ;ax25.c: 90: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8519  05C9  3001               	movlw	1
  8520  05CA  00A0               	movwf	??_Ax25_Send_Flag
  8521  05CB  0879               	movf	_modem_packet_size,w
  8522  05CC  3907               	andlw	7
  8523  05CD  0A89               	incf	9,f
  8524  05CE  2DD0               	goto	u3474
  8525  05CF                     u3475:	
  8526  05CF  35A0               	lslf	??_Ax25_Send_Flag,f
  8527  05D0                     u3474:	
  8528  05D0  0B89               	decfsz	9,f
  8529  05D1  2DCF               	goto	u3475
  8530  05D2  0820               	movf	??_Ax25_Send_Flag,w
  8531  05D3  3AFF               	xorlw	255
  8532  05D4  00A1               	movwf	??_Ax25_Send_Flag+1
  8533  05D5  0879               	movf	_modem_packet_size,w
  8534  05D6  00A2               	movwf	??_Ax25_Send_Flag+2
  8535  05D7  087A               	movf	_modem_packet_size+1,w
  8536  05D8  00A3               	movwf	??_Ax25_Send_Flag+3
  8537  05D9  087B               	movf	_modem_packet_size+2,w
  8538  05DA  00A4               	movwf	??_Ax25_Send_Flag+4
  8539  05DB  087C               	movf	_modem_packet_size+3,w
  8540  05DC  00A5               	movwf	??_Ax25_Send_Flag+5
  8541  05DD  3003               	movlw	3
  8542  05DE                     u3485:	
  8543  05DE  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  8544  05DF  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  8545  05E0  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  8546  05E1  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  8547  05E2  0B89               	decfsz	9,f
  8548  05E3  2DDE               	goto	u3485
  8549  05E4  0822               	movf	??_Ax25_Send_Flag+2,w
  8550  05E5  3EA0               	addlw	_modem_packet& (0+255)
  8551  05E6  0086               	movwf	6
  8552  05E7  3001               	movlw	1	; select bank3/4
  8553  05E8  0087               	movwf	7
  8554  05E9  0821               	movf	??_Ax25_Send_Flag+1,w
  8555  05EA  0581               	andwf	1,f
  8556  05EB                     l2707:	
  8557  05EB  3001               	movlw	1
  8558  05EC  07A7               	addwf	Ax25_Send_Flag@i,f
  8559  05ED  3000               	movlw	0
  8560  05EE  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  8561  05EF  3001               	movlw	1
  8562  05F0  07F9               	addwf	_modem_packet_size,f
  8563  05F1  3000               	movlw	0
  8564  05F2  3DFA               	addwfc	_modem_packet_size+1,f
  8565  05F3  3000               	movlw	0
  8566  05F4  3DFB               	addwfc	_modem_packet_size+2,f
  8567  05F5  3000               	movlw	0
  8568  05F6  3DFC               	addwfc	_modem_packet_size+3,f
  8569  05F7  2D83               	goto	L5
  8570  05F8                     __end_of_Ax25_Send_Flag:	
  8571                           
  8572                           	psect	text49
  8573  16EA                     __ptext49:	
  8574 ;; *************** function _Adc1_Start *****************
  8575 ;; Defined at:
  8576 ;;		line 298 in file "utility.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;		None
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;		None               void
  8583 ;; Registers used:
  8584 ;;		None
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used:    1
  8596 ;; Hardware stack levels required when called:    3
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_main
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           
  8605                           ;psect for function _Adc1_Start
  8606  16EA                     _Adc1_Start:	
  8607                           
  8608                           ;utility.c: 299: ADIF = 0;
  8609                           
  8610                           ;incstack = 0
  8611                           ; Regs used in _Adc1_Start: []
  8612  16EA  0020               	movlb	0	; select bank0
  8613  16EB  1311               	bcf	17,6	;volatile
  8614                           
  8615                           ;utility.c: 300: ADON = 1;
  8616  16EC  0021               	movlb	1	; select bank1
  8617  16ED  141D               	bsf	29,0	;volatile
  8618                           
  8619                           ;utility.c: 301: ADIE = 1;
  8620  16EE  1711               	bsf	17,6	;volatile
  8621  16EF  0008               	return
  8622  16F0                     __end_of_Adc1_Start:	
  8623                           
  8624                           	psect	intentry
  8625  0004                     __pintentry:	
  8626 ;; *************** function _global_interrupt *****************
  8627 ;; Defined at:
  8628 ;;		line 47 in file "main.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;		None
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;		None
  8633 ;; Return value:  Size  Location     Type
  8634 ;;		None               void
  8635 ;; Registers used:
  8636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8644 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8646 ;;Total ram usage:        2 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    2
  8649 ;; This function calls:
  8650 ;;		_Sinus_Generator
  8651 ;; This function is called by:
  8652 ;;		Interrupt level 1
  8653 ;; This function uses a non-reentrant model
  8654 ;;
  8655                           
  8656  0004                     _global_interrupt:	
  8657                           
  8658                           ;incstack = 0
  8659                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8660  0004  147E               	bsf	126,0	;set compiler interrupt flag
  8661  0005  3180               	pagesel	$
  8662  0006  0020               	movlb	0	; select bank0
  8663  0007  087F               	movf	127,w
  8664  0008  00F8               	movwf	??_global_interrupt+1
  8665                           
  8666                           ;main.c: 49: INTCON &= ~0x80;
  8667  0009  307F               	movlw	127
  8668  000A  00F7               	movwf	??_global_interrupt
  8669  000B  0877               	movf	??_global_interrupt,w
  8670  000C  058B               	andwf	11,f	;volatile
  8671                           
  8672                           ;main.c: 52: if(ADIF){
  8673  000D  1F11               	btfss	17,6	;volatile
  8674  000E  281B               	goto	i1l123
  8675                           
  8676                           ;main.c: 53: adc_sonuc_high = ADRESH;
  8677  000F  0021               	movlb	1	; select bank1
  8678  0010  081C               	movf	28,w	;volatile
  8679  0011  00F7               	movwf	??_global_interrupt
  8680  0012  0877               	movf	??_global_interrupt,w
  8681  0013  00CD               	movwf	_adc_sonuc_high^(0+128)
  8682                           
  8683                           ;main.c: 54: adc_sonuc_low = ADRESL;
  8684  0014  081B               	movf	27,w	;volatile
  8685  0015  00F7               	movwf	??_global_interrupt
  8686  0016  0877               	movf	??_global_interrupt,w
  8687  0017  00CE               	movwf	_adc_sonuc_low^(0+128)
  8688                           
  8689                           ;main.c: 56: ADIF = 0;
  8690  0018  0020               	movlb	0	; select bank0
  8691  0019  1311               	bcf	17,6	;volatile
  8692                           
  8693                           ;main.c: 57: return;
  8694  001A  2835               	goto	i1l124
  8695  001B                     i1l123:	
  8696                           
  8697                           ;main.c: 58: }
  8698                           ;main.c: 62: if(PIR1 & 0x04){
  8699  001B  1D11               	btfss	17,2	;volatile
  8700  001C  282A               	goto	i1l125
  8701                           
  8702                           ;main.c: 64: Systick_Counter += 1;
  8703  001D  3001               	movlw	1
  8704  001E  0022               	movlb	2	; select bank2
  8705  001F  07B0               	addwf	_Systick_Counter^(0+256),f
  8706  0020  3000               	movlw	0
  8707  0021  3DB1               	addwfc	(_Systick_Counter+1)^(0+256),f
  8708                           
  8709                           ;main.c: 68: TMR1H = 0x00;
  8710  0022  0020               	movlb	0	; select bank0
  8711  0023  0197               	clrf	23	;volatile
  8712                           
  8713                           ;main.c: 69: TMR1L = 0x00;
  8714  0024  0196               	clrf	22	;volatile
  8715                           
  8716                           ;main.c: 71: PIR1 &= ~0x04;
  8717  0025  30FB               	movlw	251
  8718  0026  00F7               	movwf	??_global_interrupt
  8719  0027  0877               	movf	??_global_interrupt,w
  8720  0028  0591               	andwf	17,f	;volatile
  8721                           
  8722                           ;main.c: 74: return;
  8723  0029  2835               	goto	i1l124
  8724  002A                     i1l125:	
  8725                           
  8726                           ;main.c: 75: }
  8727                           ;main.c: 79: if(INTCON & 0x04){
  8728  002A  1D0B               	btfss	11,2	;volatile
  8729  002B  2834               	goto	i1l126
  8730                           
  8731                           ;main.c: 81: Sinus_Generator();
  8732  002C  318D  2553  3180   	fcall	_Sinus_Generator
  8733                           
  8734                           ;main.c: 84: INTCON &= ~0x04;
  8735  002F  30FB               	movlw	251
  8736  0030  00F7               	movwf	??_global_interrupt
  8737  0031  0877               	movf	??_global_interrupt,w
  8738  0032  058B               	andwf	11,f	;volatile
  8739                           
  8740                           ;main.c: 85: return;
  8741  0033  2835               	goto	i1l124
  8742  0034                     i1l126:	
  8743                           
  8744                           ;main.c: 86: }
  8745                           ;main.c: 91: INTCON |= 0x80;
  8746  0034  178B               	bsf	11,7	;volatile
  8747  0035                     i1l124:	
  8748  0035  0878               	movf	??_global_interrupt+1,w
  8749  0036  0020               	movlb	0	; select bank0
  8750  0037  00FF               	movwf	127
  8751  0038  107E               	bcf	126,0	;clear compiler interrupt flag
  8752  0039  0009               	retfie
  8753  003A                     __end_of_global_interrupt:	
  8754                           
  8755                           	psect	text51
  8756  0D53                     __ptext51:	
  8757 ;; *************** function _Sinus_Generator *****************
  8758 ;; Defined at:
  8759 ;;		line 81 in file "audio_tone.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;		None
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  8764 ;; Return value:  Size  Location     Type
  8765 ;;		None               void
  8766 ;; Registers used:
  8767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8775 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8777 ;;Total ram usage:        6 bytes
  8778 ;; Hardware stack levels used:    1
  8779 ;; Hardware stack levels required when called:    1
  8780 ;; This function calls:
  8781 ;;		_Send_Vcxo_Signal
  8782 ;;		_Timer0_Stop
  8783 ;; This function is called by:
  8784 ;;		_global_interrupt
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           
  8789                           ;psect for function _Sinus_Generator
  8790  0D53                     _Sinus_Generator:	
  8791                           
  8792                           ;audio_tone.c: 83: uint8_t Audio_Signal;
  8793                           ;audio_tone.c: 84: static uint8_t tone_index = 0;
  8794                           ;audio_tone.c: 85: if (MODEM_TRANSMITTING == 1) {
  8795                           
  8796                           ;incstack = 0
  8797                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8798  0D53  0021               	movlb	1	; select bank1
  8799  0D54  084A               	movf	_MODEM_TRANSMITTING^(0+128),w
  8800  0D55  3A01               	xorlw	1
  8801  0D56  1D03               	skipz
  8802  0D57  0008               	return
  8803                           
  8804                           ;audio_tone.c: 88: if (packet_pos == modem_packet_size) {
  8805  0D58  087C               	movf	_modem_packet_size+3,w
  8806  0D59  0022               	movlb	2	; select bank2
  8807  0D5A  062B               	xorwf	(_packet_pos+3)^(0+256),w
  8808  0D5B  1D03               	skipz
  8809  0D5C  2D67               	goto	u351_25
  8810  0D5D  087B               	movf	_modem_packet_size+2,w
  8811  0D5E  062A               	xorwf	(_packet_pos+2)^(0+256),w
  8812  0D5F  1D03               	skipz
  8813  0D60  2D67               	goto	u351_25
  8814  0D61  087A               	movf	_modem_packet_size+1,w
  8815  0D62  0629               	xorwf	(_packet_pos+1)^(0+256),w
  8816  0D63  1D03               	skipz
  8817  0D64  2D67               	goto	u351_25
  8818  0D65  0879               	movf	_modem_packet_size,w
  8819  0D66  0628               	xorwf	_packet_pos^(0+256),w
  8820  0D67                     u351_25:	
  8821  0D67  1D03               	skipz
  8822  0D68  2D75               	goto	i1l2725
  8823                           
  8824                           ;audio_tone.c: 90: MODEM_TRANSMITTING = 0;
  8825  0D69  0021               	movlb	1	; select bank1
  8826  0D6A  01CA               	clrf	_MODEM_TRANSMITTING^(0+128)
  8827                           
  8828                           ;audio_tone.c: 91: Timer0_Stop();
  8829  0D6B  3196  26DC  318D   	fcall	_Timer0_Stop
  8830                           
  8831                           ;audio_tone.c: 93: Send_Vcxo_Signal(0x10);
  8832  0D6E  3010               	movlw	16
  8833  0D6F  3196  26E0         	fcall	_Send_Vcxo_Signal
  8834                           
  8835                           ;audio_tone.c: 95: PTT_OFF = 1;
  8836  0D71  0021               	movlb	1	; select bank1
  8837  0D72  01CB               	clrf	_PTT_OFF^(0+128)
  8838  0D73  0ACB               	incf	_PTT_OFF^(0+128),f
  8839                           
  8840                           ;audio_tone.c: 97: goto end_generator;
  8841  0D74  0008               	return
  8842  0D75                     i1l2725:	
  8843                           
  8844                           ;audio_tone.c: 98: }
  8845                           ;audio_tone.c: 101: if (current_sample_in_baud == 0) {
  8846  0D75  0021               	movlb	1	; select bank1
  8847  0D76  08D0               	movf	_current_sample_in_baud^(0+128),f
  8848  0D77  1D03               	skipz
  8849  0D78  2DBF               	goto	i1l2745
  8850                           
  8851                           ;audio_tone.c: 102: if ((packet_pos & 7) == 0)
  8852  0D79  3007               	movlw	7
  8853  0D7A  0022               	movlb	2	; select bank2
  8854  0D7B  0528               	andwf	_packet_pos^(0+256),w
  8855  0D7C  00F1               	movwf	??_Sinus_Generator
  8856  0D7D  3000               	movlw	0
  8857  0D7E  0529               	andwf	(_packet_pos+1)^(0+256),w
  8858  0D7F  00F2               	movwf	??_Sinus_Generator+1
  8859  0D80  3000               	movlw	0
  8860  0D81  052A               	andwf	(_packet_pos+2)^(0+256),w
  8861  0D82  00F3               	movwf	??_Sinus_Generator+2
  8862  0D83  3000               	movlw	0
  8863  0D84  052B               	andwf	(_packet_pos+3)^(0+256),w
  8864  0D85  00F4               	movwf	??_Sinus_Generator+3
  8865  0D86  0874               	movf	??_Sinus_Generator+3,w
  8866  0D87  0473               	iorwf	??_Sinus_Generator+2,w
  8867  0D88  0472               	iorwf	??_Sinus_Generator+1,w
  8868  0D89  0471               	iorwf	??_Sinus_Generator,w
  8869  0D8A  1D03               	skipz
  8870  0D8B  2DA5               	goto	i1l2731
  8871                           
  8872                           ;audio_tone.c: 103: current_byte = modem_packet[packet_pos >> 3];
  8873  0D8C  0828               	movf	_packet_pos^(0+256),w
  8874  0D8D  00F1               	movwf	??_Sinus_Generator
  8875  0D8E  0829               	movf	(_packet_pos+1)^(0+256),w
  8876  0D8F  00F2               	movwf	??_Sinus_Generator+1
  8877  0D90  082A               	movf	(_packet_pos+2)^(0+256),w
  8878  0D91  00F3               	movwf	??_Sinus_Generator+2
  8879  0D92  082B               	movf	(_packet_pos+3)^(0+256),w
  8880  0D93  00F4               	movwf	??_Sinus_Generator+3
  8881  0D94  3003               	movlw	3
  8882  0D95                     u354_25:	
  8883  0D95  36F4               	lsrf	??_Sinus_Generator+3,f
  8884  0D96  0CF3               	rrf	??_Sinus_Generator+2,f
  8885  0D97  0CF2               	rrf	??_Sinus_Generator+1,f
  8886  0D98  0CF1               	rrf	??_Sinus_Generator,f
  8887  0D99  0B89               	decfsz	9,f
  8888  0D9A  2D95               	goto	u354_25
  8889  0D9B  0871               	movf	??_Sinus_Generator,w
  8890  0D9C  3EA0               	addlw	_modem_packet& (0+255)
  8891  0D9D  0086               	movwf	6
  8892  0D9E  3001               	movlw	1	; select bank3/4
  8893  0D9F  0087               	movwf	7
  8894  0DA0  0801               	movf	1,w
  8895  0DA1  00F5               	movwf	??_Sinus_Generator+4
  8896  0DA2  0875               	movf	??_Sinus_Generator+4,w
  8897  0DA3  0021               	movlb	1	; select bank1
  8898  0DA4  2DA9               	goto	L6
  8899  0DA5                     i1l2731:	
  8900                           
  8901                           ;audio_tone.c: 104: else
  8902                           ;audio_tone.c: 105: current_byte = current_byte >> 1 ;
  8903  0DA5  0021               	movlb	1	; select bank1
  8904  0DA6  364F               	lsrf	_current_byte^(0+128),w
  8905  0DA7  00F1               	movwf	??_Sinus_Generator
  8906  0DA8  0871               	movf	??_Sinus_Generator,w
  8907  0DA9                     L6:	
  8908  0DA9  00CF               	movwf	_current_byte^(0+128)
  8909                           
  8910                           ;audio_tone.c: 106: if ((current_byte & 0x01) == 0) {
  8911  0DAA  184F               	btfsc	_current_byte^(0+128),0
  8912  0DAB  2DBF               	goto	i1l2745
  8913                           
  8914                           ;audio_tone.c: 108: if(tone_index){
  8915  0DAC  0849               	movf	Sinus_Generator@tone_index^(0+128),w
  8916  0DAD  1903               	btfsc	3,2
  8917  0DAE  2DB7               	goto	i1l2741
  8918                           
  8919                           ;audio_tone.c: 109: phase_delta = PHASE_DELTA_1200;
  8920  0DAF  0022               	movlb	2	; select bank2
  8921  0DB0  0820               	movf	_PHASE_DELTA_1200^(0+256),w
  8922  0DB1  00F1               	movwf	??_Sinus_Generator
  8923  0DB2  0871               	movf	??_Sinus_Generator,w
  8924  0DB3  0021               	movlb	1	; select bank1
  8925  0DB4  00D1               	movwf	_phase_delta^(0+128)
  8926                           
  8927                           ;audio_tone.c: 110: tone_index = 0;
  8928  0DB5  01C9               	clrf	Sinus_Generator@tone_index^(0+128)
  8929                           
  8930                           ;audio_tone.c: 111: }
  8931  0DB6  2DBF               	goto	i1l2745
  8932  0DB7                     i1l2741:	
  8933                           
  8934                           ;audio_tone.c: 112: else{
  8935                           ;audio_tone.c: 113: phase_delta = PHASE_DELTA_2200;
  8936  0DB7  0022               	movlb	2	; select bank2
  8937  0DB8  0824               	movf	_PHASE_DELTA_2200^(0+256),w
  8938  0DB9  00F1               	movwf	??_Sinus_Generator
  8939  0DBA  0871               	movf	??_Sinus_Generator,w
  8940  0DBB  0021               	movlb	1	; select bank1
  8941  0DBC  00D1               	movwf	_phase_delta^(0+128)
  8942                           
  8943                           ;audio_tone.c: 114: tone_index = 1;
  8944  0DBD  01C9               	clrf	Sinus_Generator@tone_index^(0+128)
  8945  0DBE  0AC9               	incf	Sinus_Generator@tone_index^(0+128),f
  8946  0DBF                     i1l2745:	
  8947                           
  8948                           ;audio_tone.c: 115: }
  8949                           ;audio_tone.c: 116: }
  8950                           ;audio_tone.c: 117: }
  8951                           ;audio_tone.c: 119: phase += phase_delta;
  8952  0DBF  0851               	movf	_phase_delta^(0+128),w
  8953  0DC0  00F1               	movwf	??_Sinus_Generator
  8954  0DC1  0871               	movf	??_Sinus_Generator,w
  8955  0DC2  07FD               	addwf	_phase,f
  8956                           
  8957                           ;audio_tone.c: 120: if(phase > 181)
  8958  0DC3  30B6               	movlw	182
  8959  0DC4  027D               	subwf	_phase,w
  8960  0DC5  1C03               	skipc
  8961  0DC6  2DCC               	goto	i1l2751
  8962                           
  8963                           ;audio_tone.c: 121: phase = phase - 182;
  8964  0DC7  087D               	movf	_phase,w
  8965  0DC8  3E4A               	addlw	74
  8966  0DC9  00F1               	movwf	??_Sinus_Generator
  8967  0DCA  0871               	movf	??_Sinus_Generator,w
  8968  0DCB  00FD               	movwf	_phase
  8969  0DCC                     i1l2751:	
  8970                           
  8971                           ;audio_tone.c: 124: Audio_Signal = *(sine_table2 + phase);
  8972  0DCC  087D               	movf	_phase,w
  8973  0DCD  3E00               	addlw	low (_sine_table2| (0+32768))
  8974  0DCE  0084               	movwf	4
  8975  0DCF  3086               	movlw	high (_sine_table2| (0+32768))
  8976  0DD0  1803               	skipnc
  8977  0DD1  3E01               	addlw	1
  8978  0DD2  0085               	movwf	5
  8979  0DD3  0800               	movf	0,w	;code access
  8980  0DD4  00F1               	movwf	??_Sinus_Generator
  8981  0DD5  0871               	movf	??_Sinus_Generator,w
  8982  0DD6  00F6               	movwf	Sinus_Generator@Audio_Signal
  8983                           
  8984                           ;audio_tone.c: 125: Send_Vcxo_Signal(Audio_Signal);
  8985  0DD7  0876               	movf	Sinus_Generator@Audio_Signal,w
  8986  0DD8  3196  26E0  318D   	fcall	_Send_Vcxo_Signal
  8987                           
  8988                           ;audio_tone.c: 127: if(++current_sample_in_baud == SAMPLES_PER_BAUD) {
  8989  0DDB  3001               	movlw	1
  8990  0DDC  00F1               	movwf	??_Sinus_Generator
  8991  0DDD  0871               	movf	??_Sinus_Generator,w
  8992  0DDE  0021               	movlb	1	; select bank1
  8993  0DDF  07D0               	addwf	_current_sample_in_baud^(0+128),f
  8994  0DE0  0850               	movf	_current_sample_in_baud^(0+128),w
  8995  0DE1  064C               	xorwf	_SAMPLES_PER_BAUD^(0+128),w
  8996  0DE2  1D03               	skipz
  8997  0DE3  0008               	return
  8998                           
  8999                           ;audio_tone.c: 128: current_sample_in_baud = 0;
  9000  0DE4  01D0               	clrf	_current_sample_in_baud^(0+128)
  9001                           
  9002                           ;audio_tone.c: 129: packet_pos++;
  9003  0DE5  3001               	movlw	1
  9004  0DE6  0022               	movlb	2	; select bank2
  9005  0DE7  07A8               	addwf	_packet_pos^(0+256),f
  9006  0DE8  3000               	movlw	0
  9007  0DE9  3DA9               	addwfc	(_packet_pos+1)^(0+256),f
  9008  0DEA  3000               	movlw	0
  9009  0DEB  3DAA               	addwfc	(_packet_pos+2)^(0+256),f
  9010  0DEC  3000               	movlw	0
  9011  0DED  3DAB               	addwfc	(_packet_pos+3)^(0+256),f
  9012                           
  9013                           ;audio_tone.c: 131: }
  9014                           ;audio_tone.c: 132: }
  9015                           ;audio_tone.c: 134: end_generator:
  9016  0DEE  0008               	return
  9017  0DEF                     __end_of_Sinus_Generator:	
  9018                           ;audio_tone.c: 136: return;
  9019                           
  9020                           
  9021                           	psect	text52
  9022  16DC                     __ptext52:	
  9023 ;; *************** function _Timer0_Stop *****************
  9024 ;; Defined at:
  9025 ;;		line 258 in file "utility.c"
  9026 ;; Parameters:    Size  Location     Type
  9027 ;;		None
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;		None
  9030 ;; Return value:  Size  Location     Type
  9031 ;;		None               void
  9032 ;; Registers used:
  9033 ;;		status,2
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;Total ram usage:        0 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_Sinus_Generator
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           
  9053                           ;psect for function _Timer0_Stop
  9054  16DC                     _Timer0_Stop:	
  9055                           
  9056                           ;utility.c: 259: TMR0IE = 0;
  9057                           
  9058                           ;incstack = 0
  9059                           ; Regs used in _Timer0_Stop: [status,2]
  9060  16DC  128B               	bcf	11,5	;volatile
  9061                           
  9062                           ;utility.c: 260: TMR0 = 0x00;
  9063  16DD  0020               	movlb	0	; select bank0
  9064  16DE  0195               	clrf	21	;volatile
  9065  16DF  0008               	return
  9066  16E0                     __end_of_Timer0_Stop:	
  9067                           
  9068                           	psect	text53
  9069  16E0                     __ptext53:	
  9070 ;; *************** function _Send_Vcxo_Signal *****************
  9071 ;; Defined at:
  9072 ;;		line 114 in file "utility.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;  value           1    wreg     unsigned char 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;  value           1    0[COMMON] unsigned char 
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      unsigned char 
  9079 ;; Registers used:
  9080 ;;		wreg
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9090 ;;Total ram usage:        1 bytes
  9091 ;; Hardware stack levels used:    1
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_Sinus_Generator
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           
  9100                           ;psect for function _Send_Vcxo_Signal
  9101  16E0                     _Send_Vcxo_Signal:	
  9102                           
  9103                           ;incstack = 0
  9104                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  9105                           ;Send_Vcxo_Signal@value stored from wreg
  9106  16E0  00F0               	movwf	Send_Vcxo_Signal@value
  9107                           
  9108                           ;utility.c: 116: DACCON1 = value;
  9109  16E1  0870               	movf	Send_Vcxo_Signal@value,w
  9110  16E2  0022               	movlb	2	; select bank2
  9111  16E3  0099               	movwf	25	;volatile
  9112  16E4  0008               	return
  9113  16E5                     __end_of_Send_Vcxo_Signal:	
  9114                           ;utility.c: 117: return 1;
  9115                           ;	Return value of _Send_Vcxo_Signal is never used
  9116                           
  9117  007E                     btemp	set	126	;btemp
  9118  007E                     pic14e$flags	set	126
  9119  007E                     wtemp	set	126
  9120  007E                     wtemp0	set	126
  9121  0080                     wtemp1	set	128
  9122  0082                     wtemp2	set	130
  9123  0084                     wtemp3	set	132
  9124  0086                     wtemp4	set	134
  9125  0088                     wtemp5	set	136
  9126  007F                     wtemp6	set	127
  9127  007E                     ttemp	set	126
  9128  007E                     ttemp0	set	126
  9129  0081                     ttemp1	set	129
  9130  0084                     ttemp2	set	132
  9131  0087                     ttemp3	set	135
  9132  007F                     ttemp4	set	127
  9133  007E                     ltemp	set	126
  9134  007E                     ltemp0	set	126
  9135  0082                     ltemp1	set	130
  9136  0086                     ltemp2	set	134
  9137  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         143
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     80      80
    BANK1            80     28      80
    BANK2            80      0      38
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Modem_Flush_Frame
    _Set_Freq->___fttol
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftdiv->___lltoft
    ___ftadd->___ftneg
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ptt_On->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy
    _Read_Adf7012_Muxout->_Delay_ms
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _Ptt_On->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  157505
                                             79 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                             _Ptt_On
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   22731
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   34314
                         _Modem_Init
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   34314
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
                        _Gpio_Config
                           _Set_Freq
 ---------------------------------------------------------------------------------
 (3) _Set_Freq                                            26    22      4   10264
                                             38 BANK0     26    22      4
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4    1913
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     268
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     305
                                             24 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      98
                                             14 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2117
                                              8 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2071
                                             14 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    2711
                                             17 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1685
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     406
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (3) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1319
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1319
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Modem_Init                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   49510
                                             78 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ptt_On                                               1     1      0   48191
                                             77 BANK0      1     1      0
                           _Adf_Lock
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Adf_Lock                                             6     6      0   24141
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   21412
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    5353
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    5353
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    5353
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    5353
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    3141
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1411
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1331
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (3) _Adf_Locked                                           0     0      0    1319
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Read_Adf7012_Muxout                                  0     0      0    1319
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             6     4      2    1319
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (4) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _global_interrupt                                    2     2      0      45
                                              7 COMMON     2     2      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (11) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (12) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Lock
         _Adf_Locked
           _Read_Adf7012_Muxout
             _Delay_ms
               _Dac0_Start_Hold
         _Adf_Write_Config
           _Adf_Write_Register_One
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
           _Adf_Write_Register_Three
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
           _Adf_Write_Register_Two
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
           _Adf_Write_Register_Zero
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _Dac0_Start_Hold
               _Spi_Byte_Send
                 _Delay_ms
                   _Dac0_Start_Hold
             _memcpy
         _Delay_ms
           _Dac0_Start_Hold
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
         _Delay_ms
           _Dac0_Start_Hold
     _Timer0_Start
   _Modem_Setup
     _Modem_Init
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Gpio_Config
       _Set_Freq
         ___aldiv
         ___ftadd
           ___ftneg (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
         ___ftneg
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lldiv
         ___lltoft
           ___ftpack
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ptt_On
     _Adf_Lock
       _Adf_Locked
         _Read_Adf7012_Muxout
           _Delay_ms
             _Dac0_Start_Hold
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
     _Read_Adf7012_Muxout
       _Delay_ms
         _Dac0_Start_Hold
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _Sinus_Generator
     _Send_Vcxo_Signal
     _Timer0_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      26       9       47.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     114      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     114      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Sep 23 19:40:59 2014

                      __CFG_CP$OFF 0000            _Adf_Reset_Register_Zero 0816  
                   Reverse_Array@i 0032                     Spi_Byte_Send@i 0029  
         __end_of_Adf_Reset_Config 174C                       ___ftadd@exp1 003D  
                     ___ftadd@exp2 003C                        __CFG_LVP$ON 0000  
                     ___ftadd@sign 003B           _Adf_Reset_Register_Three 0858  
                              l132 0CCF                                l226 08E0  
                              l338 0200                                l198 088B  
                              l637 078C                                l743 0AB8  
                              l772 0385                                l749 0ACF  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00C7                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 0033  
                     __CFG_IESO$ON 0000                      ??_Gpio_Config 0020  
           _Adf_Write_Register_One 0AE6             _Adf_Write_Register_Two 06C4  
                     ___ftdiv@cntr 0038                       ___ftdiv@sign 003D  
                             l2021 08E1                               l2007 08A2  
                             l2043 08B1                               l2131 0A95  
                             l3003 0D43                               l2141 0ABD  
                             l2133 0A9F                               l2301 0360  
                             l3005 0D46                               l2231 079D  
                             l2143 0AC5                               l2135 0AA4  
                             l2127 0A8E                               l2311 0381  
                             l2303 0364                               l2057 09D5  
                             l2241 07BB                               l2219 0945  
                             l2075 096A                               l2059 09E9  
                             l2315 0397                               l2411 0FD0  
                             l2403 0FBC                               l2253 07E6  
                             l2309 0377                               l2087 173B  
                             l2239 07AD                               l2319 03A9  
                             l2415 0FD8                               l2601 0F08  
                             l2257 07F4                               l2249 07DB  
                             l2329 03C4                               l2273 0315  
                             l2345 0E1C                               l2505 08FF  
                             l2611 0F46                               l2291 033E  
                             l2339 0E06                               l2507 090F  
                             l2269 030E                               l2381 0F63  
                             l2551 0B89                               l2279 0324  
                             l2367 0E76                               l2359 0E5D  
                             l2439 0C5E                               l2705 05C9  
                             l2297 0351                               l2473 0CC3  
                             l2465 0CA9                               l2457 0C8E  
                             l2707 05EB                               l2299 035B  
                             l2387 0F79                               l2467 0CB2  
                             l2459 0C9C                               l2483 0A43  
                             l2901 17C9                               l2469 0CB5  
                             l2493 0A71                               l2485 0A51  
                             l2565 0216                               l2399 0FB4  
                             l2559 01EA                               l2681 0C16  
                             l2497 0A7C                               l2683 0C38  
                             l2851 03FC                               l2863 041D  
                             l2857 040F                               l2883 0472  
                             l2891 0433                               l2893 04AD  
                             l2877 044D                               l2869 0430  
                             l2887 0493                               l2997 0D3A  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _ADON 04E8  
                             STR_1 06BE                               u2005 04DC  
                             u2015 04EB                               u2105 06F6  
                             u2025 04FA                               u2115 0705  
                             u2035 0509                               u2205 00CB  
                             u2125 0714                               u2045 0524  
                             u2055 0AEF                               u2215 00DA  
                             u2135 0723                               u3015 0CAA  
                             u2065 0AFD                               u2225 00E9  
                             u2145 0071                               u2305 0A9A  
                             u2075 0B17                               u2235 00F8  
                             u2155 0080                               u3115 0904  
                             u3204 0EAC                               u3205 0EAB  
                             u2245 0107                               u2165 008F  
                             u2085 06CD                               u2325 0AB3  
                             u3214 0EB9                               u3215 0EB8  
                             u2255 0116                               u2175 009E  
                             u2095 06DC                               u3055 0A46  
                             u2265 0125                               u2185 00AD  
                             u2345 0AC0                               u3235 0ECB  
                             u2275 0134                               u2195 00BC  
                             u2435 07B0                               u3075 0A52  
                             u3244 0ED4                               u3245 0ED3  
                             u3085 0A66                               u3165 01E5  
                             u3255 0EE1                               u3335 0BE8  
                             u2455 07BC                               u2375 0AD6  
                             u3095 0A72                               u3175 01F9  
                             u3344 0BF0                               u3425 059B  
                             u3265 0F06                               u3345 0BEF  
                             u1905 0891                               u2465 07D0  
                             u2625 0352                               u3185 020F  
                             u3434 05A3                               u3435 05A2  
                             u3275 0F16                               u2475 07DC  
                             u3284 0F20                               u3364 0BFB  
                             u3285 0F1F                               u3365 0BFA  
                             u3605 040D                               u3454 05AE  
                             u3455 05AD                               u3295 0F2E  
                             u3375 0C08                               u3615 041B  
                             u2655 0365                               u3384 0C1D  
                             u3465 05BB                               u3385 0C1C  
                             u3625 042E                               u1945 08BB  
                             u2905 0FD9                               u3474 05D0  
                             u3475 05CF                               u3715 17BB  
                             u3395 0C2B                               u3635 044B  
                             u2595 033F                               u2755 0E2E  
                             u2915 0FDF                               u2835 0F85  
                             u3485 05DE                               u3645 0451  
                             u2685 0378                               u2765 0E3E  
                             u2845 0F95                               u3655 0470  
                             u2775 0E5E                               u3760 0D0C  
                             u3665 047F                               u1985 04BE  
                             u2785 0E6D                               u2865 0FBD  
                             u3675 0484                               u3595 03FA  
                             u1995 04CD                               u2795 0E77  
                             u2875 0FC3                               u2955 0C65  
                             u3685 0497                               u3695 043D  
                             u2985 0C8F                               _PIR1 0011  
                             u3797 0897                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 0CCC                       ___ftpack@arg 0020  
                     ___ftpack@exp 0023                               _test 00D2  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      Send_Byte@byte 0029  
                    __CFG_BOREN$ON 0000                               ltemp 007E  
                             start 003A                               ttemp 007E  
                  _Sinus_Generator 0D53                               wtemp 007E  
                    __CFG_MCLRE$ON 0000                       ___ftmul@cntr 0036  
                     ___ftmul@sign 0037            _Adf_Write_Register_Zero 04B5  
                     ___fttol@exp1 0045                       ___fttol@lval 0041  
                      ?_Adc1_Start 0070                       Adf_Lock@bias 00DE  
               main@beacon_address 00E0                      __CFG_PLLEN$ON 0000  
                  __end_of_Ptt_Off 172E                    __end_of___aldiv 07FD  
                    ??_Radio_Setup 006B                              _ADCS0 04F4  
                            _ADCS1 04F5                              _ADCS2 04F6  
                            ?_main 0070                              _DACEN 08C7  
                            _DACOE 08C5                    __end_of___ftadd 03DC  
                    __CFG_WDTE$OFF 0000                              _ANSA1 0C61  
                  __end_of___ftdiv 0E98                    __end_of___ftneg 1714  
                  __end_of___lldiv 0A85                    __end_of___ftmul 1000  
                  __end_of___fttol 0CCC                              i1l123 001B  
                            i1l124 0035                              i1l125 002A  
                            i1l126 0034                              _TMR1H 0017  
                            _TMR1L 0016                              _TRISA 008C  
                            _TRISC 008E         Write_Adf7012_Reg@reg_value 002C  
                     ___lltoft@exp 002D                              _phase 007D  
                            _test2 00D3                      ___ftpack@sign 0024  
                 __end_of_Adf_Lock 0BCC                      ??_Modem_Setup 006B  
                    Set_Freq@f_pfd 0058                  __end_of_BAUD_RATE 06BC  
                    Set_Freq@ratio 0052                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                 __size_of_Adf_Reset 0009  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                 _Adf_Write_Config 1714                              wtemp6 007F  
              __end_of_Gpio_Config 176B                   __end_of_Delay_ms 08A7  
                      ?_Adf_Locked 0070             _current_sample_in_baud 00D0  
                Spi_Byte_Send@data 0027                         Send_Byte@i 002A  
                  __initialization 003C          ??_Adf_Reset_Register_Zero 0020  
        __size_of_Ax25_Send_Header 00D9              __size_of_System_Start 0036  
                     __end_of_main 0D53          __size_of_Ax25_Send_Footer 001B  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 098A  
         _Adf_Write_Register_Three 0068              __end_of_Spi_Byte_Send 08FA  
                           ??_main 006F                      ___fttol@sign1 0040  
        __size_of_Send_Vcxo_Signal 0005                         _Modem_Init 177B  
                 __end_of_Set_Freq 02E6                __end_of_Radio_Setup 1800  
     __size_of_Read_Adf7012_Muxout 000F                             _ADCON0 009D  
                           _CCP1M1 1499                             _CCP1M2 149A  
                           _CCP1M3 149B                             _CCP1IE 048A  
                           _CCP1IF 008A                             _DACNSS 08C0  
                           _ADNREF 04F2                             _ADRESH 009C  
                           _ADRESL 009B                             _CCPR1H 0292  
                           _CCPR1L 0291                   __end_of___ftpack 0AE6  
          __end_of_Sinus_Generator 0DEF      Adf_Write_Register_One@reg_ptr 0043  
                 __end_of___lltoft 0924                             i1l2731 0DA5  
                           i1l2741 0DB7                             i1l2725 0D75  
                           i1l2751 0DCC                             i1l2745 0DBF  
                           _INTCON 000B                             u351_25 0D67  
              __size_of_Adc1_Start 0006                             u354_25 0D95  
                           _OSCCON 0099           __size_of_Dac0_Start_Hold 0005  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1IE 0488                             _TMR1IF 0088  
                           _TMR1ON 00C0                       _System_Start 098A  
              __end_of_Modem_Setup 16FC                     __CFG_PWRTE$OFF 0000  
                    ??_Timer0_Stop 0070          ??_Adf_Write_Register_Zero 0033  
                           _Ptt_On 09F9                          ??_Ptt_Off 006B  
                        ??___aldiv 0028                 __size_of_Send_Byte 00B4  
               Reverse_Array@input 0031                          ??___ftadd 0037  
                   __CFG_STVREN$ON 0000                          ??___ftdiv 0034  
                        ??___ftneg 0031                          ??___lldiv 0028  
                        ??___ftmul 002E                          ??___fttol 003C  
                 ??_Ax25_Send_Flag 0020                   ??_Ax25_Send_Byte 002C  
                           _memcpy 08A7                   ??_Ax25_Send_Sync 0020  
                __end_of_Adf_Reset 170B              ___ftmul@f3_as_product 0033  
                       _Update_Crc 0924                __size_of_Adf_Locked 0003  
                      _Gpio_Config 175B            __end_of__initialization 0064  
                    _adc_sonuc_low 00CE                         ___ftadd@f1 0031  
                       ___ftadd@f2 0034                         ___ftdiv@f1 0031  
                       ___ftdiv@f2 002E                         ___ftdiv@f3 0039  
                       ___ftneg@f1 002E          __size_of_global_interrupt 0036  
               Write_Adf7012_Reg@i 002D                         ___ftmul@f1 0028  
                       ___ftmul@f2 002B         ??_Adf_Reset_Register_Three 0020  
                       ___fttol@f1 0038                     __pcstackCOMMON 0070  
         ??_Adf_Reset_Register_One 0020                       __pidataBANK2 176B  
         ??_Adf_Reset_Register_Two 0020                         ___lltoft@c 0028  
                       _adf_config 00A0                __end_of_Timer0_Stop 16E0  
                    _PLAYBACK_RATE 06B6                          ?_Adf_Lock 0070  
                      ?_Modem_Init 0070                  ?_Adf_Reset_Config 0070  
                      _Radio_Setup 17E3            ?_Adf_Write_Register_One 0070  
          ?_Adf_Write_Register_Two 0070          Spi_Byte_Send@data_to_send 0028  
               ??_Adf_Reset_Config 0026                          ?_Delay_ms 0020  
                __end_of_Send_Byte 0F4C                   _PHASE_DELTA_1200 0120  
                 _PHASE_DELTA_2200 0124                        _Modem_Setup 16F6  
                       __pbssBANK1 00A0                         __pbssBANK2 0120  
                       __pbssBANK3 01A0                   ?_Sinus_Generator 0070  
               Ax25_Send_Flag@byte 0026                          ?_Set_Freq 0046  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 00D8  
                    ?_Timer1_Start 0070                         __pmaintext 0CCC  
                 _Ax25_Send_Header 03DC                            ?_Ptt_On 0070  
                ??_Dac0_Start_Hold 0020                 __end_of_TABLE_SIZE 06BE  
                 _Ax25_Send_Footer 17AB                         __pintentry 0004  
                     ??_Adc1_Start 0020                            _DACCON1 0119  
               Ax25_Send_Byte@byte 002C                            _DACPSS0 08C2  
                          _DACPSS1 08C3                            ?_memcpy 0020  
                 _Ax25_Send_String 17C6                            _ADPREF0 04F0  
                          _ADPREF1 04F1                         ??_Adf_Lock 006B  
                        ?___ftpack 0020                          ?___lltoft 0028  
   __end_of_Adf_Write_Register_One 0B57     __end_of_Adf_Write_Register_Two 077B  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                 _Send_Vcxo_Signal 16E0           __end_of_Adf_Write_Config 1720  
                      ?_Update_Crc 0070                         ??_Delay_ms 0022  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _PTT_OFF 00CB                Update_Crc@input_bit 0022  
    Adf_Write_Register_Two@reg_ptr 004B     Adf_Write_Register_Zero@reg_ptr 004F  
               __end_of_Adc1_Start 16F0                     ??_Timer0_Start 0020  
              __size_of_Modem_Init 0018                     ??_Timer1_Start 0020  
                        _BAUD_RATE 06BA                       ??_Adf_Locked 0026  
                       ??_Set_Freq 004A         ??_Adf_Write_Register_Three 0033  
                      _Timer0_Stop 16DC                         _packet_pos 0128  
                          _Ptt_Off 1720                    __size_of_Ptt_On 0039  
              _Read_Adf7012_Muxout 172E                            ___aldiv 077B  
                          ___ftadd 02E6    __size_of_Adf_Reset_Register_One 0011  
                          ___ftdiv 0DEF                            ___ftneg 170B  
                          ___lldiv 0A32    __size_of_Adf_Reset_Register_Two 0018  
                          ___ftmul 0F4C                            ___fttol 0C45  
               Ax25_Send_Sync@byte 0026                Reverse_Array@length 0027  
                  Ax25_Send_Flag@i 0027                    __size_of_memcpy 0029  
                       ??___ftpack 0025                         ??___lltoft 002C  
                          __ptext1 174C                            __ptext2 098A  
                          __ptext3 1720                            __ptext4 16F6  
                          __ptext5 17E3                            __ptext6 01D4  
                          __ptext7 08FA                            __ptext8 0A32  
                          __ptext9 0C45              Delay_ms@time_to_delay 0020  
        Adf_Write_Register_One@reg 003F                    Ax25_Send_Sync@i 0027  
                 ___aldiv@dividend 0024                 __end_of_Adf_Locked 0800  
             ?_Read_Adf7012_Muxout 0070          Adf_Write_Register_Two@reg 004F  
                          clrloop0 05F9    Adf_Write_Register_Three@reg_ptr 00D4  
             end_of_initialization 0064                            memcpy@d 0024  
                          memcpy@n 0021                            memcpy@s 0025  
                        Delay_ms@i 0024                            init_ram 16FC  
                          initloop 16FD                   _global_interrupt 0004  
                  ___lldiv@divisor 0020                    ___lldiv@counter 002D  
              __size_of_Update_Crc 0032                   ___aldiv@quotient 002B  
                     __pstringtext 0600                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 0130                          _Adf_Reset 1702  
                   _adc_sonuc_high 00CD              ??_Read_Adf7012_Muxout 0026  
                       _powerlevel 012C                   _SAMPLES_PER_BAUD 00CC  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 0805  
     Write_Adf7012_Reg@size_of_reg 002A             _Adf_Reset_Register_Two 1793  
        Sinus_Generator@tone_index 00C9             __size_of_Reverse_Array 0034  
           __size_of_Spi_Byte_Send 002A                        ___ftdiv@exp 003C  
         ?_Adf_Reset_Register_Zero 0070                        ___ftmul@exp 0032  
                      Adf_Lock@adj 00DC                     __end_of_Ptt_On 0A32  
                   __end_of_memcpy 08D0                       ??_Modem_Init 0020  
                     ?_Radio_Setup 0070                       Set_Freq@freq 0046  
                     Set_Freq@rest 0055                  __size_of_Adf_Lock 0075  
             __end_of_Timer0_Start 0805               __end_of_Timer1_Start 175B  
              start_initialization 003C                         ?_Adf_Reset 0070  
         __end_of_Ax25_Send_Header 04B5                          Set_Freq@m 004E  
                        Set_Freq@n 005C           __end_of_Ax25_Send_Footer 17C6  
                __size_of_Delay_ms 0029                       ?_Modem_Setup 0070  
                  _Dac0_Start_Hold 16E5           __end_of_Ax25_Send_String 17E3  
        __size_of_Adf_Reset_Config 000F           ?_Adf_Write_Register_Zero 0070  
                        _Send_Byte 0E98           __end_of_Send_Vcxo_Signal 16E5  
               __end_of_Modem_Init 1793                           ??_Ptt_On 006D  
                __size_of_Set_Freq 0112                        __pdataBANK2 0136  
                         ??_memcpy 0023                      _Reverse_Array 0956  
                    _Spi_Byte_Send 08D0                  ?_Adf_Write_Config 0070  
                __size_of___ftpack 0061                       ??_Update_Crc 0020  
                __size_of___lltoft 002A                        __pbssCOMMON 0079  
                        ___latbits 0002  __size_of_Adf_Reset_Register_Three 0026  
                    _ones_in_a_row 0134                      __pcstackBANK0 0020  
                    __pcstackBANK1 00D4                 ??_Adf_Write_Config 006B  
        ?_Adf_Reset_Register_Three 0070                __end_of__stringdata 06C4  
          __size_of_Ax25_Send_Flag 007C            __size_of_Ax25_Send_Byte 0006  
          __size_of_Ax25_Send_Sync 0079    __end_of_Adf_Reset_Register_Zero 0835  
    Ax25_Send_Header@num_addresses 002C                         ?_Send_Byte 0070  
                _Write_Adf7012_Reg 09C0                       _current_byte 00CF  
                Ax25_Send_Header@i 0034                  Ax25_Send_Header@j 0031  
               ?_Write_Adf7012_Reg 002A                       ?_Timer0_Stop 0070  
         __size_of_Sinus_Generator 009C          Ax25_Send_Footer@final_crc 002C  
           Ax25_Send_String@string 002D                           ?_Ptt_Off 0070  
               __end_of_Update_Crc 0956                           ?___aldiv 0020  
                         ?___ftadd 0031                           ?___ftdiv 002E  
                         ?___ftneg 002E                           ?___lldiv 0020  
                         ?___ftmul 0028                           ?___fttol 0038  
              ??_Write_Adf7012_Reg 002B                     ?_Reverse_Array 0027  
                   ?_Spi_Byte_Send 0070           __end_of_global_interrupt 003A  
          __end_of_Dac0_Start_Hold 16EA                        ??_Adf_Reset 0026  
  __end_of_Adf_Write_Register_Zero 057C                  Ax25_Send_String@i 002F  
        __end_of_Write_Adf7012_Reg 09F9               __size_of_Gpio_Config 0010  
                  ___aldiv@divisor 0020                      ?_System_Start 0070  
                     _modem_packet 01A0                    ___aldiv@counter 0029  
                        clear_ram0 05F8                          main@F3176 0136  
            __size_of_Timer0_Start 0005                           _Adf_Lock 0B57  
            __size_of_Timer1_Start 000F          Reverse_Array@buffer_array 002D  
                      __stringdata 06BE  __size_of_Adf_Write_Register_Three 016C  
          ?_Adf_Reset_Register_One 0070          ?_Adf_Write_Register_Three 0070  
          ?_Adf_Reset_Register_Two 0070               __size_of_Radio_Setup 001D  
                         _Delay_ms 087E              Send_Vcxo_Signal@value 0070  
                   ??_System_Start 0020                   _Adf_Reset_Config 173D  
                      ??_Send_Byte 0023               __size_of_Modem_Setup 0006  
                _Modem_Flush_Frame 0835                           _Set_Freq 01D4  
               ?_Modem_Flush_Frame 0070                       _Timer0_Start 0800  
                     _Timer1_Start 174C           ??_Adf_Write_Register_One 0033  
         ??_Adf_Write_Register_Two 0033                   __size_of_Ptt_Off 000E  
                  ??_Reverse_Array 0028                    ??_Spi_Byte_Send 0026  
                 __size_of___aldiv 0082              __end_of_PLAYBACK_RATE 06BA  
                 __size_of___ftadd 00F6                ??_Modem_Flush_Frame 006E  
                 __size_of___ftdiv 00A9                   __size_of___ftneg 0009  
                 __size_of___lldiv 0053                   __size_of___ftmul 00B4  
                 __size_of___fttol 0087                           ___ftpack 0A85  
                ??_Sinus_Generator 0071   __size_of_Adf_Reset_Register_Zero 001F  
                         ___lltoft 08FA        __end_of_Read_Adf7012_Muxout 173D  
   __end_of_Adf_Reset_Register_One 0816                           _dac_flag 0132  
   __end_of_Adf_Reset_Register_Two 17AB                __end_of_sine_table2 06B6  
                 ?_Dac0_Start_Hold 0070                     _Ax25_Send_Flag 057C  
                   _Ax25_Send_Byte 16F0                     _Ax25_Send_Sync 0BCC  
                         __ptext10 170B                           __ptext11 0F4C  
                         __ptext20 0858                           __ptext12 0DEF  
                         __ptext21 0805                           __ptext13 02E6  
                         __ptext30 06C4                           __ptext22 1702  
                         __ptext14 0A85                           __ptext31 0068  
                         __ptext23 177B                           __ptext15 077B  
                         __ptext40 16E5                           __ptext32 0AE6  
                         __ptext24 0835                           __ptext16 175B  
                         __ptext41 17C6                           __ptext33 09C0  
                         __ptext25 0800                           __ptext17 173D  
                         __ptext42 16F0                           __ptext34 08D0  
                         __ptext26 09F9                           __ptext18 0816  
                         __ptext51 0D53                           __ptext43 03DC  
                         __ptext35 0956                           __ptext27 0B57  
                         __ptext19 1793                           __ptext52 16DC  
                         __ptext44 0BCC                           __ptext36 08A7  
                         __ptext28 1714                           __ptext53 16E0  
                         __ptext45 17AB                           __ptext37 07FD  
                         __ptext29 04B5                           __ptext46 0E98  
                         __ptext38 172E                           __ptext47 0924  
                         __ptext39 087E                           __ptext48 057C  
                         __ptext49 16EA                  ?_Ax25_Send_Header 002C  
                ?_Ax25_Send_Footer 0070                 ??_Ax25_Send_Header 002E  
        __end_of_Modem_Flush_Frame 0858         __size_of_Write_Adf7012_Reg 0039  
                ?_Ax25_Send_String 002D                 ??_Ax25_Send_Footer 002C  
                    __size_of_main 0087                        _phase_delta 00D1  
                ?_Send_Vcxo_Signal 0070                 ??_Ax25_Send_String 002F  
               ??_Send_Vcxo_Signal 0070   __end_of_Adf_Reset_Register_Three 087E  
             __size_of_Timer0_Stop 0004         Adf_Write_Register_Zero@reg 0053  
 __size_of_Adf_Write_Register_Zero 00C7             __end_of_Ax25_Send_Flag 05F8  
           __end_of_Ax25_Send_Byte 16F6             __end_of_Ax25_Send_Sync 0C45  
                       _TABLE_SIZE 06BC                           memcpy@d1 0026  
                         memcpy@s1 0020                        pic14e$flags 007E  
                         intlevel1 0000                   ___lldiv@dividend 0024  
        __size_of_Adf_Write_Config 000C                  __CFG_CLKOUTEN$OFF 0000  
               _MODEM_TRANSMITTING 00CA    __size_of_Adf_Write_Register_One 0071  
  __size_of_Adf_Write_Register_Two 00B7                         _Adc1_Start 16EA  
                      _sine_table2 0600               __end_of_System_Start 09C0  
                  ?_Ax25_Send_Flag 0070                   ___lldiv@quotient 0029  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070                       ___aldiv@sign 002A  
      Sinus_Generator@Audio_Signal 0076                 ??_global_interrupt 0077  
       __size_of_Modem_Flush_Frame 0023                         _Adf_Locked 07FD  
                _modem_packet_size 0079   __end_of_Adf_Write_Register_Three 01D4  
