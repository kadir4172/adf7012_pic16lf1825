

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed Oct 01 12:41:45 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000E                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  018C                     	;# 
   123  018E                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  020E                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  038C                     	;# 
   183  038E                     	;# 
   184  0391                     	;# 
   185  0392                     	;# 
   186  0393                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000E                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  010C                     	;# 
   254  010E                     	;# 
   255  0111                     	;# 
   256  0112                     	;# 
   257  0113                     	;# 
   258  0114                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011A                     	;# 
   265  011B                     	;# 
   266  011D                     	;# 
   267  011E                     	;# 
   268  018C                     	;# 
   269  018E                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0194                     	;# 
   277  0195                     	;# 
   278  0196                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020E                     	;# 
   289  0211                     	;# 
   290  0211                     	;# 
   291  0212                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0298                     	;# 
   313  0298                     	;# 
   314  0299                     	;# 
   315  029A                     	;# 
   316  029B                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  0311                     	;# 
   321  0311                     	;# 
   322  0312                     	;# 
   323  0313                     	;# 
   324  0318                     	;# 
   325  0318                     	;# 
   326  0319                     	;# 
   327  031A                     	;# 
   328  038C                     	;# 
   329  038E                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  039A                     	;# 
   334  039C                     	;# 
   335  039D                     	;# 
   336  039E                     	;# 
   337  039F                     	;# 
   338  0415                     	;# 
   339  0416                     	;# 
   340  0417                     	;# 
   341  041C                     	;# 
   342  041D                     	;# 
   343  041E                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000E                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  008C                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  010C                     	;# 
   400  010E                     	;# 
   401  0111                     	;# 
   402  0112                     	;# 
   403  0113                     	;# 
   404  0114                     	;# 
   405  0115                     	;# 
   406  0116                     	;# 
   407  0117                     	;# 
   408  0118                     	;# 
   409  0119                     	;# 
   410  011A                     	;# 
   411  011B                     	;# 
   412  011D                     	;# 
   413  011E                     	;# 
   414  018C                     	;# 
   415  018E                     	;# 
   416  0191                     	;# 
   417  0191                     	;# 
   418  0192                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0194                     	;# 
   423  0195                     	;# 
   424  0196                     	;# 
   425  0199                     	;# 
   426  019A                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019C                     	;# 
   430  019D                     	;# 
   431  019E                     	;# 
   432  019F                     	;# 
   433  020C                     	;# 
   434  020E                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  0212                     	;# 
   438  0212                     	;# 
   439  0213                     	;# 
   440  0213                     	;# 
   441  0214                     	;# 
   442  0214                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0216                     	;# 
   447  0216                     	;# 
   448  0217                     	;# 
   449  0217                     	;# 
   450  0291                     	;# 
   451  0291                     	;# 
   452  0292                     	;# 
   453  0293                     	;# 
   454  0294                     	;# 
   455  0295                     	;# 
   456  0295                     	;# 
   457  0296                     	;# 
   458  0298                     	;# 
   459  0298                     	;# 
   460  0299                     	;# 
   461  029A                     	;# 
   462  029B                     	;# 
   463  029C                     	;# 
   464  029D                     	;# 
   465  029E                     	;# 
   466  0311                     	;# 
   467  0311                     	;# 
   468  0312                     	;# 
   469  0313                     	;# 
   470  0318                     	;# 
   471  0318                     	;# 
   472  0319                     	;# 
   473  031A                     	;# 
   474  038C                     	;# 
   475  038E                     	;# 
   476  0391                     	;# 
   477  0392                     	;# 
   478  0393                     	;# 
   479  039A                     	;# 
   480  039C                     	;# 
   481  039D                     	;# 
   482  039E                     	;# 
   483  039F                     	;# 
   484  0415                     	;# 
   485  0416                     	;# 
   486  0417                     	;# 
   487  041C                     	;# 
   488  041D                     	;# 
   489  041E                     	;# 
   490  0FE4                     	;# 
   491  0FE5                     	;# 
   492  0FE6                     	;# 
   493  0FE7                     	;# 
   494  0FE8                     	;# 
   495  0FE9                     	;# 
   496  0FEA                     	;# 
   497  0FEB                     	;# 
   498  0FED                     	;# 
   499  0FEE                     	;# 
   500  0FEF                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  0008                     	;# 
   510  0009                     	;# 
   511  000A                     	;# 
   512  000B                     	;# 
   513  000C                     	;# 
   514  000E                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  008C                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  010C                     	;# 
   546  010E                     	;# 
   547  0111                     	;# 
   548  0112                     	;# 
   549  0113                     	;# 
   550  0114                     	;# 
   551  0115                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  0118                     	;# 
   555  0119                     	;# 
   556  011A                     	;# 
   557  011B                     	;# 
   558  011D                     	;# 
   559  011E                     	;# 
   560  018C                     	;# 
   561  018E                     	;# 
   562  0191                     	;# 
   563  0191                     	;# 
   564  0192                     	;# 
   565  0193                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0199                     	;# 
   572  019A                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019D                     	;# 
   577  019E                     	;# 
   578  019F                     	;# 
   579  020C                     	;# 
   580  020E                     	;# 
   581  0211                     	;# 
   582  0211                     	;# 
   583  0212                     	;# 
   584  0212                     	;# 
   585  0213                     	;# 
   586  0213                     	;# 
   587  0214                     	;# 
   588  0214                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0216                     	;# 
   593  0216                     	;# 
   594  0217                     	;# 
   595  0217                     	;# 
   596  0291                     	;# 
   597  0291                     	;# 
   598  0292                     	;# 
   599  0293                     	;# 
   600  0294                     	;# 
   601  0295                     	;# 
   602  0295                     	;# 
   603  0296                     	;# 
   604  0298                     	;# 
   605  0298                     	;# 
   606  0299                     	;# 
   607  029A                     	;# 
   608  029B                     	;# 
   609  029C                     	;# 
   610  029D                     	;# 
   611  029E                     	;# 
   612  0311                     	;# 
   613  0311                     	;# 
   614  0312                     	;# 
   615  0313                     	;# 
   616  0318                     	;# 
   617  0318                     	;# 
   618  0319                     	;# 
   619  031A                     	;# 
   620  038C                     	;# 
   621  038E                     	;# 
   622  0391                     	;# 
   623  0392                     	;# 
   624  0393                     	;# 
   625  039A                     	;# 
   626  039C                     	;# 
   627  039D                     	;# 
   628  039E                     	;# 
   629  039F                     	;# 
   630  0415                     	;# 
   631  0416                     	;# 
   632  0417                     	;# 
   633  041C                     	;# 
   634  041D                     	;# 
   635  041E                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000E                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008E                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009A                     	;# 
   686  009B                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  010C                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011A                     	;# 
   703  011B                     	;# 
   704  011D                     	;# 
   705  011E                     	;# 
   706  018C                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0193                     	;# 
   714  0194                     	;# 
   715  0195                     	;# 
   716  0196                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  020E                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0213                     	;# 
   733  0214                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  0291                     	;# 
   743  0291                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0294                     	;# 
   747  0295                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0298                     	;# 
   751  0298                     	;# 
   752  0299                     	;# 
   753  029A                     	;# 
   754  029B                     	;# 
   755  029C                     	;# 
   756  029D                     	;# 
   757  029E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  0318                     	;# 
   763  0318                     	;# 
   764  0319                     	;# 
   765  031A                     	;# 
   766  038C                     	;# 
   767  038E                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  0393                     	;# 
   771  039A                     	;# 
   772  039C                     	;# 
   773  039D                     	;# 
   774  039E                     	;# 
   775  039F                     	;# 
   776  0415                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  041C                     	;# 
   780  041D                     	;# 
   781  041E                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793                           
   794                           	psect	idataBANK2
   795  07F0                     __pidataBANK2:	
   796                           
   797                           ;initializer for main@F3169
   798  07F0  3443               	retlw	67
   799  07F1  3455               	retlw	85
   800  07F2  3442               	retlw	66
   801  07F3  3445               	retlw	69
   802  07F4  3459               	retlw	89
   803  07F5  3459               	retlw	89
   804  07F6  3400               	retlw	0
   805  07F7  3405               	retlw	5
   806  07F8  3443               	retlw	67
   807  07F9  3455               	retlw	85
   808  07FA  3442               	retlw	66
   809  07FB  3445               	retlw	69
   810  07FC  3458               	retlw	88
   811  07FD  3458               	retlw	88
   812  07FE  3400               	retlw	0
   813  07FF  3406               	retlw	6
   814                           
   815                           	psect	stringtext
   816  0400                     __pstringtext:	
   817  0400                     _sine_table2:	
   818  0400  3410               	retlw	16
   819  0401  3410               	retlw	16
   820  0402  3411               	retlw	17
   821  0403  3411               	retlw	17
   822  0404  3412               	retlw	18
   823  0405  3412               	retlw	18
   824  0406  3413               	retlw	19
   825  0407  3413               	retlw	19
   826  0408  3414               	retlw	20
   827  0409  3414               	retlw	20
   828  040A  3415               	retlw	21
   829  040B  3415               	retlw	21
   830  040C  3416               	retlw	22
   831  040D  3416               	retlw	22
   832  040E  3417               	retlw	23
   833  040F  3417               	retlw	23
   834  0410  3418               	retlw	24
   835  0411  3418               	retlw	24
   836  0412  3419               	retlw	25
   837  0413  3419               	retlw	25
   838  0414  3419               	retlw	25
   839  0415  341A               	retlw	26
   840  0416  341A               	retlw	26
   841  0417  341B               	retlw	27
   842  0418  341B               	retlw	27
   843  0419  341B               	retlw	27
   844  041A  341C               	retlw	28
   845  041B  341C               	retlw	28
   846  041C  341C               	retlw	28
   847  041D  341D               	retlw	29
   848  041E  341D               	retlw	29
   849  041F  341D               	retlw	29
   850  0420  341D               	retlw	29
   851  0421  341E               	retlw	30
   852  0422  341E               	retlw	30
   853  0423  341E               	retlw	30
   854  0424  341E               	retlw	30
   855  0425  341E               	retlw	30
   856  0426  341E               	retlw	30
   857  0427  341F               	retlw	31
   858  0428  341F               	retlw	31
   859  0429  341F               	retlw	31
   860  042A  341F               	retlw	31
   861  042B  341F               	retlw	31
   862  042C  341F               	retlw	31
   863  042D  341F               	retlw	31
   864  042E  341F               	retlw	31
   865  042F  341F               	retlw	31
   866  0430  341F               	retlw	31
   867  0431  341F               	retlw	31
   868  0432  341F               	retlw	31
   869  0433  341F               	retlw	31
   870  0434  341F               	retlw	31
   871  0435  341E               	retlw	30
   872  0436  341E               	retlw	30
   873  0437  341E               	retlw	30
   874  0438  341E               	retlw	30
   875  0439  341E               	retlw	30
   876  043A  341E               	retlw	30
   877  043B  341D               	retlw	29
   878  043C  341D               	retlw	29
   879  043D  341D               	retlw	29
   880  043E  341D               	retlw	29
   881  043F  341C               	retlw	28
   882  0440  341C               	retlw	28
   883  0441  341C               	retlw	28
   884  0442  341B               	retlw	27
   885  0443  341B               	retlw	27
   886  0444  341B               	retlw	27
   887  0445  341A               	retlw	26
   888  0446  341A               	retlw	26
   889  0447  3419               	retlw	25
   890  0448  3419               	retlw	25
   891  0449  3419               	retlw	25
   892  044A  3418               	retlw	24
   893  044B  3418               	retlw	24
   894  044C  3417               	retlw	23
   895  044D  3417               	retlw	23
   896  044E  3416               	retlw	22
   897  044F  3416               	retlw	22
   898  0450  3415               	retlw	21
   899  0451  3415               	retlw	21
   900  0452  3414               	retlw	20
   901  0453  3414               	retlw	20
   902  0454  3413               	retlw	19
   903  0455  3413               	retlw	19
   904  0456  3412               	retlw	18
   905  0457  3412               	retlw	18
   906  0458  3411               	retlw	17
   907  0459  3411               	retlw	17
   908  045A  3410               	retlw	16
   909  045B  3410               	retlw	16
   910  045C  340F               	retlw	15
   911  045D  340E               	retlw	14
   912  045E  340E               	retlw	14
   913  045F  340D               	retlw	13
   914  0460  340D               	retlw	13
   915  0461  340C               	retlw	12
   916  0462  340C               	retlw	12
   917  0463  340B               	retlw	11
   918  0464  340B               	retlw	11
   919  0465  340A               	retlw	10
   920  0466  340A               	retlw	10
   921  0467  3409               	retlw	9
   922  0468  3409               	retlw	9
   923  0469  3408               	retlw	8
   924  046A  3408               	retlw	8
   925  046B  3407               	retlw	7
   926  046C  3407               	retlw	7
   927  046D  3406               	retlw	6
   928  046E  3406               	retlw	6
   929  046F  3406               	retlw	6
   930  0470  3405               	retlw	5
   931  0471  3405               	retlw	5
   932  0472  3404               	retlw	4
   933  0473  3404               	retlw	4
   934  0474  3404               	retlw	4
   935  0475  3403               	retlw	3
   936  0476  3403               	retlw	3
   937  0477  3403               	retlw	3
   938  0478  3402               	retlw	2
   939  0479  3402               	retlw	2
   940  047A  3402               	retlw	2
   941  047B  3402               	retlw	2
   942  047C  3401               	retlw	1
   943  047D  3401               	retlw	1
   944  047E  3401               	retlw	1
   945  047F  3401               	retlw	1
   946  0480  3401               	retlw	1
   947  0481  3401               	retlw	1
   948  0482  3400               	retlw	0
   949  0483  3400               	retlw	0
   950  0484  3400               	retlw	0
   951  0485  3400               	retlw	0
   952  0486  3400               	retlw	0
   953  0487  3400               	retlw	0
   954  0488  3400               	retlw	0
   955  0489  3400               	retlw	0
   956  048A  3400               	retlw	0
   957  048B  3400               	retlw	0
   958  048C  3400               	retlw	0
   959  048D  3400               	retlw	0
   960  048E  3400               	retlw	0
   961  048F  3400               	retlw	0
   962  0490  3401               	retlw	1
   963  0491  3401               	retlw	1
   964  0492  3401               	retlw	1
   965  0493  3401               	retlw	1
   966  0494  3401               	retlw	1
   967  0495  3401               	retlw	1
   968  0496  3402               	retlw	2
   969  0497  3402               	retlw	2
   970  0498  3402               	retlw	2
   971  0499  3402               	retlw	2
   972  049A  3403               	retlw	3
   973  049B  3403               	retlw	3
   974  049C  3403               	retlw	3
   975  049D  3404               	retlw	4
   976  049E  3404               	retlw	4
   977  049F  3404               	retlw	4
   978  04A0  3405               	retlw	5
   979  04A1  3405               	retlw	5
   980  04A2  3406               	retlw	6
   981  04A3  3406               	retlw	6
   982  04A4  3406               	retlw	6
   983  04A5  3407               	retlw	7
   984  04A6  3407               	retlw	7
   985  04A7  3408               	retlw	8
   986  04A8  3408               	retlw	8
   987  04A9  3409               	retlw	9
   988  04AA  3409               	retlw	9
   989  04AB  340A               	retlw	10
   990  04AC  340A               	retlw	10
   991  04AD  340B               	retlw	11
   992  04AE  340B               	retlw	11
   993  04AF  340C               	retlw	12
   994  04B0  340C               	retlw	12
   995  04B1  340D               	retlw	13
   996  04B2  340D               	retlw	13
   997  04B3  340E               	retlw	14
   998  04B4  340E               	retlw	14
   999  04B5  340F               	retlw	15
  1000  04B6                     __end_of_sine_table2:	
  1001  04B6                     _PLAYBACK_RATE:	
  1002  04B6  3412               	retlw	18
  1003  04B7  347A               	retlw	122
  1004  04B8  3400               	retlw	0
  1005  04B9  3400               	retlw	0
  1006  04BA                     __end_of_PLAYBACK_RATE:	
  1007  04BA                     _BAUD_RATE:	
  1008  04BA  34B0               	retlw	176
  1009  04BB  3404               	retlw	4
  1010  04BC                     __end_of_BAUD_RATE:	
  1011  04BC                     _TABLE_SIZE:	
  1012  04BC  34B6               	retlw	182
  1013  04BD  3400               	retlw	0
  1014  04BE                     __end_of_TABLE_SIZE:	
  1015  000B                     _INTCON	set	11
  1016  0011                     _PIR1	set	17
  1017  000C                     _PORTAbits	set	12
  1018  000E                     _PORTCbits	set	14
  1019  0015                     _TMR0	set	21
  1020  0017                     _TMR1H	set	23
  1021  0016                     _TMR1L	set	22
  1022  008E                     _ADIF	set	142
  1023  008A                     _CCP1IF	set	138
  1024  00C4                     _T1CKPS0	set	196
  1025  00C5                     _T1CKPS1	set	197
  1026  005D                     _TMR0IE	set	93
  1027  005A                     _TMR0IF	set	90
  1028  00C6                     _TMR1CS0	set	198
  1029  00C7                     _TMR1CS1	set	199
  1030  00CF                     _TMR1GE	set	207
  1031  0088                     _TMR1IF	set	136
  1032  00C0                     _TMR1ON	set	192
  1033  009D                     _ADCON0	set	157
  1034  009C                     _ADRESH	set	156
  1035  009B                     _ADRESL	set	155
  1036  0099                     _OSCCON	set	153
  1037  009A                     _OSCSTAT	set	154
  1038  0098                     _OSCTUNE	set	152
  1039  008C                     _TRISA	set	140
  1040  008E                     _TRISC	set	142
  1041  04F4                     _ADCS0	set	1268
  1042  04F5                     _ADCS1	set	1269
  1043  04F6                     _ADCS2	set	1270
  1044  04F7                     _ADFM	set	1271
  1045  048E                     _ADIE	set	1166
  1046  04F2                     _ADNREF	set	1266
  1047  04E8                     _ADON	set	1256
  1048  04F0                     _ADPREF0	set	1264
  1049  04F1                     _ADPREF1	set	1265
  1050  048A                     _CCP1IE	set	1162
  1051  04AB                     _PSA	set	1195
  1052  04AD                     _TMR0CS	set	1197
  1053  0488                     _TMR1IE	set	1160
  1054  04B9                     _WDTPS0	set	1209
  1055  04BA                     _WDTPS1	set	1210
  1056  04BB                     _WDTPS2	set	1211
  1057  04BC                     _WDTPS3	set	1212
  1058  04BD                     _WDTPS4	set	1213
  1059  0119                     _DACCON1	set	281
  1060  08C7                     _DACEN	set	2247
  1061  08C0                     _DACNSS	set	2240
  1062  08C5                     _DACOE	set	2245
  1063  08C2                     _DACPSS0	set	2242
  1064  08C3                     _DACPSS1	set	2243
  1065  0C61                     _ANSA1	set	3169
  1066  0292                     _CCPR1H	set	658
  1067  0291                     _CCPR1L	set	657
  1068  1499                     _CCP1M1	set	5273
  1069  149A                     _CCP1M2	set	5274
  1070  149B                     _CCP1M3	set	5275
  1071  04BE                     __stringdata:	
  1072  04BE                     STR_1:	
  1073  04BE  3448               	retlw	72	;'H'
  1074  04BF  3445               	retlw	69	;'E'
  1075  04C0  344C               	retlw	76	;'L'
  1076  04C1  344C               	retlw	76	;'L'
  1077  04C2  344F               	retlw	79	;'O'
  1078  04C3  3400               	retlw	0
  1079  04C4                     __end_of__stringdata:	
  1080                           
  1081                           ; #config settings
  1082  0000                     
  1083                           	psect	cinit
  1084  005B                     start_initialization:	
  1085  005B                     __initialization:	
  1086                           
  1087                           ; Clear objects allocated to COMMON
  1088  005B  01F9               	clrf	__pbssCOMMON& (0+127)
  1089  005C  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1090  005D  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1091  005E  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1092  005F  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1093                           
  1094                           ; Clear objects allocated to BANK0
  1095  0060  01EE               	clrf	__pbssBANK0& (0+127)
  1096  0061  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1097                           
  1098                           ; Clear objects allocated to BANK1
  1099  0062  30A0               	movlw	low __pbssBANK1
  1100  0063  0084               	movwf	4
  1101  0064  3000               	movlw	high __pbssBANK1
  1102  0065  0085               	movwf	5
  1103  0066  3033               	movlw	51
  1104  0067  318C  2403  3180   	fcall	clear_ram0
  1105                           
  1106                           ; Clear objects allocated to BANK2
  1107  006A  3020               	movlw	low __pbssBANK2
  1108  006B  0084               	movwf	4
  1109  006C  3001               	movlw	high __pbssBANK2
  1110  006D  0085               	movwf	5
  1111  006E  3014               	movlw	20
  1112  006F  318C  2403  3180   	fcall	clear_ram0
  1113                           
  1114                           ; Clear objects allocated to BANK3
  1115  0072  30A0               	movlw	low __pbssBANK3
  1116  0073  0084               	movwf	4
  1117  0074  3001               	movlw	high __pbssBANK3
  1118  0075  0085               	movwf	5
  1119  0076  3040               	movlw	64
  1120  0077  318C  2403  3180   	fcall	clear_ram0
  1121                           
  1122                           ; Initialize objects allocated to BANK2
  1123  007A  30F0               	movlw	low __pidataBANK2
  1124  007B  0084               	movwf	4
  1125  007C  3087               	movlw	(high __pidataBANK2)| (0+128)
  1126  007D  0085               	movwf	5
  1127  007E  3034               	movlw	low __pdataBANK2
  1128  007F  0086               	movwf	6
  1129  0080  3001               	movlw	high __pdataBANK2
  1130  0081  0087               	movwf	7
  1131  0082  3010               	movlw	16
  1132  0083  318B  23FD         	fcall	init_ram
  1133  0085                     end_of_initialization:	
  1134                           ;End of C runtime variable initialization code
  1135                           
  1136  0085                     __end_of__initialization:	
  1137  0085  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1138  0086  0020               	movlb	0
  1139  0087  3186  2EE4         	ljmp	_main	;jump to C main() function
  1140                           
  1141                           	psect	bssCOMMON
  1142  0079                     __pbssCOMMON:	
  1143  0079                     _modem_packet_size:	
  1144  0079                     	ds	4
  1145  007D                     _phase:	
  1146  007D                     	ds	1
  1147                           
  1148                           	psect	bssBANK0
  1149  006E                     __pbssBANK0:	
  1150  006E                     _Change_to_New_Baud:	
  1151  006E                     	ds	1
  1152  006F                     _current_byte:	
  1153  006F                     	ds	1
  1154                           
  1155                           	psect	bssBANK1
  1156  00A0                     __pbssBANK1:	
  1157  00A0                     _adf_config:	
  1158  00A0                     	ds	39
  1159  00C7                     _crc:	
  1160  00C7                     	ds	2
  1161  00C9                     _ones_in_a_row:	
  1162  00C9                     	ds	2
  1163  00CB                     Sinus_Generator@tone_index:	
  1164  00CB                     	ds	1
  1165  00CC                     _MODEM_TRANSMITTING:	
  1166  00CC                     	ds	1
  1167  00CD                     _PTT_OFF:	
  1168  00CD                     	ds	1
  1169  00CE                     _SAMPLES_PER_BAUD:	
  1170  00CE                     	ds	1
  1171  00CF                     _adc__high:	
  1172  00CF                     	ds	1
  1173  00D0                     _adc__low:	
  1174  00D0                     	ds	1
  1175  00D1                     _current_sample_in_baud:	
  1176  00D1                     	ds	1
  1177  00D2                     _phase_delta:	
  1178  00D2                     	ds	1
  1179                           
  1180                           	psect	bssBANK2
  1181  0120                     __pbssBANK2:	
  1182  0120                     Reverse_Array@F3148:	
  1183  0120                     	ds	4
  1184  0124                     _PHASE_DELTA_1200:	
  1185  0124                     	ds	4
  1186  0128                     _PHASE_DELTA_2200:	
  1187  0128                     	ds	4
  1188  012C                     _Systick_Counter:	
  1189  012C                     	ds	4
  1190  0130                     _packet_pos:	
  1191  0130                     	ds	4
  1192                           
  1193                           	psect	dataBANK2
  1194  0134                     __pdataBANK2:	
  1195  0134                     main@F3169:	
  1196  0134                     	ds	16
  1197                           
  1198                           	psect	bssBANK3
  1199  01A0                     __pbssBANK3:	
  1200  01A0                     _modem_packet:	
  1201  01A0                     	ds	64
  1202                           
  1203                           	psect	clrtext
  1204  0C03                     clear_ram0:	
  1205                           ;	Called with FSR0 containing the base address, and
  1206                           ;	WREG with the size to clear
  1207                           
  1208  0C03  0064               	clrwdt	;clear the watchdog before getting into this loop
  1209  0C04                     clrloop0:	
  1210  0C04  0180               	clrf	0	;clear RAM location pointed to by FSR
  1211  0C05  3101               	addfsr 0,1
  1212  0C06  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1213  0C07  2C04               	goto	clrloop0	;have we reached the end yet?
  1214  0C08  3400               	retlw	0	;all done for this memory range, return
  1215                           
  1216                           	psect	inittext
  1217  0BFD                     init_ram:	
  1218  0BFD  00FE               	movwf	126
  1219  0BFE                     initloop:	
  1220  0BFE  0012               	moviw fsr0++
  1221  0BFF  001E               	movwi fsr1++
  1222  0C00  0BFE               	decfsz	126,f
  1223  0C01  2BFE               	goto	initloop
  1224  0C02  3400               	retlw	0
  1225                           
  1226                           	psect	cstackBANK1
  1227  00D3                     __pcstackBANK1:	
  1228  00D3                     Adf_Write_Register_Three@reg_ptr:	
  1229                           
  1230                           ; 4 bytes @ 0x0
  1231  00D3                     	ds	4
  1232  00D7                     Adf_Write_Register_Three@reg:	
  1233                           
  1234                           ; 4 bytes @ 0x4
  1235  00D7                     	ds	4
  1236  00DB                     Adf_Lock@adj:	
  1237                           
  1238                           ; 2 bytes @ 0x8
  1239  00DB                     	ds	2
  1240  00DD                     Adf_Lock@bias:	
  1241                           
  1242                           ; 2 bytes @ 0xA
  1243  00DD                     	ds	2
  1244  00DF                     main@beacon_address:	
  1245                           
  1246                           ; 16 bytes @ 0xC
  1247  00DF                     	ds	16
  1248                           
  1249                           	psect	cstackCOMMON
  1250  0070                     __pcstackCOMMON:	
  1251  0070                     ?_Sinus_Generator:	
  1252  0070                     ?_Timer1_Start:	
  1253                           ; 0 bytes @ 0x0
  1254                           
  1255  0070                     ?_Dac0_Start_Hold:	
  1256                           ; 0 bytes @ 0x0
  1257                           
  1258  0070                     ?_Adc1_Start:	
  1259                           ; 0 bytes @ 0x0
  1260                           
  1261  0070                     ?_Ax25_Send_Footer:	
  1262                           ; 0 bytes @ 0x0
  1263                           
  1264  0070                     ?_Modem_Setup:	
  1265                           ; 0 bytes @ 0x0
  1266                           
  1267  0070                     ?_Ptt_Off:	
  1268                           ; 0 bytes @ 0x0
  1269                           
  1270  0070                     ?_Modem_Flush_Frame:	
  1271                           ; 0 bytes @ 0x0
  1272                           
  1273  0070                     ?_Adf_Reset_Register_Zero:	
  1274                           ; 0 bytes @ 0x0
  1275                           
  1276  0070                     ?_Adf_Reset_Register_One:	
  1277                           ; 0 bytes @ 0x0
  1278                           
  1279  0070                     ?_Adf_Reset_Register_Two:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0070                     ?_Adf_Reset_Register_Three:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0070                     ?_Adf_Reset:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0070                     ?_Adf_Write_Register_Zero:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0070                     ?_Adf_Write_Register_One:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0070                     ?_Adf_Write_Register_Two:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0070                     ?_Adf_Write_Register_Three:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0070                     ?_global_interrupt:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0070                     ?_System_Start:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0070                     ??_Send_Vcxo_Signal:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0070                     ?_Timer0_Start:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0070                     ?_Timer0_Stop:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0070                     ??_Timer0_Stop:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0070                     ?_Adf_Reset_Config:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0070                     ?_Adf_Write_Config:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0070                     ?_Radio_Setup:	
  1325                           ; 0 bytes @ 0x0
  1326                           
  1327  0070                     ?_Configure_Audio:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0070                     ?_Update_Crc:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0070                     ?_Send_Byte:	
  1334                           ; 0 bytes @ 0x0
  1335                           
  1336  0070                     ?_Ax25_Send_Byte:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0070                     ?_Ax25_Send_Sync:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0070                     ?_Ax25_Send_Flag:	
  1343                           ; 0 bytes @ 0x0
  1344                           
  1345  0070                     ?_Gpio_Config:	
  1346                           ; 0 bytes @ 0x0
  1347                           
  1348  0070                     ?_Adf_Lock:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_Spi_Byte_Send:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_Adf_Locked:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_Read_Adf7012_Muxout:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_Send_Vcxo_Signal:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_Ptt_On:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_main:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     Send_Vcxo_Signal@value:	
  1370                           ; 2 bytes @ 0x0
  1371                           
  1372                           
  1373                           ; 1 bytes @ 0x0
  1374  0070                     	ds	1
  1375  0071                     ??_Sinus_Generator:	
  1376                           
  1377                           ; 0 bytes @ 0x1
  1378  0071                     	ds	5
  1379  0076                     Sinus_Generator@Audio_Signal:	
  1380                           
  1381                           ; 1 bytes @ 0x6
  1382  0076                     	ds	1
  1383  0077                     ??_global_interrupt:	
  1384                           
  1385                           ; 0 bytes @ 0x7
  1386  0077                     	ds	2
  1387                           
  1388                           	psect	cstackBANK0
  1389  0020                     __pcstackBANK0:	
  1390  0020                     ??_Gpio_Config:	
  1391  0020                     ??_Timer1_Start:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0020                     ??_Dac0_Start_Hold:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0020                     ??_Adc1_Start:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0020                     ?_Delay_ms:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403  0020                     ??_Adf_Reset_Register_Zero:	
  1404                           ; 0 bytes @ 0x0
  1405                           
  1406  0020                     ??_Adf_Reset_Register_One:	
  1407                           ; 0 bytes @ 0x0
  1408                           
  1409  0020                     ??_Adf_Reset_Register_Two:	
  1410                           ; 0 bytes @ 0x0
  1411                           
  1412  0020                     ??_Adf_Reset_Register_Three:	
  1413                           ; 0 bytes @ 0x0
  1414                           
  1415  0020                     ??_Adf_Locked:	
  1416                           ; 0 bytes @ 0x0
  1417                           
  1418  0020                     ??_System_Start:	
  1419                           ; 0 bytes @ 0x0
  1420                           
  1421  0020                     ??_Read_Adf7012_Muxout:	
  1422                           ; 0 bytes @ 0x0
  1423                           
  1424  0020                     ??_Timer0_Start:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0020                     ??_Configure_Audio:	
  1428                           ; 0 bytes @ 0x0
  1429                           
  1430  0020                     ??_Update_Crc:	
  1431                           ; 0 bytes @ 0x0
  1432                           
  1433  0020                     ??_Ax25_Send_Sync:	
  1434                           ; 0 bytes @ 0x0
  1435                           
  1436  0020                     ??_Ax25_Send_Flag:	
  1437                           ; 0 bytes @ 0x0
  1438                           
  1439  0020                     ?_memcpy:	
  1440                           ; 0 bytes @ 0x0
  1441                           
  1442  0020                     memcpy@s1:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0020                     Delay_ms@time_to_delay:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448                           
  1449                           ; 2 bytes @ 0x0
  1450  0020                     	ds	1
  1451  0021                     memcpy@n:	
  1452                           
  1453                           ; 2 bytes @ 0x1
  1454  0021                     	ds	1
  1455  0022                     ??_Delay_ms:	
  1456  0022                     Update_Crc@input_bit:	
  1457                           ; 0 bytes @ 0x2
  1458                           
  1459                           
  1460                           ; 1 bytes @ 0x2
  1461  0022                     	ds	1
  1462  0023                     ??_memcpy:	
  1463  0023                     ??_Send_Byte:	
  1464                           ; 0 bytes @ 0x3
  1465                           
  1466                           
  1467                           ; 0 bytes @ 0x3
  1468  0023                     	ds	1
  1469  0024                     memcpy@d:	
  1470  0024                     Delay_ms@i:	
  1471                           ; 1 bytes @ 0x4
  1472                           
  1473                           
  1474                           ; 2 bytes @ 0x4
  1475  0024                     	ds	1
  1476  0025                     memcpy@s:	
  1477                           
  1478                           ; 1 bytes @ 0x5
  1479  0025                     	ds	1
  1480  0026                     ??_Spi_Byte_Send:	
  1481  0026                     ??_Adf_Reset:	
  1482                           ; 0 bytes @ 0x6
  1483                           
  1484  0026                     ??_Adf_Reset_Config:	
  1485                           ; 0 bytes @ 0x6
  1486                           
  1487  0026                     Ax25_Send_Sync@byte:	
  1488                           ; 0 bytes @ 0x6
  1489                           
  1490  0026                     Ax25_Send_Flag@byte:	
  1491                           ; 1 bytes @ 0x6
  1492                           
  1493  0026                     memcpy@d1:	
  1494                           ; 1 bytes @ 0x6
  1495                           
  1496                           
  1497                           ; 1 bytes @ 0x6
  1498  0026                     	ds	1
  1499  0027                     ?_Reverse_Array:	
  1500  0027                     Reverse_Array@length:	
  1501                           ; 1 bytes @ 0x7
  1502                           
  1503  0027                     Spi_Byte_Send@data:	
  1504                           ; 1 bytes @ 0x7
  1505                           
  1506  0027                     Ax25_Send_Sync@i:	
  1507                           ; 1 bytes @ 0x7
  1508                           
  1509  0027                     Ax25_Send_Flag@i:	
  1510                           ; 2 bytes @ 0x7
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0x7
  1514  0027                     	ds	1
  1515  0028                     ??_Reverse_Array:	
  1516  0028                     Spi_Byte_Send@data_to_send:	
  1517                           ; 0 bytes @ 0x8
  1518                           
  1519                           
  1520                           ; 1 bytes @ 0x8
  1521  0028                     	ds	1
  1522  0029                     Spi_Byte_Send@i:	
  1523  0029                     Send_Byte@byte:	
  1524                           ; 1 bytes @ 0x9
  1525                           
  1526                           
  1527                           ; 1 bytes @ 0x9
  1528  0029                     	ds	1
  1529  002A                     ?_Write_Adf7012_Reg:	
  1530  002A                     Write_Adf7012_Reg@size_of_reg:	
  1531                           ; 1 bytes @ 0xA
  1532                           
  1533  002A                     Send_Byte@i:	
  1534                           ; 1 bytes @ 0xA
  1535                           
  1536                           
  1537                           ; 2 bytes @ 0xA
  1538  002A                     	ds	1
  1539  002B                     ??_Write_Adf7012_Reg:	
  1540                           
  1541                           ; 0 bytes @ 0xB
  1542  002B                     	ds	1
  1543  002C                     ?_Ax25_Send_Header:	
  1544  002C                     ??_Ax25_Send_Footer:	
  1545                           ; 0 bytes @ 0xC
  1546                           
  1547  002C                     ??_Ax25_Send_Byte:	
  1548                           ; 0 bytes @ 0xC
  1549                           
  1550  002C                     Write_Adf7012_Reg@reg_value:	
  1551                           ; 0 bytes @ 0xC
  1552                           
  1553  002C                     Ax25_Send_Byte@byte:	
  1554                           ; 1 bytes @ 0xC
  1555                           
  1556  002C                     Ax25_Send_Header@num_addresses:	
  1557                           ; 1 bytes @ 0xC
  1558                           
  1559  002C                     Ax25_Send_Footer@final_crc:	
  1560                           ; 2 bytes @ 0xC
  1561                           
  1562                           
  1563                           ; 2 bytes @ 0xC
  1564  002C                     	ds	1
  1565  002D                     ?_Ax25_Send_String:	
  1566  002D                     Write_Adf7012_Reg@i:	
  1567                           ; 0 bytes @ 0xD
  1568                           
  1569  002D                     Ax25_Send_String@string:	
  1570                           ; 1 bytes @ 0xD
  1571                           
  1572  002D                     Reverse_Array@buffer_array:	
  1573                           ; 2 bytes @ 0xD
  1574                           
  1575                           
  1576                           ; 4 bytes @ 0xD
  1577  002D                     	ds	1
  1578  002E                     ??_Ax25_Send_Header:	
  1579                           
  1580                           ; 0 bytes @ 0xE
  1581  002E                     	ds	1
  1582  002F                     ??_Ax25_Send_String:	
  1583  002F                     Ax25_Send_String@i:	
  1584                           ; 0 bytes @ 0xF
  1585                           
  1586                           
  1587                           ; 2 bytes @ 0xF
  1588  002F                     	ds	2
  1589  0031                     Reverse_Array@input:	
  1590  0031                     Ax25_Send_Header@j:	
  1591                           ; 1 bytes @ 0x11
  1592                           
  1593                           
  1594                           ; 2 bytes @ 0x11
  1595  0031                     	ds	1
  1596  0032                     Reverse_Array@i:	
  1597                           
  1598                           ; 1 bytes @ 0x12
  1599  0032                     	ds	1
  1600  0033                     ??_Adf_Write_Register_Zero:	
  1601  0033                     ??_Adf_Write_Register_One:	
  1602                           ; 0 bytes @ 0x13
  1603                           
  1604  0033                     ??_Adf_Write_Register_Two:	
  1605                           ; 0 bytes @ 0x13
  1606                           
  1607  0033                     ??_Adf_Write_Register_Three:	
  1608                           ; 0 bytes @ 0x13
  1609                           
  1610  0033                     Ax25_Send_Header@addresses:	
  1611                           ; 0 bytes @ 0x13
  1612                           
  1613                           
  1614                           ; 1 bytes @ 0x13
  1615  0033                     	ds	1
  1616  0034                     Ax25_Send_Header@i:	
  1617                           
  1618                           ; 2 bytes @ 0x14
  1619  0034                     	ds	11
  1620  003F                     Adf_Write_Register_One@reg:	
  1621                           
  1622                           ; 4 bytes @ 0x1F
  1623  003F                     	ds	4
  1624  0043                     Adf_Write_Register_One@reg_ptr:	
  1625                           
  1626                           ; 3 bytes @ 0x23
  1627  0043                     	ds	8
  1628  004B                     Adf_Write_Register_Two@reg_ptr:	
  1629                           
  1630                           ; 4 bytes @ 0x2B
  1631  004B                     	ds	4
  1632  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1633  004F                     Adf_Write_Register_Two@reg:	
  1634                           ; 4 bytes @ 0x2F
  1635                           
  1636                           
  1637                           ; 4 bytes @ 0x2F
  1638  004F                     	ds	4
  1639  0053                     Adf_Write_Register_Zero@reg:	
  1640                           
  1641                           ; 4 bytes @ 0x33
  1642  0053                     	ds	24
  1643  006B                     ??_Modem_Setup:	
  1644  006B                     ??_Adf_Lock:	
  1645                           ; 0 bytes @ 0x4B
  1646                           
  1647  006B                     ??_Ptt_Off:	
  1648                           ; 0 bytes @ 0x4B
  1649                           
  1650  006B                     ??_Adf_Write_Config:	
  1651                           ; 0 bytes @ 0x4B
  1652                           
  1653  006B                     ??_Radio_Setup:	
  1654                           ; 0 bytes @ 0x4B
  1655                           
  1656  006B                     ??_Ptt_On:	
  1657                           ; 0 bytes @ 0x4B
  1658                           
  1659                           
  1660                           ; 0 bytes @ 0x4B
  1661  006B                     	ds	1
  1662  006C                     ??_Modem_Flush_Frame:	
  1663                           
  1664                           ; 0 bytes @ 0x4C
  1665  006C                     	ds	1
  1666  006D                     ??_main:	
  1667                           
  1668                           ; 0 bytes @ 0x4D
  1669  006D                     	ds	1
  1670                           
  1671                           	psect	maintext
  1672  06E4                     __pmaintext:	
  1673 ;;
  1674 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1675 ;;
  1676 ;; *************** function _main *****************
  1677 ;; Defined at:
  1678 ;;		line 168 in file "main.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2  138[COMMON] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 17F/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;Total ram usage:       17 bytes
  1697 ;; Hardware stack levels required when called:   11
  1698 ;; This function calls:
  1699 ;;		_Adc1_Start
  1700 ;;		_Adf_Lock
  1701 ;;		_Ax25_Send_Footer
  1702 ;;		_Ax25_Send_Header
  1703 ;;		_Ax25_Send_String
  1704 ;;		_Dac0_Start_Hold
  1705 ;;		_Delay_ms
  1706 ;;		_Gpio_Config
  1707 ;;		_Modem_Flush_Frame
  1708 ;;		_Modem_Setup
  1709 ;;		_Ptt_Off
  1710 ;;		_System_Start
  1711 ;;		_Timer1_Start
  1712 ;; This function is called by:
  1713 ;;		Startup code after reset
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function _main
  1719  06E4                     _main:	
  1720                           
  1721                           ;main.c: 169: System_Start();
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1725  06E4  318E  2624  3186   	fcall	_System_Start
  1726  06E7                     l139:	
  1727                           ;main.c: 170: while (!(OSCSTAT & (0x01))){}
  1728                           
  1729  06E7  0021               	movlb	1	; select bank1
  1730  06E8  1C1A               	btfss	26,0	;volatile
  1731  06E9  2EE7               	goto	l139
  1732                           
  1733                           ;main.c: 173: Gpio_Config();
  1734  06EA  318C  247E  3186   	fcall	_Gpio_Config
  1735                           
  1736                           ;main.c: 175: Timer1_Start();
  1737  06ED  318C  2439  3186   	fcall	_Timer1_Start
  1738                           
  1739                           ;main.c: 177: Dac0_Start_Hold();
  1740  06F0  318B  23E1  3186   	fcall	_Dac0_Start_Hold
  1741                           
  1742                           ;main.c: 179: Adc1_Start();
  1743  06F3  318B  23EB  3186   	fcall	_Adc1_Start
  1744                           
  1745                           ;main.c: 181: PORTAbits.RA5 = 0;;
  1746  06F6  0020               	movlb	0	; select bank0
  1747  06F7  128C               	bcf	12,5	;volatile
  1748                           
  1749                           ;main.c: 182: Delay_ms(10);
  1750  06F8  300A               	movlw	10
  1751  06F9  00A0               	movwf	Delay_ms@time_to_delay
  1752  06FA  3000               	movlw	0
  1753  06FB  00A1               	movwf	Delay_ms@time_to_delay+1
  1754  06FC  318D  251A  3186   	fcall	_Delay_ms
  1755                           
  1756                           ;main.c: 183: PORTAbits.RA4 = 1;;
  1757  06FF  0020               	movlb	0	; select bank0
  1758  0700  160C               	bsf	12,4	;volatile
  1759                           
  1760                           ;main.c: 184: Delay_ms(10);
  1761  0701  300A               	movlw	10
  1762  0702  00A0               	movwf	Delay_ms@time_to_delay
  1763  0703  3000               	movlw	0
  1764  0704  00A1               	movwf	Delay_ms@time_to_delay+1
  1765  0705  318D  251A  3186   	fcall	_Delay_ms
  1766                           
  1767                           ;main.c: 185: PORTAbits.RA5 = 1;;
  1768  0708  0020               	movlb	0	; select bank0
  1769  0709  168C               	bsf	12,5	;volatile
  1770                           
  1771                           ;main.c: 186: Delay_ms(10);
  1772  070A  300A               	movlw	10
  1773  070B  00A0               	movwf	Delay_ms@time_to_delay
  1774  070C  3000               	movlw	0
  1775  070D  00A1               	movwf	Delay_ms@time_to_delay+1
  1776  070E  318D  251A  3186   	fcall	_Delay_ms
  1777                           
  1778                           ;main.c: 188: Delay_ms(200);
  1779  0711  30C8               	movlw	200
  1780  0712  0020               	movlb	0	; select bank0
  1781  0713  00A0               	movwf	Delay_ms@time_to_delay
  1782  0714  3000               	movlw	0
  1783  0715  00A1               	movwf	Delay_ms@time_to_delay+1
  1784  0716  318D  251A  3186   	fcall	_Delay_ms
  1785                           
  1786                           ;main.c: 191: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1787  0719  3034               	movlw	low main@F3169
  1788  071A  0086               	movwf	6
  1789  071B  3001               	movlw	high main@F3169
  1790  071C  0087               	movwf	7
  1791  071D  30DF               	movlw	low main@beacon_address
  1792  071E  0084               	movwf	4
  1793  071F  3000               	movlw	high main@beacon_address
  1794  0720  0085               	movwf	5
  1795  0721  3010               	movlw	16
  1796  0722  0020               	movlb	0	; select bank0
  1797  0723  00ED               	movwf	??_main
  1798  0724                     u2410:	
  1799  0724  0016               	moviw fsr1++
  1800  0725  001A               	movwi fsr0++
  1801  0726  0BED               	decfsz	??_main,f
  1802  0727  2F24               	goto	u2410
  1803                           
  1804                           ;main.c: 193: Ax25_Send_Header(beacon_address,2);
  1805  0728  3002               	movlw	2
  1806  0729  00AC               	movwf	Ax25_Send_Header@num_addresses
  1807  072A  3000               	movlw	0
  1808  072B  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  1809  072C  30DF               	movlw	main@beacon_address& (0+255)
  1810  072D  3181  21F5  3186   	fcall	_Ax25_Send_Header
  1811                           
  1812                           ;main.c: 194: Ax25_Send_String("HELLO");
  1813  0730  30BE               	movlw	low (STR_1| (0+32768))
  1814  0731  0020               	movlb	0	; select bank0
  1815  0732  00AD               	movwf	Ax25_Send_String@string
  1816  0733  3084               	movlw	high (STR_1| (0+32768))
  1817  0734  00AE               	movwf	Ax25_Send_String@string+1
  1818  0735  318C  24DE  3186   	fcall	_Ax25_Send_String
  1819                           
  1820                           ;main.c: 195: Ax25_Send_Footer();
  1821  0738  318C  24C3  3186   	fcall	_Ax25_Send_Footer
  1822                           
  1823                           ;main.c: 197: Modem_Setup();
  1824  073B  318B  23F7  3186   	fcall	_Modem_Setup
  1825                           
  1826                           ;main.c: 198: PORTCbits.RC3 = 1;;
  1827  073E  0020               	movlb	0	; select bank0
  1828  073F  158E               	bsf	14,3	;volatile
  1829                           
  1830                           ;main.c: 199: Delay_ms(100);
  1831  0740  3064               	movlw	100
  1832  0741  00A0               	movwf	Delay_ms@time_to_delay
  1833  0742  3000               	movlw	0
  1834  0743  00A1               	movwf	Delay_ms@time_to_delay+1
  1835  0744  318D  251A  3186   	fcall	_Delay_ms
  1836                           
  1837                           ;main.c: 200: Adf_Lock();
  1838  0747  318F  2785  3186   	fcall	_Adf_Lock
  1839                           
  1840                           ;main.c: 201: Delay_ms(100);
  1841  074A  3064               	movlw	100
  1842  074B  0020               	movlb	0	; select bank0
  1843  074C  00A0               	movwf	Delay_ms@time_to_delay
  1844  074D  3000               	movlw	0
  1845  074E  00A1               	movwf	Delay_ms@time_to_delay+1
  1846  074F  318D  251A  3186   	fcall	_Delay_ms
  1847  0752                     l2465:	
  1848                           ;main.c: 204: while(1){
  1849                           
  1850                           
  1851                           ;main.c: 205: if(PTT_OFF){
  1852  0752  0021               	movlb	1	; select bank1
  1853  0753  084D               	movf	_PTT_OFF^(0+128),w
  1854  0754  1903               	btfsc	3,2
  1855  0755  2F5B               	goto	l2471
  1856                           
  1857                           ;main.c: 206: Ptt_Off();
  1858  0756  318C  246B  3186   	fcall	_Ptt_Off
  1859                           
  1860                           ;main.c: 207: PTT_OFF = 0;
  1861  0759  0021               	movlb	1	; select bank1
  1862  075A  01CD               	clrf	_PTT_OFF^(0+128)
  1863  075B                     l2471:	
  1864                           
  1865                           ;main.c: 208: }
  1866                           ;main.c: 209: Delay_ms(2000);
  1867  075B  30D0               	movlw	208
  1868  075C  0020               	movlb	0	; select bank0
  1869  075D  00A0               	movwf	Delay_ms@time_to_delay
  1870  075E  3007               	movlw	7
  1871  075F  00A1               	movwf	Delay_ms@time_to_delay+1
  1872  0760  318D  251A  3186   	fcall	_Delay_ms
  1873                           
  1874                           ;main.c: 211: Modem_Flush_Frame();
  1875  0763  318D  258D  3186   	fcall	_Modem_Flush_Frame
  1876  0766                     l2475:	
  1877                           ;main.c: 212: while(MODEM_TRANSMITTING);
  1878                           
  1879  0766  0021               	movlb	1	; select bank1
  1880  0767  08CC               	movf	_MODEM_TRANSMITTING^(0+128),f
  1881  0768  1D03               	skipz
  1882  0769  2F66               	goto	l2475
  1883                           
  1884                           ;main.c: 213: Delay_ms(2000);
  1885  076A  30D0               	movlw	208
  1886  076B  0020               	movlb	0	; select bank0
  1887  076C  00A0               	movwf	Delay_ms@time_to_delay
  1888  076D  3007               	movlw	7
  1889  076E  00A1               	movwf	Delay_ms@time_to_delay+1
  1890  076F  318D  251A  3186   	fcall	_Delay_ms
  1891  0772  0064               	clrwdt	;# 
  1892  0773  2F52               	goto	l2465
  1893  0774                     __end_of_main:	
  1894                           ;main.c: 226: }
  1895                           ;main.c: 227: return (0);
  1896                           ;	Return value of _main is never used
  1897                           
  1898                           
  1899                           	psect	text1
  1900  0C39                     __ptext1:	
  1901 ;; *************** function _Timer1_Start *****************
  1902 ;; Defined at:
  1903 ;;		line 254 in file "utility.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;		None               void
  1910 ;; Registers used:
  1911 ;;		wreg, status,2
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1921 ;;Total ram usage:        0 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    3
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_main
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function _Timer1_Start
  1933  0C39                     _Timer1_Start:	
  1934                           
  1935                           ;utility.c: 255: TMR1H = 0x00;
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _Timer1_Start: [wreg+status,2]
  1939  0C39  0020               	movlb	0	; select bank0
  1940  0C3A  0197               	clrf	23	;volatile
  1941                           
  1942                           ;utility.c: 256: TMR1L = 0x00;
  1943  0C3B  0196               	clrf	22	;volatile
  1944                           
  1945                           ;utility.c: 258: TMR1IE = 0;
  1946  0C3C  0021               	movlb	1	; select bank1
  1947  0C3D  1011               	bcf	17,0	;volatile
  1948                           
  1949                           ;utility.c: 261: CCPR1H = 0x03;
  1950  0C3E  3003               	movlw	3
  1951  0C3F  0025               	movlb	5	; select bank5
  1952  0C40  0092               	movwf	18	;volatile
  1953                           
  1954                           ;utility.c: 262: CCPR1L = 0x41;
  1955  0C41  3041               	movlw	65
  1956  0C42  0091               	movwf	17	;volatile
  1957                           
  1958                           ;utility.c: 264: CCP1IF = 0;
  1959  0C43  0020               	movlb	0	; select bank0
  1960  0C44  1111               	bcf	17,2	;volatile
  1961                           
  1962                           ;utility.c: 265: CCP1IE = 1;
  1963  0C45  0021               	movlb	1	; select bank1
  1964  0C46  1511               	bsf	17,2	;volatile
  1965  0C47  0008               	return
  1966  0C48                     __end_of_Timer1_Start:	
  1967                           
  1968                           	psect	text2
  1969  0E24                     __ptext2:	
  1970 ;; *************** function _System_Start *****************
  1971 ;; Defined at:
  1972 ;;		line 97 in file "main.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;		None               void
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1988 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1989 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1990 ;;Total ram usage:        1 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    3
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_main
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           
  2001                           ;psect for function _System_Start
  2002  0E24                     _System_Start:	
  2003                           
  2004                           ;main.c: 100: WDTPS4 = 1;
  2005                           
  2006                           ;incstack = 0
  2007                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2008  0E24  0021               	movlb	1	; select bank1
  2009  0E25  1697               	bsf	23,5	;volatile
  2010                           
  2011                           ;main.c: 101: WDTPS3 = 0;
  2012  0E26  1217               	bcf	23,4	;volatile
  2013                           
  2014                           ;main.c: 102: WDTPS2 = 0;
  2015  0E27  1197               	bcf	23,3	;volatile
  2016                           
  2017                           ;main.c: 103: WDTPS1 = 0;
  2018  0E28  1117               	bcf	23,2	;volatile
  2019                           
  2020                           ;main.c: 104: WDTPS0 = 1;
  2021  0E29  1497               	bsf	23,1	;volatile
  2022                           
  2023                           ;main.c: 108: OSCCON = 0x00;
  2024  0E2A  0199               	clrf	25	;volatile
  2025                           
  2026                           ;main.c: 109: OSCCON |= 0b11110000;
  2027  0E2B  30F0               	movlw	240
  2028  0E2C  0020               	movlb	0	; select bank0
  2029  0E2D  00A0               	movwf	??_System_Start
  2030  0E2E  0820               	movf	??_System_Start,w
  2031  0E2F  0021               	movlb	1	; select bank1
  2032  0E30  0499               	iorwf	25,f	;volatile
  2033                           
  2034                           ;main.c: 110: OSCTUNE = 0x00;
  2035  0E31  0198               	clrf	24	;volatile
  2036                           
  2037                           ;main.c: 114: TMR0CS = 0;
  2038  0E32  1295               	bcf	21,5	;volatile
  2039                           
  2040                           ;main.c: 115: PSA = 1;
  2041  0E33  1595               	bsf	21,3	;volatile
  2042                           
  2043                           ;main.c: 119: TMR1ON = 1;
  2044  0E34  0020               	movlb	0	; select bank0
  2045  0E35  1418               	bsf	24,0	;volatile
  2046                           
  2047                           ;main.c: 120: TMR1GE = 0;
  2048  0E36  1399               	bcf	25,7	;volatile
  2049                           
  2050                           ;main.c: 122: TMR1CS1 = 0;
  2051  0E37  1398               	bcf	24,7	;volatile
  2052                           
  2053                           ;main.c: 123: TMR1CS0 = 0;
  2054  0E38  1318               	bcf	24,6	;volatile
  2055                           
  2056                           ;main.c: 125: T1CKPS1 = 1;
  2057  0E39  1698               	bsf	24,5	;volatile
  2058                           
  2059                           ;main.c: 126: T1CKPS0 = 1;
  2060  0E3A  1618               	bsf	24,4	;volatile
  2061                           
  2062                           ;main.c: 128: CCP1M3 = 1;
  2063  0E3B  0025               	movlb	5	; select bank5
  2064  0E3C  1593               	bsf	19,3	;volatile
  2065                           
  2066                           ;main.c: 129: CCP1M2 = 0;
  2067  0E3D  1113               	bcf	19,2	;volatile
  2068                           
  2069                           ;main.c: 130: CCP1M1 = 1;
  2070  0E3E  1493               	bsf	19,1	;volatile
  2071                           
  2072                           ;main.c: 131: CCP1M1 = 0;
  2073  0E3F  1093               	bcf	19,1	;volatile
  2074                           
  2075                           ;main.c: 135: DACOE = 1;
  2076  0E40  0022               	movlb	2	; select bank2
  2077  0E41  1698               	bsf	24,5	;volatile
  2078                           
  2079                           ;main.c: 136: DACPSS1 = 0;
  2080  0E42  1198               	bcf	24,3	;volatile
  2081                           
  2082                           ;main.c: 137: DACPSS0 = 0;
  2083  0E43  1118               	bcf	24,2	;volatile
  2084                           
  2085                           ;main.c: 138: DACNSS = 0;
  2086  0E44  1018               	bcf	24,0	;volatile
  2087                           
  2088                           ;main.c: 143: ANSA1 = 1;
  2089  0E45  0023               	movlb	3	; select bank3
  2090  0E46  148C               	bsf	12,1	;volatile
  2091                           
  2092                           ;main.c: 144: ADCON0 &= 0b10000011;
  2093  0E47  3083               	movlw	131
  2094  0E48  0020               	movlb	0	; select bank0
  2095  0E49  00A0               	movwf	??_System_Start
  2096  0E4A  0820               	movf	??_System_Start,w
  2097  0E4B  0021               	movlb	1	; select bank1
  2098  0E4C  059D               	andwf	29,f	;volatile
  2099                           
  2100                           ;main.c: 145: ADCON0 |= 0b00000100;
  2101  0E4D  151D               	bsf	29,2	;volatile
  2102                           
  2103                           ;main.c: 146: ADNREF = 0;
  2104  0E4E  111E               	bcf	30,2	;volatile
  2105                           
  2106                           ;main.c: 147: ADPREF1 = 0;
  2107  0E4F  109E               	bcf	30,1	;volatile
  2108                           
  2109                           ;main.c: 148: ADPREF0 = 0;
  2110  0E50  101E               	bcf	30,0	;volatile
  2111                           
  2112                           ;main.c: 149: ADCS2 = 1;
  2113  0E51  171E               	bsf	30,6	;volatile
  2114                           
  2115                           ;main.c: 150: ADCS1 = 1;
  2116  0E52  169E               	bsf	30,5	;volatile
  2117                           
  2118                           ;main.c: 151: ADCS0 = 0;
  2119  0E53  121E               	bcf	30,4	;volatile
  2120                           
  2121                           ;main.c: 152: ADFM = 1;
  2122  0E54  179E               	bsf	30,7	;volatile
  2123                           
  2124                           ;main.c: 157: TMR0IF = 0;
  2125  0E55  110B               	bcf	11,2	;volatile
  2126                           
  2127                           ;main.c: 158: TMR1IF = 0;
  2128  0E56  0020               	movlb	0	; select bank0
  2129  0E57  1011               	bcf	17,0	;volatile
  2130                           
  2131                           ;main.c: 159: CCP1IF = 0;
  2132  0E58  1111               	bcf	17,2	;volatile
  2133                           
  2134                           ;main.c: 160: ADIF = 0;
  2135  0E59  1311               	bcf	17,6	;volatile
  2136                           
  2137                           ;main.c: 164: INTCON |= 0xC0;
  2138  0E5A  30C0               	movlw	192
  2139  0E5B  00A0               	movwf	??_System_Start
  2140  0E5C  0820               	movf	??_System_Start,w
  2141  0E5D  048B               	iorwf	11,f	;volatile
  2142  0E5E  0008               	return
  2143  0E5F                     __end_of_System_Start:	
  2144                           
  2145                           	psect	text3
  2146  0C6B                     __ptext3:	
  2147 ;; *************** function _Ptt_Off *****************
  2148 ;; Defined at:
  2149 ;;		line 352 in file "adf7012.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;		None               void
  2156 ;; Registers used:
  2157 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    8
  2170 ;; This function calls:
  2171 ;;		_Adf_Write_Register_Three
  2172 ;;		_Adf_Write_Register_Two
  2173 ;;		_Delay_ms
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _Ptt_Off
  2181  0C6B                     _Ptt_Off:	
  2182                           
  2183                           ;adf7012.c: 354: PORTCbits.RC3 = 1;;
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2187  0C6B  0020               	movlb	0	; select bank0
  2188  0C6C  158E               	bsf	14,3	;volatile
  2189                           
  2190                           ;adf7012.c: 355: adf_config.r3.pa_enable = 0;
  2191  0C6D  0021               	movlb	1	; select bank1
  2192  0C6E  01BA               	clrf	(_adf_config^(0+128)+26)
  2193                           
  2194                           ;adf7012.c: 356: adf_config.r2.power_amplifier_level = 0;
  2195  0C6F  01B2               	clrf	(_adf_config^(0+128)+18)
  2196                           
  2197                           ;adf7012.c: 359: Adf_Write_Register_Two();
  2198  0C70  3184  24C4  318C   	fcall	_Adf_Write_Register_Two
  2199                           
  2200                           ;adf7012.c: 360: Adf_Write_Register_Three();
  2201  0C73  3180  2089  318C   	fcall	_Adf_Write_Register_Three
  2202                           
  2203                           ;adf7012.c: 362: Delay_ms(10);
  2204  0C76  300A               	movlw	10
  2205  0C77  0020               	movlb	0	; select bank0
  2206  0C78  00A0               	movwf	Delay_ms@time_to_delay
  2207  0C79  3000               	movlw	0
  2208  0C7A  00A1               	movwf	Delay_ms@time_to_delay+1
  2209  0C7B  318D  251A         	fcall	_Delay_ms
  2210  0C7D  0008               	return
  2211  0C7E                     __end_of_Ptt_Off:	
  2212                           
  2213                           	psect	text4
  2214  0BF7                     __ptext4:	
  2215 ;; *************** function _Modem_Setup *****************
  2216 ;; Defined at:
  2217 ;;		line 53 in file "audio_tone.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;		None               void
  2224 ;; Registers used:
  2225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2235 ;;Total ram usage:        0 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:   10
  2238 ;; This function calls:
  2239 ;;		_Configure_Audio
  2240 ;;		_Radio_Setup
  2241 ;; This function is called by:
  2242 ;;		_main
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           
  2247                           ;psect for function _Modem_Setup
  2248  0BF7                     _Modem_Setup:	
  2249                           
  2250                           ;audio_tone.c: 55: Configure_Audio();
  2251                           
  2252                           ;incstack = 0
  2253                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2254  0BF7  318C  2493  318B   	fcall	_Configure_Audio
  2255                           
  2256                           ;audio_tone.c: 56: Radio_Setup();
  2257  0BFA  318C  241C         	fcall	_Radio_Setup
  2258  0BFC  0008               	return
  2259  0BFD                     __end_of_Modem_Setup:	
  2260                           
  2261                           	psect	text5
  2262  0C1C                     __ptext5:	
  2263 ;; *************** function _Radio_Setup *****************
  2264 ;; Defined at:
  2265 ;;		line 305 in file "adf7012.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;		None               void
  2272 ;; Registers used:
  2273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2283 ;;Total ram usage:        0 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    9
  2286 ;; This function calls:
  2287 ;;		_Adf_Reset_Config
  2288 ;;		_Adf_Write_Config
  2289 ;;		_Delay_ms
  2290 ;; This function is called by:
  2291 ;;		_Modem_Setup
  2292 ;; This function uses a non-reentrant model
  2293 ;;
  2294                           
  2295                           
  2296                           ;psect for function _Radio_Setup
  2297  0C1C                     _Radio_Setup:	
  2298                           
  2299                           ;adf7012.c: 308: Adf_Reset_Config();
  2300                           
  2301                           ;incstack = 0
  2302                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2303  0C1C  318C  242A  318C   	fcall	_Adf_Reset_Config
  2304                           
  2305                           ;adf7012.c: 310: Adf_Write_Config();
  2306  0C1F  318C  2410  318C   	fcall	_Adf_Write_Config
  2307                           
  2308                           ;adf7012.c: 312: Delay_ms(10);
  2309  0C22  300A               	movlw	10
  2310  0C23  0020               	movlb	0	; select bank0
  2311  0C24  00A0               	movwf	Delay_ms@time_to_delay
  2312  0C25  3000               	movlw	0
  2313  0C26  00A1               	movwf	Delay_ms@time_to_delay+1
  2314  0C27  318D  251A         	fcall	_Delay_ms
  2315  0C29  0008               	return
  2316  0C2A                     __end_of_Radio_Setup:	
  2317                           
  2318                           	psect	text6
  2319  0C10                     __ptext6:	
  2320 ;; *************** function _Adf_Write_Config *****************
  2321 ;; Defined at:
  2322 ;;		line 150 in file "adf7012.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;		None
  2327 ;; Return value:  Size  Location     Type
  2328 ;;		None               void
  2329 ;; Registers used:
  2330 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;Total ram usage:        0 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    8
  2343 ;; This function calls:
  2344 ;;		_Adf_Write_Register_One
  2345 ;;		_Adf_Write_Register_Three
  2346 ;;		_Adf_Write_Register_Two
  2347 ;;		_Adf_Write_Register_Zero
  2348 ;; This function is called by:
  2349 ;;		_Radio_Setup
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           
  2354                           ;psect for function _Adf_Write_Config
  2355  0C10                     _Adf_Write_Config:	
  2356                           
  2357                           ;adf7012.c: 151: Adf_Write_Register_Zero();
  2358                           
  2359                           ;incstack = 0
  2360                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2361  0C10  3182  22CD  318C   	fcall	_Adf_Write_Register_Zero
  2362                           
  2363                           ;adf7012.c: 152: Adf_Write_Register_One();
  2364  0C13  318E  269B  318C   	fcall	_Adf_Write_Register_One
  2365                           
  2366                           ;adf7012.c: 153: Adf_Write_Register_Two();
  2367  0C16  3184  24C4  318C   	fcall	_Adf_Write_Register_Two
  2368                           
  2369                           ;adf7012.c: 154: Adf_Write_Register_Three();
  2370  0C19  3180  2089         	fcall	_Adf_Write_Register_Three
  2371  0C1B  0008               	return
  2372  0C1C                     __end_of_Adf_Write_Config:	
  2373                           
  2374                           	psect	text7
  2375  0E9B                     __ptext7:	
  2376 ;; *************** function _Adf_Write_Register_One *****************
  2377 ;; Defined at:
  2378 ;;		line 176 in file "adf7012.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;		None
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  reg             4   31[BANK0 ] unsigned long 
  2383 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  2384 ;; Return value:  Size  Location     Type
  2385 ;;		None               void
  2386 ;; Registers used:
  2387 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2394 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2395 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2396 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2397 ;;Total ram usage:       19 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    7
  2400 ;; This function calls:
  2401 ;;		_Reverse_Array
  2402 ;;		_Write_Adf7012_Reg
  2403 ;;		_memcpy
  2404 ;; This function is called by:
  2405 ;;		_Adf_Write_Config
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function _Adf_Write_Register_One
  2411  0E9B                     _Adf_Write_Register_One:	
  2412                           
  2413                           ;adf7012.c: 177: uint32_t reg =
  2414                           ;adf7012.c: 178: (1) |
  2415                           ;adf7012.c: 179: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  2416                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  2417                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  2418                           
  2419                           ;incstack = 0
  2420                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  2421  0E9B  0021               	movlb	1	; select bank1
  2422  0E9C  082F               	movf	(_adf_config^(0+128)+15),w
  2423  0E9D  3901               	andlw	1
  2424  0E9E  0020               	movlb	0	; select bank0
  2425  0E9F  00B3               	movwf	??_Adf_Write_Register_One
  2426  0EA0  01B4               	clrf	??_Adf_Write_Register_One+1
  2427  0EA1  01B5               	clrf	??_Adf_Write_Register_One+2
  2428  0EA2  01B6               	clrf	??_Adf_Write_Register_One+3
  2429  0EA3  3016               	movlw	22
  2430  0EA4                     u1215:	
  2431  0EA4  35B3               	lslf	??_Adf_Write_Register_One,f
  2432  0EA5  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  2433  0EA6  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  2434  0EA7  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  2435  0EA8  0B89               	decfsz	9,f
  2436  0EA9  2EA4               	goto	u1215
  2437  0EAA  0021               	movlb	1	; select bank1
  2438  0EAB  082E               	movf	(_adf_config^(0+128)+14),w
  2439  0EAC  0020               	movlb	0	; select bank0
  2440  0EAD  00B7               	movwf	??_Adf_Write_Register_One+4
  2441  0EAE  01B8               	clrf	??_Adf_Write_Register_One+5
  2442  0EAF  01B9               	clrf	??_Adf_Write_Register_One+6
  2443  0EB0  01BA               	clrf	??_Adf_Write_Register_One+7
  2444  0EB1  300E               	movlw	14
  2445  0EB2                     u1225:	
  2446  0EB2  35B7               	lslf	??_Adf_Write_Register_One+4,f
  2447  0EB3  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  2448  0EB4  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  2449  0EB5  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  2450  0EB6  0B89               	decfsz	9,f
  2451  0EB7  2EB2               	goto	u1225
  2452  0EB8  300A               	movlw	10
  2453  0EB9  3EA0               	addlw	_adf_config& (0+255)
  2454  0EBA  0086               	movwf	6
  2455  0EBB  0187               	clrf	7
  2456  0EBC  30FF               	movlw	255
  2457  0EBD  0501               	andwf	1,w
  2458  0EBE  00BB               	movwf	??_Adf_Write_Register_One+8
  2459  0EBF  3141               	addfsr 1,1
  2460  0EC0  300F               	movlw	15
  2461  0EC1  0501               	andwf	1,w
  2462  0EC2  00BC               	movwf	??_Adf_Write_Register_One+9
  2463  0EC3  3141               	addfsr 1,1
  2464  0EC4  3000               	movlw	0
  2465  0EC5  0501               	andwf	1,w
  2466  0EC6  00BD               	movwf	??_Adf_Write_Register_One+10
  2467  0EC7  3141               	addfsr 1,1
  2468  0EC8  3000               	movlw	0
  2469  0EC9  0501               	andwf	1,w
  2470  0ECA  00BE               	movwf	??_Adf_Write_Register_One+11
  2471  0ECB  3002               	movlw	2
  2472  0ECC                     u1235:	
  2473  0ECC  35BB               	lslf	??_Adf_Write_Register_One+8,f
  2474  0ECD  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  2475  0ECE  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  2476  0ECF  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  2477  0ED0  0B89               	decfsz	9,f
  2478  0ED1  2ECC               	goto	u1235
  2479  0ED2  083B               	movf	??_Adf_Write_Register_One+8,w
  2480  0ED3  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  2481  0ED4  083C               	movf	??_Adf_Write_Register_One+9,w
  2482  0ED5  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  2483  0ED6  083D               	movf	??_Adf_Write_Register_One+10,w
  2484  0ED7  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  2485  0ED8  083E               	movf	??_Adf_Write_Register_One+11,w
  2486  0ED9  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  2487  0EDA  0837               	movf	??_Adf_Write_Register_One+4,w
  2488  0EDB  04B3               	iorwf	??_Adf_Write_Register_One,f
  2489  0EDC  0838               	movf	??_Adf_Write_Register_One+5,w
  2490  0EDD  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  2491  0EDE  0839               	movf	??_Adf_Write_Register_One+6,w
  2492  0EDF  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  2493  0EE0  083A               	movf	??_Adf_Write_Register_One+7,w
  2494  0EE1  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  2495  0EE2  3001               	movlw	1
  2496  0EE3  0433               	iorwf	??_Adf_Write_Register_One,w
  2497  0EE4  00BF               	movwf	Adf_Write_Register_One@reg
  2498  0EE5  3000               	movlw	0
  2499  0EE6  0434               	iorwf	??_Adf_Write_Register_One+1,w
  2500  0EE7  00C0               	movwf	Adf_Write_Register_One@reg+1
  2501  0EE8  3000               	movlw	0
  2502  0EE9  0435               	iorwf	??_Adf_Write_Register_One+2,w
  2503  0EEA  00C1               	movwf	Adf_Write_Register_One@reg+2
  2504  0EEB  3000               	movlw	0
  2505  0EEC  0436               	iorwf	??_Adf_Write_Register_One+3,w
  2506  0EED  00C2               	movwf	Adf_Write_Register_One@reg+3
  2507                           
  2508                           ;adf7012.c: 183: uint8_t reg_ptr[3];
  2509                           ;adf7012.c: 184: memcpy(reg_ptr, &reg, 3);
  2510  0EEE  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  2511  0EEF  00B3               	movwf	??_Adf_Write_Register_One
  2512  0EF0  0833               	movf	??_Adf_Write_Register_One,w
  2513  0EF1  00A0               	movwf	memcpy@s1
  2514  0EF2  3003               	movlw	3
  2515  0EF3  00A1               	movwf	memcpy@n
  2516  0EF4  3000               	movlw	0
  2517  0EF5  00A2               	movwf	memcpy@n+1
  2518  0EF6  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2519  0EF7  318D  253A  318E   	fcall	_memcpy
  2520                           
  2521                           ;adf7012.c: 185: Reverse_Array(reg_ptr,3);
  2522  0EFA  3003               	movlw	3
  2523  0EFB  0020               	movlb	0	; select bank0
  2524  0EFC  00B3               	movwf	??_Adf_Write_Register_One
  2525  0EFD  0833               	movf	??_Adf_Write_Register_One,w
  2526  0EFE  00A7               	movwf	Reverse_Array@length
  2527  0EFF  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2528  0F00  3183  2394  318E   	fcall	_Reverse_Array
  2529                           
  2530                           ;adf7012.c: 186: Write_Adf7012_Reg(reg_ptr, 3);
  2531  0F03  3003               	movlw	3
  2532  0F04  0020               	movlb	0	; select bank0
  2533  0F05  00B3               	movwf	??_Adf_Write_Register_One
  2534  0F06  0833               	movf	??_Adf_Write_Register_One,w
  2535  0F07  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  2536  0F08  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2537  0F09  318D  25EB         	fcall	_Write_Adf7012_Reg
  2538  0F0B  0008               	return
  2539  0F0C                     __end_of_Adf_Write_Register_One:	
  2540                           
  2541                           	psect	text8
  2542  0C2A                     __ptext8:	
  2543 ;; *************** function _Adf_Reset_Config *****************
  2544 ;; Defined at:
  2545 ;;		line 84 in file "adf7012.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;		None
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;		None               void
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, pclath, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;Total ram usage:        0 bytes
  2564 ;; Hardware stack levels used:    1
  2565 ;; Hardware stack levels required when called:    6
  2566 ;; This function calls:
  2567 ;;		_Adf_Reset
  2568 ;;		_Adf_Reset_Register_One
  2569 ;;		_Adf_Reset_Register_Three
  2570 ;;		_Adf_Reset_Register_Two
  2571 ;;		_Adf_Reset_Register_Zero
  2572 ;; This function is called by:
  2573 ;;		_Radio_Setup
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           
  2578                           ;psect for function _Adf_Reset_Config
  2579  0C2A                     _Adf_Reset_Config:	
  2580                           
  2581                           ;adf7012.c: 87: Adf_Reset_Register_Zero();
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  2585  0C2A  318C  24FB  318C   	fcall	_Adf_Reset_Register_Zero
  2586                           
  2587                           ;adf7012.c: 88: Adf_Reset_Register_One();
  2588  0C2D  318C  2448  318C   	fcall	_Adf_Reset_Register_One
  2589                           
  2590                           ;adf7012.c: 89: Adf_Reset_Register_Two();
  2591  0C30  318C  24AB  318C   	fcall	_Adf_Reset_Register_Two
  2592                           
  2593                           ;adf7012.c: 90: Adf_Reset_Register_Three();
  2594  0C33  3183  23D8  318C   	fcall	_Adf_Reset_Register_Three
  2595                           
  2596                           ;adf7012.c: 92: Adf_Reset();
  2597  0C36  318C  2459         	fcall	_Adf_Reset
  2598  0C38  0008               	return
  2599  0C39                     __end_of_Adf_Reset_Config:	
  2600                           
  2601                           	psect	text9
  2602  0CFB                     __ptext9:	
  2603 ;; *************** function _Adf_Reset_Register_Zero *****************
  2604 ;; Defined at:
  2605 ;;		line 96 in file "adf7012.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;		None               void
  2612 ;; Registers used:
  2613 ;;		wreg, status,2
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2623 ;;Total ram usage:        1 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    3
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_Adf_Reset_Config
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _Adf_Reset_Register_Zero
  2635  0CFB                     _Adf_Reset_Register_Zero:	
  2636                           
  2637                           ;adf7012.c: 97: adf_config.r0.frequency_error_correction = 0;
  2638                           
  2639                           ;incstack = 0
  2640                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  2641  0CFB  3000               	movlw	0
  2642  0CFC  0021               	movlb	1	; select bank1
  2643  0CFD  00A3               	movwf	(_adf_config+3)^(0+128)
  2644  0CFE  3000               	movlw	0
  2645  0CFF  00A2               	movwf	(_adf_config+2)^(0+128)
  2646  0D00  3000               	movlw	0
  2647  0D01  00A1               	movwf	(_adf_config+1)^(0+128)
  2648  0D02  3000               	movlw	0
  2649  0D03  00A0               	movwf	_adf_config^(0+128)
  2650                           
  2651                           ;adf7012.c: 98: adf_config.r0.r_divider = 15;
  2652  0D04  300F               	movlw	15
  2653  0D05  0020               	movlb	0	; select bank0
  2654  0D06  00A0               	movwf	??_Adf_Reset_Register_Zero
  2655  0D07  0820               	movf	??_Adf_Reset_Register_Zero,w
  2656  0D08  0021               	movlb	1	; select bank1
  2657  0D09  00A4               	movwf	(_adf_config^(0+128)+4)
  2658                           
  2659                           ;adf7012.c: 99: adf_config.r0.crystal_doubler = 0;
  2660  0D0A  01A5               	clrf	(_adf_config^(0+128)+5)
  2661                           
  2662                           ;adf7012.c: 100: adf_config.r0.crystal_oscillator_disable = 0;
  2663  0D0B  01A6               	clrf	(_adf_config^(0+128)+6)
  2664                           
  2665                           ;adf7012.c: 101: adf_config.r0.clock_out_divider = 2;
  2666  0D0C  3002               	movlw	2
  2667  0D0D  0020               	movlb	0	; select bank0
  2668  0D0E  00A0               	movwf	??_Adf_Reset_Register_Zero
  2669  0D0F  0820               	movf	??_Adf_Reset_Register_Zero,w
  2670  0D10  0021               	movlb	1	; select bank1
  2671  0D11  00A7               	movwf	(_adf_config^(0+128)+7)
  2672                           
  2673                           ;adf7012.c: 102: adf_config.r0.vco_adjust = 0;
  2674  0D12  01A8               	clrf	(_adf_config^(0+128)+8)
  2675                           
  2676                           ;adf7012.c: 103: adf_config.r0.output_divider = 2;
  2677  0D13  3002               	movlw	2
  2678  0D14  0020               	movlb	0	; select bank0
  2679  0D15  00A0               	movwf	??_Adf_Reset_Register_Zero
  2680  0D16  0820               	movf	??_Adf_Reset_Register_Zero,w
  2681  0D17  0021               	movlb	1	; select bank1
  2682  0D18  00A9               	movwf	(_adf_config^(0+128)+9)
  2683  0D19  0008               	return
  2684  0D1A                     __end_of_Adf_Reset_Register_Zero:	
  2685                           
  2686                           	psect	text10
  2687  0CAB                     __ptext10:	
  2688 ;; *************** function _Adf_Reset_Register_Two *****************
  2689 ;; Defined at:
  2690 ;;		line 112 in file "adf7012.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;		None               void
  2697 ;; Registers used:
  2698 ;;		wreg, status,2
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2708 ;;Total ram usage:        1 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; Hardware stack levels required when called:    3
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_Adf_Reset_Config
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           
  2719                           ;psect for function _Adf_Reset_Register_Two
  2720  0CAB                     _Adf_Reset_Register_Two:	
  2721                           
  2722                           ;adf7012.c: 113: adf_config.r2.mod_control = 3;
  2723                           
  2724                           ;incstack = 0
  2725                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  2726  0CAB  3003               	movlw	3
  2727  0CAC  0020               	movlb	0	; select bank0
  2728  0CAD  00A0               	movwf	??_Adf_Reset_Register_Two
  2729  0CAE  0820               	movf	??_Adf_Reset_Register_Two,w
  2730  0CAF  0021               	movlb	1	; select bank1
  2731  0CB0  00B0               	movwf	(_adf_config^(0+128)+16)
  2732                           
  2733                           ;adf7012.c: 114: adf_config.r2.gook = 0;
  2734  0CB1  01B1               	clrf	(_adf_config^(0+128)+17)
  2735                           
  2736                           ;adf7012.c: 115: adf_config.r2.power_amplifier_level = 15;
  2737  0CB2  300F               	movlw	15
  2738  0CB3  0020               	movlb	0	; select bank0
  2739  0CB4  00A0               	movwf	??_Adf_Reset_Register_Two
  2740  0CB5  0820               	movf	??_Adf_Reset_Register_Two,w
  2741  0CB6  0021               	movlb	1	; select bank1
  2742  0CB7  00B2               	movwf	(_adf_config^(0+128)+18)
  2743                           
  2744                           ;adf7012.c: 116: adf_config.r2.modulation_deviation = 16;
  2745  0CB8  3000               	movlw	0
  2746  0CB9  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  2747  0CBA  3000               	movlw	0
  2748  0CBB  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  2749  0CBC  3000               	movlw	0
  2750  0CBD  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  2751  0CBE  3010               	movlw	16
  2752  0CBF  00B3               	movwf	(_adf_config^(0+128)+19)
  2753                           
  2754                           ;adf7012.c: 117: adf_config.r2.gfsk_modulation_control = 0;
  2755  0CC0  01B7               	clrf	(_adf_config^(0+128)+23)
  2756                           
  2757                           ;adf7012.c: 118: adf_config.r2.index_counter = 0;
  2758  0CC1  01B8               	clrf	(_adf_config^(0+128)+24)
  2759  0CC2  0008               	return
  2760  0CC3                     __end_of_Adf_Reset_Register_Two:	
  2761                           
  2762                           	psect	text11
  2763  03D8                     __ptext11:	
  2764 ;; *************** function _Adf_Reset_Register_Three *****************
  2765 ;; Defined at:
  2766 ;;		line 121 in file "adf7012.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;		None               void
  2773 ;; Registers used:
  2774 ;;		wreg, status,2
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2782 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2783 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;Total ram usage:        1 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    3
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_Adf_Reset_Config
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           
  2795                           ;psect for function _Adf_Reset_Register_Three
  2796  03D8                     _Adf_Reset_Register_Three:	
  2797                           
  2798                           ;adf7012.c: 122: adf_config.r3.pll_enable = 0;
  2799                           
  2800                           ;incstack = 0
  2801                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  2802  03D8  0021               	movlb	1	; select bank1
  2803  03D9  01B9               	clrf	(_adf_config^(0+128)+25)
  2804                           
  2805                           ;adf7012.c: 123: adf_config.r3.pa_enable = 0;
  2806  03DA  01BA               	clrf	(_adf_config^(0+128)+26)
  2807                           
  2808                           ;adf7012.c: 124: adf_config.r3.clkout_enable = 1;
  2809  03DB  01BB               	clrf	(_adf_config^(0+128)+27)
  2810  03DC  0ABB               	incf	(_adf_config^(0+128)+27),f
  2811                           
  2812                           ;adf7012.c: 125: adf_config.r3.data_invert = 1;
  2813  03DD  01BC               	clrf	(_adf_config^(0+128)+28)
  2814  03DE  0ABC               	incf	(_adf_config^(0+128)+28),f
  2815                           
  2816                           ;adf7012.c: 126: adf_config.r3.charge_pump_current = 3;
  2817  03DF  3003               	movlw	3
  2818  03E0  0020               	movlb	0	; select bank0
  2819  03E1  00A0               	movwf	??_Adf_Reset_Register_Three
  2820  03E2  0820               	movf	??_Adf_Reset_Register_Three,w
  2821  03E3  0021               	movlb	1	; select bank1
  2822  03E4  00BD               	movwf	(_adf_config^(0+128)+29)
  2823                           
  2824                           ;adf7012.c: 127: adf_config.r3.bleed_up = 0;
  2825  03E5  01BE               	clrf	(_adf_config^(0+128)+30)
  2826                           
  2827                           ;adf7012.c: 128: adf_config.r3.bleed_down = 0;
  2828  03E6  01BF               	clrf	(_adf_config^(0+128)+31)
  2829                           
  2830                           ;adf7012.c: 129: adf_config.r3.vco_disable = 0;
  2831  03E7  01C0               	clrf	(_adf_config^(0+128)+32)
  2832                           
  2833                           ;adf7012.c: 131: adf_config.r3.muxout = 3;
  2834  03E8  3003               	movlw	3
  2835  03E9  0020               	movlb	0	; select bank0
  2836  03EA  00A0               	movwf	??_Adf_Reset_Register_Three
  2837  03EB  0820               	movf	??_Adf_Reset_Register_Three,w
  2838  03EC  0021               	movlb	1	; select bank1
  2839  03ED  00C1               	movwf	(_adf_config^(0+128)+33)
  2840                           
  2841                           ;adf7012.c: 133: adf_config.r3.ld_precision = 0;
  2842  03EE  01C2               	clrf	(_adf_config^(0+128)+34)
  2843                           
  2844                           ;adf7012.c: 134: adf_config.r3.vco_bias = 6;
  2845  03EF  3006               	movlw	6
  2846  03F0  0020               	movlb	0	; select bank0
  2847  03F1  00A0               	movwf	??_Adf_Reset_Register_Three
  2848  03F2  0820               	movf	??_Adf_Reset_Register_Three,w
  2849  03F3  0021               	movlb	1	; select bank1
  2850  03F4  00C3               	movwf	(_adf_config^(0+128)+35)
  2851                           
  2852                           ;adf7012.c: 135: adf_config.r3.pa_bias = 4;
  2853  03F5  3004               	movlw	4
  2854  03F6  0020               	movlb	0	; select bank0
  2855  03F7  00A0               	movwf	??_Adf_Reset_Register_Three
  2856  03F8  0820               	movf	??_Adf_Reset_Register_Three,w
  2857  03F9  0021               	movlb	1	; select bank1
  2858  03FA  00C4               	movwf	(_adf_config^(0+128)+36)
  2859                           
  2860                           ;adf7012.c: 136: adf_config.r3.pll_test_mode = 0;
  2861  03FB  01C5               	clrf	(_adf_config^(0+128)+37)
  2862                           
  2863                           ;adf7012.c: 137: adf_config.r3.sd_test_mode = 0;
  2864  03FC  01C6               	clrf	(_adf_config^(0+128)+38)
  2865  03FD  0008               	return
  2866  03FE                     __end_of_Adf_Reset_Register_Three:	
  2867                           
  2868                           	psect	text12
  2869  0C48                     __ptext12:	
  2870 ;; *************** function _Adf_Reset_Register_One *****************
  2871 ;; Defined at:
  2872 ;;		line 106 in file "adf7012.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;		None
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;		None               void
  2879 ;; Registers used:
  2880 ;;		wreg
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2888 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2889 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2890 ;;Total ram usage:        1 bytes
  2891 ;; Hardware stack levels used:    1
  2892 ;; Hardware stack levels required when called:    3
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_Adf_Reset_Config
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _Adf_Reset_Register_One
  2902  0C48                     _Adf_Reset_Register_One:	
  2903                           
  2904                           ;adf7012.c: 107: adf_config.r1.integer_n = 109;
  2905                           
  2906                           ;incstack = 0
  2907                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  2908  0C48  306D               	movlw	109
  2909  0C49  0020               	movlb	0	; select bank0
  2910  0C4A  00A0               	movwf	??_Adf_Reset_Register_One
  2911  0C4B  0820               	movf	??_Adf_Reset_Register_One,w
  2912  0C4C  0021               	movlb	1	; select bank1
  2913  0C4D  00AE               	movwf	(_adf_config^(0+128)+14)
  2914                           
  2915                           ;adf7012.c: 108: adf_config.r1.fractional_n = 0;
  2916  0C4E  3000               	movlw	0
  2917  0C4F  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  2918  0C50  3000               	movlw	0
  2919  0C51  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  2920  0C52  3000               	movlw	0
  2921  0C53  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  2922  0C54  3000               	movlw	0
  2923  0C55  00AA               	movwf	(_adf_config^(0+128)+10)
  2924                           
  2925                           ;adf7012.c: 109: adf_config.r1.prescaler = 1;
  2926  0C56  01AF               	clrf	(_adf_config^(0+128)+15)
  2927  0C57  0AAF               	incf	(_adf_config^(0+128)+15),f
  2928  0C58  0008               	return
  2929  0C59                     __end_of_Adf_Reset_Register_One:	
  2930                           
  2931                           	psect	text13
  2932  0C59                     __ptext13:	
  2933 ;; *************** function _Adf_Reset *****************
  2934 ;; Defined at:
  2935 ;;		line 140 in file "adf7012.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;		None               void
  2942 ;; Registers used:
  2943 ;;		wreg, status,2, status,0, pclath, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;Total ram usage:        0 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    5
  2956 ;; This function calls:
  2957 ;;		_Delay_ms
  2958 ;; This function is called by:
  2959 ;;		_Adf_Reset_Config
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function _Adf_Reset
  2965  0C59                     _Adf_Reset:	
  2966                           
  2967                           ;adf7012.c: 142: PORTAbits.RA5 = 0;;
  2968                           
  2969                           ;incstack = 0
  2970                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  2971  0C59  0020               	movlb	0	; select bank0
  2972  0C5A  128C               	bcf	12,5	;volatile
  2973                           
  2974                           ;adf7012.c: 143: Delay_ms(10);
  2975  0C5B  300A               	movlw	10
  2976  0C5C  00A0               	movwf	Delay_ms@time_to_delay
  2977  0C5D  3000               	movlw	0
  2978  0C5E  00A1               	movwf	Delay_ms@time_to_delay+1
  2979  0C5F  318D  251A  318C   	fcall	_Delay_ms
  2980                           
  2981                           ;adf7012.c: 144: PORTAbits.RA5 = 1;;
  2982  0C62  0020               	movlb	0	; select bank0
  2983  0C63  168C               	bsf	12,5	;volatile
  2984                           
  2985                           ;adf7012.c: 145: Delay_ms(10);
  2986  0C64  300A               	movlw	10
  2987  0C65  00A0               	movwf	Delay_ms@time_to_delay
  2988  0C66  3000               	movlw	0
  2989  0C67  00A1               	movwf	Delay_ms@time_to_delay+1
  2990  0C68  318D  251A         	fcall	_Delay_ms
  2991  0C6A  0008               	return
  2992  0C6B                     __end_of_Adf_Reset:	
  2993                           
  2994                           	psect	text14
  2995  0C93                     __ptext14:	
  2996 ;; *************** function _Configure_Audio *****************
  2997 ;; Defined at:
  2998 ;;		line 47 in file "audio_tone.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;		None               void
  3005 ;; Registers used:
  3006 ;;		wreg
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;Total ram usage:        1 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    3
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_Modem_Setup
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           
  3027                           ;psect for function _Configure_Audio
  3028  0C93                     _Configure_Audio:	
  3029                           
  3030                           ;audio_tone.c: 48: SAMPLES_PER_BAUD = 26;
  3031                           
  3032                           ;incstack = 0
  3033                           ; Regs used in _Configure_Audio: [wreg]
  3034  0C93  301A               	movlw	26
  3035  0C94  0020               	movlb	0	; select bank0
  3036  0C95  00A0               	movwf	??_Configure_Audio
  3037  0C96  0820               	movf	??_Configure_Audio,w
  3038  0C97  0021               	movlb	1	; select bank1
  3039  0C98  00CE               	movwf	_SAMPLES_PER_BAUD^(0+128)
  3040                           
  3041                           ;audio_tone.c: 49: PHASE_DELTA_1200 = 7;
  3042  0C99  3000               	movlw	0
  3043  0C9A  0022               	movlb	2	; select bank2
  3044  0C9B  00A7               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  3045  0C9C  3000               	movlw	0
  3046  0C9D  00A6               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  3047  0C9E  3000               	movlw	0
  3048  0C9F  00A5               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  3049  0CA0  3007               	movlw	7
  3050  0CA1  00A4               	movwf	_PHASE_DELTA_1200^(0+256)
  3051                           
  3052                           ;audio_tone.c: 50: PHASE_DELTA_2200 = 13;
  3053  0CA2  3000               	movlw	0
  3054  0CA3  00AB               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  3055  0CA4  3000               	movlw	0
  3056  0CA5  00AA               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  3057  0CA6  3000               	movlw	0
  3058  0CA7  00A9               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  3059  0CA8  300D               	movlw	13
  3060  0CA9  00A8               	movwf	_PHASE_DELTA_2200^(0+256)
  3061  0CAA  0008               	return
  3062  0CAB                     __end_of_Configure_Audio:	
  3063                           
  3064                           	psect	text15
  3065  0D8D                     __ptext15:	
  3066 ;; *************** function _Modem_Flush_Frame *****************
  3067 ;; Defined at:
  3068 ;;		line 59 in file "audio_tone.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;		None               void
  3075 ;; Registers used:
  3076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3085 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3086 ;;Total ram usage:        1 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    9
  3089 ;; This function calls:
  3090 ;;		_Delay_ms
  3091 ;;		_Ptt_On
  3092 ;;		_Timer0_Start
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           
  3099                           ;psect for function _Modem_Flush_Frame
  3100  0D8D                     _Modem_Flush_Frame:	
  3101                           
  3102                           ;audio_tone.c: 61: phase_delta = PHASE_DELTA_1200;
  3103                           
  3104                           ;incstack = 0
  3105                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3106  0D8D  0022               	movlb	2	; select bank2
  3107  0D8E  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  3108  0D8F  0020               	movlb	0	; select bank0
  3109  0D90  00EC               	movwf	??_Modem_Flush_Frame
  3110  0D91  086C               	movf	??_Modem_Flush_Frame,w
  3111  0D92  0021               	movlb	1	; select bank1
  3112  0D93  00D2               	movwf	_phase_delta^(0+128)
  3113                           
  3114                           ;audio_tone.c: 62: phase = 0;
  3115  0D94  01FD               	clrf	_phase
  3116                           
  3117                           ;audio_tone.c: 63: packet_pos = 0;
  3118  0D95  3000               	movlw	0
  3119  0D96  0022               	movlb	2	; select bank2
  3120  0D97  00B3               	movwf	(_packet_pos+3)^(0+256)
  3121  0D98  3000               	movlw	0
  3122  0D99  00B2               	movwf	(_packet_pos+2)^(0+256)
  3123  0D9A  3000               	movlw	0
  3124  0D9B  00B1               	movwf	(_packet_pos+1)^(0+256)
  3125  0D9C  3000               	movlw	0
  3126  0D9D  00B0               	movwf	_packet_pos^(0+256)
  3127                           
  3128                           ;audio_tone.c: 64: current_sample_in_baud = 0;
  3129  0D9E  0021               	movlb	1	; select bank1
  3130  0D9F  01D1               	clrf	_current_sample_in_baud^(0+128)
  3131                           
  3132                           ;audio_tone.c: 65: MODEM_TRANSMITTING = 1;
  3133  0DA0  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  3134  0DA1  0ACC               	incf	_MODEM_TRANSMITTING^(0+128),f
  3135                           
  3136                           ;audio_tone.c: 67: PORTCbits.RC3 = 0;;
  3137  0DA2  0020               	movlb	0	; select bank0
  3138  0DA3  118E               	bcf	14,3	;volatile
  3139                           
  3140                           ;audio_tone.c: 68: Delay_ms(1);
  3141  0DA4  3001               	movlw	1
  3142  0DA5  00A0               	movwf	Delay_ms@time_to_delay
  3143  0DA6  3000               	movlw	0
  3144  0DA7  00A1               	movwf	Delay_ms@time_to_delay+1
  3145  0DA8  318D  251A  318D   	fcall	_Delay_ms
  3146                           
  3147                           ;audio_tone.c: 78: Ptt_On();
  3148  0DAB  318E  265F  318D   	fcall	_Ptt_On
  3149                           
  3150                           ;audio_tone.c: 80: Delay_ms(100);
  3151  0DAE  3064               	movlw	100
  3152  0DAF  0020               	movlb	0	; select bank0
  3153  0DB0  00A0               	movwf	Delay_ms@time_to_delay
  3154  0DB1  3000               	movlw	0
  3155  0DB2  00A1               	movwf	Delay_ms@time_to_delay+1
  3156  0DB3  318D  251A  318D   	fcall	_Delay_ms
  3157                           
  3158                           ;audio_tone.c: 81: Timer0_Start();
  3159  0DB6  318B  23E6         	fcall	_Timer0_Start
  3160  0DB8  0008               	return
  3161  0DB9                     __end_of_Modem_Flush_Frame:	
  3162                           
  3163                           	psect	text16
  3164  0BE6                     __ptext16:	
  3165 ;; *************** function _Timer0_Start *****************
  3166 ;; Defined at:
  3167 ;;		line 244 in file "utility.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;		None               void
  3174 ;; Registers used:
  3175 ;;		status,2
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    3
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_Modem_Flush_Frame
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           
  3196                           ;psect for function _Timer0_Start
  3197  0BE6                     _Timer0_Start:	
  3198                           
  3199                           ;utility.c: 245: TMR0 = 0x00;
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in _Timer0_Start: [status,2]
  3203  0BE6  0020               	movlb	0	; select bank0
  3204  0BE7  0195               	clrf	21	;volatile
  3205                           
  3206                           ;utility.c: 246: TMR0IF = 0;
  3207  0BE8  110B               	bcf	11,2	;volatile
  3208                           
  3209                           ;utility.c: 247: TMR0IE = 1;
  3210  0BE9  168B               	bsf	11,5	;volatile
  3211  0BEA  0008               	return
  3212  0BEB                     __end_of_Timer0_Start:	
  3213                           
  3214                           	psect	text17
  3215  0E5F                     __ptext17:	
  3216 ;; *************** function _Ptt_On *****************
  3217 ;; Defined at:
  3218 ;;		line 316 in file "adf7012.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;		None
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      unsigned char 
  3225 ;; Registers used:
  3226 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;Total ram usage:        1 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    8
  3239 ;; This function calls:
  3240 ;;		_Adf_Write_Register_Three
  3241 ;;		_Adf_Write_Register_Two
  3242 ;;		_Delay_ms
  3243 ;;		_Read_Adf7012_Muxout
  3244 ;; This function is called by:
  3245 ;;		_Modem_Flush_Frame
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           
  3250                           ;psect for function _Ptt_On
  3251  0E5F                     _Ptt_On:	
  3252                           
  3253                           ;adf7012.c: 318: adf_config.r3.pa_enable = 0;
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3257  0E5F  0021               	movlb	1	; select bank1
  3258  0E60  01BA               	clrf	(_adf_config^(0+128)+26)
  3259                           
  3260                           ;adf7012.c: 319: adf_config.r2.power_amplifier_level = 0;
  3261  0E61  01B2               	clrf	(_adf_config^(0+128)+18)
  3262                           
  3263                           ;adf7012.c: 320: adf_config.r3.muxout = 3;
  3264  0E62  3003               	movlw	3
  3265  0E63  0020               	movlb	0	; select bank0
  3266  0E64  00EB               	movwf	??_Ptt_On
  3267  0E65  086B               	movf	??_Ptt_On,w
  3268  0E66  0021               	movlb	1	; select bank1
  3269  0E67  00C1               	movwf	(_adf_config^(0+128)+33)
  3270                           
  3271                           ;adf7012.c: 323: Adf_Write_Register_Two();
  3272  0E68  3184  24C4  318E   	fcall	_Adf_Write_Register_Two
  3273                           
  3274                           ;adf7012.c: 324: Adf_Write_Register_Three();
  3275  0E6B  3180  2089  318E   	fcall	_Adf_Write_Register_Three
  3276                           
  3277                           ;adf7012.c: 326: Delay_ms(10);
  3278  0E6E  300A               	movlw	10
  3279  0E6F  0020               	movlb	0	; select bank0
  3280  0E70  00A0               	movwf	Delay_ms@time_to_delay
  3281  0E71  3000               	movlw	0
  3282  0E72  00A1               	movwf	Delay_ms@time_to_delay+1
  3283  0E73  318D  251A  318E   	fcall	_Delay_ms
  3284                           
  3285                           ;adf7012.c: 330: if (!Read_Adf7012_Muxout())
  3286  0E76  318C  2409  318E   	fcall	_Read_Adf7012_Muxout
  3287  0E79  3800               	iorlw	0
  3288  0E7A  1903               	btfsc	3,2
  3289  0E7B  0008               	return
  3290                           
  3291                           ;adf7012.c: 334: else
  3292                           ;adf7012.c: 335: {
  3293                           ;adf7012.c: 337: adf_config.r3.pa_enable = 1;
  3294                           
  3295                           ;adf7012.c: 333: }
  3296                           
  3297                           ;adf7012.c: 331: {
  3298                           ;adf7012.c: 332: return 0;
  3299                           ;	Return value of _Ptt_On is never used
  3300  0E7C  0021               	movlb	1	; select bank1
  3301  0E7D  01BA               	clrf	(_adf_config^(0+128)+26)
  3302  0E7E  0ABA               	incf	(_adf_config^(0+128)+26),f
  3303                           
  3304                           ;adf7012.c: 338: adf_config.r2.power_amplifier_level = 63;
  3305  0E7F  303F               	movlw	63
  3306  0E80  0020               	movlb	0	; select bank0
  3307  0E81  00EB               	movwf	??_Ptt_On
  3308  0E82  086B               	movf	??_Ptt_On,w
  3309  0E83  0021               	movlb	1	; select bank1
  3310  0E84  00B2               	movwf	(_adf_config^(0+128)+18)
  3311                           
  3312                           ;adf7012.c: 340: Delay_ms(10);
  3313  0E85  300A               	movlw	10
  3314  0E86  0020               	movlb	0	; select bank0
  3315  0E87  00A0               	movwf	Delay_ms@time_to_delay
  3316  0E88  3000               	movlw	0
  3317  0E89  00A1               	movwf	Delay_ms@time_to_delay+1
  3318  0E8A  318D  251A  318E   	fcall	_Delay_ms
  3319                           
  3320                           ;adf7012.c: 343: Adf_Write_Register_Two();
  3321  0E8D  3184  24C4  318E   	fcall	_Adf_Write_Register_Two
  3322                           
  3323                           ;adf7012.c: 344: Adf_Write_Register_Three();
  3324  0E90  3180  2089  318E   	fcall	_Adf_Write_Register_Three
  3325                           
  3326                           ;adf7012.c: 346: Delay_ms(1);
  3327  0E93  3001               	movlw	1
  3328  0E94  0020               	movlb	0	; select bank0
  3329  0E95  00A0               	movwf	Delay_ms@time_to_delay
  3330  0E96  3000               	movlw	0
  3331  0E97  00A1               	movwf	Delay_ms@time_to_delay+1
  3332  0E98  318D  251A         	fcall	_Delay_ms
  3333                           
  3334                           ;adf7012.c: 348: return 1;
  3335                           ;	Return value of _Ptt_On is never used
  3336  0E9A  0008               	return
  3337  0E9B                     __end_of_Ptt_On:	
  3338                           
  3339                           	psect	text18
  3340  04C4                     __ptext18:	
  3341 ;; *************** function _Adf_Write_Register_Two *****************
  3342 ;; Defined at:
  3343 ;;		line 189 in file "adf7012.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  3348 ;;  reg             4   47[BANK0 ] unsigned long 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;		None               void
  3351 ;; Registers used:
  3352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;Total ram usage:       32 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; Hardware stack levels required when called:    7
  3365 ;; This function calls:
  3366 ;;		_Reverse_Array
  3367 ;;		_Write_Adf7012_Reg
  3368 ;;		_memcpy
  3369 ;; This function is called by:
  3370 ;;		_Adf_Write_Config
  3371 ;;		_Ptt_On
  3372 ;;		_Ptt_Off
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376                           
  3377                           ;psect for function _Adf_Write_Register_Two
  3378  04C4                     _Adf_Write_Register_Two:	
  3379                           
  3380                           ;adf7012.c: 190: uint32_t reg =
  3381                           ;adf7012.c: 191: (2) |
  3382                           ;adf7012.c: 192: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  3383                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  3384                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  3385                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  3386                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  3387                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  3388                           
  3389                           ;incstack = 0
  3390                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  3391  04C4  0021               	movlb	1	; select bank1
  3392  04C5  0838               	movf	(_adf_config^(0+128)+24),w
  3393  04C6  3903               	andlw	3
  3394  04C7  0020               	movlb	0	; select bank0
  3395  04C8  00B3               	movwf	??_Adf_Write_Register_Two
  3396  04C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  3397  04CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  3398  04CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  3399  04CC  3017               	movlw	23
  3400  04CD                     u1245:	
  3401  04CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  3402  04CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  3403  04CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  3404  04D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  3405  04D1  0B89               	decfsz	9,f
  3406  04D2  2CCD               	goto	u1245
  3407  04D3  0021               	movlb	1	; select bank1
  3408  04D4  0837               	movf	(_adf_config^(0+128)+23),w
  3409  04D5  3907               	andlw	7
  3410  04D6  0020               	movlb	0	; select bank0
  3411  04D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  3412  04D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  3413  04D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  3414  04DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  3415  04DB  3014               	movlw	20
  3416  04DC                     u1255:	
  3417  04DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  3418  04DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  3419  04DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  3420  04DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  3421  04E0  0B89               	decfsz	9,f
  3422  04E1  2CDC               	goto	u1255
  3423  04E2  3013               	movlw	19
  3424  04E3  3EA0               	addlw	_adf_config& (0+255)
  3425  04E4  0086               	movwf	6
  3426  04E5  0187               	clrf	7
  3427  04E6  30FF               	movlw	255
  3428  04E7  0501               	andwf	1,w
  3429  04E8  00BB               	movwf	??_Adf_Write_Register_Two+8
  3430  04E9  3141               	addfsr 1,1
  3431  04EA  3001               	movlw	1
  3432  04EB  0501               	andwf	1,w
  3433  04EC  00BC               	movwf	??_Adf_Write_Register_Two+9
  3434  04ED  3141               	addfsr 1,1
  3435  04EE  3000               	movlw	0
  3436  04EF  0501               	andwf	1,w
  3437  04F0  00BD               	movwf	??_Adf_Write_Register_Two+10
  3438  04F1  3141               	addfsr 1,1
  3439  04F2  3000               	movlw	0
  3440  04F3  0501               	andwf	1,w
  3441  04F4  00BE               	movwf	??_Adf_Write_Register_Two+11
  3442  04F5  300B               	movlw	11
  3443  04F6                     u1265:	
  3444  04F6  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  3445  04F7  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  3446  04F8  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  3447  04F9  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  3448  04FA  0B89               	decfsz	9,f
  3449  04FB  2CF6               	goto	u1265
  3450  04FC  0021               	movlb	1	; select bank1
  3451  04FD  0832               	movf	(_adf_config^(0+128)+18),w
  3452  04FE  393F               	andlw	63
  3453  04FF  0020               	movlb	0	; select bank0
  3454  0500  00BF               	movwf	??_Adf_Write_Register_Two+12
  3455  0501  01C0               	clrf	??_Adf_Write_Register_Two+13
  3456  0502  01C1               	clrf	??_Adf_Write_Register_Two+14
  3457  0503  01C2               	clrf	??_Adf_Write_Register_Two+15
  3458  0504  3005               	movlw	5
  3459  0505                     u1275:	
  3460  0505  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  3461  0506  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  3462  0507  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  3463  0508  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  3464  0509  0B89               	decfsz	9,f
  3465  050A  2D05               	goto	u1275
  3466  050B  0021               	movlb	1	; select bank1
  3467  050C  0831               	movf	(_adf_config^(0+128)+17),w
  3468  050D  3901               	andlw	1
  3469  050E  0020               	movlb	0	; select bank0
  3470  050F  00C3               	movwf	??_Adf_Write_Register_Two+16
  3471  0510  01C4               	clrf	??_Adf_Write_Register_Two+17
  3472  0511  01C5               	clrf	??_Adf_Write_Register_Two+18
  3473  0512  01C6               	clrf	??_Adf_Write_Register_Two+19
  3474  0513  3004               	movlw	4
  3475  0514                     u1285:	
  3476  0514  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  3477  0515  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  3478  0516  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  3479  0517  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  3480  0518  0B89               	decfsz	9,f
  3481  0519  2D14               	goto	u1285
  3482  051A  0021               	movlb	1	; select bank1
  3483  051B  0830               	movf	(_adf_config^(0+128)+16),w
  3484  051C  3903               	andlw	3
  3485  051D  0020               	movlb	0	; select bank0
  3486  051E  00C7               	movwf	??_Adf_Write_Register_Two+20
  3487  051F  01C8               	clrf	??_Adf_Write_Register_Two+21
  3488  0520  01C9               	clrf	??_Adf_Write_Register_Two+22
  3489  0521  01CA               	clrf	??_Adf_Write_Register_Two+23
  3490  0522  3002               	movlw	2
  3491  0523                     u1295:	
  3492  0523  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  3493  0524  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  3494  0525  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  3495  0526  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  3496  0527  0B89               	decfsz	9,f
  3497  0528  2D23               	goto	u1295
  3498  0529  0847               	movf	??_Adf_Write_Register_Two+20,w
  3499  052A  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  3500  052B  0848               	movf	??_Adf_Write_Register_Two+21,w
  3501  052C  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  3502  052D  0849               	movf	??_Adf_Write_Register_Two+22,w
  3503  052E  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  3504  052F  084A               	movf	??_Adf_Write_Register_Two+23,w
  3505  0530  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  3506  0531  0843               	movf	??_Adf_Write_Register_Two+16,w
  3507  0532  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  3508  0533  0844               	movf	??_Adf_Write_Register_Two+17,w
  3509  0534  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  3510  0535  0845               	movf	??_Adf_Write_Register_Two+18,w
  3511  0536  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  3512  0537  0846               	movf	??_Adf_Write_Register_Two+19,w
  3513  0538  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  3514  0539  083F               	movf	??_Adf_Write_Register_Two+12,w
  3515  053A  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  3516  053B  0840               	movf	??_Adf_Write_Register_Two+13,w
  3517  053C  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  3518  053D  0841               	movf	??_Adf_Write_Register_Two+14,w
  3519  053E  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  3520  053F  0842               	movf	??_Adf_Write_Register_Two+15,w
  3521  0540  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  3522  0541  083B               	movf	??_Adf_Write_Register_Two+8,w
  3523  0542  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  3524  0543  083C               	movf	??_Adf_Write_Register_Two+9,w
  3525  0544  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  3526  0545  083D               	movf	??_Adf_Write_Register_Two+10,w
  3527  0546  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  3528  0547  083E               	movf	??_Adf_Write_Register_Two+11,w
  3529  0548  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  3530  0549  0837               	movf	??_Adf_Write_Register_Two+4,w
  3531  054A  04B3               	iorwf	??_Adf_Write_Register_Two,f
  3532  054B  0838               	movf	??_Adf_Write_Register_Two+5,w
  3533  054C  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  3534  054D  0839               	movf	??_Adf_Write_Register_Two+6,w
  3535  054E  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  3536  054F  083A               	movf	??_Adf_Write_Register_Two+7,w
  3537  0550  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  3538  0551  3002               	movlw	2
  3539  0552  0433               	iorwf	??_Adf_Write_Register_Two,w
  3540  0553  00CF               	movwf	Adf_Write_Register_Two@reg
  3541  0554  3000               	movlw	0
  3542  0555  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  3543  0556  00D0               	movwf	Adf_Write_Register_Two@reg+1
  3544  0557  3000               	movlw	0
  3545  0558  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  3546  0559  00D1               	movwf	Adf_Write_Register_Two@reg+2
  3547  055A  3000               	movlw	0
  3548  055B  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  3549  055C  00D2               	movwf	Adf_Write_Register_Two@reg+3
  3550                           
  3551                           ;adf7012.c: 200: uint8_t reg_ptr[4];
  3552                           ;adf7012.c: 201: memcpy(reg_ptr, &reg, 4);
  3553  055D  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  3554  055E  00B3               	movwf	??_Adf_Write_Register_Two
  3555  055F  0833               	movf	??_Adf_Write_Register_Two,w
  3556  0560  00A0               	movwf	memcpy@s1
  3557  0561  3004               	movlw	4
  3558  0562  00A1               	movwf	memcpy@n
  3559  0563  3000               	movlw	0
  3560  0564  00A2               	movwf	memcpy@n+1
  3561  0565  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3562  0566  318D  253A  3184   	fcall	_memcpy
  3563                           
  3564                           ;adf7012.c: 202: Reverse_Array(reg_ptr,4);
  3565  0569  3004               	movlw	4
  3566  056A  0020               	movlb	0	; select bank0
  3567  056B  00B3               	movwf	??_Adf_Write_Register_Two
  3568  056C  0833               	movf	??_Adf_Write_Register_Two,w
  3569  056D  00A7               	movwf	Reverse_Array@length
  3570  056E  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3571  056F  3183  2394  3184   	fcall	_Reverse_Array
  3572                           
  3573                           ;adf7012.c: 203: Write_Adf7012_Reg(reg_ptr, 4);
  3574  0572  3004               	movlw	4
  3575  0573  0020               	movlb	0	; select bank0
  3576  0574  00B3               	movwf	??_Adf_Write_Register_Two
  3577  0575  0833               	movf	??_Adf_Write_Register_Two,w
  3578  0576  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  3579  0577  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3580  0578  318D  25EB         	fcall	_Write_Adf7012_Reg
  3581  057A  0008               	return
  3582  057B                     __end_of_Adf_Write_Register_Two:	
  3583                           
  3584                           	psect	text19
  3585  0C7E                     __ptext19:	
  3586 ;; *************** function _Gpio_Config *****************
  3587 ;; Defined at:
  3588 ;;		line 31 in file "utility.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;		None
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;		None
  3593 ;; Return value:  Size  Location     Type
  3594 ;;                  1    wreg      unsigned char 
  3595 ;; Registers used:
  3596 ;;		wreg, status,2, status,0
  3597 ;; Tracked objects:
  3598 ;;		On entry : 0/0
  3599 ;;		On exit  : 0/0
  3600 ;;		Unchanged: 0/0
  3601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3604 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3605 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;Total ram usage:        1 bytes
  3607 ;; Hardware stack levels used:    1
  3608 ;; Hardware stack levels required when called:    3
  3609 ;; This function calls:
  3610 ;;		Nothing
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           
  3617                           ;psect for function _Gpio_Config
  3618  0C7E                     _Gpio_Config:	
  3619                           
  3620                           ;utility.c: 34: TRISA |= 0b00000010;
  3621                           
  3622                           ;incstack = 0
  3623                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  3624  0C7E  0021               	movlb	1	; select bank1
  3625  0C7F  148C               	bsf	12,1	;volatile
  3626                           
  3627                           ;utility.c: 35: TRISA &= 0b11001011;
  3628  0C80  30CB               	movlw	203
  3629  0C81  0020               	movlb	0	; select bank0
  3630  0C82  00A0               	movwf	??_Gpio_Config
  3631  0C83  0820               	movf	??_Gpio_Config,w
  3632  0C84  0021               	movlb	1	; select bank1
  3633  0C85  058C               	andwf	12,f	;volatile
  3634                           
  3635                           ;utility.c: 36: TRISC |= 0b00110000;
  3636  0C86  3030               	movlw	48
  3637  0C87  0020               	movlb	0	; select bank0
  3638  0C88  00A0               	movwf	??_Gpio_Config
  3639  0C89  0820               	movf	??_Gpio_Config,w
  3640  0C8A  0021               	movlb	1	; select bank1
  3641  0C8B  048E               	iorwf	14,f	;volatile
  3642                           
  3643                           ;utility.c: 37: TRISC &= 0b11110000;
  3644  0C8C  30F0               	movlw	240
  3645  0C8D  0020               	movlb	0	; select bank0
  3646  0C8E  00A0               	movwf	??_Gpio_Config
  3647  0C8F  0820               	movf	??_Gpio_Config,w
  3648  0C90  0021               	movlb	1	; select bank1
  3649  0C91  058E               	andwf	14,f	;volatile
  3650  0C92  0008               	return
  3651  0C93                     __end_of_Gpio_Config:	
  3652                           ;utility.c: 39: return 1;
  3653                           ;	Return value of _Gpio_Config is never used
  3654                           
  3655                           
  3656                           	psect	text20
  3657  0CDE                     __ptext20:	
  3658 ;; *************** function _Ax25_Send_String *****************
  3659 ;; Defined at:
  3660 ;;		line 91 in file "ax25.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  3663 ;;		 -> STR_1(6), 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  i               2   15[BANK0 ] int 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;		None               void
  3668 ;; Registers used:
  3669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3676 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3678 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3679 ;;Total ram usage:        4 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    6
  3682 ;; This function calls:
  3683 ;;		_Ax25_Send_Byte
  3684 ;; This function is called by:
  3685 ;;		_main
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           
  3690                           ;psect for function _Ax25_Send_String
  3691  0CDE                     _Ax25_Send_String:	
  3692                           
  3693                           ;ax25.c: 93: int i;
  3694                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  3695                           
  3696                           ;incstack = 0
  3697                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3698  0CDE  0020               	movlb	0	; select bank0
  3699  0CDF  01AF               	clrf	Ax25_Send_String@i
  3700  0CE0  01B0               	clrf	Ax25_Send_String@i+1
  3701  0CE1                     l2217:	
  3702  0CE1  082D               	movf	Ax25_Send_String@string,w
  3703  0CE2  072F               	addwf	Ax25_Send_String@i,w
  3704  0CE3  0084               	movwf	4
  3705  0CE4  082E               	movf	Ax25_Send_String@string+1,w
  3706  0CE5  3D30               	addwfc	Ax25_Send_String@i+1,w
  3707  0CE6  0085               	movwf	5
  3708  0CE7  0800               	movf	0,w	;code access
  3709  0CE8  3800               	iorlw	0
  3710  0CE9  1903               	btfsc	3,2
  3711  0CEA  0008               	return
  3712                           
  3713                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  3714  0CEB  082D               	movf	Ax25_Send_String@string,w
  3715  0CEC  072F               	addwf	Ax25_Send_String@i,w
  3716  0CED  0084               	movwf	4
  3717  0CEE  082E               	movf	Ax25_Send_String@string+1,w
  3718  0CEF  3D30               	addwfc	Ax25_Send_String@i+1,w
  3719  0CF0  0085               	movwf	5
  3720  0CF1  0800               	movf	0,w	;code access
  3721  0CF2  318B  23F1  318C   	fcall	_Ax25_Send_Byte
  3722  0CF5  3001               	movlw	1
  3723  0CF6  0020               	movlb	0	; select bank0
  3724  0CF7  07AF               	addwf	Ax25_Send_String@i,f
  3725  0CF8  3000               	movlw	0
  3726  0CF9  3DB0               	addwfc	Ax25_Send_String@i+1,f
  3727  0CFA  2CE1               	goto	l2217
  3728  0CFB                     __end_of_Ax25_Send_String:	
  3729                           
  3730                           	psect	text21
  3731  0BF1                     __ptext21:	
  3732 ;; *************** function _Ax25_Send_Byte *****************
  3733 ;; Defined at:
  3734 ;;		line 58 in file "ax25.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;  byte            1    wreg     unsigned char 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  byte            1   12[BANK0 ] unsigned char 
  3739 ;; Return value:  Size  Location     Type
  3740 ;;		None               void
  3741 ;; Registers used:
  3742 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3752 ;;Total ram usage:        1 bytes
  3753 ;; Hardware stack levels used:    1
  3754 ;; Hardware stack levels required when called:    5
  3755 ;; This function calls:
  3756 ;;		_Send_Byte
  3757 ;; This function is called by:
  3758 ;;		_Ax25_Send_String
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           
  3763                           ;psect for function _Ax25_Send_Byte
  3764  0BF1                     _Ax25_Send_Byte:	
  3765                           
  3766                           ;incstack = 0
  3767                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3768                           ;Ax25_Send_Byte@byte stored from wreg
  3769  0BF1  0020               	movlb	0	; select bank0
  3770  0BF2  00AC               	movwf	Ax25_Send_Byte@byte
  3771                           
  3772                           ;ax25.c: 60: Send_Byte(byte);
  3773  0BF3  082C               	movf	Ax25_Send_Byte@byte,w
  3774  0BF4  3186  2630         	fcall	_Send_Byte
  3775  0BF6  0008               	return
  3776  0BF7                     __end_of_Ax25_Send_Byte:	
  3777                           
  3778                           	psect	text22
  3779  01F5                     __ptext22:	
  3780 ;; *************** function _Ax25_Send_Header *****************
  3781 ;; Defined at:
  3782 ;;		line 99 in file "ax25.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  addresses       1    wreg     PTR struct .
  3785 ;;		 -> main@beacon_address(16), 
  3786 ;;  num_addresse    2   12[BANK0 ] int 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;  addresses       1   19[BANK0 ] PTR struct .
  3789 ;;		 -> main@beacon_address(16), 
  3790 ;;  i               2   20[BANK0 ] int 
  3791 ;;  j               2   17[BANK0 ] int 
  3792 ;; Return value:  Size  Location     Type
  3793 ;;		None               void
  3794 ;; Registers used:
  3795 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;Total ram usage:       10 bytes
  3806 ;; Hardware stack levels used:    1
  3807 ;; Hardware stack levels required when called:    5
  3808 ;; This function calls:
  3809 ;;		_Ax25_Send_Flag
  3810 ;;		_Ax25_Send_Sync
  3811 ;;		_Send_Byte
  3812 ;; This function is called by:
  3813 ;;		_main
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           
  3818                           ;psect for function _Ax25_Send_Header
  3819  01F5                     _Ax25_Send_Header:	
  3820                           
  3821                           ;incstack = 0
  3822                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3823                           ;Ax25_Send_Header@addresses stored from wreg
  3824  01F5  0020               	movlb	0	; select bank0
  3825  01F6  00B3               	movwf	Ax25_Send_Header@addresses
  3826                           
  3827                           ;ax25.c: 102: int i, j;
  3828                           ;ax25.c: 103: modem_packet_size = 0;
  3829  01F7  3000               	movlw	0
  3830  01F8  00FC               	movwf	_modem_packet_size+3
  3831  01F9  3000               	movlw	0
  3832  01FA  00FB               	movwf	_modem_packet_size+2
  3833  01FB  3000               	movlw	0
  3834  01FC  00FA               	movwf	_modem_packet_size+1
  3835  01FD  3000               	movlw	0
  3836  01FE  00F9               	movwf	_modem_packet_size
  3837                           
  3838                           ;ax25.c: 104: ones_in_a_row = 0;
  3839  01FF  0021               	movlb	1	; select bank1
  3840  0200  01C9               	clrf	_ones_in_a_row^(0+128)
  3841  0201  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  3842                           
  3843                           ;ax25.c: 105: crc = 0xffff;
  3844  0202  30FF               	movlw	255
  3845  0203  00C7               	movwf	_crc^(0+128)
  3846  0204  30FF               	movlw	255
  3847  0205  00C8               	movwf	(_crc^(0+128)+1)
  3848                           
  3849                           ;ax25.c: 108: for (i = 0; i < 10; i++)
  3850  0206  0020               	movlb	0	; select bank0
  3851  0207  01B4               	clrf	Ax25_Send_Header@i
  3852  0208  01B5               	clrf	Ax25_Send_Header@i+1
  3853  0209  0835               	movf	Ax25_Send_Header@i+1,w
  3854  020A  3A80               	xorlw	128
  3855  020B  00AE               	movwf	??_Ax25_Send_Header
  3856  020C  3080               	movlw	128
  3857  020D  022E               	subwf	??_Ax25_Send_Header,w
  3858  020E  1D03               	skipz
  3859  020F  2A12               	goto	u1865
  3860  0210  300A               	movlw	10
  3861  0211  0234               	subwf	Ax25_Send_Header@i,w
  3862  0212                     u1865:	
  3863  0212  1803               	btfsc	3,0
  3864  0213  2A27               	goto	l2173
  3865  0214                     l2167:	
  3866                           
  3867                           ;ax25.c: 109: {
  3868                           ;ax25.c: 110: Ax25_Send_Sync();
  3869  0214  318F  270C  3181   	fcall	_Ax25_Send_Sync
  3870  0217  3001               	movlw	1
  3871  0218  0020               	movlb	0	; select bank0
  3872  0219  07B4               	addwf	Ax25_Send_Header@i,f
  3873  021A  3000               	movlw	0
  3874  021B  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3875  021C  0835               	movf	Ax25_Send_Header@i+1,w
  3876  021D  3A80               	xorlw	128
  3877  021E  00AE               	movwf	??_Ax25_Send_Header
  3878  021F  3080               	movlw	128
  3879  0220  022E               	subwf	??_Ax25_Send_Header,w
  3880  0221  1D03               	skipz
  3881  0222  2A25               	goto	u1875
  3882  0223  300A               	movlw	10
  3883  0224  0234               	subwf	Ax25_Send_Header@i,w
  3884  0225                     u1875:	
  3885  0225  1C03               	skipc
  3886  0226  2A14               	goto	l2167
  3887  0227                     l2173:	
  3888                           
  3889                           ;ax25.c: 111: }
  3890                           ;ax25.c: 114: for (i = 0; i < 3; i++)
  3891  0227  0020               	movlb	0	; select bank0
  3892  0228  01B4               	clrf	Ax25_Send_Header@i
  3893  0229  01B5               	clrf	Ax25_Send_Header@i+1
  3894  022A  0835               	movf	Ax25_Send_Header@i+1,w
  3895  022B  3A80               	xorlw	128
  3896  022C  00AE               	movwf	??_Ax25_Send_Header
  3897  022D  3080               	movlw	128
  3898  022E  022E               	subwf	??_Ax25_Send_Header,w
  3899  022F  1D03               	skipz
  3900  0230  2A33               	goto	u1885
  3901  0231  3003               	movlw	3
  3902  0232  0234               	subwf	Ax25_Send_Header@i,w
  3903  0233                     u1885:	
  3904  0233  1803               	btfsc	3,0
  3905  0234  2A48               	goto	l2185
  3906  0235                     l2179:	
  3907                           
  3908                           ;ax25.c: 115: {
  3909                           ;ax25.c: 116: Ax25_Send_Flag();
  3910  0235  3187  2774  3181   	fcall	_Ax25_Send_Flag
  3911  0238  3001               	movlw	1
  3912  0239  0020               	movlb	0	; select bank0
  3913  023A  07B4               	addwf	Ax25_Send_Header@i,f
  3914  023B  3000               	movlw	0
  3915  023C  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3916  023D  0835               	movf	Ax25_Send_Header@i+1,w
  3917  023E  3A80               	xorlw	128
  3918  023F  00AE               	movwf	??_Ax25_Send_Header
  3919  0240  3080               	movlw	128
  3920  0241  022E               	subwf	??_Ax25_Send_Header,w
  3921  0242  1D03               	skipz
  3922  0243  2A46               	goto	u1895
  3923  0244  3003               	movlw	3
  3924  0245  0234               	subwf	Ax25_Send_Header@i,w
  3925  0246                     u1895:	
  3926  0246  1C03               	skipc
  3927  0247  2A35               	goto	l2179
  3928  0248                     l2185:	
  3929                           
  3930                           ;ax25.c: 117: }
  3931                           ;ax25.c: 119: for (i = 0; i < num_addresses; i++) {
  3932  0248  0020               	movlb	0	; select bank0
  3933  0249  01B4               	clrf	Ax25_Send_Header@i
  3934  024A  01B5               	clrf	Ax25_Send_Header@i+1
  3935  024B                     l2207:	
  3936  024B  0835               	movf	Ax25_Send_Header@i+1,w
  3937  024C  3A80               	xorlw	128
  3938  024D  00AE               	movwf	??_Ax25_Send_Header
  3939  024E  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  3940  024F  3A80               	xorlw	128
  3941  0250  022E               	subwf	??_Ax25_Send_Header,w
  3942  0251  1D03               	skipz
  3943  0252  2A55               	goto	u1965
  3944  0253  082C               	movf	Ax25_Send_Header@num_addresses,w
  3945  0254  0234               	subwf	Ax25_Send_Header@i,w
  3946  0255                     u1965:	
  3947  0255  1803               	btfsc	3,0
  3948  0256  2AC5               	goto	l2209
  3949                           
  3950                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  3951  0257  0020               	movlb	0	; select bank0
  3952  0258  01B1               	clrf	Ax25_Send_Header@j
  3953  0259  01B2               	clrf	Ax25_Send_Header@j+1
  3954  025A  0832               	movf	Ax25_Send_Header@j+1,w
  3955  025B  3A80               	xorlw	128
  3956  025C  00AE               	movwf	??_Ax25_Send_Header
  3957  025D  3080               	movlw	128
  3958  025E  022E               	subwf	??_Ax25_Send_Header,w
  3959  025F  1D03               	skipz
  3960  0260  2A63               	goto	u1905
  3961  0261  3006               	movlw	6
  3962  0262  0231               	subwf	Ax25_Send_Header@j,w
  3963  0263                     u1905:	
  3964  0263  1803               	btfsc	3,0
  3965  0264  2A8A               	goto	l2199
  3966  0265                     l2193:	
  3967                           
  3968                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  3969  0265  0020               	movlb	0	; select bank0
  3970  0266  0834               	movf	Ax25_Send_Header@i,w
  3971  0267  00AE               	movwf	??_Ax25_Send_Header
  3972  0268  3002               	movlw	2
  3973  0269                     u1915:	
  3974  0269  35AE               	lslf	??_Ax25_Send_Header,f
  3975  026A  3EFF               	addlw	-1
  3976  026B  1D03               	skipz
  3977  026C  2A69               	goto	u1915
  3978  026D  352E               	lslf	??_Ax25_Send_Header,w
  3979  026E  0733               	addwf	Ax25_Send_Header@addresses,w
  3980  026F  00AF               	movwf	??_Ax25_Send_Header+1
  3981  0270  0831               	movf	Ax25_Send_Header@j,w
  3982  0271  072F               	addwf	??_Ax25_Send_Header+1,w
  3983  0272  00B0               	movwf	??_Ax25_Send_Header+2
  3984  0273  0830               	movf	??_Ax25_Send_Header+2,w
  3985  0274  0086               	movwf	6
  3986  0275  0187               	clrf	7
  3987  0276  3501               	lslf	1,w
  3988  0277  3186  2630  3181   	fcall	_Send_Byte
  3989  027A  3001               	movlw	1
  3990  027B  0020               	movlb	0	; select bank0
  3991  027C  07B1               	addwf	Ax25_Send_Header@j,f
  3992  027D  3000               	movlw	0
  3993  027E  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  3994  027F  0832               	movf	Ax25_Send_Header@j+1,w
  3995  0280  3A80               	xorlw	128
  3996  0281  00AE               	movwf	??_Ax25_Send_Header
  3997  0282  3080               	movlw	128
  3998  0283  022E               	subwf	??_Ax25_Send_Header,w
  3999  0284  1D03               	skipz
  4000  0285  2A88               	goto	u1925
  4001  0286  3006               	movlw	6
  4002  0287  0231               	subwf	Ax25_Send_Header@j,w
  4003  0288                     u1925:	
  4004  0288  1C03               	skipc
  4005  0289  2A65               	goto	l2193
  4006  028A                     l2199:	
  4007                           
  4008                           ;ax25.c: 125: if (i == num_addresses - 1){
  4009  028A  0020               	movlb	0	; select bank0
  4010  028B  082C               	movf	Ax25_Send_Header@num_addresses,w
  4011  028C  3EFF               	addlw	255
  4012  028D  00AE               	movwf	??_Ax25_Send_Header
  4013  028E  30FF               	movlw	255
  4014  028F  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  4015  0290  00AF               	movwf	??_Ax25_Send_Header+1
  4016  0291  0835               	movf	Ax25_Send_Header@i+1,w
  4017  0292  062F               	xorwf	??_Ax25_Send_Header+1,w
  4018  0293  1D03               	skipz
  4019  0294  2A97               	goto	u1935
  4020  0295  0834               	movf	Ax25_Send_Header@i,w
  4021  0296  062E               	xorwf	??_Ax25_Send_Header,w
  4022  0297                     u1935:	
  4023  0297  1D03               	skipz
  4024  0298  2AAB               	goto	l2203
  4025                           
  4026                           ;ax25.c: 126: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  4027  0299  0834               	movf	Ax25_Send_Header@i,w
  4028  029A  00AE               	movwf	??_Ax25_Send_Header
  4029  029B  3002               	movlw	2
  4030  029C                     u1945:	
  4031  029C  35AE               	lslf	??_Ax25_Send_Header,f
  4032  029D  3EFF               	addlw	-1
  4033  029E  1D03               	skipz
  4034  029F  2A9C               	goto	u1945
  4035  02A0  352E               	lslf	??_Ax25_Send_Header,w
  4036  02A1  0733               	addwf	Ax25_Send_Header@addresses,w
  4037  02A2  00AF               	movwf	??_Ax25_Send_Header+1
  4038  02A3  082F               	movf	??_Ax25_Send_Header+1,w
  4039  02A4  3E07               	addlw	7
  4040  02A5  0086               	movwf	6
  4041  02A6  0187               	clrf	7
  4042  02A7  3501               	lslf	1,w
  4043  02A8  3E60               	addlw	96
  4044  02A9  3801               	iorlw	1
  4045  02AA  2ABC               	goto	L1
  4046  02AB                     l2203:	
  4047                           ;ax25.c: 128: }
  4048                           
  4049                           
  4050                           ;ax25.c: 129: else
  4051                           ;ax25.c: 130: Send_Byte(('0' + addresses[i].ssid) << 1);
  4052  02AB  0020               	movlb	0	; select bank0
  4053  02AC  0834               	movf	Ax25_Send_Header@i,w
  4054  02AD  00AE               	movwf	??_Ax25_Send_Header
  4055  02AE  3002               	movlw	2
  4056  02AF                     u1955:	
  4057  02AF  35AE               	lslf	??_Ax25_Send_Header,f
  4058  02B0  3EFF               	addlw	-1
  4059  02B1  1D03               	skipz
  4060  02B2  2AAF               	goto	u1955
  4061  02B3  352E               	lslf	??_Ax25_Send_Header,w
  4062  02B4  0733               	addwf	Ax25_Send_Header@addresses,w
  4063  02B5  00AF               	movwf	??_Ax25_Send_Header+1
  4064  02B6  082F               	movf	??_Ax25_Send_Header+1,w
  4065  02B7  3E07               	addlw	7
  4066  02B8  0086               	movwf	6
  4067  02B9  0187               	clrf	7
  4068  02BA  3501               	lslf	1,w
  4069  02BB  3E60               	addlw	96
  4070  02BC                     L1:	
  4071  02BC  3186  2630  3181   	fcall	_Send_Byte
  4072  02BF  3001               	movlw	1
  4073  02C0  0020               	movlb	0	; select bank0
  4074  02C1  07B4               	addwf	Ax25_Send_Header@i,f
  4075  02C2  3000               	movlw	0
  4076  02C3  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  4077  02C4  2A4B               	goto	l2207
  4078  02C5                     l2209:	
  4079                           
  4080                           ;ax25.c: 131: }
  4081                           ;ax25.c: 134: Send_Byte(0x03);
  4082  02C5  3003               	movlw	3
  4083  02C6  3186  2630  3181   	fcall	_Send_Byte
  4084                           
  4085                           ;ax25.c: 137: Send_Byte(0xf0);
  4086  02C9  30F0               	movlw	240
  4087  02CA  3186  2630         	fcall	_Send_Byte
  4088  02CC  0008               	return
  4089  02CD                     __end_of_Ax25_Send_Header:	
  4090                           
  4091                           	psect	text23
  4092  0F0C                     __ptext23:	
  4093 ;; *************** function _Ax25_Send_Sync *****************
  4094 ;; Defined at:
  4095 ;;		line 63 in file "ax25.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  i               2    7[BANK0 ] int 
  4100 ;;  byte            1    6[BANK0 ] unsigned char 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;		None               void
  4103 ;; Registers used:
  4104 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4111 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4112 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4113 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;Total ram usage:        9 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    3
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_Ax25_Send_Header
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _Ax25_Send_Sync
  4126  0F0C                     _Ax25_Send_Sync:	
  4127                           
  4128                           ;ax25.c: 65: uint8_t byte = 0x00;
  4129                           
  4130                           ;incstack = 0
  4131                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  4132  0F0C  0020               	movlb	0	; select bank0
  4133  0F0D  01A6               	clrf	Ax25_Send_Sync@byte
  4134                           
  4135                           ;ax25.c: 66: int i;
  4136                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  4137  0F0E  01A7               	clrf	Ax25_Send_Sync@i
  4138  0F0F  01A8               	clrf	Ax25_Send_Sync@i+1
  4139  0F10                     L2:	
  4140  0F10  0828               	movf	Ax25_Send_Sync@i+1,w
  4141  0F11  3A80               	xorlw	128
  4142  0F12  00A0               	movwf	??_Ax25_Send_Sync
  4143  0F13  3080               	movlw	128
  4144  0F14  0220               	subwf	??_Ax25_Send_Sync,w
  4145  0F15  3008               	movlw	8
  4146  0F16  1903               	btfsc	3,2
  4147  0F17  0227               	subwf	Ax25_Send_Sync@i,w
  4148  0F18  1803               	btfsc	3,0
  4149  0F19  0008               	return
  4150                           
  4151                           ;ax25.c: 68: if (modem_packet_size >= 64 * 8)
  4152  0F1A  3000               	movlw	0
  4153  0F1B  027C               	subwf	_modem_packet_size+3,w
  4154  0F1C  1D03               	skipz
  4155  0F1D  2F28               	goto	u1605
  4156  0F1E  3000               	movlw	0
  4157  0F1F  027B               	subwf	_modem_packet_size+2,w
  4158  0F20  1D03               	skipz
  4159  0F21  2F28               	goto	u1605
  4160  0F22  3002               	movlw	2
  4161  0F23  027A               	subwf	_modem_packet_size+1,w
  4162  0F24  1D03               	skipz
  4163  0F25  2F28               	goto	u1605
  4164  0F26  3000               	movlw	0
  4165  0F27  0279               	subwf	_modem_packet_size,w
  4166  0F28                     u1605:	
  4167  0F28  1803               	btfsc	3,0
  4168  0F29  0008               	return
  4169                           
  4170                           ;ax25.c: 70: if ((byte >> i) & 1)
  4171                           
  4172                           ;ax25.c: 69: return;
  4173  0F2A  0020               	movlb	0	; select bank0
  4174  0F2B  0826               	movf	Ax25_Send_Sync@byte,w
  4175  0F2C  00A0               	movwf	??_Ax25_Send_Sync
  4176  0F2D  0A27               	incf	Ax25_Send_Sync@i,w
  4177  0F2E  2F30               	goto	u1614
  4178  0F2F                     u1615:	
  4179  0F2F  36A0               	lsrf	??_Ax25_Send_Sync,f
  4180  0F30                     u1614:	
  4181  0F30  0B89               	decfsz	9,f
  4182  0F31  2F2F               	goto	u1615
  4183  0F32  1C20               	btfss	??_Ax25_Send_Sync,0
  4184  0F33  2F56               	goto	l1985
  4185                           
  4186                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4187  0F34  3001               	movlw	1
  4188  0F35  00A0               	movwf	??_Ax25_Send_Sync
  4189  0F36  0879               	movf	_modem_packet_size,w
  4190  0F37  3907               	andlw	7
  4191  0F38  0A89               	incf	9,f
  4192  0F39  2F3B               	goto	u1634
  4193  0F3A                     u1635:	
  4194  0F3A  35A0               	lslf	??_Ax25_Send_Sync,f
  4195  0F3B                     u1634:	
  4196  0F3B  0B89               	decfsz	9,f
  4197  0F3C  2F3A               	goto	u1635
  4198  0F3D  0820               	movf	??_Ax25_Send_Sync,w
  4199  0F3E  00A1               	movwf	??_Ax25_Send_Sync+1
  4200  0F3F  0879               	movf	_modem_packet_size,w
  4201  0F40  00A2               	movwf	??_Ax25_Send_Sync+2
  4202  0F41  087A               	movf	_modem_packet_size+1,w
  4203  0F42  00A3               	movwf	??_Ax25_Send_Sync+3
  4204  0F43  087B               	movf	_modem_packet_size+2,w
  4205  0F44  00A4               	movwf	??_Ax25_Send_Sync+4
  4206  0F45  087C               	movf	_modem_packet_size+3,w
  4207  0F46  00A5               	movwf	??_Ax25_Send_Sync+5
  4208  0F47  3003               	movlw	3
  4209  0F48                     u1645:	
  4210  0F48  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  4211  0F49  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  4212  0F4A  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  4213  0F4B  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  4214  0F4C  0B89               	decfsz	9,f
  4215  0F4D  2F48               	goto	u1645
  4216  0F4E  0822               	movf	??_Ax25_Send_Sync+2,w
  4217  0F4F  3EA0               	addlw	_modem_packet& (0+255)
  4218  0F50  0086               	movwf	6
  4219  0F51  3001               	movlw	1	; select bank3/4
  4220  0F52  0087               	movwf	7
  4221  0F53  0821               	movf	??_Ax25_Send_Sync+1,w
  4222  0F54  0481               	iorwf	1,f
  4223  0F55  2F78               	goto	l1987
  4224  0F56                     l1985:	
  4225                           
  4226                           ;ax25.c: 72: else
  4227                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4228  0F56  3001               	movlw	1
  4229  0F57  00A0               	movwf	??_Ax25_Send_Sync
  4230  0F58  0879               	movf	_modem_packet_size,w
  4231  0F59  3907               	andlw	7
  4232  0F5A  0A89               	incf	9,f
  4233  0F5B  2F5D               	goto	u1654
  4234  0F5C                     u1655:	
  4235  0F5C  35A0               	lslf	??_Ax25_Send_Sync,f
  4236  0F5D                     u1654:	
  4237  0F5D  0B89               	decfsz	9,f
  4238  0F5E  2F5C               	goto	u1655
  4239  0F5F  0820               	movf	??_Ax25_Send_Sync,w
  4240  0F60  3AFF               	xorlw	255
  4241  0F61  00A1               	movwf	??_Ax25_Send_Sync+1
  4242  0F62  0879               	movf	_modem_packet_size,w
  4243  0F63  00A2               	movwf	??_Ax25_Send_Sync+2
  4244  0F64  087A               	movf	_modem_packet_size+1,w
  4245  0F65  00A3               	movwf	??_Ax25_Send_Sync+3
  4246  0F66  087B               	movf	_modem_packet_size+2,w
  4247  0F67  00A4               	movwf	??_Ax25_Send_Sync+4
  4248  0F68  087C               	movf	_modem_packet_size+3,w
  4249  0F69  00A5               	movwf	??_Ax25_Send_Sync+5
  4250  0F6A  3003               	movlw	3
  4251  0F6B                     u1665:	
  4252  0F6B  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  4253  0F6C  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  4254  0F6D  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  4255  0F6E  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  4256  0F6F  0B89               	decfsz	9,f
  4257  0F70  2F6B               	goto	u1665
  4258  0F71  0822               	movf	??_Ax25_Send_Sync+2,w
  4259  0F72  3EA0               	addlw	_modem_packet& (0+255)
  4260  0F73  0086               	movwf	6
  4261  0F74  3001               	movlw	1	; select bank3/4
  4262  0F75  0087               	movwf	7
  4263  0F76  0821               	movf	??_Ax25_Send_Sync+1,w
  4264  0F77  0581               	andwf	1,f
  4265  0F78                     l1987:	
  4266  0F78  3001               	movlw	1
  4267  0F79  07A7               	addwf	Ax25_Send_Sync@i,f
  4268  0F7A  3000               	movlw	0
  4269  0F7B  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  4270  0F7C  3001               	movlw	1
  4271  0F7D  07F9               	addwf	_modem_packet_size,f
  4272  0F7E  3000               	movlw	0
  4273  0F7F  3DFA               	addwfc	_modem_packet_size+1,f
  4274  0F80  3000               	movlw	0
  4275  0F81  3DFB               	addwfc	_modem_packet_size+2,f
  4276  0F82  3000               	movlw	0
  4277  0F83  3DFC               	addwfc	_modem_packet_size+3,f
  4278  0F84  2F10               	goto	L2
  4279  0F85                     __end_of_Ax25_Send_Sync:	
  4280                           
  4281                           	psect	text24
  4282  0CC3                     __ptext24:	
  4283 ;; *************** function _Ax25_Send_Footer *****************
  4284 ;; Defined at:
  4285 ;;		line 141 in file "ax25.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  final_crc       2   12[BANK0 ] unsigned int 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;		None               void
  4292 ;; Registers used:
  4293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4300 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4302 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;Total ram usage:        2 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    5
  4306 ;; This function calls:
  4307 ;;		_Ax25_Send_Flag
  4308 ;;		_Send_Byte
  4309 ;; This function is called by:
  4310 ;;		_main
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           
  4315                           ;psect for function _Ax25_Send_Footer
  4316  0CC3                     _Ax25_Send_Footer:	
  4317                           
  4318                           ;ax25.c: 144: uint16_t final_crc = crc;
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4322  0CC3  0021               	movlb	1	; select bank1
  4323  0CC4  0848               	movf	(_crc+1)^(0+128),w
  4324  0CC5  0020               	movlb	0	; select bank0
  4325  0CC6  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  4326  0CC7  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  4327  0CC8  0021               	movlb	1	; select bank1
  4328  0CC9  0847               	movf	_crc^(0+128),w
  4329  0CCA  0020               	movlb	0	; select bank0
  4330  0CCB  01AC               	clrf	Ax25_Send_Footer@final_crc
  4331  0CCC  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  4332                           
  4333                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  4334  0CCD  092C               	comf	Ax25_Send_Footer@final_crc,w
  4335  0CCE  3186  2630  318C   	fcall	_Send_Byte
  4336                           
  4337                           ;ax25.c: 148: final_crc >>= 8;
  4338  0CD1  3008               	movlw	8
  4339  0CD2  0020               	movlb	0	; select bank0
  4340  0CD3                     u1985:	
  4341  0CD3  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  4342  0CD4  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  4343  0CD5  0B89               	decfsz	9,f
  4344  0CD6  2CD3               	goto	u1985
  4345                           
  4346                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  4347  0CD7  092C               	comf	Ax25_Send_Footer@final_crc,w
  4348  0CD8  3186  2630  318C   	fcall	_Send_Byte
  4349                           
  4350                           ;ax25.c: 152: Ax25_Send_Flag();
  4351  0CDB  3187  2774         	fcall	_Ax25_Send_Flag
  4352  0CDD  0008               	return
  4353  0CDE                     __end_of_Ax25_Send_Footer:	
  4354                           
  4355                           	psect	text25
  4356  0630                     __ptext25:	
  4357 ;; *************** function _Send_Byte *****************
  4358 ;; Defined at:
  4359 ;;		line 32 in file "ax25.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  byte            1    wreg     unsigned char 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  byte            1    9[BANK0 ] unsigned char 
  4364 ;;  i               2   10[BANK0 ] int 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;		None               void
  4367 ;; Registers used:
  4368 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;Total ram usage:        9 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    4
  4381 ;; This function calls:
  4382 ;;		_Update_Crc
  4383 ;; This function is called by:
  4384 ;;		_Ax25_Send_Byte
  4385 ;;		_Ax25_Send_Header
  4386 ;;		_Ax25_Send_Footer
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           
  4391                           ;psect for function _Send_Byte
  4392  0630                     _Send_Byte:	
  4393                           
  4394                           ;incstack = 0
  4395                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4396                           ;Send_Byte@byte stored from wreg
  4397  0630  0020               	movlb	0	; select bank0
  4398  0631  00A9               	movwf	Send_Byte@byte
  4399                           
  4400                           ;ax25.c: 34: int i;
  4401                           ;ax25.c: 35: for (i = 0; i < 8; i++) {
  4402  0632  01AA               	clrf	Send_Byte@i
  4403  0633  01AB               	clrf	Send_Byte@i+1
  4404  0634                     L3:	
  4405  0634  082B               	movf	Send_Byte@i+1,w
  4406  0635  3A80               	xorlw	128
  4407  0636  00A3               	movwf	??_Send_Byte
  4408  0637  3080               	movlw	128
  4409  0638  0223               	subwf	??_Send_Byte,w
  4410  0639  3008               	movlw	8
  4411  063A  1903               	btfsc	3,2
  4412  063B  022A               	subwf	Send_Byte@i,w
  4413  063C  1803               	btfsc	3,0
  4414  063D  0008               	return
  4415                           
  4416                           ;ax25.c: 36: Update_Crc((byte >> i) & 1);
  4417  063E  0020               	movlb	0	; select bank0
  4418  063F  0829               	movf	Send_Byte@byte,w
  4419  0640  00A3               	movwf	??_Send_Byte
  4420  0641  0A2A               	incf	Send_Byte@i,w
  4421  0642  2E44               	goto	u1474
  4422  0643                     u1475:	
  4423  0643  36A3               	lsrf	??_Send_Byte,f
  4424  0644                     u1474:	
  4425  0644  0B89               	decfsz	9,f
  4426  0645  2E43               	goto	u1475
  4427  0646  0823               	movf	??_Send_Byte,w
  4428  0647  3901               	andlw	1
  4429  0648  318D  25B9  3186   	fcall	_Update_Crc
  4430                           
  4431                           ;ax25.c: 37: if ((byte >> i) & 1) {
  4432  064B  0020               	movlb	0	; select bank0
  4433  064C  0829               	movf	Send_Byte@byte,w
  4434  064D  00A3               	movwf	??_Send_Byte
  4435  064E  0A2A               	incf	Send_Byte@i,w
  4436  064F  2E51               	goto	u1484
  4437  0650                     u1485:	
  4438  0650  36A3               	lsrf	??_Send_Byte,f
  4439  0651                     u1484:	
  4440  0651  0B89               	decfsz	9,f
  4441  0652  2E50               	goto	u1485
  4442  0653  1C23               	btfss	??_Send_Byte,0
  4443  0654  2EA0               	goto	l1901
  4444                           
  4445                           ;ax25.c: 39: if (modem_packet_size >= (64 * 8))
  4446  0655  3000               	movlw	0
  4447  0656  027C               	subwf	_modem_packet_size+3,w
  4448  0657  1D03               	skipz
  4449  0658  2E63               	goto	u1505
  4450  0659  3000               	movlw	0
  4451  065A  027B               	subwf	_modem_packet_size+2,w
  4452  065B  1D03               	skipz
  4453  065C  2E63               	goto	u1505
  4454  065D  3002               	movlw	2
  4455  065E  027A               	subwf	_modem_packet_size+1,w
  4456  065F  1D03               	skipz
  4457  0660  2E63               	goto	u1505
  4458  0661  3000               	movlw	0
  4459  0662  0279               	subwf	_modem_packet_size,w
  4460  0663                     u1505:	
  4461  0663  1803               	btfsc	3,0
  4462  0664  0008               	return
  4463                           
  4464                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4465                           
  4466                           ;ax25.c: 40: return;
  4467  0665  3001               	movlw	1
  4468  0666  00A3               	movwf	??_Send_Byte
  4469  0667  0879               	movf	_modem_packet_size,w
  4470  0668  3907               	andlw	7
  4471  0669  0A89               	incf	9,f
  4472  066A  2E6C               	goto	u1514
  4473  066B                     u1515:	
  4474  066B  35A3               	lslf	??_Send_Byte,f
  4475  066C                     u1514:	
  4476  066C  0B89               	decfsz	9,f
  4477  066D  2E6B               	goto	u1515
  4478  066E  0823               	movf	??_Send_Byte,w
  4479  066F  00A4               	movwf	??_Send_Byte+1
  4480  0670  0879               	movf	_modem_packet_size,w
  4481  0671  00A5               	movwf	??_Send_Byte+2
  4482  0672  087A               	movf	_modem_packet_size+1,w
  4483  0673  00A6               	movwf	??_Send_Byte+3
  4484  0674  087B               	movf	_modem_packet_size+2,w
  4485  0675  00A7               	movwf	??_Send_Byte+4
  4486  0676  087C               	movf	_modem_packet_size+3,w
  4487  0677  00A8               	movwf	??_Send_Byte+5
  4488  0678  3003               	movlw	3
  4489  0679                     u1525:	
  4490  0679  36A8               	lsrf	??_Send_Byte+5,f
  4491  067A  0CA7               	rrf	??_Send_Byte+4,f
  4492  067B  0CA6               	rrf	??_Send_Byte+3,f
  4493  067C  0CA5               	rrf	??_Send_Byte+2,f
  4494  067D  0B89               	decfsz	9,f
  4495  067E  2E79               	goto	u1525
  4496  067F  0825               	movf	??_Send_Byte+2,w
  4497  0680  3EA0               	addlw	_modem_packet& (0+255)
  4498  0681  0086               	movwf	6
  4499  0682  3001               	movlw	1	; select bank3/4
  4500  0683  0087               	movwf	7
  4501  0684  0824               	movf	??_Send_Byte+1,w
  4502  0685  0481               	iorwf	1,f
  4503                           
  4504                           ;ax25.c: 44: modem_packet_size++;
  4505  0686  3001               	movlw	1
  4506  0687  07F9               	addwf	_modem_packet_size,f
  4507  0688  3000               	movlw	0
  4508  0689  3DFA               	addwfc	_modem_packet_size+1,f
  4509  068A  3000               	movlw	0
  4510  068B  3DFB               	addwfc	_modem_packet_size+2,f
  4511  068C  3000               	movlw	0
  4512  068D  3DFC               	addwfc	_modem_packet_size+3,f
  4513                           
  4514                           ;ax25.c: 45: if (++ones_in_a_row < 5) continue;
  4515  068E  3001               	movlw	1
  4516  068F  0021               	movlb	1	; select bank1
  4517  0690  07C9               	addwf	_ones_in_a_row^(0+128),f
  4518  0691  3000               	movlw	0
  4519  0692  3DCA               	addwfc	(_ones_in_a_row+1)^(0+128),f
  4520  0693  084A               	movf	(_ones_in_a_row+1)^(0+128),w
  4521  0694  3A80               	xorlw	128
  4522  0695  0020               	movlb	0	; select bank0
  4523  0696  00A3               	movwf	??_Send_Byte
  4524  0697  3080               	movlw	128
  4525  0698  0223               	subwf	??_Send_Byte,w
  4526  0699  1D03               	skipz
  4527  069A  2E9E               	goto	u1535
  4528  069B  3005               	movlw	5
  4529  069C  0021               	movlb	1	; select bank1
  4530  069D  0249               	subwf	_ones_in_a_row^(0+128),w
  4531  069E                     u1535:	
  4532  069E  1C03               	btfss	3,0
  4533  069F  2EDE               	goto	l1911
  4534  06A0                     l1901:	
  4535                           
  4536                           ;ax25.c: 46: }
  4537                           ;ax25.c: 48: if (modem_packet_size >= (64 * 8))
  4538  06A0  3000               	movlw	0
  4539  06A1  027C               	subwf	_modem_packet_size+3,w
  4540  06A2  1D03               	skipz
  4541  06A3  2EAE               	goto	u1545
  4542  06A4  3000               	movlw	0
  4543  06A5  027B               	subwf	_modem_packet_size+2,w
  4544  06A6  1D03               	skipz
  4545  06A7  2EAE               	goto	u1545
  4546  06A8  3002               	movlw	2
  4547  06A9  027A               	subwf	_modem_packet_size+1,w
  4548  06AA  1D03               	skipz
  4549  06AB  2EAE               	goto	u1545
  4550  06AC  3000               	movlw	0
  4551  06AD  0279               	subwf	_modem_packet_size,w
  4552  06AE                     u1545:	
  4553  06AE  1803               	btfsc	3,0
  4554  06AF  0008               	return
  4555                           
  4556                           ;ax25.c: 50: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4557                           
  4558                           ;ax25.c: 49: return;
  4559  06B0  3001               	movlw	1
  4560  06B1  0020               	movlb	0	; select bank0
  4561  06B2  00A3               	movwf	??_Send_Byte
  4562  06B3  0879               	movf	_modem_packet_size,w
  4563  06B4  3907               	andlw	7
  4564  06B5  0A89               	incf	9,f
  4565  06B6  2EB8               	goto	u1554
  4566  06B7                     u1555:	
  4567  06B7  35A3               	lslf	??_Send_Byte,f
  4568  06B8                     u1554:	
  4569  06B8  0B89               	decfsz	9,f
  4570  06B9  2EB7               	goto	u1555
  4571  06BA  0823               	movf	??_Send_Byte,w
  4572  06BB  3AFF               	xorlw	255
  4573  06BC  00A4               	movwf	??_Send_Byte+1
  4574  06BD  0879               	movf	_modem_packet_size,w
  4575  06BE  00A5               	movwf	??_Send_Byte+2
  4576  06BF  087A               	movf	_modem_packet_size+1,w
  4577  06C0  00A6               	movwf	??_Send_Byte+3
  4578  06C1  087B               	movf	_modem_packet_size+2,w
  4579  06C2  00A7               	movwf	??_Send_Byte+4
  4580  06C3  087C               	movf	_modem_packet_size+3,w
  4581  06C4  00A8               	movwf	??_Send_Byte+5
  4582  06C5  3003               	movlw	3
  4583  06C6                     u1565:	
  4584  06C6  36A8               	lsrf	??_Send_Byte+5,f
  4585  06C7  0CA7               	rrf	??_Send_Byte+4,f
  4586  06C8  0CA6               	rrf	??_Send_Byte+3,f
  4587  06C9  0CA5               	rrf	??_Send_Byte+2,f
  4588  06CA  0B89               	decfsz	9,f
  4589  06CB  2EC6               	goto	u1565
  4590  06CC  0825               	movf	??_Send_Byte+2,w
  4591  06CD  3EA0               	addlw	_modem_packet& (0+255)
  4592  06CE  0086               	movwf	6
  4593  06CF  3001               	movlw	1	; select bank3/4
  4594  06D0  0087               	movwf	7
  4595  06D1  0824               	movf	??_Send_Byte+1,w
  4596  06D2  0581               	andwf	1,f
  4597                           
  4598                           ;ax25.c: 52: modem_packet_size++;
  4599  06D3  3001               	movlw	1
  4600  06D4  07F9               	addwf	_modem_packet_size,f
  4601  06D5  3000               	movlw	0
  4602  06D6  3DFA               	addwfc	_modem_packet_size+1,f
  4603  06D7  3000               	movlw	0
  4604  06D8  3DFB               	addwfc	_modem_packet_size+2,f
  4605  06D9  3000               	movlw	0
  4606  06DA  3DFC               	addwfc	_modem_packet_size+3,f
  4607                           
  4608                           ;ax25.c: 53: ones_in_a_row = 0;
  4609  06DB  0021               	movlb	1	; select bank1
  4610  06DC  01C9               	clrf	_ones_in_a_row^(0+128)
  4611  06DD  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  4612  06DE                     l1911:	
  4613  06DE  3001               	movlw	1
  4614  06DF  0020               	movlb	0	; select bank0
  4615  06E0  07AA               	addwf	Send_Byte@i,f
  4616  06E1  3000               	movlw	0
  4617  06E2  3DAB               	addwfc	Send_Byte@i+1,f
  4618  06E3  2E34               	goto	L3
  4619  06E4                     __end_of_Send_Byte:	
  4620                           
  4621                           	psect	text26
  4622  0DB9                     __ptext26:	
  4623 ;; *************** function _Update_Crc *****************
  4624 ;; Defined at:
  4625 ;;		line 23 in file "ax25.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  input_bit       1    wreg     unsigned char 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  input_bit       1    2[BANK0 ] unsigned char 
  4630 ;; Return value:  Size  Location     Type
  4631 ;;		None               void
  4632 ;; Registers used:
  4633 ;;		wreg, status,2, status,0
  4634 ;; Tracked objects:
  4635 ;;		On entry : 0/0
  4636 ;;		On exit  : 0/0
  4637 ;;		Unchanged: 0/0
  4638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;Total ram usage:        3 bytes
  4644 ;; Hardware stack levels used:    1
  4645 ;; Hardware stack levels required when called:    3
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_Send_Byte
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           
  4654                           ;psect for function _Update_Crc
  4655  0DB9                     _Update_Crc:	
  4656                           
  4657                           ;incstack = 0
  4658                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  4659                           ;Update_Crc@input_bit stored from wreg
  4660  0DB9  0020               	movlb	0	; select bank0
  4661  0DBA  00A2               	movwf	Update_Crc@input_bit
  4662                           
  4663                           ;ax25.c: 25: crc ^= input_bit;
  4664  0DBB  0822               	movf	Update_Crc@input_bit,w
  4665  0DBC  00A0               	movwf	??_Update_Crc
  4666  0DBD  01A1               	clrf	??_Update_Crc+1
  4667  0DBE  0820               	movf	??_Update_Crc,w
  4668  0DBF  0021               	movlb	1	; select bank1
  4669  0DC0  06C7               	xorwf	_crc^(0+128),f
  4670  0DC1  0020               	movlb	0	; select bank0
  4671  0DC2  0821               	movf	??_Update_Crc+1,w
  4672  0DC3  0021               	movlb	1	; select bank1
  4673  0DC4  06C8               	xorwf	(_crc+1)^(0+128),f
  4674                           
  4675                           ;ax25.c: 26: if (crc & 1)
  4676  0DC5  1C47               	btfss	_crc^(0+128),0
  4677  0DC6  2DDA               	goto	l1861
  4678                           
  4679                           ;ax25.c: 27: crc = (crc >> 1) ^ 0x8408;
  4680  0DC7  0848               	movf	(_crc+1)^(0+128),w
  4681  0DC8  0020               	movlb	0	; select bank0
  4682  0DC9  00A1               	movwf	??_Update_Crc+1
  4683  0DCA  0021               	movlb	1	; select bank1
  4684  0DCB  0847               	movf	_crc^(0+128),w
  4685  0DCC  0020               	movlb	0	; select bank0
  4686  0DCD  00A0               	movwf	??_Update_Crc
  4687  0DCE  36A1               	lsrf	??_Update_Crc+1,f
  4688  0DCF  0CA0               	rrf	??_Update_Crc,f
  4689  0DD0  3008               	movlw	8
  4690  0DD1  0620               	xorwf	??_Update_Crc,w
  4691  0DD2  0021               	movlb	1	; select bank1
  4692  0DD3  00C7               	movwf	_crc^(0+128)
  4693  0DD4  3084               	movlw	132
  4694  0DD5  0020               	movlb	0	; select bank0
  4695  0DD6  0621               	xorwf	??_Update_Crc+1,w
  4696  0DD7  0021               	movlb	1	; select bank1
  4697  0DD8  00C8               	movwf	(_crc+1)^(0+128)
  4698  0DD9  0008               	return
  4699  0DDA                     l1861:	
  4700                           
  4701                           ;ax25.c: 28: else
  4702                           ;ax25.c: 29: crc = crc >> 1;
  4703  0DDA  0848               	movf	(_crc+1)^(0+128),w
  4704  0DDB  0020               	movlb	0	; select bank0
  4705  0DDC  00A1               	movwf	??_Update_Crc+1
  4706  0DDD  0021               	movlb	1	; select bank1
  4707  0DDE  0847               	movf	_crc^(0+128),w
  4708  0DDF  0020               	movlb	0	; select bank0
  4709  0DE0  00A0               	movwf	??_Update_Crc
  4710  0DE1  36A1               	lsrf	??_Update_Crc+1,f
  4711  0DE2  0CA0               	rrf	??_Update_Crc,f
  4712  0DE3  0820               	movf	??_Update_Crc,w
  4713  0DE4  0021               	movlb	1	; select bank1
  4714  0DE5  00C7               	movwf	_crc^(0+128)
  4715  0DE6  0020               	movlb	0	; select bank0
  4716  0DE7  0821               	movf	??_Update_Crc+1,w
  4717  0DE8  0021               	movlb	1	; select bank1
  4718  0DE9  00C8               	movwf	(_crc+1)^(0+128)
  4719  0DEA  0008               	return
  4720  0DEB                     __end_of_Update_Crc:	
  4721                           
  4722                           	psect	text27
  4723  0774                     __ptext27:	
  4724 ;; *************** function _Ax25_Send_Flag *****************
  4725 ;; Defined at:
  4726 ;;		line 77 in file "ax25.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  i               2    7[BANK0 ] int 
  4731 ;;  byte            1    6[BANK0 ] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;		None               void
  4734 ;; Registers used:
  4735 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4744 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4745 ;;Total ram usage:        9 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; Hardware stack levels required when called:    3
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_Ax25_Send_Header
  4752 ;;		_Ax25_Send_Footer
  4753 ;; This function uses a non-reentrant model
  4754 ;;
  4755                           
  4756                           
  4757                           ;psect for function _Ax25_Send_Flag
  4758  0774                     _Ax25_Send_Flag:	
  4759                           
  4760                           ;ax25.c: 79: uint8_t byte = 0x7e;
  4761                           
  4762                           ;incstack = 0
  4763                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  4764  0774  307E               	movlw	126
  4765  0775  0020               	movlb	0	; select bank0
  4766  0776  00A0               	movwf	??_Ax25_Send_Flag
  4767  0777  0820               	movf	??_Ax25_Send_Flag,w
  4768  0778  00A6               	movwf	Ax25_Send_Flag@byte
  4769                           
  4770                           ;ax25.c: 80: int i;
  4771                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  4772  0779  01A7               	clrf	Ax25_Send_Flag@i
  4773  077A  01A8               	clrf	Ax25_Send_Flag@i+1
  4774  077B                     L4:	
  4775  077B  0828               	movf	Ax25_Send_Flag@i+1,w
  4776  077C  3A80               	xorlw	128
  4777  077D  00A0               	movwf	??_Ax25_Send_Flag
  4778  077E  3080               	movlw	128
  4779  077F  0220               	subwf	??_Ax25_Send_Flag,w
  4780  0780  3008               	movlw	8
  4781  0781  1903               	btfsc	3,2
  4782  0782  0227               	subwf	Ax25_Send_Flag@i,w
  4783  0783  1803               	btfsc	3,0
  4784  0784  0008               	return
  4785                           
  4786                           ;ax25.c: 82: if (modem_packet_size >= 64 * 8)
  4787  0785  3000               	movlw	0
  4788  0786  027C               	subwf	_modem_packet_size+3,w
  4789  0787  1D03               	skipz
  4790  0788  2F93               	goto	u1695
  4791  0789  3000               	movlw	0
  4792  078A  027B               	subwf	_modem_packet_size+2,w
  4793  078B  1D03               	skipz
  4794  078C  2F93               	goto	u1695
  4795  078D  3002               	movlw	2
  4796  078E  027A               	subwf	_modem_packet_size+1,w
  4797  078F  1D03               	skipz
  4798  0790  2F93               	goto	u1695
  4799  0791  3000               	movlw	0
  4800  0792  0279               	subwf	_modem_packet_size,w
  4801  0793                     u1695:	
  4802  0793  1803               	btfsc	3,0
  4803  0794  0008               	return
  4804                           
  4805                           ;ax25.c: 84: if ((byte >> i) & 1)
  4806                           
  4807                           ;ax25.c: 83: return;
  4808  0795  0020               	movlb	0	; select bank0
  4809  0796  0826               	movf	Ax25_Send_Flag@byte,w
  4810  0797  00A0               	movwf	??_Ax25_Send_Flag
  4811  0798  0A27               	incf	Ax25_Send_Flag@i,w
  4812  0799  2F9B               	goto	u1704
  4813  079A                     u1705:	
  4814  079A  36A0               	lsrf	??_Ax25_Send_Flag,f
  4815  079B                     u1704:	
  4816  079B  0B89               	decfsz	9,f
  4817  079C  2F9A               	goto	u1705
  4818  079D  1C20               	btfss	??_Ax25_Send_Flag,0
  4819  079E  2FC1               	goto	l2009
  4820                           
  4821                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4822  079F  3001               	movlw	1
  4823  07A0  00A0               	movwf	??_Ax25_Send_Flag
  4824  07A1  0879               	movf	_modem_packet_size,w
  4825  07A2  3907               	andlw	7
  4826  07A3  0A89               	incf	9,f
  4827  07A4  2FA6               	goto	u1724
  4828  07A5                     u1725:	
  4829  07A5  35A0               	lslf	??_Ax25_Send_Flag,f
  4830  07A6                     u1724:	
  4831  07A6  0B89               	decfsz	9,f
  4832  07A7  2FA5               	goto	u1725
  4833  07A8  0820               	movf	??_Ax25_Send_Flag,w
  4834  07A9  00A1               	movwf	??_Ax25_Send_Flag+1
  4835  07AA  0879               	movf	_modem_packet_size,w
  4836  07AB  00A2               	movwf	??_Ax25_Send_Flag+2
  4837  07AC  087A               	movf	_modem_packet_size+1,w
  4838  07AD  00A3               	movwf	??_Ax25_Send_Flag+3
  4839  07AE  087B               	movf	_modem_packet_size+2,w
  4840  07AF  00A4               	movwf	??_Ax25_Send_Flag+4
  4841  07B0  087C               	movf	_modem_packet_size+3,w
  4842  07B1  00A5               	movwf	??_Ax25_Send_Flag+5
  4843  07B2  3003               	movlw	3
  4844  07B3                     u1735:	
  4845  07B3  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4846  07B4  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4847  07B5  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4848  07B6  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4849  07B7  0B89               	decfsz	9,f
  4850  07B8  2FB3               	goto	u1735
  4851  07B9  0822               	movf	??_Ax25_Send_Flag+2,w
  4852  07BA  3EA0               	addlw	_modem_packet& (0+255)
  4853  07BB  0086               	movwf	6
  4854  07BC  3001               	movlw	1	; select bank3/4
  4855  07BD  0087               	movwf	7
  4856  07BE  0821               	movf	??_Ax25_Send_Flag+1,w
  4857  07BF  0481               	iorwf	1,f
  4858  07C0  2FE3               	goto	l2011
  4859  07C1                     l2009:	
  4860                           
  4861                           ;ax25.c: 86: else
  4862                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4863  07C1  3001               	movlw	1
  4864  07C2  00A0               	movwf	??_Ax25_Send_Flag
  4865  07C3  0879               	movf	_modem_packet_size,w
  4866  07C4  3907               	andlw	7
  4867  07C5  0A89               	incf	9,f
  4868  07C6  2FC8               	goto	u1744
  4869  07C7                     u1745:	
  4870  07C7  35A0               	lslf	??_Ax25_Send_Flag,f
  4871  07C8                     u1744:	
  4872  07C8  0B89               	decfsz	9,f
  4873  07C9  2FC7               	goto	u1745
  4874  07CA  0820               	movf	??_Ax25_Send_Flag,w
  4875  07CB  3AFF               	xorlw	255
  4876  07CC  00A1               	movwf	??_Ax25_Send_Flag+1
  4877  07CD  0879               	movf	_modem_packet_size,w
  4878  07CE  00A2               	movwf	??_Ax25_Send_Flag+2
  4879  07CF  087A               	movf	_modem_packet_size+1,w
  4880  07D0  00A3               	movwf	??_Ax25_Send_Flag+3
  4881  07D1  087B               	movf	_modem_packet_size+2,w
  4882  07D2  00A4               	movwf	??_Ax25_Send_Flag+4
  4883  07D3  087C               	movf	_modem_packet_size+3,w
  4884  07D4  00A5               	movwf	??_Ax25_Send_Flag+5
  4885  07D5  3003               	movlw	3
  4886  07D6                     u1755:	
  4887  07D6  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4888  07D7  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4889  07D8  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4890  07D9  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4891  07DA  0B89               	decfsz	9,f
  4892  07DB  2FD6               	goto	u1755
  4893  07DC  0822               	movf	??_Ax25_Send_Flag+2,w
  4894  07DD  3EA0               	addlw	_modem_packet& (0+255)
  4895  07DE  0086               	movwf	6
  4896  07DF  3001               	movlw	1	; select bank3/4
  4897  07E0  0087               	movwf	7
  4898  07E1  0821               	movf	??_Ax25_Send_Flag+1,w
  4899  07E2  0581               	andwf	1,f
  4900  07E3                     l2011:	
  4901  07E3  3001               	movlw	1
  4902  07E4  07A7               	addwf	Ax25_Send_Flag@i,f
  4903  07E5  3000               	movlw	0
  4904  07E6  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  4905  07E7  3001               	movlw	1
  4906  07E8  07F9               	addwf	_modem_packet_size,f
  4907  07E9  3000               	movlw	0
  4908  07EA  3DFA               	addwfc	_modem_packet_size+1,f
  4909  07EB  3000               	movlw	0
  4910  07EC  3DFB               	addwfc	_modem_packet_size+2,f
  4911  07ED  3000               	movlw	0
  4912  07EE  3DFC               	addwfc	_modem_packet_size+3,f
  4913  07EF  2F7B               	goto	L4
  4914  07F0                     __end_of_Ax25_Send_Flag:	
  4915                           
  4916                           	psect	text28
  4917  0F85                     __ptext28:	
  4918 ;; *************** function _Adf_Lock *****************
  4919 ;; Defined at:
  4920 ;;		line 231 in file "adf7012.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  bias            2   10[BANK1 ] int 
  4925 ;;  adj             2    8[BANK1 ] int 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  1    wreg      unsigned char 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4937 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4938 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4939 ;;Total ram usage:        6 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:    8
  4942 ;; This function calls:
  4943 ;;		_Adf_Locked
  4944 ;;		_Adf_Write_Register_Three
  4945 ;;		_Adf_Write_Register_Zero
  4946 ;;		_Delay_ms
  4947 ;; This function is called by:
  4948 ;;		_main
  4949 ;; This function uses a non-reentrant model
  4950 ;;
  4951                           
  4952                           
  4953                           ;psect for function _Adf_Lock
  4954  0F85                     _Adf_Lock:	
  4955                           
  4956                           ;adf7012.c: 234: Delay_ms(200);
  4957                           
  4958                           ;incstack = 0
  4959                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4960  0F85  30C8               	movlw	200
  4961  0F86  0020               	movlb	0	; select bank0
  4962  0F87  00A0               	movwf	Delay_ms@time_to_delay
  4963  0F88  3000               	movlw	0
  4964  0F89  00A1               	movwf	Delay_ms@time_to_delay+1
  4965  0F8A  318D  251A  318F   	fcall	_Delay_ms
  4966                           
  4967                           ;adf7012.c: 235: int adj = adf_config.r0.vco_adjust;
  4968  0F8D  0021               	movlb	1	; select bank1
  4969  0F8E  0828               	movf	(_adf_config^(0+128)+8),w
  4970  0F8F  0020               	movlb	0	; select bank0
  4971  0F90  00EB               	movwf	??_Adf_Lock
  4972  0F91  01EC               	clrf	??_Adf_Lock+1
  4973  0F92  086B               	movf	??_Adf_Lock,w
  4974  0F93  0021               	movlb	1	; select bank1
  4975  0F94  00DB               	movwf	Adf_Lock@adj^(0+128)
  4976  0F95  0020               	movlb	0	; select bank0
  4977  0F96  086C               	movf	??_Adf_Lock+1,w
  4978  0F97  0021               	movlb	1	; select bank1
  4979  0F98  00DC               	movwf	(Adf_Lock@adj+1)^(0+128)
  4980                           
  4981                           ;adf7012.c: 236: int bias = adf_config.r3.vco_bias;
  4982  0F99  0843               	movf	(_adf_config^(0+128)+35),w
  4983  0F9A  0020               	movlb	0	; select bank0
  4984  0F9B  00EB               	movwf	??_Adf_Lock
  4985  0F9C  01EC               	clrf	??_Adf_Lock+1
  4986  0F9D  086B               	movf	??_Adf_Lock,w
  4987  0F9E  0021               	movlb	1	; select bank1
  4988  0F9F  00DD               	movwf	Adf_Lock@bias^(0+128)
  4989  0FA0  0020               	movlb	0	; select bank0
  4990  0FA1  086C               	movf	??_Adf_Lock+1,w
  4991  0FA2  0021               	movlb	1	; select bank1
  4992  0FA3  00DE               	movwf	(Adf_Lock@bias+1)^(0+128)
  4993                           
  4994                           ;adf7012.c: 238: adf_config.r3.pll_enable = 1;
  4995  0FA4  01B9               	clrf	(_adf_config^(0+128)+25)
  4996  0FA5  0AB9               	incf	(_adf_config^(0+128)+25),f
  4997                           
  4998                           ;adf7012.c: 240: adf_config.r3.muxout = 5;
  4999  0FA6  3005               	movlw	5
  5000  0FA7  0020               	movlb	0	; select bank0
  5001  0FA8  00EB               	movwf	??_Adf_Lock
  5002  0FA9  086B               	movf	??_Adf_Lock,w
  5003  0FAA  0021               	movlb	1	; select bank1
  5004  0FAB  00C1               	movwf	(_adf_config^(0+128)+33)
  5005                           
  5006                           ;adf7012.c: 243: Adf_Write_Register_Zero();
  5007  0FAC  3182  22CD  318F   	fcall	_Adf_Write_Register_Zero
  5008                           
  5009                           ;adf7012.c: 244: Adf_Write_Register_Three();
  5010  0FAF  3180  2089  318F   	fcall	_Adf_Write_Register_Three
  5011                           
  5012                           ;adf7012.c: 246: Delay_ms(5);
  5013  0FB2  3005               	movlw	5
  5014  0FB3  0020               	movlb	0	; select bank0
  5015  0FB4  00A0               	movwf	Delay_ms@time_to_delay
  5016  0FB5  3000               	movlw	0
  5017  0FB6  00A1               	movwf	Delay_ms@time_to_delay+1
  5018  0FB7  318D  251A  318F   	fcall	_Delay_ms
  5019  0FBA                     l2263:	
  5020                           ;adf7012.c: 248: while(!Adf_Locked()) {
  5021                           
  5022  0FBA  318B  23D5  318F   	fcall	_Adf_Locked
  5023  0FBD  3A00               	xorlw	0
  5024  0FBE  1D03               	btfss	3,2
  5025  0FBF  0008               	return
  5026                           
  5027                           ;adf7012.c: 250: adf_config.r0.vco_adjust = adj;
  5028  0FC0  0021               	movlb	1	; select bank1
  5029  0FC1  085B               	movf	Adf_Lock@adj^(0+128),w
  5030  0FC2  0020               	movlb	0	; select bank0
  5031  0FC3  00EB               	movwf	??_Adf_Lock
  5032  0FC4  086B               	movf	??_Adf_Lock,w
  5033  0FC5  0021               	movlb	1	; select bank1
  5034  0FC6  00A8               	movwf	(_adf_config^(0+128)+8)
  5035                           
  5036                           ;adf7012.c: 251: adf_config.r3.vco_bias = bias;
  5037  0FC7  085D               	movf	Adf_Lock@bias^(0+128),w
  5038  0FC8  0020               	movlb	0	; select bank0
  5039  0FC9  00EB               	movwf	??_Adf_Lock
  5040  0FCA  086B               	movf	??_Adf_Lock,w
  5041  0FCB  0021               	movlb	1	; select bank1
  5042  0FCC  00C3               	movwf	(_adf_config^(0+128)+35)
  5043                           
  5044                           ;adf7012.c: 253: adf_config.r3.muxout = 5;
  5045  0FCD  3005               	movlw	5
  5046  0FCE  0020               	movlb	0	; select bank0
  5047  0FCF  00EB               	movwf	??_Adf_Lock
  5048  0FD0  086B               	movf	??_Adf_Lock,w
  5049  0FD1  0021               	movlb	1	; select bank1
  5050  0FD2  00C1               	movwf	(_adf_config^(0+128)+33)
  5051                           
  5052                           ;adf7012.c: 255: Adf_Write_Register_Zero();
  5053  0FD3  3182  22CD  318F   	fcall	_Adf_Write_Register_Zero
  5054                           
  5055                           ;adf7012.c: 256: Adf_Write_Register_Three();
  5056  0FD6  3180  2089  318F   	fcall	_Adf_Write_Register_Three
  5057                           
  5058                           ;adf7012.c: 258: Delay_ms(5);
  5059  0FD9  3005               	movlw	5
  5060  0FDA  0020               	movlb	0	; select bank0
  5061  0FDB  00A0               	movwf	Delay_ms@time_to_delay
  5062  0FDC  3000               	movlw	0
  5063  0FDD  00A1               	movwf	Delay_ms@time_to_delay+1
  5064  0FDE  318D  251A  318F   	fcall	_Delay_ms
  5065                           
  5066                           ;adf7012.c: 259: if(++bias == 14) {
  5067  0FE1  3001               	movlw	1
  5068  0FE2  0021               	movlb	1	; select bank1
  5069  0FE3  07DD               	addwf	Adf_Lock@bias^(0+128),f
  5070  0FE4  3000               	movlw	0
  5071  0FE5  3DDE               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  5072  0FE6  300E               	movlw	14
  5073  0FE7  065D               	xorwf	Adf_Lock@bias^(0+128),w
  5074  0FE8  045E               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  5075  0FE9  1D03               	skipz
  5076  0FEA  2FBA               	goto	l2263
  5077                           
  5078                           ;adf7012.c: 260: bias = 1;
  5079  0FEB  3001               	movlw	1
  5080  0FEC  00DD               	movwf	Adf_Lock@bias^(0+128)
  5081  0FED  3000               	movlw	0
  5082  0FEE  00DE               	movwf	(Adf_Lock@bias^(0+128)+1)
  5083                           
  5084                           ;adf7012.c: 261: if(++adj == 4) {
  5085  0FEF  3001               	movlw	1
  5086  0FF0  07DB               	addwf	Adf_Lock@adj^(0+128),f
  5087  0FF1  3000               	movlw	0
  5088  0FF2  3DDC               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  5089  0FF3  3004               	movlw	4
  5090  0FF4  065B               	xorwf	Adf_Lock@adj^(0+128),w
  5091  0FF5  045C               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  5092  0FF6  1D03               	skipz
  5093  0FF7  2FBA               	goto	l2263
  5094                           
  5095                           ;adf7012.c: 263: adf_config.r0.vco_adjust = 0;
  5096  0FF8  01A8               	clrf	(_adf_config^(0+128)+8)
  5097                           
  5098                           ;adf7012.c: 264: adf_config.r3.vco_bias = 5;
  5099  0FF9  3005               	movlw	5
  5100  0FFA  0020               	movlb	0	; select bank0
  5101  0FFB  00EB               	movwf	??_Adf_Lock
  5102  0FFC  086B               	movf	??_Adf_Lock,w
  5103  0FFD  0021               	movlb	1	; select bank1
  5104  0FFE  00C3               	movwf	(_adf_config^(0+128)+35)
  5105                           
  5106                           ;adf7012.c: 266: return 0;
  5107                           ;	Return value of _Adf_Lock is never used
  5108  0FFF  0008               	return
  5109  1000                     __end_of_Adf_Lock:	
  5110                           ;adf7012.c: 267: }
  5111                           ;adf7012.c: 268: }
  5112                           ;adf7012.c: 269: }
  5113                           ;adf7012.c: 273: return 1;
  5114                           ;	Return value of _Adf_Lock is never used
  5115                           
  5116                           
  5117                           	psect	text29
  5118  02CD                     __ptext29:	
  5119 ;; *************** function _Adf_Write_Register_Zero *****************
  5120 ;; Defined at:
  5121 ;;		line 157 in file "adf7012.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  5126 ;;  reg             4   51[BANK0 ] unsigned long 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;		None               void
  5129 ;; Registers used:
  5130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5139 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5140 ;;Total ram usage:       36 bytes
  5141 ;; Hardware stack levels used:    1
  5142 ;; Hardware stack levels required when called:    7
  5143 ;; This function calls:
  5144 ;;		_Reverse_Array
  5145 ;;		_Write_Adf7012_Reg
  5146 ;;		_memcpy
  5147 ;; This function is called by:
  5148 ;;		_Adf_Write_Config
  5149 ;;		_Adf_Lock
  5150 ;; This function uses a non-reentrant model
  5151 ;;
  5152                           
  5153                           
  5154                           ;psect for function _Adf_Write_Register_Zero
  5155  02CD                     _Adf_Write_Register_Zero:	
  5156                           
  5157                           ;adf7012.c: 159: uint32_t reg =
  5158                           ;adf7012.c: 160: (0) |
  5159                           ;adf7012.c: 161: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  5160                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  5161                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  5162                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  5163                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  5164                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  5165                           
  5166                           ;incstack = 0
  5167                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5168  02CD  0021               	movlb	1	; select bank1
  5169  02CE  0829               	movf	(_adf_config^(0+128)+9),w
  5170  02CF  3903               	andlw	3
  5171  02D0  0020               	movlb	0	; select bank0
  5172  02D1  00B3               	movwf	??_Adf_Write_Register_Zero
  5173  02D2  01B4               	clrf	??_Adf_Write_Register_Zero+1
  5174  02D3  01B5               	clrf	??_Adf_Write_Register_Zero+2
  5175  02D4  01B6               	clrf	??_Adf_Write_Register_Zero+3
  5176  02D5  3019               	movlw	25
  5177  02D6                     u1145:	
  5178  02D6  35B3               	lslf	??_Adf_Write_Register_Zero,f
  5179  02D7  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  5180  02D8  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  5181  02D9  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  5182  02DA  0B89               	decfsz	9,f
  5183  02DB  2AD6               	goto	u1145
  5184  02DC  0021               	movlb	1	; select bank1
  5185  02DD  0828               	movf	(_adf_config^(0+128)+8),w
  5186  02DE  3903               	andlw	3
  5187  02DF  0020               	movlb	0	; select bank0
  5188  02E0  00B7               	movwf	??_Adf_Write_Register_Zero+4
  5189  02E1  01B8               	clrf	??_Adf_Write_Register_Zero+5
  5190  02E2  01B9               	clrf	??_Adf_Write_Register_Zero+6
  5191  02E3  01BA               	clrf	??_Adf_Write_Register_Zero+7
  5192  02E4  3017               	movlw	23
  5193  02E5                     u1155:	
  5194  02E5  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  5195  02E6  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  5196  02E7  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  5197  02E8  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  5198  02E9  0B89               	decfsz	9,f
  5199  02EA  2AE5               	goto	u1155
  5200  02EB  0021               	movlb	1	; select bank1
  5201  02EC  0827               	movf	(_adf_config^(0+128)+7),w
  5202  02ED  390F               	andlw	15
  5203  02EE  0020               	movlb	0	; select bank0
  5204  02EF  00BB               	movwf	??_Adf_Write_Register_Zero+8
  5205  02F0  01BC               	clrf	??_Adf_Write_Register_Zero+9
  5206  02F1  01BD               	clrf	??_Adf_Write_Register_Zero+10
  5207  02F2  01BE               	clrf	??_Adf_Write_Register_Zero+11
  5208  02F3  3013               	movlw	19
  5209  02F4                     u1165:	
  5210  02F4  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  5211  02F5  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  5212  02F6  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  5213  02F7  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  5214  02F8  0B89               	decfsz	9,f
  5215  02F9  2AF4               	goto	u1165
  5216  02FA  0021               	movlb	1	; select bank1
  5217  02FB  0826               	movf	(_adf_config^(0+128)+6),w
  5218  02FC  3901               	andlw	1
  5219  02FD  0020               	movlb	0	; select bank0
  5220  02FE  00BF               	movwf	??_Adf_Write_Register_Zero+12
  5221  02FF  01C0               	clrf	??_Adf_Write_Register_Zero+13
  5222  0300  01C1               	clrf	??_Adf_Write_Register_Zero+14
  5223  0301  01C2               	clrf	??_Adf_Write_Register_Zero+15
  5224  0302  3012               	movlw	18
  5225  0303                     u1175:	
  5226  0303  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  5227  0304  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  5228  0305  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  5229  0306  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  5230  0307  0B89               	decfsz	9,f
  5231  0308  2B03               	goto	u1175
  5232  0309  0021               	movlb	1	; select bank1
  5233  030A  0825               	movf	(_adf_config^(0+128)+5),w
  5234  030B  3901               	andlw	1
  5235  030C  0020               	movlb	0	; select bank0
  5236  030D  00C3               	movwf	??_Adf_Write_Register_Zero+16
  5237  030E  01C4               	clrf	??_Adf_Write_Register_Zero+17
  5238  030F  01C5               	clrf	??_Adf_Write_Register_Zero+18
  5239  0310  01C6               	clrf	??_Adf_Write_Register_Zero+19
  5240  0311  3011               	movlw	17
  5241  0312                     u1185:	
  5242  0312  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  5243  0313  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  5244  0314  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  5245  0315  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  5246  0316  0B89               	decfsz	9,f
  5247  0317  2B12               	goto	u1185
  5248  0318  0021               	movlb	1	; select bank1
  5249  0319  0824               	movf	(_adf_config^(0+128)+4),w
  5250  031A  390F               	andlw	15
  5251  031B  0020               	movlb	0	; select bank0
  5252  031C  00C7               	movwf	??_Adf_Write_Register_Zero+20
  5253  031D  01C8               	clrf	??_Adf_Write_Register_Zero+21
  5254  031E  01C9               	clrf	??_Adf_Write_Register_Zero+22
  5255  031F  01CA               	clrf	??_Adf_Write_Register_Zero+23
  5256  0320  300D               	movlw	13
  5257  0321                     u1195:	
  5258  0321  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  5259  0322  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  5260  0323  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  5261  0324  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  5262  0325  0B89               	decfsz	9,f
  5263  0326  2B21               	goto	u1195
  5264  0327  30FF               	movlw	255
  5265  0328  0021               	movlb	1	; select bank1
  5266  0329  0520               	andwf	_adf_config^(0+128),w
  5267  032A  0020               	movlb	0	; select bank0
  5268  032B  00CB               	movwf	??_Adf_Write_Register_Zero+24
  5269  032C  3007               	movlw	7
  5270  032D  0021               	movlb	1	; select bank1
  5271  032E  0521               	andwf	(_adf_config+1)^(0+128),w
  5272  032F  0020               	movlb	0	; select bank0
  5273  0330  00CC               	movwf	??_Adf_Write_Register_Zero+25
  5274  0331  3000               	movlw	0
  5275  0332  0021               	movlb	1	; select bank1
  5276  0333  0522               	andwf	(_adf_config+2)^(0+128),w
  5277  0334  0020               	movlb	0	; select bank0
  5278  0335  00CD               	movwf	??_Adf_Write_Register_Zero+26
  5279  0336  3000               	movlw	0
  5280  0337  0021               	movlb	1	; select bank1
  5281  0338  0523               	andwf	(_adf_config+3)^(0+128),w
  5282  0339  0020               	movlb	0	; select bank0
  5283  033A  00CE               	movwf	??_Adf_Write_Register_Zero+27
  5284  033B  3002               	movlw	2
  5285  033C                     u1205:	
  5286  033C  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  5287  033D  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  5288  033E  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  5289  033F  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  5290  0340  0B89               	decfsz	9,f
  5291  0341  2B3C               	goto	u1205
  5292  0342  084B               	movf	??_Adf_Write_Register_Zero+24,w
  5293  0343  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  5294  0344  084C               	movf	??_Adf_Write_Register_Zero+25,w
  5295  0345  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  5296  0346  084D               	movf	??_Adf_Write_Register_Zero+26,w
  5297  0347  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  5298  0348  084E               	movf	??_Adf_Write_Register_Zero+27,w
  5299  0349  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  5300  034A  0847               	movf	??_Adf_Write_Register_Zero+20,w
  5301  034B  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  5302  034C  0848               	movf	??_Adf_Write_Register_Zero+21,w
  5303  034D  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  5304  034E  0849               	movf	??_Adf_Write_Register_Zero+22,w
  5305  034F  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  5306  0350  084A               	movf	??_Adf_Write_Register_Zero+23,w
  5307  0351  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  5308  0352  0843               	movf	??_Adf_Write_Register_Zero+16,w
  5309  0353  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  5310  0354  0844               	movf	??_Adf_Write_Register_Zero+17,w
  5311  0355  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  5312  0356  0845               	movf	??_Adf_Write_Register_Zero+18,w
  5313  0357  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  5314  0358  0846               	movf	??_Adf_Write_Register_Zero+19,w
  5315  0359  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  5316  035A  083F               	movf	??_Adf_Write_Register_Zero+12,w
  5317  035B  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  5318  035C  0840               	movf	??_Adf_Write_Register_Zero+13,w
  5319  035D  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  5320  035E  0841               	movf	??_Adf_Write_Register_Zero+14,w
  5321  035F  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  5322  0360  0842               	movf	??_Adf_Write_Register_Zero+15,w
  5323  0361  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  5324  0362  083B               	movf	??_Adf_Write_Register_Zero+8,w
  5325  0363  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  5326  0364  083C               	movf	??_Adf_Write_Register_Zero+9,w
  5327  0365  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  5328  0366  083D               	movf	??_Adf_Write_Register_Zero+10,w
  5329  0367  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  5330  0368  083E               	movf	??_Adf_Write_Register_Zero+11,w
  5331  0369  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  5332  036A  0833               	movf	??_Adf_Write_Register_Zero,w
  5333  036B  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  5334  036C  00D3               	movwf	Adf_Write_Register_Zero@reg
  5335  036D  0834               	movf	??_Adf_Write_Register_Zero+1,w
  5336  036E  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  5337  036F  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  5338  0370  0835               	movf	??_Adf_Write_Register_Zero+2,w
  5339  0371  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  5340  0372  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  5341  0373  0836               	movf	??_Adf_Write_Register_Zero+3,w
  5342  0374  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  5343  0375  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  5344                           
  5345                           ;adf7012.c: 170: uint8_t reg_ptr[4];
  5346                           ;adf7012.c: 171: memcpy(reg_ptr, &reg, 4);
  5347  0376  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  5348  0377  00B3               	movwf	??_Adf_Write_Register_Zero
  5349  0378  0833               	movf	??_Adf_Write_Register_Zero,w
  5350  0379  00A0               	movwf	memcpy@s1
  5351  037A  3004               	movlw	4
  5352  037B  00A1               	movwf	memcpy@n
  5353  037C  3000               	movlw	0
  5354  037D  00A2               	movwf	memcpy@n+1
  5355  037E  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5356  037F  318D  253A  3182   	fcall	_memcpy
  5357                           
  5358                           ;adf7012.c: 172: Reverse_Array(reg_ptr,4);
  5359  0382  3004               	movlw	4
  5360  0383  0020               	movlb	0	; select bank0
  5361  0384  00B3               	movwf	??_Adf_Write_Register_Zero
  5362  0385  0833               	movf	??_Adf_Write_Register_Zero,w
  5363  0386  00A7               	movwf	Reverse_Array@length
  5364  0387  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5365  0388  3183  2394  3182   	fcall	_Reverse_Array
  5366                           
  5367                           ;adf7012.c: 173: Write_Adf7012_Reg(reg_ptr, 4);
  5368  038B  3004               	movlw	4
  5369  038C  0020               	movlb	0	; select bank0
  5370  038D  00B3               	movwf	??_Adf_Write_Register_Zero
  5371  038E  0833               	movf	??_Adf_Write_Register_Zero,w
  5372  038F  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5373  0390  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5374  0391  318D  25EB         	fcall	_Write_Adf7012_Reg
  5375  0393  0008               	return
  5376  0394                     __end_of_Adf_Write_Register_Zero:	
  5377                           
  5378                           	psect	text30
  5379  0089                     __ptext30:	
  5380 ;; *************** function _Adf_Write_Register_Three *****************
  5381 ;; Defined at:
  5382 ;;		line 206 in file "adf7012.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  5387 ;;  reg             4    4[BANK1 ] unsigned long 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;		None               void
  5390 ;; Registers used:
  5391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5398 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5399 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5400 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5401 ;;Total ram usage:       64 bytes
  5402 ;; Hardware stack levels used:    1
  5403 ;; Hardware stack levels required when called:    7
  5404 ;; This function calls:
  5405 ;;		_Reverse_Array
  5406 ;;		_Write_Adf7012_Reg
  5407 ;;		_memcpy
  5408 ;; This function is called by:
  5409 ;;		_Adf_Write_Config
  5410 ;;		_Adf_Lock
  5411 ;;		_Ptt_On
  5412 ;;		_Ptt_Off
  5413 ;; This function uses a non-reentrant model
  5414 ;;
  5415                           
  5416                           
  5417                           ;psect for function _Adf_Write_Register_Three
  5418  0089                     _Adf_Write_Register_Three:	
  5419                           
  5420                           ;adf7012.c: 207: uint32_t reg =
  5421                           ;adf7012.c: 208: (3) |
  5422                           ;adf7012.c: 209: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  5423                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  5424                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  5425                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  5426                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  5427                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  5428                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  5429                           
  5430                           ;incstack = 0
  5431                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5432  0089  0021               	movlb	1	; select bank1
  5433  008A  0846               	movf	(_adf_config^(0+128)+38),w
  5434  008B  390F               	andlw	15
  5435  008C  0020               	movlb	0	; select bank0
  5436  008D  00B3               	movwf	??_Adf_Write_Register_Three
  5437  008E  01B4               	clrf	??_Adf_Write_Register_Three+1
  5438  008F  01B5               	clrf	??_Adf_Write_Register_Three+2
  5439  0090  01B6               	clrf	??_Adf_Write_Register_Three+3
  5440  0091  301C               	movlw	28
  5441  0092                     u1305:	
  5442  0092  35B3               	lslf	??_Adf_Write_Register_Three,f
  5443  0093  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  5444  0094  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  5445  0095  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  5446  0096  0B89               	decfsz	9,f
  5447  0097  2892               	goto	u1305
  5448  0098  0021               	movlb	1	; select bank1
  5449  0099  0845               	movf	(_adf_config^(0+128)+37),w
  5450  009A  391F               	andlw	31
  5451  009B  0020               	movlb	0	; select bank0
  5452  009C  00B7               	movwf	??_Adf_Write_Register_Three+4
  5453  009D  01B8               	clrf	??_Adf_Write_Register_Three+5
  5454  009E  01B9               	clrf	??_Adf_Write_Register_Three+6
  5455  009F  01BA               	clrf	??_Adf_Write_Register_Three+7
  5456  00A0  3017               	movlw	23
  5457  00A1                     u1315:	
  5458  00A1  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  5459  00A2  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  5460  00A3  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  5461  00A4  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  5462  00A5  0B89               	decfsz	9,f
  5463  00A6  28A1               	goto	u1315
  5464  00A7  0021               	movlb	1	; select bank1
  5465  00A8  0844               	movf	(_adf_config^(0+128)+36),w
  5466  00A9  3907               	andlw	7
  5467  00AA  0020               	movlb	0	; select bank0
  5468  00AB  00BB               	movwf	??_Adf_Write_Register_Three+8
  5469  00AC  01BC               	clrf	??_Adf_Write_Register_Three+9
  5470  00AD  01BD               	clrf	??_Adf_Write_Register_Three+10
  5471  00AE  01BE               	clrf	??_Adf_Write_Register_Three+11
  5472  00AF  3014               	movlw	20
  5473  00B0                     u1325:	
  5474  00B0  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  5475  00B1  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  5476  00B2  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  5477  00B3  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  5478  00B4  0B89               	decfsz	9,f
  5479  00B5  28B0               	goto	u1325
  5480  00B6  0021               	movlb	1	; select bank1
  5481  00B7  0843               	movf	(_adf_config^(0+128)+35),w
  5482  00B8  390F               	andlw	15
  5483  00B9  0020               	movlb	0	; select bank0
  5484  00BA  00BF               	movwf	??_Adf_Write_Register_Three+12
  5485  00BB  01C0               	clrf	??_Adf_Write_Register_Three+13
  5486  00BC  01C1               	clrf	??_Adf_Write_Register_Three+14
  5487  00BD  01C2               	clrf	??_Adf_Write_Register_Three+15
  5488  00BE  3010               	movlw	16
  5489  00BF                     u1335:	
  5490  00BF  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  5491  00C0  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  5492  00C1  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  5493  00C2  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  5494  00C3  0B89               	decfsz	9,f
  5495  00C4  28BF               	goto	u1335
  5496  00C5  0021               	movlb	1	; select bank1
  5497  00C6  0842               	movf	(_adf_config^(0+128)+34),w
  5498  00C7  3901               	andlw	1
  5499  00C8  0020               	movlb	0	; select bank0
  5500  00C9  00C3               	movwf	??_Adf_Write_Register_Three+16
  5501  00CA  01C4               	clrf	??_Adf_Write_Register_Three+17
  5502  00CB  01C5               	clrf	??_Adf_Write_Register_Three+18
  5503  00CC  01C6               	clrf	??_Adf_Write_Register_Three+19
  5504  00CD  300F               	movlw	15
  5505  00CE                     u1345:	
  5506  00CE  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  5507  00CF  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  5508  00D0  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  5509  00D1  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  5510  00D2  0B89               	decfsz	9,f
  5511  00D3  28CE               	goto	u1345
  5512  00D4  0021               	movlb	1	; select bank1
  5513  00D5  0841               	movf	(_adf_config^(0+128)+33),w
  5514  00D6  390F               	andlw	15
  5515  00D7  0020               	movlb	0	; select bank0
  5516  00D8  00C7               	movwf	??_Adf_Write_Register_Three+20
  5517  00D9  01C8               	clrf	??_Adf_Write_Register_Three+21
  5518  00DA  01C9               	clrf	??_Adf_Write_Register_Three+22
  5519  00DB  01CA               	clrf	??_Adf_Write_Register_Three+23
  5520  00DC  300B               	movlw	11
  5521  00DD                     u1355:	
  5522  00DD  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  5523  00DE  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  5524  00DF  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  5525  00E0  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  5526  00E1  0B89               	decfsz	9,f
  5527  00E2  28DD               	goto	u1355
  5528  00E3  0021               	movlb	1	; select bank1
  5529  00E4  0840               	movf	(_adf_config^(0+128)+32),w
  5530  00E5  3901               	andlw	1
  5531  00E6  0020               	movlb	0	; select bank0
  5532  00E7  00CB               	movwf	??_Adf_Write_Register_Three+24
  5533  00E8  01CC               	clrf	??_Adf_Write_Register_Three+25
  5534  00E9  01CD               	clrf	??_Adf_Write_Register_Three+26
  5535  00EA  01CE               	clrf	??_Adf_Write_Register_Three+27
  5536  00EB  300A               	movlw	10
  5537  00EC                     u1365:	
  5538  00EC  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  5539  00ED  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  5540  00EE  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  5541  00EF  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  5542  00F0  0B89               	decfsz	9,f
  5543  00F1  28EC               	goto	u1365
  5544  00F2  0021               	movlb	1	; select bank1
  5545  00F3  083F               	movf	(_adf_config^(0+128)+31),w
  5546  00F4  3901               	andlw	1
  5547  00F5  0020               	movlb	0	; select bank0
  5548  00F6  00CF               	movwf	??_Adf_Write_Register_Three+28
  5549  00F7  01D0               	clrf	??_Adf_Write_Register_Three+29
  5550  00F8  01D1               	clrf	??_Adf_Write_Register_Three+30
  5551  00F9  01D2               	clrf	??_Adf_Write_Register_Three+31
  5552  00FA  3009               	movlw	9
  5553  00FB                     u1375:	
  5554  00FB  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  5555  00FC  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  5556  00FD  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  5557  00FE  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  5558  00FF  0B89               	decfsz	9,f
  5559  0100  28FB               	goto	u1375
  5560  0101  0021               	movlb	1	; select bank1
  5561  0102  083E               	movf	(_adf_config^(0+128)+30),w
  5562  0103  3901               	andlw	1
  5563  0104  0020               	movlb	0	; select bank0
  5564  0105  00D3               	movwf	??_Adf_Write_Register_Three+32
  5565  0106  01D4               	clrf	??_Adf_Write_Register_Three+33
  5566  0107  01D5               	clrf	??_Adf_Write_Register_Three+34
  5567  0108  01D6               	clrf	??_Adf_Write_Register_Three+35
  5568  0109  3008               	movlw	8
  5569  010A                     u1385:	
  5570  010A  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  5571  010B  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  5572  010C  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  5573  010D  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  5574  010E  0B89               	decfsz	9,f
  5575  010F  290A               	goto	u1385
  5576  0110  0021               	movlb	1	; select bank1
  5577  0111  083D               	movf	(_adf_config^(0+128)+29),w
  5578  0112  3903               	andlw	3
  5579  0113  0020               	movlb	0	; select bank0
  5580  0114  00D7               	movwf	??_Adf_Write_Register_Three+36
  5581  0115  01D8               	clrf	??_Adf_Write_Register_Three+37
  5582  0116  01D9               	clrf	??_Adf_Write_Register_Three+38
  5583  0117  01DA               	clrf	??_Adf_Write_Register_Three+39
  5584  0118  3006               	movlw	6
  5585  0119                     u1395:	
  5586  0119  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  5587  011A  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  5588  011B  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  5589  011C  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  5590  011D  0B89               	decfsz	9,f
  5591  011E  2919               	goto	u1395
  5592  011F  0021               	movlb	1	; select bank1
  5593  0120  083C               	movf	(_adf_config^(0+128)+28),w
  5594  0121  3901               	andlw	1
  5595  0122  0020               	movlb	0	; select bank0
  5596  0123  00DB               	movwf	??_Adf_Write_Register_Three+40
  5597  0124  01DC               	clrf	??_Adf_Write_Register_Three+41
  5598  0125  01DD               	clrf	??_Adf_Write_Register_Three+42
  5599  0126  01DE               	clrf	??_Adf_Write_Register_Three+43
  5600  0127  3005               	movlw	5
  5601  0128                     u1405:	
  5602  0128  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  5603  0129  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  5604  012A  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  5605  012B  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  5606  012C  0B89               	decfsz	9,f
  5607  012D  2928               	goto	u1405
  5608  012E  0021               	movlb	1	; select bank1
  5609  012F  083B               	movf	(_adf_config^(0+128)+27),w
  5610  0130  3901               	andlw	1
  5611  0131  0020               	movlb	0	; select bank0
  5612  0132  00DF               	movwf	??_Adf_Write_Register_Three+44
  5613  0133  01E0               	clrf	??_Adf_Write_Register_Three+45
  5614  0134  01E1               	clrf	??_Adf_Write_Register_Three+46
  5615  0135  01E2               	clrf	??_Adf_Write_Register_Three+47
  5616  0136  3004               	movlw	4
  5617  0137                     u1415:	
  5618  0137  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  5619  0138  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  5620  0139  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  5621  013A  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  5622  013B  0B89               	decfsz	9,f
  5623  013C  2937               	goto	u1415
  5624  013D  0021               	movlb	1	; select bank1
  5625  013E  083A               	movf	(_adf_config^(0+128)+26),w
  5626  013F  3901               	andlw	1
  5627  0140  0020               	movlb	0	; select bank0
  5628  0141  00E3               	movwf	??_Adf_Write_Register_Three+48
  5629  0142  01E4               	clrf	??_Adf_Write_Register_Three+49
  5630  0143  01E5               	clrf	??_Adf_Write_Register_Three+50
  5631  0144  01E6               	clrf	??_Adf_Write_Register_Three+51
  5632  0145  3003               	movlw	3
  5633  0146                     u1425:	
  5634  0146  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  5635  0147  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  5636  0148  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  5637  0149  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  5638  014A  0B89               	decfsz	9,f
  5639  014B  2946               	goto	u1425
  5640  014C  0021               	movlb	1	; select bank1
  5641  014D  0839               	movf	(_adf_config^(0+128)+25),w
  5642  014E  3901               	andlw	1
  5643  014F  0020               	movlb	0	; select bank0
  5644  0150  00E7               	movwf	??_Adf_Write_Register_Three+52
  5645  0151  01E8               	clrf	??_Adf_Write_Register_Three+53
  5646  0152  01E9               	clrf	??_Adf_Write_Register_Three+54
  5647  0153  01EA               	clrf	??_Adf_Write_Register_Three+55
  5648  0154  3002               	movlw	2
  5649  0155                     u1435:	
  5650  0155  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  5651  0156  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  5652  0157  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  5653  0158  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  5654  0159  0B89               	decfsz	9,f
  5655  015A  2955               	goto	u1435
  5656  015B  0867               	movf	??_Adf_Write_Register_Three+52,w
  5657  015C  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  5658  015D  0868               	movf	??_Adf_Write_Register_Three+53,w
  5659  015E  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  5660  015F  0869               	movf	??_Adf_Write_Register_Three+54,w
  5661  0160  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  5662  0161  086A               	movf	??_Adf_Write_Register_Three+55,w
  5663  0162  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  5664  0163  0863               	movf	??_Adf_Write_Register_Three+48,w
  5665  0164  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  5666  0165  0864               	movf	??_Adf_Write_Register_Three+49,w
  5667  0166  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  5668  0167  0865               	movf	??_Adf_Write_Register_Three+50,w
  5669  0168  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  5670  0169  0866               	movf	??_Adf_Write_Register_Three+51,w
  5671  016A  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  5672  016B  085F               	movf	??_Adf_Write_Register_Three+44,w
  5673  016C  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  5674  016D  0860               	movf	??_Adf_Write_Register_Three+45,w
  5675  016E  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  5676  016F  0861               	movf	??_Adf_Write_Register_Three+46,w
  5677  0170  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  5678  0171  0862               	movf	??_Adf_Write_Register_Three+47,w
  5679  0172  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  5680  0173  085B               	movf	??_Adf_Write_Register_Three+40,w
  5681  0174  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  5682  0175  085C               	movf	??_Adf_Write_Register_Three+41,w
  5683  0176  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  5684  0177  085D               	movf	??_Adf_Write_Register_Three+42,w
  5685  0178  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  5686  0179  085E               	movf	??_Adf_Write_Register_Three+43,w
  5687  017A  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  5688  017B  0857               	movf	??_Adf_Write_Register_Three+36,w
  5689  017C  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  5690  017D  0858               	movf	??_Adf_Write_Register_Three+37,w
  5691  017E  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  5692  017F  0859               	movf	??_Adf_Write_Register_Three+38,w
  5693  0180  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  5694  0181  085A               	movf	??_Adf_Write_Register_Three+39,w
  5695  0182  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  5696  0183  0853               	movf	??_Adf_Write_Register_Three+32,w
  5697  0184  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  5698  0185  0854               	movf	??_Adf_Write_Register_Three+33,w
  5699  0186  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  5700  0187  0855               	movf	??_Adf_Write_Register_Three+34,w
  5701  0188  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  5702  0189  0856               	movf	??_Adf_Write_Register_Three+35,w
  5703  018A  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  5704  018B  084F               	movf	??_Adf_Write_Register_Three+28,w
  5705  018C  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  5706  018D  0850               	movf	??_Adf_Write_Register_Three+29,w
  5707  018E  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  5708  018F  0851               	movf	??_Adf_Write_Register_Three+30,w
  5709  0190  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  5710  0191  0852               	movf	??_Adf_Write_Register_Three+31,w
  5711  0192  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  5712  0193  084B               	movf	??_Adf_Write_Register_Three+24,w
  5713  0194  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  5714  0195  084C               	movf	??_Adf_Write_Register_Three+25,w
  5715  0196  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  5716  0197  084D               	movf	??_Adf_Write_Register_Three+26,w
  5717  0198  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  5718  0199  084E               	movf	??_Adf_Write_Register_Three+27,w
  5719  019A  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  5720  019B  0847               	movf	??_Adf_Write_Register_Three+20,w
  5721  019C  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  5722  019D  0848               	movf	??_Adf_Write_Register_Three+21,w
  5723  019E  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  5724  019F  0849               	movf	??_Adf_Write_Register_Three+22,w
  5725  01A0  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  5726  01A1  084A               	movf	??_Adf_Write_Register_Three+23,w
  5727  01A2  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  5728  01A3  0843               	movf	??_Adf_Write_Register_Three+16,w
  5729  01A4  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  5730  01A5  0844               	movf	??_Adf_Write_Register_Three+17,w
  5731  01A6  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  5732  01A7  0845               	movf	??_Adf_Write_Register_Three+18,w
  5733  01A8  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  5734  01A9  0846               	movf	??_Adf_Write_Register_Three+19,w
  5735  01AA  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  5736  01AB  083F               	movf	??_Adf_Write_Register_Three+12,w
  5737  01AC  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  5738  01AD  0840               	movf	??_Adf_Write_Register_Three+13,w
  5739  01AE  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  5740  01AF  0841               	movf	??_Adf_Write_Register_Three+14,w
  5741  01B0  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  5742  01B1  0842               	movf	??_Adf_Write_Register_Three+15,w
  5743  01B2  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  5744  01B3  083B               	movf	??_Adf_Write_Register_Three+8,w
  5745  01B4  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  5746  01B5  083C               	movf	??_Adf_Write_Register_Three+9,w
  5747  01B6  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  5748  01B7  083D               	movf	??_Adf_Write_Register_Three+10,w
  5749  01B8  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  5750  01B9  083E               	movf	??_Adf_Write_Register_Three+11,w
  5751  01BA  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  5752  01BB  0837               	movf	??_Adf_Write_Register_Three+4,w
  5753  01BC  04B3               	iorwf	??_Adf_Write_Register_Three,f
  5754  01BD  0838               	movf	??_Adf_Write_Register_Three+5,w
  5755  01BE  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  5756  01BF  0839               	movf	??_Adf_Write_Register_Three+6,w
  5757  01C0  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  5758  01C1  083A               	movf	??_Adf_Write_Register_Three+7,w
  5759  01C2  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  5760  01C3  3003               	movlw	3
  5761  01C4  0433               	iorwf	??_Adf_Write_Register_Three,w
  5762  01C5  0021               	movlb	1	; select bank1
  5763  01C6  00D7               	movwf	Adf_Write_Register_Three@reg^(0+128)
  5764  01C7  3000               	movlw	0
  5765  01C8  0020               	movlb	0	; select bank0
  5766  01C9  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  5767  01CA  0021               	movlb	1	; select bank1
  5768  01CB  00D8               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  5769  01CC  3000               	movlw	0
  5770  01CD  0020               	movlb	0	; select bank0
  5771  01CE  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  5772  01CF  0021               	movlb	1	; select bank1
  5773  01D0  00D9               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  5774  01D1  3000               	movlw	0
  5775  01D2  0020               	movlb	0	; select bank0
  5776  01D3  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  5777  01D4  0021               	movlb	1	; select bank1
  5778  01D5  00DA               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  5779                           
  5780                           ;adf7012.c: 225: uint8_t reg_ptr[4];
  5781                           ;adf7012.c: 226: memcpy(reg_ptr, &reg, 4);
  5782  01D6  30D7               	movlw	Adf_Write_Register_Three@reg& (0+255)
  5783  01D7  0020               	movlb	0	; select bank0
  5784  01D8  00B3               	movwf	??_Adf_Write_Register_Three
  5785  01D9  0833               	movf	??_Adf_Write_Register_Three,w
  5786  01DA  00A0               	movwf	memcpy@s1
  5787  01DB  3004               	movlw	4
  5788  01DC  00A1               	movwf	memcpy@n
  5789  01DD  3000               	movlw	0
  5790  01DE  00A2               	movwf	memcpy@n+1
  5791  01DF  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5792  01E0  318D  253A  3180   	fcall	_memcpy
  5793                           
  5794                           ;adf7012.c: 227: Reverse_Array(reg_ptr,4);
  5795  01E3  3004               	movlw	4
  5796  01E4  0020               	movlb	0	; select bank0
  5797  01E5  00B3               	movwf	??_Adf_Write_Register_Three
  5798  01E6  0833               	movf	??_Adf_Write_Register_Three,w
  5799  01E7  00A7               	movwf	Reverse_Array@length
  5800  01E8  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5801  01E9  3183  2394  3180   	fcall	_Reverse_Array
  5802                           
  5803                           ;adf7012.c: 228: Write_Adf7012_Reg(reg_ptr, 4);
  5804  01EC  3004               	movlw	4
  5805  01ED  0020               	movlb	0	; select bank0
  5806  01EE  00B3               	movwf	??_Adf_Write_Register_Three
  5807  01EF  0833               	movf	??_Adf_Write_Register_Three,w
  5808  01F0  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5809  01F1  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5810  01F2  318D  25EB         	fcall	_Write_Adf7012_Reg
  5811  01F4  0008               	return
  5812  01F5                     __end_of_Adf_Write_Register_Three:	
  5813                           
  5814                           	psect	text31
  5815  0DEB                     __ptext31:	
  5816 ;; *************** function _Write_Adf7012_Reg *****************
  5817 ;; Defined at:
  5818 ;;		line 82 in file "utility.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  reg_value       1    wreg     PTR unsigned char 
  5821 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5822 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  5825 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5826 ;;  i               1   13[BANK0 ] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      unsigned char 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5836 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5838 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5839 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5840 ;;Total ram usage:        4 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    6
  5843 ;; This function calls:
  5844 ;;		_Delay_ms
  5845 ;;		_Spi_Byte_Send
  5846 ;; This function is called by:
  5847 ;;		_Adf_Write_Register_Zero
  5848 ;;		_Adf_Write_Register_One
  5849 ;;		_Adf_Write_Register_Two
  5850 ;;		_Adf_Write_Register_Three
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           
  5855                           ;psect for function _Write_Adf7012_Reg
  5856  0DEB                     _Write_Adf7012_Reg:	
  5857                           
  5858                           ;incstack = 0
  5859                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5860                           ;Write_Adf7012_Reg@reg_value stored from wreg
  5861  0DEB  0020               	movlb	0	; select bank0
  5862  0DEC  00AC               	movwf	Write_Adf7012_Reg@reg_value
  5863                           
  5864                           ;utility.c: 84: uint8_t i = 0;
  5865  0DED  01AD               	clrf	Write_Adf7012_Reg@i
  5866                           
  5867                           ;utility.c: 85: Delay_ms(1);
  5868  0DEE  3001               	movlw	1
  5869  0DEF  00A0               	movwf	Delay_ms@time_to_delay
  5870  0DF0  3000               	movlw	0
  5871  0DF1  00A1               	movwf	Delay_ms@time_to_delay+1
  5872  0DF2  318D  251A  318D   	fcall	_Delay_ms
  5873                           
  5874                           ;utility.c: 86: PORTAbits.RA4 = 0;;
  5875  0DF5  0020               	movlb	0	; select bank0
  5876  0DF6  120C               	bcf	12,4	;volatile
  5877                           
  5878                           ;utility.c: 87: Delay_ms(1);
  5879  0DF7  3001               	movlw	1
  5880  0DF8  00A0               	movwf	Delay_ms@time_to_delay
  5881  0DF9  3000               	movlw	0
  5882  0DFA  00A1               	movwf	Delay_ms@time_to_delay+1
  5883  0DFB  318D  251A  318D   	fcall	_Delay_ms
  5884                           
  5885                           ;utility.c: 89: for (i = 0; i < size_of_reg; i++){
  5886  0DFE  0020               	movlb	0	; select bank0
  5887  0DFF  01AD               	clrf	Write_Adf7012_Reg@i
  5888  0E00                     l1745:	
  5889  0E00  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  5890  0E01  022D               	subwf	Write_Adf7012_Reg@i,w
  5891  0E02  1803               	btfsc	3,0
  5892  0E03  2E14               	goto	l1747
  5893                           
  5894                           ;utility.c: 90: Spi_Byte_Send(*(reg_value+i));
  5895  0E04  082D               	movf	Write_Adf7012_Reg@i,w
  5896  0E05  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  5897  0E06  00AB               	movwf	??_Write_Adf7012_Reg
  5898  0E07  082B               	movf	??_Write_Adf7012_Reg,w
  5899  0E08  0086               	movwf	6
  5900  0E09  0187               	clrf	7
  5901  0E0A  0801               	movf	1,w
  5902  0E0B  318D  2563  318D   	fcall	_Spi_Byte_Send
  5903  0E0E  3001               	movlw	1
  5904  0E0F  0020               	movlb	0	; select bank0
  5905  0E10  00AB               	movwf	??_Write_Adf7012_Reg
  5906  0E11  082B               	movf	??_Write_Adf7012_Reg,w
  5907  0E12  07AD               	addwf	Write_Adf7012_Reg@i,f
  5908  0E13  2E00               	goto	l1745
  5909  0E14                     l1747:	
  5910                           
  5911                           ;utility.c: 91: }
  5912                           ;utility.c: 93: Delay_ms(1);
  5913  0E14  3001               	movlw	1
  5914  0E15  00A0               	movwf	Delay_ms@time_to_delay
  5915  0E16  3000               	movlw	0
  5916  0E17  00A1               	movwf	Delay_ms@time_to_delay+1
  5917  0E18  318D  251A  318D   	fcall	_Delay_ms
  5918                           
  5919                           ;utility.c: 94: PORTAbits.RA4 = 1;;
  5920  0E1B  0020               	movlb	0	; select bank0
  5921  0E1C  160C               	bsf	12,4	;volatile
  5922                           
  5923                           ;utility.c: 96: Delay_ms(1);
  5924  0E1D  3001               	movlw	1
  5925  0E1E  00A0               	movwf	Delay_ms@time_to_delay
  5926  0E1F  3000               	movlw	0
  5927  0E20  00A1               	movwf	Delay_ms@time_to_delay+1
  5928  0E21  318D  251A         	fcall	_Delay_ms
  5929  0E23  0008               	return
  5930  0E24                     __end_of_Write_Adf7012_Reg:	
  5931                           ;utility.c: 97: return 1;
  5932                           ;	Return value of _Write_Adf7012_Reg is never used
  5933                           
  5934                           
  5935                           	psect	text32
  5936  0D63                     __ptext32:	
  5937 ;; *************** function _Spi_Byte_Send *****************
  5938 ;; Defined at:
  5939 ;;		line 220 in file "utility.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  data            1    wreg     unsigned char 
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;  data            1    7[BANK0 ] unsigned char 
  5944 ;;  i               1    9[BANK0 ] unsigned char 
  5945 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      unsigned char 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, status,0, pclath, cstack
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5959 ;;Total ram usage:        4 bytes
  5960 ;; Hardware stack levels used:    1
  5961 ;; Hardware stack levels required when called:    5
  5962 ;; This function calls:
  5963 ;;		_Delay_ms
  5964 ;; This function is called by:
  5965 ;;		_Write_Adf7012_Reg
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           
  5970                           ;psect for function _Spi_Byte_Send
  5971  0D63                     _Spi_Byte_Send:	
  5972                           
  5973                           ;incstack = 0
  5974                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  5975                           ;Spi_Byte_Send@data stored from wreg
  5976  0D63  0020               	movlb	0	; select bank0
  5977  0D64  00A7               	movwf	Spi_Byte_Send@data
  5978                           
  5979                           ;utility.c: 222: PORTAbits.RA2 = 0;
  5980  0D65  110C               	bcf	12,2	;volatile
  5981                           
  5982                           ;utility.c: 223: uint8_t i;
  5983                           ;utility.c: 224: uint8_t data_to_send;
  5984                           ;utility.c: 225: data_to_send = data;
  5985  0D66  0827               	movf	Spi_Byte_Send@data,w
  5986  0D67  00A6               	movwf	??_Spi_Byte_Send
  5987  0D68  0826               	movf	??_Spi_Byte_Send,w
  5988  0D69  00A8               	movwf	Spi_Byte_Send@data_to_send
  5989                           
  5990                           ;utility.c: 226: for(i = 0; i <8; i++){
  5991  0D6A  01A9               	clrf	Spi_Byte_Send@i
  5992  0D6B                     L5:	
  5993  0D6B  3008               	movlw	8
  5994  0D6C  0229               	subwf	Spi_Byte_Send@i,w
  5995  0D6D  1803               	btfsc	3,0
  5996  0D6E  0008               	return
  5997                           
  5998                           ;utility.c: 228: if(data_to_send & 0x80)
  5999  0D6F  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  6000  0D70  2D73               	goto	l233
  6001                           
  6002                           ;utility.c: 229: PORTCbits.RC2 = 1;
  6003  0D71  150E               	bsf	14,2	;volatile
  6004  0D72  2D74               	goto	l1709
  6005  0D73                     l233:	
  6006                           
  6007                           ;utility.c: 230: else
  6008                           ;utility.c: 231: PORTCbits.RC2 = 0;
  6009  0D73  110E               	bcf	14,2	;volatile
  6010  0D74                     l1709:	
  6011                           
  6012                           ;utility.c: 233: data_to_send <<= 1;
  6013  0D74  1003               	clrc
  6014  0D75  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  6015                           
  6016                           ;utility.c: 235: PORTAbits.RA2 = 1;
  6017  0D76  150C               	bsf	12,2	;volatile
  6018                           
  6019                           ;utility.c: 236: Delay_ms(1);
  6020  0D77  3001               	movlw	1
  6021  0D78  00A0               	movwf	Delay_ms@time_to_delay
  6022  0D79  3000               	movlw	0
  6023  0D7A  00A1               	movwf	Delay_ms@time_to_delay+1
  6024  0D7B  318D  251A  318D   	fcall	_Delay_ms
  6025                           
  6026                           ;utility.c: 237: PORTAbits.RA2 = 0;
  6027  0D7E  0020               	movlb	0	; select bank0
  6028  0D7F  110C               	bcf	12,2	;volatile
  6029                           
  6030                           ;utility.c: 238: Delay_ms(1);
  6031  0D80  3001               	movlw	1
  6032  0D81  00A0               	movwf	Delay_ms@time_to_delay
  6033  0D82  3000               	movlw	0
  6034  0D83  00A1               	movwf	Delay_ms@time_to_delay+1
  6035  0D84  318D  251A  318D   	fcall	_Delay_ms
  6036  0D87  3001               	movlw	1
  6037  0D88  0020               	movlb	0	; select bank0
  6038  0D89  00A6               	movwf	??_Spi_Byte_Send
  6039  0D8A  0826               	movf	??_Spi_Byte_Send,w
  6040  0D8B  07A9               	addwf	Spi_Byte_Send@i,f
  6041  0D8C  2D6B               	goto	L5
  6042  0D8D                     __end_of_Spi_Byte_Send:	
  6043                           ;utility.c: 240: }
  6044                           ;utility.c: 241: return 1;
  6045                           ;	Return value of _Spi_Byte_Send is never used
  6046                           
  6047                           
  6048                           	psect	text33
  6049  0D1A                     __ptext33:	
  6050 ;; *************** function _Delay_ms *****************
  6051 ;; Defined at:
  6052 ;;		line 44 in file "utility.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  i               2    4[BANK0 ] unsigned int 
  6057 ;; Return value:  Size  Location     Type
  6058 ;;		None               void
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0, pclath, cstack
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6069 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;Total ram usage:        6 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    4
  6073 ;; This function calls:
  6074 ;;		_Dac0_Start_Hold
  6075 ;; This function is called by:
  6076 ;;		_main
  6077 ;;		_Write_Adf7012_Reg
  6078 ;;		_Spi_Byte_Send
  6079 ;;		_Adf_Reset
  6080 ;;		_Adf_Lock
  6081 ;;		_Radio_Setup
  6082 ;;		_Ptt_On
  6083 ;;		_Ptt_Off
  6084 ;;		_Modem_Flush_Frame
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           
  6089                           ;psect for function _Delay_ms
  6090  0D1A                     _Delay_ms:	
  6091                           
  6092                           ;utility.c: 46: uint16_t i=0;
  6093                           
  6094                           ;incstack = 0
  6095                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  6096  0D1A  0020               	movlb	0	; select bank0
  6097  0D1B  01A4               	clrf	Delay_ms@i
  6098  0D1C  01A5               	clrf	Delay_ms@i+1
  6099                           
  6100                           ;utility.c: 48: Dac0_Start_Hold();
  6101  0D1D  318B  23E1  318D   	fcall	_Dac0_Start_Hold
  6102                           
  6103                           ;utility.c: 49: for(i=0; i<time_to_delay; i++){
  6104  0D20  0020               	movlb	0	; select bank0
  6105  0D21  01A4               	clrf	Delay_ms@i
  6106  0D22  01A5               	clrf	Delay_ms@i+1
  6107  0D23                     l203:	
  6108  0D23  0821               	movf	Delay_ms@time_to_delay+1,w
  6109  0D24  0225               	subwf	Delay_ms@i+1,w
  6110  0D25  1D03               	skipz
  6111  0D26  2D29               	goto	u1075
  6112  0D27  0820               	movf	Delay_ms@time_to_delay,w
  6113  0D28  0224               	subwf	Delay_ms@i,w
  6114  0D29                     u1075:	
  6115  0D29  1803               	btfsc	3,0
  6116  0D2A  0008               	return
  6117                           
  6118                           ;utility.c: 50: _delay((unsigned long)((1)*(32000000/4000.0)));
  6119  0D2B  300B               	movlw	11
  6120  0D2C  00A3               	movwf	??_Delay_ms+1
  6121  0D2D  3062               	movlw	98
  6122  0D2E  00A2               	movwf	??_Delay_ms
  6123  0D2F                     u2977:	
  6124  0D2F  0BA2               	decfsz	??_Delay_ms,f
  6125  0D30  2D2F               	goto	u2977
  6126  0D31  0BA3               	decfsz	??_Delay_ms+1,f
  6127  0D32  2D2F               	goto	u2977
  6128  0D33  0000               	nop
  6129  0D34  3001               	movlw	1
  6130  0D35  0020               	movlb	0	; select bank0
  6131  0D36  07A4               	addwf	Delay_ms@i,f
  6132  0D37  3000               	movlw	0
  6133  0D38  3DA5               	addwfc	Delay_ms@i+1,f
  6134  0D39  2D23               	goto	l203
  6135  0D3A                     __end_of_Delay_ms:	
  6136                           
  6137                           	psect	text34
  6138  0BE1                     __ptext34:	
  6139 ;; *************** function _Dac0_Start_Hold *****************
  6140 ;; Defined at:
  6141 ;;		line 275 in file "utility.c"
  6142 ;; Parameters:    Size  Location     Type
  6143 ;;		None
  6144 ;; Auto vars:     Size  Location     Type
  6145 ;;		None
  6146 ;; Return value:  Size  Location     Type
  6147 ;;		None               void
  6148 ;; Registers used:
  6149 ;;		wreg
  6150 ;; Tracked objects:
  6151 ;;		On entry : 0/0
  6152 ;;		On exit  : 0/0
  6153 ;;		Unchanged: 0/0
  6154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6159 ;;Total ram usage:        0 bytes
  6160 ;; Hardware stack levels used:    1
  6161 ;; Hardware stack levels required when called:    3
  6162 ;; This function calls:
  6163 ;;		Nothing
  6164 ;; This function is called by:
  6165 ;;		_main
  6166 ;;		_Delay_ms
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function _Dac0_Start_Hold
  6172  0BE1                     _Dac0_Start_Hold:	
  6173                           
  6174                           ;utility.c: 276: DACEN = 1;
  6175                           
  6176                           ;incstack = 0
  6177                           ; Regs used in _Dac0_Start_Hold: [wreg]
  6178  0BE1  0022               	movlb	2	; select bank2
  6179  0BE2  1798               	bsf	24,7	;volatile
  6180                           
  6181                           ;utility.c: 277: DACCON1 = 0x10;
  6182  0BE3  3010               	movlw	16
  6183  0BE4  0099               	movwf	25	;volatile
  6184  0BE5  0008               	return
  6185  0BE6                     __end_of_Dac0_Start_Hold:	
  6186                           
  6187                           	psect	text35
  6188  0394                     __ptext35:	
  6189 ;; *************** function _Reverse_Array *****************
  6190 ;; Defined at:
  6191 ;;		line 198 in file "utility.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  input           1    wreg     PTR unsigned char 
  6194 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6195 ;;  length          1    7[BANK0 ] unsigned char 
  6196 ;; Auto vars:     Size  Location     Type
  6197 ;;  input           1   17[BANK0 ] PTR unsigned char 
  6198 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6199 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  6200 ;;  i               1   18[BANK0 ] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      unsigned char 
  6203 ;; Registers used:
  6204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6210 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6211 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;Total ram usage:       12 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    4
  6217 ;; This function calls:
  6218 ;;		_memcpy
  6219 ;; This function is called by:
  6220 ;;		_Adf_Write_Register_Zero
  6221 ;;		_Adf_Write_Register_One
  6222 ;;		_Adf_Write_Register_Two
  6223 ;;		_Adf_Write_Register_Three
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           
  6228                           ;psect for function _Reverse_Array
  6229  0394                     _Reverse_Array:	
  6230                           
  6231                           ;incstack = 0
  6232                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6233                           ;Reverse_Array@input stored from wreg
  6234  0394  0020               	movlb	0	; select bank0
  6235  0395  00B1               	movwf	Reverse_Array@input
  6236                           
  6237                           ;utility.c: 199: uint8_t i = 0;
  6238  0396  01B2               	clrf	Reverse_Array@i
  6239                           
  6240                           ;utility.c: 200: uint8_t buffer_array[4] = {0};
  6241  0397  0022               	movlb	2	; select bank2
  6242  0398  0823               	movf	(Reverse_Array@F3148+3)^(0+256),w
  6243  0399  0020               	movlb	0	; select bank0
  6244  039A  00B0               	movwf	Reverse_Array@buffer_array+3
  6245  039B  0022               	movlb	2	; select bank2
  6246  039C  0822               	movf	(Reverse_Array@F3148+2)^(0+256),w
  6247  039D  0020               	movlb	0	; select bank0
  6248  039E  00AF               	movwf	Reverse_Array@buffer_array+2
  6249  039F  0022               	movlb	2	; select bank2
  6250  03A0  0821               	movf	(Reverse_Array@F3148+1)^(0+256),w
  6251  03A1  0020               	movlb	0	; select bank0
  6252  03A2  00AE               	movwf	Reverse_Array@buffer_array+1
  6253  03A3  0022               	movlb	2	; select bank2
  6254  03A4  0820               	movf	Reverse_Array@F3148^(0+256),w
  6255  03A5  0020               	movlb	0	; select bank0
  6256  03A6  00AD               	movwf	Reverse_Array@buffer_array
  6257                           
  6258                           ;utility.c: 201: memcpy(buffer_array, input, length);
  6259  03A7  0831               	movf	Reverse_Array@input,w
  6260  03A8  00A8               	movwf	??_Reverse_Array
  6261  03A9  0828               	movf	??_Reverse_Array,w
  6262  03AA  00A0               	movwf	memcpy@s1
  6263  03AB  0827               	movf	Reverse_Array@length,w
  6264  03AC  00A9               	movwf	??_Reverse_Array+1
  6265  03AD  01AA               	clrf	??_Reverse_Array+2
  6266  03AE  0829               	movf	??_Reverse_Array+1,w
  6267  03AF  00A1               	movwf	memcpy@n
  6268  03B0  082A               	movf	??_Reverse_Array+2,w
  6269  03B1  00A2               	movwf	memcpy@n+1
  6270  03B2  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6271  03B3  318D  253A  3183   	fcall	_memcpy
  6272                           
  6273                           ;utility.c: 203: for(i = 0; i<length; i++){
  6274  03B6  0020               	movlb	0	; select bank0
  6275  03B7  01B2               	clrf	Reverse_Array@i
  6276  03B8                     l1765:	
  6277  03B8  0827               	movf	Reverse_Array@length,w
  6278  03B9  0232               	subwf	Reverse_Array@i,w
  6279  03BA  1803               	btfsc	3,0
  6280  03BB  0008               	return
  6281                           
  6282                           ;utility.c: 204: *(input+i) = *(buffer_array+(length-1)-i);
  6283  03BC  30FF               	movlw	-1
  6284  03BD  0727               	addwf	Reverse_Array@length,w
  6285  03BE  00A8               	movwf	??_Reverse_Array
  6286  03BF  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6287  03C0  0728               	addwf	??_Reverse_Array,w
  6288  03C1  00A9               	movwf	??_Reverse_Array+1
  6289  03C2  0332               	decf	Reverse_Array@i,w
  6290  03C3  3AFF               	xorlw	255
  6291  03C4  0729               	addwf	??_Reverse_Array+1,w
  6292  03C5  00AA               	movwf	??_Reverse_Array+2
  6293  03C6  082A               	movf	??_Reverse_Array+2,w
  6294  03C7  0086               	movwf	6
  6295  03C8  0187               	clrf	7
  6296  03C9  0801               	movf	1,w
  6297  03CA  00AB               	movwf	??_Reverse_Array+3
  6298  03CB  0832               	movf	Reverse_Array@i,w
  6299  03CC  0731               	addwf	Reverse_Array@input,w
  6300  03CD  00AC               	movwf	??_Reverse_Array+4
  6301  03CE  082C               	movf	??_Reverse_Array+4,w
  6302  03CF  0086               	movwf	6
  6303  03D0  0187               	clrf	7
  6304  03D1  082B               	movf	??_Reverse_Array+3,w
  6305  03D2  0081               	movwf	1
  6306  03D3  3001               	movlw	1
  6307  03D4  00A8               	movwf	??_Reverse_Array
  6308  03D5  0828               	movf	??_Reverse_Array,w
  6309  03D6  07B2               	addwf	Reverse_Array@i,f
  6310  03D7  2BB8               	goto	l1765
  6311  03D8                     __end_of_Reverse_Array:	
  6312                           ;utility.c: 205: }
  6313                           ;utility.c: 209: return 1;
  6314                           ;	Return value of _Reverse_Array is never used
  6315                           
  6316                           
  6317                           	psect	text36
  6318  0D3A                     __ptext36:	
  6319 ;; *************** function _memcpy *****************
  6320 ;; Defined at:
  6321 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  d1              1    wreg     PTR void 
  6324 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6325 ;;		 -> Reverse_Array@buffer_array(4), 
  6326 ;;  s1              1    0[BANK0 ] PTR const void 
  6327 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6328 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6329 ;;  n               2    1[BANK0 ] unsigned int 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  d1              1    6[BANK0 ] PTR void 
  6332 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6333 ;;		 -> Reverse_Array@buffer_array(4), 
  6334 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6335 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6336 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6337 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6338 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6339 ;;		 -> Reverse_Array@buffer_array(4), 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      PTR void 
  6342 ;; Registers used:
  6343 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6349 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6350 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;Total ram usage:        7 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    3
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_Reverse_Array
  6360 ;;		_Adf_Write_Register_Zero
  6361 ;;		_Adf_Write_Register_One
  6362 ;;		_Adf_Write_Register_Two
  6363 ;;		_Adf_Write_Register_Three
  6364 ;; This function uses a non-reentrant model
  6365 ;;
  6366                           
  6367                           
  6368                           ;psect for function _memcpy
  6369  0D3A                     _memcpy:	
  6370                           
  6371                           ;incstack = 0
  6372                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6373                           ;memcpy@d1 stored from wreg
  6374  0D3A  0020               	movlb	0	; select bank0
  6375  0D3B  00A6               	movwf	memcpy@d1
  6376  0D3C  0820               	movf	memcpy@s1,w
  6377  0D3D  00A3               	movwf	??_memcpy
  6378  0D3E  0823               	movf	??_memcpy,w
  6379  0D3F  00A5               	movwf	memcpy@s
  6380  0D40  0826               	movf	memcpy@d1,w
  6381  0D41  00A3               	movwf	??_memcpy
  6382  0D42  0823               	movf	??_memcpy,w
  6383  0D43  00A4               	movwf	memcpy@d
  6384  0D44                     l1731:	
  6385  0D44  3001               	movlw	1
  6386  0D45  02A1               	subwf	memcpy@n,f
  6387  0D46  3000               	movlw	0
  6388  0D47  3BA2               	subwfb	memcpy@n+1,f
  6389  0D48  30FF               	movlw	255
  6390  0D49  0622               	xorwf	memcpy@n+1,w
  6391  0D4A  1D03               	skipz
  6392  0D4B  2D4E               	goto	u1115
  6393  0D4C  30FF               	movlw	255
  6394  0D4D  0621               	xorwf	memcpy@n,w
  6395  0D4E                     u1115:	
  6396  0D4E  1903               	btfsc	3,2
  6397  0D4F  0008               	return
  6398  0D50  0825               	movf	memcpy@s,w
  6399  0D51  0086               	movwf	6
  6400  0D52  0187               	clrf	7
  6401  0D53  0801               	movf	1,w
  6402  0D54  00A3               	movwf	??_memcpy
  6403  0D55  0824               	movf	memcpy@d,w
  6404  0D56  0086               	movwf	6
  6405  0D57  0187               	clrf	7
  6406  0D58  0823               	movf	??_memcpy,w
  6407  0D59  0081               	movwf	1
  6408  0D5A  3001               	movlw	1
  6409  0D5B  00A3               	movwf	??_memcpy
  6410  0D5C  0823               	movf	??_memcpy,w
  6411  0D5D  07A5               	addwf	memcpy@s,f
  6412  0D5E  3001               	movlw	1
  6413  0D5F  00A3               	movwf	??_memcpy
  6414  0D60  0823               	movf	??_memcpy,w
  6415  0D61  07A4               	addwf	memcpy@d,f
  6416  0D62  2D44               	goto	l1731
  6417  0D63                     __end_of_memcpy:	
  6418                           ;	Return value of _memcpy is never used
  6419                           
  6420                           
  6421                           	psect	text37
  6422  0BD5                     __ptext37:	
  6423 ;; *************** function _Adf_Locked *****************
  6424 ;; Defined at:
  6425 ;;		line 276 in file "adf7012.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;		None
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;		None
  6430 ;; Return value:  Size  Location     Type
  6431 ;;                  1    wreg      unsigned char 
  6432 ;; Registers used:
  6433 ;;		wreg, pclath, cstack
  6434 ;; Tracked objects:
  6435 ;;		On entry : 0/0
  6436 ;;		On exit  : 0/0
  6437 ;;		Unchanged: 0/0
  6438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6443 ;;Total ram usage:        0 bytes
  6444 ;; Hardware stack levels used:    1
  6445 ;; Hardware stack levels required when called:    4
  6446 ;; This function calls:
  6447 ;;		_Read_Adf7012_Muxout
  6448 ;; This function is called by:
  6449 ;;		_Adf_Lock
  6450 ;; This function uses a non-reentrant model
  6451 ;;
  6452                           
  6453                           
  6454                           ;psect for function _Adf_Locked
  6455  0BD5                     _Adf_Locked:	
  6456                           
  6457                           ;adf7012.c: 278: return Read_Adf7012_Muxout();
  6458                           
  6459                           ;incstack = 0
  6460                           ; Regs used in _Adf_Locked: [wreg+pclath+cstack]
  6461  0BD5  318C  2409         	fcall	_Read_Adf7012_Muxout
  6462  0BD7  0008               	return
  6463  0BD8                     __end_of_Adf_Locked:	
  6464                           
  6465                           	psect	text38
  6466  0C09                     __ptext38:	
  6467 ;; *************** function _Read_Adf7012_Muxout *****************
  6468 ;; Defined at:
  6469 ;;		line 64 in file "utility.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;		None
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  1    wreg      unsigned char 
  6476 ;; Registers used:
  6477 ;;		wreg
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;Total ram usage:        0 bytes
  6488 ;; Hardware stack levels used:    1
  6489 ;; Hardware stack levels required when called:    3
  6490 ;; This function calls:
  6491 ;;		Nothing
  6492 ;; This function is called by:
  6493 ;;		_Adf_Locked
  6494 ;;		_Ptt_On
  6495 ;; This function uses a non-reentrant model
  6496 ;;
  6497                           
  6498                           
  6499                           ;psect for function _Read_Adf7012_Muxout
  6500  0C09                     _Read_Adf7012_Muxout:	
  6501                           
  6502                           ;utility.c: 66: if(PORTCbits.RC5)
  6503                           
  6504                           ;incstack = 0
  6505                           ; Regs used in _Read_Adf7012_Muxout: [wreg]
  6506  0C09  0020               	movlb	0	; select bank0
  6507  0C0A  1E8E               	btfss	14,5	;volatile
  6508  0C0B  2C0E               	goto	l1871
  6509                           
  6510                           ;utility.c: 67: return 1;
  6511  0C0C  3001               	movlw	1
  6512  0C0D  0008               	return
  6513  0C0E                     l1871:	
  6514                           
  6515                           ;utility.c: 68: else
  6516                           ;utility.c: 69: return 0;
  6517  0C0E  3000               	movlw	0
  6518  0C0F  0008               	return
  6519  0C10                     __end_of_Read_Adf7012_Muxout:	
  6520                           
  6521                           	psect	text39
  6522  0BEB                     __ptext39:	
  6523 ;; *************** function _Adc1_Start *****************
  6524 ;; Defined at:
  6525 ;;		line 286 in file "utility.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;		None
  6530 ;; Return value:  Size  Location     Type
  6531 ;;		None               void
  6532 ;; Registers used:
  6533 ;;		None
  6534 ;; Tracked objects:
  6535 ;;		On entry : 0/0
  6536 ;;		On exit  : 0/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;Total ram usage:        0 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    3
  6546 ;; This function calls:
  6547 ;;		Nothing
  6548 ;; This function is called by:
  6549 ;;		_main
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           
  6554                           ;psect for function _Adc1_Start
  6555  0BEB                     _Adc1_Start:	
  6556                           
  6557                           ;utility.c: 287: ADIF = 0;
  6558                           
  6559                           ;incstack = 0
  6560                           ; Regs used in _Adc1_Start: []
  6561  0BEB  0020               	movlb	0	; select bank0
  6562  0BEC  1311               	bcf	17,6	;volatile
  6563                           
  6564                           ;utility.c: 288: ADON = 1;
  6565  0BED  0021               	movlb	1	; select bank1
  6566  0BEE  141D               	bsf	29,0	;volatile
  6567                           
  6568                           ;utility.c: 289: ADIE = 1;
  6569  0BEF  1711               	bsf	17,6	;volatile
  6570  0BF0  0008               	return
  6571  0BF1                     __end_of_Adc1_Start:	
  6572                           
  6573                           	psect	intentry
  6574  0004                     __pintentry:	
  6575 ;; *************** function _global_interrupt *****************
  6576 ;; Defined at:
  6577 ;;		line 42 in file "main.c"
  6578 ;; Parameters:    Size  Location     Type
  6579 ;;		None
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;		None
  6582 ;; Return value:  Size  Location     Type
  6583 ;;		None               void
  6584 ;; Registers used:
  6585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;Total ram usage:        2 bytes
  6596 ;; Hardware stack levels used:    1
  6597 ;; Hardware stack levels required when called:    2
  6598 ;; This function calls:
  6599 ;;		_Sinus_Generator
  6600 ;; This function is called by:
  6601 ;;		Interrupt level 1
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605  0004                     _global_interrupt:	
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6609  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6610  0005  3180               	pagesel	$
  6611  0006  0020               	movlb	0	; select bank0
  6612  0007  087F               	movf	127,w
  6613  0008  00F8               	movwf	??_global_interrupt+1
  6614                           
  6615                           ;main.c: 44: INTCON &= ~0x80;
  6616  0009  307F               	movlw	127
  6617  000A  00F7               	movwf	??_global_interrupt
  6618  000B  0877               	movf	??_global_interrupt,w
  6619  000C  058B               	andwf	11,f	;volatile
  6620                           
  6621                           ;main.c: 47: if(ADIF){
  6622  000D  1F11               	btfss	17,6	;volatile
  6623  000E  281B               	goto	i1l129
  6624                           
  6625                           ;main.c: 49: adc__high = ADRESH;
  6626  000F  0021               	movlb	1	; select bank1
  6627  0010  081C               	movf	28,w	;volatile
  6628  0011  00F7               	movwf	??_global_interrupt
  6629  0012  0877               	movf	??_global_interrupt,w
  6630  0013  00CF               	movwf	_adc__high^(0+128)
  6631                           
  6632                           ;main.c: 50: adc__low = ADRESL;
  6633  0014  081B               	movf	27,w	;volatile
  6634  0015  00F7               	movwf	??_global_interrupt
  6635  0016  0877               	movf	??_global_interrupt,w
  6636  0017  00D0               	movwf	_adc__low^(0+128)
  6637                           
  6638                           ;main.c: 52: ADIF = 0;
  6639  0018  0020               	movlb	0	; select bank0
  6640  0019  1311               	bcf	17,6	;volatile
  6641                           
  6642                           ;main.c: 54: return;
  6643  001A  2854               	goto	i1l130
  6644  001B                     i1l129:	
  6645                           
  6646                           ;main.c: 55: }
  6647                           ;main.c: 60: if(PIR1 & 0x04){
  6648  001B  1D11               	btfss	17,2	;volatile
  6649  001C  2849               	goto	i1l131
  6650                           
  6651                           ;main.c: 62: Change_to_New_Baud = 1;
  6652  001D  01EE               	clrf	_Change_to_New_Baud
  6653  001E  0AEE               	incf	_Change_to_New_Baud,f
  6654                           
  6655                           ;main.c: 66: TMR1H = 0x00;
  6656  001F  0197               	clrf	23	;volatile
  6657                           
  6658                           ;main.c: 67: TMR1L = 0x00;
  6659  0020  0196               	clrf	22	;volatile
  6660                           
  6661                           ;main.c: 69: PIR1 &= ~0x04;
  6662  0021  30FB               	movlw	251
  6663  0022  00F7               	movwf	??_global_interrupt
  6664  0023  0877               	movf	??_global_interrupt,w
  6665  0024  0591               	andwf	17,f	;volatile
  6666                           
  6667                           ;main.c: 71: Systick_Counter += 1;
  6668  0025  3001               	movlw	1
  6669  0026  0022               	movlb	2	; select bank2
  6670  0027  07AC               	addwf	_Systick_Counter^(0+256),f
  6671  0028  3000               	movlw	0
  6672  0029  3DAD               	addwfc	(_Systick_Counter+1)^(0+256),f
  6673  002A  3000               	movlw	0
  6674  002B  3DAE               	addwfc	(_Systick_Counter+2)^(0+256),f
  6675  002C  3000               	movlw	0
  6676  002D  3DAF               	addwfc	(_Systick_Counter+3)^(0+256),f
  6677                           
  6678                           ;main.c: 72: if(Systick_Counter > 100000){
  6679  002E  3000               	movlw	0
  6680  002F  022F               	subwf	(_Systick_Counter+3)^(0+256),w
  6681  0030  1D03               	skipz
  6682  0031  283C               	goto	u238_25
  6683  0032  3001               	movlw	1
  6684  0033  022E               	subwf	(_Systick_Counter+2)^(0+256),w
  6685  0034  1D03               	skipz
  6686  0035  283C               	goto	u238_25
  6687  0036  3086               	movlw	134
  6688  0037  022D               	subwf	(_Systick_Counter+1)^(0+256),w
  6689  0038  1D03               	skipz
  6690  0039  283C               	goto	u238_25
  6691  003A  30A1               	movlw	161
  6692  003B  022C               	subwf	_Systick_Counter^(0+256),w
  6693  003C                     u238_25:	
  6694  003C  1C03               	skipc
  6695  003D  2854               	goto	i1l130
  6696                           
  6697                           ;main.c: 73: Systick_Counter = 0;
  6698  003E  3000               	movlw	0
  6699  003F  00AF               	movwf	(_Systick_Counter+3)^(0+256)
  6700  0040  3000               	movlw	0
  6701  0041  00AE               	movwf	(_Systick_Counter+2)^(0+256)
  6702  0042  3000               	movlw	0
  6703  0043  00AD               	movwf	(_Systick_Counter+1)^(0+256)
  6704  0044  3000               	movlw	0
  6705  0045  00AC               	movwf	_Systick_Counter^(0+256)
  6706                           
  6707                           ;main.c: 74: ADCON0 |= 0b00000010;
  6708  0046  0021               	movlb	1	; select bank1
  6709  0047  149D               	bsf	29,1	;volatile
  6710                           
  6711                           ;main.c: 75: }
  6712                           ;main.c: 77: return;
  6713  0048  2854               	goto	i1l130
  6714  0049                     i1l131:	
  6715                           
  6716                           ;main.c: 78: }
  6717                           ;main.c: 82: if(INTCON & 0x04){
  6718  0049  1D0B               	btfss	11,2	;volatile
  6719  004A  2853               	goto	i1l133
  6720                           
  6721                           ;main.c: 84: Sinus_Generator();
  6722  004B  3185  257B  3180   	fcall	_Sinus_Generator
  6723                           
  6724                           ;main.c: 86: INTCON &= ~0x04;
  6725  004E  30FB               	movlw	251
  6726  004F  00F7               	movwf	??_global_interrupt
  6727  0050  0877               	movf	??_global_interrupt,w
  6728  0051  058B               	andwf	11,f	;volatile
  6729                           
  6730                           ;main.c: 88: return;
  6731  0052  2854               	goto	i1l130
  6732  0053                     i1l133:	
  6733                           
  6734                           ;main.c: 89: }
  6735                           ;main.c: 94: INTCON |= 0x80;
  6736  0053  178B               	bsf	11,7	;volatile
  6737  0054                     i1l130:	
  6738  0054  0878               	movf	??_global_interrupt+1,w
  6739  0055  0020               	movlb	0	; select bank0
  6740  0056  00FF               	movwf	127
  6741  0057  107E               	bcf	126,0	;clear compiler interrupt flag
  6742  0058  0009               	retfie
  6743  0059                     __end_of_global_interrupt:	
  6744                           
  6745                           	psect	text41
  6746  057B                     __ptext41:	
  6747 ;; *************** function _Sinus_Generator *****************
  6748 ;; Defined at:
  6749 ;;		line 84 in file "audio_tone.c"
  6750 ;; Parameters:    Size  Location     Type
  6751 ;;		None
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  6754 ;; Return value:  Size  Location     Type
  6755 ;;		None               void
  6756 ;; Registers used:
  6757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6758 ;; Tracked objects:
  6759 ;;		On entry : 0/0
  6760 ;;		On exit  : 0/0
  6761 ;;		Unchanged: 0/0
  6762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;Total ram usage:        6 bytes
  6768 ;; Hardware stack levels used:    1
  6769 ;; Hardware stack levels required when called:    1
  6770 ;; This function calls:
  6771 ;;		_Send_Vcxo_Signal
  6772 ;;		_Timer0_Stop
  6773 ;; This function is called by:
  6774 ;;		_global_interrupt
  6775 ;; This function uses a non-reentrant model
  6776 ;;
  6777                           
  6778                           
  6779                           ;psect for function _Sinus_Generator
  6780  057B                     _Sinus_Generator:	
  6781                           
  6782                           ;audio_tone.c: 86: uint8_t Audio_Signal;
  6783                           ;audio_tone.c: 87: static uint8_t tone_index = 0;
  6784                           ;audio_tone.c: 88: if (MODEM_TRANSMITTING == 1) {
  6785                           
  6786                           ;incstack = 0
  6787                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6788  057B  0021               	movlb	1	; select bank1
  6789  057C  084C               	movf	_MODEM_TRANSMITTING^(0+128),w
  6790  057D  3A01               	xorlw	1
  6791  057E  1D03               	skipz
  6792  057F  0008               	return
  6793                           
  6794                           ;audio_tone.c: 90: if (packet_pos == modem_packet_size) {
  6795  0580  087C               	movf	_modem_packet_size+3,w
  6796  0581  0022               	movlb	2	; select bank2
  6797  0582  0633               	xorwf	(_packet_pos+3)^(0+256),w
  6798  0583  1D03               	skipz
  6799  0584  2D8F               	goto	u178_25
  6800  0585  087B               	movf	_modem_packet_size+2,w
  6801  0586  0632               	xorwf	(_packet_pos+2)^(0+256),w
  6802  0587  1D03               	skipz
  6803  0588  2D8F               	goto	u178_25
  6804  0589  087A               	movf	_modem_packet_size+1,w
  6805  058A  0631               	xorwf	(_packet_pos+1)^(0+256),w
  6806  058B  1D03               	skipz
  6807  058C  2D8F               	goto	u178_25
  6808  058D  0879               	movf	_modem_packet_size,w
  6809  058E  0630               	xorwf	_packet_pos^(0+256),w
  6810  058F                     u178_25:	
  6811  058F  1D03               	skipz
  6812  0590  2D9D               	goto	i1l2029
  6813                           
  6814                           ;audio_tone.c: 91: MODEM_TRANSMITTING = 0;
  6815  0591  0021               	movlb	1	; select bank1
  6816  0592  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  6817                           
  6818                           ;audio_tone.c: 92: Timer0_Stop();
  6819  0593  318B  23D8  3185   	fcall	_Timer0_Stop
  6820                           
  6821                           ;audio_tone.c: 94: Send_Vcxo_Signal(0x10);
  6822  0596  3010               	movlw	16
  6823  0597  318B  23DC         	fcall	_Send_Vcxo_Signal
  6824                           
  6825                           ;audio_tone.c: 96: PTT_OFF = 1;
  6826  0599  0021               	movlb	1	; select bank1
  6827  059A  01CD               	clrf	_PTT_OFF^(0+128)
  6828  059B  0ACD               	incf	_PTT_OFF^(0+128),f
  6829                           
  6830                           ;audio_tone.c: 98: goto end_generator;
  6831  059C  0008               	return
  6832  059D                     i1l2029:	
  6833                           
  6834                           ;audio_tone.c: 99: }
  6835                           ;audio_tone.c: 102: if (current_sample_in_baud == 0) {
  6836  059D  0021               	movlb	1	; select bank1
  6837  059E  08D1               	movf	_current_sample_in_baud^(0+128),f
  6838  059F  1D03               	skipz
  6839  05A0  2DE8               	goto	i1l2049
  6840                           
  6841                           ;audio_tone.c: 103: if ((packet_pos & 7) == 0)
  6842  05A1  3007               	movlw	7
  6843  05A2  0022               	movlb	2	; select bank2
  6844  05A3  0530               	andwf	_packet_pos^(0+256),w
  6845  05A4  00F1               	movwf	??_Sinus_Generator
  6846  05A5  3000               	movlw	0
  6847  05A6  0531               	andwf	(_packet_pos+1)^(0+256),w
  6848  05A7  00F2               	movwf	??_Sinus_Generator+1
  6849  05A8  3000               	movlw	0
  6850  05A9  0532               	andwf	(_packet_pos+2)^(0+256),w
  6851  05AA  00F3               	movwf	??_Sinus_Generator+2
  6852  05AB  3000               	movlw	0
  6853  05AC  0533               	andwf	(_packet_pos+3)^(0+256),w
  6854  05AD  00F4               	movwf	??_Sinus_Generator+3
  6855  05AE  0874               	movf	??_Sinus_Generator+3,w
  6856  05AF  0473               	iorwf	??_Sinus_Generator+2,w
  6857  05B0  0472               	iorwf	??_Sinus_Generator+1,w
  6858  05B1  0471               	iorwf	??_Sinus_Generator,w
  6859  05B2  1D03               	skipz
  6860  05B3  2DCD               	goto	i1l2035
  6861                           
  6862                           ;audio_tone.c: 104: current_byte = modem_packet[packet_pos >> 3];
  6863  05B4  0830               	movf	_packet_pos^(0+256),w
  6864  05B5  00F1               	movwf	??_Sinus_Generator
  6865  05B6  0831               	movf	(_packet_pos+1)^(0+256),w
  6866  05B7  00F2               	movwf	??_Sinus_Generator+1
  6867  05B8  0832               	movf	(_packet_pos+2)^(0+256),w
  6868  05B9  00F3               	movwf	??_Sinus_Generator+2
  6869  05BA  0833               	movf	(_packet_pos+3)^(0+256),w
  6870  05BB  00F4               	movwf	??_Sinus_Generator+3
  6871  05BC  3003               	movlw	3
  6872  05BD                     u181_25:	
  6873  05BD  36F4               	lsrf	??_Sinus_Generator+3,f
  6874  05BE  0CF3               	rrf	??_Sinus_Generator+2,f
  6875  05BF  0CF2               	rrf	??_Sinus_Generator+1,f
  6876  05C0  0CF1               	rrf	??_Sinus_Generator,f
  6877  05C1  0B89               	decfsz	9,f
  6878  05C2  2DBD               	goto	u181_25
  6879  05C3  0871               	movf	??_Sinus_Generator,w
  6880  05C4  3EA0               	addlw	_modem_packet& (0+255)
  6881  05C5  0086               	movwf	6
  6882  05C6  3001               	movlw	1	; select bank3/4
  6883  05C7  0087               	movwf	7
  6884  05C8  0801               	movf	1,w
  6885  05C9  00F5               	movwf	??_Sinus_Generator+4
  6886  05CA  0875               	movf	??_Sinus_Generator+4,w
  6887  05CB  0020               	movlb	0	; select bank0
  6888  05CC  2DD1               	goto	L6
  6889  05CD                     i1l2035:	
  6890                           
  6891                           ;audio_tone.c: 105: else
  6892                           ;audio_tone.c: 106: current_byte = current_byte >> 1 ;
  6893  05CD  0020               	movlb	0	; select bank0
  6894  05CE  366F               	lsrf	_current_byte,w
  6895  05CF  00F1               	movwf	??_Sinus_Generator
  6896  05D0  0871               	movf	??_Sinus_Generator,w
  6897  05D1                     L6:	
  6898  05D1  00EF               	movwf	_current_byte
  6899                           
  6900                           ;audio_tone.c: 107: if ((current_byte & 0x01) == 0) {
  6901  05D2  186F               	btfsc	_current_byte,0
  6902  05D3  2DE8               	goto	i1l2049
  6903                           
  6904                           ;audio_tone.c: 109: if(tone_index){
  6905  05D4  0021               	movlb	1	; select bank1
  6906  05D5  084B               	movf	Sinus_Generator@tone_index^(0+128),w
  6907  05D6  1903               	btfsc	3,2
  6908  05D7  2DE0               	goto	i1l2045
  6909                           
  6910                           ;audio_tone.c: 110: phase_delta = PHASE_DELTA_1200;
  6911  05D8  0022               	movlb	2	; select bank2
  6912  05D9  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  6913  05DA  00F1               	movwf	??_Sinus_Generator
  6914  05DB  0871               	movf	??_Sinus_Generator,w
  6915  05DC  0021               	movlb	1	; select bank1
  6916  05DD  00D2               	movwf	_phase_delta^(0+128)
  6917                           
  6918                           ;audio_tone.c: 111: tone_index = 0;
  6919  05DE  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6920                           
  6921                           ;audio_tone.c: 112: }
  6922  05DF  2DE8               	goto	i1l2049
  6923  05E0                     i1l2045:	
  6924                           
  6925                           ;audio_tone.c: 113: else{
  6926                           ;audio_tone.c: 114: phase_delta = PHASE_DELTA_2200;
  6927  05E0  0022               	movlb	2	; select bank2
  6928  05E1  0828               	movf	_PHASE_DELTA_2200^(0+256),w
  6929  05E2  00F1               	movwf	??_Sinus_Generator
  6930  05E3  0871               	movf	??_Sinus_Generator,w
  6931  05E4  0021               	movlb	1	; select bank1
  6932  05E5  00D2               	movwf	_phase_delta^(0+128)
  6933                           
  6934                           ;audio_tone.c: 115: tone_index = 1;
  6935  05E6  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6936  05E7  0ACB               	incf	Sinus_Generator@tone_index^(0+128),f
  6937  05E8                     i1l2049:	
  6938                           
  6939                           ;audio_tone.c: 116: }
  6940                           ;audio_tone.c: 117: }
  6941                           ;audio_tone.c: 118: }
  6942                           ;audio_tone.c: 120: phase += phase_delta;
  6943  05E8  0021               	movlb	1	; select bank1
  6944  05E9  0852               	movf	_phase_delta^(0+128),w
  6945  05EA  00F1               	movwf	??_Sinus_Generator
  6946  05EB  0871               	movf	??_Sinus_Generator,w
  6947  05EC  07FD               	addwf	_phase,f
  6948                           
  6949                           ;audio_tone.c: 121: if(phase >= TABLE_SIZE)
  6950  05ED  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6951  05EE  0084               	movwf	4
  6952  05EF  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6953  05F0  0085               	movwf	5
  6954  05F1  3F00               	moviw [0]fsr0
  6955  05F2  00F1               	movwf	??_Sinus_Generator
  6956  05F3  3F01               	moviw [1]fsr0
  6957  05F4  00F2               	movwf	??_Sinus_Generator+1
  6958  05F5  0872               	movf	??_Sinus_Generator+1,w
  6959  05F6  3A80               	xorlw	128
  6960  05F7  3C80               	sublw	128
  6961  05F8  1D03               	skipz
  6962  05F9  2DFC               	goto	u184_25
  6963  05FA  0871               	movf	??_Sinus_Generator,w
  6964  05FB  027D               	subwf	_phase,w
  6965  05FC                     u184_25:	
  6966  05FC  1C03               	skipc
  6967  05FD  2E09               	goto	i1l2055
  6968                           
  6969                           ;audio_tone.c: 122: phase = phase - TABLE_SIZE;
  6970  05FE  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6971  05FF  0084               	movwf	4
  6972  0600  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6973  0601  0085               	movwf	5
  6974  0602  0800               	movf	0,w	;code access
  6975  0603  3AFF               	xorlw	255
  6976  0604  3E01               	addlw	1
  6977  0605  077D               	addwf	_phase,w
  6978  0606  00F1               	movwf	??_Sinus_Generator
  6979  0607  0871               	movf	??_Sinus_Generator,w
  6980  0608  00FD               	movwf	_phase
  6981  0609                     i1l2055:	
  6982                           
  6983                           ;audio_tone.c: 125: Audio_Signal = *(sine_table2 + phase);
  6984  0609  087D               	movf	_phase,w
  6985  060A  3E00               	addlw	low (_sine_table2| (0+32768))
  6986  060B  0084               	movwf	4
  6987  060C  3084               	movlw	high (_sine_table2| (0+32768))
  6988  060D  1803               	skipnc
  6989  060E  3E01               	addlw	1
  6990  060F  0085               	movwf	5
  6991  0610  0800               	movf	0,w	;code access
  6992  0611  00F1               	movwf	??_Sinus_Generator
  6993  0612  0871               	movf	??_Sinus_Generator,w
  6994  0613  00F6               	movwf	Sinus_Generator@Audio_Signal
  6995                           
  6996                           ;audio_tone.c: 126: Send_Vcxo_Signal(Audio_Signal);
  6997  0614  0876               	movf	Sinus_Generator@Audio_Signal,w
  6998  0615  318B  23DC  3185   	fcall	_Send_Vcxo_Signal
  6999                           
  7000                           ;audio_tone.c: 128: current_sample_in_baud++;
  7001  0618  3001               	movlw	1
  7002  0619  00F1               	movwf	??_Sinus_Generator
  7003  061A  0871               	movf	??_Sinus_Generator,w
  7004  061B  0021               	movlb	1	; select bank1
  7005  061C  07D1               	addwf	_current_sample_in_baud^(0+128),f
  7006                           
  7007                           ;audio_tone.c: 130: if(Change_to_New_Baud == 1) {
  7008  061D  0020               	movlb	0	; select bank0
  7009  061E  086E               	movf	_Change_to_New_Baud,w
  7010  061F  3A01               	xorlw	1
  7011  0620  1D03               	skipz
  7012  0621  0008               	return
  7013                           
  7014                           ;audio_tone.c: 131: current_sample_in_baud = 0;
  7015  0622  0021               	movlb	1	; select bank1
  7016  0623  01D1               	clrf	_current_sample_in_baud^(0+128)
  7017                           
  7018                           ;audio_tone.c: 132: packet_pos++;
  7019  0624  3001               	movlw	1
  7020  0625  0022               	movlb	2	; select bank2
  7021  0626  07B0               	addwf	_packet_pos^(0+256),f
  7022  0627  3000               	movlw	0
  7023  0628  3DB1               	addwfc	(_packet_pos+1)^(0+256),f
  7024  0629  3000               	movlw	0
  7025  062A  3DB2               	addwfc	(_packet_pos+2)^(0+256),f
  7026  062B  3000               	movlw	0
  7027  062C  3DB3               	addwfc	(_packet_pos+3)^(0+256),f
  7028                           
  7029                           ;audio_tone.c: 133: Change_to_New_Baud = 0;
  7030  062D  0020               	movlb	0	; select bank0
  7031  062E  01EE               	clrf	_Change_to_New_Baud
  7032                           
  7033                           ;audio_tone.c: 134: }
  7034                           ;audio_tone.c: 136: }
  7035                           ;audio_tone.c: 138: end_generator:
  7036  062F  0008               	return
  7037  0630                     __end_of_Sinus_Generator:	
  7038                           ;audio_tone.c: 140: return;
  7039                           
  7040                           
  7041                           	psect	text42
  7042  0BD8                     __ptext42:	
  7043 ;; *************** function _Timer0_Stop *****************
  7044 ;; Defined at:
  7045 ;;		line 249 in file "utility.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;		None
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;		None               void
  7052 ;; Registers used:
  7053 ;;		status,2
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;Total ram usage:        0 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; This function calls:
  7066 ;;		Nothing
  7067 ;; This function is called by:
  7068 ;;		_Sinus_Generator
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           
  7073                           ;psect for function _Timer0_Stop
  7074  0BD8                     _Timer0_Stop:	
  7075                           
  7076                           ;utility.c: 250: TMR0IE = 0;
  7077                           
  7078                           ;incstack = 0
  7079                           ; Regs used in _Timer0_Stop: [status,2]
  7080  0BD8  128B               	bcf	11,5	;volatile
  7081                           
  7082                           ;utility.c: 251: TMR0 = 0x00;
  7083  0BD9  0020               	movlb	0	; select bank0
  7084  0BDA  0195               	clrf	21	;volatile
  7085  0BDB  0008               	return
  7086  0BDC                     __end_of_Timer0_Stop:	
  7087                           
  7088                           	psect	text43
  7089  0BDC                     __ptext43:	
  7090 ;; *************** function _Send_Vcxo_Signal *****************
  7091 ;; Defined at:
  7092 ;;		line 108 in file "utility.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  value           1    wreg     unsigned char 
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;  value           1    0[COMMON] unsigned char 
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1    wreg      unsigned char 
  7099 ;; Registers used:
  7100 ;;		wreg
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7110 ;;Total ram usage:        1 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_Sinus_Generator
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function _Send_Vcxo_Signal
  7121  0BDC                     _Send_Vcxo_Signal:	
  7122                           
  7123                           ;incstack = 0
  7124                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  7125                           ;Send_Vcxo_Signal@value stored from wreg
  7126  0BDC  00F0               	movwf	Send_Vcxo_Signal@value
  7127                           
  7128                           ;utility.c: 110: DACCON1 = value;
  7129  0BDD  0870               	movf	Send_Vcxo_Signal@value,w
  7130  0BDE  0022               	movlb	2	; select bank2
  7131  0BDF  0099               	movwf	25	;volatile
  7132  0BE0  0008               	return
  7133  0BE1                     __end_of_Send_Vcxo_Signal:	
  7134                           ;utility.c: 111: return 1;
  7135                           ;	Return value of _Send_Vcxo_Signal is never used
  7136                           
  7137  007E                     btemp	set	126	;btemp
  7138  007E                     pic14e$flags	set	126
  7139  007E                     wtemp	set	126
  7140  007E                     wtemp0	set	126
  7141  0080                     wtemp1	set	128
  7142  0082                     wtemp2	set	130
  7143  0084                     wtemp3	set	132
  7144  0086                     wtemp4	set	134
  7145  0088                     wtemp5	set	136
  7146  007F                     wtemp6	set	127
  7147  007E                     ttemp	set	126
  7148  007E                     ttemp0	set	126
  7149  0081                     ttemp1	set	129
  7150  0084                     ttemp2	set	132
  7151  0087                     ttemp3	set	135
  7152  007F                     ttemp4	set	127
  7153  007E                     ltemp	set	126
  7154  007E                     ltemp0	set	126
  7155  0082                     ltemp1	set	130
  7156  0086                     ltemp2	set	134
  7157  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     78      80
    BANK1            80     28      79
    BANK2            80      0      36
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Adf_Lock
    _main->_Modem_Flush_Frame
    _Ptt_Off->_Adf_Write_Register_Three
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_One->_Reverse_Array
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ptt_On->_Adf_Write_Register_Three
    _Adf_Write_Register_Two->_Reverse_Array
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc
    _Adf_Lock->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Adf_Lock
    _Ptt_Off->_Adf_Write_Register_Three
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Ptt_On->_Adf_Write_Register_Three
    _Adf_Lock->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   67166
                                             77 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                           _Adf_Lock
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   12557
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   25114
                    _Configure_Audio
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   25114
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Config                                     0     0      0   22264
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Write_Register_One                              19    19      0    5566
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1425
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1425
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Configure_Audio                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   13982
                                             76 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ptt_On                                               1     1      0   12557
                                             75 BANK0      1     1      0
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Register_Two                              32    32      0    5566
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adf_Lock                                             6     6      0   12648
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
           _Adf_Write_Register_Three
            _Adf_Write_Register_Zero
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Adf_Write_Register_Zero                             36    36      0    5566
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Register_Three                            64    64      0    5566
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Write_Adf7012_Reg                                    4     3      1    3353
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (4) _Spi_Byte_Send                                        4     4      0    1517
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1425
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (3) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Reverse_Array                                       12    11      1    1332
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _Adf_Locked                                           0     0      0       0
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (3) _Read_Adf7012_Muxout                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _global_interrupt                                     2     2      0      45
                                              7 COMMON     2     2      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (10) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (11) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Adf_Lock
     _Adf_Locked
       _Read_Adf7012_Muxout
     _Adf_Write_Register_Three
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Adf_Write_Register_Zero
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
     _Timer0_Start
   _Modem_Setup
     _Configure_Audio
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
   _Ptt_Off
     _Adf_Write_Register_Three
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Adf_Write_Register_Two
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _Sinus_Generator
     _Send_Vcxo_Signal
     _Timer0_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      24       9       45.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     111      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     111      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed Oct 01 12:41:45 2014

                      __CFG_CP$OFF 0000            _Adf_Reset_Register_Zero 0CFB  
                   Reverse_Array@i 0032                     Spi_Byte_Send@i 0029  
         __end_of_Adf_Reset_Config 0C39                        __CFG_LVP$ON 0000  
         _Adf_Reset_Register_Three 03D8                                l203 0D23  
                              l233 0D73                                l139 06E7  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00C7                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 0033  
                     __CFG_IESO$ON 0000                      ??_Gpio_Config 0020  
           _Adf_Write_Register_One 0E9B             _Adf_Write_Register_Two 04C4  
                             l2011 07E3                               l2009 07C1  
                             l2203 02AB                               l2207 024B  
                             l2209 02C5                               l2217 0CE1  
                             l2173 0227                               l2263 0FBA  
                             l2167 0214                               l2193 0265  
                             l2185 0248                               l1731 0D44  
                             l2179 0235                               l1709 0D74  
                             l1901 06A0                               l1911 06DE  
                             l2199 028A                               l2471 075B  
                             l1745 0E00                               l2465 0752  
                             l1747 0E14                               l2475 0766  
                             l1765 03B8                               l1861 0DDA  
                             l1871 0C0E                               l1985 0F56  
                             l1987 0F78                               _ADIE 048E  
                             _ADIF 008E                               _ADFM 04F7  
                             _ADON 04E8                               STR_1 04BE  
                     __CFG_WDTE$ON 0000                               u1115 0D4E  
                             u1205 033C                               u1215 0EA4  
                             u1305 0092                               u1145 02D6  
                             u1225 0EB2                               u1075 0D29  
                             u1315 00A1                               u1155 02E5  
                             u1235 0ECC                               u1405 0128  
                             u1325 00B0                               u1165 02F4  
                             u1245 04CD                               u1415 0137  
                             u1335 00BF                               u1175 0303  
                             u1255 04DC                               u1425 0146  
                             u1345 00CE                               u1185 0312  
                             u1505 0663                               u1265 04F6  
                             u1514 066C                               u2410 0724  
                             u1435 0155                               u1355 00DD  
                             u1195 0321                               u1515 066B  
                             u1275 0505                               u1365 00EC  
                             u1525 0679                               u1605 0F28  
                             u1285 0514                               u1614 0F30  
                             u1375 00FB                               u1535 069E  
                             u1615 0F2F                               u1295 0523  
                             u1704 079B                               u1385 010A  
                             u1705 079A                               u1545 06AE  
                             u1554 06B8                               u1474 0644  
                             u1634 0F3B                               u1395 0119  
                             u1555 06B7                               u1475 0643  
                             u1635 0F3A                               u1724 07A6  
                             u1484 0651                               u1725 07A5  
                             u1565 06C6                               u1485 0650  
                             u1645 0F48                               u1654 0F5D  
                             u1735 07B3                               u1655 0F5C  
                             u1744 07C8                               u1745 07C7  
                             u1665 0F6B                               u1905 0263  
                             u1755 07D6                               u1915 0269  
                             u1925 0288                               u1695 0793  
                             u1935 0297                               u1945 029C  
                             u1865 0212                               u1955 02AF  
                             u1875 0225                               u1965 0255  
                             u1885 0233                               u1895 0246  
                             u1985 0CD3                               u2977 0D2F  
                             _PIR1 0011                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 06E4                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    Send_Byte@byte 0029                      __CFG_BOREN$ON 0000  
                             ltemp 007E                               start 0059  
                             ttemp 007E                    _Sinus_Generator 057B  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
          _Adf_Write_Register_Zero 02CD                        ?_Adc1_Start 0070  
                     Adf_Lock@bias 00DD                 main@beacon_address 00DF  
                    __CFG_PLLEN$ON 0000                    __end_of_Ptt_Off 0C7E  
                    ??_Radio_Setup 006B                              _ADCS0 04F4  
                            _ADCS1 04F5                              _ADCS2 04F6  
                            ?_main 0070                              _DACEN 08C7  
                            _DACOE 08C5                              _ANSA1 0C61  
                            i1l130 0054                              i1l131 0049  
                            i1l133 0053                              i1l129 001B  
                            _TMR1H 0017                              _TMR1L 0016  
                            _TRISA 008C                              _TRISC 008E  
       Write_Adf7012_Reg@reg_value 002C                              _phase 007D  
                 __end_of_Adf_Lock 1000                      ??_Modem_Setup 006B  
                __end_of_BAUD_RATE 04BC                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                 __size_of_Adf_Reset 0012  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 0C10  
                            wtemp6 007F                __end_of_Gpio_Config 0C93  
                 __end_of_Delay_ms 0D3A                        ?_Adf_Locked 0070  
                  _Configure_Audio 0C93             _current_sample_in_baud 00D1  
                Spi_Byte_Send@data 0027                         Send_Byte@i 002A  
                  __initialization 005B          ??_Adf_Reset_Register_Zero 0020  
        __size_of_Ax25_Send_Header 00D8              __size_of_System_Start 003B  
                     __end_of_main 0774          __size_of_Ax25_Send_Footer 001B  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 03D8  
         _Adf_Write_Register_Three 0089              __end_of_Spi_Byte_Send 0D8D  
                           ??_main 006D          __size_of_Send_Vcxo_Signal 0005  
              __end_of_Radio_Setup 0C2A       __size_of_Read_Adf7012_Muxout 0007  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _CCP1IF 008A  
                           _DACNSS 08C0                             _ADNREF 04F2  
                           _ADRESH 009C                             _ADRESL 009B  
                           _CCPR1H 0292                             _CCPR1L 0291  
          __end_of_Sinus_Generator 0630      Adf_Write_Register_One@reg_ptr 0043  
                           i1l2035 05CD                             i1l2045 05E0  
                           i1l2029 059D                             i1l2055 0609  
                           i1l2049 05E8                             _INTCON 000B  
                           u181_25 05BD                             u238_25 003C  
              __size_of_Adc1_Start 0006                             u184_25 05FC  
                           u178_25 058F                 Reverse_Array@F3148 0120  
                           _OSCCON 0099           __size_of_Dac0_Start_Hold 0005  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1IE 0488                             _TMR1IF 0088  
                           _TMR1ON 00C0                       _System_Start 0E24  
                           _WDTPS0 04B9                             _WDTPS1 04BA  
                           _WDTPS2 04BB                             _WDTPS3 04BC  
                           _WDTPS4 04BD                __end_of_Modem_Setup 0BFD  
                   __CFG_PWRTE$OFF 0000                      ??_Timer0_Stop 0070  
        ??_Adf_Write_Register_Zero 0033                             _Ptt_On 0E5F  
                        ??_Ptt_Off 006B                 __size_of_Send_Byte 00B4  
               Reverse_Array@input 0031                     __CFG_STVREN$ON 0000  
                 ??_Ax25_Send_Flag 0020                   ??_Ax25_Send_Byte 002C  
                           _memcpy 0D3A                   ??_Ax25_Send_Sync 0020  
                __end_of_Adf_Reset 0C6B                         _Update_Crc 0DB9  
              __size_of_Adf_Locked 0003                        _Gpio_Config 0C7E  
          __end_of_Configure_Audio 0CAB            __end_of__initialization 0085  
        __size_of_global_interrupt 0055                 Write_Adf7012_Reg@i 002D  
       ??_Adf_Reset_Register_Three 0020                     __pcstackCOMMON 0070  
         ??_Adf_Reset_Register_One 0020                       __pidataBANK2 07F0  
         ??_Adf_Reset_Register_Two 0020                         _adf_config 00A0  
              __end_of_Timer0_Stop 0BDC                      _PLAYBACK_RATE 04B6  
                        ?_Adf_Lock 0070                  ?_Adf_Reset_Config 0070  
                      _Radio_Setup 0C1C            ?_Adf_Write_Register_One 0070  
          ?_Adf_Write_Register_Two 0070          Spi_Byte_Send@data_to_send 0028  
               ??_Adf_Reset_Config 0026                          ?_Delay_ms 0020  
                __end_of_Send_Byte 06E4                   _PHASE_DELTA_1200 0124  
                 _PHASE_DELTA_2200 0128                        _Modem_Setup 0BF7  
                       __pbssBANK0 006E                         __pbssBANK1 00A0  
                       __pbssBANK2 0120                         __pbssBANK3 01A0  
                 ?_Sinus_Generator 0070                 Ax25_Send_Flag@byte 0026  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 00D7  
                    ?_Timer1_Start 0070                         __pmaintext 06E4  
                 _Ax25_Send_Header 01F5                            ?_Ptt_On 0070  
                ??_Dac0_Start_Hold 0020                 __end_of_TABLE_SIZE 04BE  
                 _Ax25_Send_Footer 0CC3                         __pintentry 0004  
                     ??_Adc1_Start 0020                            _DACCON1 0119  
               Ax25_Send_Byte@byte 002C                            _DACPSS0 08C2  
                          _DACPSS1 08C3                            ?_memcpy 0020  
                 _Ax25_Send_String 0CDE                            _ADPREF0 04F0  
                          _ADPREF1 04F1                         ??_Adf_Lock 006B  
   __end_of_Adf_Write_Register_One 0F0C     __end_of_Adf_Write_Register_Two 057B  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                 _Send_Vcxo_Signal 0BDC           __end_of_Adf_Write_Config 0C1C  
                      ?_Update_Crc 0070                         ??_Delay_ms 0022  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _PTT_OFF 00CD                Update_Crc@input_bit 0022  
                 ?_Configure_Audio 0070      Adf_Write_Register_Two@reg_ptr 004B  
   Adf_Write_Register_Zero@reg_ptr 004F                 __end_of_Adc1_Start 0BF1  
                   ??_Timer0_Start 0020                     ??_Timer1_Start 0020  
                        _BAUD_RATE 04BA                       ??_Adf_Locked 0020  
       ??_Adf_Write_Register_Three 0033                        _Timer0_Stop 0BD8  
                       _packet_pos 0130                            _Ptt_Off 0C6B  
                  __size_of_Ptt_On 003C                _Read_Adf7012_Muxout 0C09  
  __size_of_Adf_Reset_Register_One 0011    __size_of_Adf_Reset_Register_Two 0018  
               Ax25_Send_Sync@byte 0026                Reverse_Array@length 0027  
                  Ax25_Send_Flag@i 0027                    __size_of_memcpy 0029  
                          __ptext1 0C39                            __ptext2 0E24  
                          __ptext3 0C6B                            __ptext4 0BF7  
                          __ptext5 0C1C                            __ptext6 0C10  
                          __ptext7 0E9B                            __ptext8 0C2A  
                          __ptext9 0CFB              Delay_ms@time_to_delay 0020  
        Adf_Write_Register_One@reg 003F                    Ax25_Send_Sync@i 0027  
               __end_of_Adf_Locked 0BD8               ?_Read_Adf7012_Muxout 0070  
        Adf_Write_Register_Two@reg 004F                            clrloop0 0C04  
  Adf_Write_Register_Three@reg_ptr 00D3               end_of_initialization 0085  
                          memcpy@d 0024                            memcpy@n 0021  
                          memcpy@s 0025                          Delay_ms@i 0024  
                          init_ram 0BFD                            initloop 0BFE  
                 _global_interrupt 0004                __size_of_Update_Crc 0032  
                     __pstringtext 0400                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 012C                          _Adf_Reset 0C59  
            ??_Read_Adf7012_Muxout 0020                   _SAMPLES_PER_BAUD 00CE  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 0C48  
     Write_Adf7012_Reg@size_of_reg 002A             _Adf_Reset_Register_Two 0CAB  
        Sinus_Generator@tone_index 00CB             __size_of_Reverse_Array 0044  
           __size_of_Spi_Byte_Send 002A           ?_Adf_Reset_Register_Zero 0070  
                      Adf_Lock@adj 00DB                     __end_of_Ptt_On 0E9B  
               _Change_to_New_Baud 006E                     __end_of_memcpy 0D63  
                     ?_Radio_Setup 0070                  __size_of_Adf_Lock 007B  
             __end_of_Timer0_Start 0BEB               __end_of_Timer1_Start 0C48  
              start_initialization 005B                         ?_Adf_Reset 0070  
         __end_of_Ax25_Send_Header 02CD           __end_of_Ax25_Send_Footer 0CDE  
                __size_of_Delay_ms 0020                       ?_Modem_Setup 0070  
                  _Dac0_Start_Hold 0BE1           __end_of_Ax25_Send_String 0CFB  
        __size_of_Adf_Reset_Config 000F           ?_Adf_Write_Register_Zero 0070  
                        _Send_Byte 0630           __end_of_Send_Vcxo_Signal 0BE1  
                         ??_Ptt_On 006B                        __pdataBANK2 0134  
                         ??_memcpy 0023                      _Reverse_Array 0394  
                    _Spi_Byte_Send 0D63                  ?_Adf_Write_Config 0070  
                     ??_Update_Crc 0020                        __pbssCOMMON 0079  
                        ___latbits 0002  __size_of_Adf_Reset_Register_Three 0026  
                    _ones_in_a_row 00C9                      __pcstackBANK0 0020  
                    __pcstackBANK1 00D3                 ??_Adf_Write_Config 006B  
        ?_Adf_Reset_Register_Three 0070                          _adc__high 00CF  
              __end_of__stringdata 04C4            __size_of_Ax25_Send_Flag 007C  
          __size_of_Ax25_Send_Byte 0006            __size_of_Ax25_Send_Sync 0079  
  __end_of_Adf_Reset_Register_Zero 0D1A      Ax25_Send_Header@num_addresses 002C  
                       ?_Send_Byte 0070                  _Write_Adf7012_Reg 0DEB  
                     _current_byte 006F                  Ax25_Send_Header@i 0034  
                Ax25_Send_Header@j 0031                 ?_Write_Adf7012_Reg 002A  
                     ?_Timer0_Stop 0070           __size_of_Sinus_Generator 00B5  
        Ax25_Send_Footer@final_crc 002C             Ax25_Send_String@string 002D  
                         ?_Ptt_Off 0070                 __end_of_Update_Crc 0DEB  
              ??_Write_Adf7012_Reg 002B                     ?_Reverse_Array 0027  
                   ?_Spi_Byte_Send 0070           __end_of_global_interrupt 0059  
          __end_of_Dac0_Start_Hold 0BE6                        ??_Adf_Reset 0026  
  __end_of_Adf_Write_Register_Zero 0394                  Ax25_Send_String@i 002F  
        __end_of_Write_Adf7012_Reg 0E24               __size_of_Gpio_Config 0015  
                    ?_System_Start 0070                       _modem_packet 01A0  
                        clear_ram0 0C03           __size_of_Configure_Audio 0018  
                        main@F3169 0134              __size_of_Timer0_Start 0005  
                         _Adf_Lock 0F85              __size_of_Timer1_Start 000F  
        Reverse_Array@buffer_array 002D                        __stringdata 04BE  
__size_of_Adf_Write_Register_Three 016C            ?_Adf_Reset_Register_One 0070  
        ?_Adf_Write_Register_Three 0070            ?_Adf_Reset_Register_Two 0070  
             __size_of_Radio_Setup 000E                           _Delay_ms 0D1A  
            Send_Vcxo_Signal@value 0070                     ??_System_Start 0020  
                 _Adf_Reset_Config 0C2A                        ??_Send_Byte 0023  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 0D8D  
               ?_Modem_Flush_Frame 0070                       _Timer0_Start 0BE6  
                     _Timer1_Start 0C39           ??_Adf_Write_Register_One 0033  
         ??_Adf_Write_Register_Two 0033                   __size_of_Ptt_Off 0013  
                  ??_Reverse_Array 0028                    ??_Spi_Byte_Send 0026  
            __end_of_PLAYBACK_RATE 04BA                ??_Modem_Flush_Frame 006C  
                ??_Sinus_Generator 0071   __size_of_Adf_Reset_Register_Zero 001F  
                         _adc__low 00D0        __end_of_Read_Adf7012_Muxout 0C10  
   __end_of_Adf_Reset_Register_One 0C59     __end_of_Adf_Reset_Register_Two 0CC3  
              __end_of_sine_table2 04B6                   ?_Dac0_Start_Hold 0070  
                   _Ax25_Send_Flag 0774                     _Ax25_Send_Byte 0BF1  
                   _Ax25_Send_Sync 0F0C                           __ptext10 0CAB  
                         __ptext11 03D8                           __ptext20 0CDE  
                         __ptext12 0C48                           __ptext21 0BF1  
                         __ptext13 0C59                           __ptext30 0089  
                         __ptext22 01F5                           __ptext14 0C93  
                         __ptext31 0DEB                           __ptext23 0F0C  
                         __ptext15 0D8D                           __ptext32 0D63  
                         __ptext24 0CC3                           __ptext16 0BE6  
                         __ptext41 057B                           __ptext33 0D1A  
                         __ptext25 0630                           __ptext17 0E5F  
                         __ptext42 0BD8                           __ptext34 0BE1  
                         __ptext26 0DB9                           __ptext18 04C4  
                         __ptext43 0BDC                           __ptext35 0394  
                         __ptext27 0774                           __ptext19 0C7E  
                         __ptext36 0D3A                           __ptext28 0F85  
                         __ptext37 0BD5                           __ptext29 02CD  
                         __ptext38 0C09                           __ptext39 0BEB  
                ?_Ax25_Send_Header 002C                  ?_Ax25_Send_Footer 0070  
               ??_Ax25_Send_Header 002E          __end_of_Modem_Flush_Frame 0DB9  
       __size_of_Write_Adf7012_Reg 0039                  ?_Ax25_Send_String 002D  
               ??_Ax25_Send_Footer 002C                      __size_of_main 0090  
                      _phase_delta 00D2                  ?_Send_Vcxo_Signal 0070  
               ??_Ax25_Send_String 002F                 ??_Send_Vcxo_Signal 0070  
 __end_of_Adf_Reset_Register_Three 03FE               __size_of_Timer0_Stop 0004  
       Adf_Write_Register_Zero@reg 0053   __size_of_Adf_Write_Register_Zero 00C7  
                ??_Configure_Audio 0020             __end_of_Ax25_Send_Flag 07F0  
           __end_of_Ax25_Send_Byte 0BF7             __end_of_Ax25_Send_Sync 0F85  
                       _TABLE_SIZE 04BC                           memcpy@d1 0026  
                         memcpy@s1 0020                        pic14e$flags 007E  
                         intlevel1 0000          __size_of_Adf_Write_Config 000C  
                __CFG_CLKOUTEN$OFF 0000                 _MODEM_TRANSMITTING 00CC  
  __size_of_Adf_Write_Register_One 0071    __size_of_Adf_Write_Register_Two 00B7  
                       _Adc1_Start 0BEB                        _sine_table2 0400  
             __end_of_System_Start 0E5F                    ?_Ax25_Send_Flag 0070  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070        Sinus_Generator@Audio_Signal 0076  
               ??_global_interrupt 0077         __size_of_Modem_Flush_Frame 002C  
                       _Adf_Locked 0BD5                  _modem_packet_size 0079  
 __end_of_Adf_Write_Register_Three 01F5  
