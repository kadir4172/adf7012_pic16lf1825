

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Oct 02 14:18:13 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	dabs	1,0x7E,2
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000E                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010E                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  011E                     	;# 
   126  018C                     	;# 
   127  018E                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  020E                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029B                     	;# 
   175  029C                     	;# 
   176  029D                     	;# 
   177  029E                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0318                     	;# 
   183  0318                     	;# 
   184  0319                     	;# 
   185  031A                     	;# 
   186  038C                     	;# 
   187  038E                     	;# 
   188  0391                     	;# 
   189  0392                     	;# 
   190  0393                     	;# 
   191  039A                     	;# 
   192  039C                     	;# 
   193  039D                     	;# 
   194  039E                     	;# 
   195  039F                     	;# 
   196  0415                     	;# 
   197  0416                     	;# 
   198  0417                     	;# 
   199  041C                     	;# 
   200  041D                     	;# 
   201  041E                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000E                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  008C                     	;# 
   242  008E                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0095                     	;# 
   247  0096                     	;# 
   248  0097                     	;# 
   249  0098                     	;# 
   250  0099                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  010C                     	;# 
   258  010E                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  011E                     	;# 
   272  018C                     	;# 
   273  018E                     	;# 
   274  0191                     	;# 
   275  0191                     	;# 
   276  0192                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0199                     	;# 
   284  019A                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  019D                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  020C                     	;# 
   292  020E                     	;# 
   293  0211                     	;# 
   294  0211                     	;# 
   295  0212                     	;# 
   296  0212                     	;# 
   297  0213                     	;# 
   298  0213                     	;# 
   299  0214                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  0291                     	;# 
   309  0291                     	;# 
   310  0292                     	;# 
   311  0293                     	;# 
   312  0294                     	;# 
   313  0295                     	;# 
   314  0295                     	;# 
   315  0296                     	;# 
   316  0298                     	;# 
   317  0298                     	;# 
   318  0299                     	;# 
   319  029A                     	;# 
   320  029B                     	;# 
   321  029C                     	;# 
   322  029D                     	;# 
   323  029E                     	;# 
   324  0311                     	;# 
   325  0311                     	;# 
   326  0312                     	;# 
   327  0313                     	;# 
   328  0318                     	;# 
   329  0318                     	;# 
   330  0319                     	;# 
   331  031A                     	;# 
   332  038C                     	;# 
   333  038E                     	;# 
   334  0391                     	;# 
   335  0392                     	;# 
   336  0393                     	;# 
   337  039A                     	;# 
   338  039C                     	;# 
   339  039D                     	;# 
   340  039E                     	;# 
   341  039F                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0FE4                     	;# 
   349  0FE5                     	;# 
   350  0FE6                     	;# 
   351  0FE7                     	;# 
   352  0FE8                     	;# 
   353  0FE9                     	;# 
   354  0FEA                     	;# 
   355  0FEB                     	;# 
   356  0FED                     	;# 
   357  0FEE                     	;# 
   358  0FEF                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000E                     	;# 
   373  0011                     	;# 
   374  0012                     	;# 
   375  0013                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  001E                     	;# 
   386  001F                     	;# 
   387  008C                     	;# 
   388  008E                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  010C                     	;# 
   404  010E                     	;# 
   405  0111                     	;# 
   406  0112                     	;# 
   407  0113                     	;# 
   408  0114                     	;# 
   409  0115                     	;# 
   410  0116                     	;# 
   411  0117                     	;# 
   412  0118                     	;# 
   413  0119                     	;# 
   414  011A                     	;# 
   415  011B                     	;# 
   416  011D                     	;# 
   417  011E                     	;# 
   418  018C                     	;# 
   419  018E                     	;# 
   420  0191                     	;# 
   421  0191                     	;# 
   422  0192                     	;# 
   423  0193                     	;# 
   424  0193                     	;# 
   425  0193                     	;# 
   426  0194                     	;# 
   427  0195                     	;# 
   428  0196                     	;# 
   429  0199                     	;# 
   430  019A                     	;# 
   431  019B                     	;# 
   432  019B                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019E                     	;# 
   436  019F                     	;# 
   437  020C                     	;# 
   438  020E                     	;# 
   439  0211                     	;# 
   440  0211                     	;# 
   441  0212                     	;# 
   442  0212                     	;# 
   443  0213                     	;# 
   444  0213                     	;# 
   445  0214                     	;# 
   446  0214                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0216                     	;# 
   451  0216                     	;# 
   452  0217                     	;# 
   453  0217                     	;# 
   454  0291                     	;# 
   455  0291                     	;# 
   456  0292                     	;# 
   457  0293                     	;# 
   458  0294                     	;# 
   459  0295                     	;# 
   460  0295                     	;# 
   461  0296                     	;# 
   462  0298                     	;# 
   463  0298                     	;# 
   464  0299                     	;# 
   465  029A                     	;# 
   466  029B                     	;# 
   467  029C                     	;# 
   468  029D                     	;# 
   469  029E                     	;# 
   470  0311                     	;# 
   471  0311                     	;# 
   472  0312                     	;# 
   473  0313                     	;# 
   474  0318                     	;# 
   475  0318                     	;# 
   476  0319                     	;# 
   477  031A                     	;# 
   478  038C                     	;# 
   479  038E                     	;# 
   480  0391                     	;# 
   481  0392                     	;# 
   482  0393                     	;# 
   483  039A                     	;# 
   484  039C                     	;# 
   485  039D                     	;# 
   486  039E                     	;# 
   487  039F                     	;# 
   488  0415                     	;# 
   489  0416                     	;# 
   490  0417                     	;# 
   491  041C                     	;# 
   492  041D                     	;# 
   493  041E                     	;# 
   494  0FE4                     	;# 
   495  0FE5                     	;# 
   496  0FE6                     	;# 
   497  0FE7                     	;# 
   498  0FE8                     	;# 
   499  0FE9                     	;# 
   500  0FEA                     	;# 
   501  0FEB                     	;# 
   502  0FED                     	;# 
   503  0FEE                     	;# 
   504  0FEF                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000E                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0013                     	;# 
   522  0015                     	;# 
   523  0016                     	;# 
   524  0016                     	;# 
   525  0017                     	;# 
   526  0018                     	;# 
   527  0019                     	;# 
   528  001A                     	;# 
   529  001B                     	;# 
   530  001C                     	;# 
   531  001E                     	;# 
   532  001F                     	;# 
   533  008C                     	;# 
   534  008E                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0095                     	;# 
   539  0096                     	;# 
   540  0097                     	;# 
   541  0098                     	;# 
   542  0099                     	;# 
   543  009A                     	;# 
   544  009B                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  010C                     	;# 
   550  010E                     	;# 
   551  0111                     	;# 
   552  0112                     	;# 
   553  0113                     	;# 
   554  0114                     	;# 
   555  0115                     	;# 
   556  0116                     	;# 
   557  0117                     	;# 
   558  0118                     	;# 
   559  0119                     	;# 
   560  011A                     	;# 
   561  011B                     	;# 
   562  011D                     	;# 
   563  011E                     	;# 
   564  018C                     	;# 
   565  018E                     	;# 
   566  0191                     	;# 
   567  0191                     	;# 
   568  0192                     	;# 
   569  0193                     	;# 
   570  0193                     	;# 
   571  0193                     	;# 
   572  0194                     	;# 
   573  0195                     	;# 
   574  0196                     	;# 
   575  0199                     	;# 
   576  019A                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019C                     	;# 
   580  019D                     	;# 
   581  019E                     	;# 
   582  019F                     	;# 
   583  020C                     	;# 
   584  020E                     	;# 
   585  0211                     	;# 
   586  0211                     	;# 
   587  0212                     	;# 
   588  0212                     	;# 
   589  0213                     	;# 
   590  0213                     	;# 
   591  0214                     	;# 
   592  0214                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0216                     	;# 
   597  0216                     	;# 
   598  0217                     	;# 
   599  0217                     	;# 
   600  0291                     	;# 
   601  0291                     	;# 
   602  0292                     	;# 
   603  0293                     	;# 
   604  0294                     	;# 
   605  0295                     	;# 
   606  0295                     	;# 
   607  0296                     	;# 
   608  0298                     	;# 
   609  0298                     	;# 
   610  0299                     	;# 
   611  029A                     	;# 
   612  029B                     	;# 
   613  029C                     	;# 
   614  029D                     	;# 
   615  029E                     	;# 
   616  0311                     	;# 
   617  0311                     	;# 
   618  0312                     	;# 
   619  0313                     	;# 
   620  0318                     	;# 
   621  0318                     	;# 
   622  0319                     	;# 
   623  031A                     	;# 
   624  038C                     	;# 
   625  038E                     	;# 
   626  0391                     	;# 
   627  0392                     	;# 
   628  0393                     	;# 
   629  039A                     	;# 
   630  039C                     	;# 
   631  039D                     	;# 
   632  039E                     	;# 
   633  039F                     	;# 
   634  0415                     	;# 
   635  0416                     	;# 
   636  0417                     	;# 
   637  041C                     	;# 
   638  041D                     	;# 
   639  041E                     	;# 
   640  0FE4                     	;# 
   641  0FE5                     	;# 
   642  0FE6                     	;# 
   643  0FE7                     	;# 
   644  0FE8                     	;# 
   645  0FE9                     	;# 
   646  0FEA                     	;# 
   647  0FEB                     	;# 
   648  0FED                     	;# 
   649  0FEE                     	;# 
   650  0FEF                     	;# 
   651  0000                     	;# 
   652  0001                     	;# 
   653  0002                     	;# 
   654  0003                     	;# 
   655  0004                     	;# 
   656  0005                     	;# 
   657  0006                     	;# 
   658  0007                     	;# 
   659  0008                     	;# 
   660  0009                     	;# 
   661  000A                     	;# 
   662  000B                     	;# 
   663  000C                     	;# 
   664  000E                     	;# 
   665  0011                     	;# 
   666  0012                     	;# 
   667  0013                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001C                     	;# 
   677  001E                     	;# 
   678  001F                     	;# 
   679  008C                     	;# 
   680  008E                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0093                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  010C                     	;# 
   696  010E                     	;# 
   697  0111                     	;# 
   698  0112                     	;# 
   699  0113                     	;# 
   700  0114                     	;# 
   701  0115                     	;# 
   702  0116                     	;# 
   703  0117                     	;# 
   704  0118                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011B                     	;# 
   708  011D                     	;# 
   709  011E                     	;# 
   710  018C                     	;# 
   711  018E                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0193                     	;# 
   718  0194                     	;# 
   719  0195                     	;# 
   720  0196                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019D                     	;# 
   727  019E                     	;# 
   728  019F                     	;# 
   729  020C                     	;# 
   730  020E                     	;# 
   731  0211                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0212                     	;# 
   735  0213                     	;# 
   736  0213                     	;# 
   737  0214                     	;# 
   738  0214                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0216                     	;# 
   743  0216                     	;# 
   744  0217                     	;# 
   745  0217                     	;# 
   746  0291                     	;# 
   747  0291                     	;# 
   748  0292                     	;# 
   749  0293                     	;# 
   750  0294                     	;# 
   751  0295                     	;# 
   752  0295                     	;# 
   753  0296                     	;# 
   754  0298                     	;# 
   755  0298                     	;# 
   756  0299                     	;# 
   757  029A                     	;# 
   758  029B                     	;# 
   759  029C                     	;# 
   760  029D                     	;# 
   761  029E                     	;# 
   762  0311                     	;# 
   763  0311                     	;# 
   764  0312                     	;# 
   765  0313                     	;# 
   766  0318                     	;# 
   767  0318                     	;# 
   768  0319                     	;# 
   769  031A                     	;# 
   770  038C                     	;# 
   771  038E                     	;# 
   772  0391                     	;# 
   773  0392                     	;# 
   774  0393                     	;# 
   775  039A                     	;# 
   776  039C                     	;# 
   777  039D                     	;# 
   778  039E                     	;# 
   779  039F                     	;# 
   780  0415                     	;# 
   781  0416                     	;# 
   782  0417                     	;# 
   783  041C                     	;# 
   784  041D                     	;# 
   785  041E                     	;# 
   786  0FE4                     	;# 
   787  0FE5                     	;# 
   788  0FE6                     	;# 
   789  0FE7                     	;# 
   790  0FE8                     	;# 
   791  0FE9                     	;# 
   792  0FEA                     	;# 
   793  0FEB                     	;# 
   794  0FED                     	;# 
   795  0FEE                     	;# 
   796  0FEF                     	;# 
   797                           
   798                           	psect	idataBANK2
   799  0BDA                     __pidataBANK2:	
   800                           
   801                           ;initializer for main@F2948
   802  0BDA  3443               	retlw	67
   803  0BDB  3455               	retlw	85
   804  0BDC  3442               	retlw	66
   805  0BDD  3445               	retlw	69
   806  0BDE  3459               	retlw	89
   807  0BDF  3459               	retlw	89
   808  0BE0  3400               	retlw	0
   809  0BE1  3405               	retlw	5
   810  0BE2  3443               	retlw	67
   811  0BE3  3455               	retlw	85
   812  0BE4  3442               	retlw	66
   813  0BE5  3445               	retlw	69
   814  0BE6  3458               	retlw	88
   815  0BE7  3458               	retlw	88
   816  0BE8  3400               	retlw	0
   817  0BE9  3406               	retlw	6
   818                           
   819                           	psect	stringtext
   820  0400                     __pstringtext:	
   821  0400                     _sine_table2:	
   822  0400  3410               	retlw	16
   823  0401  3410               	retlw	16
   824  0402  3411               	retlw	17
   825  0403  3411               	retlw	17
   826  0404  3412               	retlw	18
   827  0405  3412               	retlw	18
   828  0406  3413               	retlw	19
   829  0407  3413               	retlw	19
   830  0408  3414               	retlw	20
   831  0409  3414               	retlw	20
   832  040A  3415               	retlw	21
   833  040B  3415               	retlw	21
   834  040C  3416               	retlw	22
   835  040D  3416               	retlw	22
   836  040E  3417               	retlw	23
   837  040F  3417               	retlw	23
   838  0410  3418               	retlw	24
   839  0411  3418               	retlw	24
   840  0412  3419               	retlw	25
   841  0413  3419               	retlw	25
   842  0414  3419               	retlw	25
   843  0415  341A               	retlw	26
   844  0416  341A               	retlw	26
   845  0417  341B               	retlw	27
   846  0418  341B               	retlw	27
   847  0419  341B               	retlw	27
   848  041A  341C               	retlw	28
   849  041B  341C               	retlw	28
   850  041C  341C               	retlw	28
   851  041D  341D               	retlw	29
   852  041E  341D               	retlw	29
   853  041F  341D               	retlw	29
   854  0420  341D               	retlw	29
   855  0421  341E               	retlw	30
   856  0422  341E               	retlw	30
   857  0423  341E               	retlw	30
   858  0424  341E               	retlw	30
   859  0425  341E               	retlw	30
   860  0426  341E               	retlw	30
   861  0427  341F               	retlw	31
   862  0428  341F               	retlw	31
   863  0429  341F               	retlw	31
   864  042A  341F               	retlw	31
   865  042B  341F               	retlw	31
   866  042C  341F               	retlw	31
   867  042D  341F               	retlw	31
   868  042E  341F               	retlw	31
   869  042F  341F               	retlw	31
   870  0430  341F               	retlw	31
   871  0431  341F               	retlw	31
   872  0432  341F               	retlw	31
   873  0433  341F               	retlw	31
   874  0434  341F               	retlw	31
   875  0435  341E               	retlw	30
   876  0436  341E               	retlw	30
   877  0437  341E               	retlw	30
   878  0438  341E               	retlw	30
   879  0439  341E               	retlw	30
   880  043A  341E               	retlw	30
   881  043B  341D               	retlw	29
   882  043C  341D               	retlw	29
   883  043D  341D               	retlw	29
   884  043E  341D               	retlw	29
   885  043F  341C               	retlw	28
   886  0440  341C               	retlw	28
   887  0441  341C               	retlw	28
   888  0442  341B               	retlw	27
   889  0443  341B               	retlw	27
   890  0444  341B               	retlw	27
   891  0445  341A               	retlw	26
   892  0446  341A               	retlw	26
   893  0447  3419               	retlw	25
   894  0448  3419               	retlw	25
   895  0449  3419               	retlw	25
   896  044A  3418               	retlw	24
   897  044B  3418               	retlw	24
   898  044C  3417               	retlw	23
   899  044D  3417               	retlw	23
   900  044E  3416               	retlw	22
   901  044F  3416               	retlw	22
   902  0450  3415               	retlw	21
   903  0451  3415               	retlw	21
   904  0452  3414               	retlw	20
   905  0453  3414               	retlw	20
   906  0454  3413               	retlw	19
   907  0455  3413               	retlw	19
   908  0456  3412               	retlw	18
   909  0457  3412               	retlw	18
   910  0458  3411               	retlw	17
   911  0459  3411               	retlw	17
   912  045A  3410               	retlw	16
   913  045B  3410               	retlw	16
   914  045C  340F               	retlw	15
   915  045D  340E               	retlw	14
   916  045E  340E               	retlw	14
   917  045F  340D               	retlw	13
   918  0460  340D               	retlw	13
   919  0461  340C               	retlw	12
   920  0462  340C               	retlw	12
   921  0463  340B               	retlw	11
   922  0464  340B               	retlw	11
   923  0465  340A               	retlw	10
   924  0466  340A               	retlw	10
   925  0467  3409               	retlw	9
   926  0468  3409               	retlw	9
   927  0469  3408               	retlw	8
   928  046A  3408               	retlw	8
   929  046B  3407               	retlw	7
   930  046C  3407               	retlw	7
   931  046D  3406               	retlw	6
   932  046E  3406               	retlw	6
   933  046F  3406               	retlw	6
   934  0470  3405               	retlw	5
   935  0471  3405               	retlw	5
   936  0472  3404               	retlw	4
   937  0473  3404               	retlw	4
   938  0474  3404               	retlw	4
   939  0475  3403               	retlw	3
   940  0476  3403               	retlw	3
   941  0477  3403               	retlw	3
   942  0478  3402               	retlw	2
   943  0479  3402               	retlw	2
   944  047A  3402               	retlw	2
   945  047B  3402               	retlw	2
   946  047C  3401               	retlw	1
   947  047D  3401               	retlw	1
   948  047E  3401               	retlw	1
   949  047F  3401               	retlw	1
   950  0480  3401               	retlw	1
   951  0481  3401               	retlw	1
   952  0482  3400               	retlw	0
   953  0483  3400               	retlw	0
   954  0484  3400               	retlw	0
   955  0485  3400               	retlw	0
   956  0486  3400               	retlw	0
   957  0487  3400               	retlw	0
   958  0488  3400               	retlw	0
   959  0489  3400               	retlw	0
   960  048A  3400               	retlw	0
   961  048B  3400               	retlw	0
   962  048C  3400               	retlw	0
   963  048D  3400               	retlw	0
   964  048E  3400               	retlw	0
   965  048F  3400               	retlw	0
   966  0490  3401               	retlw	1
   967  0491  3401               	retlw	1
   968  0492  3401               	retlw	1
   969  0493  3401               	retlw	1
   970  0494  3401               	retlw	1
   971  0495  3401               	retlw	1
   972  0496  3402               	retlw	2
   973  0497  3402               	retlw	2
   974  0498  3402               	retlw	2
   975  0499  3402               	retlw	2
   976  049A  3403               	retlw	3
   977  049B  3403               	retlw	3
   978  049C  3403               	retlw	3
   979  049D  3404               	retlw	4
   980  049E  3404               	retlw	4
   981  049F  3404               	retlw	4
   982  04A0  3405               	retlw	5
   983  04A1  3405               	retlw	5
   984  04A2  3406               	retlw	6
   985  04A3  3406               	retlw	6
   986  04A4  3406               	retlw	6
   987  04A5  3407               	retlw	7
   988  04A6  3407               	retlw	7
   989  04A7  3408               	retlw	8
   990  04A8  3408               	retlw	8
   991  04A9  3409               	retlw	9
   992  04AA  3409               	retlw	9
   993  04AB  340A               	retlw	10
   994  04AC  340A               	retlw	10
   995  04AD  340B               	retlw	11
   996  04AE  340B               	retlw	11
   997  04AF  340C               	retlw	12
   998  04B0  340C               	retlw	12
   999  04B1  340D               	retlw	13
  1000  04B2  340D               	retlw	13
  1001  04B3  340E               	retlw	14
  1002  04B4  340E               	retlw	14
  1003  04B5  340F               	retlw	15
  1004  04B6                     __end_of_sine_table2:	
  1005  04B6                     _PLAYBACK_RATE:	
  1006  04B6  3412               	retlw	18
  1007  04B7  347A               	retlw	122
  1008  04B8  3400               	retlw	0
  1009  04B9  3400               	retlw	0
  1010  04BA                     __end_of_PLAYBACK_RATE:	
  1011  04BA                     _BAUD_RATE:	
  1012  04BA  34B0               	retlw	176
  1013  04BB  3404               	retlw	4
  1014  04BC                     __end_of_BAUD_RATE:	
  1015  04BC                     _TABLE_SIZE:	
  1016  04BC  34B6               	retlw	182
  1017  04BD  3400               	retlw	0
  1018  04BE                     __end_of_TABLE_SIZE:	
  1019  000B                     _INTCON	set	11
  1020  0011                     _PIR1	set	17
  1021  000C                     _PORTAbits	set	12
  1022  000E                     _PORTCbits	set	14
  1023  0015                     _TMR0	set	21
  1024  0017                     _TMR1H	set	23
  1025  0016                     _TMR1L	set	22
  1026  008E                     _ADIF	set	142
  1027  008A                     _CCP1IF	set	138
  1028  008B                     _SSP1IF	set	139
  1029  00C4                     _T1CKPS0	set	196
  1030  00C5                     _T1CKPS1	set	197
  1031  005D                     _TMR0IE	set	93
  1032  005A                     _TMR0IF	set	90
  1033  00C6                     _TMR1CS0	set	198
  1034  00C7                     _TMR1CS1	set	199
  1035  00CF                     _TMR1GE	set	207
  1036  0088                     _TMR1IF	set	136
  1037  00C0                     _TMR1ON	set	192
  1038  009D                     _ADCON0	set	157
  1039  009C                     _ADRESH	set	156
  1040  009B                     _ADRESL	set	155
  1041  0099                     _OSCCON	set	153
  1042  009A                     _OSCSTAT	set	154
  1043  0098                     _OSCTUNE	set	152
  1044  008C                     _TRISA	set	140
  1045  008E                     _TRISC	set	142
  1046  04F4                     _ADCS0	set	1268
  1047  04F5                     _ADCS1	set	1269
  1048  04F6                     _ADCS2	set	1270
  1049  04F7                     _ADFM	set	1271
  1050  048E                     _ADIE	set	1166
  1051  04F2                     _ADNREF	set	1266
  1052  04E8                     _ADON	set	1256
  1053  04F0                     _ADPREF0	set	1264
  1054  04F1                     _ADPREF1	set	1265
  1055  048A                     _CCP1IE	set	1162
  1056  04AB                     _PSA	set	1195
  1057  048B                     _SSP1IE	set	1163
  1058  04AD                     _TMR0CS	set	1197
  1059  0488                     _TMR1IE	set	1160
  1060  04B9                     _WDTPS0	set	1209
  1061  04BA                     _WDTPS1	set	1210
  1062  04BB                     _WDTPS2	set	1211
  1063  04BC                     _WDTPS3	set	1212
  1064  04BD                     _WDTPS4	set	1213
  1065  0119                     _DACCON1	set	281
  1066  08C7                     _DACEN	set	2247
  1067  08C0                     _DACNSS	set	2240
  1068  08C5                     _DACOE	set	2245
  1069  08C2                     _DACPSS0	set	2242
  1070  08C3                     _DACPSS1	set	2243
  1071  0C61                     _ANSA1	set	3169
  1072  0212                     _SSP1ADD	set	530
  1073  0211                     _SSP1BUF	set	529
  1074  0216                     _SSP1CON2bits	set	534
  1075  0214                     _SSP1STATbits	set	532
  1076  0213                     _SSPMSK	set	531
  1077  10B5                     _ACKDT	set	4277
  1078  10B9                     _AHEN	set	4281
  1079  10BC                     _BOEN	set	4284
  1080  10AC                     _CKP	set	4268
  1081  10B8                     _DHEN	set	4280
  1082  10B7                     _GCEN	set	4279
  1083  10BE                     _PCIE	set	4286
  1084  10BA                     _SBCDE	set	4282
  1085  10BD                     _SCIE	set	4285
  1086  10B0                     _SEN	set	4272
  1087  10AD                     _SSPEN	set	4269
  1088  10A8                     _SSPM0	set	4264
  1089  10A9                     _SSPM1	set	4265
  1090  10AA                     _SSPM2	set	4266
  1091  10AB                     _SSPM3	set	4267
  1092  10AE                     _SSPOV	set	4270
  1093  10AF                     _WCOL	set	4271
  1094  0292                     _CCPR1H	set	658
  1095  0291                     _CCPR1L	set	657
  1096  1499                     _CCP1M1	set	5273
  1097  149A                     _CCP1M2	set	5274
  1098  149B                     _CCP1M3	set	5275
  1099  04BE                     __stringdata:	
  1100  04BE                     STR_1:	
  1101  04BE  3448               	retlw	72	;'H'
  1102  04BF  3445               	retlw	69	;'E'
  1103  04C0  344C               	retlw	76	;'L'
  1104  04C1  344C               	retlw	76	;'L'
  1105  04C2  344F               	retlw	79	;'O'
  1106  04C3  3400               	retlw	0
  1107  04C4                     __end_of__stringdata:	
  1108                           
  1109                           ; #config settings
  1110  0000                     
  1111                           	psect	cinit
  1112  002D                     start_initialization:	
  1113  002D                     __initialization:	
  1114                           
  1115                           ; Clear objects allocated to COMMON
  1116  002D  01FA               	clrf	__pbssCOMMON& (0+127)
  1117  002E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1118  002F  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  1119  0030  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  1120                           
  1121                           ; Clear objects allocated to BANK0
  1122  0031  01EE               	clrf	__pbssBANK0& (0+127)
  1123  0032  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1124                           
  1125                           ; Clear objects allocated to BANK1
  1126  0033  30A0               	movlw	low __pbssBANK1
  1127  0034  0084               	movwf	4
  1128  0035  3000               	movlw	high __pbssBANK1
  1129  0036  0085               	movwf	5
  1130  0037  3029               	movlw	41
  1131  0038  318B  2382  3180   	fcall	clear_ram0
  1132                           
  1133                           ; Clear objects allocated to BANK2
  1134  003B  3020               	movlw	low __pbssBANK2
  1135  003C  0084               	movwf	4
  1136  003D  3001               	movlw	high __pbssBANK2
  1137  003E  0085               	movwf	5
  1138  003F  3027               	movlw	39
  1139  0040  318B  2382  3180   	fcall	clear_ram0
  1140                           
  1141                           ; Clear objects allocated to BANK3
  1142  0043  30A0               	movlw	low __pbssBANK3
  1143  0044  0084               	movwf	4
  1144  0045  3001               	movlw	high __pbssBANK3
  1145  0046  0085               	movwf	5
  1146  0047  3040               	movlw	64
  1147  0048  318B  2382  3180   	fcall	clear_ram0
  1148                           
  1149                           ; Initialize objects allocated to BANK2
  1150  004B  30DA               	movlw	low __pidataBANK2
  1151  004C  0084               	movwf	4
  1152  004D  308B               	movlw	(high __pidataBANK2)| (0+128)
  1153  004E  0085               	movwf	5
  1154  004F  3047               	movlw	low __pdataBANK2
  1155  0050  0086               	movwf	6
  1156  0051  3001               	movlw	high __pdataBANK2
  1157  0052  0087               	movwf	7
  1158  0053  3010               	movlw	16
  1159  0054  318B  237C         	fcall	init_ram
  1160  0056                     end_of_initialization:	
  1161                           ;End of C runtime variable initialization code
  1162                           
  1163  0056                     __end_of__initialization:	
  1164  0056  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1165  0057  0020               	movlb	0
  1166  0058  3186  2ED8         	ljmp	_main	;jump to C main() function
  1167                           
  1168                           	psect	bssCOMMON
  1169  007A                     __pbssCOMMON:	
  1170  007A                     _modem_packet_size:	
  1171  007A                     	ds	4
  1172                           
  1173                           	psect	bssBANK0
  1174  006E                     __pbssBANK0:	
  1175  006E                     _i2c_data_index:	
  1176  006E                     	ds	1
  1177  006F                     _phase:	
  1178  006F                     	ds	1
  1179                           
  1180                           	psect	bssBANK1
  1181  00A0                     __pbssBANK1:	
  1182  00A0                     _i2c_data:	
  1183  00A0                     	ds	5
  1184  00A5                     Reverse_Array@F3014:	
  1185  00A5                     	ds	4
  1186  00A9                     _PHASE_DELTA_1200:	
  1187  00A9                     	ds	4
  1188  00AD                     _PHASE_DELTA_2200:	
  1189  00AD                     	ds	4
  1190  00B1                     _Systick_Counter:	
  1191  00B1                     	ds	4
  1192  00B5                     _packet_pos:	
  1193  00B5                     	ds	4
  1194  00B9                     _crc:	
  1195  00B9                     	ds	2
  1196  00BB                     _ones_in_a_row:	
  1197  00BB                     	ds	2
  1198  00BD                     Sinus_Generator@tone_index:	
  1199  00BD                     	ds	1
  1200  00BE                     _Change_to_New_Baud:	
  1201  00BE                     	ds	1
  1202  00BF                     _MODEM_TRANSMITTING:	
  1203  00BF                     	ds	1
  1204  00C0                     _PTT_OFF:	
  1205  00C0                     	ds	1
  1206  00C1                     _SAMPLES_PER_BAUD:	
  1207  00C1                     	ds	1
  1208  00C2                     _adc__high:	
  1209  00C2                     	ds	1
  1210  00C3                     _adc__low:	
  1211  00C3                     	ds	1
  1212  00C4                     _current_byte:	
  1213  00C4                     	ds	1
  1214  00C5                     _current_sample_in_baud:	
  1215  00C5                     	ds	1
  1216  00C6                     _i2c_address:	
  1217  00C6                     	ds	1
  1218  00C7                     _i2c_dummy:	
  1219  00C7                     	ds	1
  1220  00C8                     _phase_delta:	
  1221  00C8                     	ds	1
  1222                           
  1223                           	psect	bssBANK2
  1224  0120                     __pbssBANK2:	
  1225  0120                     _adf_config:	
  1226  0120                     	ds	39
  1227                           
  1228                           	psect	dataBANK2
  1229  0147                     __pdataBANK2:	
  1230  0147                     main@F2948:	
  1231  0147                     	ds	16
  1232                           
  1233                           	psect	bssBANK3
  1234  01A0                     __pbssBANK3:	
  1235  01A0                     _modem_packet:	
  1236  01A0                     	ds	64
  1237                           
  1238                           	psect	clrtext
  1239  0B82                     clear_ram0:	
  1240                           ;	Called with FSR0 containing the base address, and
  1241                           ;	WREG with the size to clear
  1242                           
  1243  0B82  0064               	clrwdt	;clear the watchdog before getting into this loop
  1244  0B83                     clrloop0:	
  1245  0B83  0180               	clrf	0	;clear RAM location pointed to by FSR
  1246  0B84  3101               	addfsr 0,1
  1247  0B85  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1248  0B86  2B83               	goto	clrloop0	;have we reached the end yet?
  1249  0B87  3400               	retlw	0	;all done for this memory range, return
  1250                           
  1251                           	psect	inittext
  1252  0B7C                     init_ram:	
  1253  0B7C  00FE               	movwf	126
  1254  0B7D                     initloop:	
  1255  0B7D  0012               	moviw fsr0++
  1256  0B7E  001E               	movwi fsr1++
  1257  0B7F  0BFE               	decfsz	126,f
  1258  0B80  2B7D               	goto	initloop
  1259  0B81  3400               	retlw	0
  1260                           
  1261                           	psect	cstackBANK1
  1262  00C9                     __pcstackBANK1:	
  1263  00C9                     Adf_Write_Register_Three@reg_ptr:	
  1264                           
  1265                           ; 4 bytes @ 0x0
  1266  00C9                     	ds	4
  1267  00CD                     Adf_Write_Register_Three@reg:	
  1268                           
  1269                           ; 4 bytes @ 0x4
  1270  00CD                     	ds	4
  1271  00D1                     Adf_Lock@adj:	
  1272                           
  1273                           ; 2 bytes @ 0x8
  1274  00D1                     	ds	2
  1275  00D3                     Adf_Lock@bias:	
  1276                           
  1277                           ; 2 bytes @ 0xA
  1278  00D3                     	ds	2
  1279  00D5                     main@beacon_address:	
  1280                           
  1281                           ; 16 bytes @ 0xC
  1282  00D5                     	ds	16
  1283                           
  1284                           	psect	cstackCOMMON
  1285  0070                     __pcstackCOMMON:	
  1286  0070                     ?_ADC_ISR:	
  1287  0070                     ??_ADC_ISR:	
  1288                           ; 0 bytes @ 0x0
  1289                           
  1290  0070                     ?_TIMER1_ISR:	
  1291                           ; 0 bytes @ 0x0
  1292                           
  1293  0070                     ??_TIMER1_ISR:	
  1294                           ; 0 bytes @ 0x0
  1295                           
  1296  0070                     ?_TIMER0_ISR:	
  1297                           ; 0 bytes @ 0x0
  1298                           
  1299  0070                     ?_I2C_ISR:	
  1300                           ; 0 bytes @ 0x0
  1301                           
  1302  0070                     ??_I2C_ISR:	
  1303                           ; 0 bytes @ 0x0
  1304                           
  1305  0070                     ?_Timer1_Start:	
  1306                           ; 0 bytes @ 0x0
  1307                           
  1308  0070                     ?_Dac0_Start_Hold:	
  1309                           ; 0 bytes @ 0x0
  1310                           
  1311  0070                     ?_Adc1_Start:	
  1312                           ; 0 bytes @ 0x0
  1313                           
  1314  0070                     ?_Ax25_Send_Footer:	
  1315                           ; 0 bytes @ 0x0
  1316                           
  1317  0070                     ?_Modem_Setup:	
  1318                           ; 0 bytes @ 0x0
  1319                           
  1320  0070                     ?_Ptt_Off:	
  1321                           ; 0 bytes @ 0x0
  1322                           
  1323  0070                     ?_Modem_Flush_Frame:	
  1324                           ; 0 bytes @ 0x0
  1325                           
  1326  0070                     ?_Adf_Reset_Register_Zero:	
  1327                           ; 0 bytes @ 0x0
  1328                           
  1329  0070                     ?_Adf_Reset_Register_One:	
  1330                           ; 0 bytes @ 0x0
  1331                           
  1332  0070                     ?_Adf_Reset_Register_Two:	
  1333                           ; 0 bytes @ 0x0
  1334                           
  1335  0070                     ?_Adf_Reset_Register_Three:	
  1336                           ; 0 bytes @ 0x0
  1337                           
  1338  0070                     ?_Adf_Reset:	
  1339                           ; 0 bytes @ 0x0
  1340                           
  1341  0070                     ?_Adf_Write_Register_Zero:	
  1342                           ; 0 bytes @ 0x0
  1343                           
  1344  0070                     ?_Adf_Write_Register_One:	
  1345                           ; 0 bytes @ 0x0
  1346                           
  1347  0070                     ?_Adf_Write_Register_Two:	
  1348                           ; 0 bytes @ 0x0
  1349                           
  1350  0070                     ?_Adf_Write_Register_Three:	
  1351                           ; 0 bytes @ 0x0
  1352                           
  1353  0070                     ?_global_interrupt:	
  1354                           ; 0 bytes @ 0x0
  1355                           
  1356  0070                     ?_System_Start:	
  1357                           ; 0 bytes @ 0x0
  1358                           
  1359  0070                     ??_Send_Vcxo_Signal:	
  1360                           ; 0 bytes @ 0x0
  1361                           
  1362  0070                     ?_Timer0_Start:	
  1363                           ; 0 bytes @ 0x0
  1364                           
  1365  0070                     ?_Timer0_Stop:	
  1366                           ; 0 bytes @ 0x0
  1367                           
  1368  0070                     ??_Timer0_Stop:	
  1369                           ; 0 bytes @ 0x0
  1370                           
  1371  0070                     ?_Adf_Reset_Config:	
  1372                           ; 0 bytes @ 0x0
  1373                           
  1374  0070                     ?_Adf_Write_Config:	
  1375                           ; 0 bytes @ 0x0
  1376                           
  1377  0070                     ?_Radio_Setup:	
  1378                           ; 0 bytes @ 0x0
  1379                           
  1380  0070                     ?_Configure_Audio:	
  1381                           ; 0 bytes @ 0x0
  1382                           
  1383  0070                     ?_Sinus_Generator:	
  1384                           ; 0 bytes @ 0x0
  1385                           
  1386  0070                     ?_Update_Crc:	
  1387                           ; 0 bytes @ 0x0
  1388                           
  1389  0070                     ?_Send_Byte:	
  1390                           ; 0 bytes @ 0x0
  1391                           
  1392  0070                     ?_Ax25_Send_Byte:	
  1393                           ; 0 bytes @ 0x0
  1394                           
  1395  0070                     ?_Ax25_Send_Sync:	
  1396                           ; 0 bytes @ 0x0
  1397                           
  1398  0070                     ?_Ax25_Send_Flag:	
  1399                           ; 0 bytes @ 0x0
  1400                           
  1401  0070                     ?_Gpio_Config:	
  1402                           ; 0 bytes @ 0x0
  1403                           
  1404  0070                     ?_Adf_Lock:	
  1405                           ; 1 bytes @ 0x0
  1406                           
  1407  0070                     ?_Spi_Byte_Send:	
  1408                           ; 1 bytes @ 0x0
  1409                           
  1410  0070                     ?_Adf_Locked:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413  0070                     ?_Read_Adf7012_Muxout:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416  0070                     ?_Send_Vcxo_Signal:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419  0070                     ?_Ptt_On:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422  0070                     ?_main:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425  0070                     Send_Vcxo_Signal@value:	
  1426                           ; 2 bytes @ 0x0
  1427                           
  1428                           
  1429                           ; 1 bytes @ 0x0
  1430  0070                     	ds	1
  1431  0071                     ??_Sinus_Generator:	
  1432                           
  1433                           ; 0 bytes @ 0x1
  1434  0071                     	ds	5
  1435  0076                     Sinus_Generator@Audio_Signal:	
  1436                           
  1437                           ; 1 bytes @ 0x6
  1438  0076                     	ds	1
  1439  0077                     ??_TIMER0_ISR:	
  1440                           
  1441                           ; 0 bytes @ 0x7
  1442  0077                     	ds	1
  1443  0078                     ??_global_interrupt:	
  1444                           
  1445                           ; 0 bytes @ 0x8
  1446  0078                     	ds	2
  1447                           
  1448                           	psect	cstackBANK0
  1449  0020                     __pcstackBANK0:	
  1450  0020                     ??_Gpio_Config:	
  1451  0020                     ??_Timer1_Start:	
  1452                           ; 0 bytes @ 0x0
  1453                           
  1454  0020                     ??_Dac0_Start_Hold:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0020                     ??_Adc1_Start:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0020                     ?_Delay_ms:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0020                     ??_Adf_Reset_Register_Zero:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0020                     ??_Adf_Reset_Register_One:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0020                     ??_Adf_Reset_Register_Two:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0020                     ??_Adf_Reset_Register_Three:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0020                     ??_Adf_Locked:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0020                     ??_System_Start:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0020                     ??_Read_Adf7012_Muxout:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0020                     ??_Timer0_Start:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0020                     ??_Configure_Audio:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0020                     ??_Update_Crc:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0020                     ??_Ax25_Send_Sync:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0020                     ??_Ax25_Send_Flag:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0020                     ?_memcpy:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0020                     memcpy@s1:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0020                     Delay_ms@time_to_delay:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x0
  1510  0020                     	ds	1
  1511  0021                     memcpy@n:	
  1512                           
  1513                           ; 2 bytes @ 0x1
  1514  0021                     	ds	1
  1515  0022                     ??_Delay_ms:	
  1516  0022                     Update_Crc@input_bit:	
  1517                           ; 0 bytes @ 0x2
  1518                           
  1519                           
  1520                           ; 1 bytes @ 0x2
  1521  0022                     	ds	1
  1522  0023                     ??_memcpy:	
  1523  0023                     ??_Send_Byte:	
  1524                           ; 0 bytes @ 0x3
  1525                           
  1526                           
  1527                           ; 0 bytes @ 0x3
  1528  0023                     	ds	1
  1529  0024                     memcpy@d:	
  1530  0024                     Delay_ms@i:	
  1531                           ; 1 bytes @ 0x4
  1532                           
  1533                           
  1534                           ; 2 bytes @ 0x4
  1535  0024                     	ds	1
  1536  0025                     memcpy@s:	
  1537                           
  1538                           ; 1 bytes @ 0x5
  1539  0025                     	ds	1
  1540  0026                     ??_Spi_Byte_Send:	
  1541  0026                     ??_Adf_Reset:	
  1542                           ; 0 bytes @ 0x6
  1543                           
  1544  0026                     ??_Adf_Reset_Config:	
  1545                           ; 0 bytes @ 0x6
  1546                           
  1547  0026                     Ax25_Send_Sync@byte:	
  1548                           ; 0 bytes @ 0x6
  1549                           
  1550  0026                     Ax25_Send_Flag@byte:	
  1551                           ; 1 bytes @ 0x6
  1552                           
  1553  0026                     memcpy@d1:	
  1554                           ; 1 bytes @ 0x6
  1555                           
  1556                           
  1557                           ; 1 bytes @ 0x6
  1558  0026                     	ds	1
  1559  0027                     ?_Reverse_Array:	
  1560  0027                     Reverse_Array@length:	
  1561                           ; 1 bytes @ 0x7
  1562                           
  1563  0027                     Spi_Byte_Send@data:	
  1564                           ; 1 bytes @ 0x7
  1565                           
  1566  0027                     Ax25_Send_Sync@i:	
  1567                           ; 1 bytes @ 0x7
  1568                           
  1569  0027                     Ax25_Send_Flag@i:	
  1570                           ; 2 bytes @ 0x7
  1571                           
  1572                           
  1573                           ; 2 bytes @ 0x7
  1574  0027                     	ds	1
  1575  0028                     ??_Reverse_Array:	
  1576  0028                     Spi_Byte_Send@data_to_send:	
  1577                           ; 0 bytes @ 0x8
  1578                           
  1579                           
  1580                           ; 1 bytes @ 0x8
  1581  0028                     	ds	1
  1582  0029                     Spi_Byte_Send@i:	
  1583  0029                     Send_Byte@byte:	
  1584                           ; 1 bytes @ 0x9
  1585                           
  1586                           
  1587                           ; 1 bytes @ 0x9
  1588  0029                     	ds	1
  1589  002A                     ?_Write_Adf7012_Reg:	
  1590  002A                     Write_Adf7012_Reg@size_of_reg:	
  1591                           ; 1 bytes @ 0xA
  1592                           
  1593  002A                     Send_Byte@i:	
  1594                           ; 1 bytes @ 0xA
  1595                           
  1596                           
  1597                           ; 2 bytes @ 0xA
  1598  002A                     	ds	1
  1599  002B                     ??_Write_Adf7012_Reg:	
  1600                           
  1601                           ; 0 bytes @ 0xB
  1602  002B                     	ds	1
  1603  002C                     ?_Ax25_Send_Header:	
  1604  002C                     ??_Ax25_Send_Footer:	
  1605                           ; 0 bytes @ 0xC
  1606                           
  1607  002C                     ??_Ax25_Send_Byte:	
  1608                           ; 0 bytes @ 0xC
  1609                           
  1610  002C                     Write_Adf7012_Reg@reg_value:	
  1611                           ; 0 bytes @ 0xC
  1612                           
  1613  002C                     Ax25_Send_Byte@byte:	
  1614                           ; 1 bytes @ 0xC
  1615                           
  1616  002C                     Ax25_Send_Header@num_addresses:	
  1617                           ; 1 bytes @ 0xC
  1618                           
  1619  002C                     Ax25_Send_Footer@final_crc:	
  1620                           ; 2 bytes @ 0xC
  1621                           
  1622                           
  1623                           ; 2 bytes @ 0xC
  1624  002C                     	ds	1
  1625  002D                     ?_Ax25_Send_String:	
  1626  002D                     Write_Adf7012_Reg@i:	
  1627                           ; 0 bytes @ 0xD
  1628                           
  1629  002D                     Ax25_Send_String@string:	
  1630                           ; 1 bytes @ 0xD
  1631                           
  1632  002D                     Reverse_Array@buffer_array:	
  1633                           ; 2 bytes @ 0xD
  1634                           
  1635                           
  1636                           ; 4 bytes @ 0xD
  1637  002D                     	ds	1
  1638  002E                     ??_Ax25_Send_Header:	
  1639                           
  1640                           ; 0 bytes @ 0xE
  1641  002E                     	ds	1
  1642  002F                     ??_Ax25_Send_String:	
  1643  002F                     Ax25_Send_String@i:	
  1644                           ; 0 bytes @ 0xF
  1645                           
  1646                           
  1647                           ; 2 bytes @ 0xF
  1648  002F                     	ds	2
  1649  0031                     Reverse_Array@input:	
  1650  0031                     Ax25_Send_Header@j:	
  1651                           ; 1 bytes @ 0x11
  1652                           
  1653                           
  1654                           ; 2 bytes @ 0x11
  1655  0031                     	ds	1
  1656  0032                     Reverse_Array@i:	
  1657                           
  1658                           ; 1 bytes @ 0x12
  1659  0032                     	ds	1
  1660  0033                     ??_Adf_Write_Register_Zero:	
  1661  0033                     ??_Adf_Write_Register_One:	
  1662                           ; 0 bytes @ 0x13
  1663                           
  1664  0033                     ??_Adf_Write_Register_Two:	
  1665                           ; 0 bytes @ 0x13
  1666                           
  1667  0033                     ??_Adf_Write_Register_Three:	
  1668                           ; 0 bytes @ 0x13
  1669                           
  1670  0033                     Ax25_Send_Header@addresses:	
  1671                           ; 0 bytes @ 0x13
  1672                           
  1673                           
  1674                           ; 1 bytes @ 0x13
  1675  0033                     	ds	1
  1676  0034                     Ax25_Send_Header@i:	
  1677                           
  1678                           ; 2 bytes @ 0x14
  1679  0034                     	ds	11
  1680  003F                     Adf_Write_Register_One@reg:	
  1681                           
  1682                           ; 4 bytes @ 0x1F
  1683  003F                     	ds	4
  1684  0043                     Adf_Write_Register_One@reg_ptr:	
  1685                           
  1686                           ; 3 bytes @ 0x23
  1687  0043                     	ds	8
  1688  004B                     Adf_Write_Register_Two@reg_ptr:	
  1689                           
  1690                           ; 4 bytes @ 0x2B
  1691  004B                     	ds	4
  1692  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1693  004F                     Adf_Write_Register_Two@reg:	
  1694                           ; 4 bytes @ 0x2F
  1695                           
  1696                           
  1697                           ; 4 bytes @ 0x2F
  1698  004F                     	ds	4
  1699  0053                     Adf_Write_Register_Zero@reg:	
  1700                           
  1701                           ; 4 bytes @ 0x33
  1702  0053                     	ds	24
  1703  006B                     ??_Modem_Setup:	
  1704  006B                     ??_Adf_Lock:	
  1705                           ; 0 bytes @ 0x4B
  1706                           
  1707  006B                     ??_Ptt_Off:	
  1708                           ; 0 bytes @ 0x4B
  1709                           
  1710  006B                     ??_Adf_Write_Config:	
  1711                           ; 0 bytes @ 0x4B
  1712                           
  1713  006B                     ??_Radio_Setup:	
  1714                           ; 0 bytes @ 0x4B
  1715                           
  1716  006B                     ??_Ptt_On:	
  1717                           ; 0 bytes @ 0x4B
  1718                           
  1719                           
  1720                           ; 0 bytes @ 0x4B
  1721  006B                     	ds	1
  1722  006C                     ??_Modem_Flush_Frame:	
  1723                           
  1724                           ; 0 bytes @ 0x4C
  1725  006C                     	ds	1
  1726  006D                     ??_main:	
  1727                           
  1728                           ; 0 bytes @ 0x4D
  1729  006D                     	ds	1
  1730                           
  1731                           	psect	maintext
  1732  06D8                     __pmaintext:	
  1733 ;;
  1734 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1735 ;;
  1736 ;; *************** function _main *****************
  1737 ;; Defined at:
  1738 ;;		line 160 in file "main.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2  164[COMMON] int 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 17F/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1753 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1755 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1756 ;;Total ram usage:       17 bytes
  1757 ;; Hardware stack levels required when called:   12
  1758 ;; This function calls:
  1759 ;;		_Adc1_Start
  1760 ;;		_Adf_Lock
  1761 ;;		_Ax25_Send_Footer
  1762 ;;		_Ax25_Send_Header
  1763 ;;		_Ax25_Send_String
  1764 ;;		_Dac0_Start_Hold
  1765 ;;		_Delay_ms
  1766 ;;		_Gpio_Config
  1767 ;;		_Modem_Flush_Frame
  1768 ;;		_Modem_Setup
  1769 ;;		_Ptt_Off
  1770 ;;		_System_Start
  1771 ;;		_Timer1_Start
  1772 ;; This function is called by:
  1773 ;;		Startup code after reset
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _main
  1779  06D8                     _main:	
  1780                           
  1781                           ;main.c: 161: Gpio_Config();
  1782                           
  1783                           ;incstack = 0
  1784                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1785  06D8  318C  2420  3186   	fcall	_Gpio_Config
  1786                           
  1787                           ;main.c: 162: System_Start();
  1788  06DB  318E  2661  3186   	fcall	_System_Start
  1789  06DE                     l165:	
  1790                           ;main.c: 163: while (!(OSCSTAT & (0x01))){}
  1791                           
  1792  06DE  0021               	movlb	1	; select bank1
  1793  06DF  1C1A               	btfss	26,0	;volatile
  1794  06E0  2EDE               	goto	l165
  1795                           
  1796                           ;main.c: 166: Timer1_Start();
  1797  06E1  318B  23CB  3186   	fcall	_Timer1_Start
  1798                           
  1799                           ;main.c: 168: Dac0_Start_Hold();
  1800  06E4  318B  2360  3186   	fcall	_Dac0_Start_Hold
  1801                           
  1802                           ;main.c: 170: Adc1_Start();
  1803  06E7  318B  236A  3186   	fcall	_Adc1_Start
  1804                           
  1805                           ;main.c: 172: PORTAbits.RA5 = 0;;
  1806  06EA  0020               	movlb	0	; select bank0
  1807  06EB  128C               	bcf	12,5	;volatile
  1808                           
  1809                           ;main.c: 173: Delay_ms(10);
  1810  06EC  300A               	movlw	10
  1811  06ED  00A0               	movwf	Delay_ms@time_to_delay
  1812  06EE  3000               	movlw	0
  1813  06EF  00A1               	movwf	Delay_ms@time_to_delay+1
  1814  06F0  318C  2484  3186   	fcall	_Delay_ms
  1815                           
  1816                           ;main.c: 174: PORTAbits.RA4 = 1;;
  1817  06F3  0020               	movlb	0	; select bank0
  1818  06F4  160C               	bsf	12,4	;volatile
  1819                           
  1820                           ;main.c: 175: Delay_ms(10);
  1821  06F5  300A               	movlw	10
  1822  06F6  00A0               	movwf	Delay_ms@time_to_delay
  1823  06F7  3000               	movlw	0
  1824  06F8  00A1               	movwf	Delay_ms@time_to_delay+1
  1825  06F9  318C  2484  3186   	fcall	_Delay_ms
  1826                           
  1827                           ;main.c: 176: PORTAbits.RA5 = 1;;
  1828  06FC  0020               	movlb	0	; select bank0
  1829  06FD  168C               	bsf	12,5	;volatile
  1830                           
  1831                           ;main.c: 177: Delay_ms(10);
  1832  06FE  300A               	movlw	10
  1833  06FF  00A0               	movwf	Delay_ms@time_to_delay
  1834  0700  3000               	movlw	0
  1835  0701  00A1               	movwf	Delay_ms@time_to_delay+1
  1836  0702  318C  2484  3186   	fcall	_Delay_ms
  1837                           
  1838                           ;main.c: 179: Delay_ms(200);
  1839  0705  30C8               	movlw	200
  1840  0706  0020               	movlb	0	; select bank0
  1841  0707  00A0               	movwf	Delay_ms@time_to_delay
  1842  0708  3000               	movlw	0
  1843  0709  00A1               	movwf	Delay_ms@time_to_delay+1
  1844  070A  318C  2484  3186   	fcall	_Delay_ms
  1845                           
  1846                           ;main.c: 182: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1847  070D  3047               	movlw	low main@F2948
  1848  070E  0086               	movwf	6
  1849  070F  3001               	movlw	high main@F2948
  1850  0710  0087               	movwf	7
  1851  0711  30D5               	movlw	low main@beacon_address
  1852  0712  0084               	movwf	4
  1853  0713  3000               	movlw	high main@beacon_address
  1854  0714  0085               	movwf	5
  1855  0715  3010               	movlw	16
  1856  0716  0020               	movlb	0	; select bank0
  1857  0717  00ED               	movwf	??_main
  1858  0718                     u2570:	
  1859  0718  0016               	moviw fsr1++
  1860  0719  001A               	movwi fsr0++
  1861  071A  0BED               	decfsz	??_main,f
  1862  071B  2F18               	goto	u2570
  1863                           
  1864                           ;main.c: 184: Ax25_Send_Header(beacon_address,2);
  1865  071C  3002               	movlw	2
  1866  071D  00AC               	movwf	Ax25_Send_Header@num_addresses
  1867  071E  3000               	movlw	0
  1868  071F  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  1869  0720  30D5               	movlw	main@beacon_address& (0+255)
  1870  0721  3181  21C6  3186   	fcall	_Ax25_Send_Header
  1871                           
  1872                           ;main.c: 185: Ax25_Send_String("HELLO");
  1873  0724  30BE               	movlw	low (STR_1| (0+32768))
  1874  0725  0020               	movlb	0	; select bank0
  1875  0726  00AD               	movwf	Ax25_Send_String@string
  1876  0727  3084               	movlw	high (STR_1| (0+32768))
  1877  0728  00AE               	movwf	Ax25_Send_String@string+1
  1878  0729  318C  2467  3186   	fcall	_Ax25_Send_String
  1879                           
  1880                           ;main.c: 186: Ax25_Send_Footer();
  1881  072C  318C  244C  3186   	fcall	_Ax25_Send_Footer
  1882                           
  1883                           ;main.c: 188: Modem_Setup();
  1884  072F  318B  2376  3186   	fcall	_Modem_Setup
  1885                           
  1886                           ;main.c: 189: PORTCbits.RC3 = 1;;
  1887  0732  0020               	movlb	0	; select bank0
  1888  0733  158E               	bsf	14,3	;volatile
  1889                           
  1890                           ;main.c: 190: Delay_ms(100);
  1891  0734  3064               	movlw	100
  1892  0735  00A0               	movwf	Delay_ms@time_to_delay
  1893  0736  3000               	movlw	0
  1894  0737  00A1               	movwf	Delay_ms@time_to_delay+1
  1895  0738  318C  2484  3186   	fcall	_Delay_ms
  1896                           
  1897                           ;main.c: 191: Adf_Lock();
  1898  073B  3187  2768  3186   	fcall	_Adf_Lock
  1899                           
  1900                           ;main.c: 192: Delay_ms(100);
  1901  073E  3064               	movlw	100
  1902  073F  0020               	movlb	0	; select bank0
  1903  0740  00A0               	movwf	Delay_ms@time_to_delay
  1904  0741  3000               	movlw	0
  1905  0742  00A1               	movwf	Delay_ms@time_to_delay+1
  1906  0743  318C  2484  3186   	fcall	_Delay_ms
  1907  0746                     l2753:	
  1908                           ;main.c: 195: while(1){
  1909                           
  1910                           
  1911                           ;main.c: 196: if(PTT_OFF){
  1912  0746  0021               	movlb	1	; select bank1
  1913  0747  0840               	movf	_PTT_OFF^(0+128),w
  1914  0748  1903               	btfsc	3,2
  1915  0749  2F4F               	goto	l2759
  1916                           
  1917                           ;main.c: 197: Ptt_Off();
  1918  074A  318C  240D  3186   	fcall	_Ptt_Off
  1919                           
  1920                           ;main.c: 198: PTT_OFF = 0;
  1921  074D  0021               	movlb	1	; select bank1
  1922  074E  01C0               	clrf	_PTT_OFF^(0+128)
  1923  074F                     l2759:	
  1924                           
  1925                           ;main.c: 199: }
  1926                           ;main.c: 200: Delay_ms(2000);
  1927  074F  30D0               	movlw	208
  1928  0750  0020               	movlb	0	; select bank0
  1929  0751  00A0               	movwf	Delay_ms@time_to_delay
  1930  0752  3007               	movlw	7
  1931  0753  00A1               	movwf	Delay_ms@time_to_delay+1
  1932  0754  318C  2484  3186   	fcall	_Delay_ms
  1933                           
  1934                           ;main.c: 202: Modem_Flush_Frame();
  1935  0757  318D  251D  3186   	fcall	_Modem_Flush_Frame
  1936  075A                     l2763:	
  1937                           ;main.c: 203: while(MODEM_TRANSMITTING);
  1938                           
  1939  075A  0021               	movlb	1	; select bank1
  1940  075B  08BF               	movf	_MODEM_TRANSMITTING^(0+128),f
  1941  075C  1D03               	skipz
  1942  075D  2F5A               	goto	l2763
  1943                           
  1944                           ;main.c: 204: Delay_ms(2000);
  1945  075E  30D0               	movlw	208
  1946  075F  0020               	movlb	0	; select bank0
  1947  0760  00A0               	movwf	Delay_ms@time_to_delay
  1948  0761  3007               	movlw	7
  1949  0762  00A1               	movwf	Delay_ms@time_to_delay+1
  1950  0763  318C  2484  3186   	fcall	_Delay_ms
  1951  0766  0064               	clrwdt	;# 
  1952  0767  2F46               	goto	l2753
  1953  0768                     __end_of_main:	
  1954                           ;main.c: 217: }
  1955                           ;main.c: 218: return (0);
  1956                           ;	Return value of _main is never used
  1957                           
  1958                           
  1959                           	psect	text1
  1960  0BCB                     __ptext1:	
  1961 ;; *************** function _Timer1_Start *****************
  1962 ;; Defined at:
  1963 ;;		line 249 in file "utility.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;		None               void
  1970 ;; Registers used:
  1971 ;;		wreg, status,2
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;Total ram usage:        0 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    4
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _Timer1_Start
  1993  0BCB                     _Timer1_Start:	
  1994                           
  1995                           ;utility.c: 250: TMR1H = 0x00;
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _Timer1_Start: [wreg+status,2]
  1999  0BCB  0020               	movlb	0	; select bank0
  2000  0BCC  0197               	clrf	23	;volatile
  2001                           
  2002                           ;utility.c: 251: TMR1L = 0x00;
  2003  0BCD  0196               	clrf	22	;volatile
  2004                           
  2005                           ;utility.c: 253: TMR1IE = 0;
  2006  0BCE  0021               	movlb	1	; select bank1
  2007  0BCF  1011               	bcf	17,0	;volatile
  2008                           
  2009                           ;utility.c: 256: CCPR1H = 0x03;
  2010  0BD0  3003               	movlw	3
  2011  0BD1  0025               	movlb	5	; select bank5
  2012  0BD2  0092               	movwf	18	;volatile
  2013                           
  2014                           ;utility.c: 257: CCPR1L = 0x41;
  2015  0BD3  3041               	movlw	65
  2016  0BD4  0091               	movwf	17	;volatile
  2017                           
  2018                           ;utility.c: 259: CCP1IF = 0;
  2019  0BD5  0020               	movlb	0	; select bank0
  2020  0BD6  1111               	bcf	17,2	;volatile
  2021                           
  2022                           ;utility.c: 260: CCP1IE = 1;
  2023  0BD7  0021               	movlb	1	; select bank1
  2024  0BD8  1511               	bsf	17,2	;volatile
  2025  0BD9  0008               	return
  2026  0BDA                     __end_of_Timer1_Start:	
  2027                           
  2028                           	psect	text2
  2029  0E61                     __ptext2:	
  2030 ;; *************** function _System_Start *****************
  2031 ;; Defined at:
  2032 ;;		line 68 in file "main.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;		None               void
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2048 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2049 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    4
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function _System_Start
  2062  0E61                     _System_Start:	
  2063                           
  2064                           ;main.c: 71: WDTPS4 = 1;
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2068  0E61  0021               	movlb	1	; select bank1
  2069  0E62  1697               	bsf	23,5	;volatile
  2070                           
  2071                           ;main.c: 72: WDTPS3 = 0;
  2072  0E63  1217               	bcf	23,4	;volatile
  2073                           
  2074                           ;main.c: 73: WDTPS2 = 0;
  2075  0E64  1197               	bcf	23,3	;volatile
  2076                           
  2077                           ;main.c: 74: WDTPS1 = 0;
  2078  0E65  1117               	bcf	23,2	;volatile
  2079                           
  2080                           ;main.c: 75: WDTPS0 = 1;
  2081  0E66  1497               	bsf	23,1	;volatile
  2082                           
  2083                           ;main.c: 79: OSCCON = 0x00;
  2084  0E67  0199               	clrf	25	;volatile
  2085                           
  2086                           ;main.c: 80: OSCCON |= 0b11110000;
  2087  0E68  30F0               	movlw	240
  2088  0E69  0020               	movlb	0	; select bank0
  2089  0E6A  00A0               	movwf	??_System_Start
  2090  0E6B  0820               	movf	??_System_Start,w
  2091  0E6C  0021               	movlb	1	; select bank1
  2092  0E6D  0499               	iorwf	25,f	;volatile
  2093                           
  2094                           ;main.c: 81: OSCTUNE = 0x00;
  2095  0E6E  0198               	clrf	24	;volatile
  2096                           
  2097                           ;main.c: 85: TMR0CS = 0;
  2098  0E6F  1295               	bcf	21,5	;volatile
  2099                           
  2100                           ;main.c: 86: PSA = 1;
  2101  0E70  1595               	bsf	21,3	;volatile
  2102                           
  2103                           ;main.c: 90: TMR1ON = 1;
  2104  0E71  0020               	movlb	0	; select bank0
  2105  0E72  1418               	bsf	24,0	;volatile
  2106                           
  2107                           ;main.c: 91: TMR1GE = 0;
  2108  0E73  1399               	bcf	25,7	;volatile
  2109                           
  2110                           ;main.c: 93: TMR1CS1 = 0;
  2111  0E74  1398               	bcf	24,7	;volatile
  2112                           
  2113                           ;main.c: 94: TMR1CS0 = 0;
  2114  0E75  1318               	bcf	24,6	;volatile
  2115                           
  2116                           ;main.c: 96: T1CKPS1 = 1;
  2117  0E76  1698               	bsf	24,5	;volatile
  2118                           
  2119                           ;main.c: 97: T1CKPS0 = 1;
  2120  0E77  1618               	bsf	24,4	;volatile
  2121                           
  2122                           ;main.c: 99: CCP1M3 = 1;
  2123  0E78  0025               	movlb	5	; select bank5
  2124  0E79  1593               	bsf	19,3	;volatile
  2125                           
  2126                           ;main.c: 100: CCP1M2 = 0;
  2127  0E7A  1113               	bcf	19,2	;volatile
  2128                           
  2129                           ;main.c: 101: CCP1M1 = 1;
  2130  0E7B  1493               	bsf	19,1	;volatile
  2131                           
  2132                           ;main.c: 102: CCP1M1 = 0;
  2133  0E7C  1093               	bcf	19,1	;volatile
  2134                           
  2135                           ;main.c: 106: DACOE = 1;
  2136  0E7D  0022               	movlb	2	; select bank2
  2137  0E7E  1698               	bsf	24,5	;volatile
  2138                           
  2139                           ;main.c: 107: DACPSS1 = 0;
  2140  0E7F  1198               	bcf	24,3	;volatile
  2141                           
  2142                           ;main.c: 108: DACPSS0 = 0;
  2143  0E80  1118               	bcf	24,2	;volatile
  2144                           
  2145                           ;main.c: 109: DACNSS = 0;
  2146  0E81  1018               	bcf	24,0	;volatile
  2147                           
  2148                           ;main.c: 114: ANSA1 = 1;
  2149  0E82  0023               	movlb	3	; select bank3
  2150  0E83  148C               	bsf	12,1	;volatile
  2151                           
  2152                           ;main.c: 115: ADCON0 &= 0b10000011;
  2153  0E84  3083               	movlw	131
  2154  0E85  0020               	movlb	0	; select bank0
  2155  0E86  00A0               	movwf	??_System_Start
  2156  0E87  0820               	movf	??_System_Start,w
  2157  0E88  0021               	movlb	1	; select bank1
  2158  0E89  059D               	andwf	29,f	;volatile
  2159                           
  2160                           ;main.c: 116: ADCON0 |= 0b00000100;
  2161  0E8A  151D               	bsf	29,2	;volatile
  2162                           
  2163                           ;main.c: 117: ADNREF = 0;
  2164  0E8B  111E               	bcf	30,2	;volatile
  2165                           
  2166                           ;main.c: 118: ADPREF1 = 0;
  2167  0E8C  109E               	bcf	30,1	;volatile
  2168                           
  2169                           ;main.c: 119: ADPREF0 = 0;
  2170  0E8D  101E               	bcf	30,0	;volatile
  2171                           
  2172                           ;main.c: 120: ADCS2 = 1;
  2173  0E8E  171E               	bsf	30,6	;volatile
  2174                           
  2175                           ;main.c: 121: ADCS1 = 1;
  2176  0E8F  169E               	bsf	30,5	;volatile
  2177                           
  2178                           ;main.c: 122: ADCS0 = 0;
  2179  0E90  121E               	bcf	30,4	;volatile
  2180                           
  2181                           ;main.c: 123: ADFM = 1;
  2182  0E91  179E               	bsf	30,7	;volatile
  2183                           
  2184                           ;main.c: 128: TMR0IF = 0;
  2185  0E92  110B               	bcf	11,2	;volatile
  2186                           
  2187                           ;main.c: 129: TMR1IF = 0;
  2188  0E93  0020               	movlb	0	; select bank0
  2189  0E94  1011               	bcf	17,0	;volatile
  2190                           
  2191                           ;main.c: 130: CCP1IF = 0;
  2192  0E95  1111               	bcf	17,2	;volatile
  2193                           
  2194                           ;main.c: 131: ADIF = 0;
  2195  0E96  1311               	bcf	17,6	;volatile
  2196                           
  2197                           ;main.c: 135: SSPEN = 1;
  2198  0E97  0024               	movlb	4	; select bank4
  2199  0E98  1695               	bsf	21,5	;volatile
  2200                           
  2201                           ;main.c: 136: SSPM3 = 0;
  2202  0E99  1195               	bcf	21,3	;volatile
  2203                           
  2204                           ;main.c: 137: SSPM2 = 1;
  2205  0E9A  1515               	bsf	21,2	;volatile
  2206                           
  2207                           ;main.c: 138: SSPM1 = 1;
  2208  0E9B  1495               	bsf	21,1	;volatile
  2209                           
  2210                           ;main.c: 139: SSPM0 = 0;
  2211  0E9C  1015               	bcf	21,0	;volatile
  2212                           
  2213                           ;main.c: 140: GCEN = 0;
  2214  0E9D  1396               	bcf	22,7	;volatile
  2215                           
  2216                           ;main.c: 141: ACKDT = 0;
  2217  0E9E  1296               	bcf	22,5	;volatile
  2218                           
  2219                           ;main.c: 142: SEN = 1;
  2220  0E9F  1416               	bsf	22,0	;volatile
  2221                           
  2222                           ;main.c: 143: SSP1ADD = 0x60;
  2223  0EA0  3060               	movlw	96
  2224  0EA1  0092               	movwf	18	;volatile
  2225                           
  2226                           ;main.c: 144: SSPMSK |= 0b11111110;
  2227  0EA2  30FE               	movlw	254
  2228  0EA3  0020               	movlb	0	; select bank0
  2229  0EA4  00A0               	movwf	??_System_Start
  2230  0EA5  0820               	movf	??_System_Start,w
  2231  0EA6  0024               	movlb	4	; select bank4
  2232  0EA7  0493               	iorwf	19,f	;volatile
  2233                           
  2234                           ;main.c: 145: PCIE = 0;
  2235  0EA8  1317               	bcf	23,6	;volatile
  2236                           
  2237                           ;main.c: 146: SCIE = 0;
  2238  0EA9  1297               	bcf	23,5	;volatile
  2239                           
  2240                           ;main.c: 147: BOEN = 0;
  2241  0EAA  1217               	bcf	23,4	;volatile
  2242                           
  2243                           ;main.c: 148: AHEN = 0;
  2244  0EAB  1097               	bcf	23,1	;volatile
  2245                           
  2246                           ;main.c: 149: DHEN = 0;
  2247  0EAC  1017               	bcf	23,0	;volatile
  2248                           
  2249                           ;main.c: 150: SBCDE = 0;
  2250  0EAD  1117               	bcf	23,2	;volatile
  2251                           
  2252                           ;main.c: 151: SSP1IF = 0;
  2253  0EAE  0020               	movlb	0	; select bank0
  2254  0EAF  1191               	bcf	17,3	;volatile
  2255                           
  2256                           ;main.c: 152: SSP1IE = 1;
  2257  0EB0  0021               	movlb	1	; select bank1
  2258  0EB1  1591               	bsf	17,3	;volatile
  2259                           
  2260                           ;main.c: 156: INTCON |= 0xC0;
  2261  0EB2  30C0               	movlw	192
  2262  0EB3  0020               	movlb	0	; select bank0
  2263  0EB4  00A0               	movwf	??_System_Start
  2264  0EB5  0820               	movf	??_System_Start,w
  2265  0EB6  048B               	iorwf	11,f	;volatile
  2266  0EB7  0008               	return
  2267  0EB8                     __end_of_System_Start:	
  2268                           
  2269                           	psect	text3
  2270  0C0D                     __ptext3:	
  2271 ;; *************** function _Ptt_Off *****************
  2272 ;; Defined at:
  2273 ;;		line 351 in file "adf7012.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;		None
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;		None               void
  2280 ;; Registers used:
  2281 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2291 ;;Total ram usage:        0 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; Hardware stack levels required when called:    9
  2294 ;; This function calls:
  2295 ;;		_Adf_Write_Register_Three
  2296 ;;		_Adf_Write_Register_Two
  2297 ;;		_Delay_ms
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _Ptt_Off
  2305  0C0D                     _Ptt_Off:	
  2306                           
  2307                           ;adf7012.c: 353: PORTCbits.RC3 = 1;;
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2311  0C0D  0020               	movlb	0	; select bank0
  2312  0C0E  158E               	bsf	14,3	;volatile
  2313                           
  2314                           ;adf7012.c: 354: adf_config.r3.pa_enable = 0;
  2315  0C0F  0022               	movlb	2	; select bank2
  2316  0C10  01BA               	clrf	(_adf_config^(0+256)+26)
  2317                           
  2318                           ;adf7012.c: 355: adf_config.r2.power_amplifier_level = 0;
  2319  0C11  01B2               	clrf	(_adf_config^(0+256)+18)
  2320                           
  2321                           ;adf7012.c: 358: Adf_Write_Register_Two();
  2322  0C12  3184  24C4  318C   	fcall	_Adf_Write_Register_Two
  2323                           
  2324                           ;adf7012.c: 359: Adf_Write_Register_Three();
  2325  0C15  3180  205A  318C   	fcall	_Adf_Write_Register_Three
  2326                           
  2327                           ;adf7012.c: 361: Delay_ms(10);
  2328  0C18  300A               	movlw	10
  2329  0C19  0020               	movlb	0	; select bank0
  2330  0C1A  00A0               	movwf	Delay_ms@time_to_delay
  2331  0C1B  3000               	movlw	0
  2332  0C1C  00A1               	movwf	Delay_ms@time_to_delay+1
  2333  0C1D  318C  2484         	fcall	_Delay_ms
  2334  0C1F  0008               	return
  2335  0C20                     __end_of_Ptt_Off:	
  2336                           
  2337                           	psect	text4
  2338  0B76                     __ptext4:	
  2339 ;; *************** function _Modem_Setup *****************
  2340 ;; Defined at:
  2341 ;;		line 50 in file "audio_tone.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:   11
  2362 ;; This function calls:
  2363 ;;		_Configure_Audio
  2364 ;;		_Radio_Setup
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           
  2371                           ;psect for function _Modem_Setup
  2372  0B76                     _Modem_Setup:	
  2373                           
  2374                           ;audio_tone.c: 52: Configure_Audio();
  2375                           
  2376                           ;incstack = 0
  2377                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2378  0B76  318C  2435  318B   	fcall	_Configure_Audio
  2379                           
  2380                           ;audio_tone.c: 53: Radio_Setup();
  2381  0B79  318B  23AE         	fcall	_Radio_Setup
  2382  0B7B  0008               	return
  2383  0B7C                     __end_of_Modem_Setup:	
  2384                           
  2385                           	psect	text5
  2386  0BAE                     __ptext5:	
  2387 ;; *************** function _Radio_Setup *****************
  2388 ;; Defined at:
  2389 ;;		line 304 in file "adf7012.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;		None               void
  2396 ;; Registers used:
  2397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;Total ram usage:        0 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:   10
  2410 ;; This function calls:
  2411 ;;		_Adf_Reset_Config
  2412 ;;		_Adf_Write_Config
  2413 ;;		_Delay_ms
  2414 ;; This function is called by:
  2415 ;;		_Modem_Setup
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _Radio_Setup
  2421  0BAE                     _Radio_Setup:	
  2422                           
  2423                           ;adf7012.c: 307: Adf_Reset_Config();
  2424                           
  2425                           ;incstack = 0
  2426                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2427  0BAE  318B  23BC  318B   	fcall	_Adf_Reset_Config
  2428                           
  2429                           ;adf7012.c: 309: Adf_Write_Config();
  2430  0BB1  318B  23A2  318B   	fcall	_Adf_Write_Config
  2431                           
  2432                           ;adf7012.c: 311: Delay_ms(10);
  2433  0BB4  300A               	movlw	10
  2434  0BB5  0020               	movlb	0	; select bank0
  2435  0BB6  00A0               	movwf	Delay_ms@time_to_delay
  2436  0BB7  3000               	movlw	0
  2437  0BB8  00A1               	movwf	Delay_ms@time_to_delay+1
  2438  0BB9  318C  2484         	fcall	_Delay_ms
  2439  0BBB  0008               	return
  2440  0BBC                     __end_of_Radio_Setup:	
  2441                           
  2442                           	psect	text6
  2443  0BA2                     __ptext6:	
  2444 ;; *************** function _Adf_Write_Config *****************
  2445 ;; Defined at:
  2446 ;;		line 149 in file "adf7012.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;		None               void
  2453 ;; Registers used:
  2454 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    9
  2467 ;; This function calls:
  2468 ;;		_Adf_Write_Register_One
  2469 ;;		_Adf_Write_Register_Three
  2470 ;;		_Adf_Write_Register_Two
  2471 ;;		_Adf_Write_Register_Zero
  2472 ;; This function is called by:
  2473 ;;		_Radio_Setup
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           
  2478                           ;psect for function _Adf_Write_Config
  2479  0BA2                     _Adf_Write_Config:	
  2480                           
  2481                           ;adf7012.c: 150: Adf_Write_Register_Zero();
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2485  0BA2  3182  229E  318B   	fcall	_Adf_Write_Register_Zero
  2486                           
  2487                           ;adf7012.c: 151: Adf_Write_Register_One();
  2488  0BA5  318F  2715  318B   	fcall	_Adf_Write_Register_One
  2489                           
  2490                           ;adf7012.c: 152: Adf_Write_Register_Two();
  2491  0BA8  3184  24C4  318B   	fcall	_Adf_Write_Register_Two
  2492                           
  2493                           ;adf7012.c: 153: Adf_Write_Register_Three();
  2494  0BAB  3180  205A         	fcall	_Adf_Write_Register_Three
  2495  0BAD  0008               	return
  2496  0BAE                     __end_of_Adf_Write_Config:	
  2497                           
  2498                           	psect	text7
  2499  0F15                     __ptext7:	
  2500 ;; *************** function _Adf_Write_Register_One *****************
  2501 ;; Defined at:
  2502 ;;		line 175 in file "adf7012.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  reg             4   31[BANK0 ] unsigned long 
  2507 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  2508 ;; Return value:  Size  Location     Type
  2509 ;;		None               void
  2510 ;; Registers used:
  2511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2518 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2519 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2520 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2521 ;;Total ram usage:       19 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    8
  2524 ;; This function calls:
  2525 ;;		_Reverse_Array
  2526 ;;		_Write_Adf7012_Reg
  2527 ;;		_memcpy
  2528 ;; This function is called by:
  2529 ;;		_Adf_Write_Config
  2530 ;; This function uses a non-reentrant model
  2531 ;;
  2532                           
  2533                           
  2534                           ;psect for function _Adf_Write_Register_One
  2535  0F15                     _Adf_Write_Register_One:	
  2536                           
  2537                           ;adf7012.c: 176: uint32_t reg =
  2538                           ;adf7012.c: 177: (1) |
  2539                           ;adf7012.c: 178: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  2540                           ;adf7012.c: 179: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  2541                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  2542                           
  2543                           ;incstack = 0
  2544                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  2545  0F15  0022               	movlb	2	; select bank2
  2546  0F16  082F               	movf	(_adf_config^(0+256)+15),w
  2547  0F17  3901               	andlw	1
  2548  0F18  0020               	movlb	0	; select bank0
  2549  0F19  00B3               	movwf	??_Adf_Write_Register_One
  2550  0F1A  01B4               	clrf	??_Adf_Write_Register_One+1
  2551  0F1B  01B5               	clrf	??_Adf_Write_Register_One+2
  2552  0F1C  01B6               	clrf	??_Adf_Write_Register_One+3
  2553  0F1D  3016               	movlw	22
  2554  0F1E                     u1295:	
  2555  0F1E  35B3               	lslf	??_Adf_Write_Register_One,f
  2556  0F1F  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  2557  0F20  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  2558  0F21  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  2559  0F22  0B89               	decfsz	9,f
  2560  0F23  2F1E               	goto	u1295
  2561  0F24  0022               	movlb	2	; select bank2
  2562  0F25  082E               	movf	(_adf_config^(0+256)+14),w
  2563  0F26  0020               	movlb	0	; select bank0
  2564  0F27  00B7               	movwf	??_Adf_Write_Register_One+4
  2565  0F28  01B8               	clrf	??_Adf_Write_Register_One+5
  2566  0F29  01B9               	clrf	??_Adf_Write_Register_One+6
  2567  0F2A  01BA               	clrf	??_Adf_Write_Register_One+7
  2568  0F2B  300E               	movlw	14
  2569  0F2C                     u1305:	
  2570  0F2C  35B7               	lslf	??_Adf_Write_Register_One+4,f
  2571  0F2D  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  2572  0F2E  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  2573  0F2F  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  2574  0F30  0B89               	decfsz	9,f
  2575  0F31  2F2C               	goto	u1305
  2576  0F32  300A               	movlw	10
  2577  0F33  3E20               	addlw	_adf_config& (0+255)
  2578  0F34  0086               	movwf	6
  2579  0F35  3001               	movlw	1	; select bank2/3
  2580  0F36  0087               	movwf	7
  2581  0F37  30FF               	movlw	255
  2582  0F38  0501               	andwf	1,w
  2583  0F39  00BB               	movwf	??_Adf_Write_Register_One+8
  2584  0F3A  3141               	addfsr 1,1
  2585  0F3B  300F               	movlw	15
  2586  0F3C  0501               	andwf	1,w
  2587  0F3D  00BC               	movwf	??_Adf_Write_Register_One+9
  2588  0F3E  3141               	addfsr 1,1
  2589  0F3F  3000               	movlw	0
  2590  0F40  0501               	andwf	1,w
  2591  0F41  00BD               	movwf	??_Adf_Write_Register_One+10
  2592  0F42  3141               	addfsr 1,1
  2593  0F43  3000               	movlw	0
  2594  0F44  0501               	andwf	1,w
  2595  0F45  00BE               	movwf	??_Adf_Write_Register_One+11
  2596  0F46  3002               	movlw	2
  2597  0F47                     u1315:	
  2598  0F47  35BB               	lslf	??_Adf_Write_Register_One+8,f
  2599  0F48  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  2600  0F49  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  2601  0F4A  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  2602  0F4B  0B89               	decfsz	9,f
  2603  0F4C  2F47               	goto	u1315
  2604  0F4D  083B               	movf	??_Adf_Write_Register_One+8,w
  2605  0F4E  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  2606  0F4F  083C               	movf	??_Adf_Write_Register_One+9,w
  2607  0F50  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  2608  0F51  083D               	movf	??_Adf_Write_Register_One+10,w
  2609  0F52  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  2610  0F53  083E               	movf	??_Adf_Write_Register_One+11,w
  2611  0F54  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  2612  0F55  0837               	movf	??_Adf_Write_Register_One+4,w
  2613  0F56  04B3               	iorwf	??_Adf_Write_Register_One,f
  2614  0F57  0838               	movf	??_Adf_Write_Register_One+5,w
  2615  0F58  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  2616  0F59  0839               	movf	??_Adf_Write_Register_One+6,w
  2617  0F5A  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  2618  0F5B  083A               	movf	??_Adf_Write_Register_One+7,w
  2619  0F5C  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  2620  0F5D  3001               	movlw	1
  2621  0F5E  0433               	iorwf	??_Adf_Write_Register_One,w
  2622  0F5F  00BF               	movwf	Adf_Write_Register_One@reg
  2623  0F60  3000               	movlw	0
  2624  0F61  0434               	iorwf	??_Adf_Write_Register_One+1,w
  2625  0F62  00C0               	movwf	Adf_Write_Register_One@reg+1
  2626  0F63  3000               	movlw	0
  2627  0F64  0435               	iorwf	??_Adf_Write_Register_One+2,w
  2628  0F65  00C1               	movwf	Adf_Write_Register_One@reg+2
  2629  0F66  3000               	movlw	0
  2630  0F67  0436               	iorwf	??_Adf_Write_Register_One+3,w
  2631  0F68  00C2               	movwf	Adf_Write_Register_One@reg+3
  2632                           
  2633                           ;adf7012.c: 182: uint8_t reg_ptr[3];
  2634                           ;adf7012.c: 183: memcpy(reg_ptr, &reg, 3);
  2635  0F69  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  2636  0F6A  00B3               	movwf	??_Adf_Write_Register_One
  2637  0F6B  0833               	movf	??_Adf_Write_Register_One,w
  2638  0F6C  00A0               	movwf	memcpy@s1
  2639  0F6D  3003               	movlw	3
  2640  0F6E  00A1               	movwf	memcpy@n
  2641  0F6F  3000               	movlw	0
  2642  0F70  00A2               	movwf	memcpy@n+1
  2643  0F71  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2644  0F72  318C  24CA  318F   	fcall	_memcpy
  2645                           
  2646                           ;adf7012.c: 184: Reverse_Array(reg_ptr,3);
  2647  0F75  3003               	movlw	3
  2648  0F76  0020               	movlb	0	; select bank0
  2649  0F77  00B3               	movwf	??_Adf_Write_Register_One
  2650  0F78  0833               	movf	??_Adf_Write_Register_One,w
  2651  0F79  00A7               	movwf	Reverse_Array@length
  2652  0F7A  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2653  0F7B  318E  261D  318F   	fcall	_Reverse_Array
  2654                           
  2655                           ;adf7012.c: 185: Write_Adf7012_Reg(reg_ptr, 3);
  2656  0F7E  3003               	movlw	3
  2657  0F7F  0020               	movlb	0	; select bank0
  2658  0F80  00B3               	movwf	??_Adf_Write_Register_One
  2659  0F81  0833               	movf	??_Adf_Write_Register_One,w
  2660  0F82  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  2661  0F83  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2662  0F84  318D  25A8         	fcall	_Write_Adf7012_Reg
  2663  0F86  0008               	return
  2664  0F87                     __end_of_Adf_Write_Register_One:	
  2665                           
  2666                           	psect	text8
  2667  0BBC                     __ptext8:	
  2668 ;; *************** function _Adf_Reset_Config *****************
  2669 ;; Defined at:
  2670 ;;		line 83 in file "adf7012.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;		None               void
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    7
  2691 ;; This function calls:
  2692 ;;		_Adf_Reset
  2693 ;;		_Adf_Reset_Register_One
  2694 ;;		_Adf_Reset_Register_Three
  2695 ;;		_Adf_Reset_Register_Two
  2696 ;;		_Adf_Reset_Register_Zero
  2697 ;; This function is called by:
  2698 ;;		_Radio_Setup
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function _Adf_Reset_Config
  2704  0BBC                     _Adf_Reset_Config:	
  2705                           
  2706                           ;adf7012.c: 86: Adf_Reset_Register_Zero();
  2707                           
  2708                           ;incstack = 0
  2709                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  2710  0BBC  3183  23E1  318B   	fcall	_Adf_Reset_Register_Zero
  2711                           
  2712                           ;adf7012.c: 87: Adf_Reset_Register_One();
  2713  0BBF  318B  23EA  318B   	fcall	_Adf_Reset_Register_One
  2714                           
  2715                           ;adf7012.c: 88: Adf_Reset_Register_Two();
  2716  0BC2  3187  27E7  318B   	fcall	_Adf_Reset_Register_Two
  2717                           
  2718                           ;adf7012.c: 89: Adf_Reset_Register_Three();
  2719  0BC5  318C  24A4  318B   	fcall	_Adf_Reset_Register_Three
  2720                           
  2721                           ;adf7012.c: 91: Adf_Reset();
  2722  0BC8  318B  23FB         	fcall	_Adf_Reset
  2723  0BCA  0008               	return
  2724  0BCB                     __end_of_Adf_Reset_Config:	
  2725                           
  2726                           	psect	text9
  2727  03E1                     __ptext9:	
  2728 ;; *************** function _Adf_Reset_Register_Zero *****************
  2729 ;; Defined at:
  2730 ;;		line 95 in file "adf7012.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;		None
  2735 ;; Return value:  Size  Location     Type
  2736 ;;		None               void
  2737 ;; Registers used:
  2738 ;;		wreg, status,2
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;Total ram usage:        1 bytes
  2749 ;; Hardware stack levels used:    1
  2750 ;; Hardware stack levels required when called:    4
  2751 ;; This function calls:
  2752 ;;		Nothing
  2753 ;; This function is called by:
  2754 ;;		_Adf_Reset_Config
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           
  2759                           ;psect for function _Adf_Reset_Register_Zero
  2760  03E1                     _Adf_Reset_Register_Zero:	
  2761                           
  2762                           ;adf7012.c: 96: adf_config.r0.frequency_error_correction = 0;
  2763                           
  2764                           ;incstack = 0
  2765                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  2766  03E1  3000               	movlw	0
  2767  03E2  0022               	movlb	2	; select bank2
  2768  03E3  00A3               	movwf	(_adf_config+3)^(0+256)
  2769  03E4  3000               	movlw	0
  2770  03E5  00A2               	movwf	(_adf_config+2)^(0+256)
  2771  03E6  3000               	movlw	0
  2772  03E7  00A1               	movwf	(_adf_config+1)^(0+256)
  2773  03E8  3000               	movlw	0
  2774  03E9  00A0               	movwf	_adf_config^(0+256)
  2775                           
  2776                           ;adf7012.c: 97: adf_config.r0.r_divider = 15;
  2777  03EA  300F               	movlw	15
  2778  03EB  0020               	movlb	0	; select bank0
  2779  03EC  00A0               	movwf	??_Adf_Reset_Register_Zero
  2780  03ED  0820               	movf	??_Adf_Reset_Register_Zero,w
  2781  03EE  0022               	movlb	2	; select bank2
  2782  03EF  00A4               	movwf	(_adf_config^(0+256)+4)
  2783                           
  2784                           ;adf7012.c: 98: adf_config.r0.crystal_doubler = 0;
  2785  03F0  01A5               	clrf	(_adf_config^(0+256)+5)
  2786                           
  2787                           ;adf7012.c: 99: adf_config.r0.crystal_oscillator_disable = 0;
  2788  03F1  01A6               	clrf	(_adf_config^(0+256)+6)
  2789                           
  2790                           ;adf7012.c: 100: adf_config.r0.clock_out_divider = 2;
  2791  03F2  3002               	movlw	2
  2792  03F3  0020               	movlb	0	; select bank0
  2793  03F4  00A0               	movwf	??_Adf_Reset_Register_Zero
  2794  03F5  0820               	movf	??_Adf_Reset_Register_Zero,w
  2795  03F6  0022               	movlb	2	; select bank2
  2796  03F7  00A7               	movwf	(_adf_config^(0+256)+7)
  2797                           
  2798                           ;adf7012.c: 101: adf_config.r0.vco_adjust = 0;
  2799  03F8  01A8               	clrf	(_adf_config^(0+256)+8)
  2800                           
  2801                           ;adf7012.c: 102: adf_config.r0.output_divider = 2;
  2802  03F9  3002               	movlw	2
  2803  03FA  0020               	movlb	0	; select bank0
  2804  03FB  00A0               	movwf	??_Adf_Reset_Register_Zero
  2805  03FC  0820               	movf	??_Adf_Reset_Register_Zero,w
  2806  03FD  0022               	movlb	2	; select bank2
  2807  03FE  00A9               	movwf	(_adf_config^(0+256)+9)
  2808  03FF  0008               	return
  2809  0400                     __end_of_Adf_Reset_Register_Zero:	
  2810                           
  2811                           	psect	text10
  2812  07E7                     __ptext10:	
  2813 ;; *************** function _Adf_Reset_Register_Two *****************
  2814 ;; Defined at:
  2815 ;;		line 111 in file "adf7012.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;		None
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		wreg, status,2
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;Total ram usage:        1 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    4
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_Adf_Reset_Config
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function _Adf_Reset_Register_Two
  2845  07E7                     _Adf_Reset_Register_Two:	
  2846                           
  2847                           ;adf7012.c: 112: adf_config.r2.mod_control = 3;
  2848                           
  2849                           ;incstack = 0
  2850                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  2851  07E7  3003               	movlw	3
  2852  07E8  0020               	movlb	0	; select bank0
  2853  07E9  00A0               	movwf	??_Adf_Reset_Register_Two
  2854  07EA  0820               	movf	??_Adf_Reset_Register_Two,w
  2855  07EB  0022               	movlb	2	; select bank2
  2856  07EC  00B0               	movwf	(_adf_config^(0+256)+16)
  2857                           
  2858                           ;adf7012.c: 113: adf_config.r2.gook = 0;
  2859  07ED  01B1               	clrf	(_adf_config^(0+256)+17)
  2860                           
  2861                           ;adf7012.c: 114: adf_config.r2.power_amplifier_level = 15;
  2862  07EE  300F               	movlw	15
  2863  07EF  0020               	movlb	0	; select bank0
  2864  07F0  00A0               	movwf	??_Adf_Reset_Register_Two
  2865  07F1  0820               	movf	??_Adf_Reset_Register_Two,w
  2866  07F2  0022               	movlb	2	; select bank2
  2867  07F3  00B2               	movwf	(_adf_config^(0+256)+18)
  2868                           
  2869                           ;adf7012.c: 115: adf_config.r2.modulation_deviation = 16;
  2870  07F4  3000               	movlw	0
  2871  07F5  00B6               	movwf	((_adf_config+3)^(0+256)+19)
  2872  07F6  3000               	movlw	0
  2873  07F7  00B5               	movwf	((_adf_config+2)^(0+256)+19)
  2874  07F8  3000               	movlw	0
  2875  07F9  00B4               	movwf	((_adf_config+1)^(0+256)+19)
  2876  07FA  3010               	movlw	16
  2877  07FB  00B3               	movwf	(_adf_config^(0+256)+19)
  2878                           
  2879                           ;adf7012.c: 116: adf_config.r2.gfsk_modulation_control = 0;
  2880  07FC  01B7               	clrf	(_adf_config^(0+256)+23)
  2881                           
  2882                           ;adf7012.c: 117: adf_config.r2.index_counter = 0;
  2883  07FD  01B8               	clrf	(_adf_config^(0+256)+24)
  2884  07FE  0008               	return
  2885  07FF                     __end_of_Adf_Reset_Register_Two:	
  2886                           
  2887                           	psect	text11
  2888  0CA4                     __ptext11:	
  2889 ;; *************** function _Adf_Reset_Register_Three *****************
  2890 ;; Defined at:
  2891 ;;		line 120 in file "adf7012.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;		None               void
  2898 ;; Registers used:
  2899 ;;		wreg, status,2
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2907 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2909 ;;Total ram usage:        1 bytes
  2910 ;; Hardware stack levels used:    1
  2911 ;; Hardware stack levels required when called:    4
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_Adf_Reset_Config
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           
  2920                           ;psect for function _Adf_Reset_Register_Three
  2921  0CA4                     _Adf_Reset_Register_Three:	
  2922                           
  2923                           ;adf7012.c: 121: adf_config.r3.pll_enable = 0;
  2924                           
  2925                           ;incstack = 0
  2926                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  2927  0CA4  0022               	movlb	2	; select bank2
  2928  0CA5  01B9               	clrf	(_adf_config^(0+256)+25)
  2929                           
  2930                           ;adf7012.c: 122: adf_config.r3.pa_enable = 0;
  2931  0CA6  01BA               	clrf	(_adf_config^(0+256)+26)
  2932                           
  2933                           ;adf7012.c: 123: adf_config.r3.clkout_enable = 1;
  2934  0CA7  01BB               	clrf	(_adf_config^(0+256)+27)
  2935  0CA8  0ABB               	incf	(_adf_config^(0+256)+27),f
  2936                           
  2937                           ;adf7012.c: 124: adf_config.r3.data_invert = 1;
  2938  0CA9  01BC               	clrf	(_adf_config^(0+256)+28)
  2939  0CAA  0ABC               	incf	(_adf_config^(0+256)+28),f
  2940                           
  2941                           ;adf7012.c: 125: adf_config.r3.charge_pump_current = 3;
  2942  0CAB  3003               	movlw	3
  2943  0CAC  0020               	movlb	0	; select bank0
  2944  0CAD  00A0               	movwf	??_Adf_Reset_Register_Three
  2945  0CAE  0820               	movf	??_Adf_Reset_Register_Three,w
  2946  0CAF  0022               	movlb	2	; select bank2
  2947  0CB0  00BD               	movwf	(_adf_config^(0+256)+29)
  2948                           
  2949                           ;adf7012.c: 126: adf_config.r3.bleed_up = 0;
  2950  0CB1  01BE               	clrf	(_adf_config^(0+256)+30)
  2951                           
  2952                           ;adf7012.c: 127: adf_config.r3.bleed_down = 0;
  2953  0CB2  01BF               	clrf	(_adf_config^(0+256)+31)
  2954                           
  2955                           ;adf7012.c: 128: adf_config.r3.vco_disable = 0;
  2956  0CB3  01C0               	clrf	(_adf_config^(0+256)+32)
  2957                           
  2958                           ;adf7012.c: 130: adf_config.r3.muxout = 3;
  2959  0CB4  3003               	movlw	3
  2960  0CB5  0020               	movlb	0	; select bank0
  2961  0CB6  00A0               	movwf	??_Adf_Reset_Register_Three
  2962  0CB7  0820               	movf	??_Adf_Reset_Register_Three,w
  2963  0CB8  0022               	movlb	2	; select bank2
  2964  0CB9  00C1               	movwf	(_adf_config^(0+256)+33)
  2965                           
  2966                           ;adf7012.c: 132: adf_config.r3.ld_precision = 0;
  2967  0CBA  01C2               	clrf	(_adf_config^(0+256)+34)
  2968                           
  2969                           ;adf7012.c: 133: adf_config.r3.vco_bias = 6;
  2970  0CBB  3006               	movlw	6
  2971  0CBC  0020               	movlb	0	; select bank0
  2972  0CBD  00A0               	movwf	??_Adf_Reset_Register_Three
  2973  0CBE  0820               	movf	??_Adf_Reset_Register_Three,w
  2974  0CBF  0022               	movlb	2	; select bank2
  2975  0CC0  00C3               	movwf	(_adf_config^(0+256)+35)
  2976                           
  2977                           ;adf7012.c: 134: adf_config.r3.pa_bias = 4;
  2978  0CC1  3004               	movlw	4
  2979  0CC2  0020               	movlb	0	; select bank0
  2980  0CC3  00A0               	movwf	??_Adf_Reset_Register_Three
  2981  0CC4  0820               	movf	??_Adf_Reset_Register_Three,w
  2982  0CC5  0022               	movlb	2	; select bank2
  2983  0CC6  00C4               	movwf	(_adf_config^(0+256)+36)
  2984                           
  2985                           ;adf7012.c: 135: adf_config.r3.pll_test_mode = 0;
  2986  0CC7  01C5               	clrf	(_adf_config^(0+256)+37)
  2987                           
  2988                           ;adf7012.c: 136: adf_config.r3.sd_test_mode = 0;
  2989  0CC8  01C6               	clrf	(_adf_config^(0+256)+38)
  2990  0CC9  0008               	return
  2991  0CCA                     __end_of_Adf_Reset_Register_Three:	
  2992                           
  2993                           	psect	text12
  2994  0BEA                     __ptext12:	
  2995 ;; *************** function _Adf_Reset_Register_One *****************
  2996 ;; Defined at:
  2997 ;;		line 105 in file "adf7012.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;		None               void
  3004 ;; Registers used:
  3005 ;;		wreg
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;Total ram usage:        1 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    4
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_Adf_Reset_Config
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           
  3026                           ;psect for function _Adf_Reset_Register_One
  3027  0BEA                     _Adf_Reset_Register_One:	
  3028                           
  3029                           ;adf7012.c: 106: adf_config.r1.integer_n = 109;
  3030                           
  3031                           ;incstack = 0
  3032                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  3033  0BEA  306D               	movlw	109
  3034  0BEB  0020               	movlb	0	; select bank0
  3035  0BEC  00A0               	movwf	??_Adf_Reset_Register_One
  3036  0BED  0820               	movf	??_Adf_Reset_Register_One,w
  3037  0BEE  0022               	movlb	2	; select bank2
  3038  0BEF  00AE               	movwf	(_adf_config^(0+256)+14)
  3039                           
  3040                           ;adf7012.c: 107: adf_config.r1.fractional_n = 0;
  3041  0BF0  3000               	movlw	0
  3042  0BF1  00AD               	movwf	((_adf_config+3)^(0+256)+10)
  3043  0BF2  3000               	movlw	0
  3044  0BF3  00AC               	movwf	((_adf_config+2)^(0+256)+10)
  3045  0BF4  3000               	movlw	0
  3046  0BF5  00AB               	movwf	((_adf_config+1)^(0+256)+10)
  3047  0BF6  3000               	movlw	0
  3048  0BF7  00AA               	movwf	(_adf_config^(0+256)+10)
  3049                           
  3050                           ;adf7012.c: 108: adf_config.r1.prescaler = 1;
  3051  0BF8  01AF               	clrf	(_adf_config^(0+256)+15)
  3052  0BF9  0AAF               	incf	(_adf_config^(0+256)+15),f
  3053  0BFA  0008               	return
  3054  0BFB                     __end_of_Adf_Reset_Register_One:	
  3055                           
  3056                           	psect	text13
  3057  0BFB                     __ptext13:	
  3058 ;; *************** function _Adf_Reset *****************
  3059 ;; Defined at:
  3060 ;;		line 139 in file "adf7012.c"
  3061 ;; Parameters:    Size  Location     Type
  3062 ;;		None
  3063 ;; Auto vars:     Size  Location     Type
  3064 ;;		None
  3065 ;; Return value:  Size  Location     Type
  3066 ;;		None               void
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, pclath, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3078 ;;Total ram usage:        0 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    6
  3081 ;; This function calls:
  3082 ;;		_Delay_ms
  3083 ;; This function is called by:
  3084 ;;		_Adf_Reset_Config
  3085 ;; This function uses a non-reentrant model
  3086 ;;
  3087                           
  3088                           
  3089                           ;psect for function _Adf_Reset
  3090  0BFB                     _Adf_Reset:	
  3091                           
  3092                           ;adf7012.c: 141: PORTAbits.RA5 = 0;;
  3093                           
  3094                           ;incstack = 0
  3095                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  3096  0BFB  0020               	movlb	0	; select bank0
  3097  0BFC  128C               	bcf	12,5	;volatile
  3098                           
  3099                           ;adf7012.c: 142: Delay_ms(10);
  3100  0BFD  300A               	movlw	10
  3101  0BFE  00A0               	movwf	Delay_ms@time_to_delay
  3102  0BFF  3000               	movlw	0
  3103  0C00  00A1               	movwf	Delay_ms@time_to_delay+1
  3104  0C01  318C  2484  318B   	fcall	_Delay_ms
  3105                           
  3106                           ;adf7012.c: 143: PORTAbits.RA5 = 1;;
  3107  0C04  0020               	movlb	0	; select bank0
  3108  0C05  168C               	bsf	12,5	;volatile
  3109                           
  3110                           ;adf7012.c: 144: Delay_ms(10);
  3111  0C06  300A               	movlw	10
  3112  0C07  00A0               	movwf	Delay_ms@time_to_delay
  3113  0C08  3000               	movlw	0
  3114  0C09  00A1               	movwf	Delay_ms@time_to_delay+1
  3115  0C0A  318C  2484         	fcall	_Delay_ms
  3116  0C0C  0008               	return
  3117  0C0D                     __end_of_Adf_Reset:	
  3118                           
  3119                           	psect	text14
  3120  0C35                     __ptext14:	
  3121 ;; *************** function _Configure_Audio *****************
  3122 ;; Defined at:
  3123 ;;		line 44 in file "audio_tone.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;		None
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;		None               void
  3130 ;; Registers used:
  3131 ;;		wreg
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3140 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;Total ram usage:        1 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    4
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_Modem_Setup
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _Configure_Audio
  3153  0C35                     _Configure_Audio:	
  3154                           
  3155                           ;audio_tone.c: 45: SAMPLES_PER_BAUD = 26;
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _Configure_Audio: [wreg]
  3159  0C35  301A               	movlw	26
  3160  0C36  0020               	movlb	0	; select bank0
  3161  0C37  00A0               	movwf	??_Configure_Audio
  3162  0C38  0820               	movf	??_Configure_Audio,w
  3163  0C39  0021               	movlb	1	; select bank1
  3164  0C3A  00C1               	movwf	_SAMPLES_PER_BAUD^(0+128)
  3165                           
  3166                           ;audio_tone.c: 46: PHASE_DELTA_1200 = 7;
  3167  0C3B  3000               	movlw	0
  3168  0C3C  00AC               	movwf	(_PHASE_DELTA_1200+3)^(0+128)
  3169  0C3D  3000               	movlw	0
  3170  0C3E  00AB               	movwf	(_PHASE_DELTA_1200+2)^(0+128)
  3171  0C3F  3000               	movlw	0
  3172  0C40  00AA               	movwf	(_PHASE_DELTA_1200+1)^(0+128)
  3173  0C41  3007               	movlw	7
  3174  0C42  00A9               	movwf	_PHASE_DELTA_1200^(0+128)
  3175                           
  3176                           ;audio_tone.c: 47: PHASE_DELTA_2200 = 13;
  3177  0C43  3000               	movlw	0
  3178  0C44  00B0               	movwf	(_PHASE_DELTA_2200+3)^(0+128)
  3179  0C45  3000               	movlw	0
  3180  0C46  00AF               	movwf	(_PHASE_DELTA_2200+2)^(0+128)
  3181  0C47  3000               	movlw	0
  3182  0C48  00AE               	movwf	(_PHASE_DELTA_2200+1)^(0+128)
  3183  0C49  300D               	movlw	13
  3184  0C4A  00AD               	movwf	_PHASE_DELTA_2200^(0+128)
  3185  0C4B  0008               	return
  3186  0C4C                     __end_of_Configure_Audio:	
  3187                           
  3188                           	psect	text15
  3189  0D1D                     __ptext15:	
  3190 ;; *************** function _Modem_Flush_Frame *****************
  3191 ;; Defined at:
  3192 ;;		line 56 in file "audio_tone.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;		None               void
  3199 ;; Registers used:
  3200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3208 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3209 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3210 ;;Total ram usage:        1 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:   10
  3213 ;; This function calls:
  3214 ;;		_Delay_ms
  3215 ;;		_Ptt_On
  3216 ;;		_Timer0_Start
  3217 ;; This function is called by:
  3218 ;;		_main
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           
  3223                           ;psect for function _Modem_Flush_Frame
  3224  0D1D                     _Modem_Flush_Frame:	
  3225                           
  3226                           ;audio_tone.c: 58: phase_delta = PHASE_DELTA_1200;
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3230  0D1D  0021               	movlb	1	; select bank1
  3231  0D1E  0829               	movf	_PHASE_DELTA_1200^(0+128),w
  3232  0D1F  0020               	movlb	0	; select bank0
  3233  0D20  00EC               	movwf	??_Modem_Flush_Frame
  3234  0D21  086C               	movf	??_Modem_Flush_Frame,w
  3235  0D22  0021               	movlb	1	; select bank1
  3236  0D23  00C8               	movwf	_phase_delta^(0+128)
  3237                           
  3238                           ;audio_tone.c: 59: phase = 0;
  3239  0D24  0020               	movlb	0	; select bank0
  3240  0D25  01EF               	clrf	_phase
  3241                           
  3242                           ;audio_tone.c: 60: packet_pos = 0;
  3243  0D26  3000               	movlw	0
  3244  0D27  0021               	movlb	1	; select bank1
  3245  0D28  00B8               	movwf	(_packet_pos+3)^(0+128)
  3246  0D29  3000               	movlw	0
  3247  0D2A  00B7               	movwf	(_packet_pos+2)^(0+128)
  3248  0D2B  3000               	movlw	0
  3249  0D2C  00B6               	movwf	(_packet_pos+1)^(0+128)
  3250  0D2D  3000               	movlw	0
  3251  0D2E  00B5               	movwf	_packet_pos^(0+128)
  3252                           
  3253                           ;audio_tone.c: 61: current_sample_in_baud = 0;
  3254  0D2F  01C5               	clrf	_current_sample_in_baud^(0+128)
  3255                           
  3256                           ;audio_tone.c: 62: MODEM_TRANSMITTING = 1;
  3257  0D30  01BF               	clrf	_MODEM_TRANSMITTING^(0+128)
  3258  0D31  0ABF               	incf	_MODEM_TRANSMITTING^(0+128),f
  3259                           
  3260                           ;audio_tone.c: 64: PORTCbits.RC3 = 0;;
  3261  0D32  0020               	movlb	0	; select bank0
  3262  0D33  118E               	bcf	14,3	;volatile
  3263                           
  3264                           ;audio_tone.c: 65: Delay_ms(1);
  3265  0D34  3001               	movlw	1
  3266  0D35  00A0               	movwf	Delay_ms@time_to_delay
  3267  0D36  3000               	movlw	0
  3268  0D37  00A1               	movwf	Delay_ms@time_to_delay+1
  3269  0D38  318C  2484  318D   	fcall	_Delay_ms
  3270                           
  3271                           ;audio_tone.c: 75: Ptt_On();
  3272  0D3B  318D  25E1  318D   	fcall	_Ptt_On
  3273                           
  3274                           ;audio_tone.c: 77: Delay_ms(100);
  3275  0D3E  3064               	movlw	100
  3276  0D3F  0020               	movlb	0	; select bank0
  3277  0D40  00A0               	movwf	Delay_ms@time_to_delay
  3278  0D41  3000               	movlw	0
  3279  0D42  00A1               	movwf	Delay_ms@time_to_delay+1
  3280  0D43  318C  2484  318D   	fcall	_Delay_ms
  3281                           
  3282                           ;audio_tone.c: 78: Timer0_Start();
  3283  0D46  318B  2365         	fcall	_Timer0_Start
  3284  0D48  0008               	return
  3285  0D49                     __end_of_Modem_Flush_Frame:	
  3286                           
  3287                           	psect	text16
  3288  0B65                     __ptext16:	
  3289 ;; *************** function _Timer0_Start *****************
  3290 ;; Defined at:
  3291 ;;		line 239 in file "utility.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		status,2
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;Total ram usage:        0 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    4
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_Modem_Flush_Frame
  3316 ;; This function uses a non-reentrant model
  3317 ;;
  3318                           
  3319                           
  3320                           ;psect for function _Timer0_Start
  3321  0B65                     _Timer0_Start:	
  3322                           
  3323                           ;utility.c: 240: TMR0 = 0x00;
  3324                           
  3325                           ;incstack = 0
  3326                           ; Regs used in _Timer0_Start: [status,2]
  3327  0B65  0020               	movlb	0	; select bank0
  3328  0B66  0195               	clrf	21	;volatile
  3329                           
  3330                           ;utility.c: 241: TMR0IF = 0;
  3331  0B67  110B               	bcf	11,2	;volatile
  3332                           
  3333                           ;utility.c: 242: TMR0IE = 1;
  3334  0B68  168B               	bsf	11,5	;volatile
  3335  0B69  0008               	return
  3336  0B6A                     __end_of_Timer0_Start:	
  3337                           
  3338                           	psect	text17
  3339  0DE1                     __ptext17:	
  3340 ;; *************** function _Ptt_On *****************
  3341 ;; Defined at:
  3342 ;;		line 315 in file "adf7012.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      unsigned char 
  3349 ;; Registers used:
  3350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;Total ram usage:        1 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; Hardware stack levels required when called:    9
  3363 ;; This function calls:
  3364 ;;		_Adf_Write_Register_Three
  3365 ;;		_Adf_Write_Register_Two
  3366 ;;		_Delay_ms
  3367 ;;		_Read_Adf7012_Muxout
  3368 ;; This function is called by:
  3369 ;;		_Modem_Flush_Frame
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           
  3374                           ;psect for function _Ptt_On
  3375  0DE1                     _Ptt_On:	
  3376                           
  3377                           ;adf7012.c: 317: adf_config.r3.pa_enable = 0;
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3381  0DE1  0022               	movlb	2	; select bank2
  3382  0DE2  01BA               	clrf	(_adf_config^(0+256)+26)
  3383                           
  3384                           ;adf7012.c: 318: adf_config.r2.power_amplifier_level = 0;
  3385  0DE3  01B2               	clrf	(_adf_config^(0+256)+18)
  3386                           
  3387                           ;adf7012.c: 319: adf_config.r3.muxout = 3;
  3388  0DE4  3003               	movlw	3
  3389  0DE5  0020               	movlb	0	; select bank0
  3390  0DE6  00EB               	movwf	??_Ptt_On
  3391  0DE7  086B               	movf	??_Ptt_On,w
  3392  0DE8  0022               	movlb	2	; select bank2
  3393  0DE9  00C1               	movwf	(_adf_config^(0+256)+33)
  3394                           
  3395                           ;adf7012.c: 322: Adf_Write_Register_Two();
  3396  0DEA  3184  24C4  318D   	fcall	_Adf_Write_Register_Two
  3397                           
  3398                           ;adf7012.c: 323: Adf_Write_Register_Three();
  3399  0DED  3180  205A  318D   	fcall	_Adf_Write_Register_Three
  3400                           
  3401                           ;adf7012.c: 325: Delay_ms(10);
  3402  0DF0  300A               	movlw	10
  3403  0DF1  0020               	movlb	0	; select bank0
  3404  0DF2  00A0               	movwf	Delay_ms@time_to_delay
  3405  0DF3  3000               	movlw	0
  3406  0DF4  00A1               	movwf	Delay_ms@time_to_delay+1
  3407  0DF5  318C  2484  318D   	fcall	_Delay_ms
  3408                           
  3409                           ;adf7012.c: 329: if (!Read_Adf7012_Muxout())
  3410  0DF8  318B  238F  318D   	fcall	_Read_Adf7012_Muxout
  3411  0DFB  3800               	iorlw	0
  3412  0DFC  1903               	btfsc	3,2
  3413  0DFD  0008               	return
  3414                           
  3415                           ;adf7012.c: 333: else
  3416                           ;adf7012.c: 334: {
  3417                           ;adf7012.c: 336: adf_config.r3.pa_enable = 1;
  3418                           
  3419                           ;adf7012.c: 332: }
  3420                           
  3421                           ;adf7012.c: 330: {
  3422                           ;adf7012.c: 331: return 0;
  3423                           ;	Return value of _Ptt_On is never used
  3424  0DFE  0022               	movlb	2	; select bank2
  3425  0DFF  01BA               	clrf	(_adf_config^(0+256)+26)
  3426  0E00  0ABA               	incf	(_adf_config^(0+256)+26),f
  3427                           
  3428                           ;adf7012.c: 337: adf_config.r2.power_amplifier_level = 63;
  3429  0E01  303F               	movlw	63
  3430  0E02  0020               	movlb	0	; select bank0
  3431  0E03  00EB               	movwf	??_Ptt_On
  3432  0E04  086B               	movf	??_Ptt_On,w
  3433  0E05  0022               	movlb	2	; select bank2
  3434  0E06  00B2               	movwf	(_adf_config^(0+256)+18)
  3435                           
  3436                           ;adf7012.c: 339: Delay_ms(10);
  3437  0E07  300A               	movlw	10
  3438  0E08  0020               	movlb	0	; select bank0
  3439  0E09  00A0               	movwf	Delay_ms@time_to_delay
  3440  0E0A  3000               	movlw	0
  3441  0E0B  00A1               	movwf	Delay_ms@time_to_delay+1
  3442  0E0C  318C  2484  318D   	fcall	_Delay_ms
  3443                           
  3444                           ;adf7012.c: 342: Adf_Write_Register_Two();
  3445  0E0F  3184  24C4  318D   	fcall	_Adf_Write_Register_Two
  3446                           
  3447                           ;adf7012.c: 343: Adf_Write_Register_Three();
  3448  0E12  3180  205A  318D   	fcall	_Adf_Write_Register_Three
  3449                           
  3450                           ;adf7012.c: 345: Delay_ms(1);
  3451  0E15  3001               	movlw	1
  3452  0E16  0020               	movlb	0	; select bank0
  3453  0E17  00A0               	movwf	Delay_ms@time_to_delay
  3454  0E18  3000               	movlw	0
  3455  0E19  00A1               	movwf	Delay_ms@time_to_delay+1
  3456  0E1A  318C  2484         	fcall	_Delay_ms
  3457                           
  3458                           ;adf7012.c: 347: return 1;
  3459                           ;	Return value of _Ptt_On is never used
  3460  0E1C  0008               	return
  3461  0E1D                     __end_of_Ptt_On:	
  3462                           
  3463                           	psect	text18
  3464  04C4                     __ptext18:	
  3465 ;; *************** function _Adf_Write_Register_Two *****************
  3466 ;; Defined at:
  3467 ;;		line 188 in file "adf7012.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  3472 ;;  reg             4   47[BANK0 ] unsigned long 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;		None               void
  3475 ;; Registers used:
  3476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3483 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3484 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3485 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3486 ;;Total ram usage:       32 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    8
  3489 ;; This function calls:
  3490 ;;		_Reverse_Array
  3491 ;;		_Write_Adf7012_Reg
  3492 ;;		_memcpy
  3493 ;; This function is called by:
  3494 ;;		_Adf_Write_Config
  3495 ;;		_Ptt_On
  3496 ;;		_Ptt_Off
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _Adf_Write_Register_Two
  3502  04C4                     _Adf_Write_Register_Two:	
  3503                           
  3504                           ;adf7012.c: 189: uint32_t reg =
  3505                           ;adf7012.c: 190: (2) |
  3506                           ;adf7012.c: 191: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  3507                           ;adf7012.c: 192: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  3508                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  3509                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  3510                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  3511                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  3512                           
  3513                           ;incstack = 0
  3514                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  3515  04C4  0022               	movlb	2	; select bank2
  3516  04C5  0838               	movf	(_adf_config^(0+256)+24),w
  3517  04C6  3903               	andlw	3
  3518  04C7  0020               	movlb	0	; select bank0
  3519  04C8  00B3               	movwf	??_Adf_Write_Register_Two
  3520  04C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  3521  04CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  3522  04CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  3523  04CC  3017               	movlw	23
  3524  04CD                     u1325:	
  3525  04CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  3526  04CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  3527  04CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  3528  04D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  3529  04D1  0B89               	decfsz	9,f
  3530  04D2  2CCD               	goto	u1325
  3531  04D3  0022               	movlb	2	; select bank2
  3532  04D4  0837               	movf	(_adf_config^(0+256)+23),w
  3533  04D5  3907               	andlw	7
  3534  04D6  0020               	movlb	0	; select bank0
  3535  04D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  3536  04D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  3537  04D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  3538  04DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  3539  04DB  3014               	movlw	20
  3540  04DC                     u1335:	
  3541  04DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  3542  04DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  3543  04DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  3544  04DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  3545  04E0  0B89               	decfsz	9,f
  3546  04E1  2CDC               	goto	u1335
  3547  04E2  3013               	movlw	19
  3548  04E3  3E20               	addlw	_adf_config& (0+255)
  3549  04E4  0086               	movwf	6
  3550  04E5  3001               	movlw	1	; select bank2/3
  3551  04E6  0087               	movwf	7
  3552  04E7  30FF               	movlw	255
  3553  04E8  0501               	andwf	1,w
  3554  04E9  00BB               	movwf	??_Adf_Write_Register_Two+8
  3555  04EA  3141               	addfsr 1,1
  3556  04EB  3001               	movlw	1
  3557  04EC  0501               	andwf	1,w
  3558  04ED  00BC               	movwf	??_Adf_Write_Register_Two+9
  3559  04EE  3141               	addfsr 1,1
  3560  04EF  3000               	movlw	0
  3561  04F0  0501               	andwf	1,w
  3562  04F1  00BD               	movwf	??_Adf_Write_Register_Two+10
  3563  04F2  3141               	addfsr 1,1
  3564  04F3  3000               	movlw	0
  3565  04F4  0501               	andwf	1,w
  3566  04F5  00BE               	movwf	??_Adf_Write_Register_Two+11
  3567  04F6  300B               	movlw	11
  3568  04F7                     u1345:	
  3569  04F7  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  3570  04F8  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  3571  04F9  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  3572  04FA  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  3573  04FB  0B89               	decfsz	9,f
  3574  04FC  2CF7               	goto	u1345
  3575  04FD  0022               	movlb	2	; select bank2
  3576  04FE  0832               	movf	(_adf_config^(0+256)+18),w
  3577  04FF  393F               	andlw	63
  3578  0500  0020               	movlb	0	; select bank0
  3579  0501  00BF               	movwf	??_Adf_Write_Register_Two+12
  3580  0502  01C0               	clrf	??_Adf_Write_Register_Two+13
  3581  0503  01C1               	clrf	??_Adf_Write_Register_Two+14
  3582  0504  01C2               	clrf	??_Adf_Write_Register_Two+15
  3583  0505  3005               	movlw	5
  3584  0506                     u1355:	
  3585  0506  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  3586  0507  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  3587  0508  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  3588  0509  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  3589  050A  0B89               	decfsz	9,f
  3590  050B  2D06               	goto	u1355
  3591  050C  0022               	movlb	2	; select bank2
  3592  050D  0831               	movf	(_adf_config^(0+256)+17),w
  3593  050E  3901               	andlw	1
  3594  050F  0020               	movlb	0	; select bank0
  3595  0510  00C3               	movwf	??_Adf_Write_Register_Two+16
  3596  0511  01C4               	clrf	??_Adf_Write_Register_Two+17
  3597  0512  01C5               	clrf	??_Adf_Write_Register_Two+18
  3598  0513  01C6               	clrf	??_Adf_Write_Register_Two+19
  3599  0514  3004               	movlw	4
  3600  0515                     u1365:	
  3601  0515  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  3602  0516  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  3603  0517  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  3604  0518  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  3605  0519  0B89               	decfsz	9,f
  3606  051A  2D15               	goto	u1365
  3607  051B  0022               	movlb	2	; select bank2
  3608  051C  0830               	movf	(_adf_config^(0+256)+16),w
  3609  051D  3903               	andlw	3
  3610  051E  0020               	movlb	0	; select bank0
  3611  051F  00C7               	movwf	??_Adf_Write_Register_Two+20
  3612  0520  01C8               	clrf	??_Adf_Write_Register_Two+21
  3613  0521  01C9               	clrf	??_Adf_Write_Register_Two+22
  3614  0522  01CA               	clrf	??_Adf_Write_Register_Two+23
  3615  0523  3002               	movlw	2
  3616  0524                     u1375:	
  3617  0524  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  3618  0525  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  3619  0526  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  3620  0527  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  3621  0528  0B89               	decfsz	9,f
  3622  0529  2D24               	goto	u1375
  3623  052A  0847               	movf	??_Adf_Write_Register_Two+20,w
  3624  052B  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  3625  052C  0848               	movf	??_Adf_Write_Register_Two+21,w
  3626  052D  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  3627  052E  0849               	movf	??_Adf_Write_Register_Two+22,w
  3628  052F  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  3629  0530  084A               	movf	??_Adf_Write_Register_Two+23,w
  3630  0531  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  3631  0532  0843               	movf	??_Adf_Write_Register_Two+16,w
  3632  0533  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  3633  0534  0844               	movf	??_Adf_Write_Register_Two+17,w
  3634  0535  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  3635  0536  0845               	movf	??_Adf_Write_Register_Two+18,w
  3636  0537  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  3637  0538  0846               	movf	??_Adf_Write_Register_Two+19,w
  3638  0539  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  3639  053A  083F               	movf	??_Adf_Write_Register_Two+12,w
  3640  053B  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  3641  053C  0840               	movf	??_Adf_Write_Register_Two+13,w
  3642  053D  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  3643  053E  0841               	movf	??_Adf_Write_Register_Two+14,w
  3644  053F  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  3645  0540  0842               	movf	??_Adf_Write_Register_Two+15,w
  3646  0541  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  3647  0542  083B               	movf	??_Adf_Write_Register_Two+8,w
  3648  0543  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  3649  0544  083C               	movf	??_Adf_Write_Register_Two+9,w
  3650  0545  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  3651  0546  083D               	movf	??_Adf_Write_Register_Two+10,w
  3652  0547  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  3653  0548  083E               	movf	??_Adf_Write_Register_Two+11,w
  3654  0549  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  3655  054A  0837               	movf	??_Adf_Write_Register_Two+4,w
  3656  054B  04B3               	iorwf	??_Adf_Write_Register_Two,f
  3657  054C  0838               	movf	??_Adf_Write_Register_Two+5,w
  3658  054D  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  3659  054E  0839               	movf	??_Adf_Write_Register_Two+6,w
  3660  054F  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  3661  0550  083A               	movf	??_Adf_Write_Register_Two+7,w
  3662  0551  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  3663  0552  3002               	movlw	2
  3664  0553  0433               	iorwf	??_Adf_Write_Register_Two,w
  3665  0554  00CF               	movwf	Adf_Write_Register_Two@reg
  3666  0555  3000               	movlw	0
  3667  0556  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  3668  0557  00D0               	movwf	Adf_Write_Register_Two@reg+1
  3669  0558  3000               	movlw	0
  3670  0559  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  3671  055A  00D1               	movwf	Adf_Write_Register_Two@reg+2
  3672  055B  3000               	movlw	0
  3673  055C  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  3674  055D  00D2               	movwf	Adf_Write_Register_Two@reg+3
  3675                           
  3676                           ;adf7012.c: 199: uint8_t reg_ptr[4];
  3677                           ;adf7012.c: 200: memcpy(reg_ptr, &reg, 4);
  3678  055E  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  3679  055F  00B3               	movwf	??_Adf_Write_Register_Two
  3680  0560  0833               	movf	??_Adf_Write_Register_Two,w
  3681  0561  00A0               	movwf	memcpy@s1
  3682  0562  3004               	movlw	4
  3683  0563  00A1               	movwf	memcpy@n
  3684  0564  3000               	movlw	0
  3685  0565  00A2               	movwf	memcpy@n+1
  3686  0566  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3687  0567  318C  24CA  3184   	fcall	_memcpy
  3688                           
  3689                           ;adf7012.c: 201: Reverse_Array(reg_ptr,4);
  3690  056A  3004               	movlw	4
  3691  056B  0020               	movlb	0	; select bank0
  3692  056C  00B3               	movwf	??_Adf_Write_Register_Two
  3693  056D  0833               	movf	??_Adf_Write_Register_Two,w
  3694  056E  00A7               	movwf	Reverse_Array@length
  3695  056F  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3696  0570  318E  261D  3184   	fcall	_Reverse_Array
  3697                           
  3698                           ;adf7012.c: 202: Write_Adf7012_Reg(reg_ptr, 4);
  3699  0573  3004               	movlw	4
  3700  0574  0020               	movlb	0	; select bank0
  3701  0575  00B3               	movwf	??_Adf_Write_Register_Two
  3702  0576  0833               	movf	??_Adf_Write_Register_Two,w
  3703  0577  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  3704  0578  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3705  0579  318D  25A8         	fcall	_Write_Adf7012_Reg
  3706  057B  0008               	return
  3707  057C                     __end_of_Adf_Write_Register_Two:	
  3708                           
  3709                           	psect	text19
  3710  0C20                     __ptext19:	
  3711 ;; *************** function _Gpio_Config *****************
  3712 ;; Defined at:
  3713 ;;		line 26 in file "utility.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      unsigned char 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3729 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3730 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3731 ;;Total ram usage:        1 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    4
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_main
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           
  3742                           ;psect for function _Gpio_Config
  3743  0C20                     _Gpio_Config:	
  3744                           
  3745                           ;utility.c: 29: TRISA |= 0b00000010;
  3746                           
  3747                           ;incstack = 0
  3748                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  3749  0C20  0021               	movlb	1	; select bank1
  3750  0C21  148C               	bsf	12,1	;volatile
  3751                           
  3752                           ;utility.c: 30: TRISA &= 0b11001011;
  3753  0C22  30CB               	movlw	203
  3754  0C23  0020               	movlb	0	; select bank0
  3755  0C24  00A0               	movwf	??_Gpio_Config
  3756  0C25  0820               	movf	??_Gpio_Config,w
  3757  0C26  0021               	movlb	1	; select bank1
  3758  0C27  058C               	andwf	12,f	;volatile
  3759                           
  3760                           ;utility.c: 31: TRISC |= 0b00110011;
  3761  0C28  3033               	movlw	51
  3762  0C29  0020               	movlb	0	; select bank0
  3763  0C2A  00A0               	movwf	??_Gpio_Config
  3764  0C2B  0820               	movf	??_Gpio_Config,w
  3765  0C2C  0021               	movlb	1	; select bank1
  3766  0C2D  048E               	iorwf	14,f	;volatile
  3767                           
  3768                           ;utility.c: 32: TRISC &= 0b11110011;
  3769  0C2E  30F3               	movlw	243
  3770  0C2F  0020               	movlb	0	; select bank0
  3771  0C30  00A0               	movwf	??_Gpio_Config
  3772  0C31  0820               	movf	??_Gpio_Config,w
  3773  0C32  0021               	movlb	1	; select bank1
  3774  0C33  058E               	andwf	14,f	;volatile
  3775  0C34  0008               	return
  3776  0C35                     __end_of_Gpio_Config:	
  3777                           ;utility.c: 34: return 1;
  3778                           ;	Return value of _Gpio_Config is never used
  3779                           
  3780                           
  3781                           	psect	text20
  3782  0C67                     __ptext20:	
  3783 ;; *************** function _Ax25_Send_String *****************
  3784 ;; Defined at:
  3785 ;;		line 85 in file "ax25.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  3788 ;;		 -> STR_1(6), 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  i               2   15[BANK0 ] int 
  3791 ;; Return value:  Size  Location     Type
  3792 ;;		None               void
  3793 ;; Registers used:
  3794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3795 ;; Tracked objects:
  3796 ;;		On entry : 0/0
  3797 ;;		On exit  : 0/0
  3798 ;;		Unchanged: 0/0
  3799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3801 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3803 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;Total ram usage:        4 bytes
  3805 ;; Hardware stack levels used:    1
  3806 ;; Hardware stack levels required when called:    7
  3807 ;; This function calls:
  3808 ;;		_Ax25_Send_Byte
  3809 ;; This function is called by:
  3810 ;;		_main
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           
  3815                           ;psect for function _Ax25_Send_String
  3816  0C67                     _Ax25_Send_String:	
  3817                           
  3818                           ;ax25.c: 87: int i;
  3819                           ;ax25.c: 88: for (i = 0; string[i]; i++) {
  3820                           
  3821                           ;incstack = 0
  3822                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3823  0C67  0020               	movlb	0	; select bank0
  3824  0C68  01AF               	clrf	Ax25_Send_String@i
  3825  0C69  01B0               	clrf	Ax25_Send_String@i+1
  3826  0C6A                     l2517:	
  3827  0C6A  082D               	movf	Ax25_Send_String@string,w
  3828  0C6B  072F               	addwf	Ax25_Send_String@i,w
  3829  0C6C  0084               	movwf	4
  3830  0C6D  082E               	movf	Ax25_Send_String@string+1,w
  3831  0C6E  3D30               	addwfc	Ax25_Send_String@i+1,w
  3832  0C6F  0085               	movwf	5
  3833  0C70  0800               	movf	0,w	;code access
  3834  0C71  3800               	iorlw	0
  3835  0C72  1903               	btfsc	3,2
  3836  0C73  0008               	return
  3837                           
  3838                           ;ax25.c: 89: Ax25_Send_Byte(string[i]);
  3839  0C74  082D               	movf	Ax25_Send_String@string,w
  3840  0C75  072F               	addwf	Ax25_Send_String@i,w
  3841  0C76  0084               	movwf	4
  3842  0C77  082E               	movf	Ax25_Send_String@string+1,w
  3843  0C78  3D30               	addwfc	Ax25_Send_String@i+1,w
  3844  0C79  0085               	movwf	5
  3845  0C7A  0800               	movf	0,w	;code access
  3846  0C7B  318B  2370  318C   	fcall	_Ax25_Send_Byte
  3847  0C7E  3001               	movlw	1
  3848  0C7F  0020               	movlb	0	; select bank0
  3849  0C80  07AF               	addwf	Ax25_Send_String@i,f
  3850  0C81  3000               	movlw	0
  3851  0C82  3DB0               	addwfc	Ax25_Send_String@i+1,f
  3852  0C83  2C6A               	goto	l2517
  3853  0C84                     __end_of_Ax25_Send_String:	
  3854                           
  3855                           	psect	text21
  3856  0B70                     __ptext21:	
  3857 ;; *************** function _Ax25_Send_Byte *****************
  3858 ;; Defined at:
  3859 ;;		line 52 in file "ax25.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  byte            1    wreg     unsigned char 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  byte            1   12[BANK0 ] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;		None               void
  3866 ;; Registers used:
  3867 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;Total ram usage:        1 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    6
  3880 ;; This function calls:
  3881 ;;		_Send_Byte
  3882 ;; This function is called by:
  3883 ;;		_Ax25_Send_String
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function _Ax25_Send_Byte
  3889  0B70                     _Ax25_Send_Byte:	
  3890                           
  3891                           ;incstack = 0
  3892                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3893                           ;Ax25_Send_Byte@byte stored from wreg
  3894  0B70  0020               	movlb	0	; select bank0
  3895  0B71  00AC               	movwf	Ax25_Send_Byte@byte
  3896                           
  3897                           ;ax25.c: 54: Send_Byte(byte);
  3898  0B72  082C               	movf	Ax25_Send_Byte@byte,w
  3899  0B73  3185  257C         	fcall	_Send_Byte
  3900  0B75  0008               	return
  3901  0B76                     __end_of_Ax25_Send_Byte:	
  3902                           
  3903                           	psect	text22
  3904  01C6                     __ptext22:	
  3905 ;; *************** function _Ax25_Send_Header *****************
  3906 ;; Defined at:
  3907 ;;		line 93 in file "ax25.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  addresses       1    wreg     PTR struct .
  3910 ;;		 -> main@beacon_address(16), 
  3911 ;;  num_addresse    2   12[BANK0 ] int 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  addresses       1   19[BANK0 ] PTR struct .
  3914 ;;		 -> main@beacon_address(16), 
  3915 ;;  i               2   20[BANK0 ] int 
  3916 ;;  j               2   17[BANK0 ] int 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;		None               void
  3919 ;; Registers used:
  3920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3926 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3928 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3929 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3930 ;;Total ram usage:       10 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    6
  3933 ;; This function calls:
  3934 ;;		_Ax25_Send_Flag
  3935 ;;		_Ax25_Send_Sync
  3936 ;;		_Send_Byte
  3937 ;; This function is called by:
  3938 ;;		_main
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           
  3943                           ;psect for function _Ax25_Send_Header
  3944  01C6                     _Ax25_Send_Header:	
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3948                           ;Ax25_Send_Header@addresses stored from wreg
  3949  01C6  0020               	movlb	0	; select bank0
  3950  01C7  00B3               	movwf	Ax25_Send_Header@addresses
  3951                           
  3952                           ;ax25.c: 96: int i, j;
  3953                           ;ax25.c: 97: modem_packet_size = 0;
  3954  01C8  3000               	movlw	0
  3955  01C9  00FD               	movwf	_modem_packet_size+3
  3956  01CA  3000               	movlw	0
  3957  01CB  00FC               	movwf	_modem_packet_size+2
  3958  01CC  3000               	movlw	0
  3959  01CD  00FB               	movwf	_modem_packet_size+1
  3960  01CE  3000               	movlw	0
  3961  01CF  00FA               	movwf	_modem_packet_size
  3962                           
  3963                           ;ax25.c: 98: ones_in_a_row = 0;
  3964  01D0  0021               	movlb	1	; select bank1
  3965  01D1  01BB               	clrf	_ones_in_a_row^(0+128)
  3966  01D2  01BC               	clrf	(_ones_in_a_row+1)^(0+128)
  3967                           
  3968                           ;ax25.c: 99: crc = 0xffff;
  3969  01D3  30FF               	movlw	255
  3970  01D4  00B9               	movwf	_crc^(0+128)
  3971  01D5  30FF               	movlw	255
  3972  01D6  00BA               	movwf	(_crc^(0+128)+1)
  3973                           
  3974                           ;ax25.c: 102: for (i = 0; i < 10; i++)
  3975  01D7  0020               	movlb	0	; select bank0
  3976  01D8  01B4               	clrf	Ax25_Send_Header@i
  3977  01D9  01B5               	clrf	Ax25_Send_Header@i+1
  3978  01DA  0835               	movf	Ax25_Send_Header@i+1,w
  3979  01DB  3A80               	xorlw	128
  3980  01DC  00AE               	movwf	??_Ax25_Send_Header
  3981  01DD  3080               	movlw	128
  3982  01DE  022E               	subwf	??_Ax25_Send_Header,w
  3983  01DF  1D03               	skipz
  3984  01E0  29E3               	goto	u2025
  3985  01E1  300A               	movlw	10
  3986  01E2  0234               	subwf	Ax25_Send_Header@i,w
  3987  01E3                     u2025:	
  3988  01E3  1803               	btfsc	3,0
  3989  01E4  29F8               	goto	l2473
  3990  01E5                     l2467:	
  3991                           
  3992                           ;ax25.c: 103: {
  3993                           ;ax25.c: 104: Ax25_Send_Sync();
  3994  01E5  318F  2787  3181   	fcall	_Ax25_Send_Sync
  3995  01E8  3001               	movlw	1
  3996  01E9  0020               	movlb	0	; select bank0
  3997  01EA  07B4               	addwf	Ax25_Send_Header@i,f
  3998  01EB  3000               	movlw	0
  3999  01EC  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  4000  01ED  0835               	movf	Ax25_Send_Header@i+1,w
  4001  01EE  3A80               	xorlw	128
  4002  01EF  00AE               	movwf	??_Ax25_Send_Header
  4003  01F0  3080               	movlw	128
  4004  01F1  022E               	subwf	??_Ax25_Send_Header,w
  4005  01F2  1D03               	skipz
  4006  01F3  29F6               	goto	u2035
  4007  01F4  300A               	movlw	10
  4008  01F5  0234               	subwf	Ax25_Send_Header@i,w
  4009  01F6                     u2035:	
  4010  01F6  1C03               	skipc
  4011  01F7  29E5               	goto	l2467
  4012  01F8                     l2473:	
  4013                           
  4014                           ;ax25.c: 105: }
  4015                           ;ax25.c: 108: for (i = 0; i < 3; i++)
  4016  01F8  0020               	movlb	0	; select bank0
  4017  01F9  01B4               	clrf	Ax25_Send_Header@i
  4018  01FA  01B5               	clrf	Ax25_Send_Header@i+1
  4019  01FB  0835               	movf	Ax25_Send_Header@i+1,w
  4020  01FC  3A80               	xorlw	128
  4021  01FD  00AE               	movwf	??_Ax25_Send_Header
  4022  01FE  3080               	movlw	128
  4023  01FF  022E               	subwf	??_Ax25_Send_Header,w
  4024  0200  1D03               	skipz
  4025  0201  2A04               	goto	u2045
  4026  0202  3003               	movlw	3
  4027  0203  0234               	subwf	Ax25_Send_Header@i,w
  4028  0204                     u2045:	
  4029  0204  1803               	btfsc	3,0
  4030  0205  2A19               	goto	l2485
  4031  0206                     l2479:	
  4032                           
  4033                           ;ax25.c: 109: {
  4034                           ;ax25.c: 110: Ax25_Send_Flag();
  4035  0206  3183  2365  3181   	fcall	_Ax25_Send_Flag
  4036  0209  3001               	movlw	1
  4037  020A  0020               	movlb	0	; select bank0
  4038  020B  07B4               	addwf	Ax25_Send_Header@i,f
  4039  020C  3000               	movlw	0
  4040  020D  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  4041  020E  0835               	movf	Ax25_Send_Header@i+1,w
  4042  020F  3A80               	xorlw	128
  4043  0210  00AE               	movwf	??_Ax25_Send_Header
  4044  0211  3080               	movlw	128
  4045  0212  022E               	subwf	??_Ax25_Send_Header,w
  4046  0213  1D03               	skipz
  4047  0214  2A17               	goto	u2055
  4048  0215  3003               	movlw	3
  4049  0216  0234               	subwf	Ax25_Send_Header@i,w
  4050  0217                     u2055:	
  4051  0217  1C03               	skipc
  4052  0218  2A06               	goto	l2479
  4053  0219                     l2485:	
  4054                           
  4055                           ;ax25.c: 111: }
  4056                           ;ax25.c: 113: for (i = 0; i < num_addresses; i++) {
  4057  0219  0020               	movlb	0	; select bank0
  4058  021A  01B4               	clrf	Ax25_Send_Header@i
  4059  021B  01B5               	clrf	Ax25_Send_Header@i+1
  4060  021C                     l2507:	
  4061  021C  0835               	movf	Ax25_Send_Header@i+1,w
  4062  021D  3A80               	xorlw	128
  4063  021E  00AE               	movwf	??_Ax25_Send_Header
  4064  021F  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  4065  0220  3A80               	xorlw	128
  4066  0221  022E               	subwf	??_Ax25_Send_Header,w
  4067  0222  1D03               	skipz
  4068  0223  2A26               	goto	u2125
  4069  0224  082C               	movf	Ax25_Send_Header@num_addresses,w
  4070  0225  0234               	subwf	Ax25_Send_Header@i,w
  4071  0226                     u2125:	
  4072  0226  1803               	btfsc	3,0
  4073  0227  2A96               	goto	l2509
  4074                           
  4075                           ;ax25.c: 115: for (j = 0; j < 6; j++)
  4076  0228  0020               	movlb	0	; select bank0
  4077  0229  01B1               	clrf	Ax25_Send_Header@j
  4078  022A  01B2               	clrf	Ax25_Send_Header@j+1
  4079  022B  0832               	movf	Ax25_Send_Header@j+1,w
  4080  022C  3A80               	xorlw	128
  4081  022D  00AE               	movwf	??_Ax25_Send_Header
  4082  022E  3080               	movlw	128
  4083  022F  022E               	subwf	??_Ax25_Send_Header,w
  4084  0230  1D03               	skipz
  4085  0231  2A34               	goto	u2065
  4086  0232  3006               	movlw	6
  4087  0233  0231               	subwf	Ax25_Send_Header@j,w
  4088  0234                     u2065:	
  4089  0234  1803               	btfsc	3,0
  4090  0235  2A5B               	goto	l2499
  4091  0236                     l2493:	
  4092                           
  4093                           ;ax25.c: 116: Send_Byte(addresses[i].callsign[j] << 1);
  4094  0236  0020               	movlb	0	; select bank0
  4095  0237  0834               	movf	Ax25_Send_Header@i,w
  4096  0238  00AE               	movwf	??_Ax25_Send_Header
  4097  0239  3002               	movlw	2
  4098  023A                     u2075:	
  4099  023A  35AE               	lslf	??_Ax25_Send_Header,f
  4100  023B  3EFF               	addlw	-1
  4101  023C  1D03               	skipz
  4102  023D  2A3A               	goto	u2075
  4103  023E  352E               	lslf	??_Ax25_Send_Header,w
  4104  023F  0733               	addwf	Ax25_Send_Header@addresses,w
  4105  0240  00AF               	movwf	??_Ax25_Send_Header+1
  4106  0241  0831               	movf	Ax25_Send_Header@j,w
  4107  0242  072F               	addwf	??_Ax25_Send_Header+1,w
  4108  0243  00B0               	movwf	??_Ax25_Send_Header+2
  4109  0244  0830               	movf	??_Ax25_Send_Header+2,w
  4110  0245  0086               	movwf	6
  4111  0246  0187               	clrf	7
  4112  0247  3501               	lslf	1,w
  4113  0248  3185  257C  3181   	fcall	_Send_Byte
  4114  024B  3001               	movlw	1
  4115  024C  0020               	movlb	0	; select bank0
  4116  024D  07B1               	addwf	Ax25_Send_Header@j,f
  4117  024E  3000               	movlw	0
  4118  024F  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  4119  0250  0832               	movf	Ax25_Send_Header@j+1,w
  4120  0251  3A80               	xorlw	128
  4121  0252  00AE               	movwf	??_Ax25_Send_Header
  4122  0253  3080               	movlw	128
  4123  0254  022E               	subwf	??_Ax25_Send_Header,w
  4124  0255  1D03               	skipz
  4125  0256  2A59               	goto	u2085
  4126  0257  3006               	movlw	6
  4127  0258  0231               	subwf	Ax25_Send_Header@j,w
  4128  0259                     u2085:	
  4129  0259  1C03               	skipc
  4130  025A  2A36               	goto	l2493
  4131  025B                     l2499:	
  4132                           
  4133                           ;ax25.c: 119: if (i == num_addresses - 1){
  4134  025B  0020               	movlb	0	; select bank0
  4135  025C  082C               	movf	Ax25_Send_Header@num_addresses,w
  4136  025D  3EFF               	addlw	255
  4137  025E  00AE               	movwf	??_Ax25_Send_Header
  4138  025F  30FF               	movlw	255
  4139  0260  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  4140  0261  00AF               	movwf	??_Ax25_Send_Header+1
  4141  0262  0835               	movf	Ax25_Send_Header@i+1,w
  4142  0263  062F               	xorwf	??_Ax25_Send_Header+1,w
  4143  0264  1D03               	skipz
  4144  0265  2A68               	goto	u2095
  4145  0266  0834               	movf	Ax25_Send_Header@i,w
  4146  0267  062E               	xorwf	??_Ax25_Send_Header,w
  4147  0268                     u2095:	
  4148  0268  1D03               	skipz
  4149  0269  2A7C               	goto	l2503
  4150                           
  4151                           ;ax25.c: 120: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  4152  026A  0834               	movf	Ax25_Send_Header@i,w
  4153  026B  00AE               	movwf	??_Ax25_Send_Header
  4154  026C  3002               	movlw	2
  4155  026D                     u2105:	
  4156  026D  35AE               	lslf	??_Ax25_Send_Header,f
  4157  026E  3EFF               	addlw	-1
  4158  026F  1D03               	skipz
  4159  0270  2A6D               	goto	u2105
  4160  0271  352E               	lslf	??_Ax25_Send_Header,w
  4161  0272  0733               	addwf	Ax25_Send_Header@addresses,w
  4162  0273  00AF               	movwf	??_Ax25_Send_Header+1
  4163  0274  082F               	movf	??_Ax25_Send_Header+1,w
  4164  0275  3E07               	addlw	7
  4165  0276  0086               	movwf	6
  4166  0277  0187               	clrf	7
  4167  0278  3501               	lslf	1,w
  4168  0279  3E60               	addlw	96
  4169  027A  3801               	iorlw	1
  4170  027B  2A8D               	goto	L1
  4171  027C                     l2503:	
  4172                           ;ax25.c: 122: }
  4173                           
  4174                           
  4175                           ;ax25.c: 123: else
  4176                           ;ax25.c: 124: Send_Byte(('0' + addresses[i].ssid) << 1);
  4177  027C  0020               	movlb	0	; select bank0
  4178  027D  0834               	movf	Ax25_Send_Header@i,w
  4179  027E  00AE               	movwf	??_Ax25_Send_Header
  4180  027F  3002               	movlw	2
  4181  0280                     u2115:	
  4182  0280  35AE               	lslf	??_Ax25_Send_Header,f
  4183  0281  3EFF               	addlw	-1
  4184  0282  1D03               	skipz
  4185  0283  2A80               	goto	u2115
  4186  0284  352E               	lslf	??_Ax25_Send_Header,w
  4187  0285  0733               	addwf	Ax25_Send_Header@addresses,w
  4188  0286  00AF               	movwf	??_Ax25_Send_Header+1
  4189  0287  082F               	movf	??_Ax25_Send_Header+1,w
  4190  0288  3E07               	addlw	7
  4191  0289  0086               	movwf	6
  4192  028A  0187               	clrf	7
  4193  028B  3501               	lslf	1,w
  4194  028C  3E60               	addlw	96
  4195  028D                     L1:	
  4196  028D  3185  257C  3181   	fcall	_Send_Byte
  4197  0290  3001               	movlw	1
  4198  0291  0020               	movlb	0	; select bank0
  4199  0292  07B4               	addwf	Ax25_Send_Header@i,f
  4200  0293  3000               	movlw	0
  4201  0294  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  4202  0295  2A1C               	goto	l2507
  4203  0296                     l2509:	
  4204                           
  4205                           ;ax25.c: 125: }
  4206                           ;ax25.c: 128: Send_Byte(0x03);
  4207  0296  3003               	movlw	3
  4208  0297  3185  257C  3181   	fcall	_Send_Byte
  4209                           
  4210                           ;ax25.c: 131: Send_Byte(0xf0);
  4211  029A  30F0               	movlw	240
  4212  029B  3185  257C         	fcall	_Send_Byte
  4213  029D  0008               	return
  4214  029E                     __end_of_Ax25_Send_Header:	
  4215                           
  4216                           	psect	text23
  4217  0F87                     __ptext23:	
  4218 ;; *************** function _Ax25_Send_Sync *****************
  4219 ;; Defined at:
  4220 ;;		line 57 in file "ax25.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;		None
  4223 ;; Auto vars:     Size  Location     Type
  4224 ;;  i               2    7[BANK0 ] int 
  4225 ;;  byte            1    6[BANK0 ] unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;		None               void
  4228 ;; Registers used:
  4229 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;Total ram usage:        9 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:    4
  4242 ;; This function calls:
  4243 ;;		Nothing
  4244 ;; This function is called by:
  4245 ;;		_Ax25_Send_Header
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249                           
  4250                           ;psect for function _Ax25_Send_Sync
  4251  0F87                     _Ax25_Send_Sync:	
  4252                           
  4253                           ;ax25.c: 59: uint8_t byte = 0x00;
  4254                           
  4255                           ;incstack = 0
  4256                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  4257  0F87  0020               	movlb	0	; select bank0
  4258  0F88  01A6               	clrf	Ax25_Send_Sync@byte
  4259                           
  4260                           ;ax25.c: 60: int i;
  4261                           ;ax25.c: 61: for (i = 0; i < 8; i++, modem_packet_size++) {
  4262  0F89  01A7               	clrf	Ax25_Send_Sync@i
  4263  0F8A  01A8               	clrf	Ax25_Send_Sync@i+1
  4264  0F8B                     L2:	
  4265  0F8B  0828               	movf	Ax25_Send_Sync@i+1,w
  4266  0F8C  3A80               	xorlw	128
  4267  0F8D  00A0               	movwf	??_Ax25_Send_Sync
  4268  0F8E  3080               	movlw	128
  4269  0F8F  0220               	subwf	??_Ax25_Send_Sync,w
  4270  0F90  3008               	movlw	8
  4271  0F91  1903               	btfsc	3,2
  4272  0F92  0227               	subwf	Ax25_Send_Sync@i,w
  4273  0F93  1803               	btfsc	3,0
  4274  0F94  0008               	return
  4275                           
  4276                           ;ax25.c: 62: if (modem_packet_size >= 64 * 8)
  4277  0F95  3000               	movlw	0
  4278  0F96  027D               	subwf	_modem_packet_size+3,w
  4279  0F97  1D03               	skipz
  4280  0F98  2FA3               	goto	u1775
  4281  0F99  3000               	movlw	0
  4282  0F9A  027C               	subwf	_modem_packet_size+2,w
  4283  0F9B  1D03               	skipz
  4284  0F9C  2FA3               	goto	u1775
  4285  0F9D  3002               	movlw	2
  4286  0F9E  027B               	subwf	_modem_packet_size+1,w
  4287  0F9F  1D03               	skipz
  4288  0FA0  2FA3               	goto	u1775
  4289  0FA1  3000               	movlw	0
  4290  0FA2  027A               	subwf	_modem_packet_size,w
  4291  0FA3                     u1775:	
  4292  0FA3  1803               	btfsc	3,0
  4293  0FA4  0008               	return
  4294                           
  4295                           ;ax25.c: 64: if ((byte >> i) & 1)
  4296                           
  4297                           ;ax25.c: 63: return;
  4298  0FA5  0020               	movlb	0	; select bank0
  4299  0FA6  0826               	movf	Ax25_Send_Sync@byte,w
  4300  0FA7  00A0               	movwf	??_Ax25_Send_Sync
  4301  0FA8  0A27               	incf	Ax25_Send_Sync@i,w
  4302  0FA9  2FAB               	goto	u1784
  4303  0FAA                     u1785:	
  4304  0FAA  36A0               	lsrf	??_Ax25_Send_Sync,f
  4305  0FAB                     u1784:	
  4306  0FAB  0B89               	decfsz	9,f
  4307  0FAC  2FAA               	goto	u1785
  4308  0FAD  1C20               	btfss	??_Ax25_Send_Sync,0
  4309  0FAE  2FD1               	goto	l2233
  4310                           
  4311                           ;ax25.c: 65: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4312  0FAF  3001               	movlw	1
  4313  0FB0  00A0               	movwf	??_Ax25_Send_Sync
  4314  0FB1  087A               	movf	_modem_packet_size,w
  4315  0FB2  3907               	andlw	7
  4316  0FB3  0A89               	incf	9,f
  4317  0FB4  2FB6               	goto	u1804
  4318  0FB5                     u1805:	
  4319  0FB5  35A0               	lslf	??_Ax25_Send_Sync,f
  4320  0FB6                     u1804:	
  4321  0FB6  0B89               	decfsz	9,f
  4322  0FB7  2FB5               	goto	u1805
  4323  0FB8  0820               	movf	??_Ax25_Send_Sync,w
  4324  0FB9  00A1               	movwf	??_Ax25_Send_Sync+1
  4325  0FBA  087A               	movf	_modem_packet_size,w
  4326  0FBB  00A2               	movwf	??_Ax25_Send_Sync+2
  4327  0FBC  087B               	movf	_modem_packet_size+1,w
  4328  0FBD  00A3               	movwf	??_Ax25_Send_Sync+3
  4329  0FBE  087C               	movf	_modem_packet_size+2,w
  4330  0FBF  00A4               	movwf	??_Ax25_Send_Sync+4
  4331  0FC0  087D               	movf	_modem_packet_size+3,w
  4332  0FC1  00A5               	movwf	??_Ax25_Send_Sync+5
  4333  0FC2  3003               	movlw	3
  4334  0FC3                     u1815:	
  4335  0FC3  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  4336  0FC4  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  4337  0FC5  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  4338  0FC6  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  4339  0FC7  0B89               	decfsz	9,f
  4340  0FC8  2FC3               	goto	u1815
  4341  0FC9  0822               	movf	??_Ax25_Send_Sync+2,w
  4342  0FCA  3EA0               	addlw	_modem_packet& (0+255)
  4343  0FCB  0086               	movwf	6
  4344  0FCC  3001               	movlw	1	; select bank3/4
  4345  0FCD  0087               	movwf	7
  4346  0FCE  0821               	movf	??_Ax25_Send_Sync+1,w
  4347  0FCF  0481               	iorwf	1,f
  4348  0FD0  2FF3               	goto	l2235
  4349  0FD1                     l2233:	
  4350                           
  4351                           ;ax25.c: 66: else
  4352                           ;ax25.c: 67: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4353  0FD1  3001               	movlw	1
  4354  0FD2  00A0               	movwf	??_Ax25_Send_Sync
  4355  0FD3  087A               	movf	_modem_packet_size,w
  4356  0FD4  3907               	andlw	7
  4357  0FD5  0A89               	incf	9,f
  4358  0FD6  2FD8               	goto	u1824
  4359  0FD7                     u1825:	
  4360  0FD7  35A0               	lslf	??_Ax25_Send_Sync,f
  4361  0FD8                     u1824:	
  4362  0FD8  0B89               	decfsz	9,f
  4363  0FD9  2FD7               	goto	u1825
  4364  0FDA  0820               	movf	??_Ax25_Send_Sync,w
  4365  0FDB  3AFF               	xorlw	255
  4366  0FDC  00A1               	movwf	??_Ax25_Send_Sync+1
  4367  0FDD  087A               	movf	_modem_packet_size,w
  4368  0FDE  00A2               	movwf	??_Ax25_Send_Sync+2
  4369  0FDF  087B               	movf	_modem_packet_size+1,w
  4370  0FE0  00A3               	movwf	??_Ax25_Send_Sync+3
  4371  0FE1  087C               	movf	_modem_packet_size+2,w
  4372  0FE2  00A4               	movwf	??_Ax25_Send_Sync+4
  4373  0FE3  087D               	movf	_modem_packet_size+3,w
  4374  0FE4  00A5               	movwf	??_Ax25_Send_Sync+5
  4375  0FE5  3003               	movlw	3
  4376  0FE6                     u1835:	
  4377  0FE6  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  4378  0FE7  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  4379  0FE8  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  4380  0FE9  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  4381  0FEA  0B89               	decfsz	9,f
  4382  0FEB  2FE6               	goto	u1835
  4383  0FEC  0822               	movf	??_Ax25_Send_Sync+2,w
  4384  0FED  3EA0               	addlw	_modem_packet& (0+255)
  4385  0FEE  0086               	movwf	6
  4386  0FEF  3001               	movlw	1	; select bank3/4
  4387  0FF0  0087               	movwf	7
  4388  0FF1  0821               	movf	??_Ax25_Send_Sync+1,w
  4389  0FF2  0581               	andwf	1,f
  4390  0FF3                     l2235:	
  4391  0FF3  3001               	movlw	1
  4392  0FF4  07A7               	addwf	Ax25_Send_Sync@i,f
  4393  0FF5  3000               	movlw	0
  4394  0FF6  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  4395  0FF7  3001               	movlw	1
  4396  0FF8  07FA               	addwf	_modem_packet_size,f
  4397  0FF9  3000               	movlw	0
  4398  0FFA  3DFB               	addwfc	_modem_packet_size+1,f
  4399  0FFB  3000               	movlw	0
  4400  0FFC  3DFC               	addwfc	_modem_packet_size+2,f
  4401  0FFD  3000               	movlw	0
  4402  0FFE  3DFD               	addwfc	_modem_packet_size+3,f
  4403  0FFF  2F8B               	goto	L2
  4404  1000                     __end_of_Ax25_Send_Sync:	
  4405                           
  4406                           	psect	text24
  4407  0C4C                     __ptext24:	
  4408 ;; *************** function _Ax25_Send_Footer *****************
  4409 ;; Defined at:
  4410 ;;		line 135 in file "ax25.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;		None
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  final_crc       2   12[BANK0 ] unsigned int 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;		None               void
  4417 ;; Registers used:
  4418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4427 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4428 ;;Total ram usage:        2 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    6
  4431 ;; This function calls:
  4432 ;;		_Ax25_Send_Flag
  4433 ;;		_Send_Byte
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           
  4440                           ;psect for function _Ax25_Send_Footer
  4441  0C4C                     _Ax25_Send_Footer:	
  4442                           
  4443                           ;ax25.c: 138: uint16_t final_crc = crc;
  4444                           
  4445                           ;incstack = 0
  4446                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4447  0C4C  0021               	movlb	1	; select bank1
  4448  0C4D  083A               	movf	(_crc+1)^(0+128),w
  4449  0C4E  0020               	movlb	0	; select bank0
  4450  0C4F  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  4451  0C50  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  4452  0C51  0021               	movlb	1	; select bank1
  4453  0C52  0839               	movf	_crc^(0+128),w
  4454  0C53  0020               	movlb	0	; select bank0
  4455  0C54  01AC               	clrf	Ax25_Send_Footer@final_crc
  4456  0C55  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  4457                           
  4458                           ;ax25.c: 141: Send_Byte(~(final_crc & 0xff));
  4459  0C56  092C               	comf	Ax25_Send_Footer@final_crc,w
  4460  0C57  3185  257C  318C   	fcall	_Send_Byte
  4461                           
  4462                           ;ax25.c: 142: final_crc >>= 8;
  4463  0C5A  3008               	movlw	8
  4464  0C5B  0020               	movlb	0	; select bank0
  4465  0C5C                     u2145:	
  4466  0C5C  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  4467  0C5D  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  4468  0C5E  0B89               	decfsz	9,f
  4469  0C5F  2C5C               	goto	u2145
  4470                           
  4471                           ;ax25.c: 143: Send_Byte(~(final_crc & 0xff));
  4472  0C60  092C               	comf	Ax25_Send_Footer@final_crc,w
  4473  0C61  3185  257C  318C   	fcall	_Send_Byte
  4474                           
  4475                           ;ax25.c: 146: Ax25_Send_Flag();
  4476  0C64  3183  2365         	fcall	_Ax25_Send_Flag
  4477  0C66  0008               	return
  4478  0C67                     __end_of_Ax25_Send_Footer:	
  4479                           
  4480                           	psect	text25
  4481  057C                     __ptext25:	
  4482 ;; *************** function _Send_Byte *****************
  4483 ;; Defined at:
  4484 ;;		line 26 in file "ax25.c"
  4485 ;; Parameters:    Size  Location     Type
  4486 ;;  byte            1    wreg     unsigned char 
  4487 ;; Auto vars:     Size  Location     Type
  4488 ;;  byte            1    9[BANK0 ] unsigned char 
  4489 ;;  i               2   10[BANK0 ] int 
  4490 ;; Return value:  Size  Location     Type
  4491 ;;		None               void
  4492 ;; Registers used:
  4493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4500 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4501 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;Total ram usage:        9 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; Hardware stack levels required when called:    5
  4506 ;; This function calls:
  4507 ;;		_Update_Crc
  4508 ;; This function is called by:
  4509 ;;		_Ax25_Send_Byte
  4510 ;;		_Ax25_Send_Header
  4511 ;;		_Ax25_Send_Footer
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           
  4516                           ;psect for function _Send_Byte
  4517  057C                     _Send_Byte:	
  4518                           
  4519                           ;incstack = 0
  4520                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4521                           ;Send_Byte@byte stored from wreg
  4522  057C  0020               	movlb	0	; select bank0
  4523  057D  00A9               	movwf	Send_Byte@byte
  4524                           
  4525                           ;ax25.c: 28: int i;
  4526                           ;ax25.c: 29: for (i = 0; i < 8; i++) {
  4527  057E  01AA               	clrf	Send_Byte@i
  4528  057F  01AB               	clrf	Send_Byte@i+1
  4529  0580                     L3:	
  4530  0580  082B               	movf	Send_Byte@i+1,w
  4531  0581  3A80               	xorlw	128
  4532  0582  00A3               	movwf	??_Send_Byte
  4533  0583  3080               	movlw	128
  4534  0584  0223               	subwf	??_Send_Byte,w
  4535  0585  3008               	movlw	8
  4536  0586  1903               	btfsc	3,2
  4537  0587  022A               	subwf	Send_Byte@i,w
  4538  0588  1803               	btfsc	3,0
  4539  0589  0008               	return
  4540                           
  4541                           ;ax25.c: 30: Update_Crc((byte >> i) & 1);
  4542  058A  0020               	movlb	0	; select bank0
  4543  058B  0829               	movf	Send_Byte@byte,w
  4544  058C  00A3               	movwf	??_Send_Byte
  4545  058D  0A2A               	incf	Send_Byte@i,w
  4546  058E  2D90               	goto	u1554
  4547  058F                     u1555:	
  4548  058F  36A3               	lsrf	??_Send_Byte,f
  4549  0590                     u1554:	
  4550  0590  0B89               	decfsz	9,f
  4551  0591  2D8F               	goto	u1555
  4552  0592  0823               	movf	??_Send_Byte,w
  4553  0593  3901               	andlw	1
  4554  0594  318D  2576  3185   	fcall	_Update_Crc
  4555                           
  4556                           ;ax25.c: 31: if ((byte >> i) & 1) {
  4557  0597  0020               	movlb	0	; select bank0
  4558  0598  0829               	movf	Send_Byte@byte,w
  4559  0599  00A3               	movwf	??_Send_Byte
  4560  059A  0A2A               	incf	Send_Byte@i,w
  4561  059B  2D9D               	goto	u1564
  4562  059C                     u1565:	
  4563  059C  36A3               	lsrf	??_Send_Byte,f
  4564  059D                     u1564:	
  4565  059D  0B89               	decfsz	9,f
  4566  059E  2D9C               	goto	u1565
  4567  059F  1C23               	btfss	??_Send_Byte,0
  4568  05A0  2DEC               	goto	l2103
  4569                           
  4570                           ;ax25.c: 33: if (modem_packet_size >= (64 * 8))
  4571  05A1  3000               	movlw	0
  4572  05A2  027D               	subwf	_modem_packet_size+3,w
  4573  05A3  1D03               	skipz
  4574  05A4  2DAF               	goto	u1585
  4575  05A5  3000               	movlw	0
  4576  05A6  027C               	subwf	_modem_packet_size+2,w
  4577  05A7  1D03               	skipz
  4578  05A8  2DAF               	goto	u1585
  4579  05A9  3002               	movlw	2
  4580  05AA  027B               	subwf	_modem_packet_size+1,w
  4581  05AB  1D03               	skipz
  4582  05AC  2DAF               	goto	u1585
  4583  05AD  3000               	movlw	0
  4584  05AE  027A               	subwf	_modem_packet_size,w
  4585  05AF                     u1585:	
  4586  05AF  1803               	btfsc	3,0
  4587  05B0  0008               	return
  4588                           
  4589                           ;ax25.c: 36: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4590                           
  4591                           ;ax25.c: 34: return;
  4592  05B1  3001               	movlw	1
  4593  05B2  00A3               	movwf	??_Send_Byte
  4594  05B3  087A               	movf	_modem_packet_size,w
  4595  05B4  3907               	andlw	7
  4596  05B5  0A89               	incf	9,f
  4597  05B6  2DB8               	goto	u1594
  4598  05B7                     u1595:	
  4599  05B7  35A3               	lslf	??_Send_Byte,f
  4600  05B8                     u1594:	
  4601  05B8  0B89               	decfsz	9,f
  4602  05B9  2DB7               	goto	u1595
  4603  05BA  0823               	movf	??_Send_Byte,w
  4604  05BB  00A4               	movwf	??_Send_Byte+1
  4605  05BC  087A               	movf	_modem_packet_size,w
  4606  05BD  00A5               	movwf	??_Send_Byte+2
  4607  05BE  087B               	movf	_modem_packet_size+1,w
  4608  05BF  00A6               	movwf	??_Send_Byte+3
  4609  05C0  087C               	movf	_modem_packet_size+2,w
  4610  05C1  00A7               	movwf	??_Send_Byte+4
  4611  05C2  087D               	movf	_modem_packet_size+3,w
  4612  05C3  00A8               	movwf	??_Send_Byte+5
  4613  05C4  3003               	movlw	3
  4614  05C5                     u1605:	
  4615  05C5  36A8               	lsrf	??_Send_Byte+5,f
  4616  05C6  0CA7               	rrf	??_Send_Byte+4,f
  4617  05C7  0CA6               	rrf	??_Send_Byte+3,f
  4618  05C8  0CA5               	rrf	??_Send_Byte+2,f
  4619  05C9  0B89               	decfsz	9,f
  4620  05CA  2DC5               	goto	u1605
  4621  05CB  0825               	movf	??_Send_Byte+2,w
  4622  05CC  3EA0               	addlw	_modem_packet& (0+255)
  4623  05CD  0086               	movwf	6
  4624  05CE  3001               	movlw	1	; select bank3/4
  4625  05CF  0087               	movwf	7
  4626  05D0  0824               	movf	??_Send_Byte+1,w
  4627  05D1  0481               	iorwf	1,f
  4628                           
  4629                           ;ax25.c: 38: modem_packet_size++;
  4630  05D2  3001               	movlw	1
  4631  05D3  07FA               	addwf	_modem_packet_size,f
  4632  05D4  3000               	movlw	0
  4633  05D5  3DFB               	addwfc	_modem_packet_size+1,f
  4634  05D6  3000               	movlw	0
  4635  05D7  3DFC               	addwfc	_modem_packet_size+2,f
  4636  05D8  3000               	movlw	0
  4637  05D9  3DFD               	addwfc	_modem_packet_size+3,f
  4638                           
  4639                           ;ax25.c: 39: if (++ones_in_a_row < 5) continue;
  4640  05DA  3001               	movlw	1
  4641  05DB  0021               	movlb	1	; select bank1
  4642  05DC  07BB               	addwf	_ones_in_a_row^(0+128),f
  4643  05DD  3000               	movlw	0
  4644  05DE  3DBC               	addwfc	(_ones_in_a_row+1)^(0+128),f
  4645  05DF  083C               	movf	(_ones_in_a_row+1)^(0+128),w
  4646  05E0  3A80               	xorlw	128
  4647  05E1  0020               	movlb	0	; select bank0
  4648  05E2  00A3               	movwf	??_Send_Byte
  4649  05E3  3080               	movlw	128
  4650  05E4  0223               	subwf	??_Send_Byte,w
  4651  05E5  1D03               	skipz
  4652  05E6  2DEA               	goto	u1615
  4653  05E7  3005               	movlw	5
  4654  05E8  0021               	movlb	1	; select bank1
  4655  05E9  023B               	subwf	_ones_in_a_row^(0+128),w
  4656  05EA                     u1615:	
  4657  05EA  1C03               	btfss	3,0
  4658  05EB  2E2A               	goto	l2113
  4659  05EC                     l2103:	
  4660                           
  4661                           ;ax25.c: 40: }
  4662                           ;ax25.c: 42: if (modem_packet_size >= (64 * 8))
  4663  05EC  3000               	movlw	0
  4664  05ED  027D               	subwf	_modem_packet_size+3,w
  4665  05EE  1D03               	skipz
  4666  05EF  2DFA               	goto	u1625
  4667  05F0  3000               	movlw	0
  4668  05F1  027C               	subwf	_modem_packet_size+2,w
  4669  05F2  1D03               	skipz
  4670  05F3  2DFA               	goto	u1625
  4671  05F4  3002               	movlw	2
  4672  05F5  027B               	subwf	_modem_packet_size+1,w
  4673  05F6  1D03               	skipz
  4674  05F7  2DFA               	goto	u1625
  4675  05F8  3000               	movlw	0
  4676  05F9  027A               	subwf	_modem_packet_size,w
  4677  05FA                     u1625:	
  4678  05FA  1803               	btfsc	3,0
  4679  05FB  0008               	return
  4680                           
  4681                           ;ax25.c: 44: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4682                           
  4683                           ;ax25.c: 43: return;
  4684  05FC  3001               	movlw	1
  4685  05FD  0020               	movlb	0	; select bank0
  4686  05FE  00A3               	movwf	??_Send_Byte
  4687  05FF  087A               	movf	_modem_packet_size,w
  4688  0600  3907               	andlw	7
  4689  0601  0A89               	incf	9,f
  4690  0602  2E04               	goto	u1634
  4691  0603                     u1635:	
  4692  0603  35A3               	lslf	??_Send_Byte,f
  4693  0604                     u1634:	
  4694  0604  0B89               	decfsz	9,f
  4695  0605  2E03               	goto	u1635
  4696  0606  0823               	movf	??_Send_Byte,w
  4697  0607  3AFF               	xorlw	255
  4698  0608  00A4               	movwf	??_Send_Byte+1
  4699  0609  087A               	movf	_modem_packet_size,w
  4700  060A  00A5               	movwf	??_Send_Byte+2
  4701  060B  087B               	movf	_modem_packet_size+1,w
  4702  060C  00A6               	movwf	??_Send_Byte+3
  4703  060D  087C               	movf	_modem_packet_size+2,w
  4704  060E  00A7               	movwf	??_Send_Byte+4
  4705  060F  087D               	movf	_modem_packet_size+3,w
  4706  0610  00A8               	movwf	??_Send_Byte+5
  4707  0611  3003               	movlw	3
  4708  0612                     u1645:	
  4709  0612  36A8               	lsrf	??_Send_Byte+5,f
  4710  0613  0CA7               	rrf	??_Send_Byte+4,f
  4711  0614  0CA6               	rrf	??_Send_Byte+3,f
  4712  0615  0CA5               	rrf	??_Send_Byte+2,f
  4713  0616  0B89               	decfsz	9,f
  4714  0617  2E12               	goto	u1645
  4715  0618  0825               	movf	??_Send_Byte+2,w
  4716  0619  3EA0               	addlw	_modem_packet& (0+255)
  4717  061A  0086               	movwf	6
  4718  061B  3001               	movlw	1	; select bank3/4
  4719  061C  0087               	movwf	7
  4720  061D  0824               	movf	??_Send_Byte+1,w
  4721  061E  0581               	andwf	1,f
  4722                           
  4723                           ;ax25.c: 46: modem_packet_size++;
  4724  061F  3001               	movlw	1
  4725  0620  07FA               	addwf	_modem_packet_size,f
  4726  0621  3000               	movlw	0
  4727  0622  3DFB               	addwfc	_modem_packet_size+1,f
  4728  0623  3000               	movlw	0
  4729  0624  3DFC               	addwfc	_modem_packet_size+2,f
  4730  0625  3000               	movlw	0
  4731  0626  3DFD               	addwfc	_modem_packet_size+3,f
  4732                           
  4733                           ;ax25.c: 47: ones_in_a_row = 0;
  4734  0627  0021               	movlb	1	; select bank1
  4735  0628  01BB               	clrf	_ones_in_a_row^(0+128)
  4736  0629  01BC               	clrf	(_ones_in_a_row+1)^(0+128)
  4737  062A                     l2113:	
  4738  062A  3001               	movlw	1
  4739  062B  0020               	movlb	0	; select bank0
  4740  062C  07AA               	addwf	Send_Byte@i,f
  4741  062D  3000               	movlw	0
  4742  062E  3DAB               	addwfc	Send_Byte@i+1,f
  4743  062F  2D80               	goto	L3
  4744  0630                     __end_of_Send_Byte:	
  4745                           
  4746                           	psect	text26
  4747  0D76                     __ptext26:	
  4748 ;; *************** function _Update_Crc *****************
  4749 ;; Defined at:
  4750 ;;		line 17 in file "ax25.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  input_bit       1    wreg     unsigned char 
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;  input_bit       1    2[BANK0 ] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;		None               void
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;Total ram usage:        3 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    4
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_Send_Byte
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           
  4779                           ;psect for function _Update_Crc
  4780  0D76                     _Update_Crc:	
  4781                           
  4782                           ;incstack = 0
  4783                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  4784                           ;Update_Crc@input_bit stored from wreg
  4785  0D76  0020               	movlb	0	; select bank0
  4786  0D77  00A2               	movwf	Update_Crc@input_bit
  4787                           
  4788                           ;ax25.c: 19: crc ^= input_bit;
  4789  0D78  0822               	movf	Update_Crc@input_bit,w
  4790  0D79  00A0               	movwf	??_Update_Crc
  4791  0D7A  01A1               	clrf	??_Update_Crc+1
  4792  0D7B  0820               	movf	??_Update_Crc,w
  4793  0D7C  0021               	movlb	1	; select bank1
  4794  0D7D  06B9               	xorwf	_crc^(0+128),f
  4795  0D7E  0020               	movlb	0	; select bank0
  4796  0D7F  0821               	movf	??_Update_Crc+1,w
  4797  0D80  0021               	movlb	1	; select bank1
  4798  0D81  06BA               	xorwf	(_crc+1)^(0+128),f
  4799                           
  4800                           ;ax25.c: 20: if (crc & 1)
  4801  0D82  1C39               	btfss	_crc^(0+128),0
  4802  0D83  2D97               	goto	l2055
  4803                           
  4804                           ;ax25.c: 21: crc = (crc >> 1) ^ 0x8408;
  4805  0D84  083A               	movf	(_crc+1)^(0+128),w
  4806  0D85  0020               	movlb	0	; select bank0
  4807  0D86  00A1               	movwf	??_Update_Crc+1
  4808  0D87  0021               	movlb	1	; select bank1
  4809  0D88  0839               	movf	_crc^(0+128),w
  4810  0D89  0020               	movlb	0	; select bank0
  4811  0D8A  00A0               	movwf	??_Update_Crc
  4812  0D8B  36A1               	lsrf	??_Update_Crc+1,f
  4813  0D8C  0CA0               	rrf	??_Update_Crc,f
  4814  0D8D  3008               	movlw	8
  4815  0D8E  0620               	xorwf	??_Update_Crc,w
  4816  0D8F  0021               	movlb	1	; select bank1
  4817  0D90  00B9               	movwf	_crc^(0+128)
  4818  0D91  3084               	movlw	132
  4819  0D92  0020               	movlb	0	; select bank0
  4820  0D93  0621               	xorwf	??_Update_Crc+1,w
  4821  0D94  0021               	movlb	1	; select bank1
  4822  0D95  00BA               	movwf	(_crc+1)^(0+128)
  4823  0D96  0008               	return
  4824  0D97                     l2055:	
  4825                           
  4826                           ;ax25.c: 22: else
  4827                           ;ax25.c: 23: crc = crc >> 1;
  4828  0D97  083A               	movf	(_crc+1)^(0+128),w
  4829  0D98  0020               	movlb	0	; select bank0
  4830  0D99  00A1               	movwf	??_Update_Crc+1
  4831  0D9A  0021               	movlb	1	; select bank1
  4832  0D9B  0839               	movf	_crc^(0+128),w
  4833  0D9C  0020               	movlb	0	; select bank0
  4834  0D9D  00A0               	movwf	??_Update_Crc
  4835  0D9E  36A1               	lsrf	??_Update_Crc+1,f
  4836  0D9F  0CA0               	rrf	??_Update_Crc,f
  4837  0DA0  0820               	movf	??_Update_Crc,w
  4838  0DA1  0021               	movlb	1	; select bank1
  4839  0DA2  00B9               	movwf	_crc^(0+128)
  4840  0DA3  0020               	movlb	0	; select bank0
  4841  0DA4  0821               	movf	??_Update_Crc+1,w
  4842  0DA5  0021               	movlb	1	; select bank1
  4843  0DA6  00BA               	movwf	(_crc+1)^(0+128)
  4844  0DA7  0008               	return
  4845  0DA8                     __end_of_Update_Crc:	
  4846                           
  4847                           	psect	text27
  4848  0365                     __ptext27:	
  4849 ;; *************** function _Ax25_Send_Flag *****************
  4850 ;; Defined at:
  4851 ;;		line 71 in file "ax25.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;		None
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  i               2    7[BANK0 ] int 
  4856 ;;  byte            1    6[BANK0 ] unsigned char 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;		None               void
  4859 ;; Registers used:
  4860 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;Total ram usage:        9 bytes
  4871 ;; Hardware stack levels used:    1
  4872 ;; Hardware stack levels required when called:    4
  4873 ;; This function calls:
  4874 ;;		Nothing
  4875 ;; This function is called by:
  4876 ;;		_Ax25_Send_Header
  4877 ;;		_Ax25_Send_Footer
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function _Ax25_Send_Flag
  4883  0365                     _Ax25_Send_Flag:	
  4884                           
  4885                           ;ax25.c: 73: uint8_t byte = 0x7e;
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  4889  0365  307E               	movlw	126
  4890  0366  0020               	movlb	0	; select bank0
  4891  0367  00A0               	movwf	??_Ax25_Send_Flag
  4892  0368  0820               	movf	??_Ax25_Send_Flag,w
  4893  0369  00A6               	movwf	Ax25_Send_Flag@byte
  4894                           
  4895                           ;ax25.c: 74: int i;
  4896                           ;ax25.c: 75: for (i = 0; i < 8; i++, modem_packet_size++) {
  4897  036A  01A7               	clrf	Ax25_Send_Flag@i
  4898  036B  01A8               	clrf	Ax25_Send_Flag@i+1
  4899  036C                     L4:	
  4900  036C  0828               	movf	Ax25_Send_Flag@i+1,w
  4901  036D  3A80               	xorlw	128
  4902  036E  00A0               	movwf	??_Ax25_Send_Flag
  4903  036F  3080               	movlw	128
  4904  0370  0220               	subwf	??_Ax25_Send_Flag,w
  4905  0371  3008               	movlw	8
  4906  0372  1903               	btfsc	3,2
  4907  0373  0227               	subwf	Ax25_Send_Flag@i,w
  4908  0374  1803               	btfsc	3,0
  4909  0375  0008               	return
  4910                           
  4911                           ;ax25.c: 76: if (modem_packet_size >= 64 * 8)
  4912  0376  3000               	movlw	0
  4913  0377  027D               	subwf	_modem_packet_size+3,w
  4914  0378  1D03               	skipz
  4915  0379  2B84               	goto	u1865
  4916  037A  3000               	movlw	0
  4917  037B  027C               	subwf	_modem_packet_size+2,w
  4918  037C  1D03               	skipz
  4919  037D  2B84               	goto	u1865
  4920  037E  3002               	movlw	2
  4921  037F  027B               	subwf	_modem_packet_size+1,w
  4922  0380  1D03               	skipz
  4923  0381  2B84               	goto	u1865
  4924  0382  3000               	movlw	0
  4925  0383  027A               	subwf	_modem_packet_size,w
  4926  0384                     u1865:	
  4927  0384  1803               	btfsc	3,0
  4928  0385  0008               	return
  4929                           
  4930                           ;ax25.c: 78: if ((byte >> i) & 1)
  4931                           
  4932                           ;ax25.c: 77: return;
  4933  0386  0020               	movlb	0	; select bank0
  4934  0387  0826               	movf	Ax25_Send_Flag@byte,w
  4935  0388  00A0               	movwf	??_Ax25_Send_Flag
  4936  0389  0A27               	incf	Ax25_Send_Flag@i,w
  4937  038A  2B8C               	goto	u1874
  4938  038B                     u1875:	
  4939  038B  36A0               	lsrf	??_Ax25_Send_Flag,f
  4940  038C                     u1874:	
  4941  038C  0B89               	decfsz	9,f
  4942  038D  2B8B               	goto	u1875
  4943  038E  1C20               	btfss	??_Ax25_Send_Flag,0
  4944  038F  2BB2               	goto	l2257
  4945                           
  4946                           ;ax25.c: 79: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4947  0390  3001               	movlw	1
  4948  0391  00A0               	movwf	??_Ax25_Send_Flag
  4949  0392  087A               	movf	_modem_packet_size,w
  4950  0393  3907               	andlw	7
  4951  0394  0A89               	incf	9,f
  4952  0395  2B97               	goto	u1894
  4953  0396                     u1895:	
  4954  0396  35A0               	lslf	??_Ax25_Send_Flag,f
  4955  0397                     u1894:	
  4956  0397  0B89               	decfsz	9,f
  4957  0398  2B96               	goto	u1895
  4958  0399  0820               	movf	??_Ax25_Send_Flag,w
  4959  039A  00A1               	movwf	??_Ax25_Send_Flag+1
  4960  039B  087A               	movf	_modem_packet_size,w
  4961  039C  00A2               	movwf	??_Ax25_Send_Flag+2
  4962  039D  087B               	movf	_modem_packet_size+1,w
  4963  039E  00A3               	movwf	??_Ax25_Send_Flag+3
  4964  039F  087C               	movf	_modem_packet_size+2,w
  4965  03A0  00A4               	movwf	??_Ax25_Send_Flag+4
  4966  03A1  087D               	movf	_modem_packet_size+3,w
  4967  03A2  00A5               	movwf	??_Ax25_Send_Flag+5
  4968  03A3  3003               	movlw	3
  4969  03A4                     u1905:	
  4970  03A4  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4971  03A5  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4972  03A6  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4973  03A7  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4974  03A8  0B89               	decfsz	9,f
  4975  03A9  2BA4               	goto	u1905
  4976  03AA  0822               	movf	??_Ax25_Send_Flag+2,w
  4977  03AB  3EA0               	addlw	_modem_packet& (0+255)
  4978  03AC  0086               	movwf	6
  4979  03AD  3001               	movlw	1	; select bank3/4
  4980  03AE  0087               	movwf	7
  4981  03AF  0821               	movf	??_Ax25_Send_Flag+1,w
  4982  03B0  0481               	iorwf	1,f
  4983  03B1  2BD4               	goto	l2259
  4984  03B2                     l2257:	
  4985                           
  4986                           ;ax25.c: 80: else
  4987                           ;ax25.c: 81: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4988  03B2  3001               	movlw	1
  4989  03B3  00A0               	movwf	??_Ax25_Send_Flag
  4990  03B4  087A               	movf	_modem_packet_size,w
  4991  03B5  3907               	andlw	7
  4992  03B6  0A89               	incf	9,f
  4993  03B7  2BB9               	goto	u1914
  4994  03B8                     u1915:	
  4995  03B8  35A0               	lslf	??_Ax25_Send_Flag,f
  4996  03B9                     u1914:	
  4997  03B9  0B89               	decfsz	9,f
  4998  03BA  2BB8               	goto	u1915
  4999  03BB  0820               	movf	??_Ax25_Send_Flag,w
  5000  03BC  3AFF               	xorlw	255
  5001  03BD  00A1               	movwf	??_Ax25_Send_Flag+1
  5002  03BE  087A               	movf	_modem_packet_size,w
  5003  03BF  00A2               	movwf	??_Ax25_Send_Flag+2
  5004  03C0  087B               	movf	_modem_packet_size+1,w
  5005  03C1  00A3               	movwf	??_Ax25_Send_Flag+3
  5006  03C2  087C               	movf	_modem_packet_size+2,w
  5007  03C3  00A4               	movwf	??_Ax25_Send_Flag+4
  5008  03C4  087D               	movf	_modem_packet_size+3,w
  5009  03C5  00A5               	movwf	??_Ax25_Send_Flag+5
  5010  03C6  3003               	movlw	3
  5011  03C7                     u1925:	
  5012  03C7  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  5013  03C8  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  5014  03C9  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  5015  03CA  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  5016  03CB  0B89               	decfsz	9,f
  5017  03CC  2BC7               	goto	u1925
  5018  03CD  0822               	movf	??_Ax25_Send_Flag+2,w
  5019  03CE  3EA0               	addlw	_modem_packet& (0+255)
  5020  03CF  0086               	movwf	6
  5021  03D0  3001               	movlw	1	; select bank3/4
  5022  03D1  0087               	movwf	7
  5023  03D2  0821               	movf	??_Ax25_Send_Flag+1,w
  5024  03D3  0581               	andwf	1,f
  5025  03D4                     l2259:	
  5026  03D4  3001               	movlw	1
  5027  03D5  07A7               	addwf	Ax25_Send_Flag@i,f
  5028  03D6  3000               	movlw	0
  5029  03D7  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  5030  03D8  3001               	movlw	1
  5031  03D9  07FA               	addwf	_modem_packet_size,f
  5032  03DA  3000               	movlw	0
  5033  03DB  3DFB               	addwfc	_modem_packet_size+1,f
  5034  03DC  3000               	movlw	0
  5035  03DD  3DFC               	addwfc	_modem_packet_size+2,f
  5036  03DE  3000               	movlw	0
  5037  03DF  3DFD               	addwfc	_modem_packet_size+3,f
  5038  03E0  2B6C               	goto	L4
  5039  03E1                     __end_of_Ax25_Send_Flag:	
  5040                           
  5041                           	psect	text28
  5042  0768                     __ptext28:	
  5043 ;; *************** function _Adf_Lock *****************
  5044 ;; Defined at:
  5045 ;;		line 230 in file "adf7012.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;		None
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  bias            2   10[BANK1 ] int 
  5050 ;;  adj             2    8[BANK1 ] int 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      unsigned char 
  5053 ;; Registers used:
  5054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5061 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5062 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5063 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;Total ram usage:        6 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    9
  5067 ;; This function calls:
  5068 ;;		_Adf_Locked
  5069 ;;		_Adf_Write_Register_Three
  5070 ;;		_Adf_Write_Register_Zero
  5071 ;;		_Delay_ms
  5072 ;; This function is called by:
  5073 ;;		_main
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           
  5078                           ;psect for function _Adf_Lock
  5079  0768                     _Adf_Lock:	
  5080                           
  5081                           ;adf7012.c: 233: Delay_ms(200);
  5082                           
  5083                           ;incstack = 0
  5084                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5085  0768  30C8               	movlw	200
  5086  0769  0020               	movlb	0	; select bank0
  5087  076A  00A0               	movwf	Delay_ms@time_to_delay
  5088  076B  3000               	movlw	0
  5089  076C  00A1               	movwf	Delay_ms@time_to_delay+1
  5090  076D  318C  2484  3187   	fcall	_Delay_ms
  5091                           
  5092                           ;adf7012.c: 234: int adj = adf_config.r0.vco_adjust;
  5093  0770  0022               	movlb	2	; select bank2
  5094  0771  0828               	movf	(_adf_config^(0+256)+8),w
  5095  0772  0020               	movlb	0	; select bank0
  5096  0773  00EB               	movwf	??_Adf_Lock
  5097  0774  01EC               	clrf	??_Adf_Lock+1
  5098  0775  086B               	movf	??_Adf_Lock,w
  5099  0776  0021               	movlb	1	; select bank1
  5100  0777  00D1               	movwf	Adf_Lock@adj^(0+128)
  5101  0778  0020               	movlb	0	; select bank0
  5102  0779  086C               	movf	??_Adf_Lock+1,w
  5103  077A  0021               	movlb	1	; select bank1
  5104  077B  00D2               	movwf	(Adf_Lock@adj+1)^(0+128)
  5105                           
  5106                           ;adf7012.c: 235: int bias = adf_config.r3.vco_bias;
  5107  077C  0022               	movlb	2	; select bank2
  5108  077D  0843               	movf	(_adf_config^(0+256)+35),w
  5109  077E  0020               	movlb	0	; select bank0
  5110  077F  00EB               	movwf	??_Adf_Lock
  5111  0780  01EC               	clrf	??_Adf_Lock+1
  5112  0781  086B               	movf	??_Adf_Lock,w
  5113  0782  0021               	movlb	1	; select bank1
  5114  0783  00D3               	movwf	Adf_Lock@bias^(0+128)
  5115  0784  0020               	movlb	0	; select bank0
  5116  0785  086C               	movf	??_Adf_Lock+1,w
  5117  0786  0021               	movlb	1	; select bank1
  5118  0787  00D4               	movwf	(Adf_Lock@bias+1)^(0+128)
  5119                           
  5120                           ;adf7012.c: 237: adf_config.r3.pll_enable = 1;
  5121  0788  0022               	movlb	2	; select bank2
  5122  0789  01B9               	clrf	(_adf_config^(0+256)+25)
  5123  078A  0AB9               	incf	(_adf_config^(0+256)+25),f
  5124                           
  5125                           ;adf7012.c: 239: adf_config.r3.muxout = 5;
  5126  078B  3005               	movlw	5
  5127  078C  0020               	movlb	0	; select bank0
  5128  078D  00EB               	movwf	??_Adf_Lock
  5129  078E  086B               	movf	??_Adf_Lock,w
  5130  078F  0022               	movlb	2	; select bank2
  5131  0790  00C1               	movwf	(_adf_config^(0+256)+33)
  5132                           
  5133                           ;adf7012.c: 242: Adf_Write_Register_Zero();
  5134  0791  3182  229E  3187   	fcall	_Adf_Write_Register_Zero
  5135                           
  5136                           ;adf7012.c: 243: Adf_Write_Register_Three();
  5137  0794  3180  205A  3187   	fcall	_Adf_Write_Register_Three
  5138                           
  5139                           ;adf7012.c: 245: Delay_ms(5);
  5140  0797  3005               	movlw	5
  5141  0798  0020               	movlb	0	; select bank0
  5142  0799  00A0               	movwf	Delay_ms@time_to_delay
  5143  079A  3000               	movlw	0
  5144  079B  00A1               	movwf	Delay_ms@time_to_delay+1
  5145  079C  318C  2484  3187   	fcall	_Delay_ms
  5146  079F                     l2563:	
  5147                           ;adf7012.c: 247: while(!Adf_Locked()) {
  5148                           
  5149  079F  318B  2354  3187   	fcall	_Adf_Locked
  5150  07A2  3A00               	xorlw	0
  5151  07A3  1D03               	btfss	3,2
  5152  07A4  0008               	return
  5153                           
  5154                           ;adf7012.c: 249: adf_config.r0.vco_adjust = adj;
  5155  07A5  0021               	movlb	1	; select bank1
  5156  07A6  0851               	movf	Adf_Lock@adj^(0+128),w
  5157  07A7  0020               	movlb	0	; select bank0
  5158  07A8  00EB               	movwf	??_Adf_Lock
  5159  07A9  086B               	movf	??_Adf_Lock,w
  5160  07AA  0022               	movlb	2	; select bank2
  5161  07AB  00A8               	movwf	(_adf_config^(0+256)+8)
  5162                           
  5163                           ;adf7012.c: 250: adf_config.r3.vco_bias = bias;
  5164  07AC  0021               	movlb	1	; select bank1
  5165  07AD  0853               	movf	Adf_Lock@bias^(0+128),w
  5166  07AE  0020               	movlb	0	; select bank0
  5167  07AF  00EB               	movwf	??_Adf_Lock
  5168  07B0  086B               	movf	??_Adf_Lock,w
  5169  07B1  0022               	movlb	2	; select bank2
  5170  07B2  00C3               	movwf	(_adf_config^(0+256)+35)
  5171                           
  5172                           ;adf7012.c: 252: adf_config.r3.muxout = 5;
  5173  07B3  3005               	movlw	5
  5174  07B4  0020               	movlb	0	; select bank0
  5175  07B5  00EB               	movwf	??_Adf_Lock
  5176  07B6  086B               	movf	??_Adf_Lock,w
  5177  07B7  0022               	movlb	2	; select bank2
  5178  07B8  00C1               	movwf	(_adf_config^(0+256)+33)
  5179                           
  5180                           ;adf7012.c: 254: Adf_Write_Register_Zero();
  5181  07B9  3182  229E  3187   	fcall	_Adf_Write_Register_Zero
  5182                           
  5183                           ;adf7012.c: 255: Adf_Write_Register_Three();
  5184  07BC  3180  205A  3187   	fcall	_Adf_Write_Register_Three
  5185                           
  5186                           ;adf7012.c: 257: Delay_ms(5);
  5187  07BF  3005               	movlw	5
  5188  07C0  0020               	movlb	0	; select bank0
  5189  07C1  00A0               	movwf	Delay_ms@time_to_delay
  5190  07C2  3000               	movlw	0
  5191  07C3  00A1               	movwf	Delay_ms@time_to_delay+1
  5192  07C4  318C  2484  3187   	fcall	_Delay_ms
  5193                           
  5194                           ;adf7012.c: 258: if(++bias == 14) {
  5195  07C7  3001               	movlw	1
  5196  07C8  0021               	movlb	1	; select bank1
  5197  07C9  07D3               	addwf	Adf_Lock@bias^(0+128),f
  5198  07CA  3000               	movlw	0
  5199  07CB  3DD4               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  5200  07CC  300E               	movlw	14
  5201  07CD  0653               	xorwf	Adf_Lock@bias^(0+128),w
  5202  07CE  0454               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  5203  07CF  1D03               	skipz
  5204  07D0  2F9F               	goto	l2563
  5205                           
  5206                           ;adf7012.c: 259: bias = 1;
  5207  07D1  3001               	movlw	1
  5208  07D2  00D3               	movwf	Adf_Lock@bias^(0+128)
  5209  07D3  3000               	movlw	0
  5210  07D4  00D4               	movwf	(Adf_Lock@bias^(0+128)+1)
  5211                           
  5212                           ;adf7012.c: 260: if(++adj == 4) {
  5213  07D5  3001               	movlw	1
  5214  07D6  07D1               	addwf	Adf_Lock@adj^(0+128),f
  5215  07D7  3000               	movlw	0
  5216  07D8  3DD2               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  5217  07D9  3004               	movlw	4
  5218  07DA  0651               	xorwf	Adf_Lock@adj^(0+128),w
  5219  07DB  0452               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  5220  07DC  1D03               	skipz
  5221  07DD  2F9F               	goto	l2563
  5222                           
  5223                           ;adf7012.c: 262: adf_config.r0.vco_adjust = 0;
  5224  07DE  0022               	movlb	2	; select bank2
  5225  07DF  01A8               	clrf	(_adf_config^(0+256)+8)
  5226                           
  5227                           ;adf7012.c: 263: adf_config.r3.vco_bias = 5;
  5228  07E0  3005               	movlw	5
  5229  07E1  0020               	movlb	0	; select bank0
  5230  07E2  00EB               	movwf	??_Adf_Lock
  5231  07E3  086B               	movf	??_Adf_Lock,w
  5232  07E4  0022               	movlb	2	; select bank2
  5233  07E5  00C3               	movwf	(_adf_config^(0+256)+35)
  5234                           
  5235                           ;adf7012.c: 265: return 0;
  5236                           ;	Return value of _Adf_Lock is never used
  5237  07E6  0008               	return
  5238  07E7                     __end_of_Adf_Lock:	
  5239                           ;adf7012.c: 266: }
  5240                           ;adf7012.c: 267: }
  5241                           ;adf7012.c: 268: }
  5242                           ;adf7012.c: 272: return 1;
  5243                           ;	Return value of _Adf_Lock is never used
  5244                           
  5245                           
  5246                           	psect	text29
  5247  029E                     __ptext29:	
  5248 ;; *************** function _Adf_Write_Register_Zero *****************
  5249 ;; Defined at:
  5250 ;;		line 156 in file "adf7012.c"
  5251 ;; Parameters:    Size  Location     Type
  5252 ;;		None
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  5255 ;;  reg             4   51[BANK0 ] unsigned long 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;		None               void
  5258 ;; Registers used:
  5259 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;Total ram usage:       36 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    8
  5272 ;; This function calls:
  5273 ;;		_Reverse_Array
  5274 ;;		_Write_Adf7012_Reg
  5275 ;;		_memcpy
  5276 ;; This function is called by:
  5277 ;;		_Adf_Write_Config
  5278 ;;		_Adf_Lock
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           
  5283                           ;psect for function _Adf_Write_Register_Zero
  5284  029E                     _Adf_Write_Register_Zero:	
  5285                           
  5286                           ;adf7012.c: 158: uint32_t reg =
  5287                           ;adf7012.c: 159: (0) |
  5288                           ;adf7012.c: 160: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  5289                           ;adf7012.c: 161: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  5290                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  5291                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  5292                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  5293                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  5294                           
  5295                           ;incstack = 0
  5296                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5297  029E  0022               	movlb	2	; select bank2
  5298  029F  0829               	movf	(_adf_config^(0+256)+9),w
  5299  02A0  3903               	andlw	3
  5300  02A1  0020               	movlb	0	; select bank0
  5301  02A2  00B3               	movwf	??_Adf_Write_Register_Zero
  5302  02A3  01B4               	clrf	??_Adf_Write_Register_Zero+1
  5303  02A4  01B5               	clrf	??_Adf_Write_Register_Zero+2
  5304  02A5  01B6               	clrf	??_Adf_Write_Register_Zero+3
  5305  02A6  3019               	movlw	25
  5306  02A7                     u1225:	
  5307  02A7  35B3               	lslf	??_Adf_Write_Register_Zero,f
  5308  02A8  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  5309  02A9  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  5310  02AA  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  5311  02AB  0B89               	decfsz	9,f
  5312  02AC  2AA7               	goto	u1225
  5313  02AD  0022               	movlb	2	; select bank2
  5314  02AE  0828               	movf	(_adf_config^(0+256)+8),w
  5315  02AF  3903               	andlw	3
  5316  02B0  0020               	movlb	0	; select bank0
  5317  02B1  00B7               	movwf	??_Adf_Write_Register_Zero+4
  5318  02B2  01B8               	clrf	??_Adf_Write_Register_Zero+5
  5319  02B3  01B9               	clrf	??_Adf_Write_Register_Zero+6
  5320  02B4  01BA               	clrf	??_Adf_Write_Register_Zero+7
  5321  02B5  3017               	movlw	23
  5322  02B6                     u1235:	
  5323  02B6  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  5324  02B7  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  5325  02B8  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  5326  02B9  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  5327  02BA  0B89               	decfsz	9,f
  5328  02BB  2AB6               	goto	u1235
  5329  02BC  0022               	movlb	2	; select bank2
  5330  02BD  0827               	movf	(_adf_config^(0+256)+7),w
  5331  02BE  390F               	andlw	15
  5332  02BF  0020               	movlb	0	; select bank0
  5333  02C0  00BB               	movwf	??_Adf_Write_Register_Zero+8
  5334  02C1  01BC               	clrf	??_Adf_Write_Register_Zero+9
  5335  02C2  01BD               	clrf	??_Adf_Write_Register_Zero+10
  5336  02C3  01BE               	clrf	??_Adf_Write_Register_Zero+11
  5337  02C4  3013               	movlw	19
  5338  02C5                     u1245:	
  5339  02C5  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  5340  02C6  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  5341  02C7  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  5342  02C8  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  5343  02C9  0B89               	decfsz	9,f
  5344  02CA  2AC5               	goto	u1245
  5345  02CB  0022               	movlb	2	; select bank2
  5346  02CC  0826               	movf	(_adf_config^(0+256)+6),w
  5347  02CD  3901               	andlw	1
  5348  02CE  0020               	movlb	0	; select bank0
  5349  02CF  00BF               	movwf	??_Adf_Write_Register_Zero+12
  5350  02D0  01C0               	clrf	??_Adf_Write_Register_Zero+13
  5351  02D1  01C1               	clrf	??_Adf_Write_Register_Zero+14
  5352  02D2  01C2               	clrf	??_Adf_Write_Register_Zero+15
  5353  02D3  3012               	movlw	18
  5354  02D4                     u1255:	
  5355  02D4  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  5356  02D5  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  5357  02D6  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  5358  02D7  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  5359  02D8  0B89               	decfsz	9,f
  5360  02D9  2AD4               	goto	u1255
  5361  02DA  0022               	movlb	2	; select bank2
  5362  02DB  0825               	movf	(_adf_config^(0+256)+5),w
  5363  02DC  3901               	andlw	1
  5364  02DD  0020               	movlb	0	; select bank0
  5365  02DE  00C3               	movwf	??_Adf_Write_Register_Zero+16
  5366  02DF  01C4               	clrf	??_Adf_Write_Register_Zero+17
  5367  02E0  01C5               	clrf	??_Adf_Write_Register_Zero+18
  5368  02E1  01C6               	clrf	??_Adf_Write_Register_Zero+19
  5369  02E2  3011               	movlw	17
  5370  02E3                     u1265:	
  5371  02E3  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  5372  02E4  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  5373  02E5  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  5374  02E6  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  5375  02E7  0B89               	decfsz	9,f
  5376  02E8  2AE3               	goto	u1265
  5377  02E9  0022               	movlb	2	; select bank2
  5378  02EA  0824               	movf	(_adf_config^(0+256)+4),w
  5379  02EB  390F               	andlw	15
  5380  02EC  0020               	movlb	0	; select bank0
  5381  02ED  00C7               	movwf	??_Adf_Write_Register_Zero+20
  5382  02EE  01C8               	clrf	??_Adf_Write_Register_Zero+21
  5383  02EF  01C9               	clrf	??_Adf_Write_Register_Zero+22
  5384  02F0  01CA               	clrf	??_Adf_Write_Register_Zero+23
  5385  02F1  300D               	movlw	13
  5386  02F2                     u1275:	
  5387  02F2  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  5388  02F3  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  5389  02F4  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  5390  02F5  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  5391  02F6  0B89               	decfsz	9,f
  5392  02F7  2AF2               	goto	u1275
  5393  02F8  30FF               	movlw	255
  5394  02F9  0022               	movlb	2	; select bank2
  5395  02FA  0520               	andwf	_adf_config^(0+256),w
  5396  02FB  0020               	movlb	0	; select bank0
  5397  02FC  00CB               	movwf	??_Adf_Write_Register_Zero+24
  5398  02FD  3007               	movlw	7
  5399  02FE  0022               	movlb	2	; select bank2
  5400  02FF  0521               	andwf	(_adf_config+1)^(0+256),w
  5401  0300  0020               	movlb	0	; select bank0
  5402  0301  00CC               	movwf	??_Adf_Write_Register_Zero+25
  5403  0302  3000               	movlw	0
  5404  0303  0022               	movlb	2	; select bank2
  5405  0304  0522               	andwf	(_adf_config+2)^(0+256),w
  5406  0305  0020               	movlb	0	; select bank0
  5407  0306  00CD               	movwf	??_Adf_Write_Register_Zero+26
  5408  0307  3000               	movlw	0
  5409  0308  0022               	movlb	2	; select bank2
  5410  0309  0523               	andwf	(_adf_config+3)^(0+256),w
  5411  030A  0020               	movlb	0	; select bank0
  5412  030B  00CE               	movwf	??_Adf_Write_Register_Zero+27
  5413  030C  3002               	movlw	2
  5414  030D                     u1285:	
  5415  030D  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  5416  030E  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  5417  030F  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  5418  0310  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  5419  0311  0B89               	decfsz	9,f
  5420  0312  2B0D               	goto	u1285
  5421  0313  084B               	movf	??_Adf_Write_Register_Zero+24,w
  5422  0314  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  5423  0315  084C               	movf	??_Adf_Write_Register_Zero+25,w
  5424  0316  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  5425  0317  084D               	movf	??_Adf_Write_Register_Zero+26,w
  5426  0318  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  5427  0319  084E               	movf	??_Adf_Write_Register_Zero+27,w
  5428  031A  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  5429  031B  0847               	movf	??_Adf_Write_Register_Zero+20,w
  5430  031C  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  5431  031D  0848               	movf	??_Adf_Write_Register_Zero+21,w
  5432  031E  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  5433  031F  0849               	movf	??_Adf_Write_Register_Zero+22,w
  5434  0320  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  5435  0321  084A               	movf	??_Adf_Write_Register_Zero+23,w
  5436  0322  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  5437  0323  0843               	movf	??_Adf_Write_Register_Zero+16,w
  5438  0324  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  5439  0325  0844               	movf	??_Adf_Write_Register_Zero+17,w
  5440  0326  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  5441  0327  0845               	movf	??_Adf_Write_Register_Zero+18,w
  5442  0328  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  5443  0329  0846               	movf	??_Adf_Write_Register_Zero+19,w
  5444  032A  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  5445  032B  083F               	movf	??_Adf_Write_Register_Zero+12,w
  5446  032C  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  5447  032D  0840               	movf	??_Adf_Write_Register_Zero+13,w
  5448  032E  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  5449  032F  0841               	movf	??_Adf_Write_Register_Zero+14,w
  5450  0330  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  5451  0331  0842               	movf	??_Adf_Write_Register_Zero+15,w
  5452  0332  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  5453  0333  083B               	movf	??_Adf_Write_Register_Zero+8,w
  5454  0334  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  5455  0335  083C               	movf	??_Adf_Write_Register_Zero+9,w
  5456  0336  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  5457  0337  083D               	movf	??_Adf_Write_Register_Zero+10,w
  5458  0338  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  5459  0339  083E               	movf	??_Adf_Write_Register_Zero+11,w
  5460  033A  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  5461  033B  0833               	movf	??_Adf_Write_Register_Zero,w
  5462  033C  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  5463  033D  00D3               	movwf	Adf_Write_Register_Zero@reg
  5464  033E  0834               	movf	??_Adf_Write_Register_Zero+1,w
  5465  033F  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  5466  0340  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  5467  0341  0835               	movf	??_Adf_Write_Register_Zero+2,w
  5468  0342  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  5469  0343  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  5470  0344  0836               	movf	??_Adf_Write_Register_Zero+3,w
  5471  0345  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  5472  0346  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  5473                           
  5474                           ;adf7012.c: 169: uint8_t reg_ptr[4];
  5475                           ;adf7012.c: 170: memcpy(reg_ptr, &reg, 4);
  5476  0347  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  5477  0348  00B3               	movwf	??_Adf_Write_Register_Zero
  5478  0349  0833               	movf	??_Adf_Write_Register_Zero,w
  5479  034A  00A0               	movwf	memcpy@s1
  5480  034B  3004               	movlw	4
  5481  034C  00A1               	movwf	memcpy@n
  5482  034D  3000               	movlw	0
  5483  034E  00A2               	movwf	memcpy@n+1
  5484  034F  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5485  0350  318C  24CA  3182   	fcall	_memcpy
  5486                           
  5487                           ;adf7012.c: 171: Reverse_Array(reg_ptr,4);
  5488  0353  3004               	movlw	4
  5489  0354  0020               	movlb	0	; select bank0
  5490  0355  00B3               	movwf	??_Adf_Write_Register_Zero
  5491  0356  0833               	movf	??_Adf_Write_Register_Zero,w
  5492  0357  00A7               	movwf	Reverse_Array@length
  5493  0358  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5494  0359  318E  261D  3182   	fcall	_Reverse_Array
  5495                           
  5496                           ;adf7012.c: 172: Write_Adf7012_Reg(reg_ptr, 4);
  5497  035C  3004               	movlw	4
  5498  035D  0020               	movlb	0	; select bank0
  5499  035E  00B3               	movwf	??_Adf_Write_Register_Zero
  5500  035F  0833               	movf	??_Adf_Write_Register_Zero,w
  5501  0360  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5502  0361  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5503  0362  318D  25A8         	fcall	_Write_Adf7012_Reg
  5504  0364  0008               	return
  5505  0365                     __end_of_Adf_Write_Register_Zero:	
  5506                           
  5507                           	psect	text30
  5508  005A                     __ptext30:	
  5509 ;; *************** function _Adf_Write_Register_Three *****************
  5510 ;; Defined at:
  5511 ;;		line 205 in file "adf7012.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;		None
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  5516 ;;  reg             4    4[BANK1 ] unsigned long 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;		None               void
  5519 ;; Registers used:
  5520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5527 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5528 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5529 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;Total ram usage:       64 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:    8
  5533 ;; This function calls:
  5534 ;;		_Reverse_Array
  5535 ;;		_Write_Adf7012_Reg
  5536 ;;		_memcpy
  5537 ;; This function is called by:
  5538 ;;		_Adf_Write_Config
  5539 ;;		_Adf_Lock
  5540 ;;		_Ptt_On
  5541 ;;		_Ptt_Off
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           
  5546                           ;psect for function _Adf_Write_Register_Three
  5547  005A                     _Adf_Write_Register_Three:	
  5548                           
  5549                           ;adf7012.c: 206: uint32_t reg =
  5550                           ;adf7012.c: 207: (3) |
  5551                           ;adf7012.c: 208: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  5552                           ;adf7012.c: 209: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  5553                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  5554                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  5555                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  5556                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  5557                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  5558                           
  5559                           ;incstack = 0
  5560                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5561  005A  0022               	movlb	2	; select bank2
  5562  005B  0846               	movf	(_adf_config^(0+256)+38),w
  5563  005C  390F               	andlw	15
  5564  005D  0020               	movlb	0	; select bank0
  5565  005E  00B3               	movwf	??_Adf_Write_Register_Three
  5566  005F  01B4               	clrf	??_Adf_Write_Register_Three+1
  5567  0060  01B5               	clrf	??_Adf_Write_Register_Three+2
  5568  0061  01B6               	clrf	??_Adf_Write_Register_Three+3
  5569  0062  301C               	movlw	28
  5570  0063                     u1385:	
  5571  0063  35B3               	lslf	??_Adf_Write_Register_Three,f
  5572  0064  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  5573  0065  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  5574  0066  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  5575  0067  0B89               	decfsz	9,f
  5576  0068  2863               	goto	u1385
  5577  0069  0022               	movlb	2	; select bank2
  5578  006A  0845               	movf	(_adf_config^(0+256)+37),w
  5579  006B  391F               	andlw	31
  5580  006C  0020               	movlb	0	; select bank0
  5581  006D  00B7               	movwf	??_Adf_Write_Register_Three+4
  5582  006E  01B8               	clrf	??_Adf_Write_Register_Three+5
  5583  006F  01B9               	clrf	??_Adf_Write_Register_Three+6
  5584  0070  01BA               	clrf	??_Adf_Write_Register_Three+7
  5585  0071  3017               	movlw	23
  5586  0072                     u1395:	
  5587  0072  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  5588  0073  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  5589  0074  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  5590  0075  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  5591  0076  0B89               	decfsz	9,f
  5592  0077  2872               	goto	u1395
  5593  0078  0022               	movlb	2	; select bank2
  5594  0079  0844               	movf	(_adf_config^(0+256)+36),w
  5595  007A  3907               	andlw	7
  5596  007B  0020               	movlb	0	; select bank0
  5597  007C  00BB               	movwf	??_Adf_Write_Register_Three+8
  5598  007D  01BC               	clrf	??_Adf_Write_Register_Three+9
  5599  007E  01BD               	clrf	??_Adf_Write_Register_Three+10
  5600  007F  01BE               	clrf	??_Adf_Write_Register_Three+11
  5601  0080  3014               	movlw	20
  5602  0081                     u1405:	
  5603  0081  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  5604  0082  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  5605  0083  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  5606  0084  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  5607  0085  0B89               	decfsz	9,f
  5608  0086  2881               	goto	u1405
  5609  0087  0022               	movlb	2	; select bank2
  5610  0088  0843               	movf	(_adf_config^(0+256)+35),w
  5611  0089  390F               	andlw	15
  5612  008A  0020               	movlb	0	; select bank0
  5613  008B  00BF               	movwf	??_Adf_Write_Register_Three+12
  5614  008C  01C0               	clrf	??_Adf_Write_Register_Three+13
  5615  008D  01C1               	clrf	??_Adf_Write_Register_Three+14
  5616  008E  01C2               	clrf	??_Adf_Write_Register_Three+15
  5617  008F  3010               	movlw	16
  5618  0090                     u1415:	
  5619  0090  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  5620  0091  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  5621  0092  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  5622  0093  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  5623  0094  0B89               	decfsz	9,f
  5624  0095  2890               	goto	u1415
  5625  0096  0022               	movlb	2	; select bank2
  5626  0097  0842               	movf	(_adf_config^(0+256)+34),w
  5627  0098  3901               	andlw	1
  5628  0099  0020               	movlb	0	; select bank0
  5629  009A  00C3               	movwf	??_Adf_Write_Register_Three+16
  5630  009B  01C4               	clrf	??_Adf_Write_Register_Three+17
  5631  009C  01C5               	clrf	??_Adf_Write_Register_Three+18
  5632  009D  01C6               	clrf	??_Adf_Write_Register_Three+19
  5633  009E  300F               	movlw	15
  5634  009F                     u1425:	
  5635  009F  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  5636  00A0  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  5637  00A1  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  5638  00A2  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  5639  00A3  0B89               	decfsz	9,f
  5640  00A4  289F               	goto	u1425
  5641  00A5  0022               	movlb	2	; select bank2
  5642  00A6  0841               	movf	(_adf_config^(0+256)+33),w
  5643  00A7  390F               	andlw	15
  5644  00A8  0020               	movlb	0	; select bank0
  5645  00A9  00C7               	movwf	??_Adf_Write_Register_Three+20
  5646  00AA  01C8               	clrf	??_Adf_Write_Register_Three+21
  5647  00AB  01C9               	clrf	??_Adf_Write_Register_Three+22
  5648  00AC  01CA               	clrf	??_Adf_Write_Register_Three+23
  5649  00AD  300B               	movlw	11
  5650  00AE                     u1435:	
  5651  00AE  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  5652  00AF  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  5653  00B0  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  5654  00B1  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  5655  00B2  0B89               	decfsz	9,f
  5656  00B3  28AE               	goto	u1435
  5657  00B4  0022               	movlb	2	; select bank2
  5658  00B5  0840               	movf	(_adf_config^(0+256)+32),w
  5659  00B6  3901               	andlw	1
  5660  00B7  0020               	movlb	0	; select bank0
  5661  00B8  00CB               	movwf	??_Adf_Write_Register_Three+24
  5662  00B9  01CC               	clrf	??_Adf_Write_Register_Three+25
  5663  00BA  01CD               	clrf	??_Adf_Write_Register_Three+26
  5664  00BB  01CE               	clrf	??_Adf_Write_Register_Three+27
  5665  00BC  300A               	movlw	10
  5666  00BD                     u1445:	
  5667  00BD  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  5668  00BE  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  5669  00BF  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  5670  00C0  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  5671  00C1  0B89               	decfsz	9,f
  5672  00C2  28BD               	goto	u1445
  5673  00C3  0022               	movlb	2	; select bank2
  5674  00C4  083F               	movf	(_adf_config^(0+256)+31),w
  5675  00C5  3901               	andlw	1
  5676  00C6  0020               	movlb	0	; select bank0
  5677  00C7  00CF               	movwf	??_Adf_Write_Register_Three+28
  5678  00C8  01D0               	clrf	??_Adf_Write_Register_Three+29
  5679  00C9  01D1               	clrf	??_Adf_Write_Register_Three+30
  5680  00CA  01D2               	clrf	??_Adf_Write_Register_Three+31
  5681  00CB  3009               	movlw	9
  5682  00CC                     u1455:	
  5683  00CC  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  5684  00CD  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  5685  00CE  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  5686  00CF  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  5687  00D0  0B89               	decfsz	9,f
  5688  00D1  28CC               	goto	u1455
  5689  00D2  0022               	movlb	2	; select bank2
  5690  00D3  083E               	movf	(_adf_config^(0+256)+30),w
  5691  00D4  3901               	andlw	1
  5692  00D5  0020               	movlb	0	; select bank0
  5693  00D6  00D3               	movwf	??_Adf_Write_Register_Three+32
  5694  00D7  01D4               	clrf	??_Adf_Write_Register_Three+33
  5695  00D8  01D5               	clrf	??_Adf_Write_Register_Three+34
  5696  00D9  01D6               	clrf	??_Adf_Write_Register_Three+35
  5697  00DA  3008               	movlw	8
  5698  00DB                     u1465:	
  5699  00DB  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  5700  00DC  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  5701  00DD  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  5702  00DE  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  5703  00DF  0B89               	decfsz	9,f
  5704  00E0  28DB               	goto	u1465
  5705  00E1  0022               	movlb	2	; select bank2
  5706  00E2  083D               	movf	(_adf_config^(0+256)+29),w
  5707  00E3  3903               	andlw	3
  5708  00E4  0020               	movlb	0	; select bank0
  5709  00E5  00D7               	movwf	??_Adf_Write_Register_Three+36
  5710  00E6  01D8               	clrf	??_Adf_Write_Register_Three+37
  5711  00E7  01D9               	clrf	??_Adf_Write_Register_Three+38
  5712  00E8  01DA               	clrf	??_Adf_Write_Register_Three+39
  5713  00E9  3006               	movlw	6
  5714  00EA                     u1475:	
  5715  00EA  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  5716  00EB  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  5717  00EC  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  5718  00ED  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  5719  00EE  0B89               	decfsz	9,f
  5720  00EF  28EA               	goto	u1475
  5721  00F0  0022               	movlb	2	; select bank2
  5722  00F1  083C               	movf	(_adf_config^(0+256)+28),w
  5723  00F2  3901               	andlw	1
  5724  00F3  0020               	movlb	0	; select bank0
  5725  00F4  00DB               	movwf	??_Adf_Write_Register_Three+40
  5726  00F5  01DC               	clrf	??_Adf_Write_Register_Three+41
  5727  00F6  01DD               	clrf	??_Adf_Write_Register_Three+42
  5728  00F7  01DE               	clrf	??_Adf_Write_Register_Three+43
  5729  00F8  3005               	movlw	5
  5730  00F9                     u1485:	
  5731  00F9  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  5732  00FA  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  5733  00FB  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  5734  00FC  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  5735  00FD  0B89               	decfsz	9,f
  5736  00FE  28F9               	goto	u1485
  5737  00FF  0022               	movlb	2	; select bank2
  5738  0100  083B               	movf	(_adf_config^(0+256)+27),w
  5739  0101  3901               	andlw	1
  5740  0102  0020               	movlb	0	; select bank0
  5741  0103  00DF               	movwf	??_Adf_Write_Register_Three+44
  5742  0104  01E0               	clrf	??_Adf_Write_Register_Three+45
  5743  0105  01E1               	clrf	??_Adf_Write_Register_Three+46
  5744  0106  01E2               	clrf	??_Adf_Write_Register_Three+47
  5745  0107  3004               	movlw	4
  5746  0108                     u1495:	
  5747  0108  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  5748  0109  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  5749  010A  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  5750  010B  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  5751  010C  0B89               	decfsz	9,f
  5752  010D  2908               	goto	u1495
  5753  010E  0022               	movlb	2	; select bank2
  5754  010F  083A               	movf	(_adf_config^(0+256)+26),w
  5755  0110  3901               	andlw	1
  5756  0111  0020               	movlb	0	; select bank0
  5757  0112  00E3               	movwf	??_Adf_Write_Register_Three+48
  5758  0113  01E4               	clrf	??_Adf_Write_Register_Three+49
  5759  0114  01E5               	clrf	??_Adf_Write_Register_Three+50
  5760  0115  01E6               	clrf	??_Adf_Write_Register_Three+51
  5761  0116  3003               	movlw	3
  5762  0117                     u1505:	
  5763  0117  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  5764  0118  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  5765  0119  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  5766  011A  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  5767  011B  0B89               	decfsz	9,f
  5768  011C  2917               	goto	u1505
  5769  011D  0022               	movlb	2	; select bank2
  5770  011E  0839               	movf	(_adf_config^(0+256)+25),w
  5771  011F  3901               	andlw	1
  5772  0120  0020               	movlb	0	; select bank0
  5773  0121  00E7               	movwf	??_Adf_Write_Register_Three+52
  5774  0122  01E8               	clrf	??_Adf_Write_Register_Three+53
  5775  0123  01E9               	clrf	??_Adf_Write_Register_Three+54
  5776  0124  01EA               	clrf	??_Adf_Write_Register_Three+55
  5777  0125  3002               	movlw	2
  5778  0126                     u1515:	
  5779  0126  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  5780  0127  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  5781  0128  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  5782  0129  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  5783  012A  0B89               	decfsz	9,f
  5784  012B  2926               	goto	u1515
  5785  012C  0867               	movf	??_Adf_Write_Register_Three+52,w
  5786  012D  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  5787  012E  0868               	movf	??_Adf_Write_Register_Three+53,w
  5788  012F  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  5789  0130  0869               	movf	??_Adf_Write_Register_Three+54,w
  5790  0131  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  5791  0132  086A               	movf	??_Adf_Write_Register_Three+55,w
  5792  0133  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  5793  0134  0863               	movf	??_Adf_Write_Register_Three+48,w
  5794  0135  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  5795  0136  0864               	movf	??_Adf_Write_Register_Three+49,w
  5796  0137  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  5797  0138  0865               	movf	??_Adf_Write_Register_Three+50,w
  5798  0139  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  5799  013A  0866               	movf	??_Adf_Write_Register_Three+51,w
  5800  013B  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  5801  013C  085F               	movf	??_Adf_Write_Register_Three+44,w
  5802  013D  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  5803  013E  0860               	movf	??_Adf_Write_Register_Three+45,w
  5804  013F  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  5805  0140  0861               	movf	??_Adf_Write_Register_Three+46,w
  5806  0141  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  5807  0142  0862               	movf	??_Adf_Write_Register_Three+47,w
  5808  0143  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  5809  0144  085B               	movf	??_Adf_Write_Register_Three+40,w
  5810  0145  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  5811  0146  085C               	movf	??_Adf_Write_Register_Three+41,w
  5812  0147  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  5813  0148  085D               	movf	??_Adf_Write_Register_Three+42,w
  5814  0149  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  5815  014A  085E               	movf	??_Adf_Write_Register_Three+43,w
  5816  014B  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  5817  014C  0857               	movf	??_Adf_Write_Register_Three+36,w
  5818  014D  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  5819  014E  0858               	movf	??_Adf_Write_Register_Three+37,w
  5820  014F  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  5821  0150  0859               	movf	??_Adf_Write_Register_Three+38,w
  5822  0151  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  5823  0152  085A               	movf	??_Adf_Write_Register_Three+39,w
  5824  0153  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  5825  0154  0853               	movf	??_Adf_Write_Register_Three+32,w
  5826  0155  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  5827  0156  0854               	movf	??_Adf_Write_Register_Three+33,w
  5828  0157  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  5829  0158  0855               	movf	??_Adf_Write_Register_Three+34,w
  5830  0159  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  5831  015A  0856               	movf	??_Adf_Write_Register_Three+35,w
  5832  015B  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  5833  015C  084F               	movf	??_Adf_Write_Register_Three+28,w
  5834  015D  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  5835  015E  0850               	movf	??_Adf_Write_Register_Three+29,w
  5836  015F  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  5837  0160  0851               	movf	??_Adf_Write_Register_Three+30,w
  5838  0161  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  5839  0162  0852               	movf	??_Adf_Write_Register_Three+31,w
  5840  0163  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  5841  0164  084B               	movf	??_Adf_Write_Register_Three+24,w
  5842  0165  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  5843  0166  084C               	movf	??_Adf_Write_Register_Three+25,w
  5844  0167  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  5845  0168  084D               	movf	??_Adf_Write_Register_Three+26,w
  5846  0169  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  5847  016A  084E               	movf	??_Adf_Write_Register_Three+27,w
  5848  016B  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  5849  016C  0847               	movf	??_Adf_Write_Register_Three+20,w
  5850  016D  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  5851  016E  0848               	movf	??_Adf_Write_Register_Three+21,w
  5852  016F  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  5853  0170  0849               	movf	??_Adf_Write_Register_Three+22,w
  5854  0171  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  5855  0172  084A               	movf	??_Adf_Write_Register_Three+23,w
  5856  0173  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  5857  0174  0843               	movf	??_Adf_Write_Register_Three+16,w
  5858  0175  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  5859  0176  0844               	movf	??_Adf_Write_Register_Three+17,w
  5860  0177  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  5861  0178  0845               	movf	??_Adf_Write_Register_Three+18,w
  5862  0179  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  5863  017A  0846               	movf	??_Adf_Write_Register_Three+19,w
  5864  017B  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  5865  017C  083F               	movf	??_Adf_Write_Register_Three+12,w
  5866  017D  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  5867  017E  0840               	movf	??_Adf_Write_Register_Three+13,w
  5868  017F  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  5869  0180  0841               	movf	??_Adf_Write_Register_Three+14,w
  5870  0181  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  5871  0182  0842               	movf	??_Adf_Write_Register_Three+15,w
  5872  0183  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  5873  0184  083B               	movf	??_Adf_Write_Register_Three+8,w
  5874  0185  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  5875  0186  083C               	movf	??_Adf_Write_Register_Three+9,w
  5876  0187  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  5877  0188  083D               	movf	??_Adf_Write_Register_Three+10,w
  5878  0189  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  5879  018A  083E               	movf	??_Adf_Write_Register_Three+11,w
  5880  018B  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  5881  018C  0837               	movf	??_Adf_Write_Register_Three+4,w
  5882  018D  04B3               	iorwf	??_Adf_Write_Register_Three,f
  5883  018E  0838               	movf	??_Adf_Write_Register_Three+5,w
  5884  018F  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  5885  0190  0839               	movf	??_Adf_Write_Register_Three+6,w
  5886  0191  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  5887  0192  083A               	movf	??_Adf_Write_Register_Three+7,w
  5888  0193  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  5889  0194  3003               	movlw	3
  5890  0195  0433               	iorwf	??_Adf_Write_Register_Three,w
  5891  0196  0021               	movlb	1	; select bank1
  5892  0197  00CD               	movwf	Adf_Write_Register_Three@reg^(0+128)
  5893  0198  3000               	movlw	0
  5894  0199  0020               	movlb	0	; select bank0
  5895  019A  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  5896  019B  0021               	movlb	1	; select bank1
  5897  019C  00CE               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  5898  019D  3000               	movlw	0
  5899  019E  0020               	movlb	0	; select bank0
  5900  019F  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  5901  01A0  0021               	movlb	1	; select bank1
  5902  01A1  00CF               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  5903  01A2  3000               	movlw	0
  5904  01A3  0020               	movlb	0	; select bank0
  5905  01A4  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  5906  01A5  0021               	movlb	1	; select bank1
  5907  01A6  00D0               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  5908                           
  5909                           ;adf7012.c: 224: uint8_t reg_ptr[4];
  5910                           ;adf7012.c: 225: memcpy(reg_ptr, &reg, 4);
  5911  01A7  30CD               	movlw	Adf_Write_Register_Three@reg& (0+255)
  5912  01A8  0020               	movlb	0	; select bank0
  5913  01A9  00B3               	movwf	??_Adf_Write_Register_Three
  5914  01AA  0833               	movf	??_Adf_Write_Register_Three,w
  5915  01AB  00A0               	movwf	memcpy@s1
  5916  01AC  3004               	movlw	4
  5917  01AD  00A1               	movwf	memcpy@n
  5918  01AE  3000               	movlw	0
  5919  01AF  00A2               	movwf	memcpy@n+1
  5920  01B0  30C9               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5921  01B1  318C  24CA  3180   	fcall	_memcpy
  5922                           
  5923                           ;adf7012.c: 226: Reverse_Array(reg_ptr,4);
  5924  01B4  3004               	movlw	4
  5925  01B5  0020               	movlb	0	; select bank0
  5926  01B6  00B3               	movwf	??_Adf_Write_Register_Three
  5927  01B7  0833               	movf	??_Adf_Write_Register_Three,w
  5928  01B8  00A7               	movwf	Reverse_Array@length
  5929  01B9  30C9               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5930  01BA  318E  261D  3180   	fcall	_Reverse_Array
  5931                           
  5932                           ;adf7012.c: 227: Write_Adf7012_Reg(reg_ptr, 4);
  5933  01BD  3004               	movlw	4
  5934  01BE  0020               	movlb	0	; select bank0
  5935  01BF  00B3               	movwf	??_Adf_Write_Register_Three
  5936  01C0  0833               	movf	??_Adf_Write_Register_Three,w
  5937  01C1  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5938  01C2  30C9               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5939  01C3  318D  25A8         	fcall	_Write_Adf7012_Reg
  5940  01C5  0008               	return
  5941  01C6                     __end_of_Adf_Write_Register_Three:	
  5942                           
  5943                           	psect	text31
  5944  0DA8                     __ptext31:	
  5945 ;; *************** function _Write_Adf7012_Reg *****************
  5946 ;; Defined at:
  5947 ;;		line 77 in file "utility.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  reg_value       1    wreg     PTR unsigned char 
  5950 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5951 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  5954 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5955 ;;  i               1   13[BANK0 ] unsigned char 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      unsigned char 
  5958 ;; Registers used:
  5959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5960 ;; Tracked objects:
  5961 ;;		On entry : 0/0
  5962 ;;		On exit  : 0/0
  5963 ;;		Unchanged: 0/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5965 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;Total ram usage:        4 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; Hardware stack levels required when called:    7
  5972 ;; This function calls:
  5973 ;;		_Delay_ms
  5974 ;;		_Spi_Byte_Send
  5975 ;; This function is called by:
  5976 ;;		_Adf_Write_Register_Zero
  5977 ;;		_Adf_Write_Register_One
  5978 ;;		_Adf_Write_Register_Two
  5979 ;;		_Adf_Write_Register_Three
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           
  5984                           ;psect for function _Write_Adf7012_Reg
  5985  0DA8                     _Write_Adf7012_Reg:	
  5986                           
  5987                           ;incstack = 0
  5988                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5989                           ;Write_Adf7012_Reg@reg_value stored from wreg
  5990  0DA8  0020               	movlb	0	; select bank0
  5991  0DA9  00AC               	movwf	Write_Adf7012_Reg@reg_value
  5992                           
  5993                           ;utility.c: 79: uint8_t i = 0;
  5994  0DAA  01AD               	clrf	Write_Adf7012_Reg@i
  5995                           
  5996                           ;utility.c: 80: Delay_ms(1);
  5997  0DAB  3001               	movlw	1
  5998  0DAC  00A0               	movwf	Delay_ms@time_to_delay
  5999  0DAD  3000               	movlw	0
  6000  0DAE  00A1               	movwf	Delay_ms@time_to_delay+1
  6001  0DAF  318C  2484  318D   	fcall	_Delay_ms
  6002                           
  6003                           ;utility.c: 81: PORTAbits.RA4 = 0;;
  6004  0DB2  0020               	movlb	0	; select bank0
  6005  0DB3  120C               	bcf	12,4	;volatile
  6006                           
  6007                           ;utility.c: 82: Delay_ms(1);
  6008  0DB4  3001               	movlw	1
  6009  0DB5  00A0               	movwf	Delay_ms@time_to_delay
  6010  0DB6  3000               	movlw	0
  6011  0DB7  00A1               	movwf	Delay_ms@time_to_delay+1
  6012  0DB8  318C  2484  318D   	fcall	_Delay_ms
  6013                           
  6014                           ;utility.c: 84: for (i = 0; i < size_of_reg; i++){
  6015  0DBB  0020               	movlb	0	; select bank0
  6016  0DBC  01AD               	clrf	Write_Adf7012_Reg@i
  6017  0DBD                     l1939:	
  6018  0DBD  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  6019  0DBE  022D               	subwf	Write_Adf7012_Reg@i,w
  6020  0DBF  1803               	btfsc	3,0
  6021  0DC0  2DD1               	goto	l1941
  6022                           
  6023                           ;utility.c: 85: Spi_Byte_Send(*(reg_value+i));
  6024  0DC1  082D               	movf	Write_Adf7012_Reg@i,w
  6025  0DC2  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  6026  0DC3  00AB               	movwf	??_Write_Adf7012_Reg
  6027  0DC4  082B               	movf	??_Write_Adf7012_Reg,w
  6028  0DC5  0086               	movwf	6
  6029  0DC6  0187               	clrf	7
  6030  0DC7  0801               	movf	1,w
  6031  0DC8  318C  24F3  318D   	fcall	_Spi_Byte_Send
  6032  0DCB  3001               	movlw	1
  6033  0DCC  0020               	movlb	0	; select bank0
  6034  0DCD  00AB               	movwf	??_Write_Adf7012_Reg
  6035  0DCE  082B               	movf	??_Write_Adf7012_Reg,w
  6036  0DCF  07AD               	addwf	Write_Adf7012_Reg@i,f
  6037  0DD0  2DBD               	goto	l1939
  6038  0DD1                     l1941:	
  6039                           
  6040                           ;utility.c: 86: }
  6041                           ;utility.c: 88: Delay_ms(1);
  6042  0DD1  3001               	movlw	1
  6043  0DD2  00A0               	movwf	Delay_ms@time_to_delay
  6044  0DD3  3000               	movlw	0
  6045  0DD4  00A1               	movwf	Delay_ms@time_to_delay+1
  6046  0DD5  318C  2484  318D   	fcall	_Delay_ms
  6047                           
  6048                           ;utility.c: 89: PORTAbits.RA4 = 1;;
  6049  0DD8  0020               	movlb	0	; select bank0
  6050  0DD9  160C               	bsf	12,4	;volatile
  6051                           
  6052                           ;utility.c: 91: Delay_ms(1);
  6053  0DDA  3001               	movlw	1
  6054  0DDB  00A0               	movwf	Delay_ms@time_to_delay
  6055  0DDC  3000               	movlw	0
  6056  0DDD  00A1               	movwf	Delay_ms@time_to_delay+1
  6057  0DDE  318C  2484         	fcall	_Delay_ms
  6058  0DE0  0008               	return
  6059  0DE1                     __end_of_Write_Adf7012_Reg:	
  6060                           ;utility.c: 92: return 1;
  6061                           ;	Return value of _Write_Adf7012_Reg is never used
  6062                           
  6063                           
  6064                           	psect	text32
  6065  0CF3                     __ptext32:	
  6066 ;; *************** function _Spi_Byte_Send *****************
  6067 ;; Defined at:
  6068 ;;		line 215 in file "utility.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  data            1    wreg     unsigned char 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  data            1    7[BANK0 ] unsigned char 
  6073 ;;  i               1    9[BANK0 ] unsigned char 
  6074 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      unsigned char 
  6077 ;; Registers used:
  6078 ;;		wreg, status,2, status,0, pclath, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6085 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6086 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6087 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6088 ;;Total ram usage:        4 bytes
  6089 ;; Hardware stack levels used:    1
  6090 ;; Hardware stack levels required when called:    6
  6091 ;; This function calls:
  6092 ;;		_Delay_ms
  6093 ;; This function is called by:
  6094 ;;		_Write_Adf7012_Reg
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           
  6099                           ;psect for function _Spi_Byte_Send
  6100  0CF3                     _Spi_Byte_Send:	
  6101                           
  6102                           ;incstack = 0
  6103                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  6104                           ;Spi_Byte_Send@data stored from wreg
  6105  0CF3  0020               	movlb	0	; select bank0
  6106  0CF4  00A7               	movwf	Spi_Byte_Send@data
  6107                           
  6108                           ;utility.c: 217: PORTAbits.RA2 = 0;
  6109  0CF5  110C               	bcf	12,2	;volatile
  6110                           
  6111                           ;utility.c: 218: uint8_t i;
  6112                           ;utility.c: 219: uint8_t data_to_send;
  6113                           ;utility.c: 220: data_to_send = data;
  6114  0CF6  0827               	movf	Spi_Byte_Send@data,w
  6115  0CF7  00A6               	movwf	??_Spi_Byte_Send
  6116  0CF8  0826               	movf	??_Spi_Byte_Send,w
  6117  0CF9  00A8               	movwf	Spi_Byte_Send@data_to_send
  6118                           
  6119                           ;utility.c: 221: for(i = 0; i <8; i++){
  6120  0CFA  01A9               	clrf	Spi_Byte_Send@i
  6121  0CFB                     L5:	
  6122  0CFB  3008               	movlw	8
  6123  0CFC  0229               	subwf	Spi_Byte_Send@i,w
  6124  0CFD  1803               	btfsc	3,0
  6125  0CFE  0008               	return
  6126                           
  6127                           ;utility.c: 223: if(data_to_send & 0x80)
  6128  0CFF  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  6129  0D00  2D03               	goto	l259
  6130                           
  6131                           ;utility.c: 224: PORTCbits.RC2 = 1;
  6132  0D01  150E               	bsf	14,2	;volatile
  6133  0D02  2D04               	goto	l1903
  6134  0D03                     l259:	
  6135                           
  6136                           ;utility.c: 225: else
  6137                           ;utility.c: 226: PORTCbits.RC2 = 0;
  6138  0D03  110E               	bcf	14,2	;volatile
  6139  0D04                     l1903:	
  6140                           
  6141                           ;utility.c: 228: data_to_send <<= 1;
  6142  0D04  1003               	clrc
  6143  0D05  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  6144                           
  6145                           ;utility.c: 230: PORTAbits.RA2 = 1;
  6146  0D06  150C               	bsf	12,2	;volatile
  6147                           
  6148                           ;utility.c: 231: Delay_ms(1);
  6149  0D07  3001               	movlw	1
  6150  0D08  00A0               	movwf	Delay_ms@time_to_delay
  6151  0D09  3000               	movlw	0
  6152  0D0A  00A1               	movwf	Delay_ms@time_to_delay+1
  6153  0D0B  318C  2484  318C   	fcall	_Delay_ms
  6154                           
  6155                           ;utility.c: 232: PORTAbits.RA2 = 0;
  6156  0D0E  0020               	movlb	0	; select bank0
  6157  0D0F  110C               	bcf	12,2	;volatile
  6158                           
  6159                           ;utility.c: 233: Delay_ms(1);
  6160  0D10  3001               	movlw	1
  6161  0D11  00A0               	movwf	Delay_ms@time_to_delay
  6162  0D12  3000               	movlw	0
  6163  0D13  00A1               	movwf	Delay_ms@time_to_delay+1
  6164  0D14  318C  2484  318C   	fcall	_Delay_ms
  6165  0D17  3001               	movlw	1
  6166  0D18  0020               	movlb	0	; select bank0
  6167  0D19  00A6               	movwf	??_Spi_Byte_Send
  6168  0D1A  0826               	movf	??_Spi_Byte_Send,w
  6169  0D1B  07A9               	addwf	Spi_Byte_Send@i,f
  6170  0D1C  2CFB               	goto	L5
  6171  0D1D                     __end_of_Spi_Byte_Send:	
  6172                           ;utility.c: 235: }
  6173                           ;utility.c: 236: return 1;
  6174                           ;	Return value of _Spi_Byte_Send is never used
  6175                           
  6176                           
  6177                           	psect	text33
  6178  0C84                     __ptext33:	
  6179 ;; *************** function _Delay_ms *****************
  6180 ;; Defined at:
  6181 ;;		line 39 in file "utility.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  i               2    4[BANK0 ] unsigned int 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;		None               void
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0, pclath, cstack
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6195 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6199 ;;Total ram usage:        6 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    5
  6202 ;; This function calls:
  6203 ;;		_Dac0_Start_Hold
  6204 ;; This function is called by:
  6205 ;;		_main
  6206 ;;		_Write_Adf7012_Reg
  6207 ;;		_Spi_Byte_Send
  6208 ;;		_Adf_Reset
  6209 ;;		_Adf_Lock
  6210 ;;		_Radio_Setup
  6211 ;;		_Ptt_On
  6212 ;;		_Ptt_Off
  6213 ;;		_Modem_Flush_Frame
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           
  6218                           ;psect for function _Delay_ms
  6219  0C84                     _Delay_ms:	
  6220                           
  6221                           ;utility.c: 41: uint16_t i=0;
  6222                           
  6223                           ;incstack = 0
  6224                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  6225  0C84  0020               	movlb	0	; select bank0
  6226  0C85  01A4               	clrf	Delay_ms@i
  6227  0C86  01A5               	clrf	Delay_ms@i+1
  6228                           
  6229                           ;utility.c: 43: Dac0_Start_Hold();
  6230  0C87  318B  2360  318C   	fcall	_Dac0_Start_Hold
  6231                           
  6232                           ;utility.c: 44: for(i=0; i<time_to_delay; i++){
  6233  0C8A  0020               	movlb	0	; select bank0
  6234  0C8B  01A4               	clrf	Delay_ms@i
  6235  0C8C  01A5               	clrf	Delay_ms@i+1
  6236  0C8D                     l229:	
  6237  0C8D  0821               	movf	Delay_ms@time_to_delay+1,w
  6238  0C8E  0225               	subwf	Delay_ms@i+1,w
  6239  0C8F  1D03               	skipz
  6240  0C90  2C93               	goto	u1155
  6241  0C91  0820               	movf	Delay_ms@time_to_delay,w
  6242  0C92  0224               	subwf	Delay_ms@i,w
  6243  0C93                     u1155:	
  6244  0C93  1803               	btfsc	3,0
  6245  0C94  0008               	return
  6246                           
  6247                           ;utility.c: 45: _delay((unsigned long)((1)*(32000000/4000.0)));
  6248  0C95  300B               	movlw	11
  6249  0C96  00A3               	movwf	??_Delay_ms+1
  6250  0C97  3062               	movlw	98
  6251  0C98  00A2               	movwf	??_Delay_ms
  6252  0C99                     u3137:	
  6253  0C99  0BA2               	decfsz	??_Delay_ms,f
  6254  0C9A  2C99               	goto	u3137
  6255  0C9B  0BA3               	decfsz	??_Delay_ms+1,f
  6256  0C9C  2C99               	goto	u3137
  6257  0C9D  0000               	nop
  6258  0C9E  3001               	movlw	1
  6259  0C9F  0020               	movlb	0	; select bank0
  6260  0CA0  07A4               	addwf	Delay_ms@i,f
  6261  0CA1  3000               	movlw	0
  6262  0CA2  3DA5               	addwfc	Delay_ms@i+1,f
  6263  0CA3  2C8D               	goto	l229
  6264  0CA4                     __end_of_Delay_ms:	
  6265                           
  6266                           	psect	text34
  6267  0B60                     __ptext34:	
  6268 ;; *************** function _Dac0_Start_Hold *****************
  6269 ;; Defined at:
  6270 ;;		line 270 in file "utility.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;		None               void
  6277 ;; Registers used:
  6278 ;;		wreg
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;Total ram usage:        0 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    4
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_main
  6295 ;;		_Delay_ms
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           
  6300                           ;psect for function _Dac0_Start_Hold
  6301  0B60                     _Dac0_Start_Hold:	
  6302                           
  6303                           ;utility.c: 271: DACEN = 1;
  6304                           
  6305                           ;incstack = 0
  6306                           ; Regs used in _Dac0_Start_Hold: [wreg]
  6307  0B60  0022               	movlb	2	; select bank2
  6308  0B61  1798               	bsf	24,7	;volatile
  6309                           
  6310                           ;utility.c: 272: DACCON1 = 0x10;
  6311  0B62  3010               	movlw	16
  6312  0B63  0099               	movwf	25	;volatile
  6313  0B64  0008               	return
  6314  0B65                     __end_of_Dac0_Start_Hold:	
  6315                           
  6316                           	psect	text35
  6317  0E1D                     __ptext35:	
  6318 ;; *************** function _Reverse_Array *****************
  6319 ;; Defined at:
  6320 ;;		line 193 in file "utility.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  input           1    wreg     PTR unsigned char 
  6323 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6324 ;;  length          1    7[BANK0 ] unsigned char 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  input           1   17[BANK0 ] PTR unsigned char 
  6327 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6328 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  6329 ;;  i               1   18[BANK0 ] unsigned char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  1    wreg      unsigned char 
  6332 ;; Registers used:
  6333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6339 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;Total ram usage:       12 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    5
  6346 ;; This function calls:
  6347 ;;		_memcpy
  6348 ;; This function is called by:
  6349 ;;		_Adf_Write_Register_Zero
  6350 ;;		_Adf_Write_Register_One
  6351 ;;		_Adf_Write_Register_Two
  6352 ;;		_Adf_Write_Register_Three
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           
  6357                           ;psect for function _Reverse_Array
  6358  0E1D                     _Reverse_Array:	
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6362                           ;Reverse_Array@input stored from wreg
  6363  0E1D  0020               	movlb	0	; select bank0
  6364  0E1E  00B1               	movwf	Reverse_Array@input
  6365                           
  6366                           ;utility.c: 194: uint8_t i = 0;
  6367  0E1F  01B2               	clrf	Reverse_Array@i
  6368                           
  6369                           ;utility.c: 195: uint8_t buffer_array[4] = {0};
  6370  0E20  0021               	movlb	1	; select bank1
  6371  0E21  0828               	movf	(Reverse_Array@F3014+3)^(0+128),w
  6372  0E22  0020               	movlb	0	; select bank0
  6373  0E23  00B0               	movwf	Reverse_Array@buffer_array+3
  6374  0E24  0021               	movlb	1	; select bank1
  6375  0E25  0827               	movf	(Reverse_Array@F3014+2)^(0+128),w
  6376  0E26  0020               	movlb	0	; select bank0
  6377  0E27  00AF               	movwf	Reverse_Array@buffer_array+2
  6378  0E28  0021               	movlb	1	; select bank1
  6379  0E29  0826               	movf	(Reverse_Array@F3014+1)^(0+128),w
  6380  0E2A  0020               	movlb	0	; select bank0
  6381  0E2B  00AE               	movwf	Reverse_Array@buffer_array+1
  6382  0E2C  0021               	movlb	1	; select bank1
  6383  0E2D  0825               	movf	Reverse_Array@F3014^(0+128),w
  6384  0E2E  0020               	movlb	0	; select bank0
  6385  0E2F  00AD               	movwf	Reverse_Array@buffer_array
  6386                           
  6387                           ;utility.c: 196: memcpy(buffer_array, input, length);
  6388  0E30  0831               	movf	Reverse_Array@input,w
  6389  0E31  00A8               	movwf	??_Reverse_Array
  6390  0E32  0828               	movf	??_Reverse_Array,w
  6391  0E33  00A0               	movwf	memcpy@s1
  6392  0E34  0827               	movf	Reverse_Array@length,w
  6393  0E35  00A9               	movwf	??_Reverse_Array+1
  6394  0E36  01AA               	clrf	??_Reverse_Array+2
  6395  0E37  0829               	movf	??_Reverse_Array+1,w
  6396  0E38  00A1               	movwf	memcpy@n
  6397  0E39  082A               	movf	??_Reverse_Array+2,w
  6398  0E3A  00A2               	movwf	memcpy@n+1
  6399  0E3B  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6400  0E3C  318C  24CA  318E   	fcall	_memcpy
  6401                           
  6402                           ;utility.c: 198: for(i = 0; i<length; i++){
  6403  0E3F  0020               	movlb	0	; select bank0
  6404  0E40  01B2               	clrf	Reverse_Array@i
  6405  0E41                     l1959:	
  6406  0E41  0827               	movf	Reverse_Array@length,w
  6407  0E42  0232               	subwf	Reverse_Array@i,w
  6408  0E43  1803               	btfsc	3,0
  6409  0E44  0008               	return
  6410                           
  6411                           ;utility.c: 199: *(input+i) = *(buffer_array+(length-1)-i);
  6412  0E45  30FF               	movlw	-1
  6413  0E46  0727               	addwf	Reverse_Array@length,w
  6414  0E47  00A8               	movwf	??_Reverse_Array
  6415  0E48  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6416  0E49  0728               	addwf	??_Reverse_Array,w
  6417  0E4A  00A9               	movwf	??_Reverse_Array+1
  6418  0E4B  0332               	decf	Reverse_Array@i,w
  6419  0E4C  3AFF               	xorlw	255
  6420  0E4D  0729               	addwf	??_Reverse_Array+1,w
  6421  0E4E  00AA               	movwf	??_Reverse_Array+2
  6422  0E4F  082A               	movf	??_Reverse_Array+2,w
  6423  0E50  0086               	movwf	6
  6424  0E51  0187               	clrf	7
  6425  0E52  0801               	movf	1,w
  6426  0E53  00AB               	movwf	??_Reverse_Array+3
  6427  0E54  0832               	movf	Reverse_Array@i,w
  6428  0E55  0731               	addwf	Reverse_Array@input,w
  6429  0E56  00AC               	movwf	??_Reverse_Array+4
  6430  0E57  082C               	movf	??_Reverse_Array+4,w
  6431  0E58  0086               	movwf	6
  6432  0E59  0187               	clrf	7
  6433  0E5A  082B               	movf	??_Reverse_Array+3,w
  6434  0E5B  0081               	movwf	1
  6435  0E5C  3001               	movlw	1
  6436  0E5D  00A8               	movwf	??_Reverse_Array
  6437  0E5E  0828               	movf	??_Reverse_Array,w
  6438  0E5F  07B2               	addwf	Reverse_Array@i,f
  6439  0E60  2E41               	goto	l1959
  6440  0E61                     __end_of_Reverse_Array:	
  6441                           ;utility.c: 200: }
  6442                           ;utility.c: 204: return 1;
  6443                           ;	Return value of _Reverse_Array is never used
  6444                           
  6445                           
  6446                           	psect	text36
  6447  0CCA                     __ptext36:	
  6448 ;; *************** function _memcpy *****************
  6449 ;; Defined at:
  6450 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  d1              1    wreg     PTR void 
  6453 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6454 ;;		 -> Reverse_Array@buffer_array(4), 
  6455 ;;  s1              1    0[BANK0 ] PTR const void 
  6456 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6457 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6458 ;;  n               2    1[BANK0 ] unsigned int 
  6459 ;; Auto vars:     Size  Location     Type
  6460 ;;  d1              1    6[BANK0 ] PTR void 
  6461 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6462 ;;		 -> Reverse_Array@buffer_array(4), 
  6463 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6464 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6465 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6466 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6467 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6468 ;;		 -> Reverse_Array@buffer_array(4), 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      PTR void 
  6471 ;; Registers used:
  6472 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6478 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6481 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6482 ;;Total ram usage:        7 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    4
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_Reverse_Array
  6489 ;;		_Adf_Write_Register_Zero
  6490 ;;		_Adf_Write_Register_One
  6491 ;;		_Adf_Write_Register_Two
  6492 ;;		_Adf_Write_Register_Three
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           
  6497                           ;psect for function _memcpy
  6498  0CCA                     _memcpy:	
  6499                           
  6500                           ;incstack = 0
  6501                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6502                           ;memcpy@d1 stored from wreg
  6503  0CCA  0020               	movlb	0	; select bank0
  6504  0CCB  00A6               	movwf	memcpy@d1
  6505  0CCC  0820               	movf	memcpy@s1,w
  6506  0CCD  00A3               	movwf	??_memcpy
  6507  0CCE  0823               	movf	??_memcpy,w
  6508  0CCF  00A5               	movwf	memcpy@s
  6509  0CD0  0826               	movf	memcpy@d1,w
  6510  0CD1  00A3               	movwf	??_memcpy
  6511  0CD2  0823               	movf	??_memcpy,w
  6512  0CD3  00A4               	movwf	memcpy@d
  6513  0CD4                     l1925:	
  6514  0CD4  3001               	movlw	1
  6515  0CD5  02A1               	subwf	memcpy@n,f
  6516  0CD6  3000               	movlw	0
  6517  0CD7  3BA2               	subwfb	memcpy@n+1,f
  6518  0CD8  30FF               	movlw	255
  6519  0CD9  0622               	xorwf	memcpy@n+1,w
  6520  0CDA  1D03               	skipz
  6521  0CDB  2CDE               	goto	u1195
  6522  0CDC  30FF               	movlw	255
  6523  0CDD  0621               	xorwf	memcpy@n,w
  6524  0CDE                     u1195:	
  6525  0CDE  1903               	btfsc	3,2
  6526  0CDF  0008               	return
  6527  0CE0  0825               	movf	memcpy@s,w
  6528  0CE1  0086               	movwf	6
  6529  0CE2  0187               	clrf	7
  6530  0CE3  0801               	movf	1,w
  6531  0CE4  00A3               	movwf	??_memcpy
  6532  0CE5  0824               	movf	memcpy@d,w
  6533  0CE6  0086               	movwf	6
  6534  0CE7  0187               	clrf	7
  6535  0CE8  0823               	movf	??_memcpy,w
  6536  0CE9  0081               	movwf	1
  6537  0CEA  3001               	movlw	1
  6538  0CEB  00A3               	movwf	??_memcpy
  6539  0CEC  0823               	movf	??_memcpy,w
  6540  0CED  07A5               	addwf	memcpy@s,f
  6541  0CEE  3001               	movlw	1
  6542  0CEF  00A3               	movwf	??_memcpy
  6543  0CF0  0823               	movf	??_memcpy,w
  6544  0CF1  07A4               	addwf	memcpy@d,f
  6545  0CF2  2CD4               	goto	l1925
  6546  0CF3                     __end_of_memcpy:	
  6547                           ;	Return value of _memcpy is never used
  6548                           
  6549                           
  6550                           	psect	text37
  6551  0B54                     __ptext37:	
  6552 ;; *************** function _Adf_Locked *****************
  6553 ;; Defined at:
  6554 ;;		line 275 in file "adf7012.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;		None
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;		None
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      unsigned char 
  6561 ;; Registers used:
  6562 ;;		wreg, pclath, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6572 ;;Total ram usage:        0 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; Hardware stack levels required when called:    5
  6575 ;; This function calls:
  6576 ;;		_Read_Adf7012_Muxout
  6577 ;; This function is called by:
  6578 ;;		_Adf_Lock
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           
  6583                           ;psect for function _Adf_Locked
  6584  0B54                     _Adf_Locked:	
  6585                           
  6586                           ;adf7012.c: 277: return Read_Adf7012_Muxout();
  6587                           
  6588                           ;incstack = 0
  6589                           ; Regs used in _Adf_Locked: [wreg+pclath+cstack]
  6590  0B54  318B  238F         	fcall	_Read_Adf7012_Muxout
  6591  0B56  0008               	return
  6592  0B57                     __end_of_Adf_Locked:	
  6593                           
  6594                           	psect	text38
  6595  0B8F                     __ptext38:	
  6596 ;; *************** function _Read_Adf7012_Muxout *****************
  6597 ;; Defined at:
  6598 ;;		line 59 in file "utility.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;		None
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;		None
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      unsigned char 
  6605 ;; Registers used:
  6606 ;;		wreg
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;Total ram usage:        0 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    4
  6619 ;; This function calls:
  6620 ;;		Nothing
  6621 ;; This function is called by:
  6622 ;;		_Adf_Locked
  6623 ;;		_Ptt_On
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           
  6628                           ;psect for function _Read_Adf7012_Muxout
  6629  0B8F                     _Read_Adf7012_Muxout:	
  6630                           
  6631                           ;utility.c: 61: if(PORTCbits.RC5)
  6632                           
  6633                           ;incstack = 0
  6634                           ; Regs used in _Read_Adf7012_Muxout: [wreg]
  6635  0B8F  0020               	movlb	0	; select bank0
  6636  0B90  1E8E               	btfss	14,5	;volatile
  6637  0B91  2B94               	goto	l2065
  6638                           
  6639                           ;utility.c: 62: return 1;
  6640  0B92  3001               	movlw	1
  6641  0B93  0008               	return
  6642  0B94                     l2065:	
  6643                           
  6644                           ;utility.c: 63: else
  6645                           ;utility.c: 64: return 0;
  6646  0B94  3000               	movlw	0
  6647  0B95  0008               	return
  6648  0B96                     __end_of_Read_Adf7012_Muxout:	
  6649                           
  6650                           	psect	text39
  6651  0B6A                     __ptext39:	
  6652 ;; *************** function _Adc1_Start *****************
  6653 ;; Defined at:
  6654 ;;		line 281 in file "utility.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;		None
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;		None
  6659 ;; Return value:  Size  Location     Type
  6660 ;;		None               void
  6661 ;; Registers used:
  6662 ;;		None
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    4
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_main
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           
  6683                           ;psect for function _Adc1_Start
  6684  0B6A                     _Adc1_Start:	
  6685                           
  6686                           ;utility.c: 282: ADIF = 0;
  6687                           
  6688                           ;incstack = 0
  6689                           ; Regs used in _Adc1_Start: []
  6690  0B6A  0020               	movlb	0	; select bank0
  6691  0B6B  1311               	bcf	17,6	;volatile
  6692                           
  6693                           ;utility.c: 283: ADON = 1;
  6694  0B6C  0021               	movlb	1	; select bank1
  6695  0B6D  141D               	bsf	29,0	;volatile
  6696                           
  6697                           ;utility.c: 284: ADIE = 1;
  6698  0B6E  1711               	bsf	17,6	;volatile
  6699  0B6F  0008               	return
  6700  0B70                     __end_of_Adc1_Start:	
  6701                           
  6702                           	psect	intentry
  6703  0004                     __pintentry:	
  6704 ;; *************** function _global_interrupt *****************
  6705 ;; Defined at:
  6706 ;;		line 30 in file "main.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;		None
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;		None               void
  6713 ;; Registers used:
  6714 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6724 ;;Total ram usage:        2 bytes
  6725 ;; Hardware stack levels used:    1
  6726 ;; Hardware stack levels required when called:    3
  6727 ;; This function calls:
  6728 ;;		_ADC_ISR
  6729 ;;		_I2C_ISR
  6730 ;;		_TIMER0_ISR
  6731 ;;		_TIMER1_ISR
  6732 ;; This function is called by:
  6733 ;;		Interrupt level 1
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737  0004                     _global_interrupt:	
  6738                           
  6739                           ;incstack = 0
  6740                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6741  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6742  0005  3180               	pagesel	$
  6743  0006  0020               	movlb	0	; select bank0
  6744  0007  087F               	movf	127,w
  6745  0008  00F9               	movwf	??_global_interrupt+1
  6746                           
  6747                           ;main.c: 32: INTCON &= ~0x80;
  6748  0009  307F               	movlw	127
  6749  000A  00F8               	movwf	??_global_interrupt
  6750  000B  0878               	movf	??_global_interrupt,w
  6751  000C  058B               	andwf	11,f	;volatile
  6752                           
  6753                           ;main.c: 35: if(ADIF){
  6754  000D  1F11               	btfss	17,6	;volatile
  6755  000E  2813               	goto	i1l155
  6756                           
  6757                           ;main.c: 36: ADC_ISR();
  6758  000F  318B  2396  3180   	fcall	_ADC_ISR
  6759                           
  6760                           ;main.c: 37: return;
  6761  0012  2826               	goto	i1l156
  6762  0013                     i1l155:	
  6763                           
  6764                           ;main.c: 38: }
  6765                           ;main.c: 43: if(PIR1 & 0x04){
  6766  0013  1D11               	btfss	17,2	;volatile
  6767  0014  2819               	goto	i1l157
  6768                           
  6769                           ;main.c: 44: TIMER1_ISR();
  6770  0015  318D  2549  3180   	fcall	_TIMER1_ISR
  6771                           
  6772                           ;main.c: 45: return;
  6773  0018  2826               	goto	i1l156
  6774  0019                     i1l157:	
  6775                           
  6776                           ;main.c: 46: }
  6777                           ;main.c: 51: if(INTCON & 0x04){
  6778  0019  1D0B               	btfss	11,2	;volatile
  6779  001A  281F               	goto	i1l158
  6780                           
  6781                           ;main.c: 52: TIMER0_ISR();
  6782  001B  318B  2388  3180   	fcall	_TIMER0_ISR
  6783                           
  6784                           ;main.c: 53: return;
  6785  001E  2826               	goto	i1l156
  6786  001F                     i1l158:	
  6787                           
  6788                           ;main.c: 54: }
  6789                           ;main.c: 59: if(SSP1IF){
  6790  001F  1D91               	btfss	17,3	;volatile
  6791  0020  2825               	goto	i1l159
  6792                           
  6793                           ;main.c: 60: I2C_ISR();
  6794  0021  318E  26B8  3180   	fcall	_I2C_ISR
  6795                           
  6796                           ;main.c: 61: return;
  6797  0024  2826               	goto	i1l156
  6798  0025                     i1l159:	
  6799                           
  6800                           ;main.c: 62: }
  6801                           ;main.c: 65: INTCON |= 0x80;
  6802  0025  178B               	bsf	11,7	;volatile
  6803  0026                     i1l156:	
  6804  0026  0879               	movf	??_global_interrupt+1,w
  6805  0027  0020               	movlb	0	; select bank0
  6806  0028  00FF               	movwf	127
  6807  0029  107E               	bcf	126,0	;clear compiler interrupt flag
  6808  002A  0009               	retfie
  6809  002B                     __end_of_global_interrupt:	
  6810                           
  6811                           	psect	text41
  6812  0D49                     __ptext41:	
  6813 ;; *************** function _TIMER1_ISR *****************
  6814 ;; Defined at:
  6815 ;;		line 44 in file "isr.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;		None
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;		None               void
  6822 ;; Registers used:
  6823 ;;		wreg, status,2, status,0
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6833 ;;Total ram usage:        1 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_global_interrupt
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           
  6843                           ;psect for function _TIMER1_ISR
  6844  0D49                     _TIMER1_ISR:	
  6845                           
  6846                           ;isr.c: 45: Change_to_New_Baud = 1;
  6847                           
  6848                           ;incstack = 0
  6849                           ; Regs used in _TIMER1_ISR: [wreg+status,2+status,0]
  6850  0D49  0021               	movlb	1	; select bank1
  6851  0D4A  01BE               	clrf	_Change_to_New_Baud^(0+128)
  6852  0D4B  0ABE               	incf	_Change_to_New_Baud^(0+128),f
  6853                           
  6854                           ;isr.c: 48: TMR1H = 0x00;
  6855  0D4C  0020               	movlb	0	; select bank0
  6856  0D4D  0197               	clrf	23	;volatile
  6857                           
  6858                           ;isr.c: 49: TMR1L = 0x00;
  6859  0D4E  0196               	clrf	22	;volatile
  6860                           
  6861                           ;isr.c: 51: PIR1 &= ~0x04;
  6862  0D4F  30FB               	movlw	251
  6863  0D50  00F0               	movwf	??_TIMER1_ISR
  6864  0D51  0870               	movf	??_TIMER1_ISR,w
  6865  0D52  0591               	andwf	17,f	;volatile
  6866                           
  6867                           ;isr.c: 53: Systick_Counter += 1;
  6868  0D53  3001               	movlw	1
  6869  0D54  0021               	movlb	1	; select bank1
  6870  0D55  07B1               	addwf	_Systick_Counter^(0+128),f
  6871  0D56  3000               	movlw	0
  6872  0D57  3DB2               	addwfc	(_Systick_Counter+1)^(0+128),f
  6873  0D58  3000               	movlw	0
  6874  0D59  3DB3               	addwfc	(_Systick_Counter+2)^(0+128),f
  6875  0D5A  3000               	movlw	0
  6876  0D5B  3DB4               	addwfc	(_Systick_Counter+3)^(0+128),f
  6877                           
  6878                           ;isr.c: 54: if(Systick_Counter > 100000){
  6879  0D5C  3000               	movlw	0
  6880  0D5D  0234               	subwf	(_Systick_Counter+3)^(0+128),w
  6881  0D5E  1D03               	skipz
  6882  0D5F  2D6A               	goto	u194_25
  6883  0D60  3001               	movlw	1
  6884  0D61  0233               	subwf	(_Systick_Counter+2)^(0+128),w
  6885  0D62  1D03               	skipz
  6886  0D63  2D6A               	goto	u194_25
  6887  0D64  3086               	movlw	134
  6888  0D65  0232               	subwf	(_Systick_Counter+1)^(0+128),w
  6889  0D66  1D03               	skipz
  6890  0D67  2D6A               	goto	u194_25
  6891  0D68  30A1               	movlw	161
  6892  0D69  0231               	subwf	_Systick_Counter^(0+128),w
  6893  0D6A                     u194_25:	
  6894  0D6A  1C03               	skipc
  6895  0D6B  0008               	return
  6896                           
  6897                           ;isr.c: 55: Systick_Counter = 0;
  6898  0D6C  3000               	movlw	0
  6899  0D6D  00B4               	movwf	(_Systick_Counter+3)^(0+128)
  6900  0D6E  3000               	movlw	0
  6901  0D6F  00B3               	movwf	(_Systick_Counter+2)^(0+128)
  6902  0D70  3000               	movlw	0
  6903  0D71  00B2               	movwf	(_Systick_Counter+1)^(0+128)
  6904  0D72  3000               	movlw	0
  6905  0D73  00B1               	movwf	_Systick_Counter^(0+128)
  6906                           
  6907                           ;isr.c: 56: ADCON0 |= 0b00000010;
  6908  0D74  149D               	bsf	29,1	;volatile
  6909  0D75  0008               	return
  6910  0D76                     __end_of_TIMER1_ISR:	
  6911                           
  6912                           	psect	text42
  6913  0B88                     __ptext42:	
  6914 ;; *************** function _TIMER0_ISR *****************
  6915 ;; Defined at:
  6916 ;;		line 61 in file "isr.c"
  6917 ;; Parameters:    Size  Location     Type
  6918 ;;		None
  6919 ;; Auto vars:     Size  Location     Type
  6920 ;;		None
  6921 ;; Return value:  Size  Location     Type
  6922 ;;		None               void
  6923 ;; Registers used:
  6924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;Total ram usage:        1 bytes
  6935 ;; Hardware stack levels used:    1
  6936 ;; Hardware stack levels required when called:    2
  6937 ;; This function calls:
  6938 ;;		_Sinus_Generator
  6939 ;; This function is called by:
  6940 ;;		_global_interrupt
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           
  6945                           ;psect for function _TIMER0_ISR
  6946  0B88                     _TIMER0_ISR:	
  6947                           
  6948                           ;isr.c: 62: Sinus_Generator();
  6949                           
  6950                           ;incstack = 0
  6951                           ; Regs used in _TIMER0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6952  0B88  3186  2630         	fcall	_Sinus_Generator
  6953                           
  6954                           ;isr.c: 63: INTCON &= ~0x04;
  6955  0B8A  30FB               	movlw	251
  6956  0B8B  00F7               	movwf	??_TIMER0_ISR
  6957  0B8C  0877               	movf	??_TIMER0_ISR,w
  6958  0B8D  058B               	andwf	11,f	;volatile
  6959  0B8E  0008               	return
  6960  0B8F                     __end_of_TIMER0_ISR:	
  6961                           
  6962                           	psect	text43
  6963  0630                     __ptext43:	
  6964 ;; *************** function _Sinus_Generator *****************
  6965 ;; Defined at:
  6966 ;;		line 81 in file "audio_tone.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;		None
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  6971 ;; Return value:  Size  Location     Type
  6972 ;;		None               void
  6973 ;; Registers used:
  6974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6975 ;; Tracked objects:
  6976 ;;		On entry : 0/0
  6977 ;;		On exit  : 0/0
  6978 ;;		Unchanged: 0/0
  6979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6982 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6983 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6984 ;;Total ram usage:        6 bytes
  6985 ;; Hardware stack levels used:    1
  6986 ;; Hardware stack levels required when called:    1
  6987 ;; This function calls:
  6988 ;;		_Send_Vcxo_Signal
  6989 ;;		_Timer0_Stop
  6990 ;; This function is called by:
  6991 ;;		_TIMER0_ISR
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           
  6996                           ;psect for function _Sinus_Generator
  6997  0630                     _Sinus_Generator:	
  6998                           
  6999                           ;audio_tone.c: 83: uint8_t Audio_Signal;
  7000                           ;audio_tone.c: 84: static uint8_t tone_index = 0;
  7001                           ;audio_tone.c: 85: if (MODEM_TRANSMITTING == 1) {
  7002                           
  7003                           ;incstack = 0
  7004                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7005  0630  0021               	movlb	1	; select bank1
  7006  0631  083F               	movf	_MODEM_TRANSMITTING^(0+128),w
  7007  0632  3A01               	xorlw	1
  7008  0633  1D03               	skipz
  7009  0634  0008               	return
  7010                           
  7011                           ;audio_tone.c: 87: if (packet_pos == modem_packet_size) {
  7012  0635  087D               	movf	_modem_packet_size+3,w
  7013  0636  0638               	xorwf	(_packet_pos+3)^(0+128),w
  7014  0637  1D03               	skipz
  7015  0638  2E43               	goto	u168_25
  7016  0639  087C               	movf	_modem_packet_size+2,w
  7017  063A  0637               	xorwf	(_packet_pos+2)^(0+128),w
  7018  063B  1D03               	skipz
  7019  063C  2E43               	goto	u168_25
  7020  063D  087B               	movf	_modem_packet_size+1,w
  7021  063E  0636               	xorwf	(_packet_pos+1)^(0+128),w
  7022  063F  1D03               	skipz
  7023  0640  2E43               	goto	u168_25
  7024  0641  087A               	movf	_modem_packet_size,w
  7025  0642  0635               	xorwf	_packet_pos^(0+128),w
  7026  0643                     u168_25:	
  7027  0643  1D03               	skipz
  7028  0644  2E50               	goto	i1l2175
  7029                           
  7030                           ;audio_tone.c: 88: MODEM_TRANSMITTING = 0;
  7031  0645  01BF               	clrf	_MODEM_TRANSMITTING^(0+128)
  7032                           
  7033                           ;audio_tone.c: 89: Timer0_Stop();
  7034  0646  318B  2357  3186   	fcall	_Timer0_Stop
  7035                           
  7036                           ;audio_tone.c: 91: Send_Vcxo_Signal(0x10);
  7037  0649  3010               	movlw	16
  7038  064A  318B  235B         	fcall	_Send_Vcxo_Signal
  7039                           
  7040                           ;audio_tone.c: 93: PTT_OFF = 1;
  7041  064C  0021               	movlb	1	; select bank1
  7042  064D  01C0               	clrf	_PTT_OFF^(0+128)
  7043  064E  0AC0               	incf	_PTT_OFF^(0+128),f
  7044                           
  7045                           ;audio_tone.c: 95: goto end_generator;
  7046  064F  0008               	return
  7047  0650                     i1l2175:	
  7048                           
  7049                           ;audio_tone.c: 96: }
  7050                           ;audio_tone.c: 99: if (current_sample_in_baud == 0) {
  7051  0650  08C5               	movf	_current_sample_in_baud^(0+128),f
  7052  0651  1D03               	skipz
  7053  0652  2E92               	goto	i1l2195
  7054                           
  7055                           ;audio_tone.c: 100: if ((packet_pos & 7) == 0)
  7056  0653  3007               	movlw	7
  7057  0654  0535               	andwf	_packet_pos^(0+128),w
  7058  0655  00F1               	movwf	??_Sinus_Generator
  7059  0656  3000               	movlw	0
  7060  0657  0536               	andwf	(_packet_pos+1)^(0+128),w
  7061  0658  00F2               	movwf	??_Sinus_Generator+1
  7062  0659  3000               	movlw	0
  7063  065A  0537               	andwf	(_packet_pos+2)^(0+128),w
  7064  065B  00F3               	movwf	??_Sinus_Generator+2
  7065  065C  3000               	movlw	0
  7066  065D  0538               	andwf	(_packet_pos+3)^(0+128),w
  7067  065E  00F4               	movwf	??_Sinus_Generator+3
  7068  065F  0874               	movf	??_Sinus_Generator+3,w
  7069  0660  0473               	iorwf	??_Sinus_Generator+2,w
  7070  0661  0472               	iorwf	??_Sinus_Generator+1,w
  7071  0662  0471               	iorwf	??_Sinus_Generator,w
  7072  0663  1D03               	skipz
  7073  0664  2E7D               	goto	i1l2181
  7074                           
  7075                           ;audio_tone.c: 101: current_byte = modem_packet[packet_pos >> 3];
  7076  0665  0835               	movf	_packet_pos^(0+128),w
  7077  0666  00F1               	movwf	??_Sinus_Generator
  7078  0667  0836               	movf	(_packet_pos+1)^(0+128),w
  7079  0668  00F2               	movwf	??_Sinus_Generator+1
  7080  0669  0837               	movf	(_packet_pos+2)^(0+128),w
  7081  066A  00F3               	movwf	??_Sinus_Generator+2
  7082  066B  0838               	movf	(_packet_pos+3)^(0+128),w
  7083  066C  00F4               	movwf	??_Sinus_Generator+3
  7084  066D  3003               	movlw	3
  7085  066E                     u171_25:	
  7086  066E  36F4               	lsrf	??_Sinus_Generator+3,f
  7087  066F  0CF3               	rrf	??_Sinus_Generator+2,f
  7088  0670  0CF2               	rrf	??_Sinus_Generator+1,f
  7089  0671  0CF1               	rrf	??_Sinus_Generator,f
  7090  0672  0B89               	decfsz	9,f
  7091  0673  2E6E               	goto	u171_25
  7092  0674  0871               	movf	??_Sinus_Generator,w
  7093  0675  3EA0               	addlw	_modem_packet& (0+255)
  7094  0676  0086               	movwf	6
  7095  0677  3001               	movlw	1	; select bank3/4
  7096  0678  0087               	movwf	7
  7097  0679  0801               	movf	1,w
  7098  067A  00F5               	movwf	??_Sinus_Generator+4
  7099  067B  0875               	movf	??_Sinus_Generator+4,w
  7100  067C  2E80               	goto	L6
  7101  067D                     i1l2181:	
  7102                           
  7103                           ;audio_tone.c: 102: else
  7104                           ;audio_tone.c: 103: current_byte = current_byte >> 1 ;
  7105  067D  3644               	lsrf	_current_byte^(0+128),w
  7106  067E  00F1               	movwf	??_Sinus_Generator
  7107  067F  0871               	movf	??_Sinus_Generator,w
  7108  0680                     L6:	
  7109  0680  00C4               	movwf	_current_byte^(0+128)
  7110                           
  7111                           ;audio_tone.c: 104: if ((current_byte & 0x01) == 0) {
  7112  0681  1844               	btfsc	_current_byte^(0+128),0
  7113  0682  2E92               	goto	i1l2195
  7114                           
  7115                           ;audio_tone.c: 106: if(tone_index){
  7116  0683  083D               	movf	Sinus_Generator@tone_index^(0+128),w
  7117  0684  1903               	btfsc	3,2
  7118  0685  2E8C               	goto	i1l2191
  7119                           
  7120                           ;audio_tone.c: 107: phase_delta = PHASE_DELTA_1200;
  7121  0686  0829               	movf	_PHASE_DELTA_1200^(0+128),w
  7122  0687  00F1               	movwf	??_Sinus_Generator
  7123  0688  0871               	movf	??_Sinus_Generator,w
  7124  0689  00C8               	movwf	_phase_delta^(0+128)
  7125                           
  7126                           ;audio_tone.c: 108: tone_index = 0;
  7127  068A  01BD               	clrf	Sinus_Generator@tone_index^(0+128)
  7128                           
  7129                           ;audio_tone.c: 109: }
  7130  068B  2E92               	goto	i1l2195
  7131  068C                     i1l2191:	
  7132                           
  7133                           ;audio_tone.c: 110: else{
  7134                           ;audio_tone.c: 111: phase_delta = PHASE_DELTA_2200;
  7135  068C  082D               	movf	_PHASE_DELTA_2200^(0+128),w
  7136  068D  00F1               	movwf	??_Sinus_Generator
  7137  068E  0871               	movf	??_Sinus_Generator,w
  7138  068F  00C8               	movwf	_phase_delta^(0+128)
  7139                           
  7140                           ;audio_tone.c: 112: tone_index = 1;
  7141  0690  01BD               	clrf	Sinus_Generator@tone_index^(0+128)
  7142  0691  0ABD               	incf	Sinus_Generator@tone_index^(0+128),f
  7143  0692                     i1l2195:	
  7144                           
  7145                           ;audio_tone.c: 113: }
  7146                           ;audio_tone.c: 114: }
  7147                           ;audio_tone.c: 115: }
  7148                           ;audio_tone.c: 117: phase += phase_delta;
  7149  0692  0848               	movf	_phase_delta^(0+128),w
  7150  0693  00F1               	movwf	??_Sinus_Generator
  7151  0694  0871               	movf	??_Sinus_Generator,w
  7152  0695  0020               	movlb	0	; select bank0
  7153  0696  07EF               	addwf	_phase,f
  7154                           
  7155                           ;audio_tone.c: 118: if(phase >= TABLE_SIZE)
  7156  0697  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  7157  0698  0084               	movwf	4
  7158  0699  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  7159  069A  0085               	movwf	5
  7160  069B  3F00               	moviw [0]fsr0
  7161  069C  00F1               	movwf	??_Sinus_Generator
  7162  069D  3F01               	moviw [1]fsr0
  7163  069E  00F2               	movwf	??_Sinus_Generator+1
  7164  069F  0872               	movf	??_Sinus_Generator+1,w
  7165  06A0  3A80               	xorlw	128
  7166  06A1  3C80               	sublw	128
  7167  06A2  1D03               	skipz
  7168  06A3  2EA6               	goto	u174_25
  7169  06A4  0871               	movf	??_Sinus_Generator,w
  7170  06A5  026F               	subwf	_phase,w
  7171  06A6                     u174_25:	
  7172  06A6  1C03               	skipc
  7173  06A7  2EB4               	goto	i1l2201
  7174                           
  7175                           ;audio_tone.c: 119: phase = phase - TABLE_SIZE;
  7176  06A8  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  7177  06A9  0084               	movwf	4
  7178  06AA  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  7179  06AB  0085               	movwf	5
  7180  06AC  0800               	movf	0,w	;code access
  7181  06AD  3AFF               	xorlw	255
  7182  06AE  3E01               	addlw	1
  7183  06AF  0020               	movlb	0	; select bank0
  7184  06B0  076F               	addwf	_phase,w
  7185  06B1  00F1               	movwf	??_Sinus_Generator
  7186  06B2  0871               	movf	??_Sinus_Generator,w
  7187  06B3  00EF               	movwf	_phase
  7188  06B4                     i1l2201:	
  7189                           
  7190                           ;audio_tone.c: 122: Audio_Signal = *(sine_table2 + phase);
  7191  06B4  0020               	movlb	0	; select bank0
  7192  06B5  086F               	movf	_phase,w
  7193  06B6  3E00               	addlw	low (_sine_table2| (0+32768))
  7194  06B7  0084               	movwf	4
  7195  06B8  3084               	movlw	high (_sine_table2| (0+32768))
  7196  06B9  1803               	skipnc
  7197  06BA  3E01               	addlw	1
  7198  06BB  0085               	movwf	5
  7199  06BC  0800               	movf	0,w	;code access
  7200  06BD  00F1               	movwf	??_Sinus_Generator
  7201  06BE  0871               	movf	??_Sinus_Generator,w
  7202  06BF  00F6               	movwf	Sinus_Generator@Audio_Signal
  7203                           
  7204                           ;audio_tone.c: 123: Send_Vcxo_Signal(Audio_Signal);
  7205  06C0  0876               	movf	Sinus_Generator@Audio_Signal,w
  7206  06C1  318B  235B  3186   	fcall	_Send_Vcxo_Signal
  7207                           
  7208                           ;audio_tone.c: 125: current_sample_in_baud++;
  7209  06C4  3001               	movlw	1
  7210  06C5  00F1               	movwf	??_Sinus_Generator
  7211  06C6  0871               	movf	??_Sinus_Generator,w
  7212  06C7  0021               	movlb	1	; select bank1
  7213  06C8  07C5               	addwf	_current_sample_in_baud^(0+128),f
  7214                           
  7215                           ;audio_tone.c: 127: if(Change_to_New_Baud == 1) {
  7216  06C9  083E               	movf	_Change_to_New_Baud^(0+128),w
  7217  06CA  3A01               	xorlw	1
  7218  06CB  1D03               	skipz
  7219  06CC  0008               	return
  7220                           
  7221                           ;audio_tone.c: 128: current_sample_in_baud = 0;
  7222  06CD  01C5               	clrf	_current_sample_in_baud^(0+128)
  7223                           
  7224                           ;audio_tone.c: 129: packet_pos++;
  7225  06CE  3001               	movlw	1
  7226  06CF  07B5               	addwf	_packet_pos^(0+128),f
  7227  06D0  3000               	movlw	0
  7228  06D1  3DB6               	addwfc	(_packet_pos+1)^(0+128),f
  7229  06D2  3000               	movlw	0
  7230  06D3  3DB7               	addwfc	(_packet_pos+2)^(0+128),f
  7231  06D4  3000               	movlw	0
  7232  06D5  3DB8               	addwfc	(_packet_pos+3)^(0+128),f
  7233                           
  7234                           ;audio_tone.c: 130: Change_to_New_Baud = 0;
  7235  06D6  01BE               	clrf	_Change_to_New_Baud^(0+128)
  7236                           
  7237                           ;audio_tone.c: 131: }
  7238                           ;audio_tone.c: 133: }
  7239                           ;audio_tone.c: 135: end_generator:
  7240  06D7  0008               	return
  7241  06D8                     __end_of_Sinus_Generator:	
  7242                           ;audio_tone.c: 137: return;
  7243                           
  7244                           
  7245                           	psect	text44
  7246  0B57                     __ptext44:	
  7247 ;; *************** function _Timer0_Stop *****************
  7248 ;; Defined at:
  7249 ;;		line 244 in file "utility.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;		None
  7252 ;; Auto vars:     Size  Location     Type
  7253 ;;		None
  7254 ;; Return value:  Size  Location     Type
  7255 ;;		None               void
  7256 ;; Registers used:
  7257 ;;		status,2
  7258 ;; Tracked objects:
  7259 ;;		On entry : 0/0
  7260 ;;		On exit  : 0/0
  7261 ;;		Unchanged: 0/0
  7262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7267 ;;Total ram usage:        0 bytes
  7268 ;; Hardware stack levels used:    1
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_Sinus_Generator
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276                           
  7277                           ;psect for function _Timer0_Stop
  7278  0B57                     _Timer0_Stop:	
  7279                           
  7280                           ;utility.c: 245: TMR0IE = 0;
  7281                           
  7282                           ;incstack = 0
  7283                           ; Regs used in _Timer0_Stop: [status,2]
  7284  0B57  128B               	bcf	11,5	;volatile
  7285                           
  7286                           ;utility.c: 246: TMR0 = 0x00;
  7287  0B58  0020               	movlb	0	; select bank0
  7288  0B59  0195               	clrf	21	;volatile
  7289  0B5A  0008               	return
  7290  0B5B                     __end_of_Timer0_Stop:	
  7291                           
  7292                           	psect	text45
  7293  0B5B                     __ptext45:	
  7294 ;; *************** function _Send_Vcxo_Signal *****************
  7295 ;; Defined at:
  7296 ;;		line 103 in file "utility.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;  value           1    wreg     unsigned char 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  value           1    0[COMMON] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      unsigned char 
  7303 ;; Registers used:
  7304 ;;		wreg
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7313 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7314 ;;Total ram usage:        1 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_Sinus_Generator
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           
  7324                           ;psect for function _Send_Vcxo_Signal
  7325  0B5B                     _Send_Vcxo_Signal:	
  7326                           
  7327                           ;incstack = 0
  7328                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  7329                           ;Send_Vcxo_Signal@value stored from wreg
  7330  0B5B  00F0               	movwf	Send_Vcxo_Signal@value
  7331                           
  7332                           ;utility.c: 105: DACCON1 = value;
  7333  0B5C  0870               	movf	Send_Vcxo_Signal@value,w
  7334  0B5D  0022               	movlb	2	; select bank2
  7335  0B5E  0099               	movwf	25	;volatile
  7336  0B5F  0008               	return
  7337  0B60                     __end_of_Send_Vcxo_Signal:	
  7338                           ;utility.c: 106: return 1;
  7339                           ;	Return value of _Send_Vcxo_Signal is never used
  7340                           
  7341                           
  7342                           	psect	text46
  7343  0EB8                     __ptext46:	
  7344 ;; *************** function _I2C_ISR *****************
  7345 ;; Defined at:
  7346 ;;		line 66 in file "isr.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;		None
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;		None
  7351 ;; Return value:  Size  Location     Type
  7352 ;;		None               void
  7353 ;; Registers used:
  7354 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;Total ram usage:        1 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; This function calls:
  7367 ;;		Nothing
  7368 ;; This function is called by:
  7369 ;;		_global_interrupt
  7370 ;; This function uses a non-reentrant model
  7371 ;;
  7372                           
  7373                           
  7374                           ;psect for function _I2C_ISR
  7375  0EB8                     _I2C_ISR:	
  7376                           
  7377                           ;isr.c: 67: if(!SSP1STATbits.D_nA){
  7378                           
  7379                           ;incstack = 0
  7380                           ; Regs used in _I2C_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7381  0EB8  0024               	movlb	4	; select bank4
  7382  0EB9  1A94               	btfsc	20,5	;volatile
  7383  0EBA  2ED5               	goto	i1l581
  7384                           
  7385                           ;isr.c: 68: SSP1IF = 0;
  7386  0EBB  0020               	movlb	0	; select bank0
  7387  0EBC  1191               	bcf	17,3	;volatile
  7388                           
  7389                           ;isr.c: 69: i2c_address = SSP1BUF;
  7390  0EBD  0024               	movlb	4	; select bank4
  7391  0EBE  0811               	movf	17,w	;volatile
  7392  0EBF  00F0               	movwf	??_I2C_ISR
  7393  0EC0  0870               	movf	??_I2C_ISR,w
  7394  0EC1  0021               	movlb	1	; select bank1
  7395  0EC2  00C6               	movwf	_i2c_address^(0+128)
  7396                           
  7397                           ;isr.c: 70: if(SSP1STATbits.R_nW){
  7398  0EC3  0024               	movlb	4	; select bank4
  7399  0EC4  1D14               	btfss	20,2	;volatile
  7400  0EC5  2F05               	goto	L8
  7401                           
  7402                           ;isr.c: 71: if(!SSP1STATbits.BF)
  7403  0EC6  1814               	btfsc	20,0	;volatile
  7404  0EC7  2EEC               	goto	i1l2313
  7405                           
  7406                           ;isr.c: 72: SSP1BUF = i2c_data[i2c_data_index++];
  7407  0EC8  0020               	movlb	0	; select bank0
  7408  0EC9  086E               	movf	_i2c_data_index,w
  7409  0ECA  3EA0               	addlw	_i2c_data& (0+255)
  7410  0ECB  0086               	movwf	6
  7411  0ECC  0187               	clrf	7
  7412  0ECD  0801               	movf	1,w
  7413  0ECE  0024               	movlb	4	; select bank4
  7414  0ECF  0091               	movwf	17	;volatile
  7415  0ED0  3001               	movlw	1
  7416  0ED1  00F0               	movwf	??_I2C_ISR
  7417  0ED2  0870               	movf	??_I2C_ISR,w
  7418  0ED3  0020               	movlb	0	; select bank0
  7419  0ED4  2F03               	goto	L10
  7420  0ED5                     i1l581:	
  7421                           ;isr.c: 81: }
  7422                           ;isr.c: 82: }
  7423                           
  7424                           ;isr.c: 79: else{
  7425                           ;isr.c: 80: CKP = 1;
  7426                           
  7427                           ;isr.c: 78: }
  7428                           
  7429                           ;isr.c: 76: }
  7430                           ;isr.c: 77: CKP = 1;
  7431                           
  7432                           ;isr.c: 75: SSP1BUF = 0xCC;
  7433                           
  7434                           ;isr.c: 73: else{
  7435                           ;isr.c: 74: i2c_dummy = SSP1BUF;
  7436                           
  7437                           
  7438                           ;isr.c: 85: else{
  7439                           ;isr.c: 86: SSP1IF = 0;
  7440  0ED5  0020               	movlb	0	; select bank0
  7441  0ED6  1191               	bcf	17,3	;volatile
  7442                           
  7443                           ;isr.c: 88: if(i2c_address & 0x01){
  7444  0ED7  0021               	movlb	1	; select bank1
  7445  0ED8  1C46               	btfss	_i2c_address^(0+128),0
  7446  0ED9  2EF6               	goto	i1l2317
  7447                           
  7448                           ;isr.c: 89: if(SSP1CON2bits.ACKSTAT == 1){
  7449  0EDA  0024               	movlb	4	; select bank4
  7450  0EDB  1B16               	btfsc	22,6	;volatile
  7451  0EDC  2F05               	goto	L8
  7452                           
  7453                           ;isr.c: 92: else{
  7454                           ;isr.c: 93: if(!SSP1STATbits.BF){
  7455                           
  7456                           ;isr.c: 91: }
  7457                           
  7458                           ;isr.c: 90: CKP = 1;
  7459  0EDD  1814               	btfsc	20,0	;volatile
  7460  0EDE  2EEC               	goto	i1l2313
  7461                           
  7462                           ;isr.c: 94: SSP1BUF = i2c_data[i2c_data_index++];
  7463  0EDF  0020               	movlb	0	; select bank0
  7464  0EE0  086E               	movf	_i2c_data_index,w
  7465  0EE1  3EA0               	addlw	_i2c_data& (0+255)
  7466  0EE2  0086               	movwf	6
  7467  0EE3  0187               	clrf	7
  7468  0EE4  0801               	movf	1,w
  7469  0EE5  0024               	movlb	4	; select bank4
  7470  0EE6  0091               	movwf	17	;volatile
  7471  0EE7  3001               	movlw	1
  7472  0EE8  00F0               	movwf	??_I2C_ISR
  7473  0EE9  0870               	movf	??_I2C_ISR,w
  7474  0EEA  0020               	movlb	0	; select bank0
  7475  0EEB  2F03               	goto	L10
  7476  0EEC                     i1l2313:	
  7477                           ;isr.c: 95: }
  7478                           
  7479                           
  7480                           ;isr.c: 96: else{
  7481                           ;isr.c: 97: i2c_dummy = SSP1BUF;
  7482  0EEC  0024               	movlb	4	; select bank4
  7483  0EED  0811               	movf	17,w	;volatile
  7484  0EEE  00F0               	movwf	??_I2C_ISR
  7485  0EEF  0870               	movf	??_I2C_ISR,w
  7486  0EF0  0021               	movlb	1	; select bank1
  7487  0EF1  00C7               	movwf	_i2c_dummy^(0+128)
  7488                           
  7489                           ;isr.c: 98: SSP1BUF = 0xCC;
  7490  0EF2  30CC               	movlw	204
  7491  0EF3  0024               	movlb	4	; select bank4
  7492  0EF4  0091               	movwf	17	;volatile
  7493  0EF5  2F04               	goto	L9
  7494  0EF6                     i1l2317:	
  7495                           ;isr.c: 101: }
  7496                           ;isr.c: 102: }
  7497                           
  7498                           ;isr.c: 99: }
  7499                           ;isr.c: 100: CKP = 1;
  7500                           
  7501                           
  7502                           ;isr.c: 103: else{
  7503                           ;isr.c: 104: i2c_data[i2c_data_index++] = SSP1BUF;
  7504  0EF6  0024               	movlb	4	; select bank4
  7505  0EF7  0811               	movf	17,w	;volatile
  7506  0EF8  00F0               	movwf	??_I2C_ISR
  7507  0EF9  0020               	movlb	0	; select bank0
  7508  0EFA  086E               	movf	_i2c_data_index,w
  7509  0EFB  3EA0               	addlw	_i2c_data& (0+255)
  7510  0EFC  0086               	movwf	6
  7511  0EFD  0187               	clrf	7
  7512  0EFE  0870               	movf	??_I2C_ISR,w
  7513  0EFF  0081               	movwf	1
  7514  0F00  3001               	movlw	1
  7515  0F01  00F0               	movwf	??_I2C_ISR
  7516  0F02  0870               	movf	??_I2C_ISR,w
  7517  0F03                     L10:	
  7518  0F03  07EE               	addwf	_i2c_data_index,f
  7519  0F04                     L9:	
  7520                           
  7521                           ;isr.c: 105: CKP = 1;
  7522  0F04  0024               	movlb	4	; select bank4
  7523  0F05                     L8:	
  7524  0F05  1615               	bsf	21,4	;volatile
  7525                           
  7526                           ;isr.c: 106: }
  7527                           ;isr.c: 107: }
  7528                           ;isr.c: 108: i2c_dummy = SSP1BUF;
  7529  0F06  0811               	movf	17,w	;volatile
  7530  0F07  00F0               	movwf	??_I2C_ISR
  7531  0F08  0870               	movf	??_I2C_ISR,w
  7532  0F09  0021               	movlb	1	; select bank1
  7533  0F0A  00C7               	movwf	_i2c_dummy^(0+128)
  7534                           
  7535                           ;isr.c: 109: WCOL = 0;
  7536  0F0B  0024               	movlb	4	; select bank4
  7537  0F0C  1395               	bcf	21,7	;volatile
  7538                           
  7539                           ;isr.c: 110: SSPOV = 0;
  7540  0F0D  1315               	bcf	21,6	;volatile
  7541                           
  7542                           ;isr.c: 112: if(i2c_data_index >= 5)
  7543  0F0E  3005               	movlw	5
  7544  0F0F  0020               	movlb	0	; select bank0
  7545  0F10  026E               	subwf	_i2c_data_index,w
  7546  0F11  1C03               	skipc
  7547  0F12  0008               	return
  7548                           
  7549                           ;isr.c: 113: i2c_data_index = 0;
  7550  0F13  01EE               	clrf	_i2c_data_index
  7551  0F14  0008               	return
  7552  0F15                     __end_of_I2C_ISR:	
  7553                           
  7554                           	psect	text47
  7555  0B96                     __ptext47:	
  7556 ;; *************** function _ADC_ISR *****************
  7557 ;; Defined at:
  7558 ;;		line 36 in file "isr.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;		None               void
  7565 ;; Registers used:
  7566 ;;		wreg
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;Total ram usage:        1 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_global_interrupt
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           
  7586                           ;psect for function _ADC_ISR
  7587  0B96                     _ADC_ISR:	
  7588                           
  7589                           ;isr.c: 37: adc__high = ADRESH;
  7590                           
  7591                           ;incstack = 0
  7592                           ; Regs used in _ADC_ISR: [wreg]
  7593  0B96  0021               	movlb	1	; select bank1
  7594  0B97  081C               	movf	28,w	;volatile
  7595  0B98  00F0               	movwf	??_ADC_ISR
  7596  0B99  0870               	movf	??_ADC_ISR,w
  7597  0B9A  00C2               	movwf	_adc__high^(0+128)
  7598                           
  7599                           ;isr.c: 38: adc__low = ADRESL;
  7600  0B9B  081B               	movf	27,w	;volatile
  7601  0B9C  00F0               	movwf	??_ADC_ISR
  7602  0B9D  0870               	movf	??_ADC_ISR,w
  7603  0B9E  00C3               	movwf	_adc__low^(0+128)
  7604                           
  7605                           ;isr.c: 40: ADIF = 0;
  7606  0B9F  0020               	movlb	0	; select bank0
  7607  0BA0  1311               	bcf	17,6	;volatile
  7608  0BA1  0008               	return
  7609  0BA2                     __end_of_ADC_ISR:	
  7610  007E                     btemp	set	126	;btemp
  7611  007E                     pic14e$flags	set	126
  7612  007E                     wtemp	set	126
  7613  007E                     wtemp0	set	126
  7614  0080                     wtemp1	set	128
  7615  0082                     wtemp2	set	130
  7616  0084                     wtemp3	set	132
  7617  0086                     wtemp4	set	134
  7618  0088                     wtemp5	set	136
  7619  007F                     wtemp6	set	127
  7620  007E                     ttemp	set	126
  7621  007E                     ttemp0	set	126
  7622  0081                     ttemp1	set	129
  7623  0084                     ttemp2	set	132
  7624  0087                     ttemp3	set	135
  7625  007F                     ttemp4	set	127
  7626  007E                     ltemp	set	126
  7627  007E                     ltemp0	set	126
  7628  0082                     ltemp1	set	130
  7629  0086                     ltemp2	set	134
  7630  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     78      80
    BANK1            80     28      69
    BANK2            80      0      55
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_TIMER0_ISR
    _TIMER0_ISR->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Adf_Lock
    _main->_Modem_Flush_Frame
    _Ptt_Off->_Adf_Write_Register_Three
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_One->_Reverse_Array
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ptt_On->_Adf_Write_Register_Three
    _Adf_Write_Register_Two->_Reverse_Array
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc
    _Adf_Lock->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Adf_Lock
    _Ptt_Off->_Adf_Write_Register_Three
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Ptt_On->_Adf_Write_Register_Three
    _Adf_Lock->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   67166
                                             77 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                           _Adf_Lock
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   12557
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   25114
                    _Configure_Audio
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   25114
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Config                                     0     0      0   22264
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Write_Register_One                              19    19      0    5566
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1425
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1425
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Configure_Audio                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   13982
                                             76 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ptt_On                                               1     1      0   12557
                                             75 BANK0      1     1      0
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Register_Two                              32    32      0    5566
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adf_Lock                                             6     6      0   12648
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
           _Adf_Write_Register_Three
            _Adf_Write_Register_Zero
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Adf_Write_Register_Zero                             36    36      0    5566
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Register_Three                            64    64      0    5566
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Write_Adf7012_Reg                                    4     3      1    3353
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (4) _Spi_Byte_Send                                        4     4      0    1517
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1425
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (3) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Reverse_Array                                       12    11      1    1332
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _Adf_Locked                                           0     0      0       0
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (3) _Read_Adf7012_Muxout                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _global_interrupt                                     2     2      0      45
                                              8 COMMON     2     2      0
                            _ADC_ISR
                            _I2C_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
 ---------------------------------------------------------------------------------
 (10) _TIMER1_ISR                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TIMER0_ISR                                          1     1      0      45
                                              7 COMMON     1     1      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (11) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (12) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Adf_Lock
     _Adf_Locked
       _Read_Adf7012_Muxout
     _Adf_Write_Register_Three
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Adf_Write_Register_Zero
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
     _Timer0_Start
   _Modem_Setup
     _Configure_Audio
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
   _Ptt_Off
     _Adf_Write_Register_Three
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Adf_Write_Register_Two
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _ADC_ISR
   _I2C_ISR
   _TIMER0_ISR
     _Sinus_Generator
       _Send_Vcxo_Signal
       _Timer0_Stop
   _TIMER1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      45       7       86.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      37       9       68.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Oct 02 14:18:13 2014

                   _i2c_data_index 006E                        __CFG_CP$OFF 0000  
          _Adf_Reset_Register_Zero 03E1                     Reverse_Array@i 0032  
                   Spi_Byte_Send@i 0029           __end_of_Adf_Reset_Config 0BCB  
                      __CFG_LVP$ON 0000           _Adf_Reset_Register_Three 0CA4  
                              l229 0C8D                                l165 06DE  
                              l259 0D03                                _CKP 10AC  
                     __CFG_CPD$OFF 0000                                _SEN 10B0  
                              _PSA 04AB                    __end_of_I2C_ISR 0F15  
                              _crc 00B9                    __end_of_ADC_ISR 0BA2  
                     __CFG_BORV$LO 0000                                wreg 0009  
        Ax25_Send_Header@addresses 0033                       __CFG_IESO$ON 0000  
                    ??_Gpio_Config 0020             _Adf_Write_Register_One 0F15  
           _Adf_Write_Register_Two 04C4                               l2103 05EC  
                             l2113 062A                               l2055 0D97  
                             l2065 0B94                               l2233 0FD1  
                             l2235 0FF3                               l2503 027C  
                             l2257 03B2                               l2259 03D4  
                             l2507 021C                               l2509 0296  
                             l2517 0C6A                               l1903 0D04  
                             l2473 01F8                               l2563 079F  
                             l2467 01E5                               l1925 0CD4  
                             l1941 0DD1                               l2493 0236  
                             l2485 0219                               l2479 0206  
                             l2753 0746                               l1939 0DBD  
                             l2499 025B                               l2763 075A  
                             l1959 0E41                               l2759 074F  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _AHEN 10B9  
                             _ADON 04E8                               STR_1 04BE  
                     __CFG_WDTE$ON 0000                               _DHEN 10B8  
                             _GCEN 10B7                               _BOEN 10BC  
                             u1225 02A7                               u2105 026D  
                             u2025 01E3                               u1305 0F2C  
                             u1155 0C93                               u1235 02B6  
                             u2115 0280                               u2035 01F6  
                             u1315 0F47                               u1405 0081  
                             u1245 02C5                               u2125 0226  
                             u2045 0204                               u1325 04CD  
                             u1415 0090                               u1255 02D4  
                             u2055 0217                               u1335 04DC  
                             u1505 0117                               u1425 009F  
                             u1265 02E3                               u2145 0C5C  
                             u2065 0234                               u1345 04F7  
                             u1195 0CDE                               u1515 0126  
                             u1435 00AE                               u1275 02F2  
                             u2075 023A                               u1355 0506  
                             u1445 00BD                               u1285 030D  
                             u1605 05C5                               u2085 0259  
                             u1365 0515                               u1455 00CC  
                             u1615 05EA                               u2095 0268  
                             u1375 0524                               u1295 0F1E  
                             u3137 0C99                               u1465 00DB  
                             u1385 0063                               u1625 05FA  
                             u1634 0604                               u1554 0590  
                             u1475 00EA                               u1395 0072  
                             u1635 0603                               u1555 058F  
                             u1564 059D                               u1804 0FB6  
                             u1485 00F9                               u1645 0612  
                             u1565 059C                               u1805 0FB5  
                             u1495 0108                               u1815 0FC3  
                             u1824 0FD8                               u1905 03A4  
                             u1585 05AF                               u1825 0FD7  
                             u1914 03B9                               u1594 05B8  
                             u2570 0718                               u1915 03B8  
                             u1595 05B7                               u1835 0FE6  
                             _PCIE 10BE                               u1925 03C7  
                             u1775 0FA3                               u1784 0FAB  
                             u1865 0384                               u1785 0FAA  
                             u1874 038C                               u1875 038B  
                             u1894 0397                               u1895 0396  
                             _PIR1 0011                               _SCIE 10BD  
                             _TMR0 0015                               _WCOL 10AF  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 06D8                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    Send_Byte@byte 0029                      __CFG_BOREN$ON 0000  
                             ltemp 007E                               start 002B  
                             ttemp 007E                    _Sinus_Generator 0630  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
          _Adf_Write_Register_Zero 029E                        ?_TIMER0_ISR 0070  
                      ?_TIMER1_ISR 0070                        ?_Adc1_Start 0070  
                     Adf_Lock@bias 00D3                 main@beacon_address 00D5  
                    __CFG_PLLEN$ON 0000                    __end_of_Ptt_Off 0C20  
                    ??_Radio_Setup 006B                              _ADCS0 04F4  
                            _ADCS1 04F5                              _ADCS2 04F6  
                            ?_main 0070                              _DACEN 08C7  
                            _ACKDT 10B5                              _DACOE 08C5  
                            _ANSA1 0C61                              i1l155 0013  
                            i1l156 0026                              i1l157 0019  
                            i1l158 001F                              i1l159 0025  
                            _SBCDE 10BA                              i1l581 0ED5  
                            _TMR1H 0017                              _TMR1L 0016  
                            _SSPM0 10A8                              _SSPM1 10A9  
                            _SSPM2 10AA                              _SSPM3 10AB  
                            _TRISA 008C                              _TRISC 008E  
                            _SSPEN 10AD                              _SSPOV 10AE  
       Write_Adf7012_Reg@reg_value 002C                              _phase 006F  
                 __end_of_Adf_Lock 07E7                      ??_Modem_Setup 006B  
                __end_of_BAUD_RATE 04BC                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                 __size_of_Adf_Reset 0012  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 0BA2  
                            wtemp6 007F                __end_of_Gpio_Config 0C35  
                 __end_of_Delay_ms 0CA4                        ?_Adf_Locked 0070  
                  _Configure_Audio 0C35             _current_sample_in_baud 00C5  
                Spi_Byte_Send@data 0027                         Send_Byte@i 002A  
                  __initialization 002D          ??_Adf_Reset_Register_Zero 0020  
        __size_of_Ax25_Send_Header 00D8              __size_of_System_Start 0057  
                     __end_of_main 0768          __size_of_Ax25_Send_Footer 001B  
                        ??_I2C_ISR 0070                          ??_ADC_ISR 0070  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 0E61  
         _Adf_Write_Register_Three 005A              __end_of_Spi_Byte_Send 0D1D  
                           ??_main 006D          __size_of_Send_Vcxo_Signal 0005  
              __end_of_Radio_Setup 0BBC       __size_of_Read_Adf7012_Muxout 0007  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _CCP1IF 008A  
                           _DACNSS 08C0                             _ADNREF 04F2  
                           _ADRESH 009C                             _ADRESL 009B  
                           _CCPR1H 0292                             _CCPR1L 0291  
          __end_of_Sinus_Generator 06D8      Adf_Write_Register_One@reg_ptr 0043  
                           i1l2201 06B4                             i1l2313 0EEC  
                           i1l2317 0EF6                             i1l2181 067D  
                           i1l2191 068C                             i1l2175 0650  
                           i1l2195 0692                __size_of_TIMER0_ISR 0007  
                           _INTCON 000B                __size_of_TIMER1_ISR 002D  
                           u171_25 066E                             u174_25 06A6  
              __size_of_Adc1_Start 0006                             u168_25 0643  
               Reverse_Array@F3014 00A5                             u194_25 0D6A  
                           _OSCCON 0099           __size_of_Dac0_Start_Hold 0005  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1IE 0488                             _TMR1IF 0088  
                           _TMR1ON 00C0                       _System_Start 0E61  
                           _SSP1IE 048B                             _SSP1IF 008B  
                           _WDTPS0 04B9                             _WDTPS1 04BA  
                           _WDTPS2 04BB                             _WDTPS3 04BC  
                           _WDTPS4 04BD                             _SSPMSK 0213  
              __end_of_Modem_Setup 0B7C                     __CFG_PWRTE$OFF 0000  
                    ??_Timer0_Stop 0070          ??_Adf_Write_Register_Zero 0033  
                           _Ptt_On 0DE1                          ??_Ptt_Off 006B  
               __size_of_Send_Byte 00B4                 Reverse_Array@input 0031  
                   __CFG_STVREN$ON 0000                   ??_Ax25_Send_Flag 0020  
                 ??_Ax25_Send_Byte 002C                             _memcpy 0CCA  
                 ??_Ax25_Send_Sync 0020                  __end_of_Adf_Reset 0C0D  
                       _Update_Crc 0D76                __size_of_Adf_Locked 0003  
                      _Gpio_Config 0C20            __end_of_Configure_Audio 0C4C  
                      _i2c_address 00C6            __end_of__initialization 0056  
        __size_of_global_interrupt 0027                 Write_Adf7012_Reg@i 002D  
       ??_Adf_Reset_Register_Three 0020                     __pcstackCOMMON 0070  
         ??_Adf_Reset_Register_One 0020                       __pidataBANK2 0BDA  
         ??_Adf_Reset_Register_Two 0020                         _adf_config 0120  
              __end_of_Timer0_Stop 0B5B                      _PLAYBACK_RATE 04B6  
                        ?_Adf_Lock 0070                  ?_Adf_Reset_Config 0070  
                      _Radio_Setup 0BAE            ?_Adf_Write_Register_One 0070  
          ?_Adf_Write_Register_Two 0070          Spi_Byte_Send@data_to_send 0028  
               ??_Adf_Reset_Config 0026                          ?_Delay_ms 0020  
                __end_of_Send_Byte 0630                   _PHASE_DELTA_1200 00A9  
                 _PHASE_DELTA_2200 00AD                        _Modem_Setup 0B76  
                       __pbssBANK0 006E                         __pbssBANK1 00A0  
                       __pbssBANK2 0120                         __pbssBANK3 01A0  
                 ?_Sinus_Generator 0070                 Ax25_Send_Flag@byte 0026  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 00CD  
                    ?_Timer1_Start 0070                         __pmaintext 06D8  
                 _Ax25_Send_Header 01C6                            ?_Ptt_On 0070  
                ??_Dac0_Start_Hold 0020                 __end_of_TABLE_SIZE 04BE  
                 _Ax25_Send_Footer 0C4C                       ??_TIMER0_ISR 0077  
                     ??_TIMER1_ISR 0070                         __pintentry 0004  
                     ??_Adc1_Start 0020                            _DACCON1 0119  
                          _I2C_ISR 0EB8                 Ax25_Send_Byte@byte 002C  
                          _DACPSS0 08C2                            _DACPSS1 08C3  
                          ?_memcpy 0020                            _ADC_ISR 0B96  
                 _Ax25_Send_String 0C67                            _ADPREF0 04F0  
                          _ADPREF1 04F1                         ??_Adf_Lock 006B  
   __end_of_Adf_Write_Register_One 0F87     __end_of_Adf_Write_Register_Two 057C  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                 _Send_Vcxo_Signal 0B5B           __end_of_Adf_Write_Config 0BAE  
                      ?_Update_Crc 0070                         ??_Delay_ms 0022  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _SSP1ADD 0212                            _SSP1BUF 0211  
                          _PTT_OFF 00C0                Update_Crc@input_bit 0022  
                 ?_Configure_Audio 0070      Adf_Write_Register_Two@reg_ptr 004B  
   Adf_Write_Register_Zero@reg_ptr 004F                 __end_of_TIMER0_ISR 0B8F  
               __end_of_TIMER1_ISR 0D76                 __end_of_Adc1_Start 0B70  
                   ??_Timer0_Start 0020                     ??_Timer1_Start 0020  
                        _BAUD_RATE 04BA                       ??_Adf_Locked 0020  
       ??_Adf_Write_Register_Three 0033                        _Timer0_Stop 0B57  
                       _packet_pos 00B5                            _Ptt_Off 0C0D  
                  __size_of_Ptt_On 003C                _Read_Adf7012_Muxout 0B8F  
  __size_of_Adf_Reset_Register_One 0011    __size_of_Adf_Reset_Register_Two 0018  
               Ax25_Send_Sync@byte 0026                Reverse_Array@length 0027  
                  Ax25_Send_Flag@i 0027                    __size_of_memcpy 0029  
                          __ptext1 0BCB                            __ptext2 0E61  
                          __ptext3 0C0D                            __ptext4 0B76  
                          __ptext5 0BAE                            __ptext6 0BA2  
                          __ptext7 0F15                            __ptext8 0BBC  
                          __ptext9 03E1              Delay_ms@time_to_delay 0020  
        Adf_Write_Register_One@reg 003F                    Ax25_Send_Sync@i 0027  
               __end_of_Adf_Locked 0B57               ?_Read_Adf7012_Muxout 0070  
        Adf_Write_Register_Two@reg 004F                            clrloop0 0B83  
  Adf_Write_Register_Three@reg_ptr 00C9               end_of_initialization 0056  
                          memcpy@d 0024                            memcpy@n 0021  
                          memcpy@s 0025                          Delay_ms@i 0024  
                          init_ram 0B7C                            initloop 0B7D  
                 _global_interrupt 0004                __size_of_Update_Crc 0032  
                     __pstringtext 0400                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 00B1                          _Adf_Reset 0BFB  
            ??_Read_Adf7012_Muxout 0020                   _SAMPLES_PER_BAUD 00C1  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 0BEA  
     Write_Adf7012_Reg@size_of_reg 002A             _Adf_Reset_Register_Two 07E7  
        Sinus_Generator@tone_index 00BD             __size_of_Reverse_Array 0044  
           __size_of_Spi_Byte_Send 002A           ?_Adf_Reset_Register_Zero 0070  
                      Adf_Lock@adj 00D1                     __end_of_Ptt_On 0E1D  
               _Change_to_New_Baud 00BE                     __end_of_memcpy 0CF3  
                     ?_Radio_Setup 0070                  __size_of_Adf_Lock 007F  
             __end_of_Timer0_Start 0B6A               __end_of_Timer1_Start 0BDA  
              start_initialization 002D                         ?_Adf_Reset 0070  
                        _i2c_dummy 00C7           __end_of_Ax25_Send_Header 029E  
         __end_of_Ax25_Send_Footer 0C67                  __size_of_Delay_ms 0020  
                     ?_Modem_Setup 0070                    _Dac0_Start_Hold 0B60  
         __end_of_Ax25_Send_String 0C84          __size_of_Adf_Reset_Config 000F  
         ?_Adf_Write_Register_Zero 0070                          _Send_Byte 057C  
         __end_of_Send_Vcxo_Signal 0B60                           ??_Ptt_On 006B  
                      __pdataBANK2 0147                           ?_I2C_ISR 0070  
                         ??_memcpy 0023                           ?_ADC_ISR 0070  
                    _Reverse_Array 0E1D                      _Spi_Byte_Send 0CF3  
                ?_Adf_Write_Config 0070                       ??_Update_Crc 0020  
                      __pbssCOMMON 007A                          ___latbits 0002  
__size_of_Adf_Reset_Register_Three 0026                      _ones_in_a_row 00BB  
                    __pcstackBANK0 0020                      __pcstackBANK1 00C9  
               ??_Adf_Write_Config 006B          ?_Adf_Reset_Register_Three 0070  
                        _adc__high 00C2                __end_of__stringdata 04C4  
          __size_of_Ax25_Send_Flag 007C            __size_of_Ax25_Send_Byte 0006  
          __size_of_Ax25_Send_Sync 0079    __end_of_Adf_Reset_Register_Zero 0400  
    Ax25_Send_Header@num_addresses 002C                         ?_Send_Byte 0070  
                _Write_Adf7012_Reg 0DA8                       _current_byte 00C4  
                Ax25_Send_Header@i 0034                  Ax25_Send_Header@j 0031  
               ?_Write_Adf7012_Reg 002A                       ?_Timer0_Stop 0070  
         __size_of_Sinus_Generator 00A8          Ax25_Send_Footer@final_crc 002C  
           Ax25_Send_String@string 002D                           ?_Ptt_Off 0070  
               __end_of_Update_Crc 0DA8                ??_Write_Adf7012_Reg 002B  
                   ?_Reverse_Array 0027                     ?_Spi_Byte_Send 0070  
         __end_of_global_interrupt 002B            __end_of_Dac0_Start_Hold 0B65  
                      ??_Adf_Reset 0026    __end_of_Adf_Write_Register_Zero 0365  
                Ax25_Send_String@i 002F          __end_of_Write_Adf7012_Reg 0DE1  
             __size_of_Gpio_Config 0015                      ?_System_Start 0070  
                     _modem_packet 01A0                          clear_ram0 0B82  
         __size_of_Configure_Audio 0017                          main@F2948 0147  
            __size_of_Timer0_Start 0005                           _Adf_Lock 0768  
            __size_of_Timer1_Start 000F                   __size_of_I2C_ISR 005D  
                 __size_of_ADC_ISR 000C          Reverse_Array@buffer_array 002D  
                      __stringdata 04BE  __size_of_Adf_Write_Register_Three 016C  
          ?_Adf_Reset_Register_One 0070          ?_Adf_Write_Register_Three 0070  
          ?_Adf_Reset_Register_Two 0070               __size_of_Radio_Setup 000E  
                         _Delay_ms 0C84              Send_Vcxo_Signal@value 0070  
                   ??_System_Start 0020                           _i2c_data 00A0  
                 _Adf_Reset_Config 0BBC                        ??_Send_Byte 0023  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 0D1D  
               ?_Modem_Flush_Frame 0070                       _Timer0_Start 0B65  
                     _Timer1_Start 0BCB           ??_Adf_Write_Register_One 0033  
         ??_Adf_Write_Register_Two 0033                   __size_of_Ptt_Off 0013  
                  ??_Reverse_Array 0028                    ??_Spi_Byte_Send 0026  
            __end_of_PLAYBACK_RATE 04BA                ??_Modem_Flush_Frame 006C  
                ??_Sinus_Generator 0071   __size_of_Adf_Reset_Register_Zero 001F  
                         _adc__low 00C3        __end_of_Read_Adf7012_Muxout 0B96  
   __end_of_Adf_Reset_Register_One 0BFB     __end_of_Adf_Reset_Register_Two 07FF  
              __end_of_sine_table2 04B6                   ?_Dac0_Start_Hold 0070  
                   _Ax25_Send_Flag 0365                     _Ax25_Send_Byte 0B70  
                   _Ax25_Send_Sync 0F87                           __ptext10 07E7  
                         __ptext11 0CA4                           __ptext20 0C67  
                         __ptext12 0BEA                           __ptext21 0B70  
                         __ptext13 0BFB                           __ptext30 005A  
                         __ptext22 01C6                           __ptext14 0C35  
                         __ptext31 0DA8                           __ptext23 0F87  
                         __ptext15 0D1D                           __ptext32 0CF3  
                         __ptext24 0C4C                           __ptext16 0B65  
                         __ptext41 0D49                           __ptext33 0C84  
                         __ptext25 057C                           __ptext17 0DE1  
                         __ptext42 0B88                           __ptext34 0B60  
                         __ptext26 0D76                           __ptext18 04C4  
                         __ptext43 0630                           __ptext35 0E1D  
                         __ptext27 0365                           __ptext19 0C20  
                         __ptext44 0B57                           __ptext36 0CCA  
                         __ptext28 0768                           __ptext45 0B5B  
                         __ptext37 0B54                           __ptext29 029E  
                         __ptext46 0EB8                           __ptext38 0B8F  
                         __ptext47 0B96                           __ptext39 0B6A  
                ?_Ax25_Send_Header 002C                       _SSP1CON2bits 0216  
                ?_Ax25_Send_Footer 0070                 ??_Ax25_Send_Header 002E  
        __end_of_Modem_Flush_Frame 0D49         __size_of_Write_Adf7012_Reg 0039  
                ?_Ax25_Send_String 002D                 ??_Ax25_Send_Footer 002C  
                    __size_of_main 0090                        _phase_delta 00C8  
                ?_Send_Vcxo_Signal 0070                 ??_Ax25_Send_String 002F  
               ??_Send_Vcxo_Signal 0070   __end_of_Adf_Reset_Register_Three 0CCA  
             __size_of_Timer0_Stop 0004         Adf_Write_Register_Zero@reg 0053  
                     _SSP1STATbits 0214   __size_of_Adf_Write_Register_Zero 00C7  
                ??_Configure_Audio 0020             __end_of_Ax25_Send_Flag 03E1  
           __end_of_Ax25_Send_Byte 0B76             __end_of_Ax25_Send_Sync 1000  
                       _TABLE_SIZE 04BC                           memcpy@d1 0026  
                         memcpy@s1 0020                        pic14e$flags 007E  
                         intlevel1 0000          __size_of_Adf_Write_Config 000C  
                __CFG_CLKOUTEN$OFF 0000                 _MODEM_TRANSMITTING 00BF  
  __size_of_Adf_Write_Register_One 0072    __size_of_Adf_Write_Register_Two 00B8  
                       _TIMER0_ISR 0B88                         _TIMER1_ISR 0D49  
                       _Adc1_Start 0B6A                        _sine_table2 0400  
             __end_of_System_Start 0EB8                    ?_Ax25_Send_Flag 0070  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070        Sinus_Generator@Audio_Signal 0076  
               ??_global_interrupt 0078         __size_of_Modem_Flush_Frame 002C  
                       _Adf_Locked 0B54                  _modem_packet_size 007A  
 __end_of_Adf_Write_Register_Three 01C6  
