

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Oct 02 13:31:53 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000E                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  018C                     	;# 
   123  018E                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  020E                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  038C                     	;# 
   183  038E                     	;# 
   184  0391                     	;# 
   185  0392                     	;# 
   186  0393                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000E                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  010C                     	;# 
   254  010E                     	;# 
   255  0111                     	;# 
   256  0112                     	;# 
   257  0113                     	;# 
   258  0114                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011A                     	;# 
   265  011B                     	;# 
   266  011D                     	;# 
   267  011E                     	;# 
   268  018C                     	;# 
   269  018E                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0194                     	;# 
   277  0195                     	;# 
   278  0196                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020E                     	;# 
   289  0211                     	;# 
   290  0211                     	;# 
   291  0212                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0298                     	;# 
   313  0298                     	;# 
   314  0299                     	;# 
   315  029A                     	;# 
   316  029B                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  0311                     	;# 
   321  0311                     	;# 
   322  0312                     	;# 
   323  0313                     	;# 
   324  0318                     	;# 
   325  0318                     	;# 
   326  0319                     	;# 
   327  031A                     	;# 
   328  038C                     	;# 
   329  038E                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  039A                     	;# 
   334  039C                     	;# 
   335  039D                     	;# 
   336  039E                     	;# 
   337  039F                     	;# 
   338  0415                     	;# 
   339  0416                     	;# 
   340  0417                     	;# 
   341  041C                     	;# 
   342  041D                     	;# 
   343  041E                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000E                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  008C                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  010C                     	;# 
   400  010E                     	;# 
   401  0111                     	;# 
   402  0112                     	;# 
   403  0113                     	;# 
   404  0114                     	;# 
   405  0115                     	;# 
   406  0116                     	;# 
   407  0117                     	;# 
   408  0118                     	;# 
   409  0119                     	;# 
   410  011A                     	;# 
   411  011B                     	;# 
   412  011D                     	;# 
   413  011E                     	;# 
   414  018C                     	;# 
   415  018E                     	;# 
   416  0191                     	;# 
   417  0191                     	;# 
   418  0192                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0194                     	;# 
   423  0195                     	;# 
   424  0196                     	;# 
   425  0199                     	;# 
   426  019A                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019C                     	;# 
   430  019D                     	;# 
   431  019E                     	;# 
   432  019F                     	;# 
   433  020C                     	;# 
   434  020E                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  0212                     	;# 
   438  0212                     	;# 
   439  0213                     	;# 
   440  0213                     	;# 
   441  0214                     	;# 
   442  0214                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0216                     	;# 
   447  0216                     	;# 
   448  0217                     	;# 
   449  0217                     	;# 
   450  0291                     	;# 
   451  0291                     	;# 
   452  0292                     	;# 
   453  0293                     	;# 
   454  0294                     	;# 
   455  0295                     	;# 
   456  0295                     	;# 
   457  0296                     	;# 
   458  0298                     	;# 
   459  0298                     	;# 
   460  0299                     	;# 
   461  029A                     	;# 
   462  029B                     	;# 
   463  029C                     	;# 
   464  029D                     	;# 
   465  029E                     	;# 
   466  0311                     	;# 
   467  0311                     	;# 
   468  0312                     	;# 
   469  0313                     	;# 
   470  0318                     	;# 
   471  0318                     	;# 
   472  0319                     	;# 
   473  031A                     	;# 
   474  038C                     	;# 
   475  038E                     	;# 
   476  0391                     	;# 
   477  0392                     	;# 
   478  0393                     	;# 
   479  039A                     	;# 
   480  039C                     	;# 
   481  039D                     	;# 
   482  039E                     	;# 
   483  039F                     	;# 
   484  0415                     	;# 
   485  0416                     	;# 
   486  0417                     	;# 
   487  041C                     	;# 
   488  041D                     	;# 
   489  041E                     	;# 
   490  0FE4                     	;# 
   491  0FE5                     	;# 
   492  0FE6                     	;# 
   493  0FE7                     	;# 
   494  0FE8                     	;# 
   495  0FE9                     	;# 
   496  0FEA                     	;# 
   497  0FEB                     	;# 
   498  0FED                     	;# 
   499  0FEE                     	;# 
   500  0FEF                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  0008                     	;# 
   510  0009                     	;# 
   511  000A                     	;# 
   512  000B                     	;# 
   513  000C                     	;# 
   514  000E                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  008C                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  010C                     	;# 
   546  010E                     	;# 
   547  0111                     	;# 
   548  0112                     	;# 
   549  0113                     	;# 
   550  0114                     	;# 
   551  0115                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  0118                     	;# 
   555  0119                     	;# 
   556  011A                     	;# 
   557  011B                     	;# 
   558  011D                     	;# 
   559  011E                     	;# 
   560  018C                     	;# 
   561  018E                     	;# 
   562  0191                     	;# 
   563  0191                     	;# 
   564  0192                     	;# 
   565  0193                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0199                     	;# 
   572  019A                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019D                     	;# 
   577  019E                     	;# 
   578  019F                     	;# 
   579  020C                     	;# 
   580  020E                     	;# 
   581  0211                     	;# 
   582  0211                     	;# 
   583  0212                     	;# 
   584  0212                     	;# 
   585  0213                     	;# 
   586  0213                     	;# 
   587  0214                     	;# 
   588  0214                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0216                     	;# 
   593  0216                     	;# 
   594  0217                     	;# 
   595  0217                     	;# 
   596  0291                     	;# 
   597  0291                     	;# 
   598  0292                     	;# 
   599  0293                     	;# 
   600  0294                     	;# 
   601  0295                     	;# 
   602  0295                     	;# 
   603  0296                     	;# 
   604  0298                     	;# 
   605  0298                     	;# 
   606  0299                     	;# 
   607  029A                     	;# 
   608  029B                     	;# 
   609  029C                     	;# 
   610  029D                     	;# 
   611  029E                     	;# 
   612  0311                     	;# 
   613  0311                     	;# 
   614  0312                     	;# 
   615  0313                     	;# 
   616  0318                     	;# 
   617  0318                     	;# 
   618  0319                     	;# 
   619  031A                     	;# 
   620  038C                     	;# 
   621  038E                     	;# 
   622  0391                     	;# 
   623  0392                     	;# 
   624  0393                     	;# 
   625  039A                     	;# 
   626  039C                     	;# 
   627  039D                     	;# 
   628  039E                     	;# 
   629  039F                     	;# 
   630  0415                     	;# 
   631  0416                     	;# 
   632  0417                     	;# 
   633  041C                     	;# 
   634  041D                     	;# 
   635  041E                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000E                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008E                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009A                     	;# 
   686  009B                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  010C                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011A                     	;# 
   703  011B                     	;# 
   704  011D                     	;# 
   705  011E                     	;# 
   706  018C                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0193                     	;# 
   714  0194                     	;# 
   715  0195                     	;# 
   716  0196                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  020E                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0213                     	;# 
   733  0214                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  0291                     	;# 
   743  0291                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0294                     	;# 
   747  0295                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0298                     	;# 
   751  0298                     	;# 
   752  0299                     	;# 
   753  029A                     	;# 
   754  029B                     	;# 
   755  029C                     	;# 
   756  029D                     	;# 
   757  029E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  0318                     	;# 
   763  0318                     	;# 
   764  0319                     	;# 
   765  031A                     	;# 
   766  038C                     	;# 
   767  038E                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  0393                     	;# 
   771  039A                     	;# 
   772  039C                     	;# 
   773  039D                     	;# 
   774  039E                     	;# 
   775  039F                     	;# 
   776  0415                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  041C                     	;# 
   780  041D                     	;# 
   781  041E                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793                           
   794                           	psect	idataBANK2
   795  0BC6                     __pidataBANK2:	
   796                           
   797                           ;initializer for main@F3173
   798  0BC6  3443               	retlw	67
   799  0BC7  3455               	retlw	85
   800  0BC8  3442               	retlw	66
   801  0BC9  3445               	retlw	69
   802  0BCA  3459               	retlw	89
   803  0BCB  3459               	retlw	89
   804  0BCC  3400               	retlw	0
   805  0BCD  3405               	retlw	5
   806  0BCE  3443               	retlw	67
   807  0BCF  3455               	retlw	85
   808  0BD0  3442               	retlw	66
   809  0BD1  3445               	retlw	69
   810  0BD2  3458               	retlw	88
   811  0BD3  3458               	retlw	88
   812  0BD4  3400               	retlw	0
   813  0BD5  3406               	retlw	6
   814                           
   815                           	psect	stringtext
   816  0400                     __pstringtext:	
   817  0400                     _sine_table2:	
   818  0400  3410               	retlw	16
   819  0401  3410               	retlw	16
   820  0402  3411               	retlw	17
   821  0403  3411               	retlw	17
   822  0404  3412               	retlw	18
   823  0405  3412               	retlw	18
   824  0406  3413               	retlw	19
   825  0407  3413               	retlw	19
   826  0408  3414               	retlw	20
   827  0409  3414               	retlw	20
   828  040A  3415               	retlw	21
   829  040B  3415               	retlw	21
   830  040C  3416               	retlw	22
   831  040D  3416               	retlw	22
   832  040E  3417               	retlw	23
   833  040F  3417               	retlw	23
   834  0410  3418               	retlw	24
   835  0411  3418               	retlw	24
   836  0412  3419               	retlw	25
   837  0413  3419               	retlw	25
   838  0414  3419               	retlw	25
   839  0415  341A               	retlw	26
   840  0416  341A               	retlw	26
   841  0417  341B               	retlw	27
   842  0418  341B               	retlw	27
   843  0419  341B               	retlw	27
   844  041A  341C               	retlw	28
   845  041B  341C               	retlw	28
   846  041C  341C               	retlw	28
   847  041D  341D               	retlw	29
   848  041E  341D               	retlw	29
   849  041F  341D               	retlw	29
   850  0420  341D               	retlw	29
   851  0421  341E               	retlw	30
   852  0422  341E               	retlw	30
   853  0423  341E               	retlw	30
   854  0424  341E               	retlw	30
   855  0425  341E               	retlw	30
   856  0426  341E               	retlw	30
   857  0427  341F               	retlw	31
   858  0428  341F               	retlw	31
   859  0429  341F               	retlw	31
   860  042A  341F               	retlw	31
   861  042B  341F               	retlw	31
   862  042C  341F               	retlw	31
   863  042D  341F               	retlw	31
   864  042E  341F               	retlw	31
   865  042F  341F               	retlw	31
   866  0430  341F               	retlw	31
   867  0431  341F               	retlw	31
   868  0432  341F               	retlw	31
   869  0433  341F               	retlw	31
   870  0434  341F               	retlw	31
   871  0435  341E               	retlw	30
   872  0436  341E               	retlw	30
   873  0437  341E               	retlw	30
   874  0438  341E               	retlw	30
   875  0439  341E               	retlw	30
   876  043A  341E               	retlw	30
   877  043B  341D               	retlw	29
   878  043C  341D               	retlw	29
   879  043D  341D               	retlw	29
   880  043E  341D               	retlw	29
   881  043F  341C               	retlw	28
   882  0440  341C               	retlw	28
   883  0441  341C               	retlw	28
   884  0442  341B               	retlw	27
   885  0443  341B               	retlw	27
   886  0444  341B               	retlw	27
   887  0445  341A               	retlw	26
   888  0446  341A               	retlw	26
   889  0447  3419               	retlw	25
   890  0448  3419               	retlw	25
   891  0449  3419               	retlw	25
   892  044A  3418               	retlw	24
   893  044B  3418               	retlw	24
   894  044C  3417               	retlw	23
   895  044D  3417               	retlw	23
   896  044E  3416               	retlw	22
   897  044F  3416               	retlw	22
   898  0450  3415               	retlw	21
   899  0451  3415               	retlw	21
   900  0452  3414               	retlw	20
   901  0453  3414               	retlw	20
   902  0454  3413               	retlw	19
   903  0455  3413               	retlw	19
   904  0456  3412               	retlw	18
   905  0457  3412               	retlw	18
   906  0458  3411               	retlw	17
   907  0459  3411               	retlw	17
   908  045A  3410               	retlw	16
   909  045B  3410               	retlw	16
   910  045C  340F               	retlw	15
   911  045D  340E               	retlw	14
   912  045E  340E               	retlw	14
   913  045F  340D               	retlw	13
   914  0460  340D               	retlw	13
   915  0461  340C               	retlw	12
   916  0462  340C               	retlw	12
   917  0463  340B               	retlw	11
   918  0464  340B               	retlw	11
   919  0465  340A               	retlw	10
   920  0466  340A               	retlw	10
   921  0467  3409               	retlw	9
   922  0468  3409               	retlw	9
   923  0469  3408               	retlw	8
   924  046A  3408               	retlw	8
   925  046B  3407               	retlw	7
   926  046C  3407               	retlw	7
   927  046D  3406               	retlw	6
   928  046E  3406               	retlw	6
   929  046F  3406               	retlw	6
   930  0470  3405               	retlw	5
   931  0471  3405               	retlw	5
   932  0472  3404               	retlw	4
   933  0473  3404               	retlw	4
   934  0474  3404               	retlw	4
   935  0475  3403               	retlw	3
   936  0476  3403               	retlw	3
   937  0477  3403               	retlw	3
   938  0478  3402               	retlw	2
   939  0479  3402               	retlw	2
   940  047A  3402               	retlw	2
   941  047B  3402               	retlw	2
   942  047C  3401               	retlw	1
   943  047D  3401               	retlw	1
   944  047E  3401               	retlw	1
   945  047F  3401               	retlw	1
   946  0480  3401               	retlw	1
   947  0481  3401               	retlw	1
   948  0482  3400               	retlw	0
   949  0483  3400               	retlw	0
   950  0484  3400               	retlw	0
   951  0485  3400               	retlw	0
   952  0486  3400               	retlw	0
   953  0487  3400               	retlw	0
   954  0488  3400               	retlw	0
   955  0489  3400               	retlw	0
   956  048A  3400               	retlw	0
   957  048B  3400               	retlw	0
   958  048C  3400               	retlw	0
   959  048D  3400               	retlw	0
   960  048E  3400               	retlw	0
   961  048F  3400               	retlw	0
   962  0490  3401               	retlw	1
   963  0491  3401               	retlw	1
   964  0492  3401               	retlw	1
   965  0493  3401               	retlw	1
   966  0494  3401               	retlw	1
   967  0495  3401               	retlw	1
   968  0496  3402               	retlw	2
   969  0497  3402               	retlw	2
   970  0498  3402               	retlw	2
   971  0499  3402               	retlw	2
   972  049A  3403               	retlw	3
   973  049B  3403               	retlw	3
   974  049C  3403               	retlw	3
   975  049D  3404               	retlw	4
   976  049E  3404               	retlw	4
   977  049F  3404               	retlw	4
   978  04A0  3405               	retlw	5
   979  04A1  3405               	retlw	5
   980  04A2  3406               	retlw	6
   981  04A3  3406               	retlw	6
   982  04A4  3406               	retlw	6
   983  04A5  3407               	retlw	7
   984  04A6  3407               	retlw	7
   985  04A7  3408               	retlw	8
   986  04A8  3408               	retlw	8
   987  04A9  3409               	retlw	9
   988  04AA  3409               	retlw	9
   989  04AB  340A               	retlw	10
   990  04AC  340A               	retlw	10
   991  04AD  340B               	retlw	11
   992  04AE  340B               	retlw	11
   993  04AF  340C               	retlw	12
   994  04B0  340C               	retlw	12
   995  04B1  340D               	retlw	13
   996  04B2  340D               	retlw	13
   997  04B3  340E               	retlw	14
   998  04B4  340E               	retlw	14
   999  04B5  340F               	retlw	15
  1000  04B6                     __end_of_sine_table2:	
  1001  04B6                     _PLAYBACK_RATE:	
  1002  04B6  3412               	retlw	18
  1003  04B7  347A               	retlw	122
  1004  04B8  3400               	retlw	0
  1005  04B9  3400               	retlw	0
  1006  04BA                     __end_of_PLAYBACK_RATE:	
  1007  04BA                     _BAUD_RATE:	
  1008  04BA  34B0               	retlw	176
  1009  04BB  3404               	retlw	4
  1010  04BC                     __end_of_BAUD_RATE:	
  1011  04BC                     _TABLE_SIZE:	
  1012  04BC  34B6               	retlw	182
  1013  04BD  3400               	retlw	0
  1014  04BE                     __end_of_TABLE_SIZE:	
  1015  000B                     _INTCON	set	11
  1016  0011                     _PIR1	set	17
  1017  000C                     _PORTAbits	set	12
  1018  000E                     _PORTCbits	set	14
  1019  0015                     _TMR0	set	21
  1020  0017                     _TMR1H	set	23
  1021  0016                     _TMR1L	set	22
  1022  008E                     _ADIF	set	142
  1023  008A                     _CCP1IF	set	138
  1024  008B                     _SSP1IF	set	139
  1025  00C4                     _T1CKPS0	set	196
  1026  00C5                     _T1CKPS1	set	197
  1027  005D                     _TMR0IE	set	93
  1028  005A                     _TMR0IF	set	90
  1029  00C6                     _TMR1CS0	set	198
  1030  00C7                     _TMR1CS1	set	199
  1031  00CF                     _TMR1GE	set	207
  1032  0088                     _TMR1IF	set	136
  1033  00C0                     _TMR1ON	set	192
  1034  009D                     _ADCON0	set	157
  1035  009C                     _ADRESH	set	156
  1036  009B                     _ADRESL	set	155
  1037  0099                     _OSCCON	set	153
  1038  009A                     _OSCSTAT	set	154
  1039  0098                     _OSCTUNE	set	152
  1040  008C                     _TRISA	set	140
  1041  008E                     _TRISC	set	142
  1042  04F4                     _ADCS0	set	1268
  1043  04F5                     _ADCS1	set	1269
  1044  04F6                     _ADCS2	set	1270
  1045  04F7                     _ADFM	set	1271
  1046  048E                     _ADIE	set	1166
  1047  04F2                     _ADNREF	set	1266
  1048  04E8                     _ADON	set	1256
  1049  04F0                     _ADPREF0	set	1264
  1050  04F1                     _ADPREF1	set	1265
  1051  048A                     _CCP1IE	set	1162
  1052  04AB                     _PSA	set	1195
  1053  048B                     _SSP1IE	set	1163
  1054  04AD                     _TMR0CS	set	1197
  1055  0488                     _TMR1IE	set	1160
  1056  04B9                     _WDTPS0	set	1209
  1057  04BA                     _WDTPS1	set	1210
  1058  04BB                     _WDTPS2	set	1211
  1059  04BC                     _WDTPS3	set	1212
  1060  04BD                     _WDTPS4	set	1213
  1061  0119                     _DACCON1	set	281
  1062  08C7                     _DACEN	set	2247
  1063  08C0                     _DACNSS	set	2240
  1064  08C5                     _DACOE	set	2245
  1065  08C2                     _DACPSS0	set	2242
  1066  08C3                     _DACPSS1	set	2243
  1067  0C61                     _ANSA1	set	3169
  1068  0212                     _SSP1ADD	set	530
  1069  0211                     _SSP1BUF	set	529
  1070  0216                     _SSP1CON2bits	set	534
  1071  0214                     _SSP1STATbits	set	532
  1072  0213                     _SSPMSK	set	531
  1073  10B5                     _ACKDT	set	4277
  1074  10B9                     _AHEN	set	4281
  1075  10BC                     _BOEN	set	4284
  1076  10AC                     _CKP	set	4268
  1077  10B8                     _DHEN	set	4280
  1078  10B7                     _GCEN	set	4279
  1079  10BE                     _PCIE	set	4286
  1080  10BA                     _SBCDE	set	4282
  1081  10BD                     _SCIE	set	4285
  1082  10B0                     _SEN	set	4272
  1083  10AD                     _SSPEN	set	4269
  1084  10A8                     _SSPM0	set	4264
  1085  10A9                     _SSPM1	set	4265
  1086  10AA                     _SSPM2	set	4266
  1087  10AB                     _SSPM3	set	4267
  1088  10AE                     _SSPOV	set	4270
  1089  10AF                     _WCOL	set	4271
  1090  0292                     _CCPR1H	set	658
  1091  0291                     _CCPR1L	set	657
  1092  1499                     _CCP1M1	set	5273
  1093  149A                     _CCP1M2	set	5274
  1094  149B                     _CCP1M3	set	5275
  1095  04BE                     __stringdata:	
  1096  04BE                     STR_1:	
  1097  04BE  3448               	retlw	72	;'H'
  1098  04BF  3445               	retlw	69	;'E'
  1099  04C0  344C               	retlw	76	;'L'
  1100  04C1  344C               	retlw	76	;'L'
  1101  04C2  344F               	retlw	79	;'O'
  1102  04C3  3400               	retlw	0
  1103  04C4                     __end_of__stringdata:	
  1104                           
  1105                           ; #config settings
  1106  0000                     
  1107                           	psect	cinit
  1108  00AF                     start_initialization:	
  1109  00AF                     __initialization:	
  1110                           
  1111                           ; Clear objects allocated to COMMON
  1112  00AF  01F9               	clrf	__pbssCOMMON& (0+127)
  1113  00B0  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1114  00B1  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1115  00B2  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1116  00B3  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1117                           
  1118                           ; Clear objects allocated to BANK0
  1119  00B4  01EE               	clrf	__pbssBANK0& (0+127)
  1120  00B5  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1121                           
  1122                           ; Clear objects allocated to BANK1
  1123  00B6  30A0               	movlw	low __pbssBANK1
  1124  00B7  0084               	movwf	4
  1125  00B8  3000               	movlw	high __pbssBANK1
  1126  00B9  0085               	movwf	5
  1127  00BA  3034               	movlw	52
  1128  00BB  318B  2390  3180   	fcall	clear_ram0
  1129                           
  1130                           ; Clear objects allocated to BANK2
  1131  00BE  3020               	movlw	low __pbssBANK2
  1132  00BF  0084               	movwf	4
  1133  00C0  3001               	movlw	high __pbssBANK2
  1134  00C1  0085               	movwf	5
  1135  00C2  301B               	movlw	27
  1136  00C3  318B  2390  3180   	fcall	clear_ram0
  1137                           
  1138                           ; Clear objects allocated to BANK3
  1139  00C6  30A0               	movlw	low __pbssBANK3
  1140  00C7  0084               	movwf	4
  1141  00C8  3001               	movlw	high __pbssBANK3
  1142  00C9  0085               	movwf	5
  1143  00CA  3040               	movlw	64
  1144  00CB  318B  2390  3180   	fcall	clear_ram0
  1145                           
  1146                           ; Initialize objects allocated to BANK2
  1147  00CE  30C6               	movlw	low __pidataBANK2
  1148  00CF  0084               	movwf	4
  1149  00D0  308B               	movlw	(high __pidataBANK2)| (0+128)
  1150  00D1  0085               	movwf	5
  1151  00D2  303B               	movlw	low __pdataBANK2
  1152  00D3  0086               	movwf	6
  1153  00D4  3001               	movlw	high __pdataBANK2
  1154  00D5  0087               	movwf	7
  1155  00D6  3010               	movlw	16
  1156  00D7  318B  238A         	fcall	init_ram
  1157  00D9                     end_of_initialization:	
  1158                           ;End of C runtime variable initialization code
  1159                           
  1160  00D9                     __end_of__initialization:	
  1161  00D9  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1162  00DA  0020               	movlb	0
  1163  00DB  3186  2EE5         	ljmp	_main	;jump to C main() function
  1164                           
  1165                           	psect	bssCOMMON
  1166  0079                     __pbssCOMMON:	
  1167  0079                     _modem_packet_size:	
  1168  0079                     	ds	4
  1169  007D                     _i2c_data_index:	
  1170  007D                     	ds	1
  1171                           
  1172                           	psect	bssBANK0
  1173  006E                     __pbssBANK0:	
  1174  006E                     _current_byte:	
  1175  006E                     	ds	1
  1176  006F                     _phase:	
  1177  006F                     	ds	1
  1178                           
  1179                           	psect	bssBANK1
  1180  00A0                     __pbssBANK1:	
  1181  00A0                     _adf_config:	
  1182  00A0                     	ds	39
  1183  00C7                     _crc:	
  1184  00C7                     	ds	2
  1185  00C9                     Sinus_Generator@tone_index:	
  1186  00C9                     	ds	1
  1187  00CA                     _Change_to_New_Baud:	
  1188  00CA                     	ds	1
  1189  00CB                     _MODEM_TRANSMITTING:	
  1190  00CB                     	ds	1
  1191  00CC                     _PTT_OFF:	
  1192  00CC                     	ds	1
  1193  00CD                     _SAMPLES_PER_BAUD:	
  1194  00CD                     	ds	1
  1195  00CE                     _adc__high:	
  1196  00CE                     	ds	1
  1197  00CF                     _adc__low:	
  1198  00CF                     	ds	1
  1199  00D0                     _current_sample_in_baud:	
  1200  00D0                     	ds	1
  1201  00D1                     _i2c_address:	
  1202  00D1                     	ds	1
  1203  00D2                     _i2c_dummy:	
  1204  00D2                     	ds	1
  1205  00D3                     _phase_delta:	
  1206  00D3                     	ds	1
  1207                           
  1208                           	psect	bssBANK2
  1209  0120                     __pbssBANK2:	
  1210  0120                     _i2c_data:	
  1211  0120                     	ds	5
  1212  0125                     Reverse_Array@F3148:	
  1213  0125                     	ds	4
  1214  0129                     _PHASE_DELTA_1200:	
  1215  0129                     	ds	4
  1216  012D                     _PHASE_DELTA_2200:	
  1217  012D                     	ds	4
  1218  0131                     _Systick_Counter:	
  1219  0131                     	ds	4
  1220  0135                     _packet_pos:	
  1221  0135                     	ds	4
  1222  0139                     _ones_in_a_row:	
  1223  0139                     	ds	2
  1224                           
  1225                           	psect	dataBANK2
  1226  013B                     __pdataBANK2:	
  1227  013B                     main@F3173:	
  1228  013B                     	ds	16
  1229                           
  1230                           	psect	bssBANK3
  1231  01A0                     __pbssBANK3:	
  1232  01A0                     _modem_packet:	
  1233  01A0                     	ds	64
  1234                           
  1235                           	psect	clrtext
  1236  0B90                     clear_ram0:	
  1237                           ;	Called with FSR0 containing the base address, and
  1238                           ;	WREG with the size to clear
  1239                           
  1240  0B90  0064               	clrwdt	;clear the watchdog before getting into this loop
  1241  0B91                     clrloop0:	
  1242  0B91  0180               	clrf	0	;clear RAM location pointed to by FSR
  1243  0B92  3101               	addfsr 0,1
  1244  0B93  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1245  0B94  2B91               	goto	clrloop0	;have we reached the end yet?
  1246  0B95  3400               	retlw	0	;all done for this memory range, return
  1247                           
  1248                           	psect	inittext
  1249  0B8A                     init_ram:	
  1250  0B8A  00FE               	movwf	126
  1251  0B8B                     initloop:	
  1252  0B8B  0012               	moviw fsr0++
  1253  0B8C  001E               	movwi fsr1++
  1254  0B8D  0BFE               	decfsz	126,f
  1255  0B8E  2B8B               	goto	initloop
  1256  0B8F  3400               	retlw	0
  1257                           
  1258                           	psect	cstackBANK1
  1259  00D4                     __pcstackBANK1:	
  1260  00D4                     Adf_Write_Register_Three@reg_ptr:	
  1261                           
  1262                           ; 4 bytes @ 0x0
  1263  00D4                     	ds	4
  1264  00D8                     Adf_Write_Register_Three@reg:	
  1265                           
  1266                           ; 4 bytes @ 0x4
  1267  00D8                     	ds	4
  1268  00DC                     Adf_Lock@adj:	
  1269                           
  1270                           ; 2 bytes @ 0x8
  1271  00DC                     	ds	2
  1272  00DE                     Adf_Lock@bias:	
  1273                           
  1274                           ; 2 bytes @ 0xA
  1275  00DE                     	ds	2
  1276  00E0                     main@beacon_address:	
  1277                           
  1278                           ; 16 bytes @ 0xC
  1279  00E0                     	ds	16
  1280                           
  1281                           	psect	cstackCOMMON
  1282  0070                     __pcstackCOMMON:	
  1283  0070                     ?_Sinus_Generator:	
  1284  0070                     ?_Timer1_Start:	
  1285                           ; 0 bytes @ 0x0
  1286                           
  1287  0070                     ?_Dac0_Start_Hold:	
  1288                           ; 0 bytes @ 0x0
  1289                           
  1290  0070                     ?_Adc1_Start:	
  1291                           ; 0 bytes @ 0x0
  1292                           
  1293  0070                     ?_Ax25_Send_Footer:	
  1294                           ; 0 bytes @ 0x0
  1295                           
  1296  0070                     ?_Modem_Setup:	
  1297                           ; 0 bytes @ 0x0
  1298                           
  1299  0070                     ?_Ptt_Off:	
  1300                           ; 0 bytes @ 0x0
  1301                           
  1302  0070                     ?_Modem_Flush_Frame:	
  1303                           ; 0 bytes @ 0x0
  1304                           
  1305  0070                     ?_Adf_Reset_Register_Zero:	
  1306                           ; 0 bytes @ 0x0
  1307                           
  1308  0070                     ?_Adf_Reset_Register_One:	
  1309                           ; 0 bytes @ 0x0
  1310                           
  1311  0070                     ?_Adf_Reset_Register_Two:	
  1312                           ; 0 bytes @ 0x0
  1313                           
  1314  0070                     ?_Adf_Reset_Register_Three:	
  1315                           ; 0 bytes @ 0x0
  1316                           
  1317  0070                     ?_Adf_Reset:	
  1318                           ; 0 bytes @ 0x0
  1319                           
  1320  0070                     ?_Adf_Write_Register_Zero:	
  1321                           ; 0 bytes @ 0x0
  1322                           
  1323  0070                     ?_Adf_Write_Register_One:	
  1324                           ; 0 bytes @ 0x0
  1325                           
  1326  0070                     ?_Adf_Write_Register_Two:	
  1327                           ; 0 bytes @ 0x0
  1328                           
  1329  0070                     ?_Adf_Write_Register_Three:	
  1330                           ; 0 bytes @ 0x0
  1331                           
  1332  0070                     ?_global_interrupt:	
  1333                           ; 0 bytes @ 0x0
  1334                           
  1335  0070                     ?_System_Start:	
  1336                           ; 0 bytes @ 0x0
  1337                           
  1338  0070                     ??_Send_Vcxo_Signal:	
  1339                           ; 0 bytes @ 0x0
  1340                           
  1341  0070                     ?_Timer0_Start:	
  1342                           ; 0 bytes @ 0x0
  1343                           
  1344  0070                     ?_Timer0_Stop:	
  1345                           ; 0 bytes @ 0x0
  1346                           
  1347  0070                     ??_Timer0_Stop:	
  1348                           ; 0 bytes @ 0x0
  1349                           
  1350  0070                     ?_Adf_Reset_Config:	
  1351                           ; 0 bytes @ 0x0
  1352                           
  1353  0070                     ?_Adf_Write_Config:	
  1354                           ; 0 bytes @ 0x0
  1355                           
  1356  0070                     ?_Radio_Setup:	
  1357                           ; 0 bytes @ 0x0
  1358                           
  1359  0070                     ?_Configure_Audio:	
  1360                           ; 0 bytes @ 0x0
  1361                           
  1362  0070                     ?_Update_Crc:	
  1363                           ; 0 bytes @ 0x0
  1364                           
  1365  0070                     ?_Send_Byte:	
  1366                           ; 0 bytes @ 0x0
  1367                           
  1368  0070                     ?_Ax25_Send_Byte:	
  1369                           ; 0 bytes @ 0x0
  1370                           
  1371  0070                     ?_Ax25_Send_Sync:	
  1372                           ; 0 bytes @ 0x0
  1373                           
  1374  0070                     ?_Ax25_Send_Flag:	
  1375                           ; 0 bytes @ 0x0
  1376                           
  1377  0070                     ?_Gpio_Config:	
  1378                           ; 0 bytes @ 0x0
  1379                           
  1380  0070                     ?_Adf_Lock:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0070                     ?_Spi_Byte_Send:	
  1384                           ; 1 bytes @ 0x0
  1385                           
  1386  0070                     ?_Adf_Locked:	
  1387                           ; 1 bytes @ 0x0
  1388                           
  1389  0070                     ?_Read_Adf7012_Muxout:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0070                     ?_Send_Vcxo_Signal:	
  1393                           ; 1 bytes @ 0x0
  1394                           
  1395  0070                     ?_Ptt_On:	
  1396                           ; 1 bytes @ 0x0
  1397                           
  1398  0070                     ?_main:	
  1399                           ; 1 bytes @ 0x0
  1400                           
  1401  0070                     Send_Vcxo_Signal@value:	
  1402                           ; 2 bytes @ 0x0
  1403                           
  1404                           
  1405                           ; 1 bytes @ 0x0
  1406  0070                     	ds	1
  1407  0071                     ??_Sinus_Generator:	
  1408                           
  1409                           ; 0 bytes @ 0x1
  1410  0071                     	ds	5
  1411  0076                     Sinus_Generator@Audio_Signal:	
  1412                           
  1413                           ; 1 bytes @ 0x6
  1414  0076                     	ds	1
  1415  0077                     ??_global_interrupt:	
  1416                           
  1417                           ; 0 bytes @ 0x7
  1418  0077                     	ds	2
  1419                           
  1420                           	psect	cstackBANK0
  1421  0020                     __pcstackBANK0:	
  1422  0020                     ??_Gpio_Config:	
  1423  0020                     ??_Timer1_Start:	
  1424                           ; 0 bytes @ 0x0
  1425                           
  1426  0020                     ??_Dac0_Start_Hold:	
  1427                           ; 0 bytes @ 0x0
  1428                           
  1429  0020                     ??_Adc1_Start:	
  1430                           ; 0 bytes @ 0x0
  1431                           
  1432  0020                     ?_Delay_ms:	
  1433                           ; 0 bytes @ 0x0
  1434                           
  1435  0020                     ??_Adf_Reset_Register_Zero:	
  1436                           ; 0 bytes @ 0x0
  1437                           
  1438  0020                     ??_Adf_Reset_Register_One:	
  1439                           ; 0 bytes @ 0x0
  1440                           
  1441  0020                     ??_Adf_Reset_Register_Two:	
  1442                           ; 0 bytes @ 0x0
  1443                           
  1444  0020                     ??_Adf_Reset_Register_Three:	
  1445                           ; 0 bytes @ 0x0
  1446                           
  1447  0020                     ??_Adf_Locked:	
  1448                           ; 0 bytes @ 0x0
  1449                           
  1450  0020                     ??_System_Start:	
  1451                           ; 0 bytes @ 0x0
  1452                           
  1453  0020                     ??_Read_Adf7012_Muxout:	
  1454                           ; 0 bytes @ 0x0
  1455                           
  1456  0020                     ??_Timer0_Start:	
  1457                           ; 0 bytes @ 0x0
  1458                           
  1459  0020                     ??_Configure_Audio:	
  1460                           ; 0 bytes @ 0x0
  1461                           
  1462  0020                     ??_Update_Crc:	
  1463                           ; 0 bytes @ 0x0
  1464                           
  1465  0020                     ??_Ax25_Send_Sync:	
  1466                           ; 0 bytes @ 0x0
  1467                           
  1468  0020                     ??_Ax25_Send_Flag:	
  1469                           ; 0 bytes @ 0x0
  1470                           
  1471  0020                     ?_memcpy:	
  1472                           ; 0 bytes @ 0x0
  1473                           
  1474  0020                     memcpy@s1:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0020                     Delay_ms@time_to_delay:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480                           
  1481                           ; 2 bytes @ 0x0
  1482  0020                     	ds	1
  1483  0021                     memcpy@n:	
  1484                           
  1485                           ; 2 bytes @ 0x1
  1486  0021                     	ds	1
  1487  0022                     ??_Delay_ms:	
  1488  0022                     Update_Crc@input_bit:	
  1489                           ; 0 bytes @ 0x2
  1490                           
  1491                           
  1492                           ; 1 bytes @ 0x2
  1493  0022                     	ds	1
  1494  0023                     ??_memcpy:	
  1495  0023                     ??_Send_Byte:	
  1496                           ; 0 bytes @ 0x3
  1497                           
  1498                           
  1499                           ; 0 bytes @ 0x3
  1500  0023                     	ds	1
  1501  0024                     memcpy@d:	
  1502  0024                     Delay_ms@i:	
  1503                           ; 1 bytes @ 0x4
  1504                           
  1505                           
  1506                           ; 2 bytes @ 0x4
  1507  0024                     	ds	1
  1508  0025                     memcpy@s:	
  1509                           
  1510                           ; 1 bytes @ 0x5
  1511  0025                     	ds	1
  1512  0026                     ??_Spi_Byte_Send:	
  1513  0026                     ??_Adf_Reset:	
  1514                           ; 0 bytes @ 0x6
  1515                           
  1516  0026                     ??_Adf_Reset_Config:	
  1517                           ; 0 bytes @ 0x6
  1518                           
  1519  0026                     Ax25_Send_Sync@byte:	
  1520                           ; 0 bytes @ 0x6
  1521                           
  1522  0026                     Ax25_Send_Flag@byte:	
  1523                           ; 1 bytes @ 0x6
  1524                           
  1525  0026                     memcpy@d1:	
  1526                           ; 1 bytes @ 0x6
  1527                           
  1528                           
  1529                           ; 1 bytes @ 0x6
  1530  0026                     	ds	1
  1531  0027                     ?_Reverse_Array:	
  1532  0027                     Reverse_Array@length:	
  1533                           ; 1 bytes @ 0x7
  1534                           
  1535  0027                     Spi_Byte_Send@data:	
  1536                           ; 1 bytes @ 0x7
  1537                           
  1538  0027                     Ax25_Send_Sync@i:	
  1539                           ; 1 bytes @ 0x7
  1540                           
  1541  0027                     Ax25_Send_Flag@i:	
  1542                           ; 2 bytes @ 0x7
  1543                           
  1544                           
  1545                           ; 2 bytes @ 0x7
  1546  0027                     	ds	1
  1547  0028                     ??_Reverse_Array:	
  1548  0028                     Spi_Byte_Send@data_to_send:	
  1549                           ; 0 bytes @ 0x8
  1550                           
  1551                           
  1552                           ; 1 bytes @ 0x8
  1553  0028                     	ds	1
  1554  0029                     Spi_Byte_Send@i:	
  1555  0029                     Send_Byte@byte:	
  1556                           ; 1 bytes @ 0x9
  1557                           
  1558                           
  1559                           ; 1 bytes @ 0x9
  1560  0029                     	ds	1
  1561  002A                     ?_Write_Adf7012_Reg:	
  1562  002A                     Write_Adf7012_Reg@size_of_reg:	
  1563                           ; 1 bytes @ 0xA
  1564                           
  1565  002A                     Send_Byte@i:	
  1566                           ; 1 bytes @ 0xA
  1567                           
  1568                           
  1569                           ; 2 bytes @ 0xA
  1570  002A                     	ds	1
  1571  002B                     ??_Write_Adf7012_Reg:	
  1572                           
  1573                           ; 0 bytes @ 0xB
  1574  002B                     	ds	1
  1575  002C                     ?_Ax25_Send_Header:	
  1576  002C                     ??_Ax25_Send_Footer:	
  1577                           ; 0 bytes @ 0xC
  1578                           
  1579  002C                     ??_Ax25_Send_Byte:	
  1580                           ; 0 bytes @ 0xC
  1581                           
  1582  002C                     Write_Adf7012_Reg@reg_value:	
  1583                           ; 0 bytes @ 0xC
  1584                           
  1585  002C                     Ax25_Send_Byte@byte:	
  1586                           ; 1 bytes @ 0xC
  1587                           
  1588  002C                     Ax25_Send_Header@num_addresses:	
  1589                           ; 1 bytes @ 0xC
  1590                           
  1591  002C                     Ax25_Send_Footer@final_crc:	
  1592                           ; 2 bytes @ 0xC
  1593                           
  1594                           
  1595                           ; 2 bytes @ 0xC
  1596  002C                     	ds	1
  1597  002D                     ?_Ax25_Send_String:	
  1598  002D                     Write_Adf7012_Reg@i:	
  1599                           ; 0 bytes @ 0xD
  1600                           
  1601  002D                     Ax25_Send_String@string:	
  1602                           ; 1 bytes @ 0xD
  1603                           
  1604  002D                     Reverse_Array@buffer_array:	
  1605                           ; 2 bytes @ 0xD
  1606                           
  1607                           
  1608                           ; 4 bytes @ 0xD
  1609  002D                     	ds	1
  1610  002E                     ??_Ax25_Send_Header:	
  1611                           
  1612                           ; 0 bytes @ 0xE
  1613  002E                     	ds	1
  1614  002F                     ??_Ax25_Send_String:	
  1615  002F                     Ax25_Send_String@i:	
  1616                           ; 0 bytes @ 0xF
  1617                           
  1618                           
  1619                           ; 2 bytes @ 0xF
  1620  002F                     	ds	2
  1621  0031                     Reverse_Array@input:	
  1622  0031                     Ax25_Send_Header@j:	
  1623                           ; 1 bytes @ 0x11
  1624                           
  1625                           
  1626                           ; 2 bytes @ 0x11
  1627  0031                     	ds	1
  1628  0032                     Reverse_Array@i:	
  1629                           
  1630                           ; 1 bytes @ 0x12
  1631  0032                     	ds	1
  1632  0033                     ??_Adf_Write_Register_Zero:	
  1633  0033                     ??_Adf_Write_Register_One:	
  1634                           ; 0 bytes @ 0x13
  1635                           
  1636  0033                     ??_Adf_Write_Register_Two:	
  1637                           ; 0 bytes @ 0x13
  1638                           
  1639  0033                     ??_Adf_Write_Register_Three:	
  1640                           ; 0 bytes @ 0x13
  1641                           
  1642  0033                     Ax25_Send_Header@addresses:	
  1643                           ; 0 bytes @ 0x13
  1644                           
  1645                           
  1646                           ; 1 bytes @ 0x13
  1647  0033                     	ds	1
  1648  0034                     Ax25_Send_Header@i:	
  1649                           
  1650                           ; 2 bytes @ 0x14
  1651  0034                     	ds	11
  1652  003F                     Adf_Write_Register_One@reg:	
  1653                           
  1654                           ; 4 bytes @ 0x1F
  1655  003F                     	ds	4
  1656  0043                     Adf_Write_Register_One@reg_ptr:	
  1657                           
  1658                           ; 3 bytes @ 0x23
  1659  0043                     	ds	8
  1660  004B                     Adf_Write_Register_Two@reg_ptr:	
  1661                           
  1662                           ; 4 bytes @ 0x2B
  1663  004B                     	ds	4
  1664  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1665  004F                     Adf_Write_Register_Two@reg:	
  1666                           ; 4 bytes @ 0x2F
  1667                           
  1668                           
  1669                           ; 4 bytes @ 0x2F
  1670  004F                     	ds	4
  1671  0053                     Adf_Write_Register_Zero@reg:	
  1672                           
  1673                           ; 4 bytes @ 0x33
  1674  0053                     	ds	24
  1675  006B                     ??_Modem_Setup:	
  1676  006B                     ??_Adf_Lock:	
  1677                           ; 0 bytes @ 0x4B
  1678                           
  1679  006B                     ??_Ptt_Off:	
  1680                           ; 0 bytes @ 0x4B
  1681                           
  1682  006B                     ??_Adf_Write_Config:	
  1683                           ; 0 bytes @ 0x4B
  1684                           
  1685  006B                     ??_Radio_Setup:	
  1686                           ; 0 bytes @ 0x4B
  1687                           
  1688  006B                     ??_Ptt_On:	
  1689                           ; 0 bytes @ 0x4B
  1690                           
  1691                           
  1692                           ; 0 bytes @ 0x4B
  1693  006B                     	ds	1
  1694  006C                     ??_Modem_Flush_Frame:	
  1695                           
  1696                           ; 0 bytes @ 0x4C
  1697  006C                     	ds	1
  1698  006D                     ??_main:	
  1699                           
  1700                           ; 0 bytes @ 0x4D
  1701  006D                     	ds	1
  1702                           
  1703                           	psect	maintext
  1704  06E5                     __pmaintext:	
  1705 ;;
  1706 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1707 ;;
  1708 ;; *************** function _main *****************
  1709 ;; Defined at:
  1710 ;;		line 260 in file "main.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  2  208[COMMON] int 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 17F/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1725 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;Total ram usage:       17 bytes
  1729 ;; Hardware stack levels required when called:   11
  1730 ;; This function calls:
  1731 ;;		_Adc1_Start
  1732 ;;		_Adf_Lock
  1733 ;;		_Ax25_Send_Footer
  1734 ;;		_Ax25_Send_Header
  1735 ;;		_Ax25_Send_String
  1736 ;;		_Dac0_Start_Hold
  1737 ;;		_Delay_ms
  1738 ;;		_Gpio_Config
  1739 ;;		_Modem_Flush_Frame
  1740 ;;		_Modem_Setup
  1741 ;;		_Ptt_Off
  1742 ;;		_System_Start
  1743 ;;		_Timer1_Start
  1744 ;; This function is called by:
  1745 ;;		Startup code after reset
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _main
  1751  06E5                     _main:	
  1752                           
  1753                           ;main.c: 261: Gpio_Config();
  1754                           
  1755                           ;incstack = 0
  1756                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1757  06E5  3183  23E9  3186   	fcall	_Gpio_Config
  1758                           
  1759                           ;main.c: 262: System_Start();
  1760  06E8  318E  2644  3186   	fcall	_System_Start
  1761  06EB                     l209:	
  1762                           ;main.c: 263: while (!(OSCSTAT & (0x01))){}
  1763                           
  1764  06EB  0021               	movlb	1	; select bank1
  1765  06EC  1C1A               	btfss	26,0	;volatile
  1766  06ED  2EEB               	goto	l209
  1767                           
  1768                           ;main.c: 267: Timer1_Start();
  1769  06EE  3187  27F1  3186   	fcall	_Timer1_Start
  1770                           
  1771                           ;main.c: 269: Dac0_Start_Hold();
  1772  06F1  318B  236E  3186   	fcall	_Dac0_Start_Hold
  1773                           
  1774                           ;main.c: 271: Adc1_Start();
  1775  06F4  318B  2378  3186   	fcall	_Adc1_Start
  1776                           
  1777                           ;main.c: 273: PORTAbits.RA5 = 0;;
  1778  06F7  0020               	movlb	0	; select bank0
  1779  06F8  128C               	bcf	12,5	;volatile
  1780                           
  1781                           ;main.c: 274: Delay_ms(10);
  1782  06F9  300A               	movlw	10
  1783  06FA  00A0               	movwf	Delay_ms@time_to_delay
  1784  06FB  3000               	movlw	0
  1785  06FC  00A1               	movwf	Delay_ms@time_to_delay+1
  1786  06FD  318C  2493  3186   	fcall	_Delay_ms
  1787                           
  1788                           ;main.c: 275: PORTAbits.RA4 = 1;;
  1789  0700  0020               	movlb	0	; select bank0
  1790  0701  160C               	bsf	12,4	;volatile
  1791                           
  1792                           ;main.c: 276: Delay_ms(10);
  1793  0702  300A               	movlw	10
  1794  0703  00A0               	movwf	Delay_ms@time_to_delay
  1795  0704  3000               	movlw	0
  1796  0705  00A1               	movwf	Delay_ms@time_to_delay+1
  1797  0706  318C  2493  3186   	fcall	_Delay_ms
  1798                           
  1799                           ;main.c: 277: PORTAbits.RA5 = 1;;
  1800  0709  0020               	movlb	0	; select bank0
  1801  070A  168C               	bsf	12,5	;volatile
  1802                           
  1803                           ;main.c: 278: Delay_ms(10);
  1804  070B  300A               	movlw	10
  1805  070C  00A0               	movwf	Delay_ms@time_to_delay
  1806  070D  3000               	movlw	0
  1807  070E  00A1               	movwf	Delay_ms@time_to_delay+1
  1808  070F  318C  2493  3186   	fcall	_Delay_ms
  1809                           
  1810                           ;main.c: 280: Delay_ms(200);
  1811  0712  30C8               	movlw	200
  1812  0713  0020               	movlb	0	; select bank0
  1813  0714  00A0               	movwf	Delay_ms@time_to_delay
  1814  0715  3000               	movlw	0
  1815  0716  00A1               	movwf	Delay_ms@time_to_delay+1
  1816  0717  318C  2493  3186   	fcall	_Delay_ms
  1817                           
  1818                           ;main.c: 283: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1819  071A  303B               	movlw	low main@F3173
  1820  071B  0086               	movwf	6
  1821  071C  3001               	movlw	high main@F3173
  1822  071D  0087               	movwf	7
  1823  071E  30E0               	movlw	low main@beacon_address
  1824  071F  0084               	movwf	4
  1825  0720  3000               	movlw	high main@beacon_address
  1826  0721  0085               	movwf	5
  1827  0722  3010               	movlw	16
  1828  0723  0020               	movlb	0	; select bank0
  1829  0724  00ED               	movwf	??_main
  1830  0725                     u2570:	
  1831  0725  0016               	moviw fsr1++
  1832  0726  001A               	movwi fsr0++
  1833  0727  0BED               	decfsz	??_main,f
  1834  0728  2F25               	goto	u2570
  1835                           
  1836                           ;main.c: 285: Ax25_Send_Header(beacon_address,2);
  1837  0729  3002               	movlw	2
  1838  072A  00AC               	movwf	Ax25_Send_Header@num_addresses
  1839  072B  3000               	movlw	0
  1840  072C  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  1841  072D  30E0               	movlw	main@beacon_address& (0+255)
  1842  072E  3182  2249  3186   	fcall	_Ax25_Send_Header
  1843                           
  1844                           ;main.c: 286: Ax25_Send_String("HELLO");
  1845  0731  30BE               	movlw	low (STR_1| (0+32768))
  1846  0732  0020               	movlb	0	; select bank0
  1847  0733  00AD               	movwf	Ax25_Send_String@string
  1848  0734  3084               	movlw	high (STR_1| (0+32768))
  1849  0735  00AE               	movwf	Ax25_Send_String@string+1
  1850  0736  318C  2457  3186   	fcall	_Ax25_Send_String
  1851                           
  1852                           ;main.c: 287: Ax25_Send_Footer();
  1853  0739  318C  243C  3186   	fcall	_Ax25_Send_Footer
  1854                           
  1855                           ;main.c: 289: Modem_Setup();
  1856  073C  318B  2384  3186   	fcall	_Modem_Setup
  1857                           
  1858                           ;main.c: 290: PORTCbits.RC3 = 1;;
  1859  073F  0020               	movlb	0	; select bank0
  1860  0740  158E               	bsf	14,3	;volatile
  1861                           
  1862                           ;main.c: 291: Delay_ms(100);
  1863  0741  3064               	movlw	100
  1864  0742  00A0               	movwf	Delay_ms@time_to_delay
  1865  0743  3000               	movlw	0
  1866  0744  00A1               	movwf	Delay_ms@time_to_delay+1
  1867  0745  318C  2493  3186   	fcall	_Delay_ms
  1868                           
  1869                           ;main.c: 292: Adf_Lock();
  1870  0748  318F  2785  3186   	fcall	_Adf_Lock
  1871                           
  1872                           ;main.c: 293: Delay_ms(100);
  1873  074B  3064               	movlw	100
  1874  074C  0020               	movlb	0	; select bank0
  1875  074D  00A0               	movwf	Delay_ms@time_to_delay
  1876  074E  3000               	movlw	0
  1877  074F  00A1               	movwf	Delay_ms@time_to_delay+1
  1878  0750  318C  2493  3186   	fcall	_Delay_ms
  1879  0753                     l2707:	
  1880                           ;main.c: 296: while(1){
  1881                           
  1882                           
  1883                           ;main.c: 297: if(PTT_OFF){
  1884  0753  0021               	movlb	1	; select bank1
  1885  0754  084C               	movf	_PTT_OFF^(0+128),w
  1886  0755  1903               	btfsc	3,2
  1887  0756  2F5C               	goto	l2713
  1888                           
  1889                           ;main.c: 298: Ptt_Off();
  1890  0757  318B  23F9  3186   	fcall	_Ptt_Off
  1891                           
  1892                           ;main.c: 299: PTT_OFF = 0;
  1893  075A  0021               	movlb	1	; select bank1
  1894  075B  01CC               	clrf	_PTT_OFF^(0+128)
  1895  075C                     l2713:	
  1896                           
  1897                           ;main.c: 300: }
  1898                           ;main.c: 301: Delay_ms(2000);
  1899  075C  30D0               	movlw	208
  1900  075D  0020               	movlb	0	; select bank0
  1901  075E  00A0               	movwf	Delay_ms@time_to_delay
  1902  075F  3007               	movlw	7
  1903  0760  00A1               	movwf	Delay_ms@time_to_delay+1
  1904  0761  318C  2493  3186   	fcall	_Delay_ms
  1905                           
  1906                           ;main.c: 303: Modem_Flush_Frame();
  1907  0764  318D  252C  3186   	fcall	_Modem_Flush_Frame
  1908  0767                     l2717:	
  1909                           ;main.c: 304: while(MODEM_TRANSMITTING);
  1910                           
  1911  0767  0021               	movlb	1	; select bank1
  1912  0768  08CB               	movf	_MODEM_TRANSMITTING^(0+128),f
  1913  0769  1D03               	skipz
  1914  076A  2F67               	goto	l2717
  1915                           
  1916                           ;main.c: 305: Delay_ms(2000);
  1917  076B  30D0               	movlw	208
  1918  076C  0020               	movlb	0	; select bank0
  1919  076D  00A0               	movwf	Delay_ms@time_to_delay
  1920  076E  3007               	movlw	7
  1921  076F  00A1               	movwf	Delay_ms@time_to_delay+1
  1922  0770  318C  2493  3186   	fcall	_Delay_ms
  1923  0773  0064               	clrwdt	;# 
  1924  0774  2F53               	goto	l2707
  1925  0775                     __end_of_main:	
  1926                           ;main.c: 318: }
  1927                           ;main.c: 319: return (0);
  1928                           ;	Return value of _main is never used
  1929                           
  1930                           
  1931                           	psect	text1
  1932  07F1                     __ptext1:	
  1933 ;; *************** function _Timer1_Start *****************
  1934 ;; Defined at:
  1935 ;;		line 254 in file "utility.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;		None               void
  1942 ;; Registers used:
  1943 ;;		wreg, status,2
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    3
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           
  1964                           ;psect for function _Timer1_Start
  1965  07F1                     _Timer1_Start:	
  1966                           
  1967                           ;utility.c: 255: TMR1H = 0x00;
  1968                           
  1969                           ;incstack = 0
  1970                           ; Regs used in _Timer1_Start: [wreg+status,2]
  1971  07F1  0020               	movlb	0	; select bank0
  1972  07F2  0197               	clrf	23	;volatile
  1973                           
  1974                           ;utility.c: 256: TMR1L = 0x00;
  1975  07F3  0196               	clrf	22	;volatile
  1976                           
  1977                           ;utility.c: 258: TMR1IE = 0;
  1978  07F4  0021               	movlb	1	; select bank1
  1979  07F5  1011               	bcf	17,0	;volatile
  1980                           
  1981                           ;utility.c: 261: CCPR1H = 0x03;
  1982  07F6  3003               	movlw	3
  1983  07F7  0025               	movlb	5	; select bank5
  1984  07F8  0092               	movwf	18	;volatile
  1985                           
  1986                           ;utility.c: 262: CCPR1L = 0x41;
  1987  07F9  3041               	movlw	65
  1988  07FA  0091               	movwf	17	;volatile
  1989                           
  1990                           ;utility.c: 264: CCP1IF = 0;
  1991  07FB  0020               	movlb	0	; select bank0
  1992  07FC  1111               	bcf	17,2	;volatile
  1993                           
  1994                           ;utility.c: 265: CCP1IE = 1;
  1995  07FD  0021               	movlb	1	; select bank1
  1996  07FE  1511               	bsf	17,2	;volatile
  1997  07FF  0008               	return
  1998  0800                     __end_of_Timer1_Start:	
  1999                           
  2000                           	psect	text2
  2001  0E44                     __ptext2:	
  2002 ;; *************** function _System_Start *****************
  2003 ;; Defined at:
  2004 ;;		line 168 in file "main.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;		None
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;		None
  2009 ;; Return value:  Size  Location     Type
  2010 ;;		None               void
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2020 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2021 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2022 ;;Total ram usage:        1 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    3
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function _System_Start
  2034  0E44                     _System_Start:	
  2035                           
  2036                           ;main.c: 171: WDTPS4 = 1;
  2037                           
  2038                           ;incstack = 0
  2039                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2040  0E44  0021               	movlb	1	; select bank1
  2041  0E45  1697               	bsf	23,5	;volatile
  2042                           
  2043                           ;main.c: 172: WDTPS3 = 0;
  2044  0E46  1217               	bcf	23,4	;volatile
  2045                           
  2046                           ;main.c: 173: WDTPS2 = 0;
  2047  0E47  1197               	bcf	23,3	;volatile
  2048                           
  2049                           ;main.c: 174: WDTPS1 = 0;
  2050  0E48  1117               	bcf	23,2	;volatile
  2051                           
  2052                           ;main.c: 175: WDTPS0 = 1;
  2053  0E49  1497               	bsf	23,1	;volatile
  2054                           
  2055                           ;main.c: 179: OSCCON = 0x00;
  2056  0E4A  0199               	clrf	25	;volatile
  2057                           
  2058                           ;main.c: 180: OSCCON |= 0b11110000;
  2059  0E4B  30F0               	movlw	240
  2060  0E4C  0020               	movlb	0	; select bank0
  2061  0E4D  00A0               	movwf	??_System_Start
  2062  0E4E  0820               	movf	??_System_Start,w
  2063  0E4F  0021               	movlb	1	; select bank1
  2064  0E50  0499               	iorwf	25,f	;volatile
  2065                           
  2066                           ;main.c: 181: OSCTUNE = 0x00;
  2067  0E51  0198               	clrf	24	;volatile
  2068                           
  2069                           ;main.c: 185: TMR0CS = 0;
  2070  0E52  1295               	bcf	21,5	;volatile
  2071                           
  2072                           ;main.c: 186: PSA = 1;
  2073  0E53  1595               	bsf	21,3	;volatile
  2074                           
  2075                           ;main.c: 190: TMR1ON = 1;
  2076  0E54  0020               	movlb	0	; select bank0
  2077  0E55  1418               	bsf	24,0	;volatile
  2078                           
  2079                           ;main.c: 191: TMR1GE = 0;
  2080  0E56  1399               	bcf	25,7	;volatile
  2081                           
  2082                           ;main.c: 193: TMR1CS1 = 0;
  2083  0E57  1398               	bcf	24,7	;volatile
  2084                           
  2085                           ;main.c: 194: TMR1CS0 = 0;
  2086  0E58  1318               	bcf	24,6	;volatile
  2087                           
  2088                           ;main.c: 196: T1CKPS1 = 1;
  2089  0E59  1698               	bsf	24,5	;volatile
  2090                           
  2091                           ;main.c: 197: T1CKPS0 = 1;
  2092  0E5A  1618               	bsf	24,4	;volatile
  2093                           
  2094                           ;main.c: 199: CCP1M3 = 1;
  2095  0E5B  0025               	movlb	5	; select bank5
  2096  0E5C  1593               	bsf	19,3	;volatile
  2097                           
  2098                           ;main.c: 200: CCP1M2 = 0;
  2099  0E5D  1113               	bcf	19,2	;volatile
  2100                           
  2101                           ;main.c: 201: CCP1M1 = 1;
  2102  0E5E  1493               	bsf	19,1	;volatile
  2103                           
  2104                           ;main.c: 202: CCP1M1 = 0;
  2105  0E5F  1093               	bcf	19,1	;volatile
  2106                           
  2107                           ;main.c: 206: DACOE = 1;
  2108  0E60  0022               	movlb	2	; select bank2
  2109  0E61  1698               	bsf	24,5	;volatile
  2110                           
  2111                           ;main.c: 207: DACPSS1 = 0;
  2112  0E62  1198               	bcf	24,3	;volatile
  2113                           
  2114                           ;main.c: 208: DACPSS0 = 0;
  2115  0E63  1118               	bcf	24,2	;volatile
  2116                           
  2117                           ;main.c: 209: DACNSS = 0;
  2118  0E64  1018               	bcf	24,0	;volatile
  2119                           
  2120                           ;main.c: 214: ANSA1 = 1;
  2121  0E65  0023               	movlb	3	; select bank3
  2122  0E66  148C               	bsf	12,1	;volatile
  2123                           
  2124                           ;main.c: 215: ADCON0 &= 0b10000011;
  2125  0E67  3083               	movlw	131
  2126  0E68  0020               	movlb	0	; select bank0
  2127  0E69  00A0               	movwf	??_System_Start
  2128  0E6A  0820               	movf	??_System_Start,w
  2129  0E6B  0021               	movlb	1	; select bank1
  2130  0E6C  059D               	andwf	29,f	;volatile
  2131                           
  2132                           ;main.c: 216: ADCON0 |= 0b00000100;
  2133  0E6D  151D               	bsf	29,2	;volatile
  2134                           
  2135                           ;main.c: 217: ADNREF = 0;
  2136  0E6E  111E               	bcf	30,2	;volatile
  2137                           
  2138                           ;main.c: 218: ADPREF1 = 0;
  2139  0E6F  109E               	bcf	30,1	;volatile
  2140                           
  2141                           ;main.c: 219: ADPREF0 = 0;
  2142  0E70  101E               	bcf	30,0	;volatile
  2143                           
  2144                           ;main.c: 220: ADCS2 = 1;
  2145  0E71  171E               	bsf	30,6	;volatile
  2146                           
  2147                           ;main.c: 221: ADCS1 = 1;
  2148  0E72  169E               	bsf	30,5	;volatile
  2149                           
  2150                           ;main.c: 222: ADCS0 = 0;
  2151  0E73  121E               	bcf	30,4	;volatile
  2152                           
  2153                           ;main.c: 223: ADFM = 1;
  2154  0E74  179E               	bsf	30,7	;volatile
  2155                           
  2156                           ;main.c: 228: TMR0IF = 0;
  2157  0E75  110B               	bcf	11,2	;volatile
  2158                           
  2159                           ;main.c: 229: TMR1IF = 0;
  2160  0E76  0020               	movlb	0	; select bank0
  2161  0E77  1011               	bcf	17,0	;volatile
  2162                           
  2163                           ;main.c: 230: CCP1IF = 0;
  2164  0E78  1111               	bcf	17,2	;volatile
  2165                           
  2166                           ;main.c: 231: ADIF = 0;
  2167  0E79  1311               	bcf	17,6	;volatile
  2168                           
  2169                           ;main.c: 235: SSPEN = 1;
  2170  0E7A  0024               	movlb	4	; select bank4
  2171  0E7B  1695               	bsf	21,5	;volatile
  2172                           
  2173                           ;main.c: 236: SSPM3 = 0;
  2174  0E7C  1195               	bcf	21,3	;volatile
  2175                           
  2176                           ;main.c: 237: SSPM2 = 1;
  2177  0E7D  1515               	bsf	21,2	;volatile
  2178                           
  2179                           ;main.c: 238: SSPM1 = 1;
  2180  0E7E  1495               	bsf	21,1	;volatile
  2181                           
  2182                           ;main.c: 239: SSPM0 = 0;
  2183  0E7F  1015               	bcf	21,0	;volatile
  2184                           
  2185                           ;main.c: 240: GCEN = 0;
  2186  0E80  1396               	bcf	22,7	;volatile
  2187                           
  2188                           ;main.c: 241: ACKDT = 0;
  2189  0E81  1296               	bcf	22,5	;volatile
  2190                           
  2191                           ;main.c: 242: SEN = 1;
  2192  0E82  1416               	bsf	22,0	;volatile
  2193                           
  2194                           ;main.c: 243: SSP1ADD = 0x60;
  2195  0E83  3060               	movlw	96
  2196  0E84  0092               	movwf	18	;volatile
  2197                           
  2198                           ;main.c: 244: SSPMSK |= 0b11111110;
  2199  0E85  30FE               	movlw	254
  2200  0E86  0020               	movlb	0	; select bank0
  2201  0E87  00A0               	movwf	??_System_Start
  2202  0E88  0820               	movf	??_System_Start,w
  2203  0E89  0024               	movlb	4	; select bank4
  2204  0E8A  0493               	iorwf	19,f	;volatile
  2205                           
  2206                           ;main.c: 245: PCIE = 0;
  2207  0E8B  1317               	bcf	23,6	;volatile
  2208                           
  2209                           ;main.c: 246: SCIE = 0;
  2210  0E8C  1297               	bcf	23,5	;volatile
  2211                           
  2212                           ;main.c: 247: BOEN = 0;
  2213  0E8D  1217               	bcf	23,4	;volatile
  2214                           
  2215                           ;main.c: 248: AHEN = 0;
  2216  0E8E  1097               	bcf	23,1	;volatile
  2217                           
  2218                           ;main.c: 249: DHEN = 0;
  2219  0E8F  1017               	bcf	23,0	;volatile
  2220                           
  2221                           ;main.c: 250: SBCDE = 0;
  2222  0E90  1117               	bcf	23,2	;volatile
  2223                           
  2224                           ;main.c: 251: SSP1IF = 0;
  2225  0E91  0020               	movlb	0	; select bank0
  2226  0E92  1191               	bcf	17,3	;volatile
  2227                           
  2228                           ;main.c: 252: SSP1IE = 1;
  2229  0E93  0021               	movlb	1	; select bank1
  2230  0E94  1591               	bsf	17,3	;volatile
  2231                           
  2232                           ;main.c: 256: INTCON |= 0xC0;
  2233  0E95  30C0               	movlw	192
  2234  0E96  0020               	movlb	0	; select bank0
  2235  0E97  00A0               	movwf	??_System_Start
  2236  0E98  0820               	movf	??_System_Start,w
  2237  0E99  048B               	iorwf	11,f	;volatile
  2238  0E9A  0008               	return
  2239  0E9B                     __end_of_System_Start:	
  2240                           
  2241                           	psect	text3
  2242  0BF9                     __ptext3:	
  2243 ;; *************** function _Ptt_Off *****************
  2244 ;; Defined at:
  2245 ;;		line 352 in file "adf7012.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;		None               void
  2252 ;; Registers used:
  2253 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    8
  2266 ;; This function calls:
  2267 ;;		_Adf_Write_Register_Three
  2268 ;;		_Adf_Write_Register_Two
  2269 ;;		_Delay_ms
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function _Ptt_Off
  2277  0BF9                     _Ptt_Off:	
  2278                           
  2279                           ;adf7012.c: 354: PORTCbits.RC3 = 1;;
  2280                           
  2281                           ;incstack = 0
  2282                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2283  0BF9  0020               	movlb	0	; select bank0
  2284  0BFA  158E               	bsf	14,3	;volatile
  2285                           
  2286                           ;adf7012.c: 355: adf_config.r3.pa_enable = 0;
  2287  0BFB  0021               	movlb	1	; select bank1
  2288  0BFC  01BA               	clrf	(_adf_config^(0+128)+26)
  2289                           
  2290                           ;adf7012.c: 356: adf_config.r2.power_amplifier_level = 0;
  2291  0BFD  01B2               	clrf	(_adf_config^(0+128)+18)
  2292                           
  2293                           ;adf7012.c: 359: Adf_Write_Register_Two();
  2294  0BFE  3184  24C4  318B   	fcall	_Adf_Write_Register_Two
  2295                           
  2296                           ;adf7012.c: 360: Adf_Write_Register_Three();
  2297  0C01  3180  20DD  318B   	fcall	_Adf_Write_Register_Three
  2298                           
  2299                           ;adf7012.c: 362: Delay_ms(10);
  2300  0C04  300A               	movlw	10
  2301  0C05  0020               	movlb	0	; select bank0
  2302  0C06  00A0               	movwf	Delay_ms@time_to_delay
  2303  0C07  3000               	movlw	0
  2304  0C08  00A1               	movwf	Delay_ms@time_to_delay+1
  2305  0C09  318C  2493         	fcall	_Delay_ms
  2306  0C0B  0008               	return
  2307  0C0C                     __end_of_Ptt_Off:	
  2308                           
  2309                           	psect	text4
  2310  0B84                     __ptext4:	
  2311 ;; *************** function _Modem_Setup *****************
  2312 ;; Defined at:
  2313 ;;		line 53 in file "audio_tone.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;		None               void
  2320 ;; Registers used:
  2321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:   10
  2334 ;; This function calls:
  2335 ;;		_Configure_Audio
  2336 ;;		_Radio_Setup
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _Modem_Setup
  2344  0B84                     _Modem_Setup:	
  2345                           
  2346                           ;audio_tone.c: 55: Configure_Audio();
  2347                           
  2348                           ;incstack = 0
  2349                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2350  0B84  318C  240C  318B   	fcall	_Configure_Audio
  2351                           
  2352                           ;audio_tone.c: 56: Radio_Setup();
  2353  0B87  318B  23A9         	fcall	_Radio_Setup
  2354  0B89  0008               	return
  2355  0B8A                     __end_of_Modem_Setup:	
  2356                           
  2357                           	psect	text5
  2358  0BA9                     __ptext5:	
  2359 ;; *************** function _Radio_Setup *****************
  2360 ;; Defined at:
  2361 ;;		line 305 in file "adf7012.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;		None
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;		None               void
  2368 ;; Registers used:
  2369 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2379 ;;Total ram usage:        0 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    9
  2382 ;; This function calls:
  2383 ;;		_Adf_Reset_Config
  2384 ;;		_Adf_Write_Config
  2385 ;;		_Delay_ms
  2386 ;; This function is called by:
  2387 ;;		_Modem_Setup
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function _Radio_Setup
  2393  0BA9                     _Radio_Setup:	
  2394                           
  2395                           ;adf7012.c: 308: Adf_Reset_Config();
  2396                           
  2397                           ;incstack = 0
  2398                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2399  0BA9  318B  23B7  318B   	fcall	_Adf_Reset_Config
  2400                           
  2401                           ;adf7012.c: 310: Adf_Write_Config();
  2402  0BAC  318B  239D  318B   	fcall	_Adf_Write_Config
  2403                           
  2404                           ;adf7012.c: 312: Delay_ms(10);
  2405  0BAF  300A               	movlw	10
  2406  0BB0  0020               	movlb	0	; select bank0
  2407  0BB1  00A0               	movwf	Delay_ms@time_to_delay
  2408  0BB2  3000               	movlw	0
  2409  0BB3  00A1               	movwf	Delay_ms@time_to_delay+1
  2410  0BB4  318C  2493         	fcall	_Delay_ms
  2411  0BB6  0008               	return
  2412  0BB7                     __end_of_Radio_Setup:	
  2413                           
  2414                           	psect	text6
  2415  0B9D                     __ptext6:	
  2416 ;; *************** function _Adf_Write_Config *****************
  2417 ;; Defined at:
  2418 ;;		line 150 in file "adf7012.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;		None               void
  2425 ;; Registers used:
  2426 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;Total ram usage:        0 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    8
  2439 ;; This function calls:
  2440 ;;		_Adf_Write_Register_One
  2441 ;;		_Adf_Write_Register_Three
  2442 ;;		_Adf_Write_Register_Two
  2443 ;;		_Adf_Write_Register_Zero
  2444 ;; This function is called by:
  2445 ;;		_Radio_Setup
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _Adf_Write_Config
  2451  0B9D                     _Adf_Write_Config:	
  2452                           
  2453                           ;adf7012.c: 151: Adf_Write_Register_Zero();
  2454                           
  2455                           ;incstack = 0
  2456                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2457  0B9D  3183  2322  318B   	fcall	_Adf_Write_Register_Zero
  2458                           
  2459                           ;adf7012.c: 152: Adf_Write_Register_One();
  2460  0BA0  318E  269B  318B   	fcall	_Adf_Write_Register_One
  2461                           
  2462                           ;adf7012.c: 153: Adf_Write_Register_Two();
  2463  0BA3  3184  24C4  318B   	fcall	_Adf_Write_Register_Two
  2464                           
  2465                           ;adf7012.c: 154: Adf_Write_Register_Three();
  2466  0BA6  3180  20DD         	fcall	_Adf_Write_Register_Three
  2467  0BA8  0008               	return
  2468  0BA9                     __end_of_Adf_Write_Config:	
  2469                           
  2470                           	psect	text7
  2471  0E9B                     __ptext7:	
  2472 ;; *************** function _Adf_Write_Register_One *****************
  2473 ;; Defined at:
  2474 ;;		line 176 in file "adf7012.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  reg             4   31[BANK0 ] unsigned long 
  2479 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  2480 ;; Return value:  Size  Location     Type
  2481 ;;		None               void
  2482 ;; Registers used:
  2483 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2490 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2491 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2493 ;;Total ram usage:       19 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    7
  2496 ;; This function calls:
  2497 ;;		_Reverse_Array
  2498 ;;		_Write_Adf7012_Reg
  2499 ;;		_memcpy
  2500 ;; This function is called by:
  2501 ;;		_Adf_Write_Config
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function _Adf_Write_Register_One
  2507  0E9B                     _Adf_Write_Register_One:	
  2508                           
  2509                           ;adf7012.c: 177: uint32_t reg =
  2510                           ;adf7012.c: 178: (1) |
  2511                           ;adf7012.c: 179: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  2512                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  2513                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  2514                           
  2515                           ;incstack = 0
  2516                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  2517  0E9B  0021               	movlb	1	; select bank1
  2518  0E9C  082F               	movf	(_adf_config^(0+128)+15),w
  2519  0E9D  3901               	andlw	1
  2520  0E9E  0020               	movlb	0	; select bank0
  2521  0E9F  00B3               	movwf	??_Adf_Write_Register_One
  2522  0EA0  01B4               	clrf	??_Adf_Write_Register_One+1
  2523  0EA1  01B5               	clrf	??_Adf_Write_Register_One+2
  2524  0EA2  01B6               	clrf	??_Adf_Write_Register_One+3
  2525  0EA3  3016               	movlw	22
  2526  0EA4                     u1295:	
  2527  0EA4  35B3               	lslf	??_Adf_Write_Register_One,f
  2528  0EA5  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  2529  0EA6  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  2530  0EA7  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  2531  0EA8  0B89               	decfsz	9,f
  2532  0EA9  2EA4               	goto	u1295
  2533  0EAA  0021               	movlb	1	; select bank1
  2534  0EAB  082E               	movf	(_adf_config^(0+128)+14),w
  2535  0EAC  0020               	movlb	0	; select bank0
  2536  0EAD  00B7               	movwf	??_Adf_Write_Register_One+4
  2537  0EAE  01B8               	clrf	??_Adf_Write_Register_One+5
  2538  0EAF  01B9               	clrf	??_Adf_Write_Register_One+6
  2539  0EB0  01BA               	clrf	??_Adf_Write_Register_One+7
  2540  0EB1  300E               	movlw	14
  2541  0EB2                     u1305:	
  2542  0EB2  35B7               	lslf	??_Adf_Write_Register_One+4,f
  2543  0EB3  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  2544  0EB4  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  2545  0EB5  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  2546  0EB6  0B89               	decfsz	9,f
  2547  0EB7  2EB2               	goto	u1305
  2548  0EB8  300A               	movlw	10
  2549  0EB9  3EA0               	addlw	_adf_config& (0+255)
  2550  0EBA  0086               	movwf	6
  2551  0EBB  0187               	clrf	7
  2552  0EBC  30FF               	movlw	255
  2553  0EBD  0501               	andwf	1,w
  2554  0EBE  00BB               	movwf	??_Adf_Write_Register_One+8
  2555  0EBF  3141               	addfsr 1,1
  2556  0EC0  300F               	movlw	15
  2557  0EC1  0501               	andwf	1,w
  2558  0EC2  00BC               	movwf	??_Adf_Write_Register_One+9
  2559  0EC3  3141               	addfsr 1,1
  2560  0EC4  3000               	movlw	0
  2561  0EC5  0501               	andwf	1,w
  2562  0EC6  00BD               	movwf	??_Adf_Write_Register_One+10
  2563  0EC7  3141               	addfsr 1,1
  2564  0EC8  3000               	movlw	0
  2565  0EC9  0501               	andwf	1,w
  2566  0ECA  00BE               	movwf	??_Adf_Write_Register_One+11
  2567  0ECB  3002               	movlw	2
  2568  0ECC                     u1315:	
  2569  0ECC  35BB               	lslf	??_Adf_Write_Register_One+8,f
  2570  0ECD  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  2571  0ECE  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  2572  0ECF  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  2573  0ED0  0B89               	decfsz	9,f
  2574  0ED1  2ECC               	goto	u1315
  2575  0ED2  083B               	movf	??_Adf_Write_Register_One+8,w
  2576  0ED3  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  2577  0ED4  083C               	movf	??_Adf_Write_Register_One+9,w
  2578  0ED5  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  2579  0ED6  083D               	movf	??_Adf_Write_Register_One+10,w
  2580  0ED7  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  2581  0ED8  083E               	movf	??_Adf_Write_Register_One+11,w
  2582  0ED9  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  2583  0EDA  0837               	movf	??_Adf_Write_Register_One+4,w
  2584  0EDB  04B3               	iorwf	??_Adf_Write_Register_One,f
  2585  0EDC  0838               	movf	??_Adf_Write_Register_One+5,w
  2586  0EDD  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  2587  0EDE  0839               	movf	??_Adf_Write_Register_One+6,w
  2588  0EDF  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  2589  0EE0  083A               	movf	??_Adf_Write_Register_One+7,w
  2590  0EE1  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  2591  0EE2  3001               	movlw	1
  2592  0EE3  0433               	iorwf	??_Adf_Write_Register_One,w
  2593  0EE4  00BF               	movwf	Adf_Write_Register_One@reg
  2594  0EE5  3000               	movlw	0
  2595  0EE6  0434               	iorwf	??_Adf_Write_Register_One+1,w
  2596  0EE7  00C0               	movwf	Adf_Write_Register_One@reg+1
  2597  0EE8  3000               	movlw	0
  2598  0EE9  0435               	iorwf	??_Adf_Write_Register_One+2,w
  2599  0EEA  00C1               	movwf	Adf_Write_Register_One@reg+2
  2600  0EEB  3000               	movlw	0
  2601  0EEC  0436               	iorwf	??_Adf_Write_Register_One+3,w
  2602  0EED  00C2               	movwf	Adf_Write_Register_One@reg+3
  2603                           
  2604                           ;adf7012.c: 183: uint8_t reg_ptr[3];
  2605                           ;adf7012.c: 184: memcpy(reg_ptr, &reg, 3);
  2606  0EEE  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  2607  0EEF  00B3               	movwf	??_Adf_Write_Register_One
  2608  0EF0  0833               	movf	??_Adf_Write_Register_One,w
  2609  0EF1  00A0               	movwf	memcpy@s1
  2610  0EF2  3003               	movlw	3
  2611  0EF3  00A1               	movwf	memcpy@n
  2612  0EF4  3000               	movlw	0
  2613  0EF5  00A2               	movwf	memcpy@n+1
  2614  0EF6  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2615  0EF7  318C  24D9  318E   	fcall	_memcpy
  2616                           
  2617                           ;adf7012.c: 185: Reverse_Array(reg_ptr,3);
  2618  0EFA  3003               	movlw	3
  2619  0EFB  0020               	movlb	0	; select bank0
  2620  0EFC  00B3               	movwf	??_Adf_Write_Register_One
  2621  0EFD  0833               	movf	??_Adf_Write_Register_One,w
  2622  0EFE  00A7               	movwf	Reverse_Array@length
  2623  0EFF  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2624  0F00  318E  2600  318E   	fcall	_Reverse_Array
  2625                           
  2626                           ;adf7012.c: 186: Write_Adf7012_Reg(reg_ptr, 3);
  2627  0F03  3003               	movlw	3
  2628  0F04  0020               	movlb	0	; select bank0
  2629  0F05  00B3               	movwf	??_Adf_Write_Register_One
  2630  0F06  0833               	movf	??_Adf_Write_Register_One,w
  2631  0F07  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  2632  0F08  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2633  0F09  318D  258B         	fcall	_Write_Adf7012_Reg
  2634  0F0B  0008               	return
  2635  0F0C                     __end_of_Adf_Write_Register_One:	
  2636                           
  2637                           	psect	text8
  2638  0BB7                     __ptext8:	
  2639 ;; *************** function _Adf_Reset_Config *****************
  2640 ;; Defined at:
  2641 ;;		line 84 in file "adf7012.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;		None               void
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    6
  2662 ;; This function calls:
  2663 ;;		_Adf_Reset
  2664 ;;		_Adf_Reset_Register_One
  2665 ;;		_Adf_Reset_Register_Three
  2666 ;;		_Adf_Reset_Register_Two
  2667 ;;		_Adf_Reset_Register_Zero
  2668 ;; This function is called by:
  2669 ;;		_Radio_Setup
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _Adf_Reset_Config
  2675  0BB7                     _Adf_Reset_Config:	
  2676                           
  2677                           ;adf7012.c: 87: Adf_Reset_Register_Zero();
  2678                           
  2679                           ;incstack = 0
  2680                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  2681  0BB7  318C  2474  318B   	fcall	_Adf_Reset_Register_Zero
  2682                           
  2683                           ;adf7012.c: 88: Adf_Reset_Register_One();
  2684  0BBA  318B  23D6  318B   	fcall	_Adf_Reset_Register_One
  2685                           
  2686                           ;adf7012.c: 89: Adf_Reset_Register_Two();
  2687  0BBD  318C  2424  318B   	fcall	_Adf_Reset_Register_Two
  2688                           
  2689                           ;adf7012.c: 90: Adf_Reset_Register_Three();
  2690  0BC0  318C  24B3  318B   	fcall	_Adf_Reset_Register_Three
  2691                           
  2692                           ;adf7012.c: 92: Adf_Reset();
  2693  0BC3  318B  23E7         	fcall	_Adf_Reset
  2694  0BC5  0008               	return
  2695  0BC6                     __end_of_Adf_Reset_Config:	
  2696                           
  2697                           	psect	text9
  2698  0C74                     __ptext9:	
  2699 ;; *************** function _Adf_Reset_Register_Zero *****************
  2700 ;; Defined at:
  2701 ;;		line 96 in file "adf7012.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;		None               void
  2708 ;; Registers used:
  2709 ;;		wreg, status,2
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2717 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2718 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2719 ;;Total ram usage:        1 bytes
  2720 ;; Hardware stack levels used:    1
  2721 ;; Hardware stack levels required when called:    3
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_Adf_Reset_Config
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _Adf_Reset_Register_Zero
  2731  0C74                     _Adf_Reset_Register_Zero:	
  2732                           
  2733                           ;adf7012.c: 97: adf_config.r0.frequency_error_correction = 0;
  2734                           
  2735                           ;incstack = 0
  2736                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  2737  0C74  3000               	movlw	0
  2738  0C75  0021               	movlb	1	; select bank1
  2739  0C76  00A3               	movwf	(_adf_config+3)^(0+128)
  2740  0C77  3000               	movlw	0
  2741  0C78  00A2               	movwf	(_adf_config+2)^(0+128)
  2742  0C79  3000               	movlw	0
  2743  0C7A  00A1               	movwf	(_adf_config+1)^(0+128)
  2744  0C7B  3000               	movlw	0
  2745  0C7C  00A0               	movwf	_adf_config^(0+128)
  2746                           
  2747                           ;adf7012.c: 98: adf_config.r0.r_divider = 15;
  2748  0C7D  300F               	movlw	15
  2749  0C7E  0020               	movlb	0	; select bank0
  2750  0C7F  00A0               	movwf	??_Adf_Reset_Register_Zero
  2751  0C80  0820               	movf	??_Adf_Reset_Register_Zero,w
  2752  0C81  0021               	movlb	1	; select bank1
  2753  0C82  00A4               	movwf	(_adf_config^(0+128)+4)
  2754                           
  2755                           ;adf7012.c: 99: adf_config.r0.crystal_doubler = 0;
  2756  0C83  01A5               	clrf	(_adf_config^(0+128)+5)
  2757                           
  2758                           ;adf7012.c: 100: adf_config.r0.crystal_oscillator_disable = 0;
  2759  0C84  01A6               	clrf	(_adf_config^(0+128)+6)
  2760                           
  2761                           ;adf7012.c: 101: adf_config.r0.clock_out_divider = 2;
  2762  0C85  3002               	movlw	2
  2763  0C86  0020               	movlb	0	; select bank0
  2764  0C87  00A0               	movwf	??_Adf_Reset_Register_Zero
  2765  0C88  0820               	movf	??_Adf_Reset_Register_Zero,w
  2766  0C89  0021               	movlb	1	; select bank1
  2767  0C8A  00A7               	movwf	(_adf_config^(0+128)+7)
  2768                           
  2769                           ;adf7012.c: 102: adf_config.r0.vco_adjust = 0;
  2770  0C8B  01A8               	clrf	(_adf_config^(0+128)+8)
  2771                           
  2772                           ;adf7012.c: 103: adf_config.r0.output_divider = 2;
  2773  0C8C  3002               	movlw	2
  2774  0C8D  0020               	movlb	0	; select bank0
  2775  0C8E  00A0               	movwf	??_Adf_Reset_Register_Zero
  2776  0C8F  0820               	movf	??_Adf_Reset_Register_Zero,w
  2777  0C90  0021               	movlb	1	; select bank1
  2778  0C91  00A9               	movwf	(_adf_config^(0+128)+9)
  2779  0C92  0008               	return
  2780  0C93                     __end_of_Adf_Reset_Register_Zero:	
  2781                           
  2782                           	psect	text10
  2783  0C24                     __ptext10:	
  2784 ;; *************** function _Adf_Reset_Register_Two *****************
  2785 ;; Defined at:
  2786 ;;		line 112 in file "adf7012.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;		None               void
  2793 ;; Registers used:
  2794 ;;		wreg, status,2
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;Total ram usage:        1 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:    3
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_Adf_Reset_Config
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function _Adf_Reset_Register_Two
  2816  0C24                     _Adf_Reset_Register_Two:	
  2817                           
  2818                           ;adf7012.c: 113: adf_config.r2.mod_control = 3;
  2819                           
  2820                           ;incstack = 0
  2821                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  2822  0C24  3003               	movlw	3
  2823  0C25  0020               	movlb	0	; select bank0
  2824  0C26  00A0               	movwf	??_Adf_Reset_Register_Two
  2825  0C27  0820               	movf	??_Adf_Reset_Register_Two,w
  2826  0C28  0021               	movlb	1	; select bank1
  2827  0C29  00B0               	movwf	(_adf_config^(0+128)+16)
  2828                           
  2829                           ;adf7012.c: 114: adf_config.r2.gook = 0;
  2830  0C2A  01B1               	clrf	(_adf_config^(0+128)+17)
  2831                           
  2832                           ;adf7012.c: 115: adf_config.r2.power_amplifier_level = 15;
  2833  0C2B  300F               	movlw	15
  2834  0C2C  0020               	movlb	0	; select bank0
  2835  0C2D  00A0               	movwf	??_Adf_Reset_Register_Two
  2836  0C2E  0820               	movf	??_Adf_Reset_Register_Two,w
  2837  0C2F  0021               	movlb	1	; select bank1
  2838  0C30  00B2               	movwf	(_adf_config^(0+128)+18)
  2839                           
  2840                           ;adf7012.c: 116: adf_config.r2.modulation_deviation = 16;
  2841  0C31  3000               	movlw	0
  2842  0C32  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  2843  0C33  3000               	movlw	0
  2844  0C34  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  2845  0C35  3000               	movlw	0
  2846  0C36  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  2847  0C37  3010               	movlw	16
  2848  0C38  00B3               	movwf	(_adf_config^(0+128)+19)
  2849                           
  2850                           ;adf7012.c: 117: adf_config.r2.gfsk_modulation_control = 0;
  2851  0C39  01B7               	clrf	(_adf_config^(0+128)+23)
  2852                           
  2853                           ;adf7012.c: 118: adf_config.r2.index_counter = 0;
  2854  0C3A  01B8               	clrf	(_adf_config^(0+128)+24)
  2855  0C3B  0008               	return
  2856  0C3C                     __end_of_Adf_Reset_Register_Two:	
  2857                           
  2858                           	psect	text11
  2859  0CB3                     __ptext11:	
  2860 ;; *************** function _Adf_Reset_Register_Three *****************
  2861 ;; Defined at:
  2862 ;;		line 121 in file "adf7012.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;		None               void
  2869 ;; Registers used:
  2870 ;;		wreg, status,2
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2880 ;;Total ram usage:        1 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    3
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_Adf_Reset_Config
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           
  2891                           ;psect for function _Adf_Reset_Register_Three
  2892  0CB3                     _Adf_Reset_Register_Three:	
  2893                           
  2894                           ;adf7012.c: 122: adf_config.r3.pll_enable = 0;
  2895                           
  2896                           ;incstack = 0
  2897                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  2898  0CB3  0021               	movlb	1	; select bank1
  2899  0CB4  01B9               	clrf	(_adf_config^(0+128)+25)
  2900                           
  2901                           ;adf7012.c: 123: adf_config.r3.pa_enable = 0;
  2902  0CB5  01BA               	clrf	(_adf_config^(0+128)+26)
  2903                           
  2904                           ;adf7012.c: 124: adf_config.r3.clkout_enable = 1;
  2905  0CB6  01BB               	clrf	(_adf_config^(0+128)+27)
  2906  0CB7  0ABB               	incf	(_adf_config^(0+128)+27),f
  2907                           
  2908                           ;adf7012.c: 125: adf_config.r3.data_invert = 1;
  2909  0CB8  01BC               	clrf	(_adf_config^(0+128)+28)
  2910  0CB9  0ABC               	incf	(_adf_config^(0+128)+28),f
  2911                           
  2912                           ;adf7012.c: 126: adf_config.r3.charge_pump_current = 3;
  2913  0CBA  3003               	movlw	3
  2914  0CBB  0020               	movlb	0	; select bank0
  2915  0CBC  00A0               	movwf	??_Adf_Reset_Register_Three
  2916  0CBD  0820               	movf	??_Adf_Reset_Register_Three,w
  2917  0CBE  0021               	movlb	1	; select bank1
  2918  0CBF  00BD               	movwf	(_adf_config^(0+128)+29)
  2919                           
  2920                           ;adf7012.c: 127: adf_config.r3.bleed_up = 0;
  2921  0CC0  01BE               	clrf	(_adf_config^(0+128)+30)
  2922                           
  2923                           ;adf7012.c: 128: adf_config.r3.bleed_down = 0;
  2924  0CC1  01BF               	clrf	(_adf_config^(0+128)+31)
  2925                           
  2926                           ;adf7012.c: 129: adf_config.r3.vco_disable = 0;
  2927  0CC2  01C0               	clrf	(_adf_config^(0+128)+32)
  2928                           
  2929                           ;adf7012.c: 131: adf_config.r3.muxout = 3;
  2930  0CC3  3003               	movlw	3
  2931  0CC4  0020               	movlb	0	; select bank0
  2932  0CC5  00A0               	movwf	??_Adf_Reset_Register_Three
  2933  0CC6  0820               	movf	??_Adf_Reset_Register_Three,w
  2934  0CC7  0021               	movlb	1	; select bank1
  2935  0CC8  00C1               	movwf	(_adf_config^(0+128)+33)
  2936                           
  2937                           ;adf7012.c: 133: adf_config.r3.ld_precision = 0;
  2938  0CC9  01C2               	clrf	(_adf_config^(0+128)+34)
  2939                           
  2940                           ;adf7012.c: 134: adf_config.r3.vco_bias = 6;
  2941  0CCA  3006               	movlw	6
  2942  0CCB  0020               	movlb	0	; select bank0
  2943  0CCC  00A0               	movwf	??_Adf_Reset_Register_Three
  2944  0CCD  0820               	movf	??_Adf_Reset_Register_Three,w
  2945  0CCE  0021               	movlb	1	; select bank1
  2946  0CCF  00C3               	movwf	(_adf_config^(0+128)+35)
  2947                           
  2948                           ;adf7012.c: 135: adf_config.r3.pa_bias = 4;
  2949  0CD0  3004               	movlw	4
  2950  0CD1  0020               	movlb	0	; select bank0
  2951  0CD2  00A0               	movwf	??_Adf_Reset_Register_Three
  2952  0CD3  0820               	movf	??_Adf_Reset_Register_Three,w
  2953  0CD4  0021               	movlb	1	; select bank1
  2954  0CD5  00C4               	movwf	(_adf_config^(0+128)+36)
  2955                           
  2956                           ;adf7012.c: 136: adf_config.r3.pll_test_mode = 0;
  2957  0CD6  01C5               	clrf	(_adf_config^(0+128)+37)
  2958                           
  2959                           ;adf7012.c: 137: adf_config.r3.sd_test_mode = 0;
  2960  0CD7  01C6               	clrf	(_adf_config^(0+128)+38)
  2961  0CD8  0008               	return
  2962  0CD9                     __end_of_Adf_Reset_Register_Three:	
  2963                           
  2964                           	psect	text12
  2965  0BD6                     __ptext12:	
  2966 ;; *************** function _Adf_Reset_Register_One *****************
  2967 ;; Defined at:
  2968 ;;		line 106 in file "adf7012.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;		None               void
  2975 ;; Registers used:
  2976 ;;		wreg
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;Total ram usage:        1 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    3
  2989 ;; This function calls:
  2990 ;;		Nothing
  2991 ;; This function is called by:
  2992 ;;		_Adf_Reset_Config
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           
  2997                           ;psect for function _Adf_Reset_Register_One
  2998  0BD6                     _Adf_Reset_Register_One:	
  2999                           
  3000                           ;adf7012.c: 107: adf_config.r1.integer_n = 109;
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  3004  0BD6  306D               	movlw	109
  3005  0BD7  0020               	movlb	0	; select bank0
  3006  0BD8  00A0               	movwf	??_Adf_Reset_Register_One
  3007  0BD9  0820               	movf	??_Adf_Reset_Register_One,w
  3008  0BDA  0021               	movlb	1	; select bank1
  3009  0BDB  00AE               	movwf	(_adf_config^(0+128)+14)
  3010                           
  3011                           ;adf7012.c: 108: adf_config.r1.fractional_n = 0;
  3012  0BDC  3000               	movlw	0
  3013  0BDD  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  3014  0BDE  3000               	movlw	0
  3015  0BDF  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  3016  0BE0  3000               	movlw	0
  3017  0BE1  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  3018  0BE2  3000               	movlw	0
  3019  0BE3  00AA               	movwf	(_adf_config^(0+128)+10)
  3020                           
  3021                           ;adf7012.c: 109: adf_config.r1.prescaler = 1;
  3022  0BE4  01AF               	clrf	(_adf_config^(0+128)+15)
  3023  0BE5  0AAF               	incf	(_adf_config^(0+128)+15),f
  3024  0BE6  0008               	return
  3025  0BE7                     __end_of_Adf_Reset_Register_One:	
  3026                           
  3027                           	psect	text13
  3028  0BE7                     __ptext13:	
  3029 ;; *************** function _Adf_Reset *****************
  3030 ;; Defined at:
  3031 ;;		line 140 in file "adf7012.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;		None               void
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0, pclath, cstack
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    5
  3052 ;; This function calls:
  3053 ;;		_Delay_ms
  3054 ;; This function is called by:
  3055 ;;		_Adf_Reset_Config
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function _Adf_Reset
  3061  0BE7                     _Adf_Reset:	
  3062                           
  3063                           ;adf7012.c: 142: PORTAbits.RA5 = 0;;
  3064                           
  3065                           ;incstack = 0
  3066                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  3067  0BE7  0020               	movlb	0	; select bank0
  3068  0BE8  128C               	bcf	12,5	;volatile
  3069                           
  3070                           ;adf7012.c: 143: Delay_ms(10);
  3071  0BE9  300A               	movlw	10
  3072  0BEA  00A0               	movwf	Delay_ms@time_to_delay
  3073  0BEB  3000               	movlw	0
  3074  0BEC  00A1               	movwf	Delay_ms@time_to_delay+1
  3075  0BED  318C  2493  318B   	fcall	_Delay_ms
  3076                           
  3077                           ;adf7012.c: 144: PORTAbits.RA5 = 1;;
  3078  0BF0  0020               	movlb	0	; select bank0
  3079  0BF1  168C               	bsf	12,5	;volatile
  3080                           
  3081                           ;adf7012.c: 145: Delay_ms(10);
  3082  0BF2  300A               	movlw	10
  3083  0BF3  00A0               	movwf	Delay_ms@time_to_delay
  3084  0BF4  3000               	movlw	0
  3085  0BF5  00A1               	movwf	Delay_ms@time_to_delay+1
  3086  0BF6  318C  2493         	fcall	_Delay_ms
  3087  0BF8  0008               	return
  3088  0BF9                     __end_of_Adf_Reset:	
  3089                           
  3090                           	psect	text14
  3091  0C0C                     __ptext14:	
  3092 ;; *************** function _Configure_Audio *****************
  3093 ;; Defined at:
  3094 ;;		line 47 in file "audio_tone.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;		None               void
  3101 ;; Registers used:
  3102 ;;		wreg
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3112 ;;Total ram usage:        1 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    3
  3115 ;; This function calls:
  3116 ;;		Nothing
  3117 ;; This function is called by:
  3118 ;;		_Modem_Setup
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           
  3123                           ;psect for function _Configure_Audio
  3124  0C0C                     _Configure_Audio:	
  3125                           
  3126                           ;audio_tone.c: 48: SAMPLES_PER_BAUD = 26;
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in _Configure_Audio: [wreg]
  3130  0C0C  301A               	movlw	26
  3131  0C0D  0020               	movlb	0	; select bank0
  3132  0C0E  00A0               	movwf	??_Configure_Audio
  3133  0C0F  0820               	movf	??_Configure_Audio,w
  3134  0C10  0021               	movlb	1	; select bank1
  3135  0C11  00CD               	movwf	_SAMPLES_PER_BAUD^(0+128)
  3136                           
  3137                           ;audio_tone.c: 49: PHASE_DELTA_1200 = 7;
  3138  0C12  3000               	movlw	0
  3139  0C13  0022               	movlb	2	; select bank2
  3140  0C14  00AC               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  3141  0C15  3000               	movlw	0
  3142  0C16  00AB               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  3143  0C17  3000               	movlw	0
  3144  0C18  00AA               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  3145  0C19  3007               	movlw	7
  3146  0C1A  00A9               	movwf	_PHASE_DELTA_1200^(0+256)
  3147                           
  3148                           ;audio_tone.c: 50: PHASE_DELTA_2200 = 13;
  3149  0C1B  3000               	movlw	0
  3150  0C1C  00B0               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  3151  0C1D  3000               	movlw	0
  3152  0C1E  00AF               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  3153  0C1F  3000               	movlw	0
  3154  0C20  00AE               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  3155  0C21  300D               	movlw	13
  3156  0C22  00AD               	movwf	_PHASE_DELTA_2200^(0+256)
  3157  0C23  0008               	return
  3158  0C24                     __end_of_Configure_Audio:	
  3159                           
  3160                           	psect	text15
  3161  0D2C                     __ptext15:	
  3162 ;; *************** function _Modem_Flush_Frame *****************
  3163 ;; Defined at:
  3164 ;;		line 59 in file "audio_tone.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;		None               void
  3171 ;; Registers used:
  3172 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3180 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3181 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3182 ;;Total ram usage:        1 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    9
  3185 ;; This function calls:
  3186 ;;		_Delay_ms
  3187 ;;		_Ptt_On
  3188 ;;		_Timer0_Start
  3189 ;; This function is called by:
  3190 ;;		_main
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _Modem_Flush_Frame
  3196  0D2C                     _Modem_Flush_Frame:	
  3197                           
  3198                           ;audio_tone.c: 61: phase_delta = PHASE_DELTA_1200;
  3199                           
  3200                           ;incstack = 0
  3201                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3202  0D2C  0022               	movlb	2	; select bank2
  3203  0D2D  0829               	movf	_PHASE_DELTA_1200^(0+256),w
  3204  0D2E  0020               	movlb	0	; select bank0
  3205  0D2F  00EC               	movwf	??_Modem_Flush_Frame
  3206  0D30  086C               	movf	??_Modem_Flush_Frame,w
  3207  0D31  0021               	movlb	1	; select bank1
  3208  0D32  00D3               	movwf	_phase_delta^(0+128)
  3209                           
  3210                           ;audio_tone.c: 62: phase = 0;
  3211  0D33  0020               	movlb	0	; select bank0
  3212  0D34  01EF               	clrf	_phase
  3213                           
  3214                           ;audio_tone.c: 63: packet_pos = 0;
  3215  0D35  3000               	movlw	0
  3216  0D36  0022               	movlb	2	; select bank2
  3217  0D37  00B8               	movwf	(_packet_pos+3)^(0+256)
  3218  0D38  3000               	movlw	0
  3219  0D39  00B7               	movwf	(_packet_pos+2)^(0+256)
  3220  0D3A  3000               	movlw	0
  3221  0D3B  00B6               	movwf	(_packet_pos+1)^(0+256)
  3222  0D3C  3000               	movlw	0
  3223  0D3D  00B5               	movwf	_packet_pos^(0+256)
  3224                           
  3225                           ;audio_tone.c: 64: current_sample_in_baud = 0;
  3226  0D3E  0021               	movlb	1	; select bank1
  3227  0D3F  01D0               	clrf	_current_sample_in_baud^(0+128)
  3228                           
  3229                           ;audio_tone.c: 65: MODEM_TRANSMITTING = 1;
  3230  0D40  01CB               	clrf	_MODEM_TRANSMITTING^(0+128)
  3231  0D41  0ACB               	incf	_MODEM_TRANSMITTING^(0+128),f
  3232                           
  3233                           ;audio_tone.c: 67: PORTCbits.RC3 = 0;;
  3234  0D42  0020               	movlb	0	; select bank0
  3235  0D43  118E               	bcf	14,3	;volatile
  3236                           
  3237                           ;audio_tone.c: 68: Delay_ms(1);
  3238  0D44  3001               	movlw	1
  3239  0D45  00A0               	movwf	Delay_ms@time_to_delay
  3240  0D46  3000               	movlw	0
  3241  0D47  00A1               	movwf	Delay_ms@time_to_delay+1
  3242  0D48  318C  2493  318D   	fcall	_Delay_ms
  3243                           
  3244                           ;audio_tone.c: 78: Ptt_On();
  3245  0D4B  318D  25C4  318D   	fcall	_Ptt_On
  3246                           
  3247                           ;audio_tone.c: 80: Delay_ms(100);
  3248  0D4E  3064               	movlw	100
  3249  0D4F  0020               	movlb	0	; select bank0
  3250  0D50  00A0               	movwf	Delay_ms@time_to_delay
  3251  0D51  3000               	movlw	0
  3252  0D52  00A1               	movwf	Delay_ms@time_to_delay+1
  3253  0D53  318C  2493  318D   	fcall	_Delay_ms
  3254                           
  3255                           ;audio_tone.c: 81: Timer0_Start();
  3256  0D56  318B  2373         	fcall	_Timer0_Start
  3257  0D58  0008               	return
  3258  0D59                     __end_of_Modem_Flush_Frame:	
  3259                           
  3260                           	psect	text16
  3261  0B73                     __ptext16:	
  3262 ;; *************** function _Timer0_Start *****************
  3263 ;; Defined at:
  3264 ;;		line 244 in file "utility.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;		None               void
  3271 ;; Registers used:
  3272 ;;		status,2
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    3
  3285 ;; This function calls:
  3286 ;;		Nothing
  3287 ;; This function is called by:
  3288 ;;		_Modem_Flush_Frame
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           
  3293                           ;psect for function _Timer0_Start
  3294  0B73                     _Timer0_Start:	
  3295                           
  3296                           ;utility.c: 245: TMR0 = 0x00;
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _Timer0_Start: [status,2]
  3300  0B73  0020               	movlb	0	; select bank0
  3301  0B74  0195               	clrf	21	;volatile
  3302                           
  3303                           ;utility.c: 246: TMR0IF = 0;
  3304  0B75  110B               	bcf	11,2	;volatile
  3305                           
  3306                           ;utility.c: 247: TMR0IE = 1;
  3307  0B76  168B               	bsf	11,5	;volatile
  3308  0B77  0008               	return
  3309  0B78                     __end_of_Timer0_Start:	
  3310                           
  3311                           	psect	text17
  3312  0DC4                     __ptext17:	
  3313 ;; *************** function _Ptt_On *****************
  3314 ;; Defined at:
  3315 ;;		line 316 in file "adf7012.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      unsigned char 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3331 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3332 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3333 ;;Total ram usage:        1 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    8
  3336 ;; This function calls:
  3337 ;;		_Adf_Write_Register_Three
  3338 ;;		_Adf_Write_Register_Two
  3339 ;;		_Delay_ms
  3340 ;;		_Read_Adf7012_Muxout
  3341 ;; This function is called by:
  3342 ;;		_Modem_Flush_Frame
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _Ptt_On
  3348  0DC4                     _Ptt_On:	
  3349                           
  3350                           ;adf7012.c: 318: adf_config.r3.pa_enable = 0;
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3354  0DC4  0021               	movlb	1	; select bank1
  3355  0DC5  01BA               	clrf	(_adf_config^(0+128)+26)
  3356                           
  3357                           ;adf7012.c: 319: adf_config.r2.power_amplifier_level = 0;
  3358  0DC6  01B2               	clrf	(_adf_config^(0+128)+18)
  3359                           
  3360                           ;adf7012.c: 320: adf_config.r3.muxout = 3;
  3361  0DC7  3003               	movlw	3
  3362  0DC8  0020               	movlb	0	; select bank0
  3363  0DC9  00EB               	movwf	??_Ptt_On
  3364  0DCA  086B               	movf	??_Ptt_On,w
  3365  0DCB  0021               	movlb	1	; select bank1
  3366  0DCC  00C1               	movwf	(_adf_config^(0+128)+33)
  3367                           
  3368                           ;adf7012.c: 323: Adf_Write_Register_Two();
  3369  0DCD  3184  24C4  318D   	fcall	_Adf_Write_Register_Two
  3370                           
  3371                           ;adf7012.c: 324: Adf_Write_Register_Three();
  3372  0DD0  3180  20DD  318D   	fcall	_Adf_Write_Register_Three
  3373                           
  3374                           ;adf7012.c: 326: Delay_ms(10);
  3375  0DD3  300A               	movlw	10
  3376  0DD4  0020               	movlb	0	; select bank0
  3377  0DD5  00A0               	movwf	Delay_ms@time_to_delay
  3378  0DD6  3000               	movlw	0
  3379  0DD7  00A1               	movwf	Delay_ms@time_to_delay+1
  3380  0DD8  318C  2493  318D   	fcall	_Delay_ms
  3381                           
  3382                           ;adf7012.c: 330: if (!Read_Adf7012_Muxout())
  3383  0DDB  318B  2396  318D   	fcall	_Read_Adf7012_Muxout
  3384  0DDE  3800               	iorlw	0
  3385  0DDF  1903               	btfsc	3,2
  3386  0DE0  0008               	return
  3387                           
  3388                           ;adf7012.c: 334: else
  3389                           ;adf7012.c: 335: {
  3390                           ;adf7012.c: 337: adf_config.r3.pa_enable = 1;
  3391                           
  3392                           ;adf7012.c: 333: }
  3393                           
  3394                           ;adf7012.c: 331: {
  3395                           ;adf7012.c: 332: return 0;
  3396                           ;	Return value of _Ptt_On is never used
  3397  0DE1  0021               	movlb	1	; select bank1
  3398  0DE2  01BA               	clrf	(_adf_config^(0+128)+26)
  3399  0DE3  0ABA               	incf	(_adf_config^(0+128)+26),f
  3400                           
  3401                           ;adf7012.c: 338: adf_config.r2.power_amplifier_level = 63;
  3402  0DE4  303F               	movlw	63
  3403  0DE5  0020               	movlb	0	; select bank0
  3404  0DE6  00EB               	movwf	??_Ptt_On
  3405  0DE7  086B               	movf	??_Ptt_On,w
  3406  0DE8  0021               	movlb	1	; select bank1
  3407  0DE9  00B2               	movwf	(_adf_config^(0+128)+18)
  3408                           
  3409                           ;adf7012.c: 340: Delay_ms(10);
  3410  0DEA  300A               	movlw	10
  3411  0DEB  0020               	movlb	0	; select bank0
  3412  0DEC  00A0               	movwf	Delay_ms@time_to_delay
  3413  0DED  3000               	movlw	0
  3414  0DEE  00A1               	movwf	Delay_ms@time_to_delay+1
  3415  0DEF  318C  2493  318D   	fcall	_Delay_ms
  3416                           
  3417                           ;adf7012.c: 343: Adf_Write_Register_Two();
  3418  0DF2  3184  24C4  318D   	fcall	_Adf_Write_Register_Two
  3419                           
  3420                           ;adf7012.c: 344: Adf_Write_Register_Three();
  3421  0DF5  3180  20DD  318D   	fcall	_Adf_Write_Register_Three
  3422                           
  3423                           ;adf7012.c: 346: Delay_ms(1);
  3424  0DF8  3001               	movlw	1
  3425  0DF9  0020               	movlb	0	; select bank0
  3426  0DFA  00A0               	movwf	Delay_ms@time_to_delay
  3427  0DFB  3000               	movlw	0
  3428  0DFC  00A1               	movwf	Delay_ms@time_to_delay+1
  3429  0DFD  318C  2493         	fcall	_Delay_ms
  3430                           
  3431                           ;adf7012.c: 348: return 1;
  3432                           ;	Return value of _Ptt_On is never used
  3433  0DFF  0008               	return
  3434  0E00                     __end_of_Ptt_On:	
  3435                           
  3436                           	psect	text18
  3437  04C4                     __ptext18:	
  3438 ;; *************** function _Adf_Write_Register_Two *****************
  3439 ;; Defined at:
  3440 ;;		line 189 in file "adf7012.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  3445 ;;  reg             4   47[BANK0 ] unsigned long 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;		None               void
  3448 ;; Registers used:
  3449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3456 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3457 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3458 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3459 ;;Total ram usage:       32 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    7
  3462 ;; This function calls:
  3463 ;;		_Reverse_Array
  3464 ;;		_Write_Adf7012_Reg
  3465 ;;		_memcpy
  3466 ;; This function is called by:
  3467 ;;		_Adf_Write_Config
  3468 ;;		_Ptt_On
  3469 ;;		_Ptt_Off
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           
  3474                           ;psect for function _Adf_Write_Register_Two
  3475  04C4                     _Adf_Write_Register_Two:	
  3476                           
  3477                           ;adf7012.c: 190: uint32_t reg =
  3478                           ;adf7012.c: 191: (2) |
  3479                           ;adf7012.c: 192: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  3480                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  3481                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  3482                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  3483                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  3484                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  3485                           
  3486                           ;incstack = 0
  3487                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  3488  04C4  0021               	movlb	1	; select bank1
  3489  04C5  0838               	movf	(_adf_config^(0+128)+24),w
  3490  04C6  3903               	andlw	3
  3491  04C7  0020               	movlb	0	; select bank0
  3492  04C8  00B3               	movwf	??_Adf_Write_Register_Two
  3493  04C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  3494  04CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  3495  04CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  3496  04CC  3017               	movlw	23
  3497  04CD                     u1325:	
  3498  04CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  3499  04CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  3500  04CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  3501  04D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  3502  04D1  0B89               	decfsz	9,f
  3503  04D2  2CCD               	goto	u1325
  3504  04D3  0021               	movlb	1	; select bank1
  3505  04D4  0837               	movf	(_adf_config^(0+128)+23),w
  3506  04D5  3907               	andlw	7
  3507  04D6  0020               	movlb	0	; select bank0
  3508  04D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  3509  04D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  3510  04D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  3511  04DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  3512  04DB  3014               	movlw	20
  3513  04DC                     u1335:	
  3514  04DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  3515  04DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  3516  04DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  3517  04DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  3518  04E0  0B89               	decfsz	9,f
  3519  04E1  2CDC               	goto	u1335
  3520  04E2  3013               	movlw	19
  3521  04E3  3EA0               	addlw	_adf_config& (0+255)
  3522  04E4  0086               	movwf	6
  3523  04E5  0187               	clrf	7
  3524  04E6  30FF               	movlw	255
  3525  04E7  0501               	andwf	1,w
  3526  04E8  00BB               	movwf	??_Adf_Write_Register_Two+8
  3527  04E9  3141               	addfsr 1,1
  3528  04EA  3001               	movlw	1
  3529  04EB  0501               	andwf	1,w
  3530  04EC  00BC               	movwf	??_Adf_Write_Register_Two+9
  3531  04ED  3141               	addfsr 1,1
  3532  04EE  3000               	movlw	0
  3533  04EF  0501               	andwf	1,w
  3534  04F0  00BD               	movwf	??_Adf_Write_Register_Two+10
  3535  04F1  3141               	addfsr 1,1
  3536  04F2  3000               	movlw	0
  3537  04F3  0501               	andwf	1,w
  3538  04F4  00BE               	movwf	??_Adf_Write_Register_Two+11
  3539  04F5  300B               	movlw	11
  3540  04F6                     u1345:	
  3541  04F6  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  3542  04F7  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  3543  04F8  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  3544  04F9  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  3545  04FA  0B89               	decfsz	9,f
  3546  04FB  2CF6               	goto	u1345
  3547  04FC  0021               	movlb	1	; select bank1
  3548  04FD  0832               	movf	(_adf_config^(0+128)+18),w
  3549  04FE  393F               	andlw	63
  3550  04FF  0020               	movlb	0	; select bank0
  3551  0500  00BF               	movwf	??_Adf_Write_Register_Two+12
  3552  0501  01C0               	clrf	??_Adf_Write_Register_Two+13
  3553  0502  01C1               	clrf	??_Adf_Write_Register_Two+14
  3554  0503  01C2               	clrf	??_Adf_Write_Register_Two+15
  3555  0504  3005               	movlw	5
  3556  0505                     u1355:	
  3557  0505  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  3558  0506  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  3559  0507  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  3560  0508  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  3561  0509  0B89               	decfsz	9,f
  3562  050A  2D05               	goto	u1355
  3563  050B  0021               	movlb	1	; select bank1
  3564  050C  0831               	movf	(_adf_config^(0+128)+17),w
  3565  050D  3901               	andlw	1
  3566  050E  0020               	movlb	0	; select bank0
  3567  050F  00C3               	movwf	??_Adf_Write_Register_Two+16
  3568  0510  01C4               	clrf	??_Adf_Write_Register_Two+17
  3569  0511  01C5               	clrf	??_Adf_Write_Register_Two+18
  3570  0512  01C6               	clrf	??_Adf_Write_Register_Two+19
  3571  0513  3004               	movlw	4
  3572  0514                     u1365:	
  3573  0514  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  3574  0515  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  3575  0516  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  3576  0517  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  3577  0518  0B89               	decfsz	9,f
  3578  0519  2D14               	goto	u1365
  3579  051A  0021               	movlb	1	; select bank1
  3580  051B  0830               	movf	(_adf_config^(0+128)+16),w
  3581  051C  3903               	andlw	3
  3582  051D  0020               	movlb	0	; select bank0
  3583  051E  00C7               	movwf	??_Adf_Write_Register_Two+20
  3584  051F  01C8               	clrf	??_Adf_Write_Register_Two+21
  3585  0520  01C9               	clrf	??_Adf_Write_Register_Two+22
  3586  0521  01CA               	clrf	??_Adf_Write_Register_Two+23
  3587  0522  3002               	movlw	2
  3588  0523                     u1375:	
  3589  0523  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  3590  0524  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  3591  0525  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  3592  0526  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  3593  0527  0B89               	decfsz	9,f
  3594  0528  2D23               	goto	u1375
  3595  0529  0847               	movf	??_Adf_Write_Register_Two+20,w
  3596  052A  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  3597  052B  0848               	movf	??_Adf_Write_Register_Two+21,w
  3598  052C  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  3599  052D  0849               	movf	??_Adf_Write_Register_Two+22,w
  3600  052E  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  3601  052F  084A               	movf	??_Adf_Write_Register_Two+23,w
  3602  0530  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  3603  0531  0843               	movf	??_Adf_Write_Register_Two+16,w
  3604  0532  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  3605  0533  0844               	movf	??_Adf_Write_Register_Two+17,w
  3606  0534  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  3607  0535  0845               	movf	??_Adf_Write_Register_Two+18,w
  3608  0536  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  3609  0537  0846               	movf	??_Adf_Write_Register_Two+19,w
  3610  0538  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  3611  0539  083F               	movf	??_Adf_Write_Register_Two+12,w
  3612  053A  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  3613  053B  0840               	movf	??_Adf_Write_Register_Two+13,w
  3614  053C  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  3615  053D  0841               	movf	??_Adf_Write_Register_Two+14,w
  3616  053E  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  3617  053F  0842               	movf	??_Adf_Write_Register_Two+15,w
  3618  0540  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  3619  0541  083B               	movf	??_Adf_Write_Register_Two+8,w
  3620  0542  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  3621  0543  083C               	movf	??_Adf_Write_Register_Two+9,w
  3622  0544  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  3623  0545  083D               	movf	??_Adf_Write_Register_Two+10,w
  3624  0546  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  3625  0547  083E               	movf	??_Adf_Write_Register_Two+11,w
  3626  0548  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  3627  0549  0837               	movf	??_Adf_Write_Register_Two+4,w
  3628  054A  04B3               	iorwf	??_Adf_Write_Register_Two,f
  3629  054B  0838               	movf	??_Adf_Write_Register_Two+5,w
  3630  054C  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  3631  054D  0839               	movf	??_Adf_Write_Register_Two+6,w
  3632  054E  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  3633  054F  083A               	movf	??_Adf_Write_Register_Two+7,w
  3634  0550  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  3635  0551  3002               	movlw	2
  3636  0552  0433               	iorwf	??_Adf_Write_Register_Two,w
  3637  0553  00CF               	movwf	Adf_Write_Register_Two@reg
  3638  0554  3000               	movlw	0
  3639  0555  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  3640  0556  00D0               	movwf	Adf_Write_Register_Two@reg+1
  3641  0557  3000               	movlw	0
  3642  0558  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  3643  0559  00D1               	movwf	Adf_Write_Register_Two@reg+2
  3644  055A  3000               	movlw	0
  3645  055B  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  3646  055C  00D2               	movwf	Adf_Write_Register_Two@reg+3
  3647                           
  3648                           ;adf7012.c: 200: uint8_t reg_ptr[4];
  3649                           ;adf7012.c: 201: memcpy(reg_ptr, &reg, 4);
  3650  055D  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  3651  055E  00B3               	movwf	??_Adf_Write_Register_Two
  3652  055F  0833               	movf	??_Adf_Write_Register_Two,w
  3653  0560  00A0               	movwf	memcpy@s1
  3654  0561  3004               	movlw	4
  3655  0562  00A1               	movwf	memcpy@n
  3656  0563  3000               	movlw	0
  3657  0564  00A2               	movwf	memcpy@n+1
  3658  0565  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3659  0566  318C  24D9  3184   	fcall	_memcpy
  3660                           
  3661                           ;adf7012.c: 202: Reverse_Array(reg_ptr,4);
  3662  0569  3004               	movlw	4
  3663  056A  0020               	movlb	0	; select bank0
  3664  056B  00B3               	movwf	??_Adf_Write_Register_Two
  3665  056C  0833               	movf	??_Adf_Write_Register_Two,w
  3666  056D  00A7               	movwf	Reverse_Array@length
  3667  056E  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3668  056F  318E  2600  3184   	fcall	_Reverse_Array
  3669                           
  3670                           ;adf7012.c: 203: Write_Adf7012_Reg(reg_ptr, 4);
  3671  0572  3004               	movlw	4
  3672  0573  0020               	movlb	0	; select bank0
  3673  0574  00B3               	movwf	??_Adf_Write_Register_Two
  3674  0575  0833               	movf	??_Adf_Write_Register_Two,w
  3675  0576  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  3676  0577  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3677  0578  318D  258B         	fcall	_Write_Adf7012_Reg
  3678  057A  0008               	return
  3679  057B                     __end_of_Adf_Write_Register_Two:	
  3680                           
  3681                           	psect	text19
  3682  03E9                     __ptext19:	
  3683 ;; *************** function _Gpio_Config *****************
  3684 ;; Defined at:
  3685 ;;		line 31 in file "utility.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      unsigned char 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3701 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3702 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3703 ;;Total ram usage:        1 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; Hardware stack levels required when called:    3
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_main
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function _Gpio_Config
  3715  03E9                     _Gpio_Config:	
  3716                           
  3717                           ;utility.c: 34: TRISA |= 0b00000010;
  3718                           
  3719                           ;incstack = 0
  3720                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  3721  03E9  0021               	movlb	1	; select bank1
  3722  03EA  148C               	bsf	12,1	;volatile
  3723                           
  3724                           ;utility.c: 35: TRISA &= 0b11001011;
  3725  03EB  30CB               	movlw	203
  3726  03EC  0020               	movlb	0	; select bank0
  3727  03ED  00A0               	movwf	??_Gpio_Config
  3728  03EE  0820               	movf	??_Gpio_Config,w
  3729  03EF  0021               	movlb	1	; select bank1
  3730  03F0  058C               	andwf	12,f	;volatile
  3731                           
  3732                           ;utility.c: 36: TRISC |= 0b00110011;
  3733  03F1  3033               	movlw	51
  3734  03F2  0020               	movlb	0	; select bank0
  3735  03F3  00A0               	movwf	??_Gpio_Config
  3736  03F4  0820               	movf	??_Gpio_Config,w
  3737  03F5  0021               	movlb	1	; select bank1
  3738  03F6  048E               	iorwf	14,f	;volatile
  3739                           
  3740                           ;utility.c: 37: TRISC &= 0b11110011;
  3741  03F7  30F3               	movlw	243
  3742  03F8  0020               	movlb	0	; select bank0
  3743  03F9  00A0               	movwf	??_Gpio_Config
  3744  03FA  0820               	movf	??_Gpio_Config,w
  3745  03FB  0021               	movlb	1	; select bank1
  3746  03FC  058E               	andwf	14,f	;volatile
  3747  03FD  0008               	return
  3748  03FE                     __end_of_Gpio_Config:	
  3749                           ;utility.c: 39: return 1;
  3750                           ;	Return value of _Gpio_Config is never used
  3751                           
  3752                           
  3753                           	psect	text20
  3754  0C57                     __ptext20:	
  3755 ;; *************** function _Ax25_Send_String *****************
  3756 ;; Defined at:
  3757 ;;		line 91 in file "ax25.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  3760 ;;		 -> STR_1(6), 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  i               2   15[BANK0 ] int 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;		None               void
  3765 ;; Registers used:
  3766 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3773 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3775 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3776 ;;Total ram usage:        4 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    6
  3779 ;; This function calls:
  3780 ;;		_Ax25_Send_Byte
  3781 ;; This function is called by:
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           
  3787                           ;psect for function _Ax25_Send_String
  3788  0C57                     _Ax25_Send_String:	
  3789                           
  3790                           ;ax25.c: 93: int i;
  3791                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  3792                           
  3793                           ;incstack = 0
  3794                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3795  0C57  0020               	movlb	0	; select bank0
  3796  0C58  01AF               	clrf	Ax25_Send_String@i
  3797  0C59  01B0               	clrf	Ax25_Send_String@i+1
  3798  0C5A                     l2411:	
  3799  0C5A  082D               	movf	Ax25_Send_String@string,w
  3800  0C5B  072F               	addwf	Ax25_Send_String@i,w
  3801  0C5C  0084               	movwf	4
  3802  0C5D  082E               	movf	Ax25_Send_String@string+1,w
  3803  0C5E  3D30               	addwfc	Ax25_Send_String@i+1,w
  3804  0C5F  0085               	movwf	5
  3805  0C60  0800               	movf	0,w	;code access
  3806  0C61  3800               	iorlw	0
  3807  0C62  1903               	btfsc	3,2
  3808  0C63  0008               	return
  3809                           
  3810                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  3811  0C64  082D               	movf	Ax25_Send_String@string,w
  3812  0C65  072F               	addwf	Ax25_Send_String@i,w
  3813  0C66  0084               	movwf	4
  3814  0C67  082E               	movf	Ax25_Send_String@string+1,w
  3815  0C68  3D30               	addwfc	Ax25_Send_String@i+1,w
  3816  0C69  0085               	movwf	5
  3817  0C6A  0800               	movf	0,w	;code access
  3818  0C6B  318B  237E  318C   	fcall	_Ax25_Send_Byte
  3819  0C6E  3001               	movlw	1
  3820  0C6F  0020               	movlb	0	; select bank0
  3821  0C70  07AF               	addwf	Ax25_Send_String@i,f
  3822  0C71  3000               	movlw	0
  3823  0C72  3DB0               	addwfc	Ax25_Send_String@i+1,f
  3824  0C73  2C5A               	goto	l2411
  3825  0C74                     __end_of_Ax25_Send_String:	
  3826                           
  3827                           	psect	text21
  3828  0B7E                     __ptext21:	
  3829 ;; *************** function _Ax25_Send_Byte *****************
  3830 ;; Defined at:
  3831 ;;		line 58 in file "ax25.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;  byte            1    wreg     unsigned char 
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;  byte            1   12[BANK0 ] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;		None               void
  3838 ;; Registers used:
  3839 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;Total ram usage:        1 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    5
  3852 ;; This function calls:
  3853 ;;		_Send_Byte
  3854 ;; This function is called by:
  3855 ;;		_Ax25_Send_String
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           
  3860                           ;psect for function _Ax25_Send_Byte
  3861  0B7E                     _Ax25_Send_Byte:	
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3865                           ;Ax25_Send_Byte@byte stored from wreg
  3866  0B7E  0020               	movlb	0	; select bank0
  3867  0B7F  00AC               	movwf	Ax25_Send_Byte@byte
  3868                           
  3869                           ;ax25.c: 60: Send_Byte(byte);
  3870  0B80  082C               	movf	Ax25_Send_Byte@byte,w
  3871  0B81  3186  2631         	fcall	_Send_Byte
  3872  0B83  0008               	return
  3873  0B84                     __end_of_Ax25_Send_Byte:	
  3874                           
  3875                           	psect	text22
  3876  0249                     __ptext22:	
  3877 ;; *************** function _Ax25_Send_Header *****************
  3878 ;; Defined at:
  3879 ;;		line 99 in file "ax25.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  addresses       1    wreg     PTR struct .
  3882 ;;		 -> main@beacon_address(16), 
  3883 ;;  num_addresse    2   12[BANK0 ] int 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  addresses       1   19[BANK0 ] PTR struct .
  3886 ;;		 -> main@beacon_address(16), 
  3887 ;;  i               2   20[BANK0 ] int 
  3888 ;;  j               2   17[BANK0 ] int 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;		None               void
  3891 ;; Registers used:
  3892 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3899 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3900 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3901 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;Total ram usage:       10 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; Hardware stack levels required when called:    5
  3905 ;; This function calls:
  3906 ;;		_Ax25_Send_Flag
  3907 ;;		_Ax25_Send_Sync
  3908 ;;		_Send_Byte
  3909 ;; This function is called by:
  3910 ;;		_main
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           
  3915                           ;psect for function _Ax25_Send_Header
  3916  0249                     _Ax25_Send_Header:	
  3917                           
  3918                           ;incstack = 0
  3919                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3920                           ;Ax25_Send_Header@addresses stored from wreg
  3921  0249  0020               	movlb	0	; select bank0
  3922  024A  00B3               	movwf	Ax25_Send_Header@addresses
  3923                           
  3924                           ;ax25.c: 102: int i, j;
  3925                           ;ax25.c: 103: modem_packet_size = 0;
  3926  024B  3000               	movlw	0
  3927  024C  00FC               	movwf	_modem_packet_size+3
  3928  024D  3000               	movlw	0
  3929  024E  00FB               	movwf	_modem_packet_size+2
  3930  024F  3000               	movlw	0
  3931  0250  00FA               	movwf	_modem_packet_size+1
  3932  0251  3000               	movlw	0
  3933  0252  00F9               	movwf	_modem_packet_size
  3934                           
  3935                           ;ax25.c: 104: ones_in_a_row = 0;
  3936  0253  0022               	movlb	2	; select bank2
  3937  0254  01B9               	clrf	_ones_in_a_row^(0+256)
  3938  0255  01BA               	clrf	(_ones_in_a_row+1)^(0+256)
  3939                           
  3940                           ;ax25.c: 105: crc = 0xffff;
  3941  0256  30FF               	movlw	255
  3942  0257  0021               	movlb	1	; select bank1
  3943  0258  00C7               	movwf	_crc^(0+128)
  3944  0259  30FF               	movlw	255
  3945  025A  00C8               	movwf	(_crc^(0+128)+1)
  3946                           
  3947                           ;ax25.c: 108: for (i = 0; i < 10; i++)
  3948  025B  0020               	movlb	0	; select bank0
  3949  025C  01B4               	clrf	Ax25_Send_Header@i
  3950  025D  01B5               	clrf	Ax25_Send_Header@i+1
  3951  025E  0835               	movf	Ax25_Send_Header@i+1,w
  3952  025F  3A80               	xorlw	128
  3953  0260  00AE               	movwf	??_Ax25_Send_Header
  3954  0261  3080               	movlw	128
  3955  0262  022E               	subwf	??_Ax25_Send_Header,w
  3956  0263  1D03               	skipz
  3957  0264  2A67               	goto	u1945
  3958  0265  300A               	movlw	10
  3959  0266  0234               	subwf	Ax25_Send_Header@i,w
  3960  0267                     u1945:	
  3961  0267  1803               	btfsc	3,0
  3962  0268  2A7C               	goto	l2367
  3963  0269                     l2361:	
  3964                           
  3965                           ;ax25.c: 109: {
  3966                           ;ax25.c: 110: Ax25_Send_Sync();
  3967  0269  318F  270C  3182   	fcall	_Ax25_Send_Sync
  3968  026C  3001               	movlw	1
  3969  026D  0020               	movlb	0	; select bank0
  3970  026E  07B4               	addwf	Ax25_Send_Header@i,f
  3971  026F  3000               	movlw	0
  3972  0270  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3973  0271  0835               	movf	Ax25_Send_Header@i+1,w
  3974  0272  3A80               	xorlw	128
  3975  0273  00AE               	movwf	??_Ax25_Send_Header
  3976  0274  3080               	movlw	128
  3977  0275  022E               	subwf	??_Ax25_Send_Header,w
  3978  0276  1D03               	skipz
  3979  0277  2A7A               	goto	u1955
  3980  0278  300A               	movlw	10
  3981  0279  0234               	subwf	Ax25_Send_Header@i,w
  3982  027A                     u1955:	
  3983  027A  1C03               	skipc
  3984  027B  2A69               	goto	l2361
  3985  027C                     l2367:	
  3986                           
  3987                           ;ax25.c: 111: }
  3988                           ;ax25.c: 114: for (i = 0; i < 3; i++)
  3989  027C  0020               	movlb	0	; select bank0
  3990  027D  01B4               	clrf	Ax25_Send_Header@i
  3991  027E  01B5               	clrf	Ax25_Send_Header@i+1
  3992  027F  0835               	movf	Ax25_Send_Header@i+1,w
  3993  0280  3A80               	xorlw	128
  3994  0281  00AE               	movwf	??_Ax25_Send_Header
  3995  0282  3080               	movlw	128
  3996  0283  022E               	subwf	??_Ax25_Send_Header,w
  3997  0284  1D03               	skipz
  3998  0285  2A88               	goto	u1965
  3999  0286  3003               	movlw	3
  4000  0287  0234               	subwf	Ax25_Send_Header@i,w
  4001  0288                     u1965:	
  4002  0288  1803               	btfsc	3,0
  4003  0289  2A9D               	goto	l2379
  4004  028A                     l2373:	
  4005                           
  4006                           ;ax25.c: 115: {
  4007                           ;ax25.c: 116: Ax25_Send_Flag();
  4008  028A  3187  2775  3182   	fcall	_Ax25_Send_Flag
  4009  028D  3001               	movlw	1
  4010  028E  0020               	movlb	0	; select bank0
  4011  028F  07B4               	addwf	Ax25_Send_Header@i,f
  4012  0290  3000               	movlw	0
  4013  0291  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  4014  0292  0835               	movf	Ax25_Send_Header@i+1,w
  4015  0293  3A80               	xorlw	128
  4016  0294  00AE               	movwf	??_Ax25_Send_Header
  4017  0295  3080               	movlw	128
  4018  0296  022E               	subwf	??_Ax25_Send_Header,w
  4019  0297  1D03               	skipz
  4020  0298  2A9B               	goto	u1975
  4021  0299  3003               	movlw	3
  4022  029A  0234               	subwf	Ax25_Send_Header@i,w
  4023  029B                     u1975:	
  4024  029B  1C03               	skipc
  4025  029C  2A8A               	goto	l2373
  4026  029D                     l2379:	
  4027                           
  4028                           ;ax25.c: 117: }
  4029                           ;ax25.c: 119: for (i = 0; i < num_addresses; i++) {
  4030  029D  0020               	movlb	0	; select bank0
  4031  029E  01B4               	clrf	Ax25_Send_Header@i
  4032  029F  01B5               	clrf	Ax25_Send_Header@i+1
  4033  02A0                     l2401:	
  4034  02A0  0835               	movf	Ax25_Send_Header@i+1,w
  4035  02A1  3A80               	xorlw	128
  4036  02A2  00AE               	movwf	??_Ax25_Send_Header
  4037  02A3  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  4038  02A4  3A80               	xorlw	128
  4039  02A5  022E               	subwf	??_Ax25_Send_Header,w
  4040  02A6  1D03               	skipz
  4041  02A7  2AAA               	goto	u2045
  4042  02A8  082C               	movf	Ax25_Send_Header@num_addresses,w
  4043  02A9  0234               	subwf	Ax25_Send_Header@i,w
  4044  02AA                     u2045:	
  4045  02AA  1803               	btfsc	3,0
  4046  02AB  2B1A               	goto	l2403
  4047                           
  4048                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  4049  02AC  0020               	movlb	0	; select bank0
  4050  02AD  01B1               	clrf	Ax25_Send_Header@j
  4051  02AE  01B2               	clrf	Ax25_Send_Header@j+1
  4052  02AF  0832               	movf	Ax25_Send_Header@j+1,w
  4053  02B0  3A80               	xorlw	128
  4054  02B1  00AE               	movwf	??_Ax25_Send_Header
  4055  02B2  3080               	movlw	128
  4056  02B3  022E               	subwf	??_Ax25_Send_Header,w
  4057  02B4  1D03               	skipz
  4058  02B5  2AB8               	goto	u1985
  4059  02B6  3006               	movlw	6
  4060  02B7  0231               	subwf	Ax25_Send_Header@j,w
  4061  02B8                     u1985:	
  4062  02B8  1803               	btfsc	3,0
  4063  02B9  2ADF               	goto	l2393
  4064  02BA                     l2387:	
  4065                           
  4066                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  4067  02BA  0020               	movlb	0	; select bank0
  4068  02BB  0834               	movf	Ax25_Send_Header@i,w
  4069  02BC  00AE               	movwf	??_Ax25_Send_Header
  4070  02BD  3002               	movlw	2
  4071  02BE                     u1995:	
  4072  02BE  35AE               	lslf	??_Ax25_Send_Header,f
  4073  02BF  3EFF               	addlw	-1
  4074  02C0  1D03               	skipz
  4075  02C1  2ABE               	goto	u1995
  4076  02C2  352E               	lslf	??_Ax25_Send_Header,w
  4077  02C3  0733               	addwf	Ax25_Send_Header@addresses,w
  4078  02C4  00AF               	movwf	??_Ax25_Send_Header+1
  4079  02C5  0831               	movf	Ax25_Send_Header@j,w
  4080  02C6  072F               	addwf	??_Ax25_Send_Header+1,w
  4081  02C7  00B0               	movwf	??_Ax25_Send_Header+2
  4082  02C8  0830               	movf	??_Ax25_Send_Header+2,w
  4083  02C9  0086               	movwf	6
  4084  02CA  0187               	clrf	7
  4085  02CB  3501               	lslf	1,w
  4086  02CC  3186  2631  3182   	fcall	_Send_Byte
  4087  02CF  3001               	movlw	1
  4088  02D0  0020               	movlb	0	; select bank0
  4089  02D1  07B1               	addwf	Ax25_Send_Header@j,f
  4090  02D2  3000               	movlw	0
  4091  02D3  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  4092  02D4  0832               	movf	Ax25_Send_Header@j+1,w
  4093  02D5  3A80               	xorlw	128
  4094  02D6  00AE               	movwf	??_Ax25_Send_Header
  4095  02D7  3080               	movlw	128
  4096  02D8  022E               	subwf	??_Ax25_Send_Header,w
  4097  02D9  1D03               	skipz
  4098  02DA  2ADD               	goto	u2005
  4099  02DB  3006               	movlw	6
  4100  02DC  0231               	subwf	Ax25_Send_Header@j,w
  4101  02DD                     u2005:	
  4102  02DD  1C03               	skipc
  4103  02DE  2ABA               	goto	l2387
  4104  02DF                     l2393:	
  4105                           
  4106                           ;ax25.c: 125: if (i == num_addresses - 1){
  4107  02DF  0020               	movlb	0	; select bank0
  4108  02E0  082C               	movf	Ax25_Send_Header@num_addresses,w
  4109  02E1  3EFF               	addlw	255
  4110  02E2  00AE               	movwf	??_Ax25_Send_Header
  4111  02E3  30FF               	movlw	255
  4112  02E4  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  4113  02E5  00AF               	movwf	??_Ax25_Send_Header+1
  4114  02E6  0835               	movf	Ax25_Send_Header@i+1,w
  4115  02E7  062F               	xorwf	??_Ax25_Send_Header+1,w
  4116  02E8  1D03               	skipz
  4117  02E9  2AEC               	goto	u2015
  4118  02EA  0834               	movf	Ax25_Send_Header@i,w
  4119  02EB  062E               	xorwf	??_Ax25_Send_Header,w
  4120  02EC                     u2015:	
  4121  02EC  1D03               	skipz
  4122  02ED  2B00               	goto	l2397
  4123                           
  4124                           ;ax25.c: 126: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  4125  02EE  0834               	movf	Ax25_Send_Header@i,w
  4126  02EF  00AE               	movwf	??_Ax25_Send_Header
  4127  02F0  3002               	movlw	2
  4128  02F1                     u2025:	
  4129  02F1  35AE               	lslf	??_Ax25_Send_Header,f
  4130  02F2  3EFF               	addlw	-1
  4131  02F3  1D03               	skipz
  4132  02F4  2AF1               	goto	u2025
  4133  02F5  352E               	lslf	??_Ax25_Send_Header,w
  4134  02F6  0733               	addwf	Ax25_Send_Header@addresses,w
  4135  02F7  00AF               	movwf	??_Ax25_Send_Header+1
  4136  02F8  082F               	movf	??_Ax25_Send_Header+1,w
  4137  02F9  3E07               	addlw	7
  4138  02FA  0086               	movwf	6
  4139  02FB  0187               	clrf	7
  4140  02FC  3501               	lslf	1,w
  4141  02FD  3E60               	addlw	96
  4142  02FE  3801               	iorlw	1
  4143  02FF  2B11               	goto	L1
  4144  0300                     l2397:	
  4145                           ;ax25.c: 128: }
  4146                           
  4147                           
  4148                           ;ax25.c: 129: else
  4149                           ;ax25.c: 130: Send_Byte(('0' + addresses[i].ssid) << 1);
  4150  0300  0020               	movlb	0	; select bank0
  4151  0301  0834               	movf	Ax25_Send_Header@i,w
  4152  0302  00AE               	movwf	??_Ax25_Send_Header
  4153  0303  3002               	movlw	2
  4154  0304                     u2035:	
  4155  0304  35AE               	lslf	??_Ax25_Send_Header,f
  4156  0305  3EFF               	addlw	-1
  4157  0306  1D03               	skipz
  4158  0307  2B04               	goto	u2035
  4159  0308  352E               	lslf	??_Ax25_Send_Header,w
  4160  0309  0733               	addwf	Ax25_Send_Header@addresses,w
  4161  030A  00AF               	movwf	??_Ax25_Send_Header+1
  4162  030B  082F               	movf	??_Ax25_Send_Header+1,w
  4163  030C  3E07               	addlw	7
  4164  030D  0086               	movwf	6
  4165  030E  0187               	clrf	7
  4166  030F  3501               	lslf	1,w
  4167  0310  3E60               	addlw	96
  4168  0311                     L1:	
  4169  0311  3186  2631  3182   	fcall	_Send_Byte
  4170  0314  3001               	movlw	1
  4171  0315  0020               	movlb	0	; select bank0
  4172  0316  07B4               	addwf	Ax25_Send_Header@i,f
  4173  0317  3000               	movlw	0
  4174  0318  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  4175  0319  2AA0               	goto	l2401
  4176  031A                     l2403:	
  4177                           
  4178                           ;ax25.c: 131: }
  4179                           ;ax25.c: 134: Send_Byte(0x03);
  4180  031A  3003               	movlw	3
  4181  031B  3186  2631  3182   	fcall	_Send_Byte
  4182                           
  4183                           ;ax25.c: 137: Send_Byte(0xf0);
  4184  031E  30F0               	movlw	240
  4185  031F  3186  2631         	fcall	_Send_Byte
  4186  0321  0008               	return
  4187  0322                     __end_of_Ax25_Send_Header:	
  4188                           
  4189                           	psect	text23
  4190  0F0C                     __ptext23:	
  4191 ;; *************** function _Ax25_Send_Sync *****************
  4192 ;; Defined at:
  4193 ;;		line 63 in file "ax25.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;  i               2    7[BANK0 ] int 
  4198 ;;  byte            1    6[BANK0 ] unsigned char 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;		None               void
  4201 ;; Registers used:
  4202 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4209 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;Total ram usage:        9 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    3
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_Ax25_Send_Header
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           
  4223                           ;psect for function _Ax25_Send_Sync
  4224  0F0C                     _Ax25_Send_Sync:	
  4225                           
  4226                           ;ax25.c: 65: uint8_t byte = 0x00;
  4227                           
  4228                           ;incstack = 0
  4229                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  4230  0F0C  0020               	movlb	0	; select bank0
  4231  0F0D  01A6               	clrf	Ax25_Send_Sync@byte
  4232                           
  4233                           ;ax25.c: 66: int i;
  4234                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  4235  0F0E  01A7               	clrf	Ax25_Send_Sync@i
  4236  0F0F  01A8               	clrf	Ax25_Send_Sync@i+1
  4237  0F10                     L2:	
  4238  0F10  0828               	movf	Ax25_Send_Sync@i+1,w
  4239  0F11  3A80               	xorlw	128
  4240  0F12  00A0               	movwf	??_Ax25_Send_Sync
  4241  0F13  3080               	movlw	128
  4242  0F14  0220               	subwf	??_Ax25_Send_Sync,w
  4243  0F15  3008               	movlw	8
  4244  0F16  1903               	btfsc	3,2
  4245  0F17  0227               	subwf	Ax25_Send_Sync@i,w
  4246  0F18  1803               	btfsc	3,0
  4247  0F19  0008               	return
  4248                           
  4249                           ;ax25.c: 68: if (modem_packet_size >= 64 * 8)
  4250  0F1A  3000               	movlw	0
  4251  0F1B  027C               	subwf	_modem_packet_size+3,w
  4252  0F1C  1D03               	skipz
  4253  0F1D  2F28               	goto	u1685
  4254  0F1E  3000               	movlw	0
  4255  0F1F  027B               	subwf	_modem_packet_size+2,w
  4256  0F20  1D03               	skipz
  4257  0F21  2F28               	goto	u1685
  4258  0F22  3002               	movlw	2
  4259  0F23  027A               	subwf	_modem_packet_size+1,w
  4260  0F24  1D03               	skipz
  4261  0F25  2F28               	goto	u1685
  4262  0F26  3000               	movlw	0
  4263  0F27  0279               	subwf	_modem_packet_size,w
  4264  0F28                     u1685:	
  4265  0F28  1803               	btfsc	3,0
  4266  0F29  0008               	return
  4267                           
  4268                           ;ax25.c: 70: if ((byte >> i) & 1)
  4269                           
  4270                           ;ax25.c: 69: return;
  4271  0F2A  0020               	movlb	0	; select bank0
  4272  0F2B  0826               	movf	Ax25_Send_Sync@byte,w
  4273  0F2C  00A0               	movwf	??_Ax25_Send_Sync
  4274  0F2D  0A27               	incf	Ax25_Send_Sync@i,w
  4275  0F2E  2F30               	goto	u1694
  4276  0F2F                     u1695:	
  4277  0F2F  36A0               	lsrf	??_Ax25_Send_Sync,f
  4278  0F30                     u1694:	
  4279  0F30  0B89               	decfsz	9,f
  4280  0F31  2F2F               	goto	u1695
  4281  0F32  1C20               	btfss	??_Ax25_Send_Sync,0
  4282  0F33  2F56               	goto	l2141
  4283                           
  4284                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4285  0F34  3001               	movlw	1
  4286  0F35  00A0               	movwf	??_Ax25_Send_Sync
  4287  0F36  0879               	movf	_modem_packet_size,w
  4288  0F37  3907               	andlw	7
  4289  0F38  0A89               	incf	9,f
  4290  0F39  2F3B               	goto	u1714
  4291  0F3A                     u1715:	
  4292  0F3A  35A0               	lslf	??_Ax25_Send_Sync,f
  4293  0F3B                     u1714:	
  4294  0F3B  0B89               	decfsz	9,f
  4295  0F3C  2F3A               	goto	u1715
  4296  0F3D  0820               	movf	??_Ax25_Send_Sync,w
  4297  0F3E  00A1               	movwf	??_Ax25_Send_Sync+1
  4298  0F3F  0879               	movf	_modem_packet_size,w
  4299  0F40  00A2               	movwf	??_Ax25_Send_Sync+2
  4300  0F41  087A               	movf	_modem_packet_size+1,w
  4301  0F42  00A3               	movwf	??_Ax25_Send_Sync+3
  4302  0F43  087B               	movf	_modem_packet_size+2,w
  4303  0F44  00A4               	movwf	??_Ax25_Send_Sync+4
  4304  0F45  087C               	movf	_modem_packet_size+3,w
  4305  0F46  00A5               	movwf	??_Ax25_Send_Sync+5
  4306  0F47  3003               	movlw	3
  4307  0F48                     u1725:	
  4308  0F48  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  4309  0F49  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  4310  0F4A  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  4311  0F4B  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  4312  0F4C  0B89               	decfsz	9,f
  4313  0F4D  2F48               	goto	u1725
  4314  0F4E  0822               	movf	??_Ax25_Send_Sync+2,w
  4315  0F4F  3EA0               	addlw	_modem_packet& (0+255)
  4316  0F50  0086               	movwf	6
  4317  0F51  3001               	movlw	1	; select bank3/4
  4318  0F52  0087               	movwf	7
  4319  0F53  0821               	movf	??_Ax25_Send_Sync+1,w
  4320  0F54  0481               	iorwf	1,f
  4321  0F55  2F78               	goto	l2143
  4322  0F56                     l2141:	
  4323                           
  4324                           ;ax25.c: 72: else
  4325                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4326  0F56  3001               	movlw	1
  4327  0F57  00A0               	movwf	??_Ax25_Send_Sync
  4328  0F58  0879               	movf	_modem_packet_size,w
  4329  0F59  3907               	andlw	7
  4330  0F5A  0A89               	incf	9,f
  4331  0F5B  2F5D               	goto	u1734
  4332  0F5C                     u1735:	
  4333  0F5C  35A0               	lslf	??_Ax25_Send_Sync,f
  4334  0F5D                     u1734:	
  4335  0F5D  0B89               	decfsz	9,f
  4336  0F5E  2F5C               	goto	u1735
  4337  0F5F  0820               	movf	??_Ax25_Send_Sync,w
  4338  0F60  3AFF               	xorlw	255
  4339  0F61  00A1               	movwf	??_Ax25_Send_Sync+1
  4340  0F62  0879               	movf	_modem_packet_size,w
  4341  0F63  00A2               	movwf	??_Ax25_Send_Sync+2
  4342  0F64  087A               	movf	_modem_packet_size+1,w
  4343  0F65  00A3               	movwf	??_Ax25_Send_Sync+3
  4344  0F66  087B               	movf	_modem_packet_size+2,w
  4345  0F67  00A4               	movwf	??_Ax25_Send_Sync+4
  4346  0F68  087C               	movf	_modem_packet_size+3,w
  4347  0F69  00A5               	movwf	??_Ax25_Send_Sync+5
  4348  0F6A  3003               	movlw	3
  4349  0F6B                     u1745:	
  4350  0F6B  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  4351  0F6C  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  4352  0F6D  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  4353  0F6E  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  4354  0F6F  0B89               	decfsz	9,f
  4355  0F70  2F6B               	goto	u1745
  4356  0F71  0822               	movf	??_Ax25_Send_Sync+2,w
  4357  0F72  3EA0               	addlw	_modem_packet& (0+255)
  4358  0F73  0086               	movwf	6
  4359  0F74  3001               	movlw	1	; select bank3/4
  4360  0F75  0087               	movwf	7
  4361  0F76  0821               	movf	??_Ax25_Send_Sync+1,w
  4362  0F77  0581               	andwf	1,f
  4363  0F78                     l2143:	
  4364  0F78  3001               	movlw	1
  4365  0F79  07A7               	addwf	Ax25_Send_Sync@i,f
  4366  0F7A  3000               	movlw	0
  4367  0F7B  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  4368  0F7C  3001               	movlw	1
  4369  0F7D  07F9               	addwf	_modem_packet_size,f
  4370  0F7E  3000               	movlw	0
  4371  0F7F  3DFA               	addwfc	_modem_packet_size+1,f
  4372  0F80  3000               	movlw	0
  4373  0F81  3DFB               	addwfc	_modem_packet_size+2,f
  4374  0F82  3000               	movlw	0
  4375  0F83  3DFC               	addwfc	_modem_packet_size+3,f
  4376  0F84  2F10               	goto	L2
  4377  0F85                     __end_of_Ax25_Send_Sync:	
  4378                           
  4379                           	psect	text24
  4380  0C3C                     __ptext24:	
  4381 ;; *************** function _Ax25_Send_Footer *****************
  4382 ;; Defined at:
  4383 ;;		line 141 in file "ax25.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  final_crc       2   12[BANK0 ] unsigned int 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;		None               void
  4390 ;; Registers used:
  4391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4400 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4401 ;;Total ram usage:        2 bytes
  4402 ;; Hardware stack levels used:    1
  4403 ;; Hardware stack levels required when called:    5
  4404 ;; This function calls:
  4405 ;;		_Ax25_Send_Flag
  4406 ;;		_Send_Byte
  4407 ;; This function is called by:
  4408 ;;		_main
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           
  4413                           ;psect for function _Ax25_Send_Footer
  4414  0C3C                     _Ax25_Send_Footer:	
  4415                           
  4416                           ;ax25.c: 144: uint16_t final_crc = crc;
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4420  0C3C  0021               	movlb	1	; select bank1
  4421  0C3D  0848               	movf	(_crc+1)^(0+128),w
  4422  0C3E  0020               	movlb	0	; select bank0
  4423  0C3F  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  4424  0C40  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  4425  0C41  0021               	movlb	1	; select bank1
  4426  0C42  0847               	movf	_crc^(0+128),w
  4427  0C43  0020               	movlb	0	; select bank0
  4428  0C44  01AC               	clrf	Ax25_Send_Footer@final_crc
  4429  0C45  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  4430                           
  4431                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  4432  0C46  092C               	comf	Ax25_Send_Footer@final_crc,w
  4433  0C47  3186  2631  318C   	fcall	_Send_Byte
  4434                           
  4435                           ;ax25.c: 148: final_crc >>= 8;
  4436  0C4A  3008               	movlw	8
  4437  0C4B  0020               	movlb	0	; select bank0
  4438  0C4C                     u2065:	
  4439  0C4C  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  4440  0C4D  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  4441  0C4E  0B89               	decfsz	9,f
  4442  0C4F  2C4C               	goto	u2065
  4443                           
  4444                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  4445  0C50  092C               	comf	Ax25_Send_Footer@final_crc,w
  4446  0C51  3186  2631  318C   	fcall	_Send_Byte
  4447                           
  4448                           ;ax25.c: 152: Ax25_Send_Flag();
  4449  0C54  3187  2775         	fcall	_Ax25_Send_Flag
  4450  0C56  0008               	return
  4451  0C57                     __end_of_Ax25_Send_Footer:	
  4452                           
  4453                           	psect	text25
  4454  0631                     __ptext25:	
  4455 ;; *************** function _Send_Byte *****************
  4456 ;; Defined at:
  4457 ;;		line 32 in file "ax25.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  byte            1    wreg     unsigned char 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  byte            1    9[BANK0 ] unsigned char 
  4462 ;;  i               2   10[BANK0 ] int 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;		None               void
  4465 ;; Registers used:
  4466 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;Total ram usage:        9 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:    4
  4479 ;; This function calls:
  4480 ;;		_Update_Crc
  4481 ;; This function is called by:
  4482 ;;		_Ax25_Send_Byte
  4483 ;;		_Ax25_Send_Header
  4484 ;;		_Ax25_Send_Footer
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           
  4489                           ;psect for function _Send_Byte
  4490  0631                     _Send_Byte:	
  4491                           
  4492                           ;incstack = 0
  4493                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4494                           ;Send_Byte@byte stored from wreg
  4495  0631  0020               	movlb	0	; select bank0
  4496  0632  00A9               	movwf	Send_Byte@byte
  4497                           
  4498                           ;ax25.c: 34: int i;
  4499                           ;ax25.c: 35: for (i = 0; i < 8; i++) {
  4500  0633  01AA               	clrf	Send_Byte@i
  4501  0634  01AB               	clrf	Send_Byte@i+1
  4502  0635                     L3:	
  4503  0635  082B               	movf	Send_Byte@i+1,w
  4504  0636  3A80               	xorlw	128
  4505  0637  00A3               	movwf	??_Send_Byte
  4506  0638  3080               	movlw	128
  4507  0639  0223               	subwf	??_Send_Byte,w
  4508  063A  3008               	movlw	8
  4509  063B  1903               	btfsc	3,2
  4510  063C  022A               	subwf	Send_Byte@i,w
  4511  063D  1803               	btfsc	3,0
  4512  063E  0008               	return
  4513                           
  4514                           ;ax25.c: 36: Update_Crc((byte >> i) & 1);
  4515  063F  0020               	movlb	0	; select bank0
  4516  0640  0829               	movf	Send_Byte@byte,w
  4517  0641  00A3               	movwf	??_Send_Byte
  4518  0642  0A2A               	incf	Send_Byte@i,w
  4519  0643  2E45               	goto	u1554
  4520  0644                     u1555:	
  4521  0644  36A3               	lsrf	??_Send_Byte,f
  4522  0645                     u1554:	
  4523  0645  0B89               	decfsz	9,f
  4524  0646  2E44               	goto	u1555
  4525  0647  0823               	movf	??_Send_Byte,w
  4526  0648  3901               	andlw	1
  4527  0649  318D  2559  3186   	fcall	_Update_Crc
  4528                           
  4529                           ;ax25.c: 37: if ((byte >> i) & 1) {
  4530  064C  0020               	movlb	0	; select bank0
  4531  064D  0829               	movf	Send_Byte@byte,w
  4532  064E  00A3               	movwf	??_Send_Byte
  4533  064F  0A2A               	incf	Send_Byte@i,w
  4534  0650  2E52               	goto	u1564
  4535  0651                     u1565:	
  4536  0651  36A3               	lsrf	??_Send_Byte,f
  4537  0652                     u1564:	
  4538  0652  0B89               	decfsz	9,f
  4539  0653  2E51               	goto	u1565
  4540  0654  1C23               	btfss	??_Send_Byte,0
  4541  0655  2EA1               	goto	l2057
  4542                           
  4543                           ;ax25.c: 39: if (modem_packet_size >= (64 * 8))
  4544  0656  3000               	movlw	0
  4545  0657  027C               	subwf	_modem_packet_size+3,w
  4546  0658  1D03               	skipz
  4547  0659  2E64               	goto	u1585
  4548  065A  3000               	movlw	0
  4549  065B  027B               	subwf	_modem_packet_size+2,w
  4550  065C  1D03               	skipz
  4551  065D  2E64               	goto	u1585
  4552  065E  3002               	movlw	2
  4553  065F  027A               	subwf	_modem_packet_size+1,w
  4554  0660  1D03               	skipz
  4555  0661  2E64               	goto	u1585
  4556  0662  3000               	movlw	0
  4557  0663  0279               	subwf	_modem_packet_size,w
  4558  0664                     u1585:	
  4559  0664  1803               	btfsc	3,0
  4560  0665  0008               	return
  4561                           
  4562                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4563                           
  4564                           ;ax25.c: 40: return;
  4565  0666  3001               	movlw	1
  4566  0667  00A3               	movwf	??_Send_Byte
  4567  0668  0879               	movf	_modem_packet_size,w
  4568  0669  3907               	andlw	7
  4569  066A  0A89               	incf	9,f
  4570  066B  2E6D               	goto	u1594
  4571  066C                     u1595:	
  4572  066C  35A3               	lslf	??_Send_Byte,f
  4573  066D                     u1594:	
  4574  066D  0B89               	decfsz	9,f
  4575  066E  2E6C               	goto	u1595
  4576  066F  0823               	movf	??_Send_Byte,w
  4577  0670  00A4               	movwf	??_Send_Byte+1
  4578  0671  0879               	movf	_modem_packet_size,w
  4579  0672  00A5               	movwf	??_Send_Byte+2
  4580  0673  087A               	movf	_modem_packet_size+1,w
  4581  0674  00A6               	movwf	??_Send_Byte+3
  4582  0675  087B               	movf	_modem_packet_size+2,w
  4583  0676  00A7               	movwf	??_Send_Byte+4
  4584  0677  087C               	movf	_modem_packet_size+3,w
  4585  0678  00A8               	movwf	??_Send_Byte+5
  4586  0679  3003               	movlw	3
  4587  067A                     u1605:	
  4588  067A  36A8               	lsrf	??_Send_Byte+5,f
  4589  067B  0CA7               	rrf	??_Send_Byte+4,f
  4590  067C  0CA6               	rrf	??_Send_Byte+3,f
  4591  067D  0CA5               	rrf	??_Send_Byte+2,f
  4592  067E  0B89               	decfsz	9,f
  4593  067F  2E7A               	goto	u1605
  4594  0680  0825               	movf	??_Send_Byte+2,w
  4595  0681  3EA0               	addlw	_modem_packet& (0+255)
  4596  0682  0086               	movwf	6
  4597  0683  3001               	movlw	1	; select bank3/4
  4598  0684  0087               	movwf	7
  4599  0685  0824               	movf	??_Send_Byte+1,w
  4600  0686  0481               	iorwf	1,f
  4601                           
  4602                           ;ax25.c: 44: modem_packet_size++;
  4603  0687  3001               	movlw	1
  4604  0688  07F9               	addwf	_modem_packet_size,f
  4605  0689  3000               	movlw	0
  4606  068A  3DFA               	addwfc	_modem_packet_size+1,f
  4607  068B  3000               	movlw	0
  4608  068C  3DFB               	addwfc	_modem_packet_size+2,f
  4609  068D  3000               	movlw	0
  4610  068E  3DFC               	addwfc	_modem_packet_size+3,f
  4611                           
  4612                           ;ax25.c: 45: if (++ones_in_a_row < 5) continue;
  4613  068F  3001               	movlw	1
  4614  0690  0022               	movlb	2	; select bank2
  4615  0691  07B9               	addwf	_ones_in_a_row^(0+256),f
  4616  0692  3000               	movlw	0
  4617  0693  3DBA               	addwfc	(_ones_in_a_row+1)^(0+256),f
  4618  0694  083A               	movf	(_ones_in_a_row+1)^(0+256),w
  4619  0695  3A80               	xorlw	128
  4620  0696  0020               	movlb	0	; select bank0
  4621  0697  00A3               	movwf	??_Send_Byte
  4622  0698  3080               	movlw	128
  4623  0699  0223               	subwf	??_Send_Byte,w
  4624  069A  1D03               	skipz
  4625  069B  2E9F               	goto	u1615
  4626  069C  3005               	movlw	5
  4627  069D  0022               	movlb	2	; select bank2
  4628  069E  0239               	subwf	_ones_in_a_row^(0+256),w
  4629  069F                     u1615:	
  4630  069F  1C03               	btfss	3,0
  4631  06A0  2EDF               	goto	l2067
  4632  06A1                     l2057:	
  4633                           
  4634                           ;ax25.c: 46: }
  4635                           ;ax25.c: 48: if (modem_packet_size >= (64 * 8))
  4636  06A1  3000               	movlw	0
  4637  06A2  027C               	subwf	_modem_packet_size+3,w
  4638  06A3  1D03               	skipz
  4639  06A4  2EAF               	goto	u1625
  4640  06A5  3000               	movlw	0
  4641  06A6  027B               	subwf	_modem_packet_size+2,w
  4642  06A7  1D03               	skipz
  4643  06A8  2EAF               	goto	u1625
  4644  06A9  3002               	movlw	2
  4645  06AA  027A               	subwf	_modem_packet_size+1,w
  4646  06AB  1D03               	skipz
  4647  06AC  2EAF               	goto	u1625
  4648  06AD  3000               	movlw	0
  4649  06AE  0279               	subwf	_modem_packet_size,w
  4650  06AF                     u1625:	
  4651  06AF  1803               	btfsc	3,0
  4652  06B0  0008               	return
  4653                           
  4654                           ;ax25.c: 50: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4655                           
  4656                           ;ax25.c: 49: return;
  4657  06B1  3001               	movlw	1
  4658  06B2  0020               	movlb	0	; select bank0
  4659  06B3  00A3               	movwf	??_Send_Byte
  4660  06B4  0879               	movf	_modem_packet_size,w
  4661  06B5  3907               	andlw	7
  4662  06B6  0A89               	incf	9,f
  4663  06B7  2EB9               	goto	u1634
  4664  06B8                     u1635:	
  4665  06B8  35A3               	lslf	??_Send_Byte,f
  4666  06B9                     u1634:	
  4667  06B9  0B89               	decfsz	9,f
  4668  06BA  2EB8               	goto	u1635
  4669  06BB  0823               	movf	??_Send_Byte,w
  4670  06BC  3AFF               	xorlw	255
  4671  06BD  00A4               	movwf	??_Send_Byte+1
  4672  06BE  0879               	movf	_modem_packet_size,w
  4673  06BF  00A5               	movwf	??_Send_Byte+2
  4674  06C0  087A               	movf	_modem_packet_size+1,w
  4675  06C1  00A6               	movwf	??_Send_Byte+3
  4676  06C2  087B               	movf	_modem_packet_size+2,w
  4677  06C3  00A7               	movwf	??_Send_Byte+4
  4678  06C4  087C               	movf	_modem_packet_size+3,w
  4679  06C5  00A8               	movwf	??_Send_Byte+5
  4680  06C6  3003               	movlw	3
  4681  06C7                     u1645:	
  4682  06C7  36A8               	lsrf	??_Send_Byte+5,f
  4683  06C8  0CA7               	rrf	??_Send_Byte+4,f
  4684  06C9  0CA6               	rrf	??_Send_Byte+3,f
  4685  06CA  0CA5               	rrf	??_Send_Byte+2,f
  4686  06CB  0B89               	decfsz	9,f
  4687  06CC  2EC7               	goto	u1645
  4688  06CD  0825               	movf	??_Send_Byte+2,w
  4689  06CE  3EA0               	addlw	_modem_packet& (0+255)
  4690  06CF  0086               	movwf	6
  4691  06D0  3001               	movlw	1	; select bank3/4
  4692  06D1  0087               	movwf	7
  4693  06D2  0824               	movf	??_Send_Byte+1,w
  4694  06D3  0581               	andwf	1,f
  4695                           
  4696                           ;ax25.c: 52: modem_packet_size++;
  4697  06D4  3001               	movlw	1
  4698  06D5  07F9               	addwf	_modem_packet_size,f
  4699  06D6  3000               	movlw	0
  4700  06D7  3DFA               	addwfc	_modem_packet_size+1,f
  4701  06D8  3000               	movlw	0
  4702  06D9  3DFB               	addwfc	_modem_packet_size+2,f
  4703  06DA  3000               	movlw	0
  4704  06DB  3DFC               	addwfc	_modem_packet_size+3,f
  4705                           
  4706                           ;ax25.c: 53: ones_in_a_row = 0;
  4707  06DC  0022               	movlb	2	; select bank2
  4708  06DD  01B9               	clrf	_ones_in_a_row^(0+256)
  4709  06DE  01BA               	clrf	(_ones_in_a_row+1)^(0+256)
  4710  06DF                     l2067:	
  4711  06DF  3001               	movlw	1
  4712  06E0  0020               	movlb	0	; select bank0
  4713  06E1  07AA               	addwf	Send_Byte@i,f
  4714  06E2  3000               	movlw	0
  4715  06E3  3DAB               	addwfc	Send_Byte@i+1,f
  4716  06E4  2E35               	goto	L3
  4717  06E5                     __end_of_Send_Byte:	
  4718                           
  4719                           	psect	text26
  4720  0D59                     __ptext26:	
  4721 ;; *************** function _Update_Crc *****************
  4722 ;; Defined at:
  4723 ;;		line 23 in file "ax25.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;  input_bit       1    wreg     unsigned char 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  input_bit       1    2[BANK0 ] unsigned char 
  4728 ;; Return value:  Size  Location     Type
  4729 ;;		None               void
  4730 ;; Registers used:
  4731 ;;		wreg, status,2, status,0
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;Total ram usage:        3 bytes
  4742 ;; Hardware stack levels used:    1
  4743 ;; Hardware stack levels required when called:    3
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_Send_Byte
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           
  4752                           ;psect for function _Update_Crc
  4753  0D59                     _Update_Crc:	
  4754                           
  4755                           ;incstack = 0
  4756                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  4757                           ;Update_Crc@input_bit stored from wreg
  4758  0D59  0020               	movlb	0	; select bank0
  4759  0D5A  00A2               	movwf	Update_Crc@input_bit
  4760                           
  4761                           ;ax25.c: 25: crc ^= input_bit;
  4762  0D5B  0822               	movf	Update_Crc@input_bit,w
  4763  0D5C  00A0               	movwf	??_Update_Crc
  4764  0D5D  01A1               	clrf	??_Update_Crc+1
  4765  0D5E  0820               	movf	??_Update_Crc,w
  4766  0D5F  0021               	movlb	1	; select bank1
  4767  0D60  06C7               	xorwf	_crc^(0+128),f
  4768  0D61  0020               	movlb	0	; select bank0
  4769  0D62  0821               	movf	??_Update_Crc+1,w
  4770  0D63  0021               	movlb	1	; select bank1
  4771  0D64  06C8               	xorwf	(_crc+1)^(0+128),f
  4772                           
  4773                           ;ax25.c: 26: if (crc & 1)
  4774  0D65  1C47               	btfss	_crc^(0+128),0
  4775  0D66  2D7A               	goto	l2017
  4776                           
  4777                           ;ax25.c: 27: crc = (crc >> 1) ^ 0x8408;
  4778  0D67  0848               	movf	(_crc+1)^(0+128),w
  4779  0D68  0020               	movlb	0	; select bank0
  4780  0D69  00A1               	movwf	??_Update_Crc+1
  4781  0D6A  0021               	movlb	1	; select bank1
  4782  0D6B  0847               	movf	_crc^(0+128),w
  4783  0D6C  0020               	movlb	0	; select bank0
  4784  0D6D  00A0               	movwf	??_Update_Crc
  4785  0D6E  36A1               	lsrf	??_Update_Crc+1,f
  4786  0D6F  0CA0               	rrf	??_Update_Crc,f
  4787  0D70  3008               	movlw	8
  4788  0D71  0620               	xorwf	??_Update_Crc,w
  4789  0D72  0021               	movlb	1	; select bank1
  4790  0D73  00C7               	movwf	_crc^(0+128)
  4791  0D74  3084               	movlw	132
  4792  0D75  0020               	movlb	0	; select bank0
  4793  0D76  0621               	xorwf	??_Update_Crc+1,w
  4794  0D77  0021               	movlb	1	; select bank1
  4795  0D78  00C8               	movwf	(_crc+1)^(0+128)
  4796  0D79  0008               	return
  4797  0D7A                     l2017:	
  4798                           
  4799                           ;ax25.c: 28: else
  4800                           ;ax25.c: 29: crc = crc >> 1;
  4801  0D7A  0848               	movf	(_crc+1)^(0+128),w
  4802  0D7B  0020               	movlb	0	; select bank0
  4803  0D7C  00A1               	movwf	??_Update_Crc+1
  4804  0D7D  0021               	movlb	1	; select bank1
  4805  0D7E  0847               	movf	_crc^(0+128),w
  4806  0D7F  0020               	movlb	0	; select bank0
  4807  0D80  00A0               	movwf	??_Update_Crc
  4808  0D81  36A1               	lsrf	??_Update_Crc+1,f
  4809  0D82  0CA0               	rrf	??_Update_Crc,f
  4810  0D83  0820               	movf	??_Update_Crc,w
  4811  0D84  0021               	movlb	1	; select bank1
  4812  0D85  00C7               	movwf	_crc^(0+128)
  4813  0D86  0020               	movlb	0	; select bank0
  4814  0D87  0821               	movf	??_Update_Crc+1,w
  4815  0D88  0021               	movlb	1	; select bank1
  4816  0D89  00C8               	movwf	(_crc+1)^(0+128)
  4817  0D8A  0008               	return
  4818  0D8B                     __end_of_Update_Crc:	
  4819                           
  4820                           	psect	text27
  4821  0775                     __ptext27:	
  4822 ;; *************** function _Ax25_Send_Flag *****************
  4823 ;; Defined at:
  4824 ;;		line 77 in file "ax25.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;		None
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  i               2    7[BANK0 ] int 
  4829 ;;  byte            1    6[BANK0 ] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;		None               void
  4832 ;; Registers used:
  4833 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4840 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4841 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4842 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4843 ;;Total ram usage:        9 bytes
  4844 ;; Hardware stack levels used:    1
  4845 ;; Hardware stack levels required when called:    3
  4846 ;; This function calls:
  4847 ;;		Nothing
  4848 ;; This function is called by:
  4849 ;;		_Ax25_Send_Header
  4850 ;;		_Ax25_Send_Footer
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           
  4855                           ;psect for function _Ax25_Send_Flag
  4856  0775                     _Ax25_Send_Flag:	
  4857                           
  4858                           ;ax25.c: 79: uint8_t byte = 0x7e;
  4859                           
  4860                           ;incstack = 0
  4861                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  4862  0775  307E               	movlw	126
  4863  0776  0020               	movlb	0	; select bank0
  4864  0777  00A0               	movwf	??_Ax25_Send_Flag
  4865  0778  0820               	movf	??_Ax25_Send_Flag,w
  4866  0779  00A6               	movwf	Ax25_Send_Flag@byte
  4867                           
  4868                           ;ax25.c: 80: int i;
  4869                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  4870  077A  01A7               	clrf	Ax25_Send_Flag@i
  4871  077B  01A8               	clrf	Ax25_Send_Flag@i+1
  4872  077C                     L4:	
  4873  077C  0828               	movf	Ax25_Send_Flag@i+1,w
  4874  077D  3A80               	xorlw	128
  4875  077E  00A0               	movwf	??_Ax25_Send_Flag
  4876  077F  3080               	movlw	128
  4877  0780  0220               	subwf	??_Ax25_Send_Flag,w
  4878  0781  3008               	movlw	8
  4879  0782  1903               	btfsc	3,2
  4880  0783  0227               	subwf	Ax25_Send_Flag@i,w
  4881  0784  1803               	btfsc	3,0
  4882  0785  0008               	return
  4883                           
  4884                           ;ax25.c: 82: if (modem_packet_size >= 64 * 8)
  4885  0786  3000               	movlw	0
  4886  0787  027C               	subwf	_modem_packet_size+3,w
  4887  0788  1D03               	skipz
  4888  0789  2F94               	goto	u1775
  4889  078A  3000               	movlw	0
  4890  078B  027B               	subwf	_modem_packet_size+2,w
  4891  078C  1D03               	skipz
  4892  078D  2F94               	goto	u1775
  4893  078E  3002               	movlw	2
  4894  078F  027A               	subwf	_modem_packet_size+1,w
  4895  0790  1D03               	skipz
  4896  0791  2F94               	goto	u1775
  4897  0792  3000               	movlw	0
  4898  0793  0279               	subwf	_modem_packet_size,w
  4899  0794                     u1775:	
  4900  0794  1803               	btfsc	3,0
  4901  0795  0008               	return
  4902                           
  4903                           ;ax25.c: 84: if ((byte >> i) & 1)
  4904                           
  4905                           ;ax25.c: 83: return;
  4906  0796  0020               	movlb	0	; select bank0
  4907  0797  0826               	movf	Ax25_Send_Flag@byte,w
  4908  0798  00A0               	movwf	??_Ax25_Send_Flag
  4909  0799  0A27               	incf	Ax25_Send_Flag@i,w
  4910  079A  2F9C               	goto	u1784
  4911  079B                     u1785:	
  4912  079B  36A0               	lsrf	??_Ax25_Send_Flag,f
  4913  079C                     u1784:	
  4914  079C  0B89               	decfsz	9,f
  4915  079D  2F9B               	goto	u1785
  4916  079E  1C20               	btfss	??_Ax25_Send_Flag,0
  4917  079F  2FC2               	goto	l2165
  4918                           
  4919                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4920  07A0  3001               	movlw	1
  4921  07A1  00A0               	movwf	??_Ax25_Send_Flag
  4922  07A2  0879               	movf	_modem_packet_size,w
  4923  07A3  3907               	andlw	7
  4924  07A4  0A89               	incf	9,f
  4925  07A5  2FA7               	goto	u1804
  4926  07A6                     u1805:	
  4927  07A6  35A0               	lslf	??_Ax25_Send_Flag,f
  4928  07A7                     u1804:	
  4929  07A7  0B89               	decfsz	9,f
  4930  07A8  2FA6               	goto	u1805
  4931  07A9  0820               	movf	??_Ax25_Send_Flag,w
  4932  07AA  00A1               	movwf	??_Ax25_Send_Flag+1
  4933  07AB  0879               	movf	_modem_packet_size,w
  4934  07AC  00A2               	movwf	??_Ax25_Send_Flag+2
  4935  07AD  087A               	movf	_modem_packet_size+1,w
  4936  07AE  00A3               	movwf	??_Ax25_Send_Flag+3
  4937  07AF  087B               	movf	_modem_packet_size+2,w
  4938  07B0  00A4               	movwf	??_Ax25_Send_Flag+4
  4939  07B1  087C               	movf	_modem_packet_size+3,w
  4940  07B2  00A5               	movwf	??_Ax25_Send_Flag+5
  4941  07B3  3003               	movlw	3
  4942  07B4                     u1815:	
  4943  07B4  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4944  07B5  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4945  07B6  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4946  07B7  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4947  07B8  0B89               	decfsz	9,f
  4948  07B9  2FB4               	goto	u1815
  4949  07BA  0822               	movf	??_Ax25_Send_Flag+2,w
  4950  07BB  3EA0               	addlw	_modem_packet& (0+255)
  4951  07BC  0086               	movwf	6
  4952  07BD  3001               	movlw	1	; select bank3/4
  4953  07BE  0087               	movwf	7
  4954  07BF  0821               	movf	??_Ax25_Send_Flag+1,w
  4955  07C0  0481               	iorwf	1,f
  4956  07C1  2FE4               	goto	l2167
  4957  07C2                     l2165:	
  4958                           
  4959                           ;ax25.c: 86: else
  4960                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4961  07C2  3001               	movlw	1
  4962  07C3  00A0               	movwf	??_Ax25_Send_Flag
  4963  07C4  0879               	movf	_modem_packet_size,w
  4964  07C5  3907               	andlw	7
  4965  07C6  0A89               	incf	9,f
  4966  07C7  2FC9               	goto	u1824
  4967  07C8                     u1825:	
  4968  07C8  35A0               	lslf	??_Ax25_Send_Flag,f
  4969  07C9                     u1824:	
  4970  07C9  0B89               	decfsz	9,f
  4971  07CA  2FC8               	goto	u1825
  4972  07CB  0820               	movf	??_Ax25_Send_Flag,w
  4973  07CC  3AFF               	xorlw	255
  4974  07CD  00A1               	movwf	??_Ax25_Send_Flag+1
  4975  07CE  0879               	movf	_modem_packet_size,w
  4976  07CF  00A2               	movwf	??_Ax25_Send_Flag+2
  4977  07D0  087A               	movf	_modem_packet_size+1,w
  4978  07D1  00A3               	movwf	??_Ax25_Send_Flag+3
  4979  07D2  087B               	movf	_modem_packet_size+2,w
  4980  07D3  00A4               	movwf	??_Ax25_Send_Flag+4
  4981  07D4  087C               	movf	_modem_packet_size+3,w
  4982  07D5  00A5               	movwf	??_Ax25_Send_Flag+5
  4983  07D6  3003               	movlw	3
  4984  07D7                     u1835:	
  4985  07D7  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4986  07D8  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4987  07D9  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4988  07DA  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4989  07DB  0B89               	decfsz	9,f
  4990  07DC  2FD7               	goto	u1835
  4991  07DD  0822               	movf	??_Ax25_Send_Flag+2,w
  4992  07DE  3EA0               	addlw	_modem_packet& (0+255)
  4993  07DF  0086               	movwf	6
  4994  07E0  3001               	movlw	1	; select bank3/4
  4995  07E1  0087               	movwf	7
  4996  07E2  0821               	movf	??_Ax25_Send_Flag+1,w
  4997  07E3  0581               	andwf	1,f
  4998  07E4                     l2167:	
  4999  07E4  3001               	movlw	1
  5000  07E5  07A7               	addwf	Ax25_Send_Flag@i,f
  5001  07E6  3000               	movlw	0
  5002  07E7  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  5003  07E8  3001               	movlw	1
  5004  07E9  07F9               	addwf	_modem_packet_size,f
  5005  07EA  3000               	movlw	0
  5006  07EB  3DFA               	addwfc	_modem_packet_size+1,f
  5007  07EC  3000               	movlw	0
  5008  07ED  3DFB               	addwfc	_modem_packet_size+2,f
  5009  07EE  3000               	movlw	0
  5010  07EF  3DFC               	addwfc	_modem_packet_size+3,f
  5011  07F0  2F7C               	goto	L4
  5012  07F1                     __end_of_Ax25_Send_Flag:	
  5013                           
  5014                           	psect	text28
  5015  0F85                     __ptext28:	
  5016 ;; *************** function _Adf_Lock *****************
  5017 ;; Defined at:
  5018 ;;		line 231 in file "adf7012.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  bias            2   10[BANK1 ] int 
  5023 ;;  adj             2    8[BANK1 ] int 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      unsigned char 
  5026 ;; Registers used:
  5027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5034 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5035 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5036 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5037 ;;Total ram usage:        6 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    8
  5040 ;; This function calls:
  5041 ;;		_Adf_Locked
  5042 ;;		_Adf_Write_Register_Three
  5043 ;;		_Adf_Write_Register_Zero
  5044 ;;		_Delay_ms
  5045 ;; This function is called by:
  5046 ;;		_main
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           
  5051                           ;psect for function _Adf_Lock
  5052  0F85                     _Adf_Lock:	
  5053                           
  5054                           ;adf7012.c: 234: Delay_ms(200);
  5055                           
  5056                           ;incstack = 0
  5057                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5058  0F85  30C8               	movlw	200
  5059  0F86  0020               	movlb	0	; select bank0
  5060  0F87  00A0               	movwf	Delay_ms@time_to_delay
  5061  0F88  3000               	movlw	0
  5062  0F89  00A1               	movwf	Delay_ms@time_to_delay+1
  5063  0F8A  318C  2493  318F   	fcall	_Delay_ms
  5064                           
  5065                           ;adf7012.c: 235: int adj = adf_config.r0.vco_adjust;
  5066  0F8D  0021               	movlb	1	; select bank1
  5067  0F8E  0828               	movf	(_adf_config^(0+128)+8),w
  5068  0F8F  0020               	movlb	0	; select bank0
  5069  0F90  00EB               	movwf	??_Adf_Lock
  5070  0F91  01EC               	clrf	??_Adf_Lock+1
  5071  0F92  086B               	movf	??_Adf_Lock,w
  5072  0F93  0021               	movlb	1	; select bank1
  5073  0F94  00DC               	movwf	Adf_Lock@adj^(0+128)
  5074  0F95  0020               	movlb	0	; select bank0
  5075  0F96  086C               	movf	??_Adf_Lock+1,w
  5076  0F97  0021               	movlb	1	; select bank1
  5077  0F98  00DD               	movwf	(Adf_Lock@adj+1)^(0+128)
  5078                           
  5079                           ;adf7012.c: 236: int bias = adf_config.r3.vco_bias;
  5080  0F99  0843               	movf	(_adf_config^(0+128)+35),w
  5081  0F9A  0020               	movlb	0	; select bank0
  5082  0F9B  00EB               	movwf	??_Adf_Lock
  5083  0F9C  01EC               	clrf	??_Adf_Lock+1
  5084  0F9D  086B               	movf	??_Adf_Lock,w
  5085  0F9E  0021               	movlb	1	; select bank1
  5086  0F9F  00DE               	movwf	Adf_Lock@bias^(0+128)
  5087  0FA0  0020               	movlb	0	; select bank0
  5088  0FA1  086C               	movf	??_Adf_Lock+1,w
  5089  0FA2  0021               	movlb	1	; select bank1
  5090  0FA3  00DF               	movwf	(Adf_Lock@bias+1)^(0+128)
  5091                           
  5092                           ;adf7012.c: 238: adf_config.r3.pll_enable = 1;
  5093  0FA4  01B9               	clrf	(_adf_config^(0+128)+25)
  5094  0FA5  0AB9               	incf	(_adf_config^(0+128)+25),f
  5095                           
  5096                           ;adf7012.c: 240: adf_config.r3.muxout = 5;
  5097  0FA6  3005               	movlw	5
  5098  0FA7  0020               	movlb	0	; select bank0
  5099  0FA8  00EB               	movwf	??_Adf_Lock
  5100  0FA9  086B               	movf	??_Adf_Lock,w
  5101  0FAA  0021               	movlb	1	; select bank1
  5102  0FAB  00C1               	movwf	(_adf_config^(0+128)+33)
  5103                           
  5104                           ;adf7012.c: 243: Adf_Write_Register_Zero();
  5105  0FAC  3183  2322  318F   	fcall	_Adf_Write_Register_Zero
  5106                           
  5107                           ;adf7012.c: 244: Adf_Write_Register_Three();
  5108  0FAF  3180  20DD  318F   	fcall	_Adf_Write_Register_Three
  5109                           
  5110                           ;adf7012.c: 246: Delay_ms(5);
  5111  0FB2  3005               	movlw	5
  5112  0FB3  0020               	movlb	0	; select bank0
  5113  0FB4  00A0               	movwf	Delay_ms@time_to_delay
  5114  0FB5  3000               	movlw	0
  5115  0FB6  00A1               	movwf	Delay_ms@time_to_delay+1
  5116  0FB7  318C  2493  318F   	fcall	_Delay_ms
  5117  0FBA                     l2457:	
  5118                           ;adf7012.c: 248: while(!Adf_Locked()) {
  5119                           
  5120  0FBA  318B  2362  318F   	fcall	_Adf_Locked
  5121  0FBD  3A00               	xorlw	0
  5122  0FBE  1D03               	btfss	3,2
  5123  0FBF  0008               	return
  5124                           
  5125                           ;adf7012.c: 250: adf_config.r0.vco_adjust = adj;
  5126  0FC0  0021               	movlb	1	; select bank1
  5127  0FC1  085C               	movf	Adf_Lock@adj^(0+128),w
  5128  0FC2  0020               	movlb	0	; select bank0
  5129  0FC3  00EB               	movwf	??_Adf_Lock
  5130  0FC4  086B               	movf	??_Adf_Lock,w
  5131  0FC5  0021               	movlb	1	; select bank1
  5132  0FC6  00A8               	movwf	(_adf_config^(0+128)+8)
  5133                           
  5134                           ;adf7012.c: 251: adf_config.r3.vco_bias = bias;
  5135  0FC7  085E               	movf	Adf_Lock@bias^(0+128),w
  5136  0FC8  0020               	movlb	0	; select bank0
  5137  0FC9  00EB               	movwf	??_Adf_Lock
  5138  0FCA  086B               	movf	??_Adf_Lock,w
  5139  0FCB  0021               	movlb	1	; select bank1
  5140  0FCC  00C3               	movwf	(_adf_config^(0+128)+35)
  5141                           
  5142                           ;adf7012.c: 253: adf_config.r3.muxout = 5;
  5143  0FCD  3005               	movlw	5
  5144  0FCE  0020               	movlb	0	; select bank0
  5145  0FCF  00EB               	movwf	??_Adf_Lock
  5146  0FD0  086B               	movf	??_Adf_Lock,w
  5147  0FD1  0021               	movlb	1	; select bank1
  5148  0FD2  00C1               	movwf	(_adf_config^(0+128)+33)
  5149                           
  5150                           ;adf7012.c: 255: Adf_Write_Register_Zero();
  5151  0FD3  3183  2322  318F   	fcall	_Adf_Write_Register_Zero
  5152                           
  5153                           ;adf7012.c: 256: Adf_Write_Register_Three();
  5154  0FD6  3180  20DD  318F   	fcall	_Adf_Write_Register_Three
  5155                           
  5156                           ;adf7012.c: 258: Delay_ms(5);
  5157  0FD9  3005               	movlw	5
  5158  0FDA  0020               	movlb	0	; select bank0
  5159  0FDB  00A0               	movwf	Delay_ms@time_to_delay
  5160  0FDC  3000               	movlw	0
  5161  0FDD  00A1               	movwf	Delay_ms@time_to_delay+1
  5162  0FDE  318C  2493  318F   	fcall	_Delay_ms
  5163                           
  5164                           ;adf7012.c: 259: if(++bias == 14) {
  5165  0FE1  3001               	movlw	1
  5166  0FE2  0021               	movlb	1	; select bank1
  5167  0FE3  07DE               	addwf	Adf_Lock@bias^(0+128),f
  5168  0FE4  3000               	movlw	0
  5169  0FE5  3DDF               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  5170  0FE6  300E               	movlw	14
  5171  0FE7  065E               	xorwf	Adf_Lock@bias^(0+128),w
  5172  0FE8  045F               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  5173  0FE9  1D03               	skipz
  5174  0FEA  2FBA               	goto	l2457
  5175                           
  5176                           ;adf7012.c: 260: bias = 1;
  5177  0FEB  3001               	movlw	1
  5178  0FEC  00DE               	movwf	Adf_Lock@bias^(0+128)
  5179  0FED  3000               	movlw	0
  5180  0FEE  00DF               	movwf	(Adf_Lock@bias^(0+128)+1)
  5181                           
  5182                           ;adf7012.c: 261: if(++adj == 4) {
  5183  0FEF  3001               	movlw	1
  5184  0FF0  07DC               	addwf	Adf_Lock@adj^(0+128),f
  5185  0FF1  3000               	movlw	0
  5186  0FF2  3DDD               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  5187  0FF3  3004               	movlw	4
  5188  0FF4  065C               	xorwf	Adf_Lock@adj^(0+128),w
  5189  0FF5  045D               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  5190  0FF6  1D03               	skipz
  5191  0FF7  2FBA               	goto	l2457
  5192                           
  5193                           ;adf7012.c: 263: adf_config.r0.vco_adjust = 0;
  5194  0FF8  01A8               	clrf	(_adf_config^(0+128)+8)
  5195                           
  5196                           ;adf7012.c: 264: adf_config.r3.vco_bias = 5;
  5197  0FF9  3005               	movlw	5
  5198  0FFA  0020               	movlb	0	; select bank0
  5199  0FFB  00EB               	movwf	??_Adf_Lock
  5200  0FFC  086B               	movf	??_Adf_Lock,w
  5201  0FFD  0021               	movlb	1	; select bank1
  5202  0FFE  00C3               	movwf	(_adf_config^(0+128)+35)
  5203                           
  5204                           ;adf7012.c: 266: return 0;
  5205                           ;	Return value of _Adf_Lock is never used
  5206  0FFF  0008               	return
  5207  1000                     __end_of_Adf_Lock:	
  5208                           ;adf7012.c: 267: }
  5209                           ;adf7012.c: 268: }
  5210                           ;adf7012.c: 269: }
  5211                           ;adf7012.c: 273: return 1;
  5212                           ;	Return value of _Adf_Lock is never used
  5213                           
  5214                           
  5215                           	psect	text29
  5216  0322                     __ptext29:	
  5217 ;; *************** function _Adf_Write_Register_Zero *****************
  5218 ;; Defined at:
  5219 ;;		line 157 in file "adf7012.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;		None
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  5224 ;;  reg             4   51[BANK0 ] unsigned long 
  5225 ;; Return value:  Size  Location     Type
  5226 ;;		None               void
  5227 ;; Registers used:
  5228 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5235 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5236 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5237 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5238 ;;Total ram usage:       36 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    7
  5241 ;; This function calls:
  5242 ;;		_Reverse_Array
  5243 ;;		_Write_Adf7012_Reg
  5244 ;;		_memcpy
  5245 ;; This function is called by:
  5246 ;;		_Adf_Write_Config
  5247 ;;		_Adf_Lock
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _Adf_Write_Register_Zero
  5253  0322                     _Adf_Write_Register_Zero:	
  5254                           
  5255                           ;adf7012.c: 159: uint32_t reg =
  5256                           ;adf7012.c: 160: (0) |
  5257                           ;adf7012.c: 161: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  5258                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  5259                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  5260                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  5261                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  5262                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  5263                           
  5264                           ;incstack = 0
  5265                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5266  0322  0021               	movlb	1	; select bank1
  5267  0323  0829               	movf	(_adf_config^(0+128)+9),w
  5268  0324  3903               	andlw	3
  5269  0325  0020               	movlb	0	; select bank0
  5270  0326  00B3               	movwf	??_Adf_Write_Register_Zero
  5271  0327  01B4               	clrf	??_Adf_Write_Register_Zero+1
  5272  0328  01B5               	clrf	??_Adf_Write_Register_Zero+2
  5273  0329  01B6               	clrf	??_Adf_Write_Register_Zero+3
  5274  032A  3019               	movlw	25
  5275  032B                     u1225:	
  5276  032B  35B3               	lslf	??_Adf_Write_Register_Zero,f
  5277  032C  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  5278  032D  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  5279  032E  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  5280  032F  0B89               	decfsz	9,f
  5281  0330  2B2B               	goto	u1225
  5282  0331  0021               	movlb	1	; select bank1
  5283  0332  0828               	movf	(_adf_config^(0+128)+8),w
  5284  0333  3903               	andlw	3
  5285  0334  0020               	movlb	0	; select bank0
  5286  0335  00B7               	movwf	??_Adf_Write_Register_Zero+4
  5287  0336  01B8               	clrf	??_Adf_Write_Register_Zero+5
  5288  0337  01B9               	clrf	??_Adf_Write_Register_Zero+6
  5289  0338  01BA               	clrf	??_Adf_Write_Register_Zero+7
  5290  0339  3017               	movlw	23
  5291  033A                     u1235:	
  5292  033A  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  5293  033B  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  5294  033C  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  5295  033D  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  5296  033E  0B89               	decfsz	9,f
  5297  033F  2B3A               	goto	u1235
  5298  0340  0021               	movlb	1	; select bank1
  5299  0341  0827               	movf	(_adf_config^(0+128)+7),w
  5300  0342  390F               	andlw	15
  5301  0343  0020               	movlb	0	; select bank0
  5302  0344  00BB               	movwf	??_Adf_Write_Register_Zero+8
  5303  0345  01BC               	clrf	??_Adf_Write_Register_Zero+9
  5304  0346  01BD               	clrf	??_Adf_Write_Register_Zero+10
  5305  0347  01BE               	clrf	??_Adf_Write_Register_Zero+11
  5306  0348  3013               	movlw	19
  5307  0349                     u1245:	
  5308  0349  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  5309  034A  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  5310  034B  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  5311  034C  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  5312  034D  0B89               	decfsz	9,f
  5313  034E  2B49               	goto	u1245
  5314  034F  0021               	movlb	1	; select bank1
  5315  0350  0826               	movf	(_adf_config^(0+128)+6),w
  5316  0351  3901               	andlw	1
  5317  0352  0020               	movlb	0	; select bank0
  5318  0353  00BF               	movwf	??_Adf_Write_Register_Zero+12
  5319  0354  01C0               	clrf	??_Adf_Write_Register_Zero+13
  5320  0355  01C1               	clrf	??_Adf_Write_Register_Zero+14
  5321  0356  01C2               	clrf	??_Adf_Write_Register_Zero+15
  5322  0357  3012               	movlw	18
  5323  0358                     u1255:	
  5324  0358  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  5325  0359  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  5326  035A  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  5327  035B  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  5328  035C  0B89               	decfsz	9,f
  5329  035D  2B58               	goto	u1255
  5330  035E  0021               	movlb	1	; select bank1
  5331  035F  0825               	movf	(_adf_config^(0+128)+5),w
  5332  0360  3901               	andlw	1
  5333  0361  0020               	movlb	0	; select bank0
  5334  0362  00C3               	movwf	??_Adf_Write_Register_Zero+16
  5335  0363  01C4               	clrf	??_Adf_Write_Register_Zero+17
  5336  0364  01C5               	clrf	??_Adf_Write_Register_Zero+18
  5337  0365  01C6               	clrf	??_Adf_Write_Register_Zero+19
  5338  0366  3011               	movlw	17
  5339  0367                     u1265:	
  5340  0367  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  5341  0368  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  5342  0369  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  5343  036A  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  5344  036B  0B89               	decfsz	9,f
  5345  036C  2B67               	goto	u1265
  5346  036D  0021               	movlb	1	; select bank1
  5347  036E  0824               	movf	(_adf_config^(0+128)+4),w
  5348  036F  390F               	andlw	15
  5349  0370  0020               	movlb	0	; select bank0
  5350  0371  00C7               	movwf	??_Adf_Write_Register_Zero+20
  5351  0372  01C8               	clrf	??_Adf_Write_Register_Zero+21
  5352  0373  01C9               	clrf	??_Adf_Write_Register_Zero+22
  5353  0374  01CA               	clrf	??_Adf_Write_Register_Zero+23
  5354  0375  300D               	movlw	13
  5355  0376                     u1275:	
  5356  0376  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  5357  0377  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  5358  0378  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  5359  0379  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  5360  037A  0B89               	decfsz	9,f
  5361  037B  2B76               	goto	u1275
  5362  037C  30FF               	movlw	255
  5363  037D  0021               	movlb	1	; select bank1
  5364  037E  0520               	andwf	_adf_config^(0+128),w
  5365  037F  0020               	movlb	0	; select bank0
  5366  0380  00CB               	movwf	??_Adf_Write_Register_Zero+24
  5367  0381  3007               	movlw	7
  5368  0382  0021               	movlb	1	; select bank1
  5369  0383  0521               	andwf	(_adf_config+1)^(0+128),w
  5370  0384  0020               	movlb	0	; select bank0
  5371  0385  00CC               	movwf	??_Adf_Write_Register_Zero+25
  5372  0386  3000               	movlw	0
  5373  0387  0021               	movlb	1	; select bank1
  5374  0388  0522               	andwf	(_adf_config+2)^(0+128),w
  5375  0389  0020               	movlb	0	; select bank0
  5376  038A  00CD               	movwf	??_Adf_Write_Register_Zero+26
  5377  038B  3000               	movlw	0
  5378  038C  0021               	movlb	1	; select bank1
  5379  038D  0523               	andwf	(_adf_config+3)^(0+128),w
  5380  038E  0020               	movlb	0	; select bank0
  5381  038F  00CE               	movwf	??_Adf_Write_Register_Zero+27
  5382  0390  3002               	movlw	2
  5383  0391                     u1285:	
  5384  0391  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  5385  0392  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  5386  0393  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  5387  0394  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  5388  0395  0B89               	decfsz	9,f
  5389  0396  2B91               	goto	u1285
  5390  0397  084B               	movf	??_Adf_Write_Register_Zero+24,w
  5391  0398  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  5392  0399  084C               	movf	??_Adf_Write_Register_Zero+25,w
  5393  039A  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  5394  039B  084D               	movf	??_Adf_Write_Register_Zero+26,w
  5395  039C  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  5396  039D  084E               	movf	??_Adf_Write_Register_Zero+27,w
  5397  039E  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  5398  039F  0847               	movf	??_Adf_Write_Register_Zero+20,w
  5399  03A0  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  5400  03A1  0848               	movf	??_Adf_Write_Register_Zero+21,w
  5401  03A2  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  5402  03A3  0849               	movf	??_Adf_Write_Register_Zero+22,w
  5403  03A4  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  5404  03A5  084A               	movf	??_Adf_Write_Register_Zero+23,w
  5405  03A6  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  5406  03A7  0843               	movf	??_Adf_Write_Register_Zero+16,w
  5407  03A8  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  5408  03A9  0844               	movf	??_Adf_Write_Register_Zero+17,w
  5409  03AA  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  5410  03AB  0845               	movf	??_Adf_Write_Register_Zero+18,w
  5411  03AC  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  5412  03AD  0846               	movf	??_Adf_Write_Register_Zero+19,w
  5413  03AE  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  5414  03AF  083F               	movf	??_Adf_Write_Register_Zero+12,w
  5415  03B0  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  5416  03B1  0840               	movf	??_Adf_Write_Register_Zero+13,w
  5417  03B2  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  5418  03B3  0841               	movf	??_Adf_Write_Register_Zero+14,w
  5419  03B4  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  5420  03B5  0842               	movf	??_Adf_Write_Register_Zero+15,w
  5421  03B6  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  5422  03B7  083B               	movf	??_Adf_Write_Register_Zero+8,w
  5423  03B8  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  5424  03B9  083C               	movf	??_Adf_Write_Register_Zero+9,w
  5425  03BA  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  5426  03BB  083D               	movf	??_Adf_Write_Register_Zero+10,w
  5427  03BC  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  5428  03BD  083E               	movf	??_Adf_Write_Register_Zero+11,w
  5429  03BE  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  5430  03BF  0833               	movf	??_Adf_Write_Register_Zero,w
  5431  03C0  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  5432  03C1  00D3               	movwf	Adf_Write_Register_Zero@reg
  5433  03C2  0834               	movf	??_Adf_Write_Register_Zero+1,w
  5434  03C3  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  5435  03C4  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  5436  03C5  0835               	movf	??_Adf_Write_Register_Zero+2,w
  5437  03C6  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  5438  03C7  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  5439  03C8  0836               	movf	??_Adf_Write_Register_Zero+3,w
  5440  03C9  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  5441  03CA  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  5442                           
  5443                           ;adf7012.c: 170: uint8_t reg_ptr[4];
  5444                           ;adf7012.c: 171: memcpy(reg_ptr, &reg, 4);
  5445  03CB  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  5446  03CC  00B3               	movwf	??_Adf_Write_Register_Zero
  5447  03CD  0833               	movf	??_Adf_Write_Register_Zero,w
  5448  03CE  00A0               	movwf	memcpy@s1
  5449  03CF  3004               	movlw	4
  5450  03D0  00A1               	movwf	memcpy@n
  5451  03D1  3000               	movlw	0
  5452  03D2  00A2               	movwf	memcpy@n+1
  5453  03D3  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5454  03D4  318C  24D9  3183   	fcall	_memcpy
  5455                           
  5456                           ;adf7012.c: 172: Reverse_Array(reg_ptr,4);
  5457  03D7  3004               	movlw	4
  5458  03D8  0020               	movlb	0	; select bank0
  5459  03D9  00B3               	movwf	??_Adf_Write_Register_Zero
  5460  03DA  0833               	movf	??_Adf_Write_Register_Zero,w
  5461  03DB  00A7               	movwf	Reverse_Array@length
  5462  03DC  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5463  03DD  318E  2600  3183   	fcall	_Reverse_Array
  5464                           
  5465                           ;adf7012.c: 173: Write_Adf7012_Reg(reg_ptr, 4);
  5466  03E0  3004               	movlw	4
  5467  03E1  0020               	movlb	0	; select bank0
  5468  03E2  00B3               	movwf	??_Adf_Write_Register_Zero
  5469  03E3  0833               	movf	??_Adf_Write_Register_Zero,w
  5470  03E4  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5471  03E5  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5472  03E6  318D  258B         	fcall	_Write_Adf7012_Reg
  5473  03E8  0008               	return
  5474  03E9                     __end_of_Adf_Write_Register_Zero:	
  5475                           
  5476                           	psect	text30
  5477  00DD                     __ptext30:	
  5478 ;; *************** function _Adf_Write_Register_Three *****************
  5479 ;; Defined at:
  5480 ;;		line 206 in file "adf7012.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  5485 ;;  reg             4    4[BANK1 ] unsigned long 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;		None               void
  5488 ;; Registers used:
  5489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5498 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5499 ;;Total ram usage:       64 bytes
  5500 ;; Hardware stack levels used:    1
  5501 ;; Hardware stack levels required when called:    7
  5502 ;; This function calls:
  5503 ;;		_Reverse_Array
  5504 ;;		_Write_Adf7012_Reg
  5505 ;;		_memcpy
  5506 ;; This function is called by:
  5507 ;;		_Adf_Write_Config
  5508 ;;		_Adf_Lock
  5509 ;;		_Ptt_On
  5510 ;;		_Ptt_Off
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           
  5515                           ;psect for function _Adf_Write_Register_Three
  5516  00DD                     _Adf_Write_Register_Three:	
  5517                           
  5518                           ;adf7012.c: 207: uint32_t reg =
  5519                           ;adf7012.c: 208: (3) |
  5520                           ;adf7012.c: 209: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  5521                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  5522                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  5523                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  5524                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  5525                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  5526                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  5527                           
  5528                           ;incstack = 0
  5529                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5530  00DD  0021               	movlb	1	; select bank1
  5531  00DE  0846               	movf	(_adf_config^(0+128)+38),w
  5532  00DF  390F               	andlw	15
  5533  00E0  0020               	movlb	0	; select bank0
  5534  00E1  00B3               	movwf	??_Adf_Write_Register_Three
  5535  00E2  01B4               	clrf	??_Adf_Write_Register_Three+1
  5536  00E3  01B5               	clrf	??_Adf_Write_Register_Three+2
  5537  00E4  01B6               	clrf	??_Adf_Write_Register_Three+3
  5538  00E5  301C               	movlw	28
  5539  00E6                     u1385:	
  5540  00E6  35B3               	lslf	??_Adf_Write_Register_Three,f
  5541  00E7  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  5542  00E8  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  5543  00E9  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  5544  00EA  0B89               	decfsz	9,f
  5545  00EB  28E6               	goto	u1385
  5546  00EC  0021               	movlb	1	; select bank1
  5547  00ED  0845               	movf	(_adf_config^(0+128)+37),w
  5548  00EE  391F               	andlw	31
  5549  00EF  0020               	movlb	0	; select bank0
  5550  00F0  00B7               	movwf	??_Adf_Write_Register_Three+4
  5551  00F1  01B8               	clrf	??_Adf_Write_Register_Three+5
  5552  00F2  01B9               	clrf	??_Adf_Write_Register_Three+6
  5553  00F3  01BA               	clrf	??_Adf_Write_Register_Three+7
  5554  00F4  3017               	movlw	23
  5555  00F5                     u1395:	
  5556  00F5  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  5557  00F6  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  5558  00F7  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  5559  00F8  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  5560  00F9  0B89               	decfsz	9,f
  5561  00FA  28F5               	goto	u1395
  5562  00FB  0021               	movlb	1	; select bank1
  5563  00FC  0844               	movf	(_adf_config^(0+128)+36),w
  5564  00FD  3907               	andlw	7
  5565  00FE  0020               	movlb	0	; select bank0
  5566  00FF  00BB               	movwf	??_Adf_Write_Register_Three+8
  5567  0100  01BC               	clrf	??_Adf_Write_Register_Three+9
  5568  0101  01BD               	clrf	??_Adf_Write_Register_Three+10
  5569  0102  01BE               	clrf	??_Adf_Write_Register_Three+11
  5570  0103  3014               	movlw	20
  5571  0104                     u1405:	
  5572  0104  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  5573  0105  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  5574  0106  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  5575  0107  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  5576  0108  0B89               	decfsz	9,f
  5577  0109  2904               	goto	u1405
  5578  010A  0021               	movlb	1	; select bank1
  5579  010B  0843               	movf	(_adf_config^(0+128)+35),w
  5580  010C  390F               	andlw	15
  5581  010D  0020               	movlb	0	; select bank0
  5582  010E  00BF               	movwf	??_Adf_Write_Register_Three+12
  5583  010F  01C0               	clrf	??_Adf_Write_Register_Three+13
  5584  0110  01C1               	clrf	??_Adf_Write_Register_Three+14
  5585  0111  01C2               	clrf	??_Adf_Write_Register_Three+15
  5586  0112  3010               	movlw	16
  5587  0113                     u1415:	
  5588  0113  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  5589  0114  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  5590  0115  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  5591  0116  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  5592  0117  0B89               	decfsz	9,f
  5593  0118  2913               	goto	u1415
  5594  0119  0021               	movlb	1	; select bank1
  5595  011A  0842               	movf	(_adf_config^(0+128)+34),w
  5596  011B  3901               	andlw	1
  5597  011C  0020               	movlb	0	; select bank0
  5598  011D  00C3               	movwf	??_Adf_Write_Register_Three+16
  5599  011E  01C4               	clrf	??_Adf_Write_Register_Three+17
  5600  011F  01C5               	clrf	??_Adf_Write_Register_Three+18
  5601  0120  01C6               	clrf	??_Adf_Write_Register_Three+19
  5602  0121  300F               	movlw	15
  5603  0122                     u1425:	
  5604  0122  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  5605  0123  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  5606  0124  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  5607  0125  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  5608  0126  0B89               	decfsz	9,f
  5609  0127  2922               	goto	u1425
  5610  0128  0021               	movlb	1	; select bank1
  5611  0129  0841               	movf	(_adf_config^(0+128)+33),w
  5612  012A  390F               	andlw	15
  5613  012B  0020               	movlb	0	; select bank0
  5614  012C  00C7               	movwf	??_Adf_Write_Register_Three+20
  5615  012D  01C8               	clrf	??_Adf_Write_Register_Three+21
  5616  012E  01C9               	clrf	??_Adf_Write_Register_Three+22
  5617  012F  01CA               	clrf	??_Adf_Write_Register_Three+23
  5618  0130  300B               	movlw	11
  5619  0131                     u1435:	
  5620  0131  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  5621  0132  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  5622  0133  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  5623  0134  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  5624  0135  0B89               	decfsz	9,f
  5625  0136  2931               	goto	u1435
  5626  0137  0021               	movlb	1	; select bank1
  5627  0138  0840               	movf	(_adf_config^(0+128)+32),w
  5628  0139  3901               	andlw	1
  5629  013A  0020               	movlb	0	; select bank0
  5630  013B  00CB               	movwf	??_Adf_Write_Register_Three+24
  5631  013C  01CC               	clrf	??_Adf_Write_Register_Three+25
  5632  013D  01CD               	clrf	??_Adf_Write_Register_Three+26
  5633  013E  01CE               	clrf	??_Adf_Write_Register_Three+27
  5634  013F  300A               	movlw	10
  5635  0140                     u1445:	
  5636  0140  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  5637  0141  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  5638  0142  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  5639  0143  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  5640  0144  0B89               	decfsz	9,f
  5641  0145  2940               	goto	u1445
  5642  0146  0021               	movlb	1	; select bank1
  5643  0147  083F               	movf	(_adf_config^(0+128)+31),w
  5644  0148  3901               	andlw	1
  5645  0149  0020               	movlb	0	; select bank0
  5646  014A  00CF               	movwf	??_Adf_Write_Register_Three+28
  5647  014B  01D0               	clrf	??_Adf_Write_Register_Three+29
  5648  014C  01D1               	clrf	??_Adf_Write_Register_Three+30
  5649  014D  01D2               	clrf	??_Adf_Write_Register_Three+31
  5650  014E  3009               	movlw	9
  5651  014F                     u1455:	
  5652  014F  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  5653  0150  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  5654  0151  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  5655  0152  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  5656  0153  0B89               	decfsz	9,f
  5657  0154  294F               	goto	u1455
  5658  0155  0021               	movlb	1	; select bank1
  5659  0156  083E               	movf	(_adf_config^(0+128)+30),w
  5660  0157  3901               	andlw	1
  5661  0158  0020               	movlb	0	; select bank0
  5662  0159  00D3               	movwf	??_Adf_Write_Register_Three+32
  5663  015A  01D4               	clrf	??_Adf_Write_Register_Three+33
  5664  015B  01D5               	clrf	??_Adf_Write_Register_Three+34
  5665  015C  01D6               	clrf	??_Adf_Write_Register_Three+35
  5666  015D  3008               	movlw	8
  5667  015E                     u1465:	
  5668  015E  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  5669  015F  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  5670  0160  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  5671  0161  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  5672  0162  0B89               	decfsz	9,f
  5673  0163  295E               	goto	u1465
  5674  0164  0021               	movlb	1	; select bank1
  5675  0165  083D               	movf	(_adf_config^(0+128)+29),w
  5676  0166  3903               	andlw	3
  5677  0167  0020               	movlb	0	; select bank0
  5678  0168  00D7               	movwf	??_Adf_Write_Register_Three+36
  5679  0169  01D8               	clrf	??_Adf_Write_Register_Three+37
  5680  016A  01D9               	clrf	??_Adf_Write_Register_Three+38
  5681  016B  01DA               	clrf	??_Adf_Write_Register_Three+39
  5682  016C  3006               	movlw	6
  5683  016D                     u1475:	
  5684  016D  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  5685  016E  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  5686  016F  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  5687  0170  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  5688  0171  0B89               	decfsz	9,f
  5689  0172  296D               	goto	u1475
  5690  0173  0021               	movlb	1	; select bank1
  5691  0174  083C               	movf	(_adf_config^(0+128)+28),w
  5692  0175  3901               	andlw	1
  5693  0176  0020               	movlb	0	; select bank0
  5694  0177  00DB               	movwf	??_Adf_Write_Register_Three+40
  5695  0178  01DC               	clrf	??_Adf_Write_Register_Three+41
  5696  0179  01DD               	clrf	??_Adf_Write_Register_Three+42
  5697  017A  01DE               	clrf	??_Adf_Write_Register_Three+43
  5698  017B  3005               	movlw	5
  5699  017C                     u1485:	
  5700  017C  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  5701  017D  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  5702  017E  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  5703  017F  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  5704  0180  0B89               	decfsz	9,f
  5705  0181  297C               	goto	u1485
  5706  0182  0021               	movlb	1	; select bank1
  5707  0183  083B               	movf	(_adf_config^(0+128)+27),w
  5708  0184  3901               	andlw	1
  5709  0185  0020               	movlb	0	; select bank0
  5710  0186  00DF               	movwf	??_Adf_Write_Register_Three+44
  5711  0187  01E0               	clrf	??_Adf_Write_Register_Three+45
  5712  0188  01E1               	clrf	??_Adf_Write_Register_Three+46
  5713  0189  01E2               	clrf	??_Adf_Write_Register_Three+47
  5714  018A  3004               	movlw	4
  5715  018B                     u1495:	
  5716  018B  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  5717  018C  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  5718  018D  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  5719  018E  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  5720  018F  0B89               	decfsz	9,f
  5721  0190  298B               	goto	u1495
  5722  0191  0021               	movlb	1	; select bank1
  5723  0192  083A               	movf	(_adf_config^(0+128)+26),w
  5724  0193  3901               	andlw	1
  5725  0194  0020               	movlb	0	; select bank0
  5726  0195  00E3               	movwf	??_Adf_Write_Register_Three+48
  5727  0196  01E4               	clrf	??_Adf_Write_Register_Three+49
  5728  0197  01E5               	clrf	??_Adf_Write_Register_Three+50
  5729  0198  01E6               	clrf	??_Adf_Write_Register_Three+51
  5730  0199  3003               	movlw	3
  5731  019A                     u1505:	
  5732  019A  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  5733  019B  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  5734  019C  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  5735  019D  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  5736  019E  0B89               	decfsz	9,f
  5737  019F  299A               	goto	u1505
  5738  01A0  0021               	movlb	1	; select bank1
  5739  01A1  0839               	movf	(_adf_config^(0+128)+25),w
  5740  01A2  3901               	andlw	1
  5741  01A3  0020               	movlb	0	; select bank0
  5742  01A4  00E7               	movwf	??_Adf_Write_Register_Three+52
  5743  01A5  01E8               	clrf	??_Adf_Write_Register_Three+53
  5744  01A6  01E9               	clrf	??_Adf_Write_Register_Three+54
  5745  01A7  01EA               	clrf	??_Adf_Write_Register_Three+55
  5746  01A8  3002               	movlw	2
  5747  01A9                     u1515:	
  5748  01A9  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  5749  01AA  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  5750  01AB  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  5751  01AC  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  5752  01AD  0B89               	decfsz	9,f
  5753  01AE  29A9               	goto	u1515
  5754  01AF  0867               	movf	??_Adf_Write_Register_Three+52,w
  5755  01B0  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  5756  01B1  0868               	movf	??_Adf_Write_Register_Three+53,w
  5757  01B2  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  5758  01B3  0869               	movf	??_Adf_Write_Register_Three+54,w
  5759  01B4  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  5760  01B5  086A               	movf	??_Adf_Write_Register_Three+55,w
  5761  01B6  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  5762  01B7  0863               	movf	??_Adf_Write_Register_Three+48,w
  5763  01B8  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  5764  01B9  0864               	movf	??_Adf_Write_Register_Three+49,w
  5765  01BA  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  5766  01BB  0865               	movf	??_Adf_Write_Register_Three+50,w
  5767  01BC  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  5768  01BD  0866               	movf	??_Adf_Write_Register_Three+51,w
  5769  01BE  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  5770  01BF  085F               	movf	??_Adf_Write_Register_Three+44,w
  5771  01C0  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  5772  01C1  0860               	movf	??_Adf_Write_Register_Three+45,w
  5773  01C2  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  5774  01C3  0861               	movf	??_Adf_Write_Register_Three+46,w
  5775  01C4  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  5776  01C5  0862               	movf	??_Adf_Write_Register_Three+47,w
  5777  01C6  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  5778  01C7  085B               	movf	??_Adf_Write_Register_Three+40,w
  5779  01C8  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  5780  01C9  085C               	movf	??_Adf_Write_Register_Three+41,w
  5781  01CA  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  5782  01CB  085D               	movf	??_Adf_Write_Register_Three+42,w
  5783  01CC  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  5784  01CD  085E               	movf	??_Adf_Write_Register_Three+43,w
  5785  01CE  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  5786  01CF  0857               	movf	??_Adf_Write_Register_Three+36,w
  5787  01D0  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  5788  01D1  0858               	movf	??_Adf_Write_Register_Three+37,w
  5789  01D2  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  5790  01D3  0859               	movf	??_Adf_Write_Register_Three+38,w
  5791  01D4  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  5792  01D5  085A               	movf	??_Adf_Write_Register_Three+39,w
  5793  01D6  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  5794  01D7  0853               	movf	??_Adf_Write_Register_Three+32,w
  5795  01D8  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  5796  01D9  0854               	movf	??_Adf_Write_Register_Three+33,w
  5797  01DA  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  5798  01DB  0855               	movf	??_Adf_Write_Register_Three+34,w
  5799  01DC  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  5800  01DD  0856               	movf	??_Adf_Write_Register_Three+35,w
  5801  01DE  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  5802  01DF  084F               	movf	??_Adf_Write_Register_Three+28,w
  5803  01E0  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  5804  01E1  0850               	movf	??_Adf_Write_Register_Three+29,w
  5805  01E2  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  5806  01E3  0851               	movf	??_Adf_Write_Register_Three+30,w
  5807  01E4  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  5808  01E5  0852               	movf	??_Adf_Write_Register_Three+31,w
  5809  01E6  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  5810  01E7  084B               	movf	??_Adf_Write_Register_Three+24,w
  5811  01E8  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  5812  01E9  084C               	movf	??_Adf_Write_Register_Three+25,w
  5813  01EA  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  5814  01EB  084D               	movf	??_Adf_Write_Register_Three+26,w
  5815  01EC  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  5816  01ED  084E               	movf	??_Adf_Write_Register_Three+27,w
  5817  01EE  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  5818  01EF  0847               	movf	??_Adf_Write_Register_Three+20,w
  5819  01F0  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  5820  01F1  0848               	movf	??_Adf_Write_Register_Three+21,w
  5821  01F2  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  5822  01F3  0849               	movf	??_Adf_Write_Register_Three+22,w
  5823  01F4  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  5824  01F5  084A               	movf	??_Adf_Write_Register_Three+23,w
  5825  01F6  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  5826  01F7  0843               	movf	??_Adf_Write_Register_Three+16,w
  5827  01F8  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  5828  01F9  0844               	movf	??_Adf_Write_Register_Three+17,w
  5829  01FA  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  5830  01FB  0845               	movf	??_Adf_Write_Register_Three+18,w
  5831  01FC  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  5832  01FD  0846               	movf	??_Adf_Write_Register_Three+19,w
  5833  01FE  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  5834  01FF  083F               	movf	??_Adf_Write_Register_Three+12,w
  5835  0200  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  5836  0201  0840               	movf	??_Adf_Write_Register_Three+13,w
  5837  0202  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  5838  0203  0841               	movf	??_Adf_Write_Register_Three+14,w
  5839  0204  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  5840  0205  0842               	movf	??_Adf_Write_Register_Three+15,w
  5841  0206  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  5842  0207  083B               	movf	??_Adf_Write_Register_Three+8,w
  5843  0208  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  5844  0209  083C               	movf	??_Adf_Write_Register_Three+9,w
  5845  020A  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  5846  020B  083D               	movf	??_Adf_Write_Register_Three+10,w
  5847  020C  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  5848  020D  083E               	movf	??_Adf_Write_Register_Three+11,w
  5849  020E  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  5850  020F  0837               	movf	??_Adf_Write_Register_Three+4,w
  5851  0210  04B3               	iorwf	??_Adf_Write_Register_Three,f
  5852  0211  0838               	movf	??_Adf_Write_Register_Three+5,w
  5853  0212  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  5854  0213  0839               	movf	??_Adf_Write_Register_Three+6,w
  5855  0214  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  5856  0215  083A               	movf	??_Adf_Write_Register_Three+7,w
  5857  0216  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  5858  0217  3003               	movlw	3
  5859  0218  0433               	iorwf	??_Adf_Write_Register_Three,w
  5860  0219  0021               	movlb	1	; select bank1
  5861  021A  00D8               	movwf	Adf_Write_Register_Three@reg^(0+128)
  5862  021B  3000               	movlw	0
  5863  021C  0020               	movlb	0	; select bank0
  5864  021D  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  5865  021E  0021               	movlb	1	; select bank1
  5866  021F  00D9               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  5867  0220  3000               	movlw	0
  5868  0221  0020               	movlb	0	; select bank0
  5869  0222  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  5870  0223  0021               	movlb	1	; select bank1
  5871  0224  00DA               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  5872  0225  3000               	movlw	0
  5873  0226  0020               	movlb	0	; select bank0
  5874  0227  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  5875  0228  0021               	movlb	1	; select bank1
  5876  0229  00DB               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  5877                           
  5878                           ;adf7012.c: 225: uint8_t reg_ptr[4];
  5879                           ;adf7012.c: 226: memcpy(reg_ptr, &reg, 4);
  5880  022A  30D8               	movlw	Adf_Write_Register_Three@reg& (0+255)
  5881  022B  0020               	movlb	0	; select bank0
  5882  022C  00B3               	movwf	??_Adf_Write_Register_Three
  5883  022D  0833               	movf	??_Adf_Write_Register_Three,w
  5884  022E  00A0               	movwf	memcpy@s1
  5885  022F  3004               	movlw	4
  5886  0230  00A1               	movwf	memcpy@n
  5887  0231  3000               	movlw	0
  5888  0232  00A2               	movwf	memcpy@n+1
  5889  0233  30D4               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5890  0234  318C  24D9  3180   	fcall	_memcpy
  5891                           
  5892                           ;adf7012.c: 227: Reverse_Array(reg_ptr,4);
  5893  0237  3004               	movlw	4
  5894  0238  0020               	movlb	0	; select bank0
  5895  0239  00B3               	movwf	??_Adf_Write_Register_Three
  5896  023A  0833               	movf	??_Adf_Write_Register_Three,w
  5897  023B  00A7               	movwf	Reverse_Array@length
  5898  023C  30D4               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5899  023D  318E  2600  3180   	fcall	_Reverse_Array
  5900                           
  5901                           ;adf7012.c: 228: Write_Adf7012_Reg(reg_ptr, 4);
  5902  0240  3004               	movlw	4
  5903  0241  0020               	movlb	0	; select bank0
  5904  0242  00B3               	movwf	??_Adf_Write_Register_Three
  5905  0243  0833               	movf	??_Adf_Write_Register_Three,w
  5906  0244  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5907  0245  30D4               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5908  0246  318D  258B         	fcall	_Write_Adf7012_Reg
  5909  0248  0008               	return
  5910  0249                     __end_of_Adf_Write_Register_Three:	
  5911                           
  5912                           	psect	text31
  5913  0D8B                     __ptext31:	
  5914 ;; *************** function _Write_Adf7012_Reg *****************
  5915 ;; Defined at:
  5916 ;;		line 82 in file "utility.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  reg_value       1    wreg     PTR unsigned char 
  5919 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5920 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  5923 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5924 ;;  i               1   13[BANK0 ] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      unsigned char 
  5927 ;; Registers used:
  5928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5934 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5937 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5938 ;;Total ram usage:        4 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    6
  5941 ;; This function calls:
  5942 ;;		_Delay_ms
  5943 ;;		_Spi_Byte_Send
  5944 ;; This function is called by:
  5945 ;;		_Adf_Write_Register_Zero
  5946 ;;		_Adf_Write_Register_One
  5947 ;;		_Adf_Write_Register_Two
  5948 ;;		_Adf_Write_Register_Three
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           
  5953                           ;psect for function _Write_Adf7012_Reg
  5954  0D8B                     _Write_Adf7012_Reg:	
  5955                           
  5956                           ;incstack = 0
  5957                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5958                           ;Write_Adf7012_Reg@reg_value stored from wreg
  5959  0D8B  0020               	movlb	0	; select bank0
  5960  0D8C  00AC               	movwf	Write_Adf7012_Reg@reg_value
  5961                           
  5962                           ;utility.c: 84: uint8_t i = 0;
  5963  0D8D  01AD               	clrf	Write_Adf7012_Reg@i
  5964                           
  5965                           ;utility.c: 85: Delay_ms(1);
  5966  0D8E  3001               	movlw	1
  5967  0D8F  00A0               	movwf	Delay_ms@time_to_delay
  5968  0D90  3000               	movlw	0
  5969  0D91  00A1               	movwf	Delay_ms@time_to_delay+1
  5970  0D92  318C  2493  318D   	fcall	_Delay_ms
  5971                           
  5972                           ;utility.c: 86: PORTAbits.RA4 = 0;;
  5973  0D95  0020               	movlb	0	; select bank0
  5974  0D96  120C               	bcf	12,4	;volatile
  5975                           
  5976                           ;utility.c: 87: Delay_ms(1);
  5977  0D97  3001               	movlw	1
  5978  0D98  00A0               	movwf	Delay_ms@time_to_delay
  5979  0D99  3000               	movlw	0
  5980  0D9A  00A1               	movwf	Delay_ms@time_to_delay+1
  5981  0D9B  318C  2493  318D   	fcall	_Delay_ms
  5982                           
  5983                           ;utility.c: 89: for (i = 0; i < size_of_reg; i++){
  5984  0D9E  0020               	movlb	0	; select bank0
  5985  0D9F  01AD               	clrf	Write_Adf7012_Reg@i
  5986  0DA0                     l1901:	
  5987  0DA0  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  5988  0DA1  022D               	subwf	Write_Adf7012_Reg@i,w
  5989  0DA2  1803               	btfsc	3,0
  5990  0DA3  2DB4               	goto	l1903
  5991                           
  5992                           ;utility.c: 90: Spi_Byte_Send(*(reg_value+i));
  5993  0DA4  082D               	movf	Write_Adf7012_Reg@i,w
  5994  0DA5  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  5995  0DA6  00AB               	movwf	??_Write_Adf7012_Reg
  5996  0DA7  082B               	movf	??_Write_Adf7012_Reg,w
  5997  0DA8  0086               	movwf	6
  5998  0DA9  0187               	clrf	7
  5999  0DAA  0801               	movf	1,w
  6000  0DAB  318D  2502  318D   	fcall	_Spi_Byte_Send
  6001  0DAE  3001               	movlw	1
  6002  0DAF  0020               	movlb	0	; select bank0
  6003  0DB0  00AB               	movwf	??_Write_Adf7012_Reg
  6004  0DB1  082B               	movf	??_Write_Adf7012_Reg,w
  6005  0DB2  07AD               	addwf	Write_Adf7012_Reg@i,f
  6006  0DB3  2DA0               	goto	l1901
  6007  0DB4                     l1903:	
  6008                           
  6009                           ;utility.c: 91: }
  6010                           ;utility.c: 93: Delay_ms(1);
  6011  0DB4  3001               	movlw	1
  6012  0DB5  00A0               	movwf	Delay_ms@time_to_delay
  6013  0DB6  3000               	movlw	0
  6014  0DB7  00A1               	movwf	Delay_ms@time_to_delay+1
  6015  0DB8  318C  2493  318D   	fcall	_Delay_ms
  6016                           
  6017                           ;utility.c: 94: PORTAbits.RA4 = 1;;
  6018  0DBB  0020               	movlb	0	; select bank0
  6019  0DBC  160C               	bsf	12,4	;volatile
  6020                           
  6021                           ;utility.c: 96: Delay_ms(1);
  6022  0DBD  3001               	movlw	1
  6023  0DBE  00A0               	movwf	Delay_ms@time_to_delay
  6024  0DBF  3000               	movlw	0
  6025  0DC0  00A1               	movwf	Delay_ms@time_to_delay+1
  6026  0DC1  318C  2493         	fcall	_Delay_ms
  6027  0DC3  0008               	return
  6028  0DC4                     __end_of_Write_Adf7012_Reg:	
  6029                           ;utility.c: 97: return 1;
  6030                           ;	Return value of _Write_Adf7012_Reg is never used
  6031                           
  6032                           
  6033                           	psect	text32
  6034  0D02                     __ptext32:	
  6035 ;; *************** function _Spi_Byte_Send *****************
  6036 ;; Defined at:
  6037 ;;		line 220 in file "utility.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  data            1    wreg     unsigned char 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;  data            1    7[BANK0 ] unsigned char 
  6042 ;;  i               1    9[BANK0 ] unsigned char 
  6043 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  1    wreg      unsigned char 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0, pclath, cstack
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;Total ram usage:        4 bytes
  6058 ;; Hardware stack levels used:    1
  6059 ;; Hardware stack levels required when called:    5
  6060 ;; This function calls:
  6061 ;;		_Delay_ms
  6062 ;; This function is called by:
  6063 ;;		_Write_Adf7012_Reg
  6064 ;; This function uses a non-reentrant model
  6065 ;;
  6066                           
  6067                           
  6068                           ;psect for function _Spi_Byte_Send
  6069  0D02                     _Spi_Byte_Send:	
  6070                           
  6071                           ;incstack = 0
  6072                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  6073                           ;Spi_Byte_Send@data stored from wreg
  6074  0D02  0020               	movlb	0	; select bank0
  6075  0D03  00A7               	movwf	Spi_Byte_Send@data
  6076                           
  6077                           ;utility.c: 222: PORTAbits.RA2 = 0;
  6078  0D04  110C               	bcf	12,2	;volatile
  6079                           
  6080                           ;utility.c: 223: uint8_t i;
  6081                           ;utility.c: 224: uint8_t data_to_send;
  6082                           ;utility.c: 225: data_to_send = data;
  6083  0D05  0827               	movf	Spi_Byte_Send@data,w
  6084  0D06  00A6               	movwf	??_Spi_Byte_Send
  6085  0D07  0826               	movf	??_Spi_Byte_Send,w
  6086  0D08  00A8               	movwf	Spi_Byte_Send@data_to_send
  6087                           
  6088                           ;utility.c: 226: for(i = 0; i <8; i++){
  6089  0D09  01A9               	clrf	Spi_Byte_Send@i
  6090  0D0A                     L5:	
  6091  0D0A  3008               	movlw	8
  6092  0D0B  0229               	subwf	Spi_Byte_Send@i,w
  6093  0D0C  1803               	btfsc	3,0
  6094  0D0D  0008               	return
  6095                           
  6096                           ;utility.c: 228: if(data_to_send & 0x80)
  6097  0D0E  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  6098  0D0F  2D12               	goto	l303
  6099                           
  6100                           ;utility.c: 229: PORTCbits.RC2 = 1;
  6101  0D10  150E               	bsf	14,2	;volatile
  6102  0D11  2D13               	goto	l1865
  6103  0D12                     l303:	
  6104                           
  6105                           ;utility.c: 230: else
  6106                           ;utility.c: 231: PORTCbits.RC2 = 0;
  6107  0D12  110E               	bcf	14,2	;volatile
  6108  0D13                     l1865:	
  6109                           
  6110                           ;utility.c: 233: data_to_send <<= 1;
  6111  0D13  1003               	clrc
  6112  0D14  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  6113                           
  6114                           ;utility.c: 235: PORTAbits.RA2 = 1;
  6115  0D15  150C               	bsf	12,2	;volatile
  6116                           
  6117                           ;utility.c: 236: Delay_ms(1);
  6118  0D16  3001               	movlw	1
  6119  0D17  00A0               	movwf	Delay_ms@time_to_delay
  6120  0D18  3000               	movlw	0
  6121  0D19  00A1               	movwf	Delay_ms@time_to_delay+1
  6122  0D1A  318C  2493  318D   	fcall	_Delay_ms
  6123                           
  6124                           ;utility.c: 237: PORTAbits.RA2 = 0;
  6125  0D1D  0020               	movlb	0	; select bank0
  6126  0D1E  110C               	bcf	12,2	;volatile
  6127                           
  6128                           ;utility.c: 238: Delay_ms(1);
  6129  0D1F  3001               	movlw	1
  6130  0D20  00A0               	movwf	Delay_ms@time_to_delay
  6131  0D21  3000               	movlw	0
  6132  0D22  00A1               	movwf	Delay_ms@time_to_delay+1
  6133  0D23  318C  2493  318D   	fcall	_Delay_ms
  6134  0D26  3001               	movlw	1
  6135  0D27  0020               	movlb	0	; select bank0
  6136  0D28  00A6               	movwf	??_Spi_Byte_Send
  6137  0D29  0826               	movf	??_Spi_Byte_Send,w
  6138  0D2A  07A9               	addwf	Spi_Byte_Send@i,f
  6139  0D2B  2D0A               	goto	L5
  6140  0D2C                     __end_of_Spi_Byte_Send:	
  6141                           ;utility.c: 240: }
  6142                           ;utility.c: 241: return 1;
  6143                           ;	Return value of _Spi_Byte_Send is never used
  6144                           
  6145                           
  6146                           	psect	text33
  6147  0C93                     __ptext33:	
  6148 ;; *************** function _Delay_ms *****************
  6149 ;; Defined at:
  6150 ;;		line 44 in file "utility.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;  i               2    4[BANK0 ] unsigned int 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;		None               void
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0, pclath, cstack
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6164 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;Total ram usage:        6 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    4
  6171 ;; This function calls:
  6172 ;;		_Dac0_Start_Hold
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;;		_Write_Adf7012_Reg
  6176 ;;		_Spi_Byte_Send
  6177 ;;		_Adf_Reset
  6178 ;;		_Adf_Lock
  6179 ;;		_Radio_Setup
  6180 ;;		_Ptt_On
  6181 ;;		_Ptt_Off
  6182 ;;		_Modem_Flush_Frame
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           
  6187                           ;psect for function _Delay_ms
  6188  0C93                     _Delay_ms:	
  6189                           
  6190                           ;utility.c: 46: uint16_t i=0;
  6191                           
  6192                           ;incstack = 0
  6193                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  6194  0C93  0020               	movlb	0	; select bank0
  6195  0C94  01A4               	clrf	Delay_ms@i
  6196  0C95  01A5               	clrf	Delay_ms@i+1
  6197                           
  6198                           ;utility.c: 48: Dac0_Start_Hold();
  6199  0C96  318B  236E  318C   	fcall	_Dac0_Start_Hold
  6200                           
  6201                           ;utility.c: 49: for(i=0; i<time_to_delay; i++){
  6202  0C99  0020               	movlb	0	; select bank0
  6203  0C9A  01A4               	clrf	Delay_ms@i
  6204  0C9B  01A5               	clrf	Delay_ms@i+1
  6205  0C9C                     l273:	
  6206  0C9C  0821               	movf	Delay_ms@time_to_delay+1,w
  6207  0C9D  0225               	subwf	Delay_ms@i+1,w
  6208  0C9E  1D03               	skipz
  6209  0C9F  2CA2               	goto	u1155
  6210  0CA0  0820               	movf	Delay_ms@time_to_delay,w
  6211  0CA1  0224               	subwf	Delay_ms@i,w
  6212  0CA2                     u1155:	
  6213  0CA2  1803               	btfsc	3,0
  6214  0CA3  0008               	return
  6215                           
  6216                           ;utility.c: 50: _delay((unsigned long)((1)*(32000000/4000.0)));
  6217  0CA4  300B               	movlw	11
  6218  0CA5  00A3               	movwf	??_Delay_ms+1
  6219  0CA6  3062               	movlw	98
  6220  0CA7  00A2               	movwf	??_Delay_ms
  6221  0CA8                     u3137:	
  6222  0CA8  0BA2               	decfsz	??_Delay_ms,f
  6223  0CA9  2CA8               	goto	u3137
  6224  0CAA  0BA3               	decfsz	??_Delay_ms+1,f
  6225  0CAB  2CA8               	goto	u3137
  6226  0CAC  0000               	nop
  6227  0CAD  3001               	movlw	1
  6228  0CAE  0020               	movlb	0	; select bank0
  6229  0CAF  07A4               	addwf	Delay_ms@i,f
  6230  0CB0  3000               	movlw	0
  6231  0CB1  3DA5               	addwfc	Delay_ms@i+1,f
  6232  0CB2  2C9C               	goto	l273
  6233  0CB3                     __end_of_Delay_ms:	
  6234                           
  6235                           	psect	text34
  6236  0B6E                     __ptext34:	
  6237 ;; *************** function _Dac0_Start_Hold *****************
  6238 ;; Defined at:
  6239 ;;		line 275 in file "utility.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;		None
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;		None
  6244 ;; Return value:  Size  Location     Type
  6245 ;;		None               void
  6246 ;; Registers used:
  6247 ;;		wreg
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6257 ;;Total ram usage:        0 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:    3
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_main
  6264 ;;		_Delay_ms
  6265 ;; This function uses a non-reentrant model
  6266 ;;
  6267                           
  6268                           
  6269                           ;psect for function _Dac0_Start_Hold
  6270  0B6E                     _Dac0_Start_Hold:	
  6271                           
  6272                           ;utility.c: 276: DACEN = 1;
  6273                           
  6274                           ;incstack = 0
  6275                           ; Regs used in _Dac0_Start_Hold: [wreg]
  6276  0B6E  0022               	movlb	2	; select bank2
  6277  0B6F  1798               	bsf	24,7	;volatile
  6278                           
  6279                           ;utility.c: 277: DACCON1 = 0x10;
  6280  0B70  3010               	movlw	16
  6281  0B71  0099               	movwf	25	;volatile
  6282  0B72  0008               	return
  6283  0B73                     __end_of_Dac0_Start_Hold:	
  6284                           
  6285                           	psect	text35
  6286  0E00                     __ptext35:	
  6287 ;; *************** function _Reverse_Array *****************
  6288 ;; Defined at:
  6289 ;;		line 198 in file "utility.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;  input           1    wreg     PTR unsigned char 
  6292 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6293 ;;  length          1    7[BANK0 ] unsigned char 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  input           1   17[BANK0 ] PTR unsigned char 
  6296 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6297 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  6298 ;;  i               1   18[BANK0 ] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  1    wreg      unsigned char 
  6301 ;; Registers used:
  6302 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6308 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6309 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6310 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6311 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6312 ;;Total ram usage:       12 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    4
  6315 ;; This function calls:
  6316 ;;		_memcpy
  6317 ;; This function is called by:
  6318 ;;		_Adf_Write_Register_Zero
  6319 ;;		_Adf_Write_Register_One
  6320 ;;		_Adf_Write_Register_Two
  6321 ;;		_Adf_Write_Register_Three
  6322 ;; This function uses a non-reentrant model
  6323 ;;
  6324                           
  6325                           
  6326                           ;psect for function _Reverse_Array
  6327  0E00                     _Reverse_Array:	
  6328                           
  6329                           ;incstack = 0
  6330                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6331                           ;Reverse_Array@input stored from wreg
  6332  0E00  0020               	movlb	0	; select bank0
  6333  0E01  00B1               	movwf	Reverse_Array@input
  6334                           
  6335                           ;utility.c: 199: uint8_t i = 0;
  6336  0E02  01B2               	clrf	Reverse_Array@i
  6337                           
  6338                           ;utility.c: 200: uint8_t buffer_array[4] = {0};
  6339  0E03  0022               	movlb	2	; select bank2
  6340  0E04  0828               	movf	(Reverse_Array@F3148+3)^(0+256),w
  6341  0E05  0020               	movlb	0	; select bank0
  6342  0E06  00B0               	movwf	Reverse_Array@buffer_array+3
  6343  0E07  0022               	movlb	2	; select bank2
  6344  0E08  0827               	movf	(Reverse_Array@F3148+2)^(0+256),w
  6345  0E09  0020               	movlb	0	; select bank0
  6346  0E0A  00AF               	movwf	Reverse_Array@buffer_array+2
  6347  0E0B  0022               	movlb	2	; select bank2
  6348  0E0C  0826               	movf	(Reverse_Array@F3148+1)^(0+256),w
  6349  0E0D  0020               	movlb	0	; select bank0
  6350  0E0E  00AE               	movwf	Reverse_Array@buffer_array+1
  6351  0E0F  0022               	movlb	2	; select bank2
  6352  0E10  0825               	movf	Reverse_Array@F3148^(0+256),w
  6353  0E11  0020               	movlb	0	; select bank0
  6354  0E12  00AD               	movwf	Reverse_Array@buffer_array
  6355                           
  6356                           ;utility.c: 201: memcpy(buffer_array, input, length);
  6357  0E13  0831               	movf	Reverse_Array@input,w
  6358  0E14  00A8               	movwf	??_Reverse_Array
  6359  0E15  0828               	movf	??_Reverse_Array,w
  6360  0E16  00A0               	movwf	memcpy@s1
  6361  0E17  0827               	movf	Reverse_Array@length,w
  6362  0E18  00A9               	movwf	??_Reverse_Array+1
  6363  0E19  01AA               	clrf	??_Reverse_Array+2
  6364  0E1A  0829               	movf	??_Reverse_Array+1,w
  6365  0E1B  00A1               	movwf	memcpy@n
  6366  0E1C  082A               	movf	??_Reverse_Array+2,w
  6367  0E1D  00A2               	movwf	memcpy@n+1
  6368  0E1E  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6369  0E1F  318C  24D9  318E   	fcall	_memcpy
  6370                           
  6371                           ;utility.c: 203: for(i = 0; i<length; i++){
  6372  0E22  0020               	movlb	0	; select bank0
  6373  0E23  01B2               	clrf	Reverse_Array@i
  6374  0E24                     l1921:	
  6375  0E24  0827               	movf	Reverse_Array@length,w
  6376  0E25  0232               	subwf	Reverse_Array@i,w
  6377  0E26  1803               	btfsc	3,0
  6378  0E27  0008               	return
  6379                           
  6380                           ;utility.c: 204: *(input+i) = *(buffer_array+(length-1)-i);
  6381  0E28  30FF               	movlw	-1
  6382  0E29  0727               	addwf	Reverse_Array@length,w
  6383  0E2A  00A8               	movwf	??_Reverse_Array
  6384  0E2B  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6385  0E2C  0728               	addwf	??_Reverse_Array,w
  6386  0E2D  00A9               	movwf	??_Reverse_Array+1
  6387  0E2E  0332               	decf	Reverse_Array@i,w
  6388  0E2F  3AFF               	xorlw	255
  6389  0E30  0729               	addwf	??_Reverse_Array+1,w
  6390  0E31  00AA               	movwf	??_Reverse_Array+2
  6391  0E32  082A               	movf	??_Reverse_Array+2,w
  6392  0E33  0086               	movwf	6
  6393  0E34  0187               	clrf	7
  6394  0E35  0801               	movf	1,w
  6395  0E36  00AB               	movwf	??_Reverse_Array+3
  6396  0E37  0832               	movf	Reverse_Array@i,w
  6397  0E38  0731               	addwf	Reverse_Array@input,w
  6398  0E39  00AC               	movwf	??_Reverse_Array+4
  6399  0E3A  082C               	movf	??_Reverse_Array+4,w
  6400  0E3B  0086               	movwf	6
  6401  0E3C  0187               	clrf	7
  6402  0E3D  082B               	movf	??_Reverse_Array+3,w
  6403  0E3E  0081               	movwf	1
  6404  0E3F  3001               	movlw	1
  6405  0E40  00A8               	movwf	??_Reverse_Array
  6406  0E41  0828               	movf	??_Reverse_Array,w
  6407  0E42  07B2               	addwf	Reverse_Array@i,f
  6408  0E43  2E24               	goto	l1921
  6409  0E44                     __end_of_Reverse_Array:	
  6410                           ;utility.c: 205: }
  6411                           ;utility.c: 209: return 1;
  6412                           ;	Return value of _Reverse_Array is never used
  6413                           
  6414                           
  6415                           	psect	text36
  6416  0CD9                     __ptext36:	
  6417 ;; *************** function _memcpy *****************
  6418 ;; Defined at:
  6419 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  d1              1    wreg     PTR void 
  6422 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6423 ;;		 -> Reverse_Array@buffer_array(4), 
  6424 ;;  s1              1    0[BANK0 ] PTR const void 
  6425 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6426 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6427 ;;  n               2    1[BANK0 ] unsigned int 
  6428 ;; Auto vars:     Size  Location     Type
  6429 ;;  d1              1    6[BANK0 ] PTR void 
  6430 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6431 ;;		 -> Reverse_Array@buffer_array(4), 
  6432 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6433 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6434 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6435 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6436 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6437 ;;		 -> Reverse_Array@buffer_array(4), 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      PTR void 
  6440 ;; Registers used:
  6441 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6447 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;Total ram usage:        7 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:    3
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_Reverse_Array
  6458 ;;		_Adf_Write_Register_Zero
  6459 ;;		_Adf_Write_Register_One
  6460 ;;		_Adf_Write_Register_Two
  6461 ;;		_Adf_Write_Register_Three
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           
  6466                           ;psect for function _memcpy
  6467  0CD9                     _memcpy:	
  6468                           
  6469                           ;incstack = 0
  6470                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6471                           ;memcpy@d1 stored from wreg
  6472  0CD9  0020               	movlb	0	; select bank0
  6473  0CDA  00A6               	movwf	memcpy@d1
  6474  0CDB  0820               	movf	memcpy@s1,w
  6475  0CDC  00A3               	movwf	??_memcpy
  6476  0CDD  0823               	movf	??_memcpy,w
  6477  0CDE  00A5               	movwf	memcpy@s
  6478  0CDF  0826               	movf	memcpy@d1,w
  6479  0CE0  00A3               	movwf	??_memcpy
  6480  0CE1  0823               	movf	??_memcpy,w
  6481  0CE2  00A4               	movwf	memcpy@d
  6482  0CE3                     l1887:	
  6483  0CE3  3001               	movlw	1
  6484  0CE4  02A1               	subwf	memcpy@n,f
  6485  0CE5  3000               	movlw	0
  6486  0CE6  3BA2               	subwfb	memcpy@n+1,f
  6487  0CE7  30FF               	movlw	255
  6488  0CE8  0622               	xorwf	memcpy@n+1,w
  6489  0CE9  1D03               	skipz
  6490  0CEA  2CED               	goto	u1195
  6491  0CEB  30FF               	movlw	255
  6492  0CEC  0621               	xorwf	memcpy@n,w
  6493  0CED                     u1195:	
  6494  0CED  1903               	btfsc	3,2
  6495  0CEE  0008               	return
  6496  0CEF  0825               	movf	memcpy@s,w
  6497  0CF0  0086               	movwf	6
  6498  0CF1  0187               	clrf	7
  6499  0CF2  0801               	movf	1,w
  6500  0CF3  00A3               	movwf	??_memcpy
  6501  0CF4  0824               	movf	memcpy@d,w
  6502  0CF5  0086               	movwf	6
  6503  0CF6  0187               	clrf	7
  6504  0CF7  0823               	movf	??_memcpy,w
  6505  0CF8  0081               	movwf	1
  6506  0CF9  3001               	movlw	1
  6507  0CFA  00A3               	movwf	??_memcpy
  6508  0CFB  0823               	movf	??_memcpy,w
  6509  0CFC  07A5               	addwf	memcpy@s,f
  6510  0CFD  3001               	movlw	1
  6511  0CFE  00A3               	movwf	??_memcpy
  6512  0CFF  0823               	movf	??_memcpy,w
  6513  0D00  07A4               	addwf	memcpy@d,f
  6514  0D01  2CE3               	goto	l1887
  6515  0D02                     __end_of_memcpy:	
  6516                           ;	Return value of _memcpy is never used
  6517                           
  6518                           
  6519                           	psect	text37
  6520  0B62                     __ptext37:	
  6521 ;; *************** function _Adf_Locked *****************
  6522 ;; Defined at:
  6523 ;;		line 276 in file "adf7012.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;		None
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;		None
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  1    wreg      unsigned char 
  6530 ;; Registers used:
  6531 ;;		wreg, pclath, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;Total ram usage:        0 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    4
  6544 ;; This function calls:
  6545 ;;		_Read_Adf7012_Muxout
  6546 ;; This function is called by:
  6547 ;;		_Adf_Lock
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           
  6552                           ;psect for function _Adf_Locked
  6553  0B62                     _Adf_Locked:	
  6554                           
  6555                           ;adf7012.c: 278: return Read_Adf7012_Muxout();
  6556                           
  6557                           ;incstack = 0
  6558                           ; Regs used in _Adf_Locked: [wreg+pclath+cstack]
  6559  0B62  318B  2396         	fcall	_Read_Adf7012_Muxout
  6560  0B64  0008               	return
  6561  0B65                     __end_of_Adf_Locked:	
  6562                           
  6563                           	psect	text38
  6564  0B96                     __ptext38:	
  6565 ;; *************** function _Read_Adf7012_Muxout *****************
  6566 ;; Defined at:
  6567 ;;		line 64 in file "utility.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;		None
  6570 ;; Auto vars:     Size  Location     Type
  6571 ;;		None
  6572 ;; Return value:  Size  Location     Type
  6573 ;;                  1    wreg      unsigned char 
  6574 ;; Registers used:
  6575 ;;		wreg
  6576 ;; Tracked objects:
  6577 ;;		On entry : 0/0
  6578 ;;		On exit  : 0/0
  6579 ;;		Unchanged: 0/0
  6580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6585 ;;Total ram usage:        0 bytes
  6586 ;; Hardware stack levels used:    1
  6587 ;; Hardware stack levels required when called:    3
  6588 ;; This function calls:
  6589 ;;		Nothing
  6590 ;; This function is called by:
  6591 ;;		_Adf_Locked
  6592 ;;		_Ptt_On
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _Read_Adf7012_Muxout
  6598  0B96                     _Read_Adf7012_Muxout:	
  6599                           
  6600                           ;utility.c: 66: if(PORTCbits.RC5)
  6601                           
  6602                           ;incstack = 0
  6603                           ; Regs used in _Read_Adf7012_Muxout: [wreg]
  6604  0B96  0020               	movlb	0	; select bank0
  6605  0B97  1E8E               	btfss	14,5	;volatile
  6606  0B98  2B9B               	goto	l2027
  6607                           
  6608                           ;utility.c: 67: return 1;
  6609  0B99  3001               	movlw	1
  6610  0B9A  0008               	return
  6611  0B9B                     l2027:	
  6612                           
  6613                           ;utility.c: 68: else
  6614                           ;utility.c: 69: return 0;
  6615  0B9B  3000               	movlw	0
  6616  0B9C  0008               	return
  6617  0B9D                     __end_of_Read_Adf7012_Muxout:	
  6618                           
  6619                           	psect	text39
  6620  0B78                     __ptext39:	
  6621 ;; *************** function _Adc1_Start *****************
  6622 ;; Defined at:
  6623 ;;		line 286 in file "utility.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;		None               void
  6630 ;; Registers used:
  6631 ;;		None
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;Total ram usage:        0 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; Hardware stack levels required when called:    3
  6644 ;; This function calls:
  6645 ;;		Nothing
  6646 ;; This function is called by:
  6647 ;;		_main
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           
  6652                           ;psect for function _Adc1_Start
  6653  0B78                     _Adc1_Start:	
  6654                           
  6655                           ;utility.c: 287: ADIF = 0;
  6656                           
  6657                           ;incstack = 0
  6658                           ; Regs used in _Adc1_Start: []
  6659  0B78  0020               	movlb	0	; select bank0
  6660  0B79  1311               	bcf	17,6	;volatile
  6661                           
  6662                           ;utility.c: 288: ADON = 1;
  6663  0B7A  0021               	movlb	1	; select bank1
  6664  0B7B  141D               	bsf	29,0	;volatile
  6665                           
  6666                           ;utility.c: 289: ADIE = 1;
  6667  0B7C  1711               	bsf	17,6	;volatile
  6668  0B7D  0008               	return
  6669  0B7E                     __end_of_Adc1_Start:	
  6670                           
  6671                           	psect	intentry
  6672  0004                     __pintentry:	
  6673 ;; *************** function _global_interrupt *****************
  6674 ;; Defined at:
  6675 ;;		line 53 in file "main.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;		None
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;		None               void
  6682 ;; Registers used:
  6683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;Total ram usage:        2 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; Hardware stack levels required when called:    2
  6696 ;; This function calls:
  6697 ;;		_Sinus_Generator
  6698 ;; This function is called by:
  6699 ;;		Interrupt level 1
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703  0004                     _global_interrupt:	
  6704                           
  6705                           ;incstack = 0
  6706                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6707  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6708  0005  3180               	pagesel	$
  6709  0006  0020               	movlb	0	; select bank0
  6710  0007  087F               	movf	127,w
  6711  0008  00F8               	movwf	??_global_interrupt+1
  6712                           
  6713                           ;main.c: 55: INTCON &= ~0x80;
  6714  0009  307F               	movlw	127
  6715  000A  00F7               	movwf	??_global_interrupt
  6716  000B  0877               	movf	??_global_interrupt,w
  6717  000C  058B               	andwf	11,f	;volatile
  6718                           
  6719                           ;main.c: 58: if(ADIF){
  6720  000D  1F11               	btfss	17,6	;volatile
  6721  000E  281B               	goto	i1l185
  6722                           
  6723                           ;main.c: 60: adc__high = ADRESH;
  6724  000F  0021               	movlb	1	; select bank1
  6725  0010  081C               	movf	28,w	;volatile
  6726  0011  00F7               	movwf	??_global_interrupt
  6727  0012  0877               	movf	??_global_interrupt,w
  6728  0013  00CE               	movwf	_adc__high^(0+128)
  6729                           
  6730                           ;main.c: 61: adc__low = ADRESL;
  6731  0014  081B               	movf	27,w	;volatile
  6732  0015  00F7               	movwf	??_global_interrupt
  6733  0016  0877               	movf	??_global_interrupt,w
  6734  0017  00CF               	movwf	_adc__low^(0+128)
  6735                           
  6736                           ;main.c: 63: ADIF = 0;
  6737  0018  0020               	movlb	0	; select bank0
  6738  0019  1311               	bcf	17,6	;volatile
  6739                           
  6740                           ;main.c: 65: return;
  6741  001A  28A8               	goto	i1l186
  6742  001B                     i1l185:	
  6743                           
  6744                           ;main.c: 66: }
  6745                           ;main.c: 71: if(PIR1 & 0x04){
  6746  001B  1D11               	btfss	17,2	;volatile
  6747  001C  284B               	goto	i1l187
  6748                           
  6749                           ;main.c: 73: Change_to_New_Baud = 1;
  6750  001D  0021               	movlb	1	; select bank1
  6751  001E  01CA               	clrf	_Change_to_New_Baud^(0+128)
  6752  001F  0ACA               	incf	_Change_to_New_Baud^(0+128),f
  6753                           
  6754                           ;main.c: 77: TMR1H = 0x00;
  6755  0020  0020               	movlb	0	; select bank0
  6756  0021  0197               	clrf	23	;volatile
  6757                           
  6758                           ;main.c: 78: TMR1L = 0x00;
  6759  0022  0196               	clrf	22	;volatile
  6760                           
  6761                           ;main.c: 80: PIR1 &= ~0x04;
  6762  0023  30FB               	movlw	251
  6763  0024  00F7               	movwf	??_global_interrupt
  6764  0025  0877               	movf	??_global_interrupt,w
  6765  0026  0591               	andwf	17,f	;volatile
  6766                           
  6767                           ;main.c: 82: Systick_Counter += 1;
  6768  0027  3001               	movlw	1
  6769  0028  0022               	movlb	2	; select bank2
  6770  0029  07B1               	addwf	_Systick_Counter^(0+256),f
  6771  002A  3000               	movlw	0
  6772  002B  3DB2               	addwfc	(_Systick_Counter+1)^(0+256),f
  6773  002C  3000               	movlw	0
  6774  002D  3DB3               	addwfc	(_Systick_Counter+2)^(0+256),f
  6775  002E  3000               	movlw	0
  6776  002F  3DB4               	addwfc	(_Systick_Counter+3)^(0+256),f
  6777                           
  6778                           ;main.c: 83: if(Systick_Counter > 100000){
  6779  0030  3000               	movlw	0
  6780  0031  0234               	subwf	(_Systick_Counter+3)^(0+256),w
  6781  0032  1D03               	skipz
  6782  0033  283E               	goto	u246_25
  6783  0034  3001               	movlw	1
  6784  0035  0233               	subwf	(_Systick_Counter+2)^(0+256),w
  6785  0036  1D03               	skipz
  6786  0037  283E               	goto	u246_25
  6787  0038  3086               	movlw	134
  6788  0039  0232               	subwf	(_Systick_Counter+1)^(0+256),w
  6789  003A  1D03               	skipz
  6790  003B  283E               	goto	u246_25
  6791  003C  30A1               	movlw	161
  6792  003D  0231               	subwf	_Systick_Counter^(0+256),w
  6793  003E                     u246_25:	
  6794  003E  1C03               	skipc
  6795  003F  28A8               	goto	i1l186
  6796                           
  6797                           ;main.c: 84: Systick_Counter = 0;
  6798  0040  3000               	movlw	0
  6799  0041  00B4               	movwf	(_Systick_Counter+3)^(0+256)
  6800  0042  3000               	movlw	0
  6801  0043  00B3               	movwf	(_Systick_Counter+2)^(0+256)
  6802  0044  3000               	movlw	0
  6803  0045  00B2               	movwf	(_Systick_Counter+1)^(0+256)
  6804  0046  3000               	movlw	0
  6805  0047  00B1               	movwf	_Systick_Counter^(0+256)
  6806                           
  6807                           ;main.c: 85: ADCON0 |= 0b00000010;
  6808  0048  0021               	movlb	1	; select bank1
  6809  0049  149D               	bsf	29,1	;volatile
  6810                           
  6811                           ;main.c: 86: }
  6812                           ;main.c: 88: return;
  6813  004A  28A8               	goto	i1l186
  6814  004B                     i1l187:	
  6815                           
  6816                           ;main.c: 89: }
  6817                           ;main.c: 93: if(INTCON & 0x04){
  6818  004B  1D0B               	btfss	11,2	;volatile
  6819  004C  2855               	goto	i1l189
  6820                           
  6821                           ;main.c: 95: Sinus_Generator();
  6822  004D  3185  257B  3180   	fcall	_Sinus_Generator
  6823                           
  6824                           ;main.c: 97: INTCON &= ~0x04;
  6825  0050  30FB               	movlw	251
  6826  0051  00F7               	movwf	??_global_interrupt
  6827  0052  0877               	movf	??_global_interrupt,w
  6828  0053  058B               	andwf	11,f	;volatile
  6829                           
  6830                           ;main.c: 99: return;
  6831  0054  28A8               	goto	i1l186
  6832  0055                     i1l189:	
  6833                           
  6834                           ;main.c: 100: }
  6835                           ;main.c: 104: if(SSP1IF){
  6836  0055  1D91               	btfss	17,3	;volatile
  6837  0056  28A7               	goto	i1l190
  6838                           
  6839                           ;main.c: 106: if(!SSP1STATbits.D_nA){
  6840  0057  0024               	movlb	4	; select bank4
  6841  0058  1A94               	btfsc	20,5	;volatile
  6842  0059  286F               	goto	i1l191
  6843                           
  6844                           ;main.c: 107: SSP1IF = 0;
  6845  005A  0020               	movlb	0	; select bank0
  6846  005B  1191               	bcf	17,3	;volatile
  6847                           
  6848                           ;main.c: 108: i2c_address = SSP1BUF;
  6849  005C  0024               	movlb	4	; select bank4
  6850  005D  0811               	movf	17,w	;volatile
  6851  005E  00F7               	movwf	??_global_interrupt
  6852  005F  0877               	movf	??_global_interrupt,w
  6853  0060  0021               	movlb	1	; select bank1
  6854  0061  00D1               	movwf	_i2c_address^(0+128)
  6855                           
  6856                           ;main.c: 109: if(SSP1STATbits.R_nW){
  6857  0062  0024               	movlb	4	; select bank4
  6858  0063  1D14               	btfss	20,2	;volatile
  6859  0064  2898               	goto	i1l2655
  6860                           
  6861                           ;main.c: 110: if(!SSP1STATbits.BF)
  6862  0065  1814               	btfsc	20,0	;volatile
  6863  0066  2881               	goto	i1l2647
  6864                           
  6865                           ;main.c: 111: SSP1BUF = i2c_data[i2c_data_index++];
  6866  0067  087D               	movf	_i2c_data_index,w
  6867  0068  3E20               	addlw	_i2c_data& (0+255)
  6868  0069  0086               	movwf	6
  6869  006A  3001               	movlw	1	; select bank2/3
  6870  006B  0087               	movwf	7
  6871  006C  0801               	movf	1,w
  6872  006D  0091               	movwf	17	;volatile
  6873  006E  2894               	goto	L6
  6874  006F                     i1l191:	
  6875                           ;main.c: 122: }
  6876                           ;main.c: 124: }
  6877                           
  6878                           ;main.c: 120: else{
  6879                           ;main.c: 121: CKP = 1;
  6880                           
  6881                           ;main.c: 119: }
  6882                           
  6883                           ;main.c: 116: }
  6884                           ;main.c: 118: CKP = 1;
  6885                           
  6886                           ;main.c: 115: SSP1BUF = 0xCC;
  6887                           
  6888                           ;main.c: 112: else{
  6889                           ;main.c: 113: i2c_dummy = SSP1BUF;
  6890                           
  6891                           
  6892                           ;main.c: 125: else{
  6893                           ;main.c: 126: SSP1IF = 0;
  6894  006F  0020               	movlb	0	; select bank0
  6895  0070  1191               	bcf	17,3	;volatile
  6896                           
  6897                           ;main.c: 128: if(i2c_address & 0x01){
  6898  0071  0021               	movlb	1	; select bank1
  6899  0072  1C51               	btfss	_i2c_address^(0+128),0
  6900  0073  288A               	goto	i1l2651
  6901                           
  6902                           ;main.c: 129: if(SSP1CON2bits.ACKSTAT == 1){
  6903  0074  0024               	movlb	4	; select bank4
  6904  0075  1B16               	btfsc	22,6	;volatile
  6905  0076  2898               	goto	i1l2655
  6906                           
  6907                           ;main.c: 132: else{
  6908                           ;main.c: 133: if(!SSP1STATbits.BF){
  6909                           
  6910                           ;main.c: 131: }
  6911                           
  6912                           ;main.c: 130: CKP = 1;
  6913  0077  1814               	btfsc	20,0	;volatile
  6914  0078  2881               	goto	i1l2647
  6915                           
  6916                           ;main.c: 134: SSP1BUF = i2c_data[i2c_data_index++];
  6917  0079  087D               	movf	_i2c_data_index,w
  6918  007A  3E20               	addlw	_i2c_data& (0+255)
  6919  007B  0086               	movwf	6
  6920  007C  3001               	movlw	1	; select bank2/3
  6921  007D  0087               	movwf	7
  6922  007E  0801               	movf	1,w
  6923  007F  0091               	movwf	17	;volatile
  6924  0080  2894               	goto	L6
  6925  0081                     i1l2647:	
  6926                           ;main.c: 135: }
  6927                           
  6928                           
  6929                           ;main.c: 136: else{
  6930                           ;main.c: 137: i2c_dummy = SSP1BUF;
  6931  0081  0811               	movf	17,w	;volatile
  6932  0082  00F7               	movwf	??_global_interrupt
  6933  0083  0877               	movf	??_global_interrupt,w
  6934  0084  0021               	movlb	1	; select bank1
  6935  0085  00D2               	movwf	_i2c_dummy^(0+128)
  6936                           
  6937                           ;main.c: 138: SSP1BUF = 0xCC;
  6938  0086  30CC               	movlw	204
  6939  0087  0024               	movlb	4	; select bank4
  6940  0088  0091               	movwf	17	;volatile
  6941  0089  2898               	goto	i1l2655
  6942  008A                     i1l2651:	
  6943                           ;main.c: 141: }
  6944                           ;main.c: 143: }
  6945                           
  6946                           ;main.c: 139: }
  6947                           ;main.c: 140: CKP = 1;
  6948                           
  6949                           
  6950                           ;main.c: 144: else{
  6951                           ;main.c: 145: i2c_data[i2c_data_index++] = SSP1BUF;
  6952  008A  0024               	movlb	4	; select bank4
  6953  008B  0811               	movf	17,w	;volatile
  6954  008C  00F7               	movwf	??_global_interrupt
  6955  008D  087D               	movf	_i2c_data_index,w
  6956  008E  3E20               	addlw	_i2c_data& (0+255)
  6957  008F  0086               	movwf	6
  6958  0090  3001               	movlw	1	; select bank2/3
  6959  0091  0087               	movwf	7
  6960  0092  0877               	movf	??_global_interrupt,w
  6961  0093  0081               	movwf	1
  6962  0094                     L6:	
  6963  0094  3001               	movlw	1
  6964  0095  00F7               	movwf	??_global_interrupt
  6965  0096  0877               	movf	??_global_interrupt,w
  6966  0097  07FD               	addwf	_i2c_data_index,f
  6967  0098                     i1l2655:	
  6968                           
  6969                           ;main.c: 146: CKP = 1;
  6970  0098  1615               	bsf	21,4	;volatile
  6971                           
  6972                           ;main.c: 147: }
  6973                           ;main.c: 150: }
  6974                           ;main.c: 152: i2c_dummy = SSP1BUF;
  6975  0099  0811               	movf	17,w	;volatile
  6976  009A  00F7               	movwf	??_global_interrupt
  6977  009B  0877               	movf	??_global_interrupt,w
  6978  009C  0021               	movlb	1	; select bank1
  6979  009D  00D2               	movwf	_i2c_dummy^(0+128)
  6980                           
  6981                           ;main.c: 153: WCOL = 0;
  6982  009E  0024               	movlb	4	; select bank4
  6983  009F  1395               	bcf	21,7	;volatile
  6984                           
  6985                           ;main.c: 154: SSPOV = 0;
  6986  00A0  1315               	bcf	21,6	;volatile
  6987                           
  6988                           ;main.c: 156: if(i2c_data_index >= 5)
  6989  00A1  3005               	movlw	5
  6990  00A2  027D               	subwf	_i2c_data_index,w
  6991  00A3  1C03               	skipc
  6992  00A4  28A8               	goto	i1l186
  6993                           
  6994                           ;main.c: 157: i2c_data_index = 0;
  6995  00A5  01FD               	clrf	_i2c_data_index
  6996                           
  6997                           ;main.c: 159: return;
  6998  00A6  28A8               	goto	i1l186
  6999  00A7                     i1l190:	
  7000                           
  7001                           ;main.c: 160: }
  7002                           ;main.c: 165: INTCON |= 0x80;
  7003  00A7  178B               	bsf	11,7	;volatile
  7004  00A8                     i1l186:	
  7005  00A8  0878               	movf	??_global_interrupt+1,w
  7006  00A9  0020               	movlb	0	; select bank0
  7007  00AA  00FF               	movwf	127
  7008  00AB  107E               	bcf	126,0	;clear compiler interrupt flag
  7009  00AC  0009               	retfie
  7010  00AD                     __end_of_global_interrupt:	
  7011                           
  7012                           	psect	text41
  7013  057B                     __ptext41:	
  7014 ;; *************** function _Sinus_Generator *****************
  7015 ;; Defined at:
  7016 ;;		line 84 in file "audio_tone.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;		None               void
  7023 ;; Registers used:
  7024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7032 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7034 ;;Total ram usage:        6 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    1
  7037 ;; This function calls:
  7038 ;;		_Send_Vcxo_Signal
  7039 ;;		_Timer0_Stop
  7040 ;; This function is called by:
  7041 ;;		_global_interrupt
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           
  7046                           ;psect for function _Sinus_Generator
  7047  057B                     _Sinus_Generator:	
  7048                           
  7049                           ;audio_tone.c: 86: uint8_t Audio_Signal;
  7050                           ;audio_tone.c: 87: static uint8_t tone_index = 0;
  7051                           ;audio_tone.c: 88: if (MODEM_TRANSMITTING == 1) {
  7052                           
  7053                           ;incstack = 0
  7054                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7055  057B  0021               	movlb	1	; select bank1
  7056  057C  084B               	movf	_MODEM_TRANSMITTING^(0+128),w
  7057  057D  3A01               	xorlw	1
  7058  057E  1D03               	skipz
  7059  057F  0008               	return
  7060                           
  7061                           ;audio_tone.c: 90: if (packet_pos == modem_packet_size) {
  7062  0580  087C               	movf	_modem_packet_size+3,w
  7063  0581  0022               	movlb	2	; select bank2
  7064  0582  0638               	xorwf	(_packet_pos+3)^(0+256),w
  7065  0583  1D03               	skipz
  7066  0584  2D8F               	goto	u186_25
  7067  0585  087B               	movf	_modem_packet_size+2,w
  7068  0586  0637               	xorwf	(_packet_pos+2)^(0+256),w
  7069  0587  1D03               	skipz
  7070  0588  2D8F               	goto	u186_25
  7071  0589  087A               	movf	_modem_packet_size+1,w
  7072  058A  0636               	xorwf	(_packet_pos+1)^(0+256),w
  7073  058B  1D03               	skipz
  7074  058C  2D8F               	goto	u186_25
  7075  058D  0879               	movf	_modem_packet_size,w
  7076  058E  0635               	xorwf	_packet_pos^(0+256),w
  7077  058F                     u186_25:	
  7078  058F  1D03               	skipz
  7079  0590  2D9D               	goto	i1l2185
  7080                           
  7081                           ;audio_tone.c: 91: MODEM_TRANSMITTING = 0;
  7082  0591  0021               	movlb	1	; select bank1
  7083  0592  01CB               	clrf	_MODEM_TRANSMITTING^(0+128)
  7084                           
  7085                           ;audio_tone.c: 92: Timer0_Stop();
  7086  0593  318B  2365  3185   	fcall	_Timer0_Stop
  7087                           
  7088                           ;audio_tone.c: 94: Send_Vcxo_Signal(0x10);
  7089  0596  3010               	movlw	16
  7090  0597  318B  2369         	fcall	_Send_Vcxo_Signal
  7091                           
  7092                           ;audio_tone.c: 96: PTT_OFF = 1;
  7093  0599  0021               	movlb	1	; select bank1
  7094  059A  01CC               	clrf	_PTT_OFF^(0+128)
  7095  059B  0ACC               	incf	_PTT_OFF^(0+128),f
  7096                           
  7097                           ;audio_tone.c: 98: goto end_generator;
  7098  059C  0008               	return
  7099  059D                     i1l2185:	
  7100                           
  7101                           ;audio_tone.c: 99: }
  7102                           ;audio_tone.c: 102: if (current_sample_in_baud == 0) {
  7103  059D  0021               	movlb	1	; select bank1
  7104  059E  08D0               	movf	_current_sample_in_baud^(0+128),f
  7105  059F  1D03               	skipz
  7106  05A0  2DE8               	goto	i1l2205
  7107                           
  7108                           ;audio_tone.c: 103: if ((packet_pos & 7) == 0)
  7109  05A1  3007               	movlw	7
  7110  05A2  0022               	movlb	2	; select bank2
  7111  05A3  0535               	andwf	_packet_pos^(0+256),w
  7112  05A4  00F1               	movwf	??_Sinus_Generator
  7113  05A5  3000               	movlw	0
  7114  05A6  0536               	andwf	(_packet_pos+1)^(0+256),w
  7115  05A7  00F2               	movwf	??_Sinus_Generator+1
  7116  05A8  3000               	movlw	0
  7117  05A9  0537               	andwf	(_packet_pos+2)^(0+256),w
  7118  05AA  00F3               	movwf	??_Sinus_Generator+2
  7119  05AB  3000               	movlw	0
  7120  05AC  0538               	andwf	(_packet_pos+3)^(0+256),w
  7121  05AD  00F4               	movwf	??_Sinus_Generator+3
  7122  05AE  0874               	movf	??_Sinus_Generator+3,w
  7123  05AF  0473               	iorwf	??_Sinus_Generator+2,w
  7124  05B0  0472               	iorwf	??_Sinus_Generator+1,w
  7125  05B1  0471               	iorwf	??_Sinus_Generator,w
  7126  05B2  1D03               	skipz
  7127  05B3  2DCD               	goto	i1l2191
  7128                           
  7129                           ;audio_tone.c: 104: current_byte = modem_packet[packet_pos >> 3];
  7130  05B4  0835               	movf	_packet_pos^(0+256),w
  7131  05B5  00F1               	movwf	??_Sinus_Generator
  7132  05B6  0836               	movf	(_packet_pos+1)^(0+256),w
  7133  05B7  00F2               	movwf	??_Sinus_Generator+1
  7134  05B8  0837               	movf	(_packet_pos+2)^(0+256),w
  7135  05B9  00F3               	movwf	??_Sinus_Generator+2
  7136  05BA  0838               	movf	(_packet_pos+3)^(0+256),w
  7137  05BB  00F4               	movwf	??_Sinus_Generator+3
  7138  05BC  3003               	movlw	3
  7139  05BD                     u189_25:	
  7140  05BD  36F4               	lsrf	??_Sinus_Generator+3,f
  7141  05BE  0CF3               	rrf	??_Sinus_Generator+2,f
  7142  05BF  0CF2               	rrf	??_Sinus_Generator+1,f
  7143  05C0  0CF1               	rrf	??_Sinus_Generator,f
  7144  05C1  0B89               	decfsz	9,f
  7145  05C2  2DBD               	goto	u189_25
  7146  05C3  0871               	movf	??_Sinus_Generator,w
  7147  05C4  3EA0               	addlw	_modem_packet& (0+255)
  7148  05C5  0086               	movwf	6
  7149  05C6  3001               	movlw	1	; select bank3/4
  7150  05C7  0087               	movwf	7
  7151  05C8  0801               	movf	1,w
  7152  05C9  00F5               	movwf	??_Sinus_Generator+4
  7153  05CA  0875               	movf	??_Sinus_Generator+4,w
  7154  05CB  0020               	movlb	0	; select bank0
  7155  05CC  2DD1               	goto	L7
  7156  05CD                     i1l2191:	
  7157                           
  7158                           ;audio_tone.c: 105: else
  7159                           ;audio_tone.c: 106: current_byte = current_byte >> 1 ;
  7160  05CD  0020               	movlb	0	; select bank0
  7161  05CE  366E               	lsrf	_current_byte,w
  7162  05CF  00F1               	movwf	??_Sinus_Generator
  7163  05D0  0871               	movf	??_Sinus_Generator,w
  7164  05D1                     L7:	
  7165  05D1  00EE               	movwf	_current_byte
  7166                           
  7167                           ;audio_tone.c: 107: if ((current_byte & 0x01) == 0) {
  7168  05D2  186E               	btfsc	_current_byte,0
  7169  05D3  2DE8               	goto	i1l2205
  7170                           
  7171                           ;audio_tone.c: 109: if(tone_index){
  7172  05D4  0021               	movlb	1	; select bank1
  7173  05D5  0849               	movf	Sinus_Generator@tone_index^(0+128),w
  7174  05D6  1903               	btfsc	3,2
  7175  05D7  2DE0               	goto	i1l2201
  7176                           
  7177                           ;audio_tone.c: 110: phase_delta = PHASE_DELTA_1200;
  7178  05D8  0022               	movlb	2	; select bank2
  7179  05D9  0829               	movf	_PHASE_DELTA_1200^(0+256),w
  7180  05DA  00F1               	movwf	??_Sinus_Generator
  7181  05DB  0871               	movf	??_Sinus_Generator,w
  7182  05DC  0021               	movlb	1	; select bank1
  7183  05DD  00D3               	movwf	_phase_delta^(0+128)
  7184                           
  7185                           ;audio_tone.c: 111: tone_index = 0;
  7186  05DE  01C9               	clrf	Sinus_Generator@tone_index^(0+128)
  7187                           
  7188                           ;audio_tone.c: 112: }
  7189  05DF  2DE8               	goto	i1l2205
  7190  05E0                     i1l2201:	
  7191                           
  7192                           ;audio_tone.c: 113: else{
  7193                           ;audio_tone.c: 114: phase_delta = PHASE_DELTA_2200;
  7194  05E0  0022               	movlb	2	; select bank2
  7195  05E1  082D               	movf	_PHASE_DELTA_2200^(0+256),w
  7196  05E2  00F1               	movwf	??_Sinus_Generator
  7197  05E3  0871               	movf	??_Sinus_Generator,w
  7198  05E4  0021               	movlb	1	; select bank1
  7199  05E5  00D3               	movwf	_phase_delta^(0+128)
  7200                           
  7201                           ;audio_tone.c: 115: tone_index = 1;
  7202  05E6  01C9               	clrf	Sinus_Generator@tone_index^(0+128)
  7203  05E7  0AC9               	incf	Sinus_Generator@tone_index^(0+128),f
  7204  05E8                     i1l2205:	
  7205                           
  7206                           ;audio_tone.c: 116: }
  7207                           ;audio_tone.c: 117: }
  7208                           ;audio_tone.c: 118: }
  7209                           ;audio_tone.c: 120: phase += phase_delta;
  7210  05E8  0021               	movlb	1	; select bank1
  7211  05E9  0853               	movf	_phase_delta^(0+128),w
  7212  05EA  00F1               	movwf	??_Sinus_Generator
  7213  05EB  0871               	movf	??_Sinus_Generator,w
  7214  05EC  0020               	movlb	0	; select bank0
  7215  05ED  07EF               	addwf	_phase,f
  7216                           
  7217                           ;audio_tone.c: 121: if(phase >= TABLE_SIZE)
  7218  05EE  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  7219  05EF  0084               	movwf	4
  7220  05F0  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  7221  05F1  0085               	movwf	5
  7222  05F2  3F00               	moviw [0]fsr0
  7223  05F3  00F1               	movwf	??_Sinus_Generator
  7224  05F4  3F01               	moviw [1]fsr0
  7225  05F5  00F2               	movwf	??_Sinus_Generator+1
  7226  05F6  0872               	movf	??_Sinus_Generator+1,w
  7227  05F7  3A80               	xorlw	128
  7228  05F8  3C80               	sublw	128
  7229  05F9  1D03               	skipz
  7230  05FA  2DFD               	goto	u192_25
  7231  05FB  0871               	movf	??_Sinus_Generator,w
  7232  05FC  026F               	subwf	_phase,w
  7233  05FD                     u192_25:	
  7234  05FD  1C03               	skipc
  7235  05FE  2E0B               	goto	i1l2211
  7236                           
  7237                           ;audio_tone.c: 122: phase = phase - TABLE_SIZE;
  7238  05FF  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  7239  0600  0084               	movwf	4
  7240  0601  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  7241  0602  0085               	movwf	5
  7242  0603  0800               	movf	0,w	;code access
  7243  0604  3AFF               	xorlw	255
  7244  0605  3E01               	addlw	1
  7245  0606  0020               	movlb	0	; select bank0
  7246  0607  076F               	addwf	_phase,w
  7247  0608  00F1               	movwf	??_Sinus_Generator
  7248  0609  0871               	movf	??_Sinus_Generator,w
  7249  060A  00EF               	movwf	_phase
  7250  060B                     i1l2211:	
  7251                           
  7252                           ;audio_tone.c: 125: Audio_Signal = *(sine_table2 + phase);
  7253  060B  0020               	movlb	0	; select bank0
  7254  060C  086F               	movf	_phase,w
  7255  060D  3E00               	addlw	low (_sine_table2| (0+32768))
  7256  060E  0084               	movwf	4
  7257  060F  3084               	movlw	high (_sine_table2| (0+32768))
  7258  0610  1803               	skipnc
  7259  0611  3E01               	addlw	1
  7260  0612  0085               	movwf	5
  7261  0613  0800               	movf	0,w	;code access
  7262  0614  00F1               	movwf	??_Sinus_Generator
  7263  0615  0871               	movf	??_Sinus_Generator,w
  7264  0616  00F6               	movwf	Sinus_Generator@Audio_Signal
  7265                           
  7266                           ;audio_tone.c: 126: Send_Vcxo_Signal(Audio_Signal);
  7267  0617  0876               	movf	Sinus_Generator@Audio_Signal,w
  7268  0618  318B  2369  3185   	fcall	_Send_Vcxo_Signal
  7269                           
  7270                           ;audio_tone.c: 128: current_sample_in_baud++;
  7271  061B  3001               	movlw	1
  7272  061C  00F1               	movwf	??_Sinus_Generator
  7273  061D  0871               	movf	??_Sinus_Generator,w
  7274  061E  0021               	movlb	1	; select bank1
  7275  061F  07D0               	addwf	_current_sample_in_baud^(0+128),f
  7276                           
  7277                           ;audio_tone.c: 130: if(Change_to_New_Baud == 1) {
  7278  0620  084A               	movf	_Change_to_New_Baud^(0+128),w
  7279  0621  3A01               	xorlw	1
  7280  0622  1D03               	skipz
  7281  0623  0008               	return
  7282                           
  7283                           ;audio_tone.c: 131: current_sample_in_baud = 0;
  7284  0624  01D0               	clrf	_current_sample_in_baud^(0+128)
  7285                           
  7286                           ;audio_tone.c: 132: packet_pos++;
  7287  0625  3001               	movlw	1
  7288  0626  0022               	movlb	2	; select bank2
  7289  0627  07B5               	addwf	_packet_pos^(0+256),f
  7290  0628  3000               	movlw	0
  7291  0629  3DB6               	addwfc	(_packet_pos+1)^(0+256),f
  7292  062A  3000               	movlw	0
  7293  062B  3DB7               	addwfc	(_packet_pos+2)^(0+256),f
  7294  062C  3000               	movlw	0
  7295  062D  3DB8               	addwfc	(_packet_pos+3)^(0+256),f
  7296                           
  7297                           ;audio_tone.c: 133: Change_to_New_Baud = 0;
  7298  062E  0021               	movlb	1	; select bank1
  7299  062F  01CA               	clrf	_Change_to_New_Baud^(0+128)
  7300                           
  7301                           ;audio_tone.c: 134: }
  7302                           ;audio_tone.c: 136: }
  7303                           ;audio_tone.c: 138: end_generator:
  7304  0630  0008               	return
  7305  0631                     __end_of_Sinus_Generator:	
  7306                           ;audio_tone.c: 140: return;
  7307                           
  7308                           
  7309                           	psect	text42
  7310  0B65                     __ptext42:	
  7311 ;; *************** function _Timer0_Stop *****************
  7312 ;; Defined at:
  7313 ;;		line 249 in file "utility.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;		None
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;		None               void
  7320 ;; Registers used:
  7321 ;;		status,2
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7331 ;;Total ram usage:        0 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; This function calls:
  7334 ;;		Nothing
  7335 ;; This function is called by:
  7336 ;;		_Sinus_Generator
  7337 ;; This function uses a non-reentrant model
  7338 ;;
  7339                           
  7340                           
  7341                           ;psect for function _Timer0_Stop
  7342  0B65                     _Timer0_Stop:	
  7343                           
  7344                           ;utility.c: 250: TMR0IE = 0;
  7345                           
  7346                           ;incstack = 0
  7347                           ; Regs used in _Timer0_Stop: [status,2]
  7348  0B65  128B               	bcf	11,5	;volatile
  7349                           
  7350                           ;utility.c: 251: TMR0 = 0x00;
  7351  0B66  0020               	movlb	0	; select bank0
  7352  0B67  0195               	clrf	21	;volatile
  7353  0B68  0008               	return
  7354  0B69                     __end_of_Timer0_Stop:	
  7355                           
  7356                           	psect	text43
  7357  0B69                     __ptext43:	
  7358 ;; *************** function _Send_Vcxo_Signal *****************
  7359 ;; Defined at:
  7360 ;;		line 108 in file "utility.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  value           1    wreg     unsigned char 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  value           1    0[COMMON] unsigned char 
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      unsigned char 
  7367 ;; Registers used:
  7368 ;;		wreg
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7377 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7378 ;;Total ram usage:        1 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_Sinus_Generator
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           
  7388                           ;psect for function _Send_Vcxo_Signal
  7389  0B69                     _Send_Vcxo_Signal:	
  7390                           
  7391                           ;incstack = 0
  7392                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  7393                           ;Send_Vcxo_Signal@value stored from wreg
  7394  0B69  00F0               	movwf	Send_Vcxo_Signal@value
  7395                           
  7396                           ;utility.c: 110: DACCON1 = value;
  7397  0B6A  0870               	movf	Send_Vcxo_Signal@value,w
  7398  0B6B  0022               	movlb	2	; select bank2
  7399  0B6C  0099               	movwf	25	;volatile
  7400  0B6D  0008               	return
  7401  0B6E                     __end_of_Send_Vcxo_Signal:	
  7402                           ;utility.c: 111: return 1;
  7403                           ;	Return value of _Send_Vcxo_Signal is never used
  7404                           
  7405  007E                     btemp	set	126	;btemp
  7406  007E                     pic14e$flags	set	126
  7407  007E                     wtemp	set	126
  7408  007E                     wtemp0	set	126
  7409  0080                     wtemp1	set	128
  7410  0082                     wtemp2	set	130
  7411  0084                     wtemp3	set	132
  7412  0086                     wtemp4	set	134
  7413  0088                     wtemp5	set	136
  7414  007F                     wtemp6	set	127
  7415  007E                     ttemp	set	126
  7416  007E                     ttemp0	set	126
  7417  0081                     ttemp1	set	129
  7418  0084                     ttemp2	set	132
  7419  0087                     ttemp3	set	135
  7420  007F                     ttemp4	set	127
  7421  007E                     ltemp	set	126
  7422  007E                     ltemp0	set	126
  7423  0082                     ltemp1	set	130
  7424  0086                     ltemp2	set	134
  7425  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     78      80
    BANK1            80     28      80
    BANK2            80      0      43
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Adf_Lock
    _main->_Modem_Flush_Frame
    _Ptt_Off->_Adf_Write_Register_Three
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_One->_Reverse_Array
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ptt_On->_Adf_Write_Register_Three
    _Adf_Write_Register_Two->_Reverse_Array
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc
    _Adf_Lock->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Adf_Lock
    _Ptt_Off->_Adf_Write_Register_Three
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Ptt_On->_Adf_Write_Register_Three
    _Adf_Lock->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   67166
                                             77 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                           _Adf_Lock
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   12557
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   25114
                    _Configure_Audio
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   25114
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Config                                     0     0      0   22264
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Write_Register_One                              19    19      0    5566
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1425
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1425
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Configure_Audio                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   13982
                                             76 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ptt_On                                               1     1      0   12557
                                             75 BANK0      1     1      0
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Register_Two                              32    32      0    5566
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adf_Lock                                             6     6      0   12648
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
           _Adf_Write_Register_Three
            _Adf_Write_Register_Zero
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Adf_Write_Register_Zero                             36    36      0    5566
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Register_Three                            64    64      0    5566
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Write_Adf7012_Reg                                    4     3      1    3353
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (4) _Spi_Byte_Send                                        4     4      0    1517
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1425
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (3) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Reverse_Array                                       12    11      1    1332
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _Adf_Locked                                           0     0      0       0
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (3) _Read_Adf7012_Muxout                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _global_interrupt                                     2     2      0      45
                                              7 COMMON     2     2      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (10) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (11) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Adf_Lock
     _Adf_Locked
       _Read_Adf7012_Muxout
     _Adf_Write_Register_Three
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Adf_Write_Register_Zero
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
     _Timer0_Start
   _Modem_Setup
     _Configure_Audio
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
   _Ptt_Off
     _Adf_Write_Register_Three
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Adf_Write_Register_Two
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _Sinus_Generator
     _Send_Vcxo_Signal
     _Timer0_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      2B       9       53.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     119      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     119      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Oct 02 13:31:53 2014

                   _i2c_data_index 007D                        __CFG_CP$OFF 0000  
          _Adf_Reset_Register_Zero 0C74                     Reverse_Array@i 0032  
                   Spi_Byte_Send@i 0029           __end_of_Adf_Reset_Config 0BC6  
                      __CFG_LVP$ON 0000           _Adf_Reset_Register_Three 0CB3  
                              l303 0D12                                l209 06EB  
                              l273 0C9C                                _CKP 10AC  
                     __CFG_CPD$OFF 0000                                _SEN 10B0  
                              _PSA 04AB                                _crc 00C7  
                     __CFG_BORV$LO 0000                                wreg 0009  
        Ax25_Send_Header@addresses 0033                       __CFG_IESO$ON 0000  
                    ??_Gpio_Config 0020             _Adf_Write_Register_One 0E9B  
           _Adf_Write_Register_Two 04C4                               l2017 0D7A  
                             l2027 0B9B                               l2141 0F56  
                             l2143 0F78                               l2057 06A1  
                             l2401 02A0                               l2067 06DF  
                             l2403 031A                               l2411 0C5A  
                             l2165 07C2                               l2167 07E4  
                             l2361 0269                               l1901 0DA0  
                             l2373 028A                               l1903 0DB4  
                             l2367 027C                               l1921 0E24  
                             l2457 0FBA                               l2393 02DF  
                             l2713 075C                               l2387 02BA  
                             l2379 029D                               l2707 0753  
                             l2397 0300                               l2717 0767  
                             l1865 0D13                               l1887 0CE3  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _AHEN 10B9  
                             _ADON 04E8                               STR_1 04BE  
                     __CFG_WDTE$ON 0000                               _DHEN 10B8  
                             _GCEN 10B7                               _BOEN 10BC  
                             u2005 02DD                               u2015 02EC  
                             u1225 032B                               u2025 02F1  
                             u1305 0EB2                               u1155 0CA2  
                             u1235 033A                               u2035 0304  
                             u1315 0ECC                               u1405 0104  
                             u1245 0349                               u2045 02AA  
                             u1325 04CD                               u1415 0113  
                             u1255 0358                               u1335 04DC  
                             u1505 019A                               u1425 0122  
                             u1265 0367                               u2065 0C4C  
                             u1345 04F6                               u1195 0CED  
                             u1515 01A9                               u1435 0131  
                             u1275 0376                               u1355 0505  
                             u1445 0140                               u1285 0391  
                             u1605 067A                               u1365 0514  
                             u1455 014F                               u1615 069F  
                             u1375 0523                               u1295 0EA4  
                             u3137 0CA8                               u1465 015E  
                             u1385 00E6                               u1625 06AF  
                             u1634 06B9                               u1554 0645  
                             u1714 0F3B                               u1475 016D  
                             u1395 00F5                               u1635 06B8  
                             u1555 0644                               u1715 0F3A  
                             u1804 07A7                               u1564 0652  
                             u1485 017C                               u1805 07A6  
                             u1645 06C7                               u1565 0651  
                             u1725 0F48                               u1734 0F5D  
                             u1495 018B                               u1815 07B4  
                             u1735 0F5C                               u1824 07C9  
                             u1825 07C8                               u1585 0664  
                             u1745 0F6B                               u1594 066D  
                             u2570 0725                               u1835 07D7  
                             u1595 066C                               _PCIE 10BE  
                             u1685 0F28                               u1694 0F30  
                             u1775 0794                               u1695 0F2F  
                             u1784 079C                               u1785 079B  
                             u1945 0267                               u1955 027A  
                             u1965 0288                               u1975 029B  
                             u1985 02B8                               u1995 02BE  
                             _PIR1 0011                               _SCIE 10BD  
                             _TMR0 0015                               _WCOL 10AF  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 06E5                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    Send_Byte@byte 0029                      __CFG_BOREN$ON 0000  
                             ltemp 007E                               start 00AD  
                             ttemp 007E                    _Sinus_Generator 057B  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
          _Adf_Write_Register_Zero 0322                        ?_Adc1_Start 0070  
                     Adf_Lock@bias 00DE                 main@beacon_address 00E0  
                    __CFG_PLLEN$ON 0000                    __end_of_Ptt_Off 0C0C  
                    ??_Radio_Setup 006B                              _ADCS0 04F4  
                            _ADCS1 04F5                              _ADCS2 04F6  
                            ?_main 0070                              _DACEN 08C7  
                            _ACKDT 10B5                              _DACOE 08C5  
                            _ANSA1 0C61                              i1l190 00A7  
                            i1l191 006F                              i1l185 001B  
                            _SBCDE 10BA                              i1l186 00A8  
                            i1l187 004B                              i1l189 0055  
                            _TMR1H 0017                              _TMR1L 0016  
                            _SSPM0 10A8                              _SSPM1 10A9  
                            _SSPM2 10AA                              _SSPM3 10AB  
                            _TRISA 008C                              _TRISC 008E  
                            _SSPEN 10AD                              _SSPOV 10AE  
       Write_Adf7012_Reg@reg_value 002C                              _phase 006F  
                 __end_of_Adf_Lock 1000                      ??_Modem_Setup 006B  
                __end_of_BAUD_RATE 04BC                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                 __size_of_Adf_Reset 0012  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 0B9D  
                            wtemp6 007F                __end_of_Gpio_Config 03FE  
                 __end_of_Delay_ms 0CB3                        ?_Adf_Locked 0070  
                  _Configure_Audio 0C0C             _current_sample_in_baud 00D0  
                Spi_Byte_Send@data 0027                         Send_Byte@i 002A  
                  __initialization 00AF          ??_Adf_Reset_Register_Zero 0020  
        __size_of_Ax25_Send_Header 00D9              __size_of_System_Start 0057  
                     __end_of_main 0775          __size_of_Ax25_Send_Footer 001B  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 0E44  
         _Adf_Write_Register_Three 00DD              __end_of_Spi_Byte_Send 0D2C  
                           ??_main 006D          __size_of_Send_Vcxo_Signal 0005  
              __end_of_Radio_Setup 0BB7       __size_of_Read_Adf7012_Muxout 0007  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _CCP1IF 008A  
                           _DACNSS 08C0                             _ADNREF 04F2  
                           _ADRESH 009C                             _ADRESL 009B  
                           _CCPR1H 0292                             _CCPR1L 0291  
          __end_of_Sinus_Generator 0631      Adf_Write_Register_One@reg_ptr 0043  
                           i1l2201 05E0                             i1l2211 060B  
                           i1l2205 05E8                             i1l2191 05CD  
                           i1l2185 059D                             i1l2651 008A  
                           i1l2655 0098                             i1l2647 0081  
                           _INTCON 000B                             u246_25 003E  
              __size_of_Adc1_Start 0006                             u192_25 05FD  
                           u186_25 058F                 Reverse_Array@F3148 0125  
                           u189_25 05BD                             _OSCCON 0099  
         __size_of_Dac0_Start_Hold 0005                             _TMR1GE 00CF  
                           _TMR0IE 005D                             _TMR0IF 005A  
                           _TMR0CS 04AD                             _TMR1IE 0488  
                           _TMR1IF 0088                             _TMR1ON 00C0  
                     _System_Start 0E44                             _SSP1IE 048B  
                           _SSP1IF 008B                             _WDTPS0 04B9  
                           _WDTPS1 04BA                             _WDTPS2 04BB  
                           _WDTPS3 04BC                             _WDTPS4 04BD  
                           _SSPMSK 0213                __end_of_Modem_Setup 0B8A  
                   __CFG_PWRTE$OFF 0000                      ??_Timer0_Stop 0070  
        ??_Adf_Write_Register_Zero 0033                             _Ptt_On 0DC4  
                        ??_Ptt_Off 006B                 __size_of_Send_Byte 00B4  
               Reverse_Array@input 0031                     __CFG_STVREN$ON 0000  
                 ??_Ax25_Send_Flag 0020                   ??_Ax25_Send_Byte 002C  
                           _memcpy 0CD9                   ??_Ax25_Send_Sync 0020  
                __end_of_Adf_Reset 0BF9                         _Update_Crc 0D59  
              __size_of_Adf_Locked 0003                        _Gpio_Config 03E9  
          __end_of_Configure_Audio 0C24                        _i2c_address 00D1  
          __end_of__initialization 00D9          __size_of_global_interrupt 00A9  
               Write_Adf7012_Reg@i 002D         ??_Adf_Reset_Register_Three 0020  
                   __pcstackCOMMON 0070           ??_Adf_Reset_Register_One 0020  
                     __pidataBANK2 0BC6           ??_Adf_Reset_Register_Two 0020  
                       _adf_config 00A0                __end_of_Timer0_Stop 0B69  
                    _PLAYBACK_RATE 04B6                          ?_Adf_Lock 0070  
                ?_Adf_Reset_Config 0070                        _Radio_Setup 0BA9  
          ?_Adf_Write_Register_One 0070            ?_Adf_Write_Register_Two 0070  
        Spi_Byte_Send@data_to_send 0028                 ??_Adf_Reset_Config 0026  
                        ?_Delay_ms 0020                  __end_of_Send_Byte 06E5  
                 _PHASE_DELTA_1200 0129                   _PHASE_DELTA_2200 012D  
                      _Modem_Setup 0B84                         __pbssBANK0 006E  
                       __pbssBANK1 00A0                         __pbssBANK2 0120  
                       __pbssBANK3 01A0                   ?_Sinus_Generator 0070  
               Ax25_Send_Flag@byte 0026                      ?_Timer0_Start 0070  
      Adf_Write_Register_Three@reg 00D8                      ?_Timer1_Start 0070  
                       __pmaintext 06E5                   _Ax25_Send_Header 0249  
                          ?_Ptt_On 0070                  ??_Dac0_Start_Hold 0020  
               __end_of_TABLE_SIZE 04BE                   _Ax25_Send_Footer 0C3C  
                       __pintentry 0004                       ??_Adc1_Start 0020  
                          _DACCON1 0119                 Ax25_Send_Byte@byte 002C  
                          _DACPSS0 08C2                            _DACPSS1 08C3  
                          ?_memcpy 0020                   _Ax25_Send_String 0C57  
                          _ADPREF0 04F0                            _ADPREF1 04F1  
                       ??_Adf_Lock 006B     __end_of_Adf_Write_Register_One 0F0C  
   __end_of_Adf_Write_Register_Two 057B                            _T1CKPS0 00C4  
                          _T1CKPS1 00C5                   _Send_Vcxo_Signal 0B69  
         __end_of_Adf_Write_Config 0BA9                        ?_Update_Crc 0070  
                       ??_Delay_ms 0022                            _OSCSTAT 009A  
                          _OSCTUNE 0098                            _TMR1CS0 00C6  
                          _TMR1CS1 00C7                            _SSP1ADD 0212  
                          _SSP1BUF 0211                            _PTT_OFF 00CC  
              Update_Crc@input_bit 0022                   ?_Configure_Audio 0070  
    Adf_Write_Register_Two@reg_ptr 004B     Adf_Write_Register_Zero@reg_ptr 004F  
               __end_of_Adc1_Start 0B7E                     ??_Timer0_Start 0020  
                   ??_Timer1_Start 0020                          _BAUD_RATE 04BA  
                     ??_Adf_Locked 0020         ??_Adf_Write_Register_Three 0033  
                      _Timer0_Stop 0B65                         _packet_pos 0135  
                          _Ptt_Off 0BF9                    __size_of_Ptt_On 003C  
              _Read_Adf7012_Muxout 0B96    __size_of_Adf_Reset_Register_One 0011  
  __size_of_Adf_Reset_Register_Two 0018                 Ax25_Send_Sync@byte 0026  
              Reverse_Array@length 0027                    Ax25_Send_Flag@i 0027  
                  __size_of_memcpy 0029                            __ptext1 07F1  
                          __ptext2 0E44                            __ptext3 0BF9  
                          __ptext4 0B84                            __ptext5 0BA9  
                          __ptext6 0B9D                            __ptext7 0E9B  
                          __ptext8 0BB7                            __ptext9 0C74  
            Delay_ms@time_to_delay 0020          Adf_Write_Register_One@reg 003F  
                  Ax25_Send_Sync@i 0027                 __end_of_Adf_Locked 0B65  
             ?_Read_Adf7012_Muxout 0070          Adf_Write_Register_Two@reg 004F  
                          clrloop0 0B91    Adf_Write_Register_Three@reg_ptr 00D4  
             end_of_initialization 00D9                            memcpy@d 0024  
                          memcpy@n 0021                            memcpy@s 0025  
                        Delay_ms@i 0024                            init_ram 0B8A  
                          initloop 0B8B                   _global_interrupt 0004  
              __size_of_Update_Crc 0032                       __pstringtext 0400  
                        _PORTAbits 000C                          _PORTCbits 000E  
                 __CFG_FOSC$INTOSC 0000                    _Systick_Counter 0131  
                        _Adf_Reset 0BE7              ??_Read_Adf7012_Muxout 0020  
                 _SAMPLES_PER_BAUD 00CD                       ?_Gpio_Config 0070  
           _Adf_Reset_Register_One 0BD6       Write_Adf7012_Reg@size_of_reg 002A  
           _Adf_Reset_Register_Two 0C24          Sinus_Generator@tone_index 00C9  
           __size_of_Reverse_Array 0044             __size_of_Spi_Byte_Send 002A  
         ?_Adf_Reset_Register_Zero 0070                        Adf_Lock@adj 00DC  
                   __end_of_Ptt_On 0E00                 _Change_to_New_Baud 00CA  
                   __end_of_memcpy 0D02                       ?_Radio_Setup 0070  
                __size_of_Adf_Lock 007B               __end_of_Timer0_Start 0B78  
             __end_of_Timer1_Start 0800                start_initialization 00AF  
                       ?_Adf_Reset 0070                          _i2c_dummy 00D2  
         __end_of_Ax25_Send_Header 0322           __end_of_Ax25_Send_Footer 0C57  
                __size_of_Delay_ms 0020                       ?_Modem_Setup 0070  
                  _Dac0_Start_Hold 0B6E           __end_of_Ax25_Send_String 0C74  
        __size_of_Adf_Reset_Config 000F           ?_Adf_Write_Register_Zero 0070  
                        _Send_Byte 0631           __end_of_Send_Vcxo_Signal 0B6E  
                         ??_Ptt_On 006B                        __pdataBANK2 013B  
                         ??_memcpy 0023                      _Reverse_Array 0E00  
                    _Spi_Byte_Send 0D02                  ?_Adf_Write_Config 0070  
                     ??_Update_Crc 0020                        __pbssCOMMON 0079  
                        ___latbits 0002  __size_of_Adf_Reset_Register_Three 0026  
                    _ones_in_a_row 0139                      __pcstackBANK0 0020  
                    __pcstackBANK1 00D4                 ??_Adf_Write_Config 006B  
        ?_Adf_Reset_Register_Three 0070                          _adc__high 00CE  
              __end_of__stringdata 04C4            __size_of_Ax25_Send_Flag 007C  
          __size_of_Ax25_Send_Byte 0006            __size_of_Ax25_Send_Sync 0079  
  __end_of_Adf_Reset_Register_Zero 0C93      Ax25_Send_Header@num_addresses 002C  
                       ?_Send_Byte 0070                  _Write_Adf7012_Reg 0D8B  
                     _current_byte 006E                  Ax25_Send_Header@i 0034  
                Ax25_Send_Header@j 0031                 ?_Write_Adf7012_Reg 002A  
                     ?_Timer0_Stop 0070           __size_of_Sinus_Generator 00B6  
        Ax25_Send_Footer@final_crc 002C             Ax25_Send_String@string 002D  
                         ?_Ptt_Off 0070                 __end_of_Update_Crc 0D8B  
              ??_Write_Adf7012_Reg 002B                     ?_Reverse_Array 0027  
                   ?_Spi_Byte_Send 0070           __end_of_global_interrupt 00AD  
          __end_of_Dac0_Start_Hold 0B73                        ??_Adf_Reset 0026  
  __end_of_Adf_Write_Register_Zero 03E9                  Ax25_Send_String@i 002F  
        __end_of_Write_Adf7012_Reg 0DC4               __size_of_Gpio_Config 0015  
                    ?_System_Start 0070                       _modem_packet 01A0  
                        clear_ram0 0B90           __size_of_Configure_Audio 0018  
                        main@F3173 013B              __size_of_Timer0_Start 0005  
                         _Adf_Lock 0F85              __size_of_Timer1_Start 000F  
        Reverse_Array@buffer_array 002D                        __stringdata 04BE  
__size_of_Adf_Write_Register_Three 016C            ?_Adf_Reset_Register_One 0070  
        ?_Adf_Write_Register_Three 0070            ?_Adf_Reset_Register_Two 0070  
             __size_of_Radio_Setup 000E                           _Delay_ms 0C93  
            Send_Vcxo_Signal@value 0070                     ??_System_Start 0020  
                         _i2c_data 0120                   _Adf_Reset_Config 0BB7  
                      ??_Send_Byte 0023               __size_of_Modem_Setup 0006  
                _Modem_Flush_Frame 0D2C                 ?_Modem_Flush_Frame 0070  
                     _Timer0_Start 0B73                       _Timer1_Start 07F1  
         ??_Adf_Write_Register_One 0033           ??_Adf_Write_Register_Two 0033  
                 __size_of_Ptt_Off 0013                    ??_Reverse_Array 0028  
                  ??_Spi_Byte_Send 0026              __end_of_PLAYBACK_RATE 04BA  
              ??_Modem_Flush_Frame 006C                  ??_Sinus_Generator 0071  
 __size_of_Adf_Reset_Register_Zero 001F                           _adc__low 00CF  
      __end_of_Read_Adf7012_Muxout 0B9D     __end_of_Adf_Reset_Register_One 0BE7  
   __end_of_Adf_Reset_Register_Two 0C3C                __end_of_sine_table2 04B6  
                 ?_Dac0_Start_Hold 0070                     _Ax25_Send_Flag 0775  
                   _Ax25_Send_Byte 0B7E                     _Ax25_Send_Sync 0F0C  
                         __ptext10 0C24                           __ptext11 0CB3  
                         __ptext20 0C57                           __ptext12 0BD6  
                         __ptext21 0B7E                           __ptext13 0BE7  
                         __ptext30 00DD                           __ptext22 0249  
                         __ptext14 0C0C                           __ptext31 0D8B  
                         __ptext23 0F0C                           __ptext15 0D2C  
                         __ptext32 0D02                           __ptext24 0C3C  
                         __ptext16 0B73                           __ptext41 057B  
                         __ptext33 0C93                           __ptext25 0631  
                         __ptext17 0DC4                           __ptext42 0B65  
                         __ptext34 0B6E                           __ptext26 0D59  
                         __ptext18 04C4                           __ptext43 0B69  
                         __ptext35 0E00                           __ptext27 0775  
                         __ptext19 03E9                           __ptext36 0CD9  
                         __ptext28 0F85                           __ptext37 0B62  
                         __ptext29 0322                           __ptext38 0B96  
                         __ptext39 0B78                  ?_Ax25_Send_Header 002C  
                     _SSP1CON2bits 0216                  ?_Ax25_Send_Footer 0070  
               ??_Ax25_Send_Header 002E          __end_of_Modem_Flush_Frame 0D59  
       __size_of_Write_Adf7012_Reg 0039                  ?_Ax25_Send_String 002D  
               ??_Ax25_Send_Footer 002C                      __size_of_main 0090  
                      _phase_delta 00D3                  ?_Send_Vcxo_Signal 0070  
               ??_Ax25_Send_String 002F                 ??_Send_Vcxo_Signal 0070  
 __end_of_Adf_Reset_Register_Three 0CD9               __size_of_Timer0_Stop 0004  
       Adf_Write_Register_Zero@reg 0053                       _SSP1STATbits 0214  
 __size_of_Adf_Write_Register_Zero 00C7                  ??_Configure_Audio 0020  
           __end_of_Ax25_Send_Flag 07F1             __end_of_Ax25_Send_Byte 0B84  
           __end_of_Ax25_Send_Sync 0F85                         _TABLE_SIZE 04BC  
                         memcpy@d1 0026                           memcpy@s1 0020  
                      pic14e$flags 007E                           intlevel1 0000  
        __size_of_Adf_Write_Config 000C                  __CFG_CLKOUTEN$OFF 0000  
               _MODEM_TRANSMITTING 00CB    __size_of_Adf_Write_Register_One 0071  
  __size_of_Adf_Write_Register_Two 00B7                         _Adc1_Start 0B78  
                      _sine_table2 0400               __end_of_System_Start 0E9B  
                  ?_Ax25_Send_Flag 0070                    ?_Ax25_Send_Byte 0070  
                  ?_Ax25_Send_Sync 0070                  ?_global_interrupt 0070  
      Sinus_Generator@Audio_Signal 0076                 ??_global_interrupt 0077  
       __size_of_Modem_Flush_Frame 002D                         _Adf_Locked 0B62  
                _modem_packet_size 0079   __end_of_Adf_Write_Register_Three 0249  
