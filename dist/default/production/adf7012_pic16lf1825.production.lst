

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Oct 02 14:00:56 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	dabs	1,0x7E,2
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000E                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  008C                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  010C                     	;# 
   112  010E                     	;# 
   113  0111                     	;# 
   114  0112                     	;# 
   115  0113                     	;# 
   116  0114                     	;# 
   117  0115                     	;# 
   118  0116                     	;# 
   119  0117                     	;# 
   120  0118                     	;# 
   121  0119                     	;# 
   122  011A                     	;# 
   123  011B                     	;# 
   124  011D                     	;# 
   125  011E                     	;# 
   126  018C                     	;# 
   127  018E                     	;# 
   128  0191                     	;# 
   129  0191                     	;# 
   130  0192                     	;# 
   131  0193                     	;# 
   132  0193                     	;# 
   133  0193                     	;# 
   134  0194                     	;# 
   135  0195                     	;# 
   136  0196                     	;# 
   137  0199                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019C                     	;# 
   142  019D                     	;# 
   143  019E                     	;# 
   144  019F                     	;# 
   145  020C                     	;# 
   146  020E                     	;# 
   147  0211                     	;# 
   148  0211                     	;# 
   149  0212                     	;# 
   150  0212                     	;# 
   151  0213                     	;# 
   152  0213                     	;# 
   153  0214                     	;# 
   154  0214                     	;# 
   155  0215                     	;# 
   156  0215                     	;# 
   157  0215                     	;# 
   158  0216                     	;# 
   159  0216                     	;# 
   160  0217                     	;# 
   161  0217                     	;# 
   162  0291                     	;# 
   163  0291                     	;# 
   164  0292                     	;# 
   165  0293                     	;# 
   166  0294                     	;# 
   167  0295                     	;# 
   168  0295                     	;# 
   169  0296                     	;# 
   170  0298                     	;# 
   171  0298                     	;# 
   172  0299                     	;# 
   173  029A                     	;# 
   174  029B                     	;# 
   175  029C                     	;# 
   176  029D                     	;# 
   177  029E                     	;# 
   178  0311                     	;# 
   179  0311                     	;# 
   180  0312                     	;# 
   181  0313                     	;# 
   182  0318                     	;# 
   183  0318                     	;# 
   184  0319                     	;# 
   185  031A                     	;# 
   186  038C                     	;# 
   187  038E                     	;# 
   188  0391                     	;# 
   189  0392                     	;# 
   190  0393                     	;# 
   191  039A                     	;# 
   192  039C                     	;# 
   193  039D                     	;# 
   194  039E                     	;# 
   195  039F                     	;# 
   196  0415                     	;# 
   197  0416                     	;# 
   198  0417                     	;# 
   199  041C                     	;# 
   200  041D                     	;# 
   201  041E                     	;# 
   202  0FE4                     	;# 
   203  0FE5                     	;# 
   204  0FE6                     	;# 
   205  0FE7                     	;# 
   206  0FE8                     	;# 
   207  0FE9                     	;# 
   208  0FEA                     	;# 
   209  0FEB                     	;# 
   210  0FED                     	;# 
   211  0FEE                     	;# 
   212  0FEF                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000E                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  008C                     	;# 
   242  008E                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0095                     	;# 
   247  0096                     	;# 
   248  0097                     	;# 
   249  0098                     	;# 
   250  0099                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  010C                     	;# 
   258  010E                     	;# 
   259  0111                     	;# 
   260  0112                     	;# 
   261  0113                     	;# 
   262  0114                     	;# 
   263  0115                     	;# 
   264  0116                     	;# 
   265  0117                     	;# 
   266  0118                     	;# 
   267  0119                     	;# 
   268  011A                     	;# 
   269  011B                     	;# 
   270  011D                     	;# 
   271  011E                     	;# 
   272  018C                     	;# 
   273  018E                     	;# 
   274  0191                     	;# 
   275  0191                     	;# 
   276  0192                     	;# 
   277  0193                     	;# 
   278  0193                     	;# 
   279  0193                     	;# 
   280  0194                     	;# 
   281  0195                     	;# 
   282  0196                     	;# 
   283  0199                     	;# 
   284  019A                     	;# 
   285  019B                     	;# 
   286  019B                     	;# 
   287  019C                     	;# 
   288  019D                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  020C                     	;# 
   292  020E                     	;# 
   293  0211                     	;# 
   294  0211                     	;# 
   295  0212                     	;# 
   296  0212                     	;# 
   297  0213                     	;# 
   298  0213                     	;# 
   299  0214                     	;# 
   300  0214                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  0291                     	;# 
   309  0291                     	;# 
   310  0292                     	;# 
   311  0293                     	;# 
   312  0294                     	;# 
   313  0295                     	;# 
   314  0295                     	;# 
   315  0296                     	;# 
   316  0298                     	;# 
   317  0298                     	;# 
   318  0299                     	;# 
   319  029A                     	;# 
   320  029B                     	;# 
   321  029C                     	;# 
   322  029D                     	;# 
   323  029E                     	;# 
   324  0311                     	;# 
   325  0311                     	;# 
   326  0312                     	;# 
   327  0313                     	;# 
   328  0318                     	;# 
   329  0318                     	;# 
   330  0319                     	;# 
   331  031A                     	;# 
   332  038C                     	;# 
   333  038E                     	;# 
   334  0391                     	;# 
   335  0392                     	;# 
   336  0393                     	;# 
   337  039A                     	;# 
   338  039C                     	;# 
   339  039D                     	;# 
   340  039E                     	;# 
   341  039F                     	;# 
   342  0415                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  0FE4                     	;# 
   349  0FE5                     	;# 
   350  0FE6                     	;# 
   351  0FE7                     	;# 
   352  0FE8                     	;# 
   353  0FE9                     	;# 
   354  0FEA                     	;# 
   355  0FEB                     	;# 
   356  0FED                     	;# 
   357  0FEE                     	;# 
   358  0FEF                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000E                     	;# 
   373  0011                     	;# 
   374  0012                     	;# 
   375  0013                     	;# 
   376  0015                     	;# 
   377  0016                     	;# 
   378  0016                     	;# 
   379  0017                     	;# 
   380  0018                     	;# 
   381  0019                     	;# 
   382  001A                     	;# 
   383  001B                     	;# 
   384  001C                     	;# 
   385  001E                     	;# 
   386  001F                     	;# 
   387  008C                     	;# 
   388  008E                     	;# 
   389  0091                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0095                     	;# 
   393  0096                     	;# 
   394  0097                     	;# 
   395  0098                     	;# 
   396  0099                     	;# 
   397  009A                     	;# 
   398  009B                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  010C                     	;# 
   404  010E                     	;# 
   405  0111                     	;# 
   406  0112                     	;# 
   407  0113                     	;# 
   408  0114                     	;# 
   409  0115                     	;# 
   410  0116                     	;# 
   411  0117                     	;# 
   412  0118                     	;# 
   413  0119                     	;# 
   414  011A                     	;# 
   415  011B                     	;# 
   416  011D                     	;# 
   417  011E                     	;# 
   418  018C                     	;# 
   419  018E                     	;# 
   420  0191                     	;# 
   421  0191                     	;# 
   422  0192                     	;# 
   423  0193                     	;# 
   424  0193                     	;# 
   425  0193                     	;# 
   426  0194                     	;# 
   427  0195                     	;# 
   428  0196                     	;# 
   429  0199                     	;# 
   430  019A                     	;# 
   431  019B                     	;# 
   432  019B                     	;# 
   433  019C                     	;# 
   434  019D                     	;# 
   435  019E                     	;# 
   436  019F                     	;# 
   437  020C                     	;# 
   438  020E                     	;# 
   439  0211                     	;# 
   440  0211                     	;# 
   441  0212                     	;# 
   442  0212                     	;# 
   443  0213                     	;# 
   444  0213                     	;# 
   445  0214                     	;# 
   446  0214                     	;# 
   447  0215                     	;# 
   448  0215                     	;# 
   449  0215                     	;# 
   450  0216                     	;# 
   451  0216                     	;# 
   452  0217                     	;# 
   453  0217                     	;# 
   454  0291                     	;# 
   455  0291                     	;# 
   456  0292                     	;# 
   457  0293                     	;# 
   458  0294                     	;# 
   459  0295                     	;# 
   460  0295                     	;# 
   461  0296                     	;# 
   462  0298                     	;# 
   463  0298                     	;# 
   464  0299                     	;# 
   465  029A                     	;# 
   466  029B                     	;# 
   467  029C                     	;# 
   468  029D                     	;# 
   469  029E                     	;# 
   470  0311                     	;# 
   471  0311                     	;# 
   472  0312                     	;# 
   473  0313                     	;# 
   474  0318                     	;# 
   475  0318                     	;# 
   476  0319                     	;# 
   477  031A                     	;# 
   478  038C                     	;# 
   479  038E                     	;# 
   480  0391                     	;# 
   481  0392                     	;# 
   482  0393                     	;# 
   483  039A                     	;# 
   484  039C                     	;# 
   485  039D                     	;# 
   486  039E                     	;# 
   487  039F                     	;# 
   488  0415                     	;# 
   489  0416                     	;# 
   490  0417                     	;# 
   491  041C                     	;# 
   492  041D                     	;# 
   493  041E                     	;# 
   494  0FE4                     	;# 
   495  0FE5                     	;# 
   496  0FE6                     	;# 
   497  0FE7                     	;# 
   498  0FE8                     	;# 
   499  0FE9                     	;# 
   500  0FEA                     	;# 
   501  0FEB                     	;# 
   502  0FED                     	;# 
   503  0FEE                     	;# 
   504  0FEF                     	;# 
   505  0000                     	;# 
   506  0001                     	;# 
   507  0002                     	;# 
   508  0003                     	;# 
   509  0004                     	;# 
   510  0005                     	;# 
   511  0006                     	;# 
   512  0007                     	;# 
   513  0008                     	;# 
   514  0009                     	;# 
   515  000A                     	;# 
   516  000B                     	;# 
   517  000C                     	;# 
   518  000E                     	;# 
   519  0011                     	;# 
   520  0012                     	;# 
   521  0013                     	;# 
   522  0015                     	;# 
   523  0016                     	;# 
   524  0016                     	;# 
   525  0017                     	;# 
   526  0018                     	;# 
   527  0019                     	;# 
   528  001A                     	;# 
   529  001B                     	;# 
   530  001C                     	;# 
   531  001E                     	;# 
   532  001F                     	;# 
   533  008C                     	;# 
   534  008E                     	;# 
   535  0091                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0095                     	;# 
   539  0096                     	;# 
   540  0097                     	;# 
   541  0098                     	;# 
   542  0099                     	;# 
   543  009A                     	;# 
   544  009B                     	;# 
   545  009B                     	;# 
   546  009C                     	;# 
   547  009D                     	;# 
   548  009E                     	;# 
   549  010C                     	;# 
   550  010E                     	;# 
   551  0111                     	;# 
   552  0112                     	;# 
   553  0113                     	;# 
   554  0114                     	;# 
   555  0115                     	;# 
   556  0116                     	;# 
   557  0117                     	;# 
   558  0118                     	;# 
   559  0119                     	;# 
   560  011A                     	;# 
   561  011B                     	;# 
   562  011D                     	;# 
   563  011E                     	;# 
   564  018C                     	;# 
   565  018E                     	;# 
   566  0191                     	;# 
   567  0191                     	;# 
   568  0192                     	;# 
   569  0193                     	;# 
   570  0193                     	;# 
   571  0193                     	;# 
   572  0194                     	;# 
   573  0195                     	;# 
   574  0196                     	;# 
   575  0199                     	;# 
   576  019A                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019C                     	;# 
   580  019D                     	;# 
   581  019E                     	;# 
   582  019F                     	;# 
   583  020C                     	;# 
   584  020E                     	;# 
   585  0211                     	;# 
   586  0211                     	;# 
   587  0212                     	;# 
   588  0212                     	;# 
   589  0213                     	;# 
   590  0213                     	;# 
   591  0214                     	;# 
   592  0214                     	;# 
   593  0215                     	;# 
   594  0215                     	;# 
   595  0215                     	;# 
   596  0216                     	;# 
   597  0216                     	;# 
   598  0217                     	;# 
   599  0217                     	;# 
   600  0291                     	;# 
   601  0291                     	;# 
   602  0292                     	;# 
   603  0293                     	;# 
   604  0294                     	;# 
   605  0295                     	;# 
   606  0295                     	;# 
   607  0296                     	;# 
   608  0298                     	;# 
   609  0298                     	;# 
   610  0299                     	;# 
   611  029A                     	;# 
   612  029B                     	;# 
   613  029C                     	;# 
   614  029D                     	;# 
   615  029E                     	;# 
   616  0311                     	;# 
   617  0311                     	;# 
   618  0312                     	;# 
   619  0313                     	;# 
   620  0318                     	;# 
   621  0318                     	;# 
   622  0319                     	;# 
   623  031A                     	;# 
   624  038C                     	;# 
   625  038E                     	;# 
   626  0391                     	;# 
   627  0392                     	;# 
   628  0393                     	;# 
   629  039A                     	;# 
   630  039C                     	;# 
   631  039D                     	;# 
   632  039E                     	;# 
   633  039F                     	;# 
   634  0415                     	;# 
   635  0416                     	;# 
   636  0417                     	;# 
   637  041C                     	;# 
   638  041D                     	;# 
   639  041E                     	;# 
   640  0FE4                     	;# 
   641  0FE5                     	;# 
   642  0FE6                     	;# 
   643  0FE7                     	;# 
   644  0FE8                     	;# 
   645  0FE9                     	;# 
   646  0FEA                     	;# 
   647  0FEB                     	;# 
   648  0FED                     	;# 
   649  0FEE                     	;# 
   650  0FEF                     	;# 
   651  0000                     	;# 
   652  0001                     	;# 
   653  0002                     	;# 
   654  0003                     	;# 
   655  0004                     	;# 
   656  0005                     	;# 
   657  0006                     	;# 
   658  0007                     	;# 
   659  0008                     	;# 
   660  0009                     	;# 
   661  000A                     	;# 
   662  000B                     	;# 
   663  000C                     	;# 
   664  000E                     	;# 
   665  0011                     	;# 
   666  0012                     	;# 
   667  0013                     	;# 
   668  0015                     	;# 
   669  0016                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001B                     	;# 
   676  001C                     	;# 
   677  001E                     	;# 
   678  001F                     	;# 
   679  008C                     	;# 
   680  008E                     	;# 
   681  0091                     	;# 
   682  0092                     	;# 
   683  0093                     	;# 
   684  0095                     	;# 
   685  0096                     	;# 
   686  0097                     	;# 
   687  0098                     	;# 
   688  0099                     	;# 
   689  009A                     	;# 
   690  009B                     	;# 
   691  009B                     	;# 
   692  009C                     	;# 
   693  009D                     	;# 
   694  009E                     	;# 
   695  010C                     	;# 
   696  010E                     	;# 
   697  0111                     	;# 
   698  0112                     	;# 
   699  0113                     	;# 
   700  0114                     	;# 
   701  0115                     	;# 
   702  0116                     	;# 
   703  0117                     	;# 
   704  0118                     	;# 
   705  0119                     	;# 
   706  011A                     	;# 
   707  011B                     	;# 
   708  011D                     	;# 
   709  011E                     	;# 
   710  018C                     	;# 
   711  018E                     	;# 
   712  0191                     	;# 
   713  0191                     	;# 
   714  0192                     	;# 
   715  0193                     	;# 
   716  0193                     	;# 
   717  0193                     	;# 
   718  0194                     	;# 
   719  0195                     	;# 
   720  0196                     	;# 
   721  0199                     	;# 
   722  019A                     	;# 
   723  019B                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  019D                     	;# 
   727  019E                     	;# 
   728  019F                     	;# 
   729  020C                     	;# 
   730  020E                     	;# 
   731  0211                     	;# 
   732  0211                     	;# 
   733  0212                     	;# 
   734  0212                     	;# 
   735  0213                     	;# 
   736  0213                     	;# 
   737  0214                     	;# 
   738  0214                     	;# 
   739  0215                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0216                     	;# 
   743  0216                     	;# 
   744  0217                     	;# 
   745  0217                     	;# 
   746  0291                     	;# 
   747  0291                     	;# 
   748  0292                     	;# 
   749  0293                     	;# 
   750  0294                     	;# 
   751  0295                     	;# 
   752  0295                     	;# 
   753  0296                     	;# 
   754  0298                     	;# 
   755  0298                     	;# 
   756  0299                     	;# 
   757  029A                     	;# 
   758  029B                     	;# 
   759  029C                     	;# 
   760  029D                     	;# 
   761  029E                     	;# 
   762  0311                     	;# 
   763  0311                     	;# 
   764  0312                     	;# 
   765  0313                     	;# 
   766  0318                     	;# 
   767  0318                     	;# 
   768  0319                     	;# 
   769  031A                     	;# 
   770  038C                     	;# 
   771  038E                     	;# 
   772  0391                     	;# 
   773  0392                     	;# 
   774  0393                     	;# 
   775  039A                     	;# 
   776  039C                     	;# 
   777  039D                     	;# 
   778  039E                     	;# 
   779  039F                     	;# 
   780  0415                     	;# 
   781  0416                     	;# 
   782  0417                     	;# 
   783  041C                     	;# 
   784  041D                     	;# 
   785  041E                     	;# 
   786  0FE4                     	;# 
   787  0FE5                     	;# 
   788  0FE6                     	;# 
   789  0FE7                     	;# 
   790  0FE8                     	;# 
   791  0FE9                     	;# 
   792  0FEA                     	;# 
   793  0FEB                     	;# 
   794  0FED                     	;# 
   795  0FEE                     	;# 
   796  0FEF                     	;# 
   797  0000                     	;# 
   798  0001                     	;# 
   799  0002                     	;# 
   800  0003                     	;# 
   801  0004                     	;# 
   802  0005                     	;# 
   803  0006                     	;# 
   804  0007                     	;# 
   805  0008                     	;# 
   806  0009                     	;# 
   807  000A                     	;# 
   808  000B                     	;# 
   809  000C                     	;# 
   810  000E                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0015                     	;# 
   815  0016                     	;# 
   816  0016                     	;# 
   817  0017                     	;# 
   818  0018                     	;# 
   819  0019                     	;# 
   820  001A                     	;# 
   821  001B                     	;# 
   822  001C                     	;# 
   823  001E                     	;# 
   824  001F                     	;# 
   825  008C                     	;# 
   826  008E                     	;# 
   827  0091                     	;# 
   828  0092                     	;# 
   829  0093                     	;# 
   830  0095                     	;# 
   831  0096                     	;# 
   832  0097                     	;# 
   833  0098                     	;# 
   834  0099                     	;# 
   835  009A                     	;# 
   836  009B                     	;# 
   837  009B                     	;# 
   838  009C                     	;# 
   839  009D                     	;# 
   840  009E                     	;# 
   841  010C                     	;# 
   842  010E                     	;# 
   843  0111                     	;# 
   844  0112                     	;# 
   845  0113                     	;# 
   846  0114                     	;# 
   847  0115                     	;# 
   848  0116                     	;# 
   849  0117                     	;# 
   850  0118                     	;# 
   851  0119                     	;# 
   852  011A                     	;# 
   853  011B                     	;# 
   854  011D                     	;# 
   855  011E                     	;# 
   856  018C                     	;# 
   857  018E                     	;# 
   858  0191                     	;# 
   859  0191                     	;# 
   860  0192                     	;# 
   861  0193                     	;# 
   862  0193                     	;# 
   863  0193                     	;# 
   864  0194                     	;# 
   865  0195                     	;# 
   866  0196                     	;# 
   867  0199                     	;# 
   868  019A                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019C                     	;# 
   872  019D                     	;# 
   873  019E                     	;# 
   874  019F                     	;# 
   875  020C                     	;# 
   876  020E                     	;# 
   877  0211                     	;# 
   878  0211                     	;# 
   879  0212                     	;# 
   880  0212                     	;# 
   881  0213                     	;# 
   882  0213                     	;# 
   883  0214                     	;# 
   884  0214                     	;# 
   885  0215                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0216                     	;# 
   889  0216                     	;# 
   890  0217                     	;# 
   891  0217                     	;# 
   892  0291                     	;# 
   893  0291                     	;# 
   894  0292                     	;# 
   895  0293                     	;# 
   896  0294                     	;# 
   897  0295                     	;# 
   898  0295                     	;# 
   899  0296                     	;# 
   900  0298                     	;# 
   901  0298                     	;# 
   902  0299                     	;# 
   903  029A                     	;# 
   904  029B                     	;# 
   905  029C                     	;# 
   906  029D                     	;# 
   907  029E                     	;# 
   908  0311                     	;# 
   909  0311                     	;# 
   910  0312                     	;# 
   911  0313                     	;# 
   912  0318                     	;# 
   913  0318                     	;# 
   914  0319                     	;# 
   915  031A                     	;# 
   916  038C                     	;# 
   917  038E                     	;# 
   918  0391                     	;# 
   919  0392                     	;# 
   920  0393                     	;# 
   921  039A                     	;# 
   922  039C                     	;# 
   923  039D                     	;# 
   924  039E                     	;# 
   925  039F                     	;# 
   926  0415                     	;# 
   927  0416                     	;# 
   928  0417                     	;# 
   929  041C                     	;# 
   930  041D                     	;# 
   931  041E                     	;# 
   932  0FE4                     	;# 
   933  0FE5                     	;# 
   934  0FE6                     	;# 
   935  0FE7                     	;# 
   936  0FE8                     	;# 
   937  0FE9                     	;# 
   938  0FEA                     	;# 
   939  0FEB                     	;# 
   940  0FED                     	;# 
   941  0FEE                     	;# 
   942  0FEF                     	;# 
   943                           
   944                           	psect	idataBANK2
   945  0BDA                     __pidataBANK2:	
   946                           
   947                           ;initializer for main@F3171
   948  0BDA  3443               	retlw	67
   949  0BDB  3455               	retlw	85
   950  0BDC  3442               	retlw	66
   951  0BDD  3445               	retlw	69
   952  0BDE  3459               	retlw	89
   953  0BDF  3459               	retlw	89
   954  0BE0  3400               	retlw	0
   955  0BE1  3405               	retlw	5
   956  0BE2  3443               	retlw	67
   957  0BE3  3455               	retlw	85
   958  0BE4  3442               	retlw	66
   959  0BE5  3445               	retlw	69
   960  0BE6  3458               	retlw	88
   961  0BE7  3458               	retlw	88
   962  0BE8  3400               	retlw	0
   963  0BE9  3406               	retlw	6
   964                           
   965                           	psect	stringtext
   966  0400                     __pstringtext:	
   967  0400                     _sine_table2:	
   968  0400  3410               	retlw	16
   969  0401  3410               	retlw	16
   970  0402  3411               	retlw	17
   971  0403  3411               	retlw	17
   972  0404  3412               	retlw	18
   973  0405  3412               	retlw	18
   974  0406  3413               	retlw	19
   975  0407  3413               	retlw	19
   976  0408  3414               	retlw	20
   977  0409  3414               	retlw	20
   978  040A  3415               	retlw	21
   979  040B  3415               	retlw	21
   980  040C  3416               	retlw	22
   981  040D  3416               	retlw	22
   982  040E  3417               	retlw	23
   983  040F  3417               	retlw	23
   984  0410  3418               	retlw	24
   985  0411  3418               	retlw	24
   986  0412  3419               	retlw	25
   987  0413  3419               	retlw	25
   988  0414  3419               	retlw	25
   989  0415  341A               	retlw	26
   990  0416  341A               	retlw	26
   991  0417  341B               	retlw	27
   992  0418  341B               	retlw	27
   993  0419  341B               	retlw	27
   994  041A  341C               	retlw	28
   995  041B  341C               	retlw	28
   996  041C  341C               	retlw	28
   997  041D  341D               	retlw	29
   998  041E  341D               	retlw	29
   999  041F  341D               	retlw	29
  1000  0420  341D               	retlw	29
  1001  0421  341E               	retlw	30
  1002  0422  341E               	retlw	30
  1003  0423  341E               	retlw	30
  1004  0424  341E               	retlw	30
  1005  0425  341E               	retlw	30
  1006  0426  341E               	retlw	30
  1007  0427  341F               	retlw	31
  1008  0428  341F               	retlw	31
  1009  0429  341F               	retlw	31
  1010  042A  341F               	retlw	31
  1011  042B  341F               	retlw	31
  1012  042C  341F               	retlw	31
  1013  042D  341F               	retlw	31
  1014  042E  341F               	retlw	31
  1015  042F  341F               	retlw	31
  1016  0430  341F               	retlw	31
  1017  0431  341F               	retlw	31
  1018  0432  341F               	retlw	31
  1019  0433  341F               	retlw	31
  1020  0434  341F               	retlw	31
  1021  0435  341E               	retlw	30
  1022  0436  341E               	retlw	30
  1023  0437  341E               	retlw	30
  1024  0438  341E               	retlw	30
  1025  0439  341E               	retlw	30
  1026  043A  341E               	retlw	30
  1027  043B  341D               	retlw	29
  1028  043C  341D               	retlw	29
  1029  043D  341D               	retlw	29
  1030  043E  341D               	retlw	29
  1031  043F  341C               	retlw	28
  1032  0440  341C               	retlw	28
  1033  0441  341C               	retlw	28
  1034  0442  341B               	retlw	27
  1035  0443  341B               	retlw	27
  1036  0444  341B               	retlw	27
  1037  0445  341A               	retlw	26
  1038  0446  341A               	retlw	26
  1039  0447  3419               	retlw	25
  1040  0448  3419               	retlw	25
  1041  0449  3419               	retlw	25
  1042  044A  3418               	retlw	24
  1043  044B  3418               	retlw	24
  1044  044C  3417               	retlw	23
  1045  044D  3417               	retlw	23
  1046  044E  3416               	retlw	22
  1047  044F  3416               	retlw	22
  1048  0450  3415               	retlw	21
  1049  0451  3415               	retlw	21
  1050  0452  3414               	retlw	20
  1051  0453  3414               	retlw	20
  1052  0454  3413               	retlw	19
  1053  0455  3413               	retlw	19
  1054  0456  3412               	retlw	18
  1055  0457  3412               	retlw	18
  1056  0458  3411               	retlw	17
  1057  0459  3411               	retlw	17
  1058  045A  3410               	retlw	16
  1059  045B  3410               	retlw	16
  1060  045C  340F               	retlw	15
  1061  045D  340E               	retlw	14
  1062  045E  340E               	retlw	14
  1063  045F  340D               	retlw	13
  1064  0460  340D               	retlw	13
  1065  0461  340C               	retlw	12
  1066  0462  340C               	retlw	12
  1067  0463  340B               	retlw	11
  1068  0464  340B               	retlw	11
  1069  0465  340A               	retlw	10
  1070  0466  340A               	retlw	10
  1071  0467  3409               	retlw	9
  1072  0468  3409               	retlw	9
  1073  0469  3408               	retlw	8
  1074  046A  3408               	retlw	8
  1075  046B  3407               	retlw	7
  1076  046C  3407               	retlw	7
  1077  046D  3406               	retlw	6
  1078  046E  3406               	retlw	6
  1079  046F  3406               	retlw	6
  1080  0470  3405               	retlw	5
  1081  0471  3405               	retlw	5
  1082  0472  3404               	retlw	4
  1083  0473  3404               	retlw	4
  1084  0474  3404               	retlw	4
  1085  0475  3403               	retlw	3
  1086  0476  3403               	retlw	3
  1087  0477  3403               	retlw	3
  1088  0478  3402               	retlw	2
  1089  0479  3402               	retlw	2
  1090  047A  3402               	retlw	2
  1091  047B  3402               	retlw	2
  1092  047C  3401               	retlw	1
  1093  047D  3401               	retlw	1
  1094  047E  3401               	retlw	1
  1095  047F  3401               	retlw	1
  1096  0480  3401               	retlw	1
  1097  0481  3401               	retlw	1
  1098  0482  3400               	retlw	0
  1099  0483  3400               	retlw	0
  1100  0484  3400               	retlw	0
  1101  0485  3400               	retlw	0
  1102  0486  3400               	retlw	0
  1103  0487  3400               	retlw	0
  1104  0488  3400               	retlw	0
  1105  0489  3400               	retlw	0
  1106  048A  3400               	retlw	0
  1107  048B  3400               	retlw	0
  1108  048C  3400               	retlw	0
  1109  048D  3400               	retlw	0
  1110  048E  3400               	retlw	0
  1111  048F  3400               	retlw	0
  1112  0490  3401               	retlw	1
  1113  0491  3401               	retlw	1
  1114  0492  3401               	retlw	1
  1115  0493  3401               	retlw	1
  1116  0494  3401               	retlw	1
  1117  0495  3401               	retlw	1
  1118  0496  3402               	retlw	2
  1119  0497  3402               	retlw	2
  1120  0498  3402               	retlw	2
  1121  0499  3402               	retlw	2
  1122  049A  3403               	retlw	3
  1123  049B  3403               	retlw	3
  1124  049C  3403               	retlw	3
  1125  049D  3404               	retlw	4
  1126  049E  3404               	retlw	4
  1127  049F  3404               	retlw	4
  1128  04A0  3405               	retlw	5
  1129  04A1  3405               	retlw	5
  1130  04A2  3406               	retlw	6
  1131  04A3  3406               	retlw	6
  1132  04A4  3406               	retlw	6
  1133  04A5  3407               	retlw	7
  1134  04A6  3407               	retlw	7
  1135  04A7  3408               	retlw	8
  1136  04A8  3408               	retlw	8
  1137  04A9  3409               	retlw	9
  1138  04AA  3409               	retlw	9
  1139  04AB  340A               	retlw	10
  1140  04AC  340A               	retlw	10
  1141  04AD  340B               	retlw	11
  1142  04AE  340B               	retlw	11
  1143  04AF  340C               	retlw	12
  1144  04B0  340C               	retlw	12
  1145  04B1  340D               	retlw	13
  1146  04B2  340D               	retlw	13
  1147  04B3  340E               	retlw	14
  1148  04B4  340E               	retlw	14
  1149  04B5  340F               	retlw	15
  1150  04B6                     __end_of_sine_table2:	
  1151  04B6                     _PLAYBACK_RATE:	
  1152  04B6  3412               	retlw	18
  1153  04B7  347A               	retlw	122
  1154  04B8  3400               	retlw	0
  1155  04B9  3400               	retlw	0
  1156  04BA                     __end_of_PLAYBACK_RATE:	
  1157  04BA                     _BAUD_RATE:	
  1158  04BA  34B0               	retlw	176
  1159  04BB  3404               	retlw	4
  1160  04BC                     __end_of_BAUD_RATE:	
  1161  04BC                     _TABLE_SIZE:	
  1162  04BC  34B6               	retlw	182
  1163  04BD  3400               	retlw	0
  1164  04BE                     __end_of_TABLE_SIZE:	
  1165  000B                     _INTCON	set	11
  1166  0011                     _PIR1	set	17
  1167  000C                     _PORTAbits	set	12
  1168  000E                     _PORTCbits	set	14
  1169  0015                     _TMR0	set	21
  1170  0017                     _TMR1H	set	23
  1171  0016                     _TMR1L	set	22
  1172  008E                     _ADIF	set	142
  1173  008A                     _CCP1IF	set	138
  1174  008B                     _SSP1IF	set	139
  1175  00C4                     _T1CKPS0	set	196
  1176  00C5                     _T1CKPS1	set	197
  1177  005D                     _TMR0IE	set	93
  1178  005A                     _TMR0IF	set	90
  1179  00C6                     _TMR1CS0	set	198
  1180  00C7                     _TMR1CS1	set	199
  1181  00CF                     _TMR1GE	set	207
  1182  0088                     _TMR1IF	set	136
  1183  00C0                     _TMR1ON	set	192
  1184  009D                     _ADCON0	set	157
  1185  009C                     _ADRESH	set	156
  1186  009B                     _ADRESL	set	155
  1187  0099                     _OSCCON	set	153
  1188  009A                     _OSCSTAT	set	154
  1189  0098                     _OSCTUNE	set	152
  1190  008C                     _TRISA	set	140
  1191  008E                     _TRISC	set	142
  1192  04F4                     _ADCS0	set	1268
  1193  04F5                     _ADCS1	set	1269
  1194  04F6                     _ADCS2	set	1270
  1195  04F7                     _ADFM	set	1271
  1196  048E                     _ADIE	set	1166
  1197  04F2                     _ADNREF	set	1266
  1198  04E8                     _ADON	set	1256
  1199  04F0                     _ADPREF0	set	1264
  1200  04F1                     _ADPREF1	set	1265
  1201  048A                     _CCP1IE	set	1162
  1202  04AB                     _PSA	set	1195
  1203  048B                     _SSP1IE	set	1163
  1204  04AD                     _TMR0CS	set	1197
  1205  0488                     _TMR1IE	set	1160
  1206  04B9                     _WDTPS0	set	1209
  1207  04BA                     _WDTPS1	set	1210
  1208  04BB                     _WDTPS2	set	1211
  1209  04BC                     _WDTPS3	set	1212
  1210  04BD                     _WDTPS4	set	1213
  1211  0119                     _DACCON1	set	281
  1212  08C7                     _DACEN	set	2247
  1213  08C0                     _DACNSS	set	2240
  1214  08C5                     _DACOE	set	2245
  1215  08C2                     _DACPSS0	set	2242
  1216  08C3                     _DACPSS1	set	2243
  1217  0C61                     _ANSA1	set	3169
  1218  0212                     _SSP1ADD	set	530
  1219  0211                     _SSP1BUF	set	529
  1220  0216                     _SSP1CON2bits	set	534
  1221  0214                     _SSP1STATbits	set	532
  1222  0213                     _SSPMSK	set	531
  1223  10B5                     _ACKDT	set	4277
  1224  10B9                     _AHEN	set	4281
  1225  10BC                     _BOEN	set	4284
  1226  10AC                     _CKP	set	4268
  1227  10B8                     _DHEN	set	4280
  1228  10B7                     _GCEN	set	4279
  1229  10BE                     _PCIE	set	4286
  1230  10BA                     _SBCDE	set	4282
  1231  10BD                     _SCIE	set	4285
  1232  10B0                     _SEN	set	4272
  1233  10AD                     _SSPEN	set	4269
  1234  10A8                     _SSPM0	set	4264
  1235  10A9                     _SSPM1	set	4265
  1236  10AA                     _SSPM2	set	4266
  1237  10AB                     _SSPM3	set	4267
  1238  10AE                     _SSPOV	set	4270
  1239  10AF                     _WCOL	set	4271
  1240  0292                     _CCPR1H	set	658
  1241  0291                     _CCPR1L	set	657
  1242  1499                     _CCP1M1	set	5273
  1243  149A                     _CCP1M2	set	5274
  1244  149B                     _CCP1M3	set	5275
  1245  04BE                     __stringdata:	
  1246  04BE                     STR_1:	
  1247  04BE  3448               	retlw	72	;'H'
  1248  04BF  3445               	retlw	69	;'E'
  1249  04C0  344C               	retlw	76	;'L'
  1250  04C1  344C               	retlw	76	;'L'
  1251  04C2  344F               	retlw	79	;'O'
  1252  04C3  3400               	retlw	0
  1253  04C4                     __end_of__stringdata:	
  1254                           
  1255                           ; #config settings
  1256  0000                     
  1257                           	psect	cinit
  1258  002D                     start_initialization:	
  1259  002D                     __initialization:	
  1260                           
  1261                           ; Clear objects allocated to COMMON
  1262  002D  01FA               	clrf	__pbssCOMMON& (0+127)
  1263  002E  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1264  002F  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
  1265  0030  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
  1266                           
  1267                           ; Clear objects allocated to BANK0
  1268  0031  01EE               	clrf	__pbssBANK0& (0+127)
  1269  0032  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1270                           
  1271                           ; Clear objects allocated to BANK1
  1272  0033  30A0               	movlw	low __pbssBANK1
  1273  0034  0084               	movwf	4
  1274  0035  3000               	movlw	high __pbssBANK1
  1275  0036  0085               	movwf	5
  1276  0037  3029               	movlw	41
  1277  0038  318B  2382  3180   	fcall	clear_ram0
  1278                           
  1279                           ; Clear objects allocated to BANK2
  1280  003B  3020               	movlw	low __pbssBANK2
  1281  003C  0084               	movwf	4
  1282  003D  3001               	movlw	high __pbssBANK2
  1283  003E  0085               	movwf	5
  1284  003F  3027               	movlw	39
  1285  0040  318B  2382  3180   	fcall	clear_ram0
  1286                           
  1287                           ; Clear objects allocated to BANK3
  1288  0043  30A0               	movlw	low __pbssBANK3
  1289  0044  0084               	movwf	4
  1290  0045  3001               	movlw	high __pbssBANK3
  1291  0046  0085               	movwf	5
  1292  0047  3040               	movlw	64
  1293  0048  318B  2382  3180   	fcall	clear_ram0
  1294                           
  1295                           ; Initialize objects allocated to BANK2
  1296  004B  30DA               	movlw	low __pidataBANK2
  1297  004C  0084               	movwf	4
  1298  004D  308B               	movlw	(high __pidataBANK2)| (0+128)
  1299  004E  0085               	movwf	5
  1300  004F  3047               	movlw	low __pdataBANK2
  1301  0050  0086               	movwf	6
  1302  0051  3001               	movlw	high __pdataBANK2
  1303  0052  0087               	movwf	7
  1304  0053  3010               	movlw	16
  1305  0054  318B  237C         	fcall	init_ram
  1306  0056                     end_of_initialization:	
  1307                           ;End of C runtime variable initialization code
  1308                           
  1309  0056                     __end_of__initialization:	
  1310  0056  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1311  0057  0020               	movlb	0
  1312  0058  3186  2ED8         	ljmp	_main	;jump to C main() function
  1313                           
  1314                           	psect	bssCOMMON
  1315  007A                     __pbssCOMMON:	
  1316  007A                     _modem_packet_size:	
  1317  007A                     	ds	4
  1318                           
  1319                           	psect	bssBANK0
  1320  006E                     __pbssBANK0:	
  1321  006E                     _i2c_data_index:	
  1322  006E                     	ds	1
  1323  006F                     _phase:	
  1324  006F                     	ds	1
  1325                           
  1326                           	psect	bssBANK1
  1327  00A0                     __pbssBANK1:	
  1328  00A0                     _i2c_data:	
  1329  00A0                     	ds	5
  1330  00A5                     Reverse_Array@F3148:	
  1331  00A5                     	ds	4
  1332  00A9                     _PHASE_DELTA_1200:	
  1333  00A9                     	ds	4
  1334  00AD                     _PHASE_DELTA_2200:	
  1335  00AD                     	ds	4
  1336  00B1                     _Systick_Counter:	
  1337  00B1                     	ds	4
  1338  00B5                     _packet_pos:	
  1339  00B5                     	ds	4
  1340  00B9                     _crc:	
  1341  00B9                     	ds	2
  1342  00BB                     _ones_in_a_row:	
  1343  00BB                     	ds	2
  1344  00BD                     Sinus_Generator@tone_index:	
  1345  00BD                     	ds	1
  1346  00BE                     _Change_to_New_Baud:	
  1347  00BE                     	ds	1
  1348  00BF                     _MODEM_TRANSMITTING:	
  1349  00BF                     	ds	1
  1350  00C0                     _PTT_OFF:	
  1351  00C0                     	ds	1
  1352  00C1                     _SAMPLES_PER_BAUD:	
  1353  00C1                     	ds	1
  1354  00C2                     _adc__high:	
  1355  00C2                     	ds	1
  1356  00C3                     _adc__low:	
  1357  00C3                     	ds	1
  1358  00C4                     _current_byte:	
  1359  00C4                     	ds	1
  1360  00C5                     _current_sample_in_baud:	
  1361  00C5                     	ds	1
  1362  00C6                     _i2c_address:	
  1363  00C6                     	ds	1
  1364  00C7                     _i2c_dummy:	
  1365  00C7                     	ds	1
  1366  00C8                     _phase_delta:	
  1367  00C8                     	ds	1
  1368                           
  1369                           	psect	bssBANK2
  1370  0120                     __pbssBANK2:	
  1371  0120                     _adf_config:	
  1372  0120                     	ds	39
  1373                           
  1374                           	psect	dataBANK2
  1375  0147                     __pdataBANK2:	
  1376  0147                     main@F3171:	
  1377  0147                     	ds	16
  1378                           
  1379                           	psect	bssBANK3
  1380  01A0                     __pbssBANK3:	
  1381  01A0                     _modem_packet:	
  1382  01A0                     	ds	64
  1383                           
  1384                           	psect	clrtext
  1385  0B82                     clear_ram0:	
  1386                           ;	Called with FSR0 containing the base address, and
  1387                           ;	WREG with the size to clear
  1388                           
  1389  0B82  0064               	clrwdt	;clear the watchdog before getting into this loop
  1390  0B83                     clrloop0:	
  1391  0B83  0180               	clrf	0	;clear RAM location pointed to by FSR
  1392  0B84  3101               	addfsr 0,1
  1393  0B85  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1394  0B86  2B83               	goto	clrloop0	;have we reached the end yet?
  1395  0B87  3400               	retlw	0	;all done for this memory range, return
  1396                           
  1397                           	psect	inittext
  1398  0B7C                     init_ram:	
  1399  0B7C  00FE               	movwf	126
  1400  0B7D                     initloop:	
  1401  0B7D  0012               	moviw fsr0++
  1402  0B7E  001E               	movwi fsr1++
  1403  0B7F  0BFE               	decfsz	126,f
  1404  0B80  2B7D               	goto	initloop
  1405  0B81  3400               	retlw	0
  1406                           
  1407                           	psect	cstackBANK1
  1408  00C9                     __pcstackBANK1:	
  1409  00C9                     Adf_Write_Register_Three@reg_ptr:	
  1410                           
  1411                           ; 4 bytes @ 0x0
  1412  00C9                     	ds	4
  1413  00CD                     Adf_Write_Register_Three@reg:	
  1414                           
  1415                           ; 4 bytes @ 0x4
  1416  00CD                     	ds	4
  1417  00D1                     Adf_Lock@adj:	
  1418                           
  1419                           ; 2 bytes @ 0x8
  1420  00D1                     	ds	2
  1421  00D3                     Adf_Lock@bias:	
  1422                           
  1423                           ; 2 bytes @ 0xA
  1424  00D3                     	ds	2
  1425  00D5                     main@beacon_address:	
  1426                           
  1427                           ; 16 bytes @ 0xC
  1428  00D5                     	ds	16
  1429                           
  1430                           	psect	cstackCOMMON
  1431  0070                     __pcstackCOMMON:	
  1432  0070                     ?_ADC_ISR:	
  1433  0070                     ??_ADC_ISR:	
  1434                           ; 0 bytes @ 0x0
  1435                           
  1436  0070                     ?_TIMER1_ISR:	
  1437                           ; 0 bytes @ 0x0
  1438                           
  1439  0070                     ??_TIMER1_ISR:	
  1440                           ; 0 bytes @ 0x0
  1441                           
  1442  0070                     ?_TIMER0_ISR:	
  1443                           ; 0 bytes @ 0x0
  1444                           
  1445  0070                     ?_I2C_ISR:	
  1446                           ; 0 bytes @ 0x0
  1447                           
  1448  0070                     ??_I2C_ISR:	
  1449                           ; 0 bytes @ 0x0
  1450                           
  1451  0070                     ?_Timer1_Start:	
  1452                           ; 0 bytes @ 0x0
  1453                           
  1454  0070                     ?_Dac0_Start_Hold:	
  1455                           ; 0 bytes @ 0x0
  1456                           
  1457  0070                     ?_Adc1_Start:	
  1458                           ; 0 bytes @ 0x0
  1459                           
  1460  0070                     ?_Ax25_Send_Footer:	
  1461                           ; 0 bytes @ 0x0
  1462                           
  1463  0070                     ?_Modem_Setup:	
  1464                           ; 0 bytes @ 0x0
  1465                           
  1466  0070                     ?_Ptt_Off:	
  1467                           ; 0 bytes @ 0x0
  1468                           
  1469  0070                     ?_Modem_Flush_Frame:	
  1470                           ; 0 bytes @ 0x0
  1471                           
  1472  0070                     ?_Adf_Reset_Register_Zero:	
  1473                           ; 0 bytes @ 0x0
  1474                           
  1475  0070                     ?_Adf_Reset_Register_One:	
  1476                           ; 0 bytes @ 0x0
  1477                           
  1478  0070                     ?_Adf_Reset_Register_Two:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_Adf_Reset_Register_Three:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_Adf_Reset:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_Adf_Write_Register_Zero:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_Adf_Write_Register_One:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_Adf_Write_Register_Two:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_Adf_Write_Register_Three:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_global_interrupt:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_System_Start:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ??_Send_Vcxo_Signal:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_Timer0_Start:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_Timer0_Stop:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ??_Timer0_Stop:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_Adf_Reset_Config:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_Adf_Write_Config:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_Radio_Setup:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_Configure_Audio:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_Sinus_Generator:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_Update_Crc:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_Send_Byte:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_Ax25_Send_Byte:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_Ax25_Send_Sync:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_Ax25_Send_Flag:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_Gpio_Config:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_Adf_Lock:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_Spi_Byte_Send:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_Adf_Locked:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ?_Read_Adf7012_Muxout:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_Send_Vcxo_Signal:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ?_Ptt_On:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_main:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     Send_Vcxo_Signal@value:	
  1572                           ; 2 bytes @ 0x0
  1573                           
  1574                           
  1575                           ; 1 bytes @ 0x0
  1576  0070                     	ds	1
  1577  0071                     ??_Sinus_Generator:	
  1578                           
  1579                           ; 0 bytes @ 0x1
  1580  0071                     	ds	5
  1581  0076                     Sinus_Generator@Audio_Signal:	
  1582                           
  1583                           ; 1 bytes @ 0x6
  1584  0076                     	ds	1
  1585  0077                     ??_TIMER0_ISR:	
  1586                           
  1587                           ; 0 bytes @ 0x7
  1588  0077                     	ds	1
  1589  0078                     ??_global_interrupt:	
  1590                           
  1591                           ; 0 bytes @ 0x8
  1592  0078                     	ds	2
  1593                           
  1594                           	psect	cstackBANK0
  1595  0020                     __pcstackBANK0:	
  1596  0020                     ??_Gpio_Config:	
  1597  0020                     ??_Timer1_Start:	
  1598                           ; 0 bytes @ 0x0
  1599                           
  1600  0020                     ??_Dac0_Start_Hold:	
  1601                           ; 0 bytes @ 0x0
  1602                           
  1603  0020                     ??_Adc1_Start:	
  1604                           ; 0 bytes @ 0x0
  1605                           
  1606  0020                     ?_Delay_ms:	
  1607                           ; 0 bytes @ 0x0
  1608                           
  1609  0020                     ??_Adf_Reset_Register_Zero:	
  1610                           ; 0 bytes @ 0x0
  1611                           
  1612  0020                     ??_Adf_Reset_Register_One:	
  1613                           ; 0 bytes @ 0x0
  1614                           
  1615  0020                     ??_Adf_Reset_Register_Two:	
  1616                           ; 0 bytes @ 0x0
  1617                           
  1618  0020                     ??_Adf_Reset_Register_Three:	
  1619                           ; 0 bytes @ 0x0
  1620                           
  1621  0020                     ??_Adf_Locked:	
  1622                           ; 0 bytes @ 0x0
  1623                           
  1624  0020                     ??_System_Start:	
  1625                           ; 0 bytes @ 0x0
  1626                           
  1627  0020                     ??_Read_Adf7012_Muxout:	
  1628                           ; 0 bytes @ 0x0
  1629                           
  1630  0020                     ??_Timer0_Start:	
  1631                           ; 0 bytes @ 0x0
  1632                           
  1633  0020                     ??_Configure_Audio:	
  1634                           ; 0 bytes @ 0x0
  1635                           
  1636  0020                     ??_Update_Crc:	
  1637                           ; 0 bytes @ 0x0
  1638                           
  1639  0020                     ??_Ax25_Send_Sync:	
  1640                           ; 0 bytes @ 0x0
  1641                           
  1642  0020                     ??_Ax25_Send_Flag:	
  1643                           ; 0 bytes @ 0x0
  1644                           
  1645  0020                     ?_memcpy:	
  1646                           ; 0 bytes @ 0x0
  1647                           
  1648  0020                     memcpy@s1:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651  0020                     Delay_ms@time_to_delay:	
  1652                           ; 1 bytes @ 0x0
  1653                           
  1654                           
  1655                           ; 2 bytes @ 0x0
  1656  0020                     	ds	1
  1657  0021                     memcpy@n:	
  1658                           
  1659                           ; 2 bytes @ 0x1
  1660  0021                     	ds	1
  1661  0022                     ??_Delay_ms:	
  1662  0022                     Update_Crc@input_bit:	
  1663                           ; 0 bytes @ 0x2
  1664                           
  1665                           
  1666                           ; 1 bytes @ 0x2
  1667  0022                     	ds	1
  1668  0023                     ??_memcpy:	
  1669  0023                     ??_Send_Byte:	
  1670                           ; 0 bytes @ 0x3
  1671                           
  1672                           
  1673                           ; 0 bytes @ 0x3
  1674  0023                     	ds	1
  1675  0024                     memcpy@d:	
  1676  0024                     Delay_ms@i:	
  1677                           ; 1 bytes @ 0x4
  1678                           
  1679                           
  1680                           ; 2 bytes @ 0x4
  1681  0024                     	ds	1
  1682  0025                     memcpy@s:	
  1683                           
  1684                           ; 1 bytes @ 0x5
  1685  0025                     	ds	1
  1686  0026                     ??_Spi_Byte_Send:	
  1687  0026                     ??_Adf_Reset:	
  1688                           ; 0 bytes @ 0x6
  1689                           
  1690  0026                     ??_Adf_Reset_Config:	
  1691                           ; 0 bytes @ 0x6
  1692                           
  1693  0026                     Ax25_Send_Sync@byte:	
  1694                           ; 0 bytes @ 0x6
  1695                           
  1696  0026                     Ax25_Send_Flag@byte:	
  1697                           ; 1 bytes @ 0x6
  1698                           
  1699  0026                     memcpy@d1:	
  1700                           ; 1 bytes @ 0x6
  1701                           
  1702                           
  1703                           ; 1 bytes @ 0x6
  1704  0026                     	ds	1
  1705  0027                     ?_Reverse_Array:	
  1706  0027                     Reverse_Array@length:	
  1707                           ; 1 bytes @ 0x7
  1708                           
  1709  0027                     Spi_Byte_Send@data:	
  1710                           ; 1 bytes @ 0x7
  1711                           
  1712  0027                     Ax25_Send_Sync@i:	
  1713                           ; 1 bytes @ 0x7
  1714                           
  1715  0027                     Ax25_Send_Flag@i:	
  1716                           ; 2 bytes @ 0x7
  1717                           
  1718                           
  1719                           ; 2 bytes @ 0x7
  1720  0027                     	ds	1
  1721  0028                     ??_Reverse_Array:	
  1722  0028                     Spi_Byte_Send@data_to_send:	
  1723                           ; 0 bytes @ 0x8
  1724                           
  1725                           
  1726                           ; 1 bytes @ 0x8
  1727  0028                     	ds	1
  1728  0029                     Spi_Byte_Send@i:	
  1729  0029                     Send_Byte@byte:	
  1730                           ; 1 bytes @ 0x9
  1731                           
  1732                           
  1733                           ; 1 bytes @ 0x9
  1734  0029                     	ds	1
  1735  002A                     ?_Write_Adf7012_Reg:	
  1736  002A                     Write_Adf7012_Reg@size_of_reg:	
  1737                           ; 1 bytes @ 0xA
  1738                           
  1739  002A                     Send_Byte@i:	
  1740                           ; 1 bytes @ 0xA
  1741                           
  1742                           
  1743                           ; 2 bytes @ 0xA
  1744  002A                     	ds	1
  1745  002B                     ??_Write_Adf7012_Reg:	
  1746                           
  1747                           ; 0 bytes @ 0xB
  1748  002B                     	ds	1
  1749  002C                     ?_Ax25_Send_Header:	
  1750  002C                     ??_Ax25_Send_Footer:	
  1751                           ; 0 bytes @ 0xC
  1752                           
  1753  002C                     ??_Ax25_Send_Byte:	
  1754                           ; 0 bytes @ 0xC
  1755                           
  1756  002C                     Write_Adf7012_Reg@reg_value:	
  1757                           ; 0 bytes @ 0xC
  1758                           
  1759  002C                     Ax25_Send_Byte@byte:	
  1760                           ; 1 bytes @ 0xC
  1761                           
  1762  002C                     Ax25_Send_Header@num_addresses:	
  1763                           ; 1 bytes @ 0xC
  1764                           
  1765  002C                     Ax25_Send_Footer@final_crc:	
  1766                           ; 2 bytes @ 0xC
  1767                           
  1768                           
  1769                           ; 2 bytes @ 0xC
  1770  002C                     	ds	1
  1771  002D                     ?_Ax25_Send_String:	
  1772  002D                     Write_Adf7012_Reg@i:	
  1773                           ; 0 bytes @ 0xD
  1774                           
  1775  002D                     Ax25_Send_String@string:	
  1776                           ; 1 bytes @ 0xD
  1777                           
  1778  002D                     Reverse_Array@buffer_array:	
  1779                           ; 2 bytes @ 0xD
  1780                           
  1781                           
  1782                           ; 4 bytes @ 0xD
  1783  002D                     	ds	1
  1784  002E                     ??_Ax25_Send_Header:	
  1785                           
  1786                           ; 0 bytes @ 0xE
  1787  002E                     	ds	1
  1788  002F                     ??_Ax25_Send_String:	
  1789  002F                     Ax25_Send_String@i:	
  1790                           ; 0 bytes @ 0xF
  1791                           
  1792                           
  1793                           ; 2 bytes @ 0xF
  1794  002F                     	ds	2
  1795  0031                     Reverse_Array@input:	
  1796  0031                     Ax25_Send_Header@j:	
  1797                           ; 1 bytes @ 0x11
  1798                           
  1799                           
  1800                           ; 2 bytes @ 0x11
  1801  0031                     	ds	1
  1802  0032                     Reverse_Array@i:	
  1803                           
  1804                           ; 1 bytes @ 0x12
  1805  0032                     	ds	1
  1806  0033                     ??_Adf_Write_Register_Zero:	
  1807  0033                     ??_Adf_Write_Register_One:	
  1808                           ; 0 bytes @ 0x13
  1809                           
  1810  0033                     ??_Adf_Write_Register_Two:	
  1811                           ; 0 bytes @ 0x13
  1812                           
  1813  0033                     ??_Adf_Write_Register_Three:	
  1814                           ; 0 bytes @ 0x13
  1815                           
  1816  0033                     Ax25_Send_Header@addresses:	
  1817                           ; 0 bytes @ 0x13
  1818                           
  1819                           
  1820                           ; 1 bytes @ 0x13
  1821  0033                     	ds	1
  1822  0034                     Ax25_Send_Header@i:	
  1823                           
  1824                           ; 2 bytes @ 0x14
  1825  0034                     	ds	11
  1826  003F                     Adf_Write_Register_One@reg:	
  1827                           
  1828                           ; 4 bytes @ 0x1F
  1829  003F                     	ds	4
  1830  0043                     Adf_Write_Register_One@reg_ptr:	
  1831                           
  1832                           ; 3 bytes @ 0x23
  1833  0043                     	ds	8
  1834  004B                     Adf_Write_Register_Two@reg_ptr:	
  1835                           
  1836                           ; 4 bytes @ 0x2B
  1837  004B                     	ds	4
  1838  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1839  004F                     Adf_Write_Register_Two@reg:	
  1840                           ; 4 bytes @ 0x2F
  1841                           
  1842                           
  1843                           ; 4 bytes @ 0x2F
  1844  004F                     	ds	4
  1845  0053                     Adf_Write_Register_Zero@reg:	
  1846                           
  1847                           ; 4 bytes @ 0x33
  1848  0053                     	ds	24
  1849  006B                     ??_Modem_Setup:	
  1850  006B                     ??_Adf_Lock:	
  1851                           ; 0 bytes @ 0x4B
  1852                           
  1853  006B                     ??_Ptt_Off:	
  1854                           ; 0 bytes @ 0x4B
  1855                           
  1856  006B                     ??_Adf_Write_Config:	
  1857                           ; 0 bytes @ 0x4B
  1858                           
  1859  006B                     ??_Radio_Setup:	
  1860                           ; 0 bytes @ 0x4B
  1861                           
  1862  006B                     ??_Ptt_On:	
  1863                           ; 0 bytes @ 0x4B
  1864                           
  1865                           
  1866                           ; 0 bytes @ 0x4B
  1867  006B                     	ds	1
  1868  006C                     ??_Modem_Flush_Frame:	
  1869                           
  1870                           ; 0 bytes @ 0x4C
  1871  006C                     	ds	1
  1872  006D                     ??_main:	
  1873                           
  1874                           ; 0 bytes @ 0x4D
  1875  006D                     	ds	1
  1876                           
  1877                           	psect	maintext
  1878  06D8                     __pmaintext:	
  1879 ;;
  1880 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1881 ;;
  1882 ;; *************** function _main *****************
  1883 ;; Defined at:
  1884 ;;		line 165 in file "main.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;		None
  1887 ;; Auto vars:     Size  Location     Type
  1888 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  2  164[COMMON] int 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 17F/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1899 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1900 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1901 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1902 ;;Total ram usage:       17 bytes
  1903 ;; Hardware stack levels required when called:   12
  1904 ;; This function calls:
  1905 ;;		_Adc1_Start
  1906 ;;		_Adf_Lock
  1907 ;;		_Ax25_Send_Footer
  1908 ;;		_Ax25_Send_Header
  1909 ;;		_Ax25_Send_String
  1910 ;;		_Dac0_Start_Hold
  1911 ;;		_Delay_ms
  1912 ;;		_Gpio_Config
  1913 ;;		_Modem_Flush_Frame
  1914 ;;		_Modem_Setup
  1915 ;;		_Ptt_Off
  1916 ;;		_System_Start
  1917 ;;		_Timer1_Start
  1918 ;; This function is called by:
  1919 ;;		Startup code after reset
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           
  1924                           ;psect for function _main
  1925  06D8                     _main:	
  1926                           
  1927                           ;main.c: 166: Gpio_Config();
  1928                           
  1929                           ;incstack = 0
  1930                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1931  06D8  318C  2420  3186   	fcall	_Gpio_Config
  1932                           
  1933                           ;main.c: 167: System_Start();
  1934  06DB  318E  2661  3186   	fcall	_System_Start
  1935  06DE                     l165:	
  1936                           ;main.c: 168: while (!(OSCSTAT & (0x01))){}
  1937                           
  1938  06DE  0021               	movlb	1	; select bank1
  1939  06DF  1C1A               	btfss	26,0	;volatile
  1940  06E0  2EDE               	goto	l165
  1941                           
  1942                           ;main.c: 172: Timer1_Start();
  1943  06E1  318B  23CB  3186   	fcall	_Timer1_Start
  1944                           
  1945                           ;main.c: 174: Dac0_Start_Hold();
  1946  06E4  318B  2360  3186   	fcall	_Dac0_Start_Hold
  1947                           
  1948                           ;main.c: 176: Adc1_Start();
  1949  06E7  318B  236A  3186   	fcall	_Adc1_Start
  1950                           
  1951                           ;main.c: 178: PORTAbits.RA5 = 0;;
  1952  06EA  0020               	movlb	0	; select bank0
  1953  06EB  128C               	bcf	12,5	;volatile
  1954                           
  1955                           ;main.c: 179: Delay_ms(10);
  1956  06EC  300A               	movlw	10
  1957  06ED  00A0               	movwf	Delay_ms@time_to_delay
  1958  06EE  3000               	movlw	0
  1959  06EF  00A1               	movwf	Delay_ms@time_to_delay+1
  1960  06F0  318C  2484  3186   	fcall	_Delay_ms
  1961                           
  1962                           ;main.c: 180: PORTAbits.RA4 = 1;;
  1963  06F3  0020               	movlb	0	; select bank0
  1964  06F4  160C               	bsf	12,4	;volatile
  1965                           
  1966                           ;main.c: 181: Delay_ms(10);
  1967  06F5  300A               	movlw	10
  1968  06F6  00A0               	movwf	Delay_ms@time_to_delay
  1969  06F7  3000               	movlw	0
  1970  06F8  00A1               	movwf	Delay_ms@time_to_delay+1
  1971  06F9  318C  2484  3186   	fcall	_Delay_ms
  1972                           
  1973                           ;main.c: 182: PORTAbits.RA5 = 1;;
  1974  06FC  0020               	movlb	0	; select bank0
  1975  06FD  168C               	bsf	12,5	;volatile
  1976                           
  1977                           ;main.c: 183: Delay_ms(10);
  1978  06FE  300A               	movlw	10
  1979  06FF  00A0               	movwf	Delay_ms@time_to_delay
  1980  0700  3000               	movlw	0
  1981  0701  00A1               	movwf	Delay_ms@time_to_delay+1
  1982  0702  318C  2484  3186   	fcall	_Delay_ms
  1983                           
  1984                           ;main.c: 185: Delay_ms(200);
  1985  0705  30C8               	movlw	200
  1986  0706  0020               	movlb	0	; select bank0
  1987  0707  00A0               	movwf	Delay_ms@time_to_delay
  1988  0708  3000               	movlw	0
  1989  0709  00A1               	movwf	Delay_ms@time_to_delay+1
  1990  070A  318C  2484  3186   	fcall	_Delay_ms
  1991                           
  1992                           ;main.c: 188: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1993  070D  3047               	movlw	low main@F3171
  1994  070E  0086               	movwf	6
  1995  070F  3001               	movlw	high main@F3171
  1996  0710  0087               	movwf	7
  1997  0711  30D5               	movlw	low main@beacon_address
  1998  0712  0084               	movwf	4
  1999  0713  3000               	movlw	high main@beacon_address
  2000  0714  0085               	movwf	5
  2001  0715  3010               	movlw	16
  2002  0716  0020               	movlb	0	; select bank0
  2003  0717  00ED               	movwf	??_main
  2004  0718                     u2570:	
  2005  0718  0016               	moviw fsr1++
  2006  0719  001A               	movwi fsr0++
  2007  071A  0BED               	decfsz	??_main,f
  2008  071B  2F18               	goto	u2570
  2009                           
  2010                           ;main.c: 190: Ax25_Send_Header(beacon_address,2);
  2011  071C  3002               	movlw	2
  2012  071D  00AC               	movwf	Ax25_Send_Header@num_addresses
  2013  071E  3000               	movlw	0
  2014  071F  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  2015  0720  30D5               	movlw	main@beacon_address& (0+255)
  2016  0721  3181  21C6  3186   	fcall	_Ax25_Send_Header
  2017                           
  2018                           ;main.c: 191: Ax25_Send_String("HELLO");
  2019  0724  30BE               	movlw	low (STR_1| (0+32768))
  2020  0725  0020               	movlb	0	; select bank0
  2021  0726  00AD               	movwf	Ax25_Send_String@string
  2022  0727  3084               	movlw	high (STR_1| (0+32768))
  2023  0728  00AE               	movwf	Ax25_Send_String@string+1
  2024  0729  318C  2467  3186   	fcall	_Ax25_Send_String
  2025                           
  2026                           ;main.c: 192: Ax25_Send_Footer();
  2027  072C  318C  244C  3186   	fcall	_Ax25_Send_Footer
  2028                           
  2029                           ;main.c: 194: Modem_Setup();
  2030  072F  318B  2376  3186   	fcall	_Modem_Setup
  2031                           
  2032                           ;main.c: 195: PORTCbits.RC3 = 1;;
  2033  0732  0020               	movlb	0	; select bank0
  2034  0733  158E               	bsf	14,3	;volatile
  2035                           
  2036                           ;main.c: 196: Delay_ms(100);
  2037  0734  3064               	movlw	100
  2038  0735  00A0               	movwf	Delay_ms@time_to_delay
  2039  0736  3000               	movlw	0
  2040  0737  00A1               	movwf	Delay_ms@time_to_delay+1
  2041  0738  318C  2484  3186   	fcall	_Delay_ms
  2042                           
  2043                           ;main.c: 197: Adf_Lock();
  2044  073B  3187  2768  3186   	fcall	_Adf_Lock
  2045                           
  2046                           ;main.c: 198: Delay_ms(100);
  2047  073E  3064               	movlw	100
  2048  073F  0020               	movlb	0	; select bank0
  2049  0740  00A0               	movwf	Delay_ms@time_to_delay
  2050  0741  3000               	movlw	0
  2051  0742  00A1               	movwf	Delay_ms@time_to_delay+1
  2052  0743  318C  2484  3186   	fcall	_Delay_ms
  2053  0746                     l2753:	
  2054                           ;main.c: 201: while(1){
  2055                           
  2056                           
  2057                           ;main.c: 202: if(PTT_OFF){
  2058  0746  0021               	movlb	1	; select bank1
  2059  0747  0840               	movf	_PTT_OFF^(0+128),w
  2060  0748  1903               	btfsc	3,2
  2061  0749  2F4F               	goto	l2759
  2062                           
  2063                           ;main.c: 203: Ptt_Off();
  2064  074A  318C  240D  3186   	fcall	_Ptt_Off
  2065                           
  2066                           ;main.c: 204: PTT_OFF = 0;
  2067  074D  0021               	movlb	1	; select bank1
  2068  074E  01C0               	clrf	_PTT_OFF^(0+128)
  2069  074F                     l2759:	
  2070                           
  2071                           ;main.c: 205: }
  2072                           ;main.c: 206: Delay_ms(2000);
  2073  074F  30D0               	movlw	208
  2074  0750  0020               	movlb	0	; select bank0
  2075  0751  00A0               	movwf	Delay_ms@time_to_delay
  2076  0752  3007               	movlw	7
  2077  0753  00A1               	movwf	Delay_ms@time_to_delay+1
  2078  0754  318C  2484  3186   	fcall	_Delay_ms
  2079                           
  2080                           ;main.c: 208: Modem_Flush_Frame();
  2081  0757  318D  251D  3186   	fcall	_Modem_Flush_Frame
  2082  075A                     l2763:	
  2083                           ;main.c: 209: while(MODEM_TRANSMITTING);
  2084                           
  2085  075A  0021               	movlb	1	; select bank1
  2086  075B  08BF               	movf	_MODEM_TRANSMITTING^(0+128),f
  2087  075C  1D03               	skipz
  2088  075D  2F5A               	goto	l2763
  2089                           
  2090                           ;main.c: 210: Delay_ms(2000);
  2091  075E  30D0               	movlw	208
  2092  075F  0020               	movlb	0	; select bank0
  2093  0760  00A0               	movwf	Delay_ms@time_to_delay
  2094  0761  3007               	movlw	7
  2095  0762  00A1               	movwf	Delay_ms@time_to_delay+1
  2096  0763  318C  2484  3186   	fcall	_Delay_ms
  2097  0766  0064               	clrwdt	;# 
  2098  0767  2F46               	goto	l2753
  2099  0768                     __end_of_main:	
  2100                           ;main.c: 223: }
  2101                           ;main.c: 224: return (0);
  2102                           ;	Return value of _main is never used
  2103                           
  2104                           
  2105                           	psect	text1
  2106  0BCB                     __ptext1:	
  2107 ;; *************** function _Timer1_Start *****************
  2108 ;; Defined at:
  2109 ;;		line 254 in file "utility.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;		None               void
  2116 ;; Registers used:
  2117 ;;		wreg, status,2
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    4
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           
  2138                           ;psect for function _Timer1_Start
  2139  0BCB                     _Timer1_Start:	
  2140                           
  2141                           ;utility.c: 255: TMR1H = 0x00;
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _Timer1_Start: [wreg+status,2]
  2145  0BCB  0020               	movlb	0	; select bank0
  2146  0BCC  0197               	clrf	23	;volatile
  2147                           
  2148                           ;utility.c: 256: TMR1L = 0x00;
  2149  0BCD  0196               	clrf	22	;volatile
  2150                           
  2151                           ;utility.c: 258: TMR1IE = 0;
  2152  0BCE  0021               	movlb	1	; select bank1
  2153  0BCF  1011               	bcf	17,0	;volatile
  2154                           
  2155                           ;utility.c: 261: CCPR1H = 0x03;
  2156  0BD0  3003               	movlw	3
  2157  0BD1  0025               	movlb	5	; select bank5
  2158  0BD2  0092               	movwf	18	;volatile
  2159                           
  2160                           ;utility.c: 262: CCPR1L = 0x41;
  2161  0BD3  3041               	movlw	65
  2162  0BD4  0091               	movwf	17	;volatile
  2163                           
  2164                           ;utility.c: 264: CCP1IF = 0;
  2165  0BD5  0020               	movlb	0	; select bank0
  2166  0BD6  1111               	bcf	17,2	;volatile
  2167                           
  2168                           ;utility.c: 265: CCP1IE = 1;
  2169  0BD7  0021               	movlb	1	; select bank1
  2170  0BD8  1511               	bsf	17,2	;volatile
  2171  0BD9  0008               	return
  2172  0BDA                     __end_of_Timer1_Start:	
  2173                           
  2174                           	psect	text2
  2175  0E61                     __ptext2:	
  2176 ;; *************** function _System_Start *****************
  2177 ;; Defined at:
  2178 ;;		line 73 in file "main.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;		None               void
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2194 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2195 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2196 ;;Total ram usage:        1 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    4
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _System_Start
  2208  0E61                     _System_Start:	
  2209                           
  2210                           ;main.c: 76: WDTPS4 = 1;
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2214  0E61  0021               	movlb	1	; select bank1
  2215  0E62  1697               	bsf	23,5	;volatile
  2216                           
  2217                           ;main.c: 77: WDTPS3 = 0;
  2218  0E63  1217               	bcf	23,4	;volatile
  2219                           
  2220                           ;main.c: 78: WDTPS2 = 0;
  2221  0E64  1197               	bcf	23,3	;volatile
  2222                           
  2223                           ;main.c: 79: WDTPS1 = 0;
  2224  0E65  1117               	bcf	23,2	;volatile
  2225                           
  2226                           ;main.c: 80: WDTPS0 = 1;
  2227  0E66  1497               	bsf	23,1	;volatile
  2228                           
  2229                           ;main.c: 84: OSCCON = 0x00;
  2230  0E67  0199               	clrf	25	;volatile
  2231                           
  2232                           ;main.c: 85: OSCCON |= 0b11110000;
  2233  0E68  30F0               	movlw	240
  2234  0E69  0020               	movlb	0	; select bank0
  2235  0E6A  00A0               	movwf	??_System_Start
  2236  0E6B  0820               	movf	??_System_Start,w
  2237  0E6C  0021               	movlb	1	; select bank1
  2238  0E6D  0499               	iorwf	25,f	;volatile
  2239                           
  2240                           ;main.c: 86: OSCTUNE = 0x00;
  2241  0E6E  0198               	clrf	24	;volatile
  2242                           
  2243                           ;main.c: 90: TMR0CS = 0;
  2244  0E6F  1295               	bcf	21,5	;volatile
  2245                           
  2246                           ;main.c: 91: PSA = 1;
  2247  0E70  1595               	bsf	21,3	;volatile
  2248                           
  2249                           ;main.c: 95: TMR1ON = 1;
  2250  0E71  0020               	movlb	0	; select bank0
  2251  0E72  1418               	bsf	24,0	;volatile
  2252                           
  2253                           ;main.c: 96: TMR1GE = 0;
  2254  0E73  1399               	bcf	25,7	;volatile
  2255                           
  2256                           ;main.c: 98: TMR1CS1 = 0;
  2257  0E74  1398               	bcf	24,7	;volatile
  2258                           
  2259                           ;main.c: 99: TMR1CS0 = 0;
  2260  0E75  1318               	bcf	24,6	;volatile
  2261                           
  2262                           ;main.c: 101: T1CKPS1 = 1;
  2263  0E76  1698               	bsf	24,5	;volatile
  2264                           
  2265                           ;main.c: 102: T1CKPS0 = 1;
  2266  0E77  1618               	bsf	24,4	;volatile
  2267                           
  2268                           ;main.c: 104: CCP1M3 = 1;
  2269  0E78  0025               	movlb	5	; select bank5
  2270  0E79  1593               	bsf	19,3	;volatile
  2271                           
  2272                           ;main.c: 105: CCP1M2 = 0;
  2273  0E7A  1113               	bcf	19,2	;volatile
  2274                           
  2275                           ;main.c: 106: CCP1M1 = 1;
  2276  0E7B  1493               	bsf	19,1	;volatile
  2277                           
  2278                           ;main.c: 107: CCP1M1 = 0;
  2279  0E7C  1093               	bcf	19,1	;volatile
  2280                           
  2281                           ;main.c: 111: DACOE = 1;
  2282  0E7D  0022               	movlb	2	; select bank2
  2283  0E7E  1698               	bsf	24,5	;volatile
  2284                           
  2285                           ;main.c: 112: DACPSS1 = 0;
  2286  0E7F  1198               	bcf	24,3	;volatile
  2287                           
  2288                           ;main.c: 113: DACPSS0 = 0;
  2289  0E80  1118               	bcf	24,2	;volatile
  2290                           
  2291                           ;main.c: 114: DACNSS = 0;
  2292  0E81  1018               	bcf	24,0	;volatile
  2293                           
  2294                           ;main.c: 119: ANSA1 = 1;
  2295  0E82  0023               	movlb	3	; select bank3
  2296  0E83  148C               	bsf	12,1	;volatile
  2297                           
  2298                           ;main.c: 120: ADCON0 &= 0b10000011;
  2299  0E84  3083               	movlw	131
  2300  0E85  0020               	movlb	0	; select bank0
  2301  0E86  00A0               	movwf	??_System_Start
  2302  0E87  0820               	movf	??_System_Start,w
  2303  0E88  0021               	movlb	1	; select bank1
  2304  0E89  059D               	andwf	29,f	;volatile
  2305                           
  2306                           ;main.c: 121: ADCON0 |= 0b00000100;
  2307  0E8A  151D               	bsf	29,2	;volatile
  2308                           
  2309                           ;main.c: 122: ADNREF = 0;
  2310  0E8B  111E               	bcf	30,2	;volatile
  2311                           
  2312                           ;main.c: 123: ADPREF1 = 0;
  2313  0E8C  109E               	bcf	30,1	;volatile
  2314                           
  2315                           ;main.c: 124: ADPREF0 = 0;
  2316  0E8D  101E               	bcf	30,0	;volatile
  2317                           
  2318                           ;main.c: 125: ADCS2 = 1;
  2319  0E8E  171E               	bsf	30,6	;volatile
  2320                           
  2321                           ;main.c: 126: ADCS1 = 1;
  2322  0E8F  169E               	bsf	30,5	;volatile
  2323                           
  2324                           ;main.c: 127: ADCS0 = 0;
  2325  0E90  121E               	bcf	30,4	;volatile
  2326                           
  2327                           ;main.c: 128: ADFM = 1;
  2328  0E91  179E               	bsf	30,7	;volatile
  2329                           
  2330                           ;main.c: 133: TMR0IF = 0;
  2331  0E92  110B               	bcf	11,2	;volatile
  2332                           
  2333                           ;main.c: 134: TMR1IF = 0;
  2334  0E93  0020               	movlb	0	; select bank0
  2335  0E94  1011               	bcf	17,0	;volatile
  2336                           
  2337                           ;main.c: 135: CCP1IF = 0;
  2338  0E95  1111               	bcf	17,2	;volatile
  2339                           
  2340                           ;main.c: 136: ADIF = 0;
  2341  0E96  1311               	bcf	17,6	;volatile
  2342                           
  2343                           ;main.c: 140: SSPEN = 1;
  2344  0E97  0024               	movlb	4	; select bank4
  2345  0E98  1695               	bsf	21,5	;volatile
  2346                           
  2347                           ;main.c: 141: SSPM3 = 0;
  2348  0E99  1195               	bcf	21,3	;volatile
  2349                           
  2350                           ;main.c: 142: SSPM2 = 1;
  2351  0E9A  1515               	bsf	21,2	;volatile
  2352                           
  2353                           ;main.c: 143: SSPM1 = 1;
  2354  0E9B  1495               	bsf	21,1	;volatile
  2355                           
  2356                           ;main.c: 144: SSPM0 = 0;
  2357  0E9C  1015               	bcf	21,0	;volatile
  2358                           
  2359                           ;main.c: 145: GCEN = 0;
  2360  0E9D  1396               	bcf	22,7	;volatile
  2361                           
  2362                           ;main.c: 146: ACKDT = 0;
  2363  0E9E  1296               	bcf	22,5	;volatile
  2364                           
  2365                           ;main.c: 147: SEN = 1;
  2366  0E9F  1416               	bsf	22,0	;volatile
  2367                           
  2368                           ;main.c: 148: SSP1ADD = 0x60;
  2369  0EA0  3060               	movlw	96
  2370  0EA1  0092               	movwf	18	;volatile
  2371                           
  2372                           ;main.c: 149: SSPMSK |= 0b11111110;
  2373  0EA2  30FE               	movlw	254
  2374  0EA3  0020               	movlb	0	; select bank0
  2375  0EA4  00A0               	movwf	??_System_Start
  2376  0EA5  0820               	movf	??_System_Start,w
  2377  0EA6  0024               	movlb	4	; select bank4
  2378  0EA7  0493               	iorwf	19,f	;volatile
  2379                           
  2380                           ;main.c: 150: PCIE = 0;
  2381  0EA8  1317               	bcf	23,6	;volatile
  2382                           
  2383                           ;main.c: 151: SCIE = 0;
  2384  0EA9  1297               	bcf	23,5	;volatile
  2385                           
  2386                           ;main.c: 152: BOEN = 0;
  2387  0EAA  1217               	bcf	23,4	;volatile
  2388                           
  2389                           ;main.c: 153: AHEN = 0;
  2390  0EAB  1097               	bcf	23,1	;volatile
  2391                           
  2392                           ;main.c: 154: DHEN = 0;
  2393  0EAC  1017               	bcf	23,0	;volatile
  2394                           
  2395                           ;main.c: 155: SBCDE = 0;
  2396  0EAD  1117               	bcf	23,2	;volatile
  2397                           
  2398                           ;main.c: 156: SSP1IF = 0;
  2399  0EAE  0020               	movlb	0	; select bank0
  2400  0EAF  1191               	bcf	17,3	;volatile
  2401                           
  2402                           ;main.c: 157: SSP1IE = 1;
  2403  0EB0  0021               	movlb	1	; select bank1
  2404  0EB1  1591               	bsf	17,3	;volatile
  2405                           
  2406                           ;main.c: 161: INTCON |= 0xC0;
  2407  0EB2  30C0               	movlw	192
  2408  0EB3  0020               	movlb	0	; select bank0
  2409  0EB4  00A0               	movwf	??_System_Start
  2410  0EB5  0820               	movf	??_System_Start,w
  2411  0EB6  048B               	iorwf	11,f	;volatile
  2412  0EB7  0008               	return
  2413  0EB8                     __end_of_System_Start:	
  2414                           
  2415                           	psect	text3
  2416  0C0D                     __ptext3:	
  2417 ;; *************** function _Ptt_Off *****************
  2418 ;; Defined at:
  2419 ;;		line 352 in file "adf7012.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;		None               void
  2426 ;; Registers used:
  2427 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    9
  2440 ;; This function calls:
  2441 ;;		_Adf_Write_Register_Three
  2442 ;;		_Adf_Write_Register_Two
  2443 ;;		_Delay_ms
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _Ptt_Off
  2451  0C0D                     _Ptt_Off:	
  2452                           
  2453                           ;adf7012.c: 354: PORTCbits.RC3 = 1;;
  2454                           
  2455                           ;incstack = 0
  2456                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2457  0C0D  0020               	movlb	0	; select bank0
  2458  0C0E  158E               	bsf	14,3	;volatile
  2459                           
  2460                           ;adf7012.c: 355: adf_config.r3.pa_enable = 0;
  2461  0C0F  0022               	movlb	2	; select bank2
  2462  0C10  01BA               	clrf	(_adf_config^(0+256)+26)
  2463                           
  2464                           ;adf7012.c: 356: adf_config.r2.power_amplifier_level = 0;
  2465  0C11  01B2               	clrf	(_adf_config^(0+256)+18)
  2466                           
  2467                           ;adf7012.c: 359: Adf_Write_Register_Two();
  2468  0C12  3184  24C4  318C   	fcall	_Adf_Write_Register_Two
  2469                           
  2470                           ;adf7012.c: 360: Adf_Write_Register_Three();
  2471  0C15  3180  205A  318C   	fcall	_Adf_Write_Register_Three
  2472                           
  2473                           ;adf7012.c: 362: Delay_ms(10);
  2474  0C18  300A               	movlw	10
  2475  0C19  0020               	movlb	0	; select bank0
  2476  0C1A  00A0               	movwf	Delay_ms@time_to_delay
  2477  0C1B  3000               	movlw	0
  2478  0C1C  00A1               	movwf	Delay_ms@time_to_delay+1
  2479  0C1D  318C  2484         	fcall	_Delay_ms
  2480  0C1F  0008               	return
  2481  0C20                     __end_of_Ptt_Off:	
  2482                           
  2483                           	psect	text4
  2484  0B76                     __ptext4:	
  2485 ;; *************** function _Modem_Setup *****************
  2486 ;; Defined at:
  2487 ;;		line 53 in file "audio_tone.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;		None               void
  2494 ;; Registers used:
  2495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;Total ram usage:        0 bytes
  2506 ;; Hardware stack levels used:    1
  2507 ;; Hardware stack levels required when called:   11
  2508 ;; This function calls:
  2509 ;;		_Configure_Audio
  2510 ;;		_Radio_Setup
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           
  2517                           ;psect for function _Modem_Setup
  2518  0B76                     _Modem_Setup:	
  2519                           
  2520                           ;audio_tone.c: 55: Configure_Audio();
  2521                           
  2522                           ;incstack = 0
  2523                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2524  0B76  318C  2435  318B   	fcall	_Configure_Audio
  2525                           
  2526                           ;audio_tone.c: 56: Radio_Setup();
  2527  0B79  318B  23AE         	fcall	_Radio_Setup
  2528  0B7B  0008               	return
  2529  0B7C                     __end_of_Modem_Setup:	
  2530                           
  2531                           	psect	text5
  2532  0BAE                     __ptext5:	
  2533 ;; *************** function _Radio_Setup *****************
  2534 ;; Defined at:
  2535 ;;		line 305 in file "adf7012.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;		None
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;		None
  2540 ;; Return value:  Size  Location     Type
  2541 ;;		None               void
  2542 ;; Registers used:
  2543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;Total ram usage:        0 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:   10
  2556 ;; This function calls:
  2557 ;;		_Adf_Reset_Config
  2558 ;;		_Adf_Write_Config
  2559 ;;		_Delay_ms
  2560 ;; This function is called by:
  2561 ;;		_Modem_Setup
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           
  2566                           ;psect for function _Radio_Setup
  2567  0BAE                     _Radio_Setup:	
  2568                           
  2569                           ;adf7012.c: 308: Adf_Reset_Config();
  2570                           
  2571                           ;incstack = 0
  2572                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2573  0BAE  318B  23BC  318B   	fcall	_Adf_Reset_Config
  2574                           
  2575                           ;adf7012.c: 310: Adf_Write_Config();
  2576  0BB1  318B  23A2  318B   	fcall	_Adf_Write_Config
  2577                           
  2578                           ;adf7012.c: 312: Delay_ms(10);
  2579  0BB4  300A               	movlw	10
  2580  0BB5  0020               	movlb	0	; select bank0
  2581  0BB6  00A0               	movwf	Delay_ms@time_to_delay
  2582  0BB7  3000               	movlw	0
  2583  0BB8  00A1               	movwf	Delay_ms@time_to_delay+1
  2584  0BB9  318C  2484         	fcall	_Delay_ms
  2585  0BBB  0008               	return
  2586  0BBC                     __end_of_Radio_Setup:	
  2587                           
  2588                           	psect	text6
  2589  0BA2                     __ptext6:	
  2590 ;; *************** function _Adf_Write_Config *****************
  2591 ;; Defined at:
  2592 ;;		line 150 in file "adf7012.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;		None
  2597 ;; Return value:  Size  Location     Type
  2598 ;;		None               void
  2599 ;; Registers used:
  2600 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;Total ram usage:        0 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    9
  2613 ;; This function calls:
  2614 ;;		_Adf_Write_Register_One
  2615 ;;		_Adf_Write_Register_Three
  2616 ;;		_Adf_Write_Register_Two
  2617 ;;		_Adf_Write_Register_Zero
  2618 ;; This function is called by:
  2619 ;;		_Radio_Setup
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           
  2624                           ;psect for function _Adf_Write_Config
  2625  0BA2                     _Adf_Write_Config:	
  2626                           
  2627                           ;adf7012.c: 151: Adf_Write_Register_Zero();
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2631  0BA2  3182  229E  318B   	fcall	_Adf_Write_Register_Zero
  2632                           
  2633                           ;adf7012.c: 152: Adf_Write_Register_One();
  2634  0BA5  318F  2715  318B   	fcall	_Adf_Write_Register_One
  2635                           
  2636                           ;adf7012.c: 153: Adf_Write_Register_Two();
  2637  0BA8  3184  24C4  318B   	fcall	_Adf_Write_Register_Two
  2638                           
  2639                           ;adf7012.c: 154: Adf_Write_Register_Three();
  2640  0BAB  3180  205A         	fcall	_Adf_Write_Register_Three
  2641  0BAD  0008               	return
  2642  0BAE                     __end_of_Adf_Write_Config:	
  2643                           
  2644                           	psect	text7
  2645  0F15                     __ptext7:	
  2646 ;; *************** function _Adf_Write_Register_One *****************
  2647 ;; Defined at:
  2648 ;;		line 176 in file "adf7012.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  reg             4   31[BANK0 ] unsigned long 
  2653 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  2654 ;; Return value:  Size  Location     Type
  2655 ;;		None               void
  2656 ;; Registers used:
  2657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2664 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2665 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2667 ;;Total ram usage:       19 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    8
  2670 ;; This function calls:
  2671 ;;		_Reverse_Array
  2672 ;;		_Write_Adf7012_Reg
  2673 ;;		_memcpy
  2674 ;; This function is called by:
  2675 ;;		_Adf_Write_Config
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _Adf_Write_Register_One
  2681  0F15                     _Adf_Write_Register_One:	
  2682                           
  2683                           ;adf7012.c: 177: uint32_t reg =
  2684                           ;adf7012.c: 178: (1) |
  2685                           ;adf7012.c: 179: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  2686                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  2687                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  2688                           
  2689                           ;incstack = 0
  2690                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  2691  0F15  0022               	movlb	2	; select bank2
  2692  0F16  082F               	movf	(_adf_config^(0+256)+15),w
  2693  0F17  3901               	andlw	1
  2694  0F18  0020               	movlb	0	; select bank0
  2695  0F19  00B3               	movwf	??_Adf_Write_Register_One
  2696  0F1A  01B4               	clrf	??_Adf_Write_Register_One+1
  2697  0F1B  01B5               	clrf	??_Adf_Write_Register_One+2
  2698  0F1C  01B6               	clrf	??_Adf_Write_Register_One+3
  2699  0F1D  3016               	movlw	22
  2700  0F1E                     u1295:	
  2701  0F1E  35B3               	lslf	??_Adf_Write_Register_One,f
  2702  0F1F  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  2703  0F20  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  2704  0F21  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  2705  0F22  0B89               	decfsz	9,f
  2706  0F23  2F1E               	goto	u1295
  2707  0F24  0022               	movlb	2	; select bank2
  2708  0F25  082E               	movf	(_adf_config^(0+256)+14),w
  2709  0F26  0020               	movlb	0	; select bank0
  2710  0F27  00B7               	movwf	??_Adf_Write_Register_One+4
  2711  0F28  01B8               	clrf	??_Adf_Write_Register_One+5
  2712  0F29  01B9               	clrf	??_Adf_Write_Register_One+6
  2713  0F2A  01BA               	clrf	??_Adf_Write_Register_One+7
  2714  0F2B  300E               	movlw	14
  2715  0F2C                     u1305:	
  2716  0F2C  35B7               	lslf	??_Adf_Write_Register_One+4,f
  2717  0F2D  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  2718  0F2E  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  2719  0F2F  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  2720  0F30  0B89               	decfsz	9,f
  2721  0F31  2F2C               	goto	u1305
  2722  0F32  300A               	movlw	10
  2723  0F33  3E20               	addlw	_adf_config& (0+255)
  2724  0F34  0086               	movwf	6
  2725  0F35  3001               	movlw	1	; select bank2/3
  2726  0F36  0087               	movwf	7
  2727  0F37  30FF               	movlw	255
  2728  0F38  0501               	andwf	1,w
  2729  0F39  00BB               	movwf	??_Adf_Write_Register_One+8
  2730  0F3A  3141               	addfsr 1,1
  2731  0F3B  300F               	movlw	15
  2732  0F3C  0501               	andwf	1,w
  2733  0F3D  00BC               	movwf	??_Adf_Write_Register_One+9
  2734  0F3E  3141               	addfsr 1,1
  2735  0F3F  3000               	movlw	0
  2736  0F40  0501               	andwf	1,w
  2737  0F41  00BD               	movwf	??_Adf_Write_Register_One+10
  2738  0F42  3141               	addfsr 1,1
  2739  0F43  3000               	movlw	0
  2740  0F44  0501               	andwf	1,w
  2741  0F45  00BE               	movwf	??_Adf_Write_Register_One+11
  2742  0F46  3002               	movlw	2
  2743  0F47                     u1315:	
  2744  0F47  35BB               	lslf	??_Adf_Write_Register_One+8,f
  2745  0F48  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  2746  0F49  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  2747  0F4A  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  2748  0F4B  0B89               	decfsz	9,f
  2749  0F4C  2F47               	goto	u1315
  2750  0F4D  083B               	movf	??_Adf_Write_Register_One+8,w
  2751  0F4E  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  2752  0F4F  083C               	movf	??_Adf_Write_Register_One+9,w
  2753  0F50  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  2754  0F51  083D               	movf	??_Adf_Write_Register_One+10,w
  2755  0F52  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  2756  0F53  083E               	movf	??_Adf_Write_Register_One+11,w
  2757  0F54  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  2758  0F55  0837               	movf	??_Adf_Write_Register_One+4,w
  2759  0F56  04B3               	iorwf	??_Adf_Write_Register_One,f
  2760  0F57  0838               	movf	??_Adf_Write_Register_One+5,w
  2761  0F58  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  2762  0F59  0839               	movf	??_Adf_Write_Register_One+6,w
  2763  0F5A  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  2764  0F5B  083A               	movf	??_Adf_Write_Register_One+7,w
  2765  0F5C  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  2766  0F5D  3001               	movlw	1
  2767  0F5E  0433               	iorwf	??_Adf_Write_Register_One,w
  2768  0F5F  00BF               	movwf	Adf_Write_Register_One@reg
  2769  0F60  3000               	movlw	0
  2770  0F61  0434               	iorwf	??_Adf_Write_Register_One+1,w
  2771  0F62  00C0               	movwf	Adf_Write_Register_One@reg+1
  2772  0F63  3000               	movlw	0
  2773  0F64  0435               	iorwf	??_Adf_Write_Register_One+2,w
  2774  0F65  00C1               	movwf	Adf_Write_Register_One@reg+2
  2775  0F66  3000               	movlw	0
  2776  0F67  0436               	iorwf	??_Adf_Write_Register_One+3,w
  2777  0F68  00C2               	movwf	Adf_Write_Register_One@reg+3
  2778                           
  2779                           ;adf7012.c: 183: uint8_t reg_ptr[3];
  2780                           ;adf7012.c: 184: memcpy(reg_ptr, &reg, 3);
  2781  0F69  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  2782  0F6A  00B3               	movwf	??_Adf_Write_Register_One
  2783  0F6B  0833               	movf	??_Adf_Write_Register_One,w
  2784  0F6C  00A0               	movwf	memcpy@s1
  2785  0F6D  3003               	movlw	3
  2786  0F6E  00A1               	movwf	memcpy@n
  2787  0F6F  3000               	movlw	0
  2788  0F70  00A2               	movwf	memcpy@n+1
  2789  0F71  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2790  0F72  318C  24CA  318F   	fcall	_memcpy
  2791                           
  2792                           ;adf7012.c: 185: Reverse_Array(reg_ptr,3);
  2793  0F75  3003               	movlw	3
  2794  0F76  0020               	movlb	0	; select bank0
  2795  0F77  00B3               	movwf	??_Adf_Write_Register_One
  2796  0F78  0833               	movf	??_Adf_Write_Register_One,w
  2797  0F79  00A7               	movwf	Reverse_Array@length
  2798  0F7A  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2799  0F7B  318E  261D  318F   	fcall	_Reverse_Array
  2800                           
  2801                           ;adf7012.c: 186: Write_Adf7012_Reg(reg_ptr, 3);
  2802  0F7E  3003               	movlw	3
  2803  0F7F  0020               	movlb	0	; select bank0
  2804  0F80  00B3               	movwf	??_Adf_Write_Register_One
  2805  0F81  0833               	movf	??_Adf_Write_Register_One,w
  2806  0F82  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  2807  0F83  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  2808  0F84  318D  25A8         	fcall	_Write_Adf7012_Reg
  2809  0F86  0008               	return
  2810  0F87                     __end_of_Adf_Write_Register_One:	
  2811                           
  2812                           	psect	text8
  2813  0BBC                     __ptext8:	
  2814 ;; *************** function _Adf_Reset_Config *****************
  2815 ;; Defined at:
  2816 ;;		line 84 in file "adf7012.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;		None               void
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;Total ram usage:        0 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    7
  2837 ;; This function calls:
  2838 ;;		_Adf_Reset
  2839 ;;		_Adf_Reset_Register_One
  2840 ;;		_Adf_Reset_Register_Three
  2841 ;;		_Adf_Reset_Register_Two
  2842 ;;		_Adf_Reset_Register_Zero
  2843 ;; This function is called by:
  2844 ;;		_Radio_Setup
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _Adf_Reset_Config
  2850  0BBC                     _Adf_Reset_Config:	
  2851                           
  2852                           ;adf7012.c: 87: Adf_Reset_Register_Zero();
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  2856  0BBC  3183  23E1  318B   	fcall	_Adf_Reset_Register_Zero
  2857                           
  2858                           ;adf7012.c: 88: Adf_Reset_Register_One();
  2859  0BBF  318B  23EA  318B   	fcall	_Adf_Reset_Register_One
  2860                           
  2861                           ;adf7012.c: 89: Adf_Reset_Register_Two();
  2862  0BC2  3187  27E7  318B   	fcall	_Adf_Reset_Register_Two
  2863                           
  2864                           ;adf7012.c: 90: Adf_Reset_Register_Three();
  2865  0BC5  318C  24A4  318B   	fcall	_Adf_Reset_Register_Three
  2866                           
  2867                           ;adf7012.c: 92: Adf_Reset();
  2868  0BC8  318B  23FB         	fcall	_Adf_Reset
  2869  0BCA  0008               	return
  2870  0BCB                     __end_of_Adf_Reset_Config:	
  2871                           
  2872                           	psect	text9
  2873  03E1                     __ptext9:	
  2874 ;; *************** function _Adf_Reset_Register_Zero *****************
  2875 ;; Defined at:
  2876 ;;		line 96 in file "adf7012.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;		None               void
  2883 ;; Registers used:
  2884 ;;		wreg, status,2
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2892 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2893 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2894 ;;Total ram usage:        1 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    4
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_Adf_Reset_Config
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _Adf_Reset_Register_Zero
  2906  03E1                     _Adf_Reset_Register_Zero:	
  2907                           
  2908                           ;adf7012.c: 97: adf_config.r0.frequency_error_correction = 0;
  2909                           
  2910                           ;incstack = 0
  2911                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  2912  03E1  3000               	movlw	0
  2913  03E2  0022               	movlb	2	; select bank2
  2914  03E3  00A3               	movwf	(_adf_config+3)^(0+256)
  2915  03E4  3000               	movlw	0
  2916  03E5  00A2               	movwf	(_adf_config+2)^(0+256)
  2917  03E6  3000               	movlw	0
  2918  03E7  00A1               	movwf	(_adf_config+1)^(0+256)
  2919  03E8  3000               	movlw	0
  2920  03E9  00A0               	movwf	_adf_config^(0+256)
  2921                           
  2922                           ;adf7012.c: 98: adf_config.r0.r_divider = 15;
  2923  03EA  300F               	movlw	15
  2924  03EB  0020               	movlb	0	; select bank0
  2925  03EC  00A0               	movwf	??_Adf_Reset_Register_Zero
  2926  03ED  0820               	movf	??_Adf_Reset_Register_Zero,w
  2927  03EE  0022               	movlb	2	; select bank2
  2928  03EF  00A4               	movwf	(_adf_config^(0+256)+4)
  2929                           
  2930                           ;adf7012.c: 99: adf_config.r0.crystal_doubler = 0;
  2931  03F0  01A5               	clrf	(_adf_config^(0+256)+5)
  2932                           
  2933                           ;adf7012.c: 100: adf_config.r0.crystal_oscillator_disable = 0;
  2934  03F1  01A6               	clrf	(_adf_config^(0+256)+6)
  2935                           
  2936                           ;adf7012.c: 101: adf_config.r0.clock_out_divider = 2;
  2937  03F2  3002               	movlw	2
  2938  03F3  0020               	movlb	0	; select bank0
  2939  03F4  00A0               	movwf	??_Adf_Reset_Register_Zero
  2940  03F5  0820               	movf	??_Adf_Reset_Register_Zero,w
  2941  03F6  0022               	movlb	2	; select bank2
  2942  03F7  00A7               	movwf	(_adf_config^(0+256)+7)
  2943                           
  2944                           ;adf7012.c: 102: adf_config.r0.vco_adjust = 0;
  2945  03F8  01A8               	clrf	(_adf_config^(0+256)+8)
  2946                           
  2947                           ;adf7012.c: 103: adf_config.r0.output_divider = 2;
  2948  03F9  3002               	movlw	2
  2949  03FA  0020               	movlb	0	; select bank0
  2950  03FB  00A0               	movwf	??_Adf_Reset_Register_Zero
  2951  03FC  0820               	movf	??_Adf_Reset_Register_Zero,w
  2952  03FD  0022               	movlb	2	; select bank2
  2953  03FE  00A9               	movwf	(_adf_config^(0+256)+9)
  2954  03FF  0008               	return
  2955  0400                     __end_of_Adf_Reset_Register_Zero:	
  2956                           
  2957                           	psect	text10
  2958  07E7                     __ptext10:	
  2959 ;; *************** function _Adf_Reset_Register_Two *****************
  2960 ;; Defined at:
  2961 ;;		line 112 in file "adf7012.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;		None               void
  2968 ;; Registers used:
  2969 ;;		wreg, status,2
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2978 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2979 ;;Total ram usage:        1 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    4
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_Adf_Reset_Config
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function _Adf_Reset_Register_Two
  2991  07E7                     _Adf_Reset_Register_Two:	
  2992                           
  2993                           ;adf7012.c: 113: adf_config.r2.mod_control = 3;
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  2997  07E7  3003               	movlw	3
  2998  07E8  0020               	movlb	0	; select bank0
  2999  07E9  00A0               	movwf	??_Adf_Reset_Register_Two
  3000  07EA  0820               	movf	??_Adf_Reset_Register_Two,w
  3001  07EB  0022               	movlb	2	; select bank2
  3002  07EC  00B0               	movwf	(_adf_config^(0+256)+16)
  3003                           
  3004                           ;adf7012.c: 114: adf_config.r2.gook = 0;
  3005  07ED  01B1               	clrf	(_adf_config^(0+256)+17)
  3006                           
  3007                           ;adf7012.c: 115: adf_config.r2.power_amplifier_level = 15;
  3008  07EE  300F               	movlw	15
  3009  07EF  0020               	movlb	0	; select bank0
  3010  07F0  00A0               	movwf	??_Adf_Reset_Register_Two
  3011  07F1  0820               	movf	??_Adf_Reset_Register_Two,w
  3012  07F2  0022               	movlb	2	; select bank2
  3013  07F3  00B2               	movwf	(_adf_config^(0+256)+18)
  3014                           
  3015                           ;adf7012.c: 116: adf_config.r2.modulation_deviation = 16;
  3016  07F4  3000               	movlw	0
  3017  07F5  00B6               	movwf	((_adf_config+3)^(0+256)+19)
  3018  07F6  3000               	movlw	0
  3019  07F7  00B5               	movwf	((_adf_config+2)^(0+256)+19)
  3020  07F8  3000               	movlw	0
  3021  07F9  00B4               	movwf	((_adf_config+1)^(0+256)+19)
  3022  07FA  3010               	movlw	16
  3023  07FB  00B3               	movwf	(_adf_config^(0+256)+19)
  3024                           
  3025                           ;adf7012.c: 117: adf_config.r2.gfsk_modulation_control = 0;
  3026  07FC  01B7               	clrf	(_adf_config^(0+256)+23)
  3027                           
  3028                           ;adf7012.c: 118: adf_config.r2.index_counter = 0;
  3029  07FD  01B8               	clrf	(_adf_config^(0+256)+24)
  3030  07FE  0008               	return
  3031  07FF                     __end_of_Adf_Reset_Register_Two:	
  3032                           
  3033                           	psect	text11
  3034  0CA4                     __ptext11:	
  3035 ;; *************** function _Adf_Reset_Register_Three *****************
  3036 ;; Defined at:
  3037 ;;		line 121 in file "adf7012.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;		None               void
  3044 ;; Registers used:
  3045 ;;		wreg, status,2
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3054 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3055 ;;Total ram usage:        1 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:    4
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_Adf_Reset_Config
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           
  3066                           ;psect for function _Adf_Reset_Register_Three
  3067  0CA4                     _Adf_Reset_Register_Three:	
  3068                           
  3069                           ;adf7012.c: 122: adf_config.r3.pll_enable = 0;
  3070                           
  3071                           ;incstack = 0
  3072                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  3073  0CA4  0022               	movlb	2	; select bank2
  3074  0CA5  01B9               	clrf	(_adf_config^(0+256)+25)
  3075                           
  3076                           ;adf7012.c: 123: adf_config.r3.pa_enable = 0;
  3077  0CA6  01BA               	clrf	(_adf_config^(0+256)+26)
  3078                           
  3079                           ;adf7012.c: 124: adf_config.r3.clkout_enable = 1;
  3080  0CA7  01BB               	clrf	(_adf_config^(0+256)+27)
  3081  0CA8  0ABB               	incf	(_adf_config^(0+256)+27),f
  3082                           
  3083                           ;adf7012.c: 125: adf_config.r3.data_invert = 1;
  3084  0CA9  01BC               	clrf	(_adf_config^(0+256)+28)
  3085  0CAA  0ABC               	incf	(_adf_config^(0+256)+28),f
  3086                           
  3087                           ;adf7012.c: 126: adf_config.r3.charge_pump_current = 3;
  3088  0CAB  3003               	movlw	3
  3089  0CAC  0020               	movlb	0	; select bank0
  3090  0CAD  00A0               	movwf	??_Adf_Reset_Register_Three
  3091  0CAE  0820               	movf	??_Adf_Reset_Register_Three,w
  3092  0CAF  0022               	movlb	2	; select bank2
  3093  0CB0  00BD               	movwf	(_adf_config^(0+256)+29)
  3094                           
  3095                           ;adf7012.c: 127: adf_config.r3.bleed_up = 0;
  3096  0CB1  01BE               	clrf	(_adf_config^(0+256)+30)
  3097                           
  3098                           ;adf7012.c: 128: adf_config.r3.bleed_down = 0;
  3099  0CB2  01BF               	clrf	(_adf_config^(0+256)+31)
  3100                           
  3101                           ;adf7012.c: 129: adf_config.r3.vco_disable = 0;
  3102  0CB3  01C0               	clrf	(_adf_config^(0+256)+32)
  3103                           
  3104                           ;adf7012.c: 131: adf_config.r3.muxout = 3;
  3105  0CB4  3003               	movlw	3
  3106  0CB5  0020               	movlb	0	; select bank0
  3107  0CB6  00A0               	movwf	??_Adf_Reset_Register_Three
  3108  0CB7  0820               	movf	??_Adf_Reset_Register_Three,w
  3109  0CB8  0022               	movlb	2	; select bank2
  3110  0CB9  00C1               	movwf	(_adf_config^(0+256)+33)
  3111                           
  3112                           ;adf7012.c: 133: adf_config.r3.ld_precision = 0;
  3113  0CBA  01C2               	clrf	(_adf_config^(0+256)+34)
  3114                           
  3115                           ;adf7012.c: 134: adf_config.r3.vco_bias = 6;
  3116  0CBB  3006               	movlw	6
  3117  0CBC  0020               	movlb	0	; select bank0
  3118  0CBD  00A0               	movwf	??_Adf_Reset_Register_Three
  3119  0CBE  0820               	movf	??_Adf_Reset_Register_Three,w
  3120  0CBF  0022               	movlb	2	; select bank2
  3121  0CC0  00C3               	movwf	(_adf_config^(0+256)+35)
  3122                           
  3123                           ;adf7012.c: 135: adf_config.r3.pa_bias = 4;
  3124  0CC1  3004               	movlw	4
  3125  0CC2  0020               	movlb	0	; select bank0
  3126  0CC3  00A0               	movwf	??_Adf_Reset_Register_Three
  3127  0CC4  0820               	movf	??_Adf_Reset_Register_Three,w
  3128  0CC5  0022               	movlb	2	; select bank2
  3129  0CC6  00C4               	movwf	(_adf_config^(0+256)+36)
  3130                           
  3131                           ;adf7012.c: 136: adf_config.r3.pll_test_mode = 0;
  3132  0CC7  01C5               	clrf	(_adf_config^(0+256)+37)
  3133                           
  3134                           ;adf7012.c: 137: adf_config.r3.sd_test_mode = 0;
  3135  0CC8  01C6               	clrf	(_adf_config^(0+256)+38)
  3136  0CC9  0008               	return
  3137  0CCA                     __end_of_Adf_Reset_Register_Three:	
  3138                           
  3139                           	psect	text12
  3140  0BEA                     __ptext12:	
  3141 ;; *************** function _Adf_Reset_Register_One *****************
  3142 ;; Defined at:
  3143 ;;		line 106 in file "adf7012.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;		None               void
  3150 ;; Registers used:
  3151 ;;		wreg
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3159 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;Total ram usage:        1 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    4
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_Adf_Reset_Config
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           
  3172                           ;psect for function _Adf_Reset_Register_One
  3173  0BEA                     _Adf_Reset_Register_One:	
  3174                           
  3175                           ;adf7012.c: 107: adf_config.r1.integer_n = 109;
  3176                           
  3177                           ;incstack = 0
  3178                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  3179  0BEA  306D               	movlw	109
  3180  0BEB  0020               	movlb	0	; select bank0
  3181  0BEC  00A0               	movwf	??_Adf_Reset_Register_One
  3182  0BED  0820               	movf	??_Adf_Reset_Register_One,w
  3183  0BEE  0022               	movlb	2	; select bank2
  3184  0BEF  00AE               	movwf	(_adf_config^(0+256)+14)
  3185                           
  3186                           ;adf7012.c: 108: adf_config.r1.fractional_n = 0;
  3187  0BF0  3000               	movlw	0
  3188  0BF1  00AD               	movwf	((_adf_config+3)^(0+256)+10)
  3189  0BF2  3000               	movlw	0
  3190  0BF3  00AC               	movwf	((_adf_config+2)^(0+256)+10)
  3191  0BF4  3000               	movlw	0
  3192  0BF5  00AB               	movwf	((_adf_config+1)^(0+256)+10)
  3193  0BF6  3000               	movlw	0
  3194  0BF7  00AA               	movwf	(_adf_config^(0+256)+10)
  3195                           
  3196                           ;adf7012.c: 109: adf_config.r1.prescaler = 1;
  3197  0BF8  01AF               	clrf	(_adf_config^(0+256)+15)
  3198  0BF9  0AAF               	incf	(_adf_config^(0+256)+15),f
  3199  0BFA  0008               	return
  3200  0BFB                     __end_of_Adf_Reset_Register_One:	
  3201                           
  3202                           	psect	text13
  3203  0BFB                     __ptext13:	
  3204 ;; *************** function _Adf_Reset *****************
  3205 ;; Defined at:
  3206 ;;		line 140 in file "adf7012.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;		None
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;		None               void
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0, pclath, cstack
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3224 ;;Total ram usage:        0 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    6
  3227 ;; This function calls:
  3228 ;;		_Delay_ms
  3229 ;; This function is called by:
  3230 ;;		_Adf_Reset_Config
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function _Adf_Reset
  3236  0BFB                     _Adf_Reset:	
  3237                           
  3238                           ;adf7012.c: 142: PORTAbits.RA5 = 0;;
  3239                           
  3240                           ;incstack = 0
  3241                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  3242  0BFB  0020               	movlb	0	; select bank0
  3243  0BFC  128C               	bcf	12,5	;volatile
  3244                           
  3245                           ;adf7012.c: 143: Delay_ms(10);
  3246  0BFD  300A               	movlw	10
  3247  0BFE  00A0               	movwf	Delay_ms@time_to_delay
  3248  0BFF  3000               	movlw	0
  3249  0C00  00A1               	movwf	Delay_ms@time_to_delay+1
  3250  0C01  318C  2484  318B   	fcall	_Delay_ms
  3251                           
  3252                           ;adf7012.c: 144: PORTAbits.RA5 = 1;;
  3253  0C04  0020               	movlb	0	; select bank0
  3254  0C05  168C               	bsf	12,5	;volatile
  3255                           
  3256                           ;adf7012.c: 145: Delay_ms(10);
  3257  0C06  300A               	movlw	10
  3258  0C07  00A0               	movwf	Delay_ms@time_to_delay
  3259  0C08  3000               	movlw	0
  3260  0C09  00A1               	movwf	Delay_ms@time_to_delay+1
  3261  0C0A  318C  2484         	fcall	_Delay_ms
  3262  0C0C  0008               	return
  3263  0C0D                     __end_of_Adf_Reset:	
  3264                           
  3265                           	psect	text14
  3266  0C35                     __ptext14:	
  3267 ;; *************** function _Configure_Audio *****************
  3268 ;; Defined at:
  3269 ;;		line 47 in file "audio_tone.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;		None               void
  3276 ;; Registers used:
  3277 ;;		wreg
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;Total ram usage:        1 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    4
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_Modem_Setup
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           
  3298                           ;psect for function _Configure_Audio
  3299  0C35                     _Configure_Audio:	
  3300                           
  3301                           ;audio_tone.c: 48: SAMPLES_PER_BAUD = 26;
  3302                           
  3303                           ;incstack = 0
  3304                           ; Regs used in _Configure_Audio: [wreg]
  3305  0C35  301A               	movlw	26
  3306  0C36  0020               	movlb	0	; select bank0
  3307  0C37  00A0               	movwf	??_Configure_Audio
  3308  0C38  0820               	movf	??_Configure_Audio,w
  3309  0C39  0021               	movlb	1	; select bank1
  3310  0C3A  00C1               	movwf	_SAMPLES_PER_BAUD^(0+128)
  3311                           
  3312                           ;audio_tone.c: 49: PHASE_DELTA_1200 = 7;
  3313  0C3B  3000               	movlw	0
  3314  0C3C  00AC               	movwf	(_PHASE_DELTA_1200+3)^(0+128)
  3315  0C3D  3000               	movlw	0
  3316  0C3E  00AB               	movwf	(_PHASE_DELTA_1200+2)^(0+128)
  3317  0C3F  3000               	movlw	0
  3318  0C40  00AA               	movwf	(_PHASE_DELTA_1200+1)^(0+128)
  3319  0C41  3007               	movlw	7
  3320  0C42  00A9               	movwf	_PHASE_DELTA_1200^(0+128)
  3321                           
  3322                           ;audio_tone.c: 50: PHASE_DELTA_2200 = 13;
  3323  0C43  3000               	movlw	0
  3324  0C44  00B0               	movwf	(_PHASE_DELTA_2200+3)^(0+128)
  3325  0C45  3000               	movlw	0
  3326  0C46  00AF               	movwf	(_PHASE_DELTA_2200+2)^(0+128)
  3327  0C47  3000               	movlw	0
  3328  0C48  00AE               	movwf	(_PHASE_DELTA_2200+1)^(0+128)
  3329  0C49  300D               	movlw	13
  3330  0C4A  00AD               	movwf	_PHASE_DELTA_2200^(0+128)
  3331  0C4B  0008               	return
  3332  0C4C                     __end_of_Configure_Audio:	
  3333                           
  3334                           	psect	text15
  3335  0D1D                     __ptext15:	
  3336 ;; *************** function _Modem_Flush_Frame *****************
  3337 ;; Defined at:
  3338 ;;		line 59 in file "audio_tone.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;		None
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;		None
  3343 ;; Return value:  Size  Location     Type
  3344 ;;		None               void
  3345 ;; Registers used:
  3346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3355 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3356 ;;Total ram usage:        1 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:   10
  3359 ;; This function calls:
  3360 ;;		_Delay_ms
  3361 ;;		_Ptt_On
  3362 ;;		_Timer0_Start
  3363 ;; This function is called by:
  3364 ;;		_main
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function _Modem_Flush_Frame
  3370  0D1D                     _Modem_Flush_Frame:	
  3371                           
  3372                           ;audio_tone.c: 61: phase_delta = PHASE_DELTA_1200;
  3373                           
  3374                           ;incstack = 0
  3375                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3376  0D1D  0021               	movlb	1	; select bank1
  3377  0D1E  0829               	movf	_PHASE_DELTA_1200^(0+128),w
  3378  0D1F  0020               	movlb	0	; select bank0
  3379  0D20  00EC               	movwf	??_Modem_Flush_Frame
  3380  0D21  086C               	movf	??_Modem_Flush_Frame,w
  3381  0D22  0021               	movlb	1	; select bank1
  3382  0D23  00C8               	movwf	_phase_delta^(0+128)
  3383                           
  3384                           ;audio_tone.c: 62: phase = 0;
  3385  0D24  0020               	movlb	0	; select bank0
  3386  0D25  01EF               	clrf	_phase
  3387                           
  3388                           ;audio_tone.c: 63: packet_pos = 0;
  3389  0D26  3000               	movlw	0
  3390  0D27  0021               	movlb	1	; select bank1
  3391  0D28  00B8               	movwf	(_packet_pos+3)^(0+128)
  3392  0D29  3000               	movlw	0
  3393  0D2A  00B7               	movwf	(_packet_pos+2)^(0+128)
  3394  0D2B  3000               	movlw	0
  3395  0D2C  00B6               	movwf	(_packet_pos+1)^(0+128)
  3396  0D2D  3000               	movlw	0
  3397  0D2E  00B5               	movwf	_packet_pos^(0+128)
  3398                           
  3399                           ;audio_tone.c: 64: current_sample_in_baud = 0;
  3400  0D2F  01C5               	clrf	_current_sample_in_baud^(0+128)
  3401                           
  3402                           ;audio_tone.c: 65: MODEM_TRANSMITTING = 1;
  3403  0D30  01BF               	clrf	_MODEM_TRANSMITTING^(0+128)
  3404  0D31  0ABF               	incf	_MODEM_TRANSMITTING^(0+128),f
  3405                           
  3406                           ;audio_tone.c: 67: PORTCbits.RC3 = 0;;
  3407  0D32  0020               	movlb	0	; select bank0
  3408  0D33  118E               	bcf	14,3	;volatile
  3409                           
  3410                           ;audio_tone.c: 68: Delay_ms(1);
  3411  0D34  3001               	movlw	1
  3412  0D35  00A0               	movwf	Delay_ms@time_to_delay
  3413  0D36  3000               	movlw	0
  3414  0D37  00A1               	movwf	Delay_ms@time_to_delay+1
  3415  0D38  318C  2484  318D   	fcall	_Delay_ms
  3416                           
  3417                           ;audio_tone.c: 78: Ptt_On();
  3418  0D3B  318D  25E1  318D   	fcall	_Ptt_On
  3419                           
  3420                           ;audio_tone.c: 80: Delay_ms(100);
  3421  0D3E  3064               	movlw	100
  3422  0D3F  0020               	movlb	0	; select bank0
  3423  0D40  00A0               	movwf	Delay_ms@time_to_delay
  3424  0D41  3000               	movlw	0
  3425  0D42  00A1               	movwf	Delay_ms@time_to_delay+1
  3426  0D43  318C  2484  318D   	fcall	_Delay_ms
  3427                           
  3428                           ;audio_tone.c: 81: Timer0_Start();
  3429  0D46  318B  2365         	fcall	_Timer0_Start
  3430  0D48  0008               	return
  3431  0D49                     __end_of_Modem_Flush_Frame:	
  3432                           
  3433                           	psect	text16
  3434  0B65                     __ptext16:	
  3435 ;; *************** function _Timer0_Start *****************
  3436 ;; Defined at:
  3437 ;;		line 244 in file "utility.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;		None               void
  3444 ;; Registers used:
  3445 ;;		status,2
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    4
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_Modem_Flush_Frame
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function _Timer0_Start
  3467  0B65                     _Timer0_Start:	
  3468                           
  3469                           ;utility.c: 245: TMR0 = 0x00;
  3470                           
  3471                           ;incstack = 0
  3472                           ; Regs used in _Timer0_Start: [status,2]
  3473  0B65  0020               	movlb	0	; select bank0
  3474  0B66  0195               	clrf	21	;volatile
  3475                           
  3476                           ;utility.c: 246: TMR0IF = 0;
  3477  0B67  110B               	bcf	11,2	;volatile
  3478                           
  3479                           ;utility.c: 247: TMR0IE = 1;
  3480  0B68  168B               	bsf	11,5	;volatile
  3481  0B69  0008               	return
  3482  0B6A                     __end_of_Timer0_Start:	
  3483                           
  3484                           	psect	text17
  3485  0DE1                     __ptext17:	
  3486 ;; *************** function _Ptt_On *****************
  3487 ;; Defined at:
  3488 ;;		line 316 in file "adf7012.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      unsigned char 
  3495 ;; Registers used:
  3496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3505 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3506 ;;Total ram usage:        1 bytes
  3507 ;; Hardware stack levels used:    1
  3508 ;; Hardware stack levels required when called:    9
  3509 ;; This function calls:
  3510 ;;		_Adf_Write_Register_Three
  3511 ;;		_Adf_Write_Register_Two
  3512 ;;		_Delay_ms
  3513 ;;		_Read_Adf7012_Muxout
  3514 ;; This function is called by:
  3515 ;;		_Modem_Flush_Frame
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           
  3520                           ;psect for function _Ptt_On
  3521  0DE1                     _Ptt_On:	
  3522                           
  3523                           ;adf7012.c: 318: adf_config.r3.pa_enable = 0;
  3524                           
  3525                           ;incstack = 0
  3526                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3527  0DE1  0022               	movlb	2	; select bank2
  3528  0DE2  01BA               	clrf	(_adf_config^(0+256)+26)
  3529                           
  3530                           ;adf7012.c: 319: adf_config.r2.power_amplifier_level = 0;
  3531  0DE3  01B2               	clrf	(_adf_config^(0+256)+18)
  3532                           
  3533                           ;adf7012.c: 320: adf_config.r3.muxout = 3;
  3534  0DE4  3003               	movlw	3
  3535  0DE5  0020               	movlb	0	; select bank0
  3536  0DE6  00EB               	movwf	??_Ptt_On
  3537  0DE7  086B               	movf	??_Ptt_On,w
  3538  0DE8  0022               	movlb	2	; select bank2
  3539  0DE9  00C1               	movwf	(_adf_config^(0+256)+33)
  3540                           
  3541                           ;adf7012.c: 323: Adf_Write_Register_Two();
  3542  0DEA  3184  24C4  318D   	fcall	_Adf_Write_Register_Two
  3543                           
  3544                           ;adf7012.c: 324: Adf_Write_Register_Three();
  3545  0DED  3180  205A  318D   	fcall	_Adf_Write_Register_Three
  3546                           
  3547                           ;adf7012.c: 326: Delay_ms(10);
  3548  0DF0  300A               	movlw	10
  3549  0DF1  0020               	movlb	0	; select bank0
  3550  0DF2  00A0               	movwf	Delay_ms@time_to_delay
  3551  0DF3  3000               	movlw	0
  3552  0DF4  00A1               	movwf	Delay_ms@time_to_delay+1
  3553  0DF5  318C  2484  318D   	fcall	_Delay_ms
  3554                           
  3555                           ;adf7012.c: 330: if (!Read_Adf7012_Muxout())
  3556  0DF8  318B  238F  318D   	fcall	_Read_Adf7012_Muxout
  3557  0DFB  3800               	iorlw	0
  3558  0DFC  1903               	btfsc	3,2
  3559  0DFD  0008               	return
  3560                           
  3561                           ;adf7012.c: 334: else
  3562                           ;adf7012.c: 335: {
  3563                           ;adf7012.c: 337: adf_config.r3.pa_enable = 1;
  3564                           
  3565                           ;adf7012.c: 333: }
  3566                           
  3567                           ;adf7012.c: 331: {
  3568                           ;adf7012.c: 332: return 0;
  3569                           ;	Return value of _Ptt_On is never used
  3570  0DFE  0022               	movlb	2	; select bank2
  3571  0DFF  01BA               	clrf	(_adf_config^(0+256)+26)
  3572  0E00  0ABA               	incf	(_adf_config^(0+256)+26),f
  3573                           
  3574                           ;adf7012.c: 338: adf_config.r2.power_amplifier_level = 63;
  3575  0E01  303F               	movlw	63
  3576  0E02  0020               	movlb	0	; select bank0
  3577  0E03  00EB               	movwf	??_Ptt_On
  3578  0E04  086B               	movf	??_Ptt_On,w
  3579  0E05  0022               	movlb	2	; select bank2
  3580  0E06  00B2               	movwf	(_adf_config^(0+256)+18)
  3581                           
  3582                           ;adf7012.c: 340: Delay_ms(10);
  3583  0E07  300A               	movlw	10
  3584  0E08  0020               	movlb	0	; select bank0
  3585  0E09  00A0               	movwf	Delay_ms@time_to_delay
  3586  0E0A  3000               	movlw	0
  3587  0E0B  00A1               	movwf	Delay_ms@time_to_delay+1
  3588  0E0C  318C  2484  318D   	fcall	_Delay_ms
  3589                           
  3590                           ;adf7012.c: 343: Adf_Write_Register_Two();
  3591  0E0F  3184  24C4  318D   	fcall	_Adf_Write_Register_Two
  3592                           
  3593                           ;adf7012.c: 344: Adf_Write_Register_Three();
  3594  0E12  3180  205A  318D   	fcall	_Adf_Write_Register_Three
  3595                           
  3596                           ;adf7012.c: 346: Delay_ms(1);
  3597  0E15  3001               	movlw	1
  3598  0E16  0020               	movlb	0	; select bank0
  3599  0E17  00A0               	movwf	Delay_ms@time_to_delay
  3600  0E18  3000               	movlw	0
  3601  0E19  00A1               	movwf	Delay_ms@time_to_delay+1
  3602  0E1A  318C  2484         	fcall	_Delay_ms
  3603                           
  3604                           ;adf7012.c: 348: return 1;
  3605                           ;	Return value of _Ptt_On is never used
  3606  0E1C  0008               	return
  3607  0E1D                     __end_of_Ptt_On:	
  3608                           
  3609                           	psect	text18
  3610  04C4                     __ptext18:	
  3611 ;; *************** function _Adf_Write_Register_Two *****************
  3612 ;; Defined at:
  3613 ;;		line 189 in file "adf7012.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;		None
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  3618 ;;  reg             4   47[BANK0 ] unsigned long 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;		None               void
  3621 ;; Registers used:
  3622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3630 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;Total ram usage:       32 bytes
  3633 ;; Hardware stack levels used:    1
  3634 ;; Hardware stack levels required when called:    8
  3635 ;; This function calls:
  3636 ;;		_Reverse_Array
  3637 ;;		_Write_Adf7012_Reg
  3638 ;;		_memcpy
  3639 ;; This function is called by:
  3640 ;;		_Adf_Write_Config
  3641 ;;		_Ptt_On
  3642 ;;		_Ptt_Off
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           
  3647                           ;psect for function _Adf_Write_Register_Two
  3648  04C4                     _Adf_Write_Register_Two:	
  3649                           
  3650                           ;adf7012.c: 190: uint32_t reg =
  3651                           ;adf7012.c: 191: (2) |
  3652                           ;adf7012.c: 192: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  3653                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  3654                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  3655                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  3656                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  3657                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  3661  04C4  0022               	movlb	2	; select bank2
  3662  04C5  0838               	movf	(_adf_config^(0+256)+24),w
  3663  04C6  3903               	andlw	3
  3664  04C7  0020               	movlb	0	; select bank0
  3665  04C8  00B3               	movwf	??_Adf_Write_Register_Two
  3666  04C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  3667  04CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  3668  04CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  3669  04CC  3017               	movlw	23
  3670  04CD                     u1325:	
  3671  04CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  3672  04CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  3673  04CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  3674  04D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  3675  04D1  0B89               	decfsz	9,f
  3676  04D2  2CCD               	goto	u1325
  3677  04D3  0022               	movlb	2	; select bank2
  3678  04D4  0837               	movf	(_adf_config^(0+256)+23),w
  3679  04D5  3907               	andlw	7
  3680  04D6  0020               	movlb	0	; select bank0
  3681  04D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  3682  04D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  3683  04D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  3684  04DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  3685  04DB  3014               	movlw	20
  3686  04DC                     u1335:	
  3687  04DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  3688  04DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  3689  04DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  3690  04DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  3691  04E0  0B89               	decfsz	9,f
  3692  04E1  2CDC               	goto	u1335
  3693  04E2  3013               	movlw	19
  3694  04E3  3E20               	addlw	_adf_config& (0+255)
  3695  04E4  0086               	movwf	6
  3696  04E5  3001               	movlw	1	; select bank2/3
  3697  04E6  0087               	movwf	7
  3698  04E7  30FF               	movlw	255
  3699  04E8  0501               	andwf	1,w
  3700  04E9  00BB               	movwf	??_Adf_Write_Register_Two+8
  3701  04EA  3141               	addfsr 1,1
  3702  04EB  3001               	movlw	1
  3703  04EC  0501               	andwf	1,w
  3704  04ED  00BC               	movwf	??_Adf_Write_Register_Two+9
  3705  04EE  3141               	addfsr 1,1
  3706  04EF  3000               	movlw	0
  3707  04F0  0501               	andwf	1,w
  3708  04F1  00BD               	movwf	??_Adf_Write_Register_Two+10
  3709  04F2  3141               	addfsr 1,1
  3710  04F3  3000               	movlw	0
  3711  04F4  0501               	andwf	1,w
  3712  04F5  00BE               	movwf	??_Adf_Write_Register_Two+11
  3713  04F6  300B               	movlw	11
  3714  04F7                     u1345:	
  3715  04F7  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  3716  04F8  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  3717  04F9  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  3718  04FA  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  3719  04FB  0B89               	decfsz	9,f
  3720  04FC  2CF7               	goto	u1345
  3721  04FD  0022               	movlb	2	; select bank2
  3722  04FE  0832               	movf	(_adf_config^(0+256)+18),w
  3723  04FF  393F               	andlw	63
  3724  0500  0020               	movlb	0	; select bank0
  3725  0501  00BF               	movwf	??_Adf_Write_Register_Two+12
  3726  0502  01C0               	clrf	??_Adf_Write_Register_Two+13
  3727  0503  01C1               	clrf	??_Adf_Write_Register_Two+14
  3728  0504  01C2               	clrf	??_Adf_Write_Register_Two+15
  3729  0505  3005               	movlw	5
  3730  0506                     u1355:	
  3731  0506  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  3732  0507  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  3733  0508  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  3734  0509  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  3735  050A  0B89               	decfsz	9,f
  3736  050B  2D06               	goto	u1355
  3737  050C  0022               	movlb	2	; select bank2
  3738  050D  0831               	movf	(_adf_config^(0+256)+17),w
  3739  050E  3901               	andlw	1
  3740  050F  0020               	movlb	0	; select bank0
  3741  0510  00C3               	movwf	??_Adf_Write_Register_Two+16
  3742  0511  01C4               	clrf	??_Adf_Write_Register_Two+17
  3743  0512  01C5               	clrf	??_Adf_Write_Register_Two+18
  3744  0513  01C6               	clrf	??_Adf_Write_Register_Two+19
  3745  0514  3004               	movlw	4
  3746  0515                     u1365:	
  3747  0515  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  3748  0516  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  3749  0517  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  3750  0518  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  3751  0519  0B89               	decfsz	9,f
  3752  051A  2D15               	goto	u1365
  3753  051B  0022               	movlb	2	; select bank2
  3754  051C  0830               	movf	(_adf_config^(0+256)+16),w
  3755  051D  3903               	andlw	3
  3756  051E  0020               	movlb	0	; select bank0
  3757  051F  00C7               	movwf	??_Adf_Write_Register_Two+20
  3758  0520  01C8               	clrf	??_Adf_Write_Register_Two+21
  3759  0521  01C9               	clrf	??_Adf_Write_Register_Two+22
  3760  0522  01CA               	clrf	??_Adf_Write_Register_Two+23
  3761  0523  3002               	movlw	2
  3762  0524                     u1375:	
  3763  0524  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  3764  0525  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  3765  0526  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  3766  0527  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  3767  0528  0B89               	decfsz	9,f
  3768  0529  2D24               	goto	u1375
  3769  052A  0847               	movf	??_Adf_Write_Register_Two+20,w
  3770  052B  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  3771  052C  0848               	movf	??_Adf_Write_Register_Two+21,w
  3772  052D  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  3773  052E  0849               	movf	??_Adf_Write_Register_Two+22,w
  3774  052F  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  3775  0530  084A               	movf	??_Adf_Write_Register_Two+23,w
  3776  0531  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  3777  0532  0843               	movf	??_Adf_Write_Register_Two+16,w
  3778  0533  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  3779  0534  0844               	movf	??_Adf_Write_Register_Two+17,w
  3780  0535  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  3781  0536  0845               	movf	??_Adf_Write_Register_Two+18,w
  3782  0537  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  3783  0538  0846               	movf	??_Adf_Write_Register_Two+19,w
  3784  0539  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  3785  053A  083F               	movf	??_Adf_Write_Register_Two+12,w
  3786  053B  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  3787  053C  0840               	movf	??_Adf_Write_Register_Two+13,w
  3788  053D  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  3789  053E  0841               	movf	??_Adf_Write_Register_Two+14,w
  3790  053F  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  3791  0540  0842               	movf	??_Adf_Write_Register_Two+15,w
  3792  0541  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  3793  0542  083B               	movf	??_Adf_Write_Register_Two+8,w
  3794  0543  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  3795  0544  083C               	movf	??_Adf_Write_Register_Two+9,w
  3796  0545  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  3797  0546  083D               	movf	??_Adf_Write_Register_Two+10,w
  3798  0547  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  3799  0548  083E               	movf	??_Adf_Write_Register_Two+11,w
  3800  0549  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  3801  054A  0837               	movf	??_Adf_Write_Register_Two+4,w
  3802  054B  04B3               	iorwf	??_Adf_Write_Register_Two,f
  3803  054C  0838               	movf	??_Adf_Write_Register_Two+5,w
  3804  054D  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  3805  054E  0839               	movf	??_Adf_Write_Register_Two+6,w
  3806  054F  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  3807  0550  083A               	movf	??_Adf_Write_Register_Two+7,w
  3808  0551  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  3809  0552  3002               	movlw	2
  3810  0553  0433               	iorwf	??_Adf_Write_Register_Two,w
  3811  0554  00CF               	movwf	Adf_Write_Register_Two@reg
  3812  0555  3000               	movlw	0
  3813  0556  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  3814  0557  00D0               	movwf	Adf_Write_Register_Two@reg+1
  3815  0558  3000               	movlw	0
  3816  0559  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  3817  055A  00D1               	movwf	Adf_Write_Register_Two@reg+2
  3818  055B  3000               	movlw	0
  3819  055C  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  3820  055D  00D2               	movwf	Adf_Write_Register_Two@reg+3
  3821                           
  3822                           ;adf7012.c: 200: uint8_t reg_ptr[4];
  3823                           ;adf7012.c: 201: memcpy(reg_ptr, &reg, 4);
  3824  055E  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  3825  055F  00B3               	movwf	??_Adf_Write_Register_Two
  3826  0560  0833               	movf	??_Adf_Write_Register_Two,w
  3827  0561  00A0               	movwf	memcpy@s1
  3828  0562  3004               	movlw	4
  3829  0563  00A1               	movwf	memcpy@n
  3830  0564  3000               	movlw	0
  3831  0565  00A2               	movwf	memcpy@n+1
  3832  0566  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3833  0567  318C  24CA  3184   	fcall	_memcpy
  3834                           
  3835                           ;adf7012.c: 202: Reverse_Array(reg_ptr,4);
  3836  056A  3004               	movlw	4
  3837  056B  0020               	movlb	0	; select bank0
  3838  056C  00B3               	movwf	??_Adf_Write_Register_Two
  3839  056D  0833               	movf	??_Adf_Write_Register_Two,w
  3840  056E  00A7               	movwf	Reverse_Array@length
  3841  056F  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3842  0570  318E  261D  3184   	fcall	_Reverse_Array
  3843                           
  3844                           ;adf7012.c: 203: Write_Adf7012_Reg(reg_ptr, 4);
  3845  0573  3004               	movlw	4
  3846  0574  0020               	movlb	0	; select bank0
  3847  0575  00B3               	movwf	??_Adf_Write_Register_Two
  3848  0576  0833               	movf	??_Adf_Write_Register_Two,w
  3849  0577  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  3850  0578  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  3851  0579  318D  25A8         	fcall	_Write_Adf7012_Reg
  3852  057B  0008               	return
  3853  057C                     __end_of_Adf_Write_Register_Two:	
  3854                           
  3855                           	psect	text19
  3856  0C20                     __ptext19:	
  3857 ;; *************** function _Gpio_Config *****************
  3858 ;; Defined at:
  3859 ;;		line 31 in file "utility.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      unsigned char 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2, status,0
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;Total ram usage:        1 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    4
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_main
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function _Gpio_Config
  3889  0C20                     _Gpio_Config:	
  3890                           
  3891                           ;utility.c: 34: TRISA |= 0b00000010;
  3892                           
  3893                           ;incstack = 0
  3894                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  3895  0C20  0021               	movlb	1	; select bank1
  3896  0C21  148C               	bsf	12,1	;volatile
  3897                           
  3898                           ;utility.c: 35: TRISA &= 0b11001011;
  3899  0C22  30CB               	movlw	203
  3900  0C23  0020               	movlb	0	; select bank0
  3901  0C24  00A0               	movwf	??_Gpio_Config
  3902  0C25  0820               	movf	??_Gpio_Config,w
  3903  0C26  0021               	movlb	1	; select bank1
  3904  0C27  058C               	andwf	12,f	;volatile
  3905                           
  3906                           ;utility.c: 36: TRISC |= 0b00110011;
  3907  0C28  3033               	movlw	51
  3908  0C29  0020               	movlb	0	; select bank0
  3909  0C2A  00A0               	movwf	??_Gpio_Config
  3910  0C2B  0820               	movf	??_Gpio_Config,w
  3911  0C2C  0021               	movlb	1	; select bank1
  3912  0C2D  048E               	iorwf	14,f	;volatile
  3913                           
  3914                           ;utility.c: 37: TRISC &= 0b11110011;
  3915  0C2E  30F3               	movlw	243
  3916  0C2F  0020               	movlb	0	; select bank0
  3917  0C30  00A0               	movwf	??_Gpio_Config
  3918  0C31  0820               	movf	??_Gpio_Config,w
  3919  0C32  0021               	movlb	1	; select bank1
  3920  0C33  058E               	andwf	14,f	;volatile
  3921  0C34  0008               	return
  3922  0C35                     __end_of_Gpio_Config:	
  3923                           ;utility.c: 39: return 1;
  3924                           ;	Return value of _Gpio_Config is never used
  3925                           
  3926                           
  3927                           	psect	text20
  3928  0C67                     __ptext20:	
  3929 ;; *************** function _Ax25_Send_String *****************
  3930 ;; Defined at:
  3931 ;;		line 91 in file "ax25.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  3934 ;;		 -> STR_1(6), 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  i               2   15[BANK0 ] int 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;		None               void
  3939 ;; Registers used:
  3940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3946 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3950 ;;Total ram usage:        4 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    7
  3953 ;; This function calls:
  3954 ;;		_Ax25_Send_Byte
  3955 ;; This function is called by:
  3956 ;;		_main
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           
  3961                           ;psect for function _Ax25_Send_String
  3962  0C67                     _Ax25_Send_String:	
  3963                           
  3964                           ;ax25.c: 93: int i;
  3965                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  3966                           
  3967                           ;incstack = 0
  3968                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3969  0C67  0020               	movlb	0	; select bank0
  3970  0C68  01AF               	clrf	Ax25_Send_String@i
  3971  0C69  01B0               	clrf	Ax25_Send_String@i+1
  3972  0C6A                     l2517:	
  3973  0C6A  082D               	movf	Ax25_Send_String@string,w
  3974  0C6B  072F               	addwf	Ax25_Send_String@i,w
  3975  0C6C  0084               	movwf	4
  3976  0C6D  082E               	movf	Ax25_Send_String@string+1,w
  3977  0C6E  3D30               	addwfc	Ax25_Send_String@i+1,w
  3978  0C6F  0085               	movwf	5
  3979  0C70  0800               	movf	0,w	;code access
  3980  0C71  3800               	iorlw	0
  3981  0C72  1903               	btfsc	3,2
  3982  0C73  0008               	return
  3983                           
  3984                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  3985  0C74  082D               	movf	Ax25_Send_String@string,w
  3986  0C75  072F               	addwf	Ax25_Send_String@i,w
  3987  0C76  0084               	movwf	4
  3988  0C77  082E               	movf	Ax25_Send_String@string+1,w
  3989  0C78  3D30               	addwfc	Ax25_Send_String@i+1,w
  3990  0C79  0085               	movwf	5
  3991  0C7A  0800               	movf	0,w	;code access
  3992  0C7B  318B  2370  318C   	fcall	_Ax25_Send_Byte
  3993  0C7E  3001               	movlw	1
  3994  0C7F  0020               	movlb	0	; select bank0
  3995  0C80  07AF               	addwf	Ax25_Send_String@i,f
  3996  0C81  3000               	movlw	0
  3997  0C82  3DB0               	addwfc	Ax25_Send_String@i+1,f
  3998  0C83  2C6A               	goto	l2517
  3999  0C84                     __end_of_Ax25_Send_String:	
  4000                           
  4001                           	psect	text21
  4002  0B70                     __ptext21:	
  4003 ;; *************** function _Ax25_Send_Byte *****************
  4004 ;; Defined at:
  4005 ;;		line 58 in file "ax25.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  byte            1    wreg     unsigned char 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  byte            1   12[BANK0 ] unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;		None               void
  4012 ;; Registers used:
  4013 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4020 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4022 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;Total ram usage:        1 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    6
  4026 ;; This function calls:
  4027 ;;		_Send_Byte
  4028 ;; This function is called by:
  4029 ;;		_Ax25_Send_String
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           
  4034                           ;psect for function _Ax25_Send_Byte
  4035  0B70                     _Ax25_Send_Byte:	
  4036                           
  4037                           ;incstack = 0
  4038                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4039                           ;Ax25_Send_Byte@byte stored from wreg
  4040  0B70  0020               	movlb	0	; select bank0
  4041  0B71  00AC               	movwf	Ax25_Send_Byte@byte
  4042                           
  4043                           ;ax25.c: 60: Send_Byte(byte);
  4044  0B72  082C               	movf	Ax25_Send_Byte@byte,w
  4045  0B73  3185  257C         	fcall	_Send_Byte
  4046  0B75  0008               	return
  4047  0B76                     __end_of_Ax25_Send_Byte:	
  4048                           
  4049                           	psect	text22
  4050  01C6                     __ptext22:	
  4051 ;; *************** function _Ax25_Send_Header *****************
  4052 ;; Defined at:
  4053 ;;		line 99 in file "ax25.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  addresses       1    wreg     PTR struct .
  4056 ;;		 -> main@beacon_address(16), 
  4057 ;;  num_addresse    2   12[BANK0 ] int 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  addresses       1   19[BANK0 ] PTR struct .
  4060 ;;		 -> main@beacon_address(16), 
  4061 ;;  i               2   20[BANK0 ] int 
  4062 ;;  j               2   17[BANK0 ] int 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;		None               void
  4065 ;; Registers used:
  4066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4074 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4075 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4076 ;;Total ram usage:       10 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    6
  4079 ;; This function calls:
  4080 ;;		_Ax25_Send_Flag
  4081 ;;		_Ax25_Send_Sync
  4082 ;;		_Send_Byte
  4083 ;; This function is called by:
  4084 ;;		_main
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           
  4089                           ;psect for function _Ax25_Send_Header
  4090  01C6                     _Ax25_Send_Header:	
  4091                           
  4092                           ;incstack = 0
  4093                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4094                           ;Ax25_Send_Header@addresses stored from wreg
  4095  01C6  0020               	movlb	0	; select bank0
  4096  01C7  00B3               	movwf	Ax25_Send_Header@addresses
  4097                           
  4098                           ;ax25.c: 102: int i, j;
  4099                           ;ax25.c: 103: modem_packet_size = 0;
  4100  01C8  3000               	movlw	0
  4101  01C9  00FD               	movwf	_modem_packet_size+3
  4102  01CA  3000               	movlw	0
  4103  01CB  00FC               	movwf	_modem_packet_size+2
  4104  01CC  3000               	movlw	0
  4105  01CD  00FB               	movwf	_modem_packet_size+1
  4106  01CE  3000               	movlw	0
  4107  01CF  00FA               	movwf	_modem_packet_size
  4108                           
  4109                           ;ax25.c: 104: ones_in_a_row = 0;
  4110  01D0  0021               	movlb	1	; select bank1
  4111  01D1  01BB               	clrf	_ones_in_a_row^(0+128)
  4112  01D2  01BC               	clrf	(_ones_in_a_row+1)^(0+128)
  4113                           
  4114                           ;ax25.c: 105: crc = 0xffff;
  4115  01D3  30FF               	movlw	255
  4116  01D4  00B9               	movwf	_crc^(0+128)
  4117  01D5  30FF               	movlw	255
  4118  01D6  00BA               	movwf	(_crc^(0+128)+1)
  4119                           
  4120                           ;ax25.c: 108: for (i = 0; i < 10; i++)
  4121  01D7  0020               	movlb	0	; select bank0
  4122  01D8  01B4               	clrf	Ax25_Send_Header@i
  4123  01D9  01B5               	clrf	Ax25_Send_Header@i+1
  4124  01DA  0835               	movf	Ax25_Send_Header@i+1,w
  4125  01DB  3A80               	xorlw	128
  4126  01DC  00AE               	movwf	??_Ax25_Send_Header
  4127  01DD  3080               	movlw	128
  4128  01DE  022E               	subwf	??_Ax25_Send_Header,w
  4129  01DF  1D03               	skipz
  4130  01E0  29E3               	goto	u2025
  4131  01E1  300A               	movlw	10
  4132  01E2  0234               	subwf	Ax25_Send_Header@i,w
  4133  01E3                     u2025:	
  4134  01E3  1803               	btfsc	3,0
  4135  01E4  29F8               	goto	l2473
  4136  01E5                     l2467:	
  4137                           
  4138                           ;ax25.c: 109: {
  4139                           ;ax25.c: 110: Ax25_Send_Sync();
  4140  01E5  318F  2787  3181   	fcall	_Ax25_Send_Sync
  4141  01E8  3001               	movlw	1
  4142  01E9  0020               	movlb	0	; select bank0
  4143  01EA  07B4               	addwf	Ax25_Send_Header@i,f
  4144  01EB  3000               	movlw	0
  4145  01EC  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  4146  01ED  0835               	movf	Ax25_Send_Header@i+1,w
  4147  01EE  3A80               	xorlw	128
  4148  01EF  00AE               	movwf	??_Ax25_Send_Header
  4149  01F0  3080               	movlw	128
  4150  01F1  022E               	subwf	??_Ax25_Send_Header,w
  4151  01F2  1D03               	skipz
  4152  01F3  29F6               	goto	u2035
  4153  01F4  300A               	movlw	10
  4154  01F5  0234               	subwf	Ax25_Send_Header@i,w
  4155  01F6                     u2035:	
  4156  01F6  1C03               	skipc
  4157  01F7  29E5               	goto	l2467
  4158  01F8                     l2473:	
  4159                           
  4160                           ;ax25.c: 111: }
  4161                           ;ax25.c: 114: for (i = 0; i < 3; i++)
  4162  01F8  0020               	movlb	0	; select bank0
  4163  01F9  01B4               	clrf	Ax25_Send_Header@i
  4164  01FA  01B5               	clrf	Ax25_Send_Header@i+1
  4165  01FB  0835               	movf	Ax25_Send_Header@i+1,w
  4166  01FC  3A80               	xorlw	128
  4167  01FD  00AE               	movwf	??_Ax25_Send_Header
  4168  01FE  3080               	movlw	128
  4169  01FF  022E               	subwf	??_Ax25_Send_Header,w
  4170  0200  1D03               	skipz
  4171  0201  2A04               	goto	u2045
  4172  0202  3003               	movlw	3
  4173  0203  0234               	subwf	Ax25_Send_Header@i,w
  4174  0204                     u2045:	
  4175  0204  1803               	btfsc	3,0
  4176  0205  2A19               	goto	l2485
  4177  0206                     l2479:	
  4178                           
  4179                           ;ax25.c: 115: {
  4180                           ;ax25.c: 116: Ax25_Send_Flag();
  4181  0206  3183  2365  3181   	fcall	_Ax25_Send_Flag
  4182  0209  3001               	movlw	1
  4183  020A  0020               	movlb	0	; select bank0
  4184  020B  07B4               	addwf	Ax25_Send_Header@i,f
  4185  020C  3000               	movlw	0
  4186  020D  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  4187  020E  0835               	movf	Ax25_Send_Header@i+1,w
  4188  020F  3A80               	xorlw	128
  4189  0210  00AE               	movwf	??_Ax25_Send_Header
  4190  0211  3080               	movlw	128
  4191  0212  022E               	subwf	??_Ax25_Send_Header,w
  4192  0213  1D03               	skipz
  4193  0214  2A17               	goto	u2055
  4194  0215  3003               	movlw	3
  4195  0216  0234               	subwf	Ax25_Send_Header@i,w
  4196  0217                     u2055:	
  4197  0217  1C03               	skipc
  4198  0218  2A06               	goto	l2479
  4199  0219                     l2485:	
  4200                           
  4201                           ;ax25.c: 117: }
  4202                           ;ax25.c: 119: for (i = 0; i < num_addresses; i++) {
  4203  0219  0020               	movlb	0	; select bank0
  4204  021A  01B4               	clrf	Ax25_Send_Header@i
  4205  021B  01B5               	clrf	Ax25_Send_Header@i+1
  4206  021C                     l2507:	
  4207  021C  0835               	movf	Ax25_Send_Header@i+1,w
  4208  021D  3A80               	xorlw	128
  4209  021E  00AE               	movwf	??_Ax25_Send_Header
  4210  021F  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  4211  0220  3A80               	xorlw	128
  4212  0221  022E               	subwf	??_Ax25_Send_Header,w
  4213  0222  1D03               	skipz
  4214  0223  2A26               	goto	u2125
  4215  0224  082C               	movf	Ax25_Send_Header@num_addresses,w
  4216  0225  0234               	subwf	Ax25_Send_Header@i,w
  4217  0226                     u2125:	
  4218  0226  1803               	btfsc	3,0
  4219  0227  2A96               	goto	l2509
  4220                           
  4221                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  4222  0228  0020               	movlb	0	; select bank0
  4223  0229  01B1               	clrf	Ax25_Send_Header@j
  4224  022A  01B2               	clrf	Ax25_Send_Header@j+1
  4225  022B  0832               	movf	Ax25_Send_Header@j+1,w
  4226  022C  3A80               	xorlw	128
  4227  022D  00AE               	movwf	??_Ax25_Send_Header
  4228  022E  3080               	movlw	128
  4229  022F  022E               	subwf	??_Ax25_Send_Header,w
  4230  0230  1D03               	skipz
  4231  0231  2A34               	goto	u2065
  4232  0232  3006               	movlw	6
  4233  0233  0231               	subwf	Ax25_Send_Header@j,w
  4234  0234                     u2065:	
  4235  0234  1803               	btfsc	3,0
  4236  0235  2A5B               	goto	l2499
  4237  0236                     l2493:	
  4238                           
  4239                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  4240  0236  0020               	movlb	0	; select bank0
  4241  0237  0834               	movf	Ax25_Send_Header@i,w
  4242  0238  00AE               	movwf	??_Ax25_Send_Header
  4243  0239  3002               	movlw	2
  4244  023A                     u2075:	
  4245  023A  35AE               	lslf	??_Ax25_Send_Header,f
  4246  023B  3EFF               	addlw	-1
  4247  023C  1D03               	skipz
  4248  023D  2A3A               	goto	u2075
  4249  023E  352E               	lslf	??_Ax25_Send_Header,w
  4250  023F  0733               	addwf	Ax25_Send_Header@addresses,w
  4251  0240  00AF               	movwf	??_Ax25_Send_Header+1
  4252  0241  0831               	movf	Ax25_Send_Header@j,w
  4253  0242  072F               	addwf	??_Ax25_Send_Header+1,w
  4254  0243  00B0               	movwf	??_Ax25_Send_Header+2
  4255  0244  0830               	movf	??_Ax25_Send_Header+2,w
  4256  0245  0086               	movwf	6
  4257  0246  0187               	clrf	7
  4258  0247  3501               	lslf	1,w
  4259  0248  3185  257C  3181   	fcall	_Send_Byte
  4260  024B  3001               	movlw	1
  4261  024C  0020               	movlb	0	; select bank0
  4262  024D  07B1               	addwf	Ax25_Send_Header@j,f
  4263  024E  3000               	movlw	0
  4264  024F  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  4265  0250  0832               	movf	Ax25_Send_Header@j+1,w
  4266  0251  3A80               	xorlw	128
  4267  0252  00AE               	movwf	??_Ax25_Send_Header
  4268  0253  3080               	movlw	128
  4269  0254  022E               	subwf	??_Ax25_Send_Header,w
  4270  0255  1D03               	skipz
  4271  0256  2A59               	goto	u2085
  4272  0257  3006               	movlw	6
  4273  0258  0231               	subwf	Ax25_Send_Header@j,w
  4274  0259                     u2085:	
  4275  0259  1C03               	skipc
  4276  025A  2A36               	goto	l2493
  4277  025B                     l2499:	
  4278                           
  4279                           ;ax25.c: 125: if (i == num_addresses - 1){
  4280  025B  0020               	movlb	0	; select bank0
  4281  025C  082C               	movf	Ax25_Send_Header@num_addresses,w
  4282  025D  3EFF               	addlw	255
  4283  025E  00AE               	movwf	??_Ax25_Send_Header
  4284  025F  30FF               	movlw	255
  4285  0260  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  4286  0261  00AF               	movwf	??_Ax25_Send_Header+1
  4287  0262  0835               	movf	Ax25_Send_Header@i+1,w
  4288  0263  062F               	xorwf	??_Ax25_Send_Header+1,w
  4289  0264  1D03               	skipz
  4290  0265  2A68               	goto	u2095
  4291  0266  0834               	movf	Ax25_Send_Header@i,w
  4292  0267  062E               	xorwf	??_Ax25_Send_Header,w
  4293  0268                     u2095:	
  4294  0268  1D03               	skipz
  4295  0269  2A7C               	goto	l2503
  4296                           
  4297                           ;ax25.c: 126: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  4298  026A  0834               	movf	Ax25_Send_Header@i,w
  4299  026B  00AE               	movwf	??_Ax25_Send_Header
  4300  026C  3002               	movlw	2
  4301  026D                     u2105:	
  4302  026D  35AE               	lslf	??_Ax25_Send_Header,f
  4303  026E  3EFF               	addlw	-1
  4304  026F  1D03               	skipz
  4305  0270  2A6D               	goto	u2105
  4306  0271  352E               	lslf	??_Ax25_Send_Header,w
  4307  0272  0733               	addwf	Ax25_Send_Header@addresses,w
  4308  0273  00AF               	movwf	??_Ax25_Send_Header+1
  4309  0274  082F               	movf	??_Ax25_Send_Header+1,w
  4310  0275  3E07               	addlw	7
  4311  0276  0086               	movwf	6
  4312  0277  0187               	clrf	7
  4313  0278  3501               	lslf	1,w
  4314  0279  3E60               	addlw	96
  4315  027A  3801               	iorlw	1
  4316  027B  2A8D               	goto	L1
  4317  027C                     l2503:	
  4318                           ;ax25.c: 128: }
  4319                           
  4320                           
  4321                           ;ax25.c: 129: else
  4322                           ;ax25.c: 130: Send_Byte(('0' + addresses[i].ssid) << 1);
  4323  027C  0020               	movlb	0	; select bank0
  4324  027D  0834               	movf	Ax25_Send_Header@i,w
  4325  027E  00AE               	movwf	??_Ax25_Send_Header
  4326  027F  3002               	movlw	2
  4327  0280                     u2115:	
  4328  0280  35AE               	lslf	??_Ax25_Send_Header,f
  4329  0281  3EFF               	addlw	-1
  4330  0282  1D03               	skipz
  4331  0283  2A80               	goto	u2115
  4332  0284  352E               	lslf	??_Ax25_Send_Header,w
  4333  0285  0733               	addwf	Ax25_Send_Header@addresses,w
  4334  0286  00AF               	movwf	??_Ax25_Send_Header+1
  4335  0287  082F               	movf	??_Ax25_Send_Header+1,w
  4336  0288  3E07               	addlw	7
  4337  0289  0086               	movwf	6
  4338  028A  0187               	clrf	7
  4339  028B  3501               	lslf	1,w
  4340  028C  3E60               	addlw	96
  4341  028D                     L1:	
  4342  028D  3185  257C  3181   	fcall	_Send_Byte
  4343  0290  3001               	movlw	1
  4344  0291  0020               	movlb	0	; select bank0
  4345  0292  07B4               	addwf	Ax25_Send_Header@i,f
  4346  0293  3000               	movlw	0
  4347  0294  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  4348  0295  2A1C               	goto	l2507
  4349  0296                     l2509:	
  4350                           
  4351                           ;ax25.c: 131: }
  4352                           ;ax25.c: 134: Send_Byte(0x03);
  4353  0296  3003               	movlw	3
  4354  0297  3185  257C  3181   	fcall	_Send_Byte
  4355                           
  4356                           ;ax25.c: 137: Send_Byte(0xf0);
  4357  029A  30F0               	movlw	240
  4358  029B  3185  257C         	fcall	_Send_Byte
  4359  029D  0008               	return
  4360  029E                     __end_of_Ax25_Send_Header:	
  4361                           
  4362                           	psect	text23
  4363  0F87                     __ptext23:	
  4364 ;; *************** function _Ax25_Send_Sync *****************
  4365 ;; Defined at:
  4366 ;;		line 63 in file "ax25.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  i               2    7[BANK0 ] int 
  4371 ;;  byte            1    6[BANK0 ] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;		None               void
  4374 ;; Registers used:
  4375 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4382 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4383 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4384 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4385 ;;Total ram usage:        9 bytes
  4386 ;; Hardware stack levels used:    1
  4387 ;; Hardware stack levels required when called:    4
  4388 ;; This function calls:
  4389 ;;		Nothing
  4390 ;; This function is called by:
  4391 ;;		_Ax25_Send_Header
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           
  4396                           ;psect for function _Ax25_Send_Sync
  4397  0F87                     _Ax25_Send_Sync:	
  4398                           
  4399                           ;ax25.c: 65: uint8_t byte = 0x00;
  4400                           
  4401                           ;incstack = 0
  4402                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  4403  0F87  0020               	movlb	0	; select bank0
  4404  0F88  01A6               	clrf	Ax25_Send_Sync@byte
  4405                           
  4406                           ;ax25.c: 66: int i;
  4407                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  4408  0F89  01A7               	clrf	Ax25_Send_Sync@i
  4409  0F8A  01A8               	clrf	Ax25_Send_Sync@i+1
  4410  0F8B                     L2:	
  4411  0F8B  0828               	movf	Ax25_Send_Sync@i+1,w
  4412  0F8C  3A80               	xorlw	128
  4413  0F8D  00A0               	movwf	??_Ax25_Send_Sync
  4414  0F8E  3080               	movlw	128
  4415  0F8F  0220               	subwf	??_Ax25_Send_Sync,w
  4416  0F90  3008               	movlw	8
  4417  0F91  1903               	btfsc	3,2
  4418  0F92  0227               	subwf	Ax25_Send_Sync@i,w
  4419  0F93  1803               	btfsc	3,0
  4420  0F94  0008               	return
  4421                           
  4422                           ;ax25.c: 68: if (modem_packet_size >= 64 * 8)
  4423  0F95  3000               	movlw	0
  4424  0F96  027D               	subwf	_modem_packet_size+3,w
  4425  0F97  1D03               	skipz
  4426  0F98  2FA3               	goto	u1775
  4427  0F99  3000               	movlw	0
  4428  0F9A  027C               	subwf	_modem_packet_size+2,w
  4429  0F9B  1D03               	skipz
  4430  0F9C  2FA3               	goto	u1775
  4431  0F9D  3002               	movlw	2
  4432  0F9E  027B               	subwf	_modem_packet_size+1,w
  4433  0F9F  1D03               	skipz
  4434  0FA0  2FA3               	goto	u1775
  4435  0FA1  3000               	movlw	0
  4436  0FA2  027A               	subwf	_modem_packet_size,w
  4437  0FA3                     u1775:	
  4438  0FA3  1803               	btfsc	3,0
  4439  0FA4  0008               	return
  4440                           
  4441                           ;ax25.c: 70: if ((byte >> i) & 1)
  4442                           
  4443                           ;ax25.c: 69: return;
  4444  0FA5  0020               	movlb	0	; select bank0
  4445  0FA6  0826               	movf	Ax25_Send_Sync@byte,w
  4446  0FA7  00A0               	movwf	??_Ax25_Send_Sync
  4447  0FA8  0A27               	incf	Ax25_Send_Sync@i,w
  4448  0FA9  2FAB               	goto	u1784
  4449  0FAA                     u1785:	
  4450  0FAA  36A0               	lsrf	??_Ax25_Send_Sync,f
  4451  0FAB                     u1784:	
  4452  0FAB  0B89               	decfsz	9,f
  4453  0FAC  2FAA               	goto	u1785
  4454  0FAD  1C20               	btfss	??_Ax25_Send_Sync,0
  4455  0FAE  2FD1               	goto	l2233
  4456                           
  4457                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4458  0FAF  3001               	movlw	1
  4459  0FB0  00A0               	movwf	??_Ax25_Send_Sync
  4460  0FB1  087A               	movf	_modem_packet_size,w
  4461  0FB2  3907               	andlw	7
  4462  0FB3  0A89               	incf	9,f
  4463  0FB4  2FB6               	goto	u1804
  4464  0FB5                     u1805:	
  4465  0FB5  35A0               	lslf	??_Ax25_Send_Sync,f
  4466  0FB6                     u1804:	
  4467  0FB6  0B89               	decfsz	9,f
  4468  0FB7  2FB5               	goto	u1805
  4469  0FB8  0820               	movf	??_Ax25_Send_Sync,w
  4470  0FB9  00A1               	movwf	??_Ax25_Send_Sync+1
  4471  0FBA  087A               	movf	_modem_packet_size,w
  4472  0FBB  00A2               	movwf	??_Ax25_Send_Sync+2
  4473  0FBC  087B               	movf	_modem_packet_size+1,w
  4474  0FBD  00A3               	movwf	??_Ax25_Send_Sync+3
  4475  0FBE  087C               	movf	_modem_packet_size+2,w
  4476  0FBF  00A4               	movwf	??_Ax25_Send_Sync+4
  4477  0FC0  087D               	movf	_modem_packet_size+3,w
  4478  0FC1  00A5               	movwf	??_Ax25_Send_Sync+5
  4479  0FC2  3003               	movlw	3
  4480  0FC3                     u1815:	
  4481  0FC3  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  4482  0FC4  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  4483  0FC5  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  4484  0FC6  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  4485  0FC7  0B89               	decfsz	9,f
  4486  0FC8  2FC3               	goto	u1815
  4487  0FC9  0822               	movf	??_Ax25_Send_Sync+2,w
  4488  0FCA  3EA0               	addlw	_modem_packet& (0+255)
  4489  0FCB  0086               	movwf	6
  4490  0FCC  3001               	movlw	1	; select bank3/4
  4491  0FCD  0087               	movwf	7
  4492  0FCE  0821               	movf	??_Ax25_Send_Sync+1,w
  4493  0FCF  0481               	iorwf	1,f
  4494  0FD0  2FF3               	goto	l2235
  4495  0FD1                     l2233:	
  4496                           
  4497                           ;ax25.c: 72: else
  4498                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4499  0FD1  3001               	movlw	1
  4500  0FD2  00A0               	movwf	??_Ax25_Send_Sync
  4501  0FD3  087A               	movf	_modem_packet_size,w
  4502  0FD4  3907               	andlw	7
  4503  0FD5  0A89               	incf	9,f
  4504  0FD6  2FD8               	goto	u1824
  4505  0FD7                     u1825:	
  4506  0FD7  35A0               	lslf	??_Ax25_Send_Sync,f
  4507  0FD8                     u1824:	
  4508  0FD8  0B89               	decfsz	9,f
  4509  0FD9  2FD7               	goto	u1825
  4510  0FDA  0820               	movf	??_Ax25_Send_Sync,w
  4511  0FDB  3AFF               	xorlw	255
  4512  0FDC  00A1               	movwf	??_Ax25_Send_Sync+1
  4513  0FDD  087A               	movf	_modem_packet_size,w
  4514  0FDE  00A2               	movwf	??_Ax25_Send_Sync+2
  4515  0FDF  087B               	movf	_modem_packet_size+1,w
  4516  0FE0  00A3               	movwf	??_Ax25_Send_Sync+3
  4517  0FE1  087C               	movf	_modem_packet_size+2,w
  4518  0FE2  00A4               	movwf	??_Ax25_Send_Sync+4
  4519  0FE3  087D               	movf	_modem_packet_size+3,w
  4520  0FE4  00A5               	movwf	??_Ax25_Send_Sync+5
  4521  0FE5  3003               	movlw	3
  4522  0FE6                     u1835:	
  4523  0FE6  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  4524  0FE7  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  4525  0FE8  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  4526  0FE9  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  4527  0FEA  0B89               	decfsz	9,f
  4528  0FEB  2FE6               	goto	u1835
  4529  0FEC  0822               	movf	??_Ax25_Send_Sync+2,w
  4530  0FED  3EA0               	addlw	_modem_packet& (0+255)
  4531  0FEE  0086               	movwf	6
  4532  0FEF  3001               	movlw	1	; select bank3/4
  4533  0FF0  0087               	movwf	7
  4534  0FF1  0821               	movf	??_Ax25_Send_Sync+1,w
  4535  0FF2  0581               	andwf	1,f
  4536  0FF3                     l2235:	
  4537  0FF3  3001               	movlw	1
  4538  0FF4  07A7               	addwf	Ax25_Send_Sync@i,f
  4539  0FF5  3000               	movlw	0
  4540  0FF6  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  4541  0FF7  3001               	movlw	1
  4542  0FF8  07FA               	addwf	_modem_packet_size,f
  4543  0FF9  3000               	movlw	0
  4544  0FFA  3DFB               	addwfc	_modem_packet_size+1,f
  4545  0FFB  3000               	movlw	0
  4546  0FFC  3DFC               	addwfc	_modem_packet_size+2,f
  4547  0FFD  3000               	movlw	0
  4548  0FFE  3DFD               	addwfc	_modem_packet_size+3,f
  4549  0FFF  2F8B               	goto	L2
  4550  1000                     __end_of_Ax25_Send_Sync:	
  4551                           
  4552                           	psect	text24
  4553  0C4C                     __ptext24:	
  4554 ;; *************** function _Ax25_Send_Footer *****************
  4555 ;; Defined at:
  4556 ;;		line 141 in file "ax25.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  final_crc       2   12[BANK0 ] unsigned int 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;		None               void
  4563 ;; Registers used:
  4564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4571 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;Total ram usage:        2 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    6
  4577 ;; This function calls:
  4578 ;;		_Ax25_Send_Flag
  4579 ;;		_Send_Byte
  4580 ;; This function is called by:
  4581 ;;		_main
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function _Ax25_Send_Footer
  4587  0C4C                     _Ax25_Send_Footer:	
  4588                           
  4589                           ;ax25.c: 144: uint16_t final_crc = crc;
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4593  0C4C  0021               	movlb	1	; select bank1
  4594  0C4D  083A               	movf	(_crc+1)^(0+128),w
  4595  0C4E  0020               	movlb	0	; select bank0
  4596  0C4F  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  4597  0C50  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  4598  0C51  0021               	movlb	1	; select bank1
  4599  0C52  0839               	movf	_crc^(0+128),w
  4600  0C53  0020               	movlb	0	; select bank0
  4601  0C54  01AC               	clrf	Ax25_Send_Footer@final_crc
  4602  0C55  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  4603                           
  4604                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  4605  0C56  092C               	comf	Ax25_Send_Footer@final_crc,w
  4606  0C57  3185  257C  318C   	fcall	_Send_Byte
  4607                           
  4608                           ;ax25.c: 148: final_crc >>= 8;
  4609  0C5A  3008               	movlw	8
  4610  0C5B  0020               	movlb	0	; select bank0
  4611  0C5C                     u2145:	
  4612  0C5C  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  4613  0C5D  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  4614  0C5E  0B89               	decfsz	9,f
  4615  0C5F  2C5C               	goto	u2145
  4616                           
  4617                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  4618  0C60  092C               	comf	Ax25_Send_Footer@final_crc,w
  4619  0C61  3185  257C  318C   	fcall	_Send_Byte
  4620                           
  4621                           ;ax25.c: 152: Ax25_Send_Flag();
  4622  0C64  3183  2365         	fcall	_Ax25_Send_Flag
  4623  0C66  0008               	return
  4624  0C67                     __end_of_Ax25_Send_Footer:	
  4625                           
  4626                           	psect	text25
  4627  057C                     __ptext25:	
  4628 ;; *************** function _Send_Byte *****************
  4629 ;; Defined at:
  4630 ;;		line 32 in file "ax25.c"
  4631 ;; Parameters:    Size  Location     Type
  4632 ;;  byte            1    wreg     unsigned char 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;  byte            1    9[BANK0 ] unsigned char 
  4635 ;;  i               2   10[BANK0 ] int 
  4636 ;; Return value:  Size  Location     Type
  4637 ;;		None               void
  4638 ;; Registers used:
  4639 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;Total ram usage:        9 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    5
  4652 ;; This function calls:
  4653 ;;		_Update_Crc
  4654 ;; This function is called by:
  4655 ;;		_Ax25_Send_Byte
  4656 ;;		_Ax25_Send_Header
  4657 ;;		_Ax25_Send_Footer
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           
  4662                           ;psect for function _Send_Byte
  4663  057C                     _Send_Byte:	
  4664                           
  4665                           ;incstack = 0
  4666                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4667                           ;Send_Byte@byte stored from wreg
  4668  057C  0020               	movlb	0	; select bank0
  4669  057D  00A9               	movwf	Send_Byte@byte
  4670                           
  4671                           ;ax25.c: 34: int i;
  4672                           ;ax25.c: 35: for (i = 0; i < 8; i++) {
  4673  057E  01AA               	clrf	Send_Byte@i
  4674  057F  01AB               	clrf	Send_Byte@i+1
  4675  0580                     L3:	
  4676  0580  082B               	movf	Send_Byte@i+1,w
  4677  0581  3A80               	xorlw	128
  4678  0582  00A3               	movwf	??_Send_Byte
  4679  0583  3080               	movlw	128
  4680  0584  0223               	subwf	??_Send_Byte,w
  4681  0585  3008               	movlw	8
  4682  0586  1903               	btfsc	3,2
  4683  0587  022A               	subwf	Send_Byte@i,w
  4684  0588  1803               	btfsc	3,0
  4685  0589  0008               	return
  4686                           
  4687                           ;ax25.c: 36: Update_Crc((byte >> i) & 1);
  4688  058A  0020               	movlb	0	; select bank0
  4689  058B  0829               	movf	Send_Byte@byte,w
  4690  058C  00A3               	movwf	??_Send_Byte
  4691  058D  0A2A               	incf	Send_Byte@i,w
  4692  058E  2D90               	goto	u1554
  4693  058F                     u1555:	
  4694  058F  36A3               	lsrf	??_Send_Byte,f
  4695  0590                     u1554:	
  4696  0590  0B89               	decfsz	9,f
  4697  0591  2D8F               	goto	u1555
  4698  0592  0823               	movf	??_Send_Byte,w
  4699  0593  3901               	andlw	1
  4700  0594  318D  2576  3185   	fcall	_Update_Crc
  4701                           
  4702                           ;ax25.c: 37: if ((byte >> i) & 1) {
  4703  0597  0020               	movlb	0	; select bank0
  4704  0598  0829               	movf	Send_Byte@byte,w
  4705  0599  00A3               	movwf	??_Send_Byte
  4706  059A  0A2A               	incf	Send_Byte@i,w
  4707  059B  2D9D               	goto	u1564
  4708  059C                     u1565:	
  4709  059C  36A3               	lsrf	??_Send_Byte,f
  4710  059D                     u1564:	
  4711  059D  0B89               	decfsz	9,f
  4712  059E  2D9C               	goto	u1565
  4713  059F  1C23               	btfss	??_Send_Byte,0
  4714  05A0  2DEC               	goto	l2103
  4715                           
  4716                           ;ax25.c: 39: if (modem_packet_size >= (64 * 8))
  4717  05A1  3000               	movlw	0
  4718  05A2  027D               	subwf	_modem_packet_size+3,w
  4719  05A3  1D03               	skipz
  4720  05A4  2DAF               	goto	u1585
  4721  05A5  3000               	movlw	0
  4722  05A6  027C               	subwf	_modem_packet_size+2,w
  4723  05A7  1D03               	skipz
  4724  05A8  2DAF               	goto	u1585
  4725  05A9  3002               	movlw	2
  4726  05AA  027B               	subwf	_modem_packet_size+1,w
  4727  05AB  1D03               	skipz
  4728  05AC  2DAF               	goto	u1585
  4729  05AD  3000               	movlw	0
  4730  05AE  027A               	subwf	_modem_packet_size,w
  4731  05AF                     u1585:	
  4732  05AF  1803               	btfsc	3,0
  4733  05B0  0008               	return
  4734                           
  4735                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4736                           
  4737                           ;ax25.c: 40: return;
  4738  05B1  3001               	movlw	1
  4739  05B2  00A3               	movwf	??_Send_Byte
  4740  05B3  087A               	movf	_modem_packet_size,w
  4741  05B4  3907               	andlw	7
  4742  05B5  0A89               	incf	9,f
  4743  05B6  2DB8               	goto	u1594
  4744  05B7                     u1595:	
  4745  05B7  35A3               	lslf	??_Send_Byte,f
  4746  05B8                     u1594:	
  4747  05B8  0B89               	decfsz	9,f
  4748  05B9  2DB7               	goto	u1595
  4749  05BA  0823               	movf	??_Send_Byte,w
  4750  05BB  00A4               	movwf	??_Send_Byte+1
  4751  05BC  087A               	movf	_modem_packet_size,w
  4752  05BD  00A5               	movwf	??_Send_Byte+2
  4753  05BE  087B               	movf	_modem_packet_size+1,w
  4754  05BF  00A6               	movwf	??_Send_Byte+3
  4755  05C0  087C               	movf	_modem_packet_size+2,w
  4756  05C1  00A7               	movwf	??_Send_Byte+4
  4757  05C2  087D               	movf	_modem_packet_size+3,w
  4758  05C3  00A8               	movwf	??_Send_Byte+5
  4759  05C4  3003               	movlw	3
  4760  05C5                     u1605:	
  4761  05C5  36A8               	lsrf	??_Send_Byte+5,f
  4762  05C6  0CA7               	rrf	??_Send_Byte+4,f
  4763  05C7  0CA6               	rrf	??_Send_Byte+3,f
  4764  05C8  0CA5               	rrf	??_Send_Byte+2,f
  4765  05C9  0B89               	decfsz	9,f
  4766  05CA  2DC5               	goto	u1605
  4767  05CB  0825               	movf	??_Send_Byte+2,w
  4768  05CC  3EA0               	addlw	_modem_packet& (0+255)
  4769  05CD  0086               	movwf	6
  4770  05CE  3001               	movlw	1	; select bank3/4
  4771  05CF  0087               	movwf	7
  4772  05D0  0824               	movf	??_Send_Byte+1,w
  4773  05D1  0481               	iorwf	1,f
  4774                           
  4775                           ;ax25.c: 44: modem_packet_size++;
  4776  05D2  3001               	movlw	1
  4777  05D3  07FA               	addwf	_modem_packet_size,f
  4778  05D4  3000               	movlw	0
  4779  05D5  3DFB               	addwfc	_modem_packet_size+1,f
  4780  05D6  3000               	movlw	0
  4781  05D7  3DFC               	addwfc	_modem_packet_size+2,f
  4782  05D8  3000               	movlw	0
  4783  05D9  3DFD               	addwfc	_modem_packet_size+3,f
  4784                           
  4785                           ;ax25.c: 45: if (++ones_in_a_row < 5) continue;
  4786  05DA  3001               	movlw	1
  4787  05DB  0021               	movlb	1	; select bank1
  4788  05DC  07BB               	addwf	_ones_in_a_row^(0+128),f
  4789  05DD  3000               	movlw	0
  4790  05DE  3DBC               	addwfc	(_ones_in_a_row+1)^(0+128),f
  4791  05DF  083C               	movf	(_ones_in_a_row+1)^(0+128),w
  4792  05E0  3A80               	xorlw	128
  4793  05E1  0020               	movlb	0	; select bank0
  4794  05E2  00A3               	movwf	??_Send_Byte
  4795  05E3  3080               	movlw	128
  4796  05E4  0223               	subwf	??_Send_Byte,w
  4797  05E5  1D03               	skipz
  4798  05E6  2DEA               	goto	u1615
  4799  05E7  3005               	movlw	5
  4800  05E8  0021               	movlb	1	; select bank1
  4801  05E9  023B               	subwf	_ones_in_a_row^(0+128),w
  4802  05EA                     u1615:	
  4803  05EA  1C03               	btfss	3,0
  4804  05EB  2E2A               	goto	l2113
  4805  05EC                     l2103:	
  4806                           
  4807                           ;ax25.c: 46: }
  4808                           ;ax25.c: 48: if (modem_packet_size >= (64 * 8))
  4809  05EC  3000               	movlw	0
  4810  05ED  027D               	subwf	_modem_packet_size+3,w
  4811  05EE  1D03               	skipz
  4812  05EF  2DFA               	goto	u1625
  4813  05F0  3000               	movlw	0
  4814  05F1  027C               	subwf	_modem_packet_size+2,w
  4815  05F2  1D03               	skipz
  4816  05F3  2DFA               	goto	u1625
  4817  05F4  3002               	movlw	2
  4818  05F5  027B               	subwf	_modem_packet_size+1,w
  4819  05F6  1D03               	skipz
  4820  05F7  2DFA               	goto	u1625
  4821  05F8  3000               	movlw	0
  4822  05F9  027A               	subwf	_modem_packet_size,w
  4823  05FA                     u1625:	
  4824  05FA  1803               	btfsc	3,0
  4825  05FB  0008               	return
  4826                           
  4827                           ;ax25.c: 50: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4828                           
  4829                           ;ax25.c: 49: return;
  4830  05FC  3001               	movlw	1
  4831  05FD  0020               	movlb	0	; select bank0
  4832  05FE  00A3               	movwf	??_Send_Byte
  4833  05FF  087A               	movf	_modem_packet_size,w
  4834  0600  3907               	andlw	7
  4835  0601  0A89               	incf	9,f
  4836  0602  2E04               	goto	u1634
  4837  0603                     u1635:	
  4838  0603  35A3               	lslf	??_Send_Byte,f
  4839  0604                     u1634:	
  4840  0604  0B89               	decfsz	9,f
  4841  0605  2E03               	goto	u1635
  4842  0606  0823               	movf	??_Send_Byte,w
  4843  0607  3AFF               	xorlw	255
  4844  0608  00A4               	movwf	??_Send_Byte+1
  4845  0609  087A               	movf	_modem_packet_size,w
  4846  060A  00A5               	movwf	??_Send_Byte+2
  4847  060B  087B               	movf	_modem_packet_size+1,w
  4848  060C  00A6               	movwf	??_Send_Byte+3
  4849  060D  087C               	movf	_modem_packet_size+2,w
  4850  060E  00A7               	movwf	??_Send_Byte+4
  4851  060F  087D               	movf	_modem_packet_size+3,w
  4852  0610  00A8               	movwf	??_Send_Byte+5
  4853  0611  3003               	movlw	3
  4854  0612                     u1645:	
  4855  0612  36A8               	lsrf	??_Send_Byte+5,f
  4856  0613  0CA7               	rrf	??_Send_Byte+4,f
  4857  0614  0CA6               	rrf	??_Send_Byte+3,f
  4858  0615  0CA5               	rrf	??_Send_Byte+2,f
  4859  0616  0B89               	decfsz	9,f
  4860  0617  2E12               	goto	u1645
  4861  0618  0825               	movf	??_Send_Byte+2,w
  4862  0619  3EA0               	addlw	_modem_packet& (0+255)
  4863  061A  0086               	movwf	6
  4864  061B  3001               	movlw	1	; select bank3/4
  4865  061C  0087               	movwf	7
  4866  061D  0824               	movf	??_Send_Byte+1,w
  4867  061E  0581               	andwf	1,f
  4868                           
  4869                           ;ax25.c: 52: modem_packet_size++;
  4870  061F  3001               	movlw	1
  4871  0620  07FA               	addwf	_modem_packet_size,f
  4872  0621  3000               	movlw	0
  4873  0622  3DFB               	addwfc	_modem_packet_size+1,f
  4874  0623  3000               	movlw	0
  4875  0624  3DFC               	addwfc	_modem_packet_size+2,f
  4876  0625  3000               	movlw	0
  4877  0626  3DFD               	addwfc	_modem_packet_size+3,f
  4878                           
  4879                           ;ax25.c: 53: ones_in_a_row = 0;
  4880  0627  0021               	movlb	1	; select bank1
  4881  0628  01BB               	clrf	_ones_in_a_row^(0+128)
  4882  0629  01BC               	clrf	(_ones_in_a_row+1)^(0+128)
  4883  062A                     l2113:	
  4884  062A  3001               	movlw	1
  4885  062B  0020               	movlb	0	; select bank0
  4886  062C  07AA               	addwf	Send_Byte@i,f
  4887  062D  3000               	movlw	0
  4888  062E  3DAB               	addwfc	Send_Byte@i+1,f
  4889  062F  2D80               	goto	L3
  4890  0630                     __end_of_Send_Byte:	
  4891                           
  4892                           	psect	text26
  4893  0D76                     __ptext26:	
  4894 ;; *************** function _Update_Crc *****************
  4895 ;; Defined at:
  4896 ;;		line 23 in file "ax25.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  input_bit       1    wreg     unsigned char 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  input_bit       1    2[BANK0 ] unsigned char 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;		None               void
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4913 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;Total ram usage:        3 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    4
  4917 ;; This function calls:
  4918 ;;		Nothing
  4919 ;; This function is called by:
  4920 ;;		_Send_Byte
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           
  4925                           ;psect for function _Update_Crc
  4926  0D76                     _Update_Crc:	
  4927                           
  4928                           ;incstack = 0
  4929                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  4930                           ;Update_Crc@input_bit stored from wreg
  4931  0D76  0020               	movlb	0	; select bank0
  4932  0D77  00A2               	movwf	Update_Crc@input_bit
  4933                           
  4934                           ;ax25.c: 25: crc ^= input_bit;
  4935  0D78  0822               	movf	Update_Crc@input_bit,w
  4936  0D79  00A0               	movwf	??_Update_Crc
  4937  0D7A  01A1               	clrf	??_Update_Crc+1
  4938  0D7B  0820               	movf	??_Update_Crc,w
  4939  0D7C  0021               	movlb	1	; select bank1
  4940  0D7D  06B9               	xorwf	_crc^(0+128),f
  4941  0D7E  0020               	movlb	0	; select bank0
  4942  0D7F  0821               	movf	??_Update_Crc+1,w
  4943  0D80  0021               	movlb	1	; select bank1
  4944  0D81  06BA               	xorwf	(_crc+1)^(0+128),f
  4945                           
  4946                           ;ax25.c: 26: if (crc & 1)
  4947  0D82  1C39               	btfss	_crc^(0+128),0
  4948  0D83  2D97               	goto	l2055
  4949                           
  4950                           ;ax25.c: 27: crc = (crc >> 1) ^ 0x8408;
  4951  0D84  083A               	movf	(_crc+1)^(0+128),w
  4952  0D85  0020               	movlb	0	; select bank0
  4953  0D86  00A1               	movwf	??_Update_Crc+1
  4954  0D87  0021               	movlb	1	; select bank1
  4955  0D88  0839               	movf	_crc^(0+128),w
  4956  0D89  0020               	movlb	0	; select bank0
  4957  0D8A  00A0               	movwf	??_Update_Crc
  4958  0D8B  36A1               	lsrf	??_Update_Crc+1,f
  4959  0D8C  0CA0               	rrf	??_Update_Crc,f
  4960  0D8D  3008               	movlw	8
  4961  0D8E  0620               	xorwf	??_Update_Crc,w
  4962  0D8F  0021               	movlb	1	; select bank1
  4963  0D90  00B9               	movwf	_crc^(0+128)
  4964  0D91  3084               	movlw	132
  4965  0D92  0020               	movlb	0	; select bank0
  4966  0D93  0621               	xorwf	??_Update_Crc+1,w
  4967  0D94  0021               	movlb	1	; select bank1
  4968  0D95  00BA               	movwf	(_crc+1)^(0+128)
  4969  0D96  0008               	return
  4970  0D97                     l2055:	
  4971                           
  4972                           ;ax25.c: 28: else
  4973                           ;ax25.c: 29: crc = crc >> 1;
  4974  0D97  083A               	movf	(_crc+1)^(0+128),w
  4975  0D98  0020               	movlb	0	; select bank0
  4976  0D99  00A1               	movwf	??_Update_Crc+1
  4977  0D9A  0021               	movlb	1	; select bank1
  4978  0D9B  0839               	movf	_crc^(0+128),w
  4979  0D9C  0020               	movlb	0	; select bank0
  4980  0D9D  00A0               	movwf	??_Update_Crc
  4981  0D9E  36A1               	lsrf	??_Update_Crc+1,f
  4982  0D9F  0CA0               	rrf	??_Update_Crc,f
  4983  0DA0  0820               	movf	??_Update_Crc,w
  4984  0DA1  0021               	movlb	1	; select bank1
  4985  0DA2  00B9               	movwf	_crc^(0+128)
  4986  0DA3  0020               	movlb	0	; select bank0
  4987  0DA4  0821               	movf	??_Update_Crc+1,w
  4988  0DA5  0021               	movlb	1	; select bank1
  4989  0DA6  00BA               	movwf	(_crc+1)^(0+128)
  4990  0DA7  0008               	return
  4991  0DA8                     __end_of_Update_Crc:	
  4992                           
  4993                           	psect	text27
  4994  0365                     __ptext27:	
  4995 ;; *************** function _Ax25_Send_Flag *****************
  4996 ;; Defined at:
  4997 ;;		line 77 in file "ax25.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;  i               2    7[BANK0 ] int 
  5002 ;;  byte            1    6[BANK0 ] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;		None               void
  5005 ;; Registers used:
  5006 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5013 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5014 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;Total ram usage:        9 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    4
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_Ax25_Send_Header
  5023 ;;		_Ax25_Send_Footer
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           
  5028                           ;psect for function _Ax25_Send_Flag
  5029  0365                     _Ax25_Send_Flag:	
  5030                           
  5031                           ;ax25.c: 79: uint8_t byte = 0x7e;
  5032                           
  5033                           ;incstack = 0
  5034                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  5035  0365  307E               	movlw	126
  5036  0366  0020               	movlb	0	; select bank0
  5037  0367  00A0               	movwf	??_Ax25_Send_Flag
  5038  0368  0820               	movf	??_Ax25_Send_Flag,w
  5039  0369  00A6               	movwf	Ax25_Send_Flag@byte
  5040                           
  5041                           ;ax25.c: 80: int i;
  5042                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  5043  036A  01A7               	clrf	Ax25_Send_Flag@i
  5044  036B  01A8               	clrf	Ax25_Send_Flag@i+1
  5045  036C                     L4:	
  5046  036C  0828               	movf	Ax25_Send_Flag@i+1,w
  5047  036D  3A80               	xorlw	128
  5048  036E  00A0               	movwf	??_Ax25_Send_Flag
  5049  036F  3080               	movlw	128
  5050  0370  0220               	subwf	??_Ax25_Send_Flag,w
  5051  0371  3008               	movlw	8
  5052  0372  1903               	btfsc	3,2
  5053  0373  0227               	subwf	Ax25_Send_Flag@i,w
  5054  0374  1803               	btfsc	3,0
  5055  0375  0008               	return
  5056                           
  5057                           ;ax25.c: 82: if (modem_packet_size >= 64 * 8)
  5058  0376  3000               	movlw	0
  5059  0377  027D               	subwf	_modem_packet_size+3,w
  5060  0378  1D03               	skipz
  5061  0379  2B84               	goto	u1865
  5062  037A  3000               	movlw	0
  5063  037B  027C               	subwf	_modem_packet_size+2,w
  5064  037C  1D03               	skipz
  5065  037D  2B84               	goto	u1865
  5066  037E  3002               	movlw	2
  5067  037F  027B               	subwf	_modem_packet_size+1,w
  5068  0380  1D03               	skipz
  5069  0381  2B84               	goto	u1865
  5070  0382  3000               	movlw	0
  5071  0383  027A               	subwf	_modem_packet_size,w
  5072  0384                     u1865:	
  5073  0384  1803               	btfsc	3,0
  5074  0385  0008               	return
  5075                           
  5076                           ;ax25.c: 84: if ((byte >> i) & 1)
  5077                           
  5078                           ;ax25.c: 83: return;
  5079  0386  0020               	movlb	0	; select bank0
  5080  0387  0826               	movf	Ax25_Send_Flag@byte,w
  5081  0388  00A0               	movwf	??_Ax25_Send_Flag
  5082  0389  0A27               	incf	Ax25_Send_Flag@i,w
  5083  038A  2B8C               	goto	u1874
  5084  038B                     u1875:	
  5085  038B  36A0               	lsrf	??_Ax25_Send_Flag,f
  5086  038C                     u1874:	
  5087  038C  0B89               	decfsz	9,f
  5088  038D  2B8B               	goto	u1875
  5089  038E  1C20               	btfss	??_Ax25_Send_Flag,0
  5090  038F  2BB2               	goto	l2257
  5091                           
  5092                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  5093  0390  3001               	movlw	1
  5094  0391  00A0               	movwf	??_Ax25_Send_Flag
  5095  0392  087A               	movf	_modem_packet_size,w
  5096  0393  3907               	andlw	7
  5097  0394  0A89               	incf	9,f
  5098  0395  2B97               	goto	u1894
  5099  0396                     u1895:	
  5100  0396  35A0               	lslf	??_Ax25_Send_Flag,f
  5101  0397                     u1894:	
  5102  0397  0B89               	decfsz	9,f
  5103  0398  2B96               	goto	u1895
  5104  0399  0820               	movf	??_Ax25_Send_Flag,w
  5105  039A  00A1               	movwf	??_Ax25_Send_Flag+1
  5106  039B  087A               	movf	_modem_packet_size,w
  5107  039C  00A2               	movwf	??_Ax25_Send_Flag+2
  5108  039D  087B               	movf	_modem_packet_size+1,w
  5109  039E  00A3               	movwf	??_Ax25_Send_Flag+3
  5110  039F  087C               	movf	_modem_packet_size+2,w
  5111  03A0  00A4               	movwf	??_Ax25_Send_Flag+4
  5112  03A1  087D               	movf	_modem_packet_size+3,w
  5113  03A2  00A5               	movwf	??_Ax25_Send_Flag+5
  5114  03A3  3003               	movlw	3
  5115  03A4                     u1905:	
  5116  03A4  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  5117  03A5  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  5118  03A6  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  5119  03A7  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  5120  03A8  0B89               	decfsz	9,f
  5121  03A9  2BA4               	goto	u1905
  5122  03AA  0822               	movf	??_Ax25_Send_Flag+2,w
  5123  03AB  3EA0               	addlw	_modem_packet& (0+255)
  5124  03AC  0086               	movwf	6
  5125  03AD  3001               	movlw	1	; select bank3/4
  5126  03AE  0087               	movwf	7
  5127  03AF  0821               	movf	??_Ax25_Send_Flag+1,w
  5128  03B0  0481               	iorwf	1,f
  5129  03B1  2BD4               	goto	l2259
  5130  03B2                     l2257:	
  5131                           
  5132                           ;ax25.c: 86: else
  5133                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  5134  03B2  3001               	movlw	1
  5135  03B3  00A0               	movwf	??_Ax25_Send_Flag
  5136  03B4  087A               	movf	_modem_packet_size,w
  5137  03B5  3907               	andlw	7
  5138  03B6  0A89               	incf	9,f
  5139  03B7  2BB9               	goto	u1914
  5140  03B8                     u1915:	
  5141  03B8  35A0               	lslf	??_Ax25_Send_Flag,f
  5142  03B9                     u1914:	
  5143  03B9  0B89               	decfsz	9,f
  5144  03BA  2BB8               	goto	u1915
  5145  03BB  0820               	movf	??_Ax25_Send_Flag,w
  5146  03BC  3AFF               	xorlw	255
  5147  03BD  00A1               	movwf	??_Ax25_Send_Flag+1
  5148  03BE  087A               	movf	_modem_packet_size,w
  5149  03BF  00A2               	movwf	??_Ax25_Send_Flag+2
  5150  03C0  087B               	movf	_modem_packet_size+1,w
  5151  03C1  00A3               	movwf	??_Ax25_Send_Flag+3
  5152  03C2  087C               	movf	_modem_packet_size+2,w
  5153  03C3  00A4               	movwf	??_Ax25_Send_Flag+4
  5154  03C4  087D               	movf	_modem_packet_size+3,w
  5155  03C5  00A5               	movwf	??_Ax25_Send_Flag+5
  5156  03C6  3003               	movlw	3
  5157  03C7                     u1925:	
  5158  03C7  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  5159  03C8  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  5160  03C9  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  5161  03CA  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  5162  03CB  0B89               	decfsz	9,f
  5163  03CC  2BC7               	goto	u1925
  5164  03CD  0822               	movf	??_Ax25_Send_Flag+2,w
  5165  03CE  3EA0               	addlw	_modem_packet& (0+255)
  5166  03CF  0086               	movwf	6
  5167  03D0  3001               	movlw	1	; select bank3/4
  5168  03D1  0087               	movwf	7
  5169  03D2  0821               	movf	??_Ax25_Send_Flag+1,w
  5170  03D3  0581               	andwf	1,f
  5171  03D4                     l2259:	
  5172  03D4  3001               	movlw	1
  5173  03D5  07A7               	addwf	Ax25_Send_Flag@i,f
  5174  03D6  3000               	movlw	0
  5175  03D7  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  5176  03D8  3001               	movlw	1
  5177  03D9  07FA               	addwf	_modem_packet_size,f
  5178  03DA  3000               	movlw	0
  5179  03DB  3DFB               	addwfc	_modem_packet_size+1,f
  5180  03DC  3000               	movlw	0
  5181  03DD  3DFC               	addwfc	_modem_packet_size+2,f
  5182  03DE  3000               	movlw	0
  5183  03DF  3DFD               	addwfc	_modem_packet_size+3,f
  5184  03E0  2B6C               	goto	L4
  5185  03E1                     __end_of_Ax25_Send_Flag:	
  5186                           
  5187                           	psect	text28
  5188  0768                     __ptext28:	
  5189 ;; *************** function _Adf_Lock *****************
  5190 ;; Defined at:
  5191 ;;		line 231 in file "adf7012.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  bias            2   10[BANK1 ] int 
  5196 ;;  adj             2    8[BANK1 ] int 
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      unsigned char 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;Total ram usage:        6 bytes
  5211 ;; Hardware stack levels used:    1
  5212 ;; Hardware stack levels required when called:    9
  5213 ;; This function calls:
  5214 ;;		_Adf_Locked
  5215 ;;		_Adf_Write_Register_Three
  5216 ;;		_Adf_Write_Register_Zero
  5217 ;;		_Delay_ms
  5218 ;; This function is called by:
  5219 ;;		_main
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           
  5224                           ;psect for function _Adf_Lock
  5225  0768                     _Adf_Lock:	
  5226                           
  5227                           ;adf7012.c: 234: Delay_ms(200);
  5228                           
  5229                           ;incstack = 0
  5230                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5231  0768  30C8               	movlw	200
  5232  0769  0020               	movlb	0	; select bank0
  5233  076A  00A0               	movwf	Delay_ms@time_to_delay
  5234  076B  3000               	movlw	0
  5235  076C  00A1               	movwf	Delay_ms@time_to_delay+1
  5236  076D  318C  2484  3187   	fcall	_Delay_ms
  5237                           
  5238                           ;adf7012.c: 235: int adj = adf_config.r0.vco_adjust;
  5239  0770  0022               	movlb	2	; select bank2
  5240  0771  0828               	movf	(_adf_config^(0+256)+8),w
  5241  0772  0020               	movlb	0	; select bank0
  5242  0773  00EB               	movwf	??_Adf_Lock
  5243  0774  01EC               	clrf	??_Adf_Lock+1
  5244  0775  086B               	movf	??_Adf_Lock,w
  5245  0776  0021               	movlb	1	; select bank1
  5246  0777  00D1               	movwf	Adf_Lock@adj^(0+128)
  5247  0778  0020               	movlb	0	; select bank0
  5248  0779  086C               	movf	??_Adf_Lock+1,w
  5249  077A  0021               	movlb	1	; select bank1
  5250  077B  00D2               	movwf	(Adf_Lock@adj+1)^(0+128)
  5251                           
  5252                           ;adf7012.c: 236: int bias = adf_config.r3.vco_bias;
  5253  077C  0022               	movlb	2	; select bank2
  5254  077D  0843               	movf	(_adf_config^(0+256)+35),w
  5255  077E  0020               	movlb	0	; select bank0
  5256  077F  00EB               	movwf	??_Adf_Lock
  5257  0780  01EC               	clrf	??_Adf_Lock+1
  5258  0781  086B               	movf	??_Adf_Lock,w
  5259  0782  0021               	movlb	1	; select bank1
  5260  0783  00D3               	movwf	Adf_Lock@bias^(0+128)
  5261  0784  0020               	movlb	0	; select bank0
  5262  0785  086C               	movf	??_Adf_Lock+1,w
  5263  0786  0021               	movlb	1	; select bank1
  5264  0787  00D4               	movwf	(Adf_Lock@bias+1)^(0+128)
  5265                           
  5266                           ;adf7012.c: 238: adf_config.r3.pll_enable = 1;
  5267  0788  0022               	movlb	2	; select bank2
  5268  0789  01B9               	clrf	(_adf_config^(0+256)+25)
  5269  078A  0AB9               	incf	(_adf_config^(0+256)+25),f
  5270                           
  5271                           ;adf7012.c: 240: adf_config.r3.muxout = 5;
  5272  078B  3005               	movlw	5
  5273  078C  0020               	movlb	0	; select bank0
  5274  078D  00EB               	movwf	??_Adf_Lock
  5275  078E  086B               	movf	??_Adf_Lock,w
  5276  078F  0022               	movlb	2	; select bank2
  5277  0790  00C1               	movwf	(_adf_config^(0+256)+33)
  5278                           
  5279                           ;adf7012.c: 243: Adf_Write_Register_Zero();
  5280  0791  3182  229E  3187   	fcall	_Adf_Write_Register_Zero
  5281                           
  5282                           ;adf7012.c: 244: Adf_Write_Register_Three();
  5283  0794  3180  205A  3187   	fcall	_Adf_Write_Register_Three
  5284                           
  5285                           ;adf7012.c: 246: Delay_ms(5);
  5286  0797  3005               	movlw	5
  5287  0798  0020               	movlb	0	; select bank0
  5288  0799  00A0               	movwf	Delay_ms@time_to_delay
  5289  079A  3000               	movlw	0
  5290  079B  00A1               	movwf	Delay_ms@time_to_delay+1
  5291  079C  318C  2484  3187   	fcall	_Delay_ms
  5292  079F                     l2563:	
  5293                           ;adf7012.c: 248: while(!Adf_Locked()) {
  5294                           
  5295  079F  318B  2354  3187   	fcall	_Adf_Locked
  5296  07A2  3A00               	xorlw	0
  5297  07A3  1D03               	btfss	3,2
  5298  07A4  0008               	return
  5299                           
  5300                           ;adf7012.c: 250: adf_config.r0.vco_adjust = adj;
  5301  07A5  0021               	movlb	1	; select bank1
  5302  07A6  0851               	movf	Adf_Lock@adj^(0+128),w
  5303  07A7  0020               	movlb	0	; select bank0
  5304  07A8  00EB               	movwf	??_Adf_Lock
  5305  07A9  086B               	movf	??_Adf_Lock,w
  5306  07AA  0022               	movlb	2	; select bank2
  5307  07AB  00A8               	movwf	(_adf_config^(0+256)+8)
  5308                           
  5309                           ;adf7012.c: 251: adf_config.r3.vco_bias = bias;
  5310  07AC  0021               	movlb	1	; select bank1
  5311  07AD  0853               	movf	Adf_Lock@bias^(0+128),w
  5312  07AE  0020               	movlb	0	; select bank0
  5313  07AF  00EB               	movwf	??_Adf_Lock
  5314  07B0  086B               	movf	??_Adf_Lock,w
  5315  07B1  0022               	movlb	2	; select bank2
  5316  07B2  00C3               	movwf	(_adf_config^(0+256)+35)
  5317                           
  5318                           ;adf7012.c: 253: adf_config.r3.muxout = 5;
  5319  07B3  3005               	movlw	5
  5320  07B4  0020               	movlb	0	; select bank0
  5321  07B5  00EB               	movwf	??_Adf_Lock
  5322  07B6  086B               	movf	??_Adf_Lock,w
  5323  07B7  0022               	movlb	2	; select bank2
  5324  07B8  00C1               	movwf	(_adf_config^(0+256)+33)
  5325                           
  5326                           ;adf7012.c: 255: Adf_Write_Register_Zero();
  5327  07B9  3182  229E  3187   	fcall	_Adf_Write_Register_Zero
  5328                           
  5329                           ;adf7012.c: 256: Adf_Write_Register_Three();
  5330  07BC  3180  205A  3187   	fcall	_Adf_Write_Register_Three
  5331                           
  5332                           ;adf7012.c: 258: Delay_ms(5);
  5333  07BF  3005               	movlw	5
  5334  07C0  0020               	movlb	0	; select bank0
  5335  07C1  00A0               	movwf	Delay_ms@time_to_delay
  5336  07C2  3000               	movlw	0
  5337  07C3  00A1               	movwf	Delay_ms@time_to_delay+1
  5338  07C4  318C  2484  3187   	fcall	_Delay_ms
  5339                           
  5340                           ;adf7012.c: 259: if(++bias == 14) {
  5341  07C7  3001               	movlw	1
  5342  07C8  0021               	movlb	1	; select bank1
  5343  07C9  07D3               	addwf	Adf_Lock@bias^(0+128),f
  5344  07CA  3000               	movlw	0
  5345  07CB  3DD4               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  5346  07CC  300E               	movlw	14
  5347  07CD  0653               	xorwf	Adf_Lock@bias^(0+128),w
  5348  07CE  0454               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  5349  07CF  1D03               	skipz
  5350  07D0  2F9F               	goto	l2563
  5351                           
  5352                           ;adf7012.c: 260: bias = 1;
  5353  07D1  3001               	movlw	1
  5354  07D2  00D3               	movwf	Adf_Lock@bias^(0+128)
  5355  07D3  3000               	movlw	0
  5356  07D4  00D4               	movwf	(Adf_Lock@bias^(0+128)+1)
  5357                           
  5358                           ;adf7012.c: 261: if(++adj == 4) {
  5359  07D5  3001               	movlw	1
  5360  07D6  07D1               	addwf	Adf_Lock@adj^(0+128),f
  5361  07D7  3000               	movlw	0
  5362  07D8  3DD2               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  5363  07D9  3004               	movlw	4
  5364  07DA  0651               	xorwf	Adf_Lock@adj^(0+128),w
  5365  07DB  0452               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  5366  07DC  1D03               	skipz
  5367  07DD  2F9F               	goto	l2563
  5368                           
  5369                           ;adf7012.c: 263: adf_config.r0.vco_adjust = 0;
  5370  07DE  0022               	movlb	2	; select bank2
  5371  07DF  01A8               	clrf	(_adf_config^(0+256)+8)
  5372                           
  5373                           ;adf7012.c: 264: adf_config.r3.vco_bias = 5;
  5374  07E0  3005               	movlw	5
  5375  07E1  0020               	movlb	0	; select bank0
  5376  07E2  00EB               	movwf	??_Adf_Lock
  5377  07E3  086B               	movf	??_Adf_Lock,w
  5378  07E4  0022               	movlb	2	; select bank2
  5379  07E5  00C3               	movwf	(_adf_config^(0+256)+35)
  5380                           
  5381                           ;adf7012.c: 266: return 0;
  5382                           ;	Return value of _Adf_Lock is never used
  5383  07E6  0008               	return
  5384  07E7                     __end_of_Adf_Lock:	
  5385                           ;adf7012.c: 267: }
  5386                           ;adf7012.c: 268: }
  5387                           ;adf7012.c: 269: }
  5388                           ;adf7012.c: 273: return 1;
  5389                           ;	Return value of _Adf_Lock is never used
  5390                           
  5391                           
  5392                           	psect	text29
  5393  029E                     __ptext29:	
  5394 ;; *************** function _Adf_Write_Register_Zero *****************
  5395 ;; Defined at:
  5396 ;;		line 157 in file "adf7012.c"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;		None
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  5401 ;;  reg             4   51[BANK0 ] unsigned long 
  5402 ;; Return value:  Size  Location     Type
  5403 ;;		None               void
  5404 ;; Registers used:
  5405 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5413 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5414 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5415 ;;Total ram usage:       36 bytes
  5416 ;; Hardware stack levels used:    1
  5417 ;; Hardware stack levels required when called:    8
  5418 ;; This function calls:
  5419 ;;		_Reverse_Array
  5420 ;;		_Write_Adf7012_Reg
  5421 ;;		_memcpy
  5422 ;; This function is called by:
  5423 ;;		_Adf_Write_Config
  5424 ;;		_Adf_Lock
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           
  5429                           ;psect for function _Adf_Write_Register_Zero
  5430  029E                     _Adf_Write_Register_Zero:	
  5431                           
  5432                           ;adf7012.c: 159: uint32_t reg =
  5433                           ;adf7012.c: 160: (0) |
  5434                           ;adf7012.c: 161: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  5435                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  5436                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  5437                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  5438                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  5439                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  5440                           
  5441                           ;incstack = 0
  5442                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5443  029E  0022               	movlb	2	; select bank2
  5444  029F  0829               	movf	(_adf_config^(0+256)+9),w
  5445  02A0  3903               	andlw	3
  5446  02A1  0020               	movlb	0	; select bank0
  5447  02A2  00B3               	movwf	??_Adf_Write_Register_Zero
  5448  02A3  01B4               	clrf	??_Adf_Write_Register_Zero+1
  5449  02A4  01B5               	clrf	??_Adf_Write_Register_Zero+2
  5450  02A5  01B6               	clrf	??_Adf_Write_Register_Zero+3
  5451  02A6  3019               	movlw	25
  5452  02A7                     u1225:	
  5453  02A7  35B3               	lslf	??_Adf_Write_Register_Zero,f
  5454  02A8  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  5455  02A9  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  5456  02AA  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  5457  02AB  0B89               	decfsz	9,f
  5458  02AC  2AA7               	goto	u1225
  5459  02AD  0022               	movlb	2	; select bank2
  5460  02AE  0828               	movf	(_adf_config^(0+256)+8),w
  5461  02AF  3903               	andlw	3
  5462  02B0  0020               	movlb	0	; select bank0
  5463  02B1  00B7               	movwf	??_Adf_Write_Register_Zero+4
  5464  02B2  01B8               	clrf	??_Adf_Write_Register_Zero+5
  5465  02B3  01B9               	clrf	??_Adf_Write_Register_Zero+6
  5466  02B4  01BA               	clrf	??_Adf_Write_Register_Zero+7
  5467  02B5  3017               	movlw	23
  5468  02B6                     u1235:	
  5469  02B6  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  5470  02B7  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  5471  02B8  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  5472  02B9  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  5473  02BA  0B89               	decfsz	9,f
  5474  02BB  2AB6               	goto	u1235
  5475  02BC  0022               	movlb	2	; select bank2
  5476  02BD  0827               	movf	(_adf_config^(0+256)+7),w
  5477  02BE  390F               	andlw	15
  5478  02BF  0020               	movlb	0	; select bank0
  5479  02C0  00BB               	movwf	??_Adf_Write_Register_Zero+8
  5480  02C1  01BC               	clrf	??_Adf_Write_Register_Zero+9
  5481  02C2  01BD               	clrf	??_Adf_Write_Register_Zero+10
  5482  02C3  01BE               	clrf	??_Adf_Write_Register_Zero+11
  5483  02C4  3013               	movlw	19
  5484  02C5                     u1245:	
  5485  02C5  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  5486  02C6  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  5487  02C7  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  5488  02C8  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  5489  02C9  0B89               	decfsz	9,f
  5490  02CA  2AC5               	goto	u1245
  5491  02CB  0022               	movlb	2	; select bank2
  5492  02CC  0826               	movf	(_adf_config^(0+256)+6),w
  5493  02CD  3901               	andlw	1
  5494  02CE  0020               	movlb	0	; select bank0
  5495  02CF  00BF               	movwf	??_Adf_Write_Register_Zero+12
  5496  02D0  01C0               	clrf	??_Adf_Write_Register_Zero+13
  5497  02D1  01C1               	clrf	??_Adf_Write_Register_Zero+14
  5498  02D2  01C2               	clrf	??_Adf_Write_Register_Zero+15
  5499  02D3  3012               	movlw	18
  5500  02D4                     u1255:	
  5501  02D4  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  5502  02D5  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  5503  02D6  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  5504  02D7  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  5505  02D8  0B89               	decfsz	9,f
  5506  02D9  2AD4               	goto	u1255
  5507  02DA  0022               	movlb	2	; select bank2
  5508  02DB  0825               	movf	(_adf_config^(0+256)+5),w
  5509  02DC  3901               	andlw	1
  5510  02DD  0020               	movlb	0	; select bank0
  5511  02DE  00C3               	movwf	??_Adf_Write_Register_Zero+16
  5512  02DF  01C4               	clrf	??_Adf_Write_Register_Zero+17
  5513  02E0  01C5               	clrf	??_Adf_Write_Register_Zero+18
  5514  02E1  01C6               	clrf	??_Adf_Write_Register_Zero+19
  5515  02E2  3011               	movlw	17
  5516  02E3                     u1265:	
  5517  02E3  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  5518  02E4  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  5519  02E5  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  5520  02E6  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  5521  02E7  0B89               	decfsz	9,f
  5522  02E8  2AE3               	goto	u1265
  5523  02E9  0022               	movlb	2	; select bank2
  5524  02EA  0824               	movf	(_adf_config^(0+256)+4),w
  5525  02EB  390F               	andlw	15
  5526  02EC  0020               	movlb	0	; select bank0
  5527  02ED  00C7               	movwf	??_Adf_Write_Register_Zero+20
  5528  02EE  01C8               	clrf	??_Adf_Write_Register_Zero+21
  5529  02EF  01C9               	clrf	??_Adf_Write_Register_Zero+22
  5530  02F0  01CA               	clrf	??_Adf_Write_Register_Zero+23
  5531  02F1  300D               	movlw	13
  5532  02F2                     u1275:	
  5533  02F2  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  5534  02F3  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  5535  02F4  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  5536  02F5  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  5537  02F6  0B89               	decfsz	9,f
  5538  02F7  2AF2               	goto	u1275
  5539  02F8  30FF               	movlw	255
  5540  02F9  0022               	movlb	2	; select bank2
  5541  02FA  0520               	andwf	_adf_config^(0+256),w
  5542  02FB  0020               	movlb	0	; select bank0
  5543  02FC  00CB               	movwf	??_Adf_Write_Register_Zero+24
  5544  02FD  3007               	movlw	7
  5545  02FE  0022               	movlb	2	; select bank2
  5546  02FF  0521               	andwf	(_adf_config+1)^(0+256),w
  5547  0300  0020               	movlb	0	; select bank0
  5548  0301  00CC               	movwf	??_Adf_Write_Register_Zero+25
  5549  0302  3000               	movlw	0
  5550  0303  0022               	movlb	2	; select bank2
  5551  0304  0522               	andwf	(_adf_config+2)^(0+256),w
  5552  0305  0020               	movlb	0	; select bank0
  5553  0306  00CD               	movwf	??_Adf_Write_Register_Zero+26
  5554  0307  3000               	movlw	0
  5555  0308  0022               	movlb	2	; select bank2
  5556  0309  0523               	andwf	(_adf_config+3)^(0+256),w
  5557  030A  0020               	movlb	0	; select bank0
  5558  030B  00CE               	movwf	??_Adf_Write_Register_Zero+27
  5559  030C  3002               	movlw	2
  5560  030D                     u1285:	
  5561  030D  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  5562  030E  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  5563  030F  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  5564  0310  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  5565  0311  0B89               	decfsz	9,f
  5566  0312  2B0D               	goto	u1285
  5567  0313  084B               	movf	??_Adf_Write_Register_Zero+24,w
  5568  0314  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  5569  0315  084C               	movf	??_Adf_Write_Register_Zero+25,w
  5570  0316  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  5571  0317  084D               	movf	??_Adf_Write_Register_Zero+26,w
  5572  0318  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  5573  0319  084E               	movf	??_Adf_Write_Register_Zero+27,w
  5574  031A  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  5575  031B  0847               	movf	??_Adf_Write_Register_Zero+20,w
  5576  031C  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  5577  031D  0848               	movf	??_Adf_Write_Register_Zero+21,w
  5578  031E  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  5579  031F  0849               	movf	??_Adf_Write_Register_Zero+22,w
  5580  0320  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  5581  0321  084A               	movf	??_Adf_Write_Register_Zero+23,w
  5582  0322  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  5583  0323  0843               	movf	??_Adf_Write_Register_Zero+16,w
  5584  0324  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  5585  0325  0844               	movf	??_Adf_Write_Register_Zero+17,w
  5586  0326  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  5587  0327  0845               	movf	??_Adf_Write_Register_Zero+18,w
  5588  0328  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  5589  0329  0846               	movf	??_Adf_Write_Register_Zero+19,w
  5590  032A  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  5591  032B  083F               	movf	??_Adf_Write_Register_Zero+12,w
  5592  032C  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  5593  032D  0840               	movf	??_Adf_Write_Register_Zero+13,w
  5594  032E  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  5595  032F  0841               	movf	??_Adf_Write_Register_Zero+14,w
  5596  0330  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  5597  0331  0842               	movf	??_Adf_Write_Register_Zero+15,w
  5598  0332  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  5599  0333  083B               	movf	??_Adf_Write_Register_Zero+8,w
  5600  0334  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  5601  0335  083C               	movf	??_Adf_Write_Register_Zero+9,w
  5602  0336  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  5603  0337  083D               	movf	??_Adf_Write_Register_Zero+10,w
  5604  0338  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  5605  0339  083E               	movf	??_Adf_Write_Register_Zero+11,w
  5606  033A  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  5607  033B  0833               	movf	??_Adf_Write_Register_Zero,w
  5608  033C  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  5609  033D  00D3               	movwf	Adf_Write_Register_Zero@reg
  5610  033E  0834               	movf	??_Adf_Write_Register_Zero+1,w
  5611  033F  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  5612  0340  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  5613  0341  0835               	movf	??_Adf_Write_Register_Zero+2,w
  5614  0342  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  5615  0343  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  5616  0344  0836               	movf	??_Adf_Write_Register_Zero+3,w
  5617  0345  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  5618  0346  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  5619                           
  5620                           ;adf7012.c: 170: uint8_t reg_ptr[4];
  5621                           ;adf7012.c: 171: memcpy(reg_ptr, &reg, 4);
  5622  0347  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  5623  0348  00B3               	movwf	??_Adf_Write_Register_Zero
  5624  0349  0833               	movf	??_Adf_Write_Register_Zero,w
  5625  034A  00A0               	movwf	memcpy@s1
  5626  034B  3004               	movlw	4
  5627  034C  00A1               	movwf	memcpy@n
  5628  034D  3000               	movlw	0
  5629  034E  00A2               	movwf	memcpy@n+1
  5630  034F  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5631  0350  318C  24CA  3182   	fcall	_memcpy
  5632                           
  5633                           ;adf7012.c: 172: Reverse_Array(reg_ptr,4);
  5634  0353  3004               	movlw	4
  5635  0354  0020               	movlb	0	; select bank0
  5636  0355  00B3               	movwf	??_Adf_Write_Register_Zero
  5637  0356  0833               	movf	??_Adf_Write_Register_Zero,w
  5638  0357  00A7               	movwf	Reverse_Array@length
  5639  0358  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5640  0359  318E  261D  3182   	fcall	_Reverse_Array
  5641                           
  5642                           ;adf7012.c: 173: Write_Adf7012_Reg(reg_ptr, 4);
  5643  035C  3004               	movlw	4
  5644  035D  0020               	movlb	0	; select bank0
  5645  035E  00B3               	movwf	??_Adf_Write_Register_Zero
  5646  035F  0833               	movf	??_Adf_Write_Register_Zero,w
  5647  0360  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5648  0361  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  5649  0362  318D  25A8         	fcall	_Write_Adf7012_Reg
  5650  0364  0008               	return
  5651  0365                     __end_of_Adf_Write_Register_Zero:	
  5652                           
  5653                           	psect	text30
  5654  005A                     __ptext30:	
  5655 ;; *************** function _Adf_Write_Register_Three *****************
  5656 ;; Defined at:
  5657 ;;		line 206 in file "adf7012.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;		None
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  5662 ;;  reg             4    4[BANK1 ] unsigned long 
  5663 ;; Return value:  Size  Location     Type
  5664 ;;		None               void
  5665 ;; Registers used:
  5666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5673 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5674 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5675 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5676 ;;Total ram usage:       64 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    8
  5679 ;; This function calls:
  5680 ;;		_Reverse_Array
  5681 ;;		_Write_Adf7012_Reg
  5682 ;;		_memcpy
  5683 ;; This function is called by:
  5684 ;;		_Adf_Write_Config
  5685 ;;		_Adf_Lock
  5686 ;;		_Ptt_On
  5687 ;;		_Ptt_Off
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           
  5692                           ;psect for function _Adf_Write_Register_Three
  5693  005A                     _Adf_Write_Register_Three:	
  5694                           
  5695                           ;adf7012.c: 207: uint32_t reg =
  5696                           ;adf7012.c: 208: (3) |
  5697                           ;adf7012.c: 209: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  5698                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  5699                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  5700                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  5701                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  5702                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  5703                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  5704                           
  5705                           ;incstack = 0
  5706                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5707  005A  0022               	movlb	2	; select bank2
  5708  005B  0846               	movf	(_adf_config^(0+256)+38),w
  5709  005C  390F               	andlw	15
  5710  005D  0020               	movlb	0	; select bank0
  5711  005E  00B3               	movwf	??_Adf_Write_Register_Three
  5712  005F  01B4               	clrf	??_Adf_Write_Register_Three+1
  5713  0060  01B5               	clrf	??_Adf_Write_Register_Three+2
  5714  0061  01B6               	clrf	??_Adf_Write_Register_Three+3
  5715  0062  301C               	movlw	28
  5716  0063                     u1385:	
  5717  0063  35B3               	lslf	??_Adf_Write_Register_Three,f
  5718  0064  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  5719  0065  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  5720  0066  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  5721  0067  0B89               	decfsz	9,f
  5722  0068  2863               	goto	u1385
  5723  0069  0022               	movlb	2	; select bank2
  5724  006A  0845               	movf	(_adf_config^(0+256)+37),w
  5725  006B  391F               	andlw	31
  5726  006C  0020               	movlb	0	; select bank0
  5727  006D  00B7               	movwf	??_Adf_Write_Register_Three+4
  5728  006E  01B8               	clrf	??_Adf_Write_Register_Three+5
  5729  006F  01B9               	clrf	??_Adf_Write_Register_Three+6
  5730  0070  01BA               	clrf	??_Adf_Write_Register_Three+7
  5731  0071  3017               	movlw	23
  5732  0072                     u1395:	
  5733  0072  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  5734  0073  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  5735  0074  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  5736  0075  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  5737  0076  0B89               	decfsz	9,f
  5738  0077  2872               	goto	u1395
  5739  0078  0022               	movlb	2	; select bank2
  5740  0079  0844               	movf	(_adf_config^(0+256)+36),w
  5741  007A  3907               	andlw	7
  5742  007B  0020               	movlb	0	; select bank0
  5743  007C  00BB               	movwf	??_Adf_Write_Register_Three+8
  5744  007D  01BC               	clrf	??_Adf_Write_Register_Three+9
  5745  007E  01BD               	clrf	??_Adf_Write_Register_Three+10
  5746  007F  01BE               	clrf	??_Adf_Write_Register_Three+11
  5747  0080  3014               	movlw	20
  5748  0081                     u1405:	
  5749  0081  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  5750  0082  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  5751  0083  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  5752  0084  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  5753  0085  0B89               	decfsz	9,f
  5754  0086  2881               	goto	u1405
  5755  0087  0022               	movlb	2	; select bank2
  5756  0088  0843               	movf	(_adf_config^(0+256)+35),w
  5757  0089  390F               	andlw	15
  5758  008A  0020               	movlb	0	; select bank0
  5759  008B  00BF               	movwf	??_Adf_Write_Register_Three+12
  5760  008C  01C0               	clrf	??_Adf_Write_Register_Three+13
  5761  008D  01C1               	clrf	??_Adf_Write_Register_Three+14
  5762  008E  01C2               	clrf	??_Adf_Write_Register_Three+15
  5763  008F  3010               	movlw	16
  5764  0090                     u1415:	
  5765  0090  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  5766  0091  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  5767  0092  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  5768  0093  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  5769  0094  0B89               	decfsz	9,f
  5770  0095  2890               	goto	u1415
  5771  0096  0022               	movlb	2	; select bank2
  5772  0097  0842               	movf	(_adf_config^(0+256)+34),w
  5773  0098  3901               	andlw	1
  5774  0099  0020               	movlb	0	; select bank0
  5775  009A  00C3               	movwf	??_Adf_Write_Register_Three+16
  5776  009B  01C4               	clrf	??_Adf_Write_Register_Three+17
  5777  009C  01C5               	clrf	??_Adf_Write_Register_Three+18
  5778  009D  01C6               	clrf	??_Adf_Write_Register_Three+19
  5779  009E  300F               	movlw	15
  5780  009F                     u1425:	
  5781  009F  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  5782  00A0  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  5783  00A1  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  5784  00A2  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  5785  00A3  0B89               	decfsz	9,f
  5786  00A4  289F               	goto	u1425
  5787  00A5  0022               	movlb	2	; select bank2
  5788  00A6  0841               	movf	(_adf_config^(0+256)+33),w
  5789  00A7  390F               	andlw	15
  5790  00A8  0020               	movlb	0	; select bank0
  5791  00A9  00C7               	movwf	??_Adf_Write_Register_Three+20
  5792  00AA  01C8               	clrf	??_Adf_Write_Register_Three+21
  5793  00AB  01C9               	clrf	??_Adf_Write_Register_Three+22
  5794  00AC  01CA               	clrf	??_Adf_Write_Register_Three+23
  5795  00AD  300B               	movlw	11
  5796  00AE                     u1435:	
  5797  00AE  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  5798  00AF  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  5799  00B0  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  5800  00B1  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  5801  00B2  0B89               	decfsz	9,f
  5802  00B3  28AE               	goto	u1435
  5803  00B4  0022               	movlb	2	; select bank2
  5804  00B5  0840               	movf	(_adf_config^(0+256)+32),w
  5805  00B6  3901               	andlw	1
  5806  00B7  0020               	movlb	0	; select bank0
  5807  00B8  00CB               	movwf	??_Adf_Write_Register_Three+24
  5808  00B9  01CC               	clrf	??_Adf_Write_Register_Three+25
  5809  00BA  01CD               	clrf	??_Adf_Write_Register_Three+26
  5810  00BB  01CE               	clrf	??_Adf_Write_Register_Three+27
  5811  00BC  300A               	movlw	10
  5812  00BD                     u1445:	
  5813  00BD  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  5814  00BE  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  5815  00BF  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  5816  00C0  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  5817  00C1  0B89               	decfsz	9,f
  5818  00C2  28BD               	goto	u1445
  5819  00C3  0022               	movlb	2	; select bank2
  5820  00C4  083F               	movf	(_adf_config^(0+256)+31),w
  5821  00C5  3901               	andlw	1
  5822  00C6  0020               	movlb	0	; select bank0
  5823  00C7  00CF               	movwf	??_Adf_Write_Register_Three+28
  5824  00C8  01D0               	clrf	??_Adf_Write_Register_Three+29
  5825  00C9  01D1               	clrf	??_Adf_Write_Register_Three+30
  5826  00CA  01D2               	clrf	??_Adf_Write_Register_Three+31
  5827  00CB  3009               	movlw	9
  5828  00CC                     u1455:	
  5829  00CC  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  5830  00CD  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  5831  00CE  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  5832  00CF  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  5833  00D0  0B89               	decfsz	9,f
  5834  00D1  28CC               	goto	u1455
  5835  00D2  0022               	movlb	2	; select bank2
  5836  00D3  083E               	movf	(_adf_config^(0+256)+30),w
  5837  00D4  3901               	andlw	1
  5838  00D5  0020               	movlb	0	; select bank0
  5839  00D6  00D3               	movwf	??_Adf_Write_Register_Three+32
  5840  00D7  01D4               	clrf	??_Adf_Write_Register_Three+33
  5841  00D8  01D5               	clrf	??_Adf_Write_Register_Three+34
  5842  00D9  01D6               	clrf	??_Adf_Write_Register_Three+35
  5843  00DA  3008               	movlw	8
  5844  00DB                     u1465:	
  5845  00DB  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  5846  00DC  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  5847  00DD  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  5848  00DE  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  5849  00DF  0B89               	decfsz	9,f
  5850  00E0  28DB               	goto	u1465
  5851  00E1  0022               	movlb	2	; select bank2
  5852  00E2  083D               	movf	(_adf_config^(0+256)+29),w
  5853  00E3  3903               	andlw	3
  5854  00E4  0020               	movlb	0	; select bank0
  5855  00E5  00D7               	movwf	??_Adf_Write_Register_Three+36
  5856  00E6  01D8               	clrf	??_Adf_Write_Register_Three+37
  5857  00E7  01D9               	clrf	??_Adf_Write_Register_Three+38
  5858  00E8  01DA               	clrf	??_Adf_Write_Register_Three+39
  5859  00E9  3006               	movlw	6
  5860  00EA                     u1475:	
  5861  00EA  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  5862  00EB  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  5863  00EC  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  5864  00ED  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  5865  00EE  0B89               	decfsz	9,f
  5866  00EF  28EA               	goto	u1475
  5867  00F0  0022               	movlb	2	; select bank2
  5868  00F1  083C               	movf	(_adf_config^(0+256)+28),w
  5869  00F2  3901               	andlw	1
  5870  00F3  0020               	movlb	0	; select bank0
  5871  00F4  00DB               	movwf	??_Adf_Write_Register_Three+40
  5872  00F5  01DC               	clrf	??_Adf_Write_Register_Three+41
  5873  00F6  01DD               	clrf	??_Adf_Write_Register_Three+42
  5874  00F7  01DE               	clrf	??_Adf_Write_Register_Three+43
  5875  00F8  3005               	movlw	5
  5876  00F9                     u1485:	
  5877  00F9  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  5878  00FA  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  5879  00FB  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  5880  00FC  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  5881  00FD  0B89               	decfsz	9,f
  5882  00FE  28F9               	goto	u1485
  5883  00FF  0022               	movlb	2	; select bank2
  5884  0100  083B               	movf	(_adf_config^(0+256)+27),w
  5885  0101  3901               	andlw	1
  5886  0102  0020               	movlb	0	; select bank0
  5887  0103  00DF               	movwf	??_Adf_Write_Register_Three+44
  5888  0104  01E0               	clrf	??_Adf_Write_Register_Three+45
  5889  0105  01E1               	clrf	??_Adf_Write_Register_Three+46
  5890  0106  01E2               	clrf	??_Adf_Write_Register_Three+47
  5891  0107  3004               	movlw	4
  5892  0108                     u1495:	
  5893  0108  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  5894  0109  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  5895  010A  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  5896  010B  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  5897  010C  0B89               	decfsz	9,f
  5898  010D  2908               	goto	u1495
  5899  010E  0022               	movlb	2	; select bank2
  5900  010F  083A               	movf	(_adf_config^(0+256)+26),w
  5901  0110  3901               	andlw	1
  5902  0111  0020               	movlb	0	; select bank0
  5903  0112  00E3               	movwf	??_Adf_Write_Register_Three+48
  5904  0113  01E4               	clrf	??_Adf_Write_Register_Three+49
  5905  0114  01E5               	clrf	??_Adf_Write_Register_Three+50
  5906  0115  01E6               	clrf	??_Adf_Write_Register_Three+51
  5907  0116  3003               	movlw	3
  5908  0117                     u1505:	
  5909  0117  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  5910  0118  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  5911  0119  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  5912  011A  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  5913  011B  0B89               	decfsz	9,f
  5914  011C  2917               	goto	u1505
  5915  011D  0022               	movlb	2	; select bank2
  5916  011E  0839               	movf	(_adf_config^(0+256)+25),w
  5917  011F  3901               	andlw	1
  5918  0120  0020               	movlb	0	; select bank0
  5919  0121  00E7               	movwf	??_Adf_Write_Register_Three+52
  5920  0122  01E8               	clrf	??_Adf_Write_Register_Three+53
  5921  0123  01E9               	clrf	??_Adf_Write_Register_Three+54
  5922  0124  01EA               	clrf	??_Adf_Write_Register_Three+55
  5923  0125  3002               	movlw	2
  5924  0126                     u1515:	
  5925  0126  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  5926  0127  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  5927  0128  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  5928  0129  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  5929  012A  0B89               	decfsz	9,f
  5930  012B  2926               	goto	u1515
  5931  012C  0867               	movf	??_Adf_Write_Register_Three+52,w
  5932  012D  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  5933  012E  0868               	movf	??_Adf_Write_Register_Three+53,w
  5934  012F  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  5935  0130  0869               	movf	??_Adf_Write_Register_Three+54,w
  5936  0131  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  5937  0132  086A               	movf	??_Adf_Write_Register_Three+55,w
  5938  0133  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  5939  0134  0863               	movf	??_Adf_Write_Register_Three+48,w
  5940  0135  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  5941  0136  0864               	movf	??_Adf_Write_Register_Three+49,w
  5942  0137  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  5943  0138  0865               	movf	??_Adf_Write_Register_Three+50,w
  5944  0139  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  5945  013A  0866               	movf	??_Adf_Write_Register_Three+51,w
  5946  013B  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  5947  013C  085F               	movf	??_Adf_Write_Register_Three+44,w
  5948  013D  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  5949  013E  0860               	movf	??_Adf_Write_Register_Three+45,w
  5950  013F  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  5951  0140  0861               	movf	??_Adf_Write_Register_Three+46,w
  5952  0141  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  5953  0142  0862               	movf	??_Adf_Write_Register_Three+47,w
  5954  0143  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  5955  0144  085B               	movf	??_Adf_Write_Register_Three+40,w
  5956  0145  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  5957  0146  085C               	movf	??_Adf_Write_Register_Three+41,w
  5958  0147  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  5959  0148  085D               	movf	??_Adf_Write_Register_Three+42,w
  5960  0149  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  5961  014A  085E               	movf	??_Adf_Write_Register_Three+43,w
  5962  014B  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  5963  014C  0857               	movf	??_Adf_Write_Register_Three+36,w
  5964  014D  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  5965  014E  0858               	movf	??_Adf_Write_Register_Three+37,w
  5966  014F  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  5967  0150  0859               	movf	??_Adf_Write_Register_Three+38,w
  5968  0151  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  5969  0152  085A               	movf	??_Adf_Write_Register_Three+39,w
  5970  0153  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  5971  0154  0853               	movf	??_Adf_Write_Register_Three+32,w
  5972  0155  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  5973  0156  0854               	movf	??_Adf_Write_Register_Three+33,w
  5974  0157  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  5975  0158  0855               	movf	??_Adf_Write_Register_Three+34,w
  5976  0159  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  5977  015A  0856               	movf	??_Adf_Write_Register_Three+35,w
  5978  015B  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  5979  015C  084F               	movf	??_Adf_Write_Register_Three+28,w
  5980  015D  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  5981  015E  0850               	movf	??_Adf_Write_Register_Three+29,w
  5982  015F  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  5983  0160  0851               	movf	??_Adf_Write_Register_Three+30,w
  5984  0161  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  5985  0162  0852               	movf	??_Adf_Write_Register_Three+31,w
  5986  0163  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  5987  0164  084B               	movf	??_Adf_Write_Register_Three+24,w
  5988  0165  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  5989  0166  084C               	movf	??_Adf_Write_Register_Three+25,w
  5990  0167  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  5991  0168  084D               	movf	??_Adf_Write_Register_Three+26,w
  5992  0169  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  5993  016A  084E               	movf	??_Adf_Write_Register_Three+27,w
  5994  016B  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  5995  016C  0847               	movf	??_Adf_Write_Register_Three+20,w
  5996  016D  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  5997  016E  0848               	movf	??_Adf_Write_Register_Three+21,w
  5998  016F  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  5999  0170  0849               	movf	??_Adf_Write_Register_Three+22,w
  6000  0171  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  6001  0172  084A               	movf	??_Adf_Write_Register_Three+23,w
  6002  0173  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  6003  0174  0843               	movf	??_Adf_Write_Register_Three+16,w
  6004  0175  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  6005  0176  0844               	movf	??_Adf_Write_Register_Three+17,w
  6006  0177  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  6007  0178  0845               	movf	??_Adf_Write_Register_Three+18,w
  6008  0179  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  6009  017A  0846               	movf	??_Adf_Write_Register_Three+19,w
  6010  017B  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  6011  017C  083F               	movf	??_Adf_Write_Register_Three+12,w
  6012  017D  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  6013  017E  0840               	movf	??_Adf_Write_Register_Three+13,w
  6014  017F  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  6015  0180  0841               	movf	??_Adf_Write_Register_Three+14,w
  6016  0181  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  6017  0182  0842               	movf	??_Adf_Write_Register_Three+15,w
  6018  0183  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  6019  0184  083B               	movf	??_Adf_Write_Register_Three+8,w
  6020  0185  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  6021  0186  083C               	movf	??_Adf_Write_Register_Three+9,w
  6022  0187  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  6023  0188  083D               	movf	??_Adf_Write_Register_Three+10,w
  6024  0189  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  6025  018A  083E               	movf	??_Adf_Write_Register_Three+11,w
  6026  018B  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  6027  018C  0837               	movf	??_Adf_Write_Register_Three+4,w
  6028  018D  04B3               	iorwf	??_Adf_Write_Register_Three,f
  6029  018E  0838               	movf	??_Adf_Write_Register_Three+5,w
  6030  018F  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  6031  0190  0839               	movf	??_Adf_Write_Register_Three+6,w
  6032  0191  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  6033  0192  083A               	movf	??_Adf_Write_Register_Three+7,w
  6034  0193  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  6035  0194  3003               	movlw	3
  6036  0195  0433               	iorwf	??_Adf_Write_Register_Three,w
  6037  0196  0021               	movlb	1	; select bank1
  6038  0197  00CD               	movwf	Adf_Write_Register_Three@reg^(0+128)
  6039  0198  3000               	movlw	0
  6040  0199  0020               	movlb	0	; select bank0
  6041  019A  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  6042  019B  0021               	movlb	1	; select bank1
  6043  019C  00CE               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  6044  019D  3000               	movlw	0
  6045  019E  0020               	movlb	0	; select bank0
  6046  019F  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  6047  01A0  0021               	movlb	1	; select bank1
  6048  01A1  00CF               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  6049  01A2  3000               	movlw	0
  6050  01A3  0020               	movlb	0	; select bank0
  6051  01A4  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  6052  01A5  0021               	movlb	1	; select bank1
  6053  01A6  00D0               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  6054                           
  6055                           ;adf7012.c: 225: uint8_t reg_ptr[4];
  6056                           ;adf7012.c: 226: memcpy(reg_ptr, &reg, 4);
  6057  01A7  30CD               	movlw	Adf_Write_Register_Three@reg& (0+255)
  6058  01A8  0020               	movlb	0	; select bank0
  6059  01A9  00B3               	movwf	??_Adf_Write_Register_Three
  6060  01AA  0833               	movf	??_Adf_Write_Register_Three,w
  6061  01AB  00A0               	movwf	memcpy@s1
  6062  01AC  3004               	movlw	4
  6063  01AD  00A1               	movwf	memcpy@n
  6064  01AE  3000               	movlw	0
  6065  01AF  00A2               	movwf	memcpy@n+1
  6066  01B0  30C9               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6067  01B1  318C  24CA  3180   	fcall	_memcpy
  6068                           
  6069                           ;adf7012.c: 227: Reverse_Array(reg_ptr,4);
  6070  01B4  3004               	movlw	4
  6071  01B5  0020               	movlb	0	; select bank0
  6072  01B6  00B3               	movwf	??_Adf_Write_Register_Three
  6073  01B7  0833               	movf	??_Adf_Write_Register_Three,w
  6074  01B8  00A7               	movwf	Reverse_Array@length
  6075  01B9  30C9               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6076  01BA  318E  261D  3180   	fcall	_Reverse_Array
  6077                           
  6078                           ;adf7012.c: 228: Write_Adf7012_Reg(reg_ptr, 4);
  6079  01BD  3004               	movlw	4
  6080  01BE  0020               	movlb	0	; select bank0
  6081  01BF  00B3               	movwf	??_Adf_Write_Register_Three
  6082  01C0  0833               	movf	??_Adf_Write_Register_Three,w
  6083  01C1  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  6084  01C2  30C9               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6085  01C3  318D  25A8         	fcall	_Write_Adf7012_Reg
  6086  01C5  0008               	return
  6087  01C6                     __end_of_Adf_Write_Register_Three:	
  6088                           
  6089                           	psect	text31
  6090  0DA8                     __ptext31:	
  6091 ;; *************** function _Write_Adf7012_Reg *****************
  6092 ;; Defined at:
  6093 ;;		line 82 in file "utility.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  reg_value       1    wreg     PTR unsigned char 
  6096 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6097 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  6100 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6101 ;;  i               1   13[BANK0 ] unsigned char 
  6102 ;; Return value:  Size  Location     Type
  6103 ;;                  1    wreg      unsigned char 
  6104 ;; Registers used:
  6105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6106 ;; Tracked objects:
  6107 ;;		On entry : 0/0
  6108 ;;		On exit  : 0/0
  6109 ;;		Unchanged: 0/0
  6110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6111 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6114 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6115 ;;Total ram usage:        4 bytes
  6116 ;; Hardware stack levels used:    1
  6117 ;; Hardware stack levels required when called:    7
  6118 ;; This function calls:
  6119 ;;		_Delay_ms
  6120 ;;		_Spi_Byte_Send
  6121 ;; This function is called by:
  6122 ;;		_Adf_Write_Register_Zero
  6123 ;;		_Adf_Write_Register_One
  6124 ;;		_Adf_Write_Register_Two
  6125 ;;		_Adf_Write_Register_Three
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           
  6130                           ;psect for function _Write_Adf7012_Reg
  6131  0DA8                     _Write_Adf7012_Reg:	
  6132                           
  6133                           ;incstack = 0
  6134                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6135                           ;Write_Adf7012_Reg@reg_value stored from wreg
  6136  0DA8  0020               	movlb	0	; select bank0
  6137  0DA9  00AC               	movwf	Write_Adf7012_Reg@reg_value
  6138                           
  6139                           ;utility.c: 84: uint8_t i = 0;
  6140  0DAA  01AD               	clrf	Write_Adf7012_Reg@i
  6141                           
  6142                           ;utility.c: 85: Delay_ms(1);
  6143  0DAB  3001               	movlw	1
  6144  0DAC  00A0               	movwf	Delay_ms@time_to_delay
  6145  0DAD  3000               	movlw	0
  6146  0DAE  00A1               	movwf	Delay_ms@time_to_delay+1
  6147  0DAF  318C  2484  318D   	fcall	_Delay_ms
  6148                           
  6149                           ;utility.c: 86: PORTAbits.RA4 = 0;;
  6150  0DB2  0020               	movlb	0	; select bank0
  6151  0DB3  120C               	bcf	12,4	;volatile
  6152                           
  6153                           ;utility.c: 87: Delay_ms(1);
  6154  0DB4  3001               	movlw	1
  6155  0DB5  00A0               	movwf	Delay_ms@time_to_delay
  6156  0DB6  3000               	movlw	0
  6157  0DB7  00A1               	movwf	Delay_ms@time_to_delay+1
  6158  0DB8  318C  2484  318D   	fcall	_Delay_ms
  6159                           
  6160                           ;utility.c: 89: for (i = 0; i < size_of_reg; i++){
  6161  0DBB  0020               	movlb	0	; select bank0
  6162  0DBC  01AD               	clrf	Write_Adf7012_Reg@i
  6163  0DBD                     l1939:	
  6164  0DBD  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  6165  0DBE  022D               	subwf	Write_Adf7012_Reg@i,w
  6166  0DBF  1803               	btfsc	3,0
  6167  0DC0  2DD1               	goto	l1941
  6168                           
  6169                           ;utility.c: 90: Spi_Byte_Send(*(reg_value+i));
  6170  0DC1  082D               	movf	Write_Adf7012_Reg@i,w
  6171  0DC2  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  6172  0DC3  00AB               	movwf	??_Write_Adf7012_Reg
  6173  0DC4  082B               	movf	??_Write_Adf7012_Reg,w
  6174  0DC5  0086               	movwf	6
  6175  0DC6  0187               	clrf	7
  6176  0DC7  0801               	movf	1,w
  6177  0DC8  318C  24F3  318D   	fcall	_Spi_Byte_Send
  6178  0DCB  3001               	movlw	1
  6179  0DCC  0020               	movlb	0	; select bank0
  6180  0DCD  00AB               	movwf	??_Write_Adf7012_Reg
  6181  0DCE  082B               	movf	??_Write_Adf7012_Reg,w
  6182  0DCF  07AD               	addwf	Write_Adf7012_Reg@i,f
  6183  0DD0  2DBD               	goto	l1939
  6184  0DD1                     l1941:	
  6185                           
  6186                           ;utility.c: 91: }
  6187                           ;utility.c: 93: Delay_ms(1);
  6188  0DD1  3001               	movlw	1
  6189  0DD2  00A0               	movwf	Delay_ms@time_to_delay
  6190  0DD3  3000               	movlw	0
  6191  0DD4  00A1               	movwf	Delay_ms@time_to_delay+1
  6192  0DD5  318C  2484  318D   	fcall	_Delay_ms
  6193                           
  6194                           ;utility.c: 94: PORTAbits.RA4 = 1;;
  6195  0DD8  0020               	movlb	0	; select bank0
  6196  0DD9  160C               	bsf	12,4	;volatile
  6197                           
  6198                           ;utility.c: 96: Delay_ms(1);
  6199  0DDA  3001               	movlw	1
  6200  0DDB  00A0               	movwf	Delay_ms@time_to_delay
  6201  0DDC  3000               	movlw	0
  6202  0DDD  00A1               	movwf	Delay_ms@time_to_delay+1
  6203  0DDE  318C  2484         	fcall	_Delay_ms
  6204  0DE0  0008               	return
  6205  0DE1                     __end_of_Write_Adf7012_Reg:	
  6206                           ;utility.c: 97: return 1;
  6207                           ;	Return value of _Write_Adf7012_Reg is never used
  6208                           
  6209                           
  6210                           	psect	text32
  6211  0CF3                     __ptext32:	
  6212 ;; *************** function _Spi_Byte_Send *****************
  6213 ;; Defined at:
  6214 ;;		line 220 in file "utility.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;  data            1    wreg     unsigned char 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  data            1    7[BANK0 ] unsigned char 
  6219 ;;  i               1    9[BANK0 ] unsigned char 
  6220 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      unsigned char 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0, pclath, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6231 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6232 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6233 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6234 ;;Total ram usage:        4 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    6
  6237 ;; This function calls:
  6238 ;;		_Delay_ms
  6239 ;; This function is called by:
  6240 ;;		_Write_Adf7012_Reg
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           
  6245                           ;psect for function _Spi_Byte_Send
  6246  0CF3                     _Spi_Byte_Send:	
  6247                           
  6248                           ;incstack = 0
  6249                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  6250                           ;Spi_Byte_Send@data stored from wreg
  6251  0CF3  0020               	movlb	0	; select bank0
  6252  0CF4  00A7               	movwf	Spi_Byte_Send@data
  6253                           
  6254                           ;utility.c: 222: PORTAbits.RA2 = 0;
  6255  0CF5  110C               	bcf	12,2	;volatile
  6256                           
  6257                           ;utility.c: 223: uint8_t i;
  6258                           ;utility.c: 224: uint8_t data_to_send;
  6259                           ;utility.c: 225: data_to_send = data;
  6260  0CF6  0827               	movf	Spi_Byte_Send@data,w
  6261  0CF7  00A6               	movwf	??_Spi_Byte_Send
  6262  0CF8  0826               	movf	??_Spi_Byte_Send,w
  6263  0CF9  00A8               	movwf	Spi_Byte_Send@data_to_send
  6264                           
  6265                           ;utility.c: 226: for(i = 0; i <8; i++){
  6266  0CFA  01A9               	clrf	Spi_Byte_Send@i
  6267  0CFB                     L5:	
  6268  0CFB  3008               	movlw	8
  6269  0CFC  0229               	subwf	Spi_Byte_Send@i,w
  6270  0CFD  1803               	btfsc	3,0
  6271  0CFE  0008               	return
  6272                           
  6273                           ;utility.c: 228: if(data_to_send & 0x80)
  6274  0CFF  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  6275  0D00  2D03               	goto	l259
  6276                           
  6277                           ;utility.c: 229: PORTCbits.RC2 = 1;
  6278  0D01  150E               	bsf	14,2	;volatile
  6279  0D02  2D04               	goto	l1903
  6280  0D03                     l259:	
  6281                           
  6282                           ;utility.c: 230: else
  6283                           ;utility.c: 231: PORTCbits.RC2 = 0;
  6284  0D03  110E               	bcf	14,2	;volatile
  6285  0D04                     l1903:	
  6286                           
  6287                           ;utility.c: 233: data_to_send <<= 1;
  6288  0D04  1003               	clrc
  6289  0D05  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  6290                           
  6291                           ;utility.c: 235: PORTAbits.RA2 = 1;
  6292  0D06  150C               	bsf	12,2	;volatile
  6293                           
  6294                           ;utility.c: 236: Delay_ms(1);
  6295  0D07  3001               	movlw	1
  6296  0D08  00A0               	movwf	Delay_ms@time_to_delay
  6297  0D09  3000               	movlw	0
  6298  0D0A  00A1               	movwf	Delay_ms@time_to_delay+1
  6299  0D0B  318C  2484  318C   	fcall	_Delay_ms
  6300                           
  6301                           ;utility.c: 237: PORTAbits.RA2 = 0;
  6302  0D0E  0020               	movlb	0	; select bank0
  6303  0D0F  110C               	bcf	12,2	;volatile
  6304                           
  6305                           ;utility.c: 238: Delay_ms(1);
  6306  0D10  3001               	movlw	1
  6307  0D11  00A0               	movwf	Delay_ms@time_to_delay
  6308  0D12  3000               	movlw	0
  6309  0D13  00A1               	movwf	Delay_ms@time_to_delay+1
  6310  0D14  318C  2484  318C   	fcall	_Delay_ms
  6311  0D17  3001               	movlw	1
  6312  0D18  0020               	movlb	0	; select bank0
  6313  0D19  00A6               	movwf	??_Spi_Byte_Send
  6314  0D1A  0826               	movf	??_Spi_Byte_Send,w
  6315  0D1B  07A9               	addwf	Spi_Byte_Send@i,f
  6316  0D1C  2CFB               	goto	L5
  6317  0D1D                     __end_of_Spi_Byte_Send:	
  6318                           ;utility.c: 240: }
  6319                           ;utility.c: 241: return 1;
  6320                           ;	Return value of _Spi_Byte_Send is never used
  6321                           
  6322                           
  6323                           	psect	text33
  6324  0C84                     __ptext33:	
  6325 ;; *************** function _Delay_ms *****************
  6326 ;; Defined at:
  6327 ;;		line 44 in file "utility.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  i               2    4[BANK0 ] unsigned int 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;		None               void
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0, pclath, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6341 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6342 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6343 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6345 ;;Total ram usage:        6 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    5
  6348 ;; This function calls:
  6349 ;;		_Dac0_Start_Hold
  6350 ;; This function is called by:
  6351 ;;		_main
  6352 ;;		_Write_Adf7012_Reg
  6353 ;;		_Spi_Byte_Send
  6354 ;;		_Adf_Reset
  6355 ;;		_Adf_Lock
  6356 ;;		_Radio_Setup
  6357 ;;		_Ptt_On
  6358 ;;		_Ptt_Off
  6359 ;;		_Modem_Flush_Frame
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           
  6364                           ;psect for function _Delay_ms
  6365  0C84                     _Delay_ms:	
  6366                           
  6367                           ;utility.c: 46: uint16_t i=0;
  6368                           
  6369                           ;incstack = 0
  6370                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  6371  0C84  0020               	movlb	0	; select bank0
  6372  0C85  01A4               	clrf	Delay_ms@i
  6373  0C86  01A5               	clrf	Delay_ms@i+1
  6374                           
  6375                           ;utility.c: 48: Dac0_Start_Hold();
  6376  0C87  318B  2360  318C   	fcall	_Dac0_Start_Hold
  6377                           
  6378                           ;utility.c: 49: for(i=0; i<time_to_delay; i++){
  6379  0C8A  0020               	movlb	0	; select bank0
  6380  0C8B  01A4               	clrf	Delay_ms@i
  6381  0C8C  01A5               	clrf	Delay_ms@i+1
  6382  0C8D                     l229:	
  6383  0C8D  0821               	movf	Delay_ms@time_to_delay+1,w
  6384  0C8E  0225               	subwf	Delay_ms@i+1,w
  6385  0C8F  1D03               	skipz
  6386  0C90  2C93               	goto	u1155
  6387  0C91  0820               	movf	Delay_ms@time_to_delay,w
  6388  0C92  0224               	subwf	Delay_ms@i,w
  6389  0C93                     u1155:	
  6390  0C93  1803               	btfsc	3,0
  6391  0C94  0008               	return
  6392                           
  6393                           ;utility.c: 50: _delay((unsigned long)((1)*(32000000/4000.0)));
  6394  0C95  300B               	movlw	11
  6395  0C96  00A3               	movwf	??_Delay_ms+1
  6396  0C97  3062               	movlw	98
  6397  0C98  00A2               	movwf	??_Delay_ms
  6398  0C99                     u3137:	
  6399  0C99  0BA2               	decfsz	??_Delay_ms,f
  6400  0C9A  2C99               	goto	u3137
  6401  0C9B  0BA3               	decfsz	??_Delay_ms+1,f
  6402  0C9C  2C99               	goto	u3137
  6403  0C9D  0000               	nop
  6404  0C9E  3001               	movlw	1
  6405  0C9F  0020               	movlb	0	; select bank0
  6406  0CA0  07A4               	addwf	Delay_ms@i,f
  6407  0CA1  3000               	movlw	0
  6408  0CA2  3DA5               	addwfc	Delay_ms@i+1,f
  6409  0CA3  2C8D               	goto	l229
  6410  0CA4                     __end_of_Delay_ms:	
  6411                           
  6412                           	psect	text34
  6413  0B60                     __ptext34:	
  6414 ;; *************** function _Dac0_Start_Hold *****************
  6415 ;; Defined at:
  6416 ;;		line 275 in file "utility.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;		None
  6421 ;; Return value:  Size  Location     Type
  6422 ;;		None               void
  6423 ;; Registers used:
  6424 ;;		wreg
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;Total ram usage:        0 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    4
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_main
  6441 ;;		_Delay_ms
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           
  6446                           ;psect for function _Dac0_Start_Hold
  6447  0B60                     _Dac0_Start_Hold:	
  6448                           
  6449                           ;utility.c: 276: DACEN = 1;
  6450                           
  6451                           ;incstack = 0
  6452                           ; Regs used in _Dac0_Start_Hold: [wreg]
  6453  0B60  0022               	movlb	2	; select bank2
  6454  0B61  1798               	bsf	24,7	;volatile
  6455                           
  6456                           ;utility.c: 277: DACCON1 = 0x10;
  6457  0B62  3010               	movlw	16
  6458  0B63  0099               	movwf	25	;volatile
  6459  0B64  0008               	return
  6460  0B65                     __end_of_Dac0_Start_Hold:	
  6461                           
  6462                           	psect	text35
  6463  0E1D                     __ptext35:	
  6464 ;; *************** function _Reverse_Array *****************
  6465 ;; Defined at:
  6466 ;;		line 198 in file "utility.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  input           1    wreg     PTR unsigned char 
  6469 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6470 ;;  length          1    7[BANK0 ] unsigned char 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  input           1   17[BANK0 ] PTR unsigned char 
  6473 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6474 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  6475 ;;  i               1   18[BANK0 ] unsigned char 
  6476 ;; Return value:  Size  Location     Type
  6477 ;;                  1    wreg      unsigned char 
  6478 ;; Registers used:
  6479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6485 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;Total ram usage:       12 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    5
  6492 ;; This function calls:
  6493 ;;		_memcpy
  6494 ;; This function is called by:
  6495 ;;		_Adf_Write_Register_Zero
  6496 ;;		_Adf_Write_Register_One
  6497 ;;		_Adf_Write_Register_Two
  6498 ;;		_Adf_Write_Register_Three
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           
  6503                           ;psect for function _Reverse_Array
  6504  0E1D                     _Reverse_Array:	
  6505                           
  6506                           ;incstack = 0
  6507                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6508                           ;Reverse_Array@input stored from wreg
  6509  0E1D  0020               	movlb	0	; select bank0
  6510  0E1E  00B1               	movwf	Reverse_Array@input
  6511                           
  6512                           ;utility.c: 199: uint8_t i = 0;
  6513  0E1F  01B2               	clrf	Reverse_Array@i
  6514                           
  6515                           ;utility.c: 200: uint8_t buffer_array[4] = {0};
  6516  0E20  0021               	movlb	1	; select bank1
  6517  0E21  0828               	movf	(Reverse_Array@F3148+3)^(0+128),w
  6518  0E22  0020               	movlb	0	; select bank0
  6519  0E23  00B0               	movwf	Reverse_Array@buffer_array+3
  6520  0E24  0021               	movlb	1	; select bank1
  6521  0E25  0827               	movf	(Reverse_Array@F3148+2)^(0+128),w
  6522  0E26  0020               	movlb	0	; select bank0
  6523  0E27  00AF               	movwf	Reverse_Array@buffer_array+2
  6524  0E28  0021               	movlb	1	; select bank1
  6525  0E29  0826               	movf	(Reverse_Array@F3148+1)^(0+128),w
  6526  0E2A  0020               	movlb	0	; select bank0
  6527  0E2B  00AE               	movwf	Reverse_Array@buffer_array+1
  6528  0E2C  0021               	movlb	1	; select bank1
  6529  0E2D  0825               	movf	Reverse_Array@F3148^(0+128),w
  6530  0E2E  0020               	movlb	0	; select bank0
  6531  0E2F  00AD               	movwf	Reverse_Array@buffer_array
  6532                           
  6533                           ;utility.c: 201: memcpy(buffer_array, input, length);
  6534  0E30  0831               	movf	Reverse_Array@input,w
  6535  0E31  00A8               	movwf	??_Reverse_Array
  6536  0E32  0828               	movf	??_Reverse_Array,w
  6537  0E33  00A0               	movwf	memcpy@s1
  6538  0E34  0827               	movf	Reverse_Array@length,w
  6539  0E35  00A9               	movwf	??_Reverse_Array+1
  6540  0E36  01AA               	clrf	??_Reverse_Array+2
  6541  0E37  0829               	movf	??_Reverse_Array+1,w
  6542  0E38  00A1               	movwf	memcpy@n
  6543  0E39  082A               	movf	??_Reverse_Array+2,w
  6544  0E3A  00A2               	movwf	memcpy@n+1
  6545  0E3B  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6546  0E3C  318C  24CA  318E   	fcall	_memcpy
  6547                           
  6548                           ;utility.c: 203: for(i = 0; i<length; i++){
  6549  0E3F  0020               	movlb	0	; select bank0
  6550  0E40  01B2               	clrf	Reverse_Array@i
  6551  0E41                     l1959:	
  6552  0E41  0827               	movf	Reverse_Array@length,w
  6553  0E42  0232               	subwf	Reverse_Array@i,w
  6554  0E43  1803               	btfsc	3,0
  6555  0E44  0008               	return
  6556                           
  6557                           ;utility.c: 204: *(input+i) = *(buffer_array+(length-1)-i);
  6558  0E45  30FF               	movlw	-1
  6559  0E46  0727               	addwf	Reverse_Array@length,w
  6560  0E47  00A8               	movwf	??_Reverse_Array
  6561  0E48  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6562  0E49  0728               	addwf	??_Reverse_Array,w
  6563  0E4A  00A9               	movwf	??_Reverse_Array+1
  6564  0E4B  0332               	decf	Reverse_Array@i,w
  6565  0E4C  3AFF               	xorlw	255
  6566  0E4D  0729               	addwf	??_Reverse_Array+1,w
  6567  0E4E  00AA               	movwf	??_Reverse_Array+2
  6568  0E4F  082A               	movf	??_Reverse_Array+2,w
  6569  0E50  0086               	movwf	6
  6570  0E51  0187               	clrf	7
  6571  0E52  0801               	movf	1,w
  6572  0E53  00AB               	movwf	??_Reverse_Array+3
  6573  0E54  0832               	movf	Reverse_Array@i,w
  6574  0E55  0731               	addwf	Reverse_Array@input,w
  6575  0E56  00AC               	movwf	??_Reverse_Array+4
  6576  0E57  082C               	movf	??_Reverse_Array+4,w
  6577  0E58  0086               	movwf	6
  6578  0E59  0187               	clrf	7
  6579  0E5A  082B               	movf	??_Reverse_Array+3,w
  6580  0E5B  0081               	movwf	1
  6581  0E5C  3001               	movlw	1
  6582  0E5D  00A8               	movwf	??_Reverse_Array
  6583  0E5E  0828               	movf	??_Reverse_Array,w
  6584  0E5F  07B2               	addwf	Reverse_Array@i,f
  6585  0E60  2E41               	goto	l1959
  6586  0E61                     __end_of_Reverse_Array:	
  6587                           ;utility.c: 205: }
  6588                           ;utility.c: 209: return 1;
  6589                           ;	Return value of _Reverse_Array is never used
  6590                           
  6591                           
  6592                           	psect	text36
  6593  0CCA                     __ptext36:	
  6594 ;; *************** function _memcpy *****************
  6595 ;; Defined at:
  6596 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  d1              1    wreg     PTR void 
  6599 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6600 ;;		 -> Reverse_Array@buffer_array(4), 
  6601 ;;  s1              1    0[BANK0 ] PTR const void 
  6602 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6603 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6604 ;;  n               2    1[BANK0 ] unsigned int 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;  d1              1    6[BANK0 ] PTR void 
  6607 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6608 ;;		 -> Reverse_Array@buffer_array(4), 
  6609 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6610 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6611 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6612 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6613 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6614 ;;		 -> Reverse_Array@buffer_array(4), 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      PTR void 
  6617 ;; Registers used:
  6618 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6624 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6628 ;;Total ram usage:        7 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    4
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_Reverse_Array
  6635 ;;		_Adf_Write_Register_Zero
  6636 ;;		_Adf_Write_Register_One
  6637 ;;		_Adf_Write_Register_Two
  6638 ;;		_Adf_Write_Register_Three
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           
  6643                           ;psect for function _memcpy
  6644  0CCA                     _memcpy:	
  6645                           
  6646                           ;incstack = 0
  6647                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6648                           ;memcpy@d1 stored from wreg
  6649  0CCA  0020               	movlb	0	; select bank0
  6650  0CCB  00A6               	movwf	memcpy@d1
  6651  0CCC  0820               	movf	memcpy@s1,w
  6652  0CCD  00A3               	movwf	??_memcpy
  6653  0CCE  0823               	movf	??_memcpy,w
  6654  0CCF  00A5               	movwf	memcpy@s
  6655  0CD0  0826               	movf	memcpy@d1,w
  6656  0CD1  00A3               	movwf	??_memcpy
  6657  0CD2  0823               	movf	??_memcpy,w
  6658  0CD3  00A4               	movwf	memcpy@d
  6659  0CD4                     l1925:	
  6660  0CD4  3001               	movlw	1
  6661  0CD5  02A1               	subwf	memcpy@n,f
  6662  0CD6  3000               	movlw	0
  6663  0CD7  3BA2               	subwfb	memcpy@n+1,f
  6664  0CD8  30FF               	movlw	255
  6665  0CD9  0622               	xorwf	memcpy@n+1,w
  6666  0CDA  1D03               	skipz
  6667  0CDB  2CDE               	goto	u1195
  6668  0CDC  30FF               	movlw	255
  6669  0CDD  0621               	xorwf	memcpy@n,w
  6670  0CDE                     u1195:	
  6671  0CDE  1903               	btfsc	3,2
  6672  0CDF  0008               	return
  6673  0CE0  0825               	movf	memcpy@s,w
  6674  0CE1  0086               	movwf	6
  6675  0CE2  0187               	clrf	7
  6676  0CE3  0801               	movf	1,w
  6677  0CE4  00A3               	movwf	??_memcpy
  6678  0CE5  0824               	movf	memcpy@d,w
  6679  0CE6  0086               	movwf	6
  6680  0CE7  0187               	clrf	7
  6681  0CE8  0823               	movf	??_memcpy,w
  6682  0CE9  0081               	movwf	1
  6683  0CEA  3001               	movlw	1
  6684  0CEB  00A3               	movwf	??_memcpy
  6685  0CEC  0823               	movf	??_memcpy,w
  6686  0CED  07A5               	addwf	memcpy@s,f
  6687  0CEE  3001               	movlw	1
  6688  0CEF  00A3               	movwf	??_memcpy
  6689  0CF0  0823               	movf	??_memcpy,w
  6690  0CF1  07A4               	addwf	memcpy@d,f
  6691  0CF2  2CD4               	goto	l1925
  6692  0CF3                     __end_of_memcpy:	
  6693                           ;	Return value of _memcpy is never used
  6694                           
  6695                           
  6696                           	psect	text37
  6697  0B54                     __ptext37:	
  6698 ;; *************** function _Adf_Locked *****************
  6699 ;; Defined at:
  6700 ;;		line 276 in file "adf7012.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;		None
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;		None
  6705 ;; Return value:  Size  Location     Type
  6706 ;;                  1    wreg      unsigned char 
  6707 ;; Registers used:
  6708 ;;		wreg, pclath, cstack
  6709 ;; Tracked objects:
  6710 ;;		On entry : 0/0
  6711 ;;		On exit  : 0/0
  6712 ;;		Unchanged: 0/0
  6713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;Total ram usage:        0 bytes
  6719 ;; Hardware stack levels used:    1
  6720 ;; Hardware stack levels required when called:    5
  6721 ;; This function calls:
  6722 ;;		_Read_Adf7012_Muxout
  6723 ;; This function is called by:
  6724 ;;		_Adf_Lock
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           
  6729                           ;psect for function _Adf_Locked
  6730  0B54                     _Adf_Locked:	
  6731                           
  6732                           ;adf7012.c: 278: return Read_Adf7012_Muxout();
  6733                           
  6734                           ;incstack = 0
  6735                           ; Regs used in _Adf_Locked: [wreg+pclath+cstack]
  6736  0B54  318B  238F         	fcall	_Read_Adf7012_Muxout
  6737  0B56  0008               	return
  6738  0B57                     __end_of_Adf_Locked:	
  6739                           
  6740                           	psect	text38
  6741  0B8F                     __ptext38:	
  6742 ;; *************** function _Read_Adf7012_Muxout *****************
  6743 ;; Defined at:
  6744 ;;		line 64 in file "utility.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;		None
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;		None
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      unsigned char 
  6751 ;; Registers used:
  6752 ;;		wreg
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;Total ram usage:        0 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:    4
  6765 ;; This function calls:
  6766 ;;		Nothing
  6767 ;; This function is called by:
  6768 ;;		_Adf_Locked
  6769 ;;		_Ptt_On
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773                           
  6774                           ;psect for function _Read_Adf7012_Muxout
  6775  0B8F                     _Read_Adf7012_Muxout:	
  6776                           
  6777                           ;utility.c: 66: if(PORTCbits.RC5)
  6778                           
  6779                           ;incstack = 0
  6780                           ; Regs used in _Read_Adf7012_Muxout: [wreg]
  6781  0B8F  0020               	movlb	0	; select bank0
  6782  0B90  1E8E               	btfss	14,5	;volatile
  6783  0B91  2B94               	goto	l2065
  6784                           
  6785                           ;utility.c: 67: return 1;
  6786  0B92  3001               	movlw	1
  6787  0B93  0008               	return
  6788  0B94                     l2065:	
  6789                           
  6790                           ;utility.c: 68: else
  6791                           ;utility.c: 69: return 0;
  6792  0B94  3000               	movlw	0
  6793  0B95  0008               	return
  6794  0B96                     __end_of_Read_Adf7012_Muxout:	
  6795                           
  6796                           	psect	text39
  6797  0B6A                     __ptext39:	
  6798 ;; *************** function _Adc1_Start *****************
  6799 ;; Defined at:
  6800 ;;		line 286 in file "utility.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;		None
  6805 ;; Return value:  Size  Location     Type
  6806 ;;		None               void
  6807 ;; Registers used:
  6808 ;;		None
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6818 ;;Total ram usage:        0 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:    4
  6821 ;; This function calls:
  6822 ;;		Nothing
  6823 ;; This function is called by:
  6824 ;;		_main
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           
  6829                           ;psect for function _Adc1_Start
  6830  0B6A                     _Adc1_Start:	
  6831                           
  6832                           ;utility.c: 287: ADIF = 0;
  6833                           
  6834                           ;incstack = 0
  6835                           ; Regs used in _Adc1_Start: []
  6836  0B6A  0020               	movlb	0	; select bank0
  6837  0B6B  1311               	bcf	17,6	;volatile
  6838                           
  6839                           ;utility.c: 288: ADON = 1;
  6840  0B6C  0021               	movlb	1	; select bank1
  6841  0B6D  141D               	bsf	29,0	;volatile
  6842                           
  6843                           ;utility.c: 289: ADIE = 1;
  6844  0B6E  1711               	bsf	17,6	;volatile
  6845  0B6F  0008               	return
  6846  0B70                     __end_of_Adc1_Start:	
  6847                           
  6848                           	psect	intentry
  6849  0004                     __pintentry:	
  6850 ;; *************** function _global_interrupt *****************
  6851 ;; Defined at:
  6852 ;;		line 35 in file "main.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;		None
  6855 ;; Auto vars:     Size  Location     Type
  6856 ;;		None
  6857 ;; Return value:  Size  Location     Type
  6858 ;;		None               void
  6859 ;; Registers used:
  6860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6861 ;; Tracked objects:
  6862 ;;		On entry : 0/0
  6863 ;;		On exit  : 0/0
  6864 ;;		Unchanged: 0/0
  6865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6869 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;Total ram usage:        2 bytes
  6871 ;; Hardware stack levels used:    1
  6872 ;; Hardware stack levels required when called:    3
  6873 ;; This function calls:
  6874 ;;		_ADC_ISR
  6875 ;;		_I2C_ISR
  6876 ;;		_TIMER0_ISR
  6877 ;;		_TIMER1_ISR
  6878 ;; This function is called by:
  6879 ;;		Interrupt level 1
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883  0004                     _global_interrupt:	
  6884                           
  6885                           ;incstack = 0
  6886                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6887  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6888  0005  3180               	pagesel	$
  6889  0006  0020               	movlb	0	; select bank0
  6890  0007  087F               	movf	127,w
  6891  0008  00F9               	movwf	??_global_interrupt+1
  6892                           
  6893                           ;main.c: 37: INTCON &= ~0x80;
  6894  0009  307F               	movlw	127
  6895  000A  00F8               	movwf	??_global_interrupt
  6896  000B  0878               	movf	??_global_interrupt,w
  6897  000C  058B               	andwf	11,f	;volatile
  6898                           
  6899                           ;main.c: 40: if(ADIF){
  6900  000D  1F11               	btfss	17,6	;volatile
  6901  000E  2813               	goto	i1l155
  6902                           
  6903                           ;main.c: 41: ADC_ISR();
  6904  000F  318B  2396  3180   	fcall	_ADC_ISR
  6905                           
  6906                           ;main.c: 42: return;
  6907  0012  2826               	goto	i1l156
  6908  0013                     i1l155:	
  6909                           
  6910                           ;main.c: 43: }
  6911                           ;main.c: 48: if(PIR1 & 0x04){
  6912  0013  1D11               	btfss	17,2	;volatile
  6913  0014  2819               	goto	i1l157
  6914                           
  6915                           ;main.c: 49: TIMER1_ISR();
  6916  0015  318D  2549  3180   	fcall	_TIMER1_ISR
  6917                           
  6918                           ;main.c: 50: return;
  6919  0018  2826               	goto	i1l156
  6920  0019                     i1l157:	
  6921                           
  6922                           ;main.c: 51: }
  6923                           ;main.c: 56: if(INTCON & 0x04){
  6924  0019  1D0B               	btfss	11,2	;volatile
  6925  001A  281F               	goto	i1l158
  6926                           
  6927                           ;main.c: 57: TIMER0_ISR();
  6928  001B  318B  2388  3180   	fcall	_TIMER0_ISR
  6929                           
  6930                           ;main.c: 58: return;
  6931  001E  2826               	goto	i1l156
  6932  001F                     i1l158:	
  6933                           
  6934                           ;main.c: 59: }
  6935                           ;main.c: 64: if(SSP1IF){
  6936  001F  1D91               	btfss	17,3	;volatile
  6937  0020  2825               	goto	i1l159
  6938                           
  6939                           ;main.c: 65: I2C_ISR();
  6940  0021  318E  26B8  3180   	fcall	_I2C_ISR
  6941                           
  6942                           ;main.c: 66: return;
  6943  0024  2826               	goto	i1l156
  6944  0025                     i1l159:	
  6945                           
  6946                           ;main.c: 67: }
  6947                           ;main.c: 70: INTCON |= 0x80;
  6948  0025  178B               	bsf	11,7	;volatile
  6949  0026                     i1l156:	
  6950  0026  0879               	movf	??_global_interrupt+1,w
  6951  0027  0020               	movlb	0	; select bank0
  6952  0028  00FF               	movwf	127
  6953  0029  107E               	bcf	126,0	;clear compiler interrupt flag
  6954  002A  0009               	retfie
  6955  002B                     __end_of_global_interrupt:	
  6956                           
  6957                           	psect	text41
  6958  0D49                     __ptext41:	
  6959 ;; *************** function _TIMER1_ISR *****************
  6960 ;; Defined at:
  6961 ;;		line 50 in file "isr.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;		None
  6964 ;; Auto vars:     Size  Location     Type
  6965 ;;		None
  6966 ;; Return value:  Size  Location     Type
  6967 ;;		None               void
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;Total ram usage:        1 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_global_interrupt
  6985 ;; This function uses a non-reentrant model
  6986 ;;
  6987                           
  6988                           
  6989                           ;psect for function _TIMER1_ISR
  6990  0D49                     _TIMER1_ISR:	
  6991                           
  6992                           ;isr.c: 51: Change_to_New_Baud = 1;
  6993                           
  6994                           ;incstack = 0
  6995                           ; Regs used in _TIMER1_ISR: [wreg+status,2+status,0]
  6996  0D49  0021               	movlb	1	; select bank1
  6997  0D4A  01BE               	clrf	_Change_to_New_Baud^(0+128)
  6998  0D4B  0ABE               	incf	_Change_to_New_Baud^(0+128),f
  6999                           
  7000                           ;isr.c: 54: TMR1H = 0x00;
  7001  0D4C  0020               	movlb	0	; select bank0
  7002  0D4D  0197               	clrf	23	;volatile
  7003                           
  7004                           ;isr.c: 55: TMR1L = 0x00;
  7005  0D4E  0196               	clrf	22	;volatile
  7006                           
  7007                           ;isr.c: 57: PIR1 &= ~0x04;
  7008  0D4F  30FB               	movlw	251
  7009  0D50  00F0               	movwf	??_TIMER1_ISR
  7010  0D51  0870               	movf	??_TIMER1_ISR,w
  7011  0D52  0591               	andwf	17,f	;volatile
  7012                           
  7013                           ;isr.c: 59: Systick_Counter += 1;
  7014  0D53  3001               	movlw	1
  7015  0D54  0021               	movlb	1	; select bank1
  7016  0D55  07B1               	addwf	_Systick_Counter^(0+128),f
  7017  0D56  3000               	movlw	0
  7018  0D57  3DB2               	addwfc	(_Systick_Counter+1)^(0+128),f
  7019  0D58  3000               	movlw	0
  7020  0D59  3DB3               	addwfc	(_Systick_Counter+2)^(0+128),f
  7021  0D5A  3000               	movlw	0
  7022  0D5B  3DB4               	addwfc	(_Systick_Counter+3)^(0+128),f
  7023                           
  7024                           ;isr.c: 60: if(Systick_Counter > 100000){
  7025  0D5C  3000               	movlw	0
  7026  0D5D  0234               	subwf	(_Systick_Counter+3)^(0+128),w
  7027  0D5E  1D03               	skipz
  7028  0D5F  2D6A               	goto	u194_25
  7029  0D60  3001               	movlw	1
  7030  0D61  0233               	subwf	(_Systick_Counter+2)^(0+128),w
  7031  0D62  1D03               	skipz
  7032  0D63  2D6A               	goto	u194_25
  7033  0D64  3086               	movlw	134
  7034  0D65  0232               	subwf	(_Systick_Counter+1)^(0+128),w
  7035  0D66  1D03               	skipz
  7036  0D67  2D6A               	goto	u194_25
  7037  0D68  30A1               	movlw	161
  7038  0D69  0231               	subwf	_Systick_Counter^(0+128),w
  7039  0D6A                     u194_25:	
  7040  0D6A  1C03               	skipc
  7041  0D6B  0008               	return
  7042                           
  7043                           ;isr.c: 61: Systick_Counter = 0;
  7044  0D6C  3000               	movlw	0
  7045  0D6D  00B4               	movwf	(_Systick_Counter+3)^(0+128)
  7046  0D6E  3000               	movlw	0
  7047  0D6F  00B3               	movwf	(_Systick_Counter+2)^(0+128)
  7048  0D70  3000               	movlw	0
  7049  0D71  00B2               	movwf	(_Systick_Counter+1)^(0+128)
  7050  0D72  3000               	movlw	0
  7051  0D73  00B1               	movwf	_Systick_Counter^(0+128)
  7052                           
  7053                           ;isr.c: 62: ADCON0 |= 0b00000010;
  7054  0D74  149D               	bsf	29,1	;volatile
  7055  0D75  0008               	return
  7056  0D76                     __end_of_TIMER1_ISR:	
  7057                           
  7058                           	psect	text42
  7059  0B88                     __ptext42:	
  7060 ;; *************** function _TIMER0_ISR *****************
  7061 ;; Defined at:
  7062 ;;		line 67 in file "isr.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;		None
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;		None
  7067 ;; Return value:  Size  Location     Type
  7068 ;;		None               void
  7069 ;; Registers used:
  7070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;Total ram usage:        1 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    2
  7083 ;; This function calls:
  7084 ;;		_Sinus_Generator
  7085 ;; This function is called by:
  7086 ;;		_global_interrupt
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           
  7091                           ;psect for function _TIMER0_ISR
  7092  0B88                     _TIMER0_ISR:	
  7093                           
  7094                           ;isr.c: 68: Sinus_Generator();
  7095                           
  7096                           ;incstack = 0
  7097                           ; Regs used in _TIMER0_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7098  0B88  3186  2630         	fcall	_Sinus_Generator
  7099                           
  7100                           ;isr.c: 69: INTCON &= ~0x04;
  7101  0B8A  30FB               	movlw	251
  7102  0B8B  00F7               	movwf	??_TIMER0_ISR
  7103  0B8C  0877               	movf	??_TIMER0_ISR,w
  7104  0B8D  058B               	andwf	11,f	;volatile
  7105  0B8E  0008               	return
  7106  0B8F                     __end_of_TIMER0_ISR:	
  7107                           
  7108                           	psect	text43
  7109  0630                     __ptext43:	
  7110 ;; *************** function _Sinus_Generator *****************
  7111 ;; Defined at:
  7112 ;;		line 84 in file "audio_tone.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;		None               void
  7119 ;; Registers used:
  7120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7128 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7129 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7130 ;;Total ram usage:        6 bytes
  7131 ;; Hardware stack levels used:    1
  7132 ;; Hardware stack levels required when called:    1
  7133 ;; This function calls:
  7134 ;;		_Send_Vcxo_Signal
  7135 ;;		_Timer0_Stop
  7136 ;; This function is called by:
  7137 ;;		_TIMER0_ISR
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           
  7142                           ;psect for function _Sinus_Generator
  7143  0630                     _Sinus_Generator:	
  7144                           
  7145                           ;audio_tone.c: 86: uint8_t Audio_Signal;
  7146                           ;audio_tone.c: 87: static uint8_t tone_index = 0;
  7147                           ;audio_tone.c: 88: if (MODEM_TRANSMITTING == 1) {
  7148                           
  7149                           ;incstack = 0
  7150                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7151  0630  0021               	movlb	1	; select bank1
  7152  0631  083F               	movf	_MODEM_TRANSMITTING^(0+128),w
  7153  0632  3A01               	xorlw	1
  7154  0633  1D03               	skipz
  7155  0634  0008               	return
  7156                           
  7157                           ;audio_tone.c: 90: if (packet_pos == modem_packet_size) {
  7158  0635  087D               	movf	_modem_packet_size+3,w
  7159  0636  0638               	xorwf	(_packet_pos+3)^(0+128),w
  7160  0637  1D03               	skipz
  7161  0638  2E43               	goto	u168_25
  7162  0639  087C               	movf	_modem_packet_size+2,w
  7163  063A  0637               	xorwf	(_packet_pos+2)^(0+128),w
  7164  063B  1D03               	skipz
  7165  063C  2E43               	goto	u168_25
  7166  063D  087B               	movf	_modem_packet_size+1,w
  7167  063E  0636               	xorwf	(_packet_pos+1)^(0+128),w
  7168  063F  1D03               	skipz
  7169  0640  2E43               	goto	u168_25
  7170  0641  087A               	movf	_modem_packet_size,w
  7171  0642  0635               	xorwf	_packet_pos^(0+128),w
  7172  0643                     u168_25:	
  7173  0643  1D03               	skipz
  7174  0644  2E50               	goto	i1l2175
  7175                           
  7176                           ;audio_tone.c: 91: MODEM_TRANSMITTING = 0;
  7177  0645  01BF               	clrf	_MODEM_TRANSMITTING^(0+128)
  7178                           
  7179                           ;audio_tone.c: 92: Timer0_Stop();
  7180  0646  318B  2357  3186   	fcall	_Timer0_Stop
  7181                           
  7182                           ;audio_tone.c: 94: Send_Vcxo_Signal(0x10);
  7183  0649  3010               	movlw	16
  7184  064A  318B  235B         	fcall	_Send_Vcxo_Signal
  7185                           
  7186                           ;audio_tone.c: 96: PTT_OFF = 1;
  7187  064C  0021               	movlb	1	; select bank1
  7188  064D  01C0               	clrf	_PTT_OFF^(0+128)
  7189  064E  0AC0               	incf	_PTT_OFF^(0+128),f
  7190                           
  7191                           ;audio_tone.c: 98: goto end_generator;
  7192  064F  0008               	return
  7193  0650                     i1l2175:	
  7194                           
  7195                           ;audio_tone.c: 99: }
  7196                           ;audio_tone.c: 102: if (current_sample_in_baud == 0) {
  7197  0650  08C5               	movf	_current_sample_in_baud^(0+128),f
  7198  0651  1D03               	skipz
  7199  0652  2E92               	goto	i1l2195
  7200                           
  7201                           ;audio_tone.c: 103: if ((packet_pos & 7) == 0)
  7202  0653  3007               	movlw	7
  7203  0654  0535               	andwf	_packet_pos^(0+128),w
  7204  0655  00F1               	movwf	??_Sinus_Generator
  7205  0656  3000               	movlw	0
  7206  0657  0536               	andwf	(_packet_pos+1)^(0+128),w
  7207  0658  00F2               	movwf	??_Sinus_Generator+1
  7208  0659  3000               	movlw	0
  7209  065A  0537               	andwf	(_packet_pos+2)^(0+128),w
  7210  065B  00F3               	movwf	??_Sinus_Generator+2
  7211  065C  3000               	movlw	0
  7212  065D  0538               	andwf	(_packet_pos+3)^(0+128),w
  7213  065E  00F4               	movwf	??_Sinus_Generator+3
  7214  065F  0874               	movf	??_Sinus_Generator+3,w
  7215  0660  0473               	iorwf	??_Sinus_Generator+2,w
  7216  0661  0472               	iorwf	??_Sinus_Generator+1,w
  7217  0662  0471               	iorwf	??_Sinus_Generator,w
  7218  0663  1D03               	skipz
  7219  0664  2E7D               	goto	i1l2181
  7220                           
  7221                           ;audio_tone.c: 104: current_byte = modem_packet[packet_pos >> 3];
  7222  0665  0835               	movf	_packet_pos^(0+128),w
  7223  0666  00F1               	movwf	??_Sinus_Generator
  7224  0667  0836               	movf	(_packet_pos+1)^(0+128),w
  7225  0668  00F2               	movwf	??_Sinus_Generator+1
  7226  0669  0837               	movf	(_packet_pos+2)^(0+128),w
  7227  066A  00F3               	movwf	??_Sinus_Generator+2
  7228  066B  0838               	movf	(_packet_pos+3)^(0+128),w
  7229  066C  00F4               	movwf	??_Sinus_Generator+3
  7230  066D  3003               	movlw	3
  7231  066E                     u171_25:	
  7232  066E  36F4               	lsrf	??_Sinus_Generator+3,f
  7233  066F  0CF3               	rrf	??_Sinus_Generator+2,f
  7234  0670  0CF2               	rrf	??_Sinus_Generator+1,f
  7235  0671  0CF1               	rrf	??_Sinus_Generator,f
  7236  0672  0B89               	decfsz	9,f
  7237  0673  2E6E               	goto	u171_25
  7238  0674  0871               	movf	??_Sinus_Generator,w
  7239  0675  3EA0               	addlw	_modem_packet& (0+255)
  7240  0676  0086               	movwf	6
  7241  0677  3001               	movlw	1	; select bank3/4
  7242  0678  0087               	movwf	7
  7243  0679  0801               	movf	1,w
  7244  067A  00F5               	movwf	??_Sinus_Generator+4
  7245  067B  0875               	movf	??_Sinus_Generator+4,w
  7246  067C  2E80               	goto	L6
  7247  067D                     i1l2181:	
  7248                           
  7249                           ;audio_tone.c: 105: else
  7250                           ;audio_tone.c: 106: current_byte = current_byte >> 1 ;
  7251  067D  3644               	lsrf	_current_byte^(0+128),w
  7252  067E  00F1               	movwf	??_Sinus_Generator
  7253  067F  0871               	movf	??_Sinus_Generator,w
  7254  0680                     L6:	
  7255  0680  00C4               	movwf	_current_byte^(0+128)
  7256                           
  7257                           ;audio_tone.c: 107: if ((current_byte & 0x01) == 0) {
  7258  0681  1844               	btfsc	_current_byte^(0+128),0
  7259  0682  2E92               	goto	i1l2195
  7260                           
  7261                           ;audio_tone.c: 109: if(tone_index){
  7262  0683  083D               	movf	Sinus_Generator@tone_index^(0+128),w
  7263  0684  1903               	btfsc	3,2
  7264  0685  2E8C               	goto	i1l2191
  7265                           
  7266                           ;audio_tone.c: 110: phase_delta = PHASE_DELTA_1200;
  7267  0686  0829               	movf	_PHASE_DELTA_1200^(0+128),w
  7268  0687  00F1               	movwf	??_Sinus_Generator
  7269  0688  0871               	movf	??_Sinus_Generator,w
  7270  0689  00C8               	movwf	_phase_delta^(0+128)
  7271                           
  7272                           ;audio_tone.c: 111: tone_index = 0;
  7273  068A  01BD               	clrf	Sinus_Generator@tone_index^(0+128)
  7274                           
  7275                           ;audio_tone.c: 112: }
  7276  068B  2E92               	goto	i1l2195
  7277  068C                     i1l2191:	
  7278                           
  7279                           ;audio_tone.c: 113: else{
  7280                           ;audio_tone.c: 114: phase_delta = PHASE_DELTA_2200;
  7281  068C  082D               	movf	_PHASE_DELTA_2200^(0+128),w
  7282  068D  00F1               	movwf	??_Sinus_Generator
  7283  068E  0871               	movf	??_Sinus_Generator,w
  7284  068F  00C8               	movwf	_phase_delta^(0+128)
  7285                           
  7286                           ;audio_tone.c: 115: tone_index = 1;
  7287  0690  01BD               	clrf	Sinus_Generator@tone_index^(0+128)
  7288  0691  0ABD               	incf	Sinus_Generator@tone_index^(0+128),f
  7289  0692                     i1l2195:	
  7290                           
  7291                           ;audio_tone.c: 116: }
  7292                           ;audio_tone.c: 117: }
  7293                           ;audio_tone.c: 118: }
  7294                           ;audio_tone.c: 120: phase += phase_delta;
  7295  0692  0848               	movf	_phase_delta^(0+128),w
  7296  0693  00F1               	movwf	??_Sinus_Generator
  7297  0694  0871               	movf	??_Sinus_Generator,w
  7298  0695  0020               	movlb	0	; select bank0
  7299  0696  07EF               	addwf	_phase,f
  7300                           
  7301                           ;audio_tone.c: 121: if(phase >= TABLE_SIZE)
  7302  0697  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  7303  0698  0084               	movwf	4
  7304  0699  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  7305  069A  0085               	movwf	5
  7306  069B  3F00               	moviw [0]fsr0
  7307  069C  00F1               	movwf	??_Sinus_Generator
  7308  069D  3F01               	moviw [1]fsr0
  7309  069E  00F2               	movwf	??_Sinus_Generator+1
  7310  069F  0872               	movf	??_Sinus_Generator+1,w
  7311  06A0  3A80               	xorlw	128
  7312  06A1  3C80               	sublw	128
  7313  06A2  1D03               	skipz
  7314  06A3  2EA6               	goto	u174_25
  7315  06A4  0871               	movf	??_Sinus_Generator,w
  7316  06A5  026F               	subwf	_phase,w
  7317  06A6                     u174_25:	
  7318  06A6  1C03               	skipc
  7319  06A7  2EB4               	goto	i1l2201
  7320                           
  7321                           ;audio_tone.c: 122: phase = phase - TABLE_SIZE;
  7322  06A8  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  7323  06A9  0084               	movwf	4
  7324  06AA  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  7325  06AB  0085               	movwf	5
  7326  06AC  0800               	movf	0,w	;code access
  7327  06AD  3AFF               	xorlw	255
  7328  06AE  3E01               	addlw	1
  7329  06AF  0020               	movlb	0	; select bank0
  7330  06B0  076F               	addwf	_phase,w
  7331  06B1  00F1               	movwf	??_Sinus_Generator
  7332  06B2  0871               	movf	??_Sinus_Generator,w
  7333  06B3  00EF               	movwf	_phase
  7334  06B4                     i1l2201:	
  7335                           
  7336                           ;audio_tone.c: 125: Audio_Signal = *(sine_table2 + phase);
  7337  06B4  0020               	movlb	0	; select bank0
  7338  06B5  086F               	movf	_phase,w
  7339  06B6  3E00               	addlw	low (_sine_table2| (0+32768))
  7340  06B7  0084               	movwf	4
  7341  06B8  3084               	movlw	high (_sine_table2| (0+32768))
  7342  06B9  1803               	skipnc
  7343  06BA  3E01               	addlw	1
  7344  06BB  0085               	movwf	5
  7345  06BC  0800               	movf	0,w	;code access
  7346  06BD  00F1               	movwf	??_Sinus_Generator
  7347  06BE  0871               	movf	??_Sinus_Generator,w
  7348  06BF  00F6               	movwf	Sinus_Generator@Audio_Signal
  7349                           
  7350                           ;audio_tone.c: 126: Send_Vcxo_Signal(Audio_Signal);
  7351  06C0  0876               	movf	Sinus_Generator@Audio_Signal,w
  7352  06C1  318B  235B  3186   	fcall	_Send_Vcxo_Signal
  7353                           
  7354                           ;audio_tone.c: 128: current_sample_in_baud++;
  7355  06C4  3001               	movlw	1
  7356  06C5  00F1               	movwf	??_Sinus_Generator
  7357  06C6  0871               	movf	??_Sinus_Generator,w
  7358  06C7  0021               	movlb	1	; select bank1
  7359  06C8  07C5               	addwf	_current_sample_in_baud^(0+128),f
  7360                           
  7361                           ;audio_tone.c: 130: if(Change_to_New_Baud == 1) {
  7362  06C9  083E               	movf	_Change_to_New_Baud^(0+128),w
  7363  06CA  3A01               	xorlw	1
  7364  06CB  1D03               	skipz
  7365  06CC  0008               	return
  7366                           
  7367                           ;audio_tone.c: 131: current_sample_in_baud = 0;
  7368  06CD  01C5               	clrf	_current_sample_in_baud^(0+128)
  7369                           
  7370                           ;audio_tone.c: 132: packet_pos++;
  7371  06CE  3001               	movlw	1
  7372  06CF  07B5               	addwf	_packet_pos^(0+128),f
  7373  06D0  3000               	movlw	0
  7374  06D1  3DB6               	addwfc	(_packet_pos+1)^(0+128),f
  7375  06D2  3000               	movlw	0
  7376  06D3  3DB7               	addwfc	(_packet_pos+2)^(0+128),f
  7377  06D4  3000               	movlw	0
  7378  06D5  3DB8               	addwfc	(_packet_pos+3)^(0+128),f
  7379                           
  7380                           ;audio_tone.c: 133: Change_to_New_Baud = 0;
  7381  06D6  01BE               	clrf	_Change_to_New_Baud^(0+128)
  7382                           
  7383                           ;audio_tone.c: 134: }
  7384                           ;audio_tone.c: 136: }
  7385                           ;audio_tone.c: 138: end_generator:
  7386  06D7  0008               	return
  7387  06D8                     __end_of_Sinus_Generator:	
  7388                           ;audio_tone.c: 140: return;
  7389                           
  7390                           
  7391                           	psect	text44
  7392  0B57                     __ptext44:	
  7393 ;; *************** function _Timer0_Stop *****************
  7394 ;; Defined at:
  7395 ;;		line 249 in file "utility.c"
  7396 ;; Parameters:    Size  Location     Type
  7397 ;;		None
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;		None
  7400 ;; Return value:  Size  Location     Type
  7401 ;;		None               void
  7402 ;; Registers used:
  7403 ;;		status,2
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7413 ;;Total ram usage:        0 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_Sinus_Generator
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           
  7423                           ;psect for function _Timer0_Stop
  7424  0B57                     _Timer0_Stop:	
  7425                           
  7426                           ;utility.c: 250: TMR0IE = 0;
  7427                           
  7428                           ;incstack = 0
  7429                           ; Regs used in _Timer0_Stop: [status,2]
  7430  0B57  128B               	bcf	11,5	;volatile
  7431                           
  7432                           ;utility.c: 251: TMR0 = 0x00;
  7433  0B58  0020               	movlb	0	; select bank0
  7434  0B59  0195               	clrf	21	;volatile
  7435  0B5A  0008               	return
  7436  0B5B                     __end_of_Timer0_Stop:	
  7437                           
  7438                           	psect	text45
  7439  0B5B                     __ptext45:	
  7440 ;; *************** function _Send_Vcxo_Signal *****************
  7441 ;; Defined at:
  7442 ;;		line 108 in file "utility.c"
  7443 ;; Parameters:    Size  Location     Type
  7444 ;;  value           1    wreg     unsigned char 
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;  value           1    0[COMMON] unsigned char 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  1    wreg      unsigned char 
  7449 ;; Registers used:
  7450 ;;		wreg
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;Total ram usage:        1 bytes
  7461 ;; Hardware stack levels used:    1
  7462 ;; This function calls:
  7463 ;;		Nothing
  7464 ;; This function is called by:
  7465 ;;		_Sinus_Generator
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           
  7470                           ;psect for function _Send_Vcxo_Signal
  7471  0B5B                     _Send_Vcxo_Signal:	
  7472                           
  7473                           ;incstack = 0
  7474                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  7475                           ;Send_Vcxo_Signal@value stored from wreg
  7476  0B5B  00F0               	movwf	Send_Vcxo_Signal@value
  7477                           
  7478                           ;utility.c: 110: DACCON1 = value;
  7479  0B5C  0870               	movf	Send_Vcxo_Signal@value,w
  7480  0B5D  0022               	movlb	2	; select bank2
  7481  0B5E  0099               	movwf	25	;volatile
  7482  0B5F  0008               	return
  7483  0B60                     __end_of_Send_Vcxo_Signal:	
  7484                           ;utility.c: 111: return 1;
  7485                           ;	Return value of _Send_Vcxo_Signal is never used
  7486                           
  7487                           
  7488                           	psect	text46
  7489  0EB8                     __ptext46:	
  7490 ;; *************** function _I2C_ISR *****************
  7491 ;; Defined at:
  7492 ;;		line 72 in file "isr.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;		None
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;		None
  7497 ;; Return value:  Size  Location     Type
  7498 ;;		None               void
  7499 ;; Registers used:
  7500 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7510 ;;Total ram usage:        1 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; This function calls:
  7513 ;;		Nothing
  7514 ;; This function is called by:
  7515 ;;		_global_interrupt
  7516 ;; This function uses a non-reentrant model
  7517 ;;
  7518                           
  7519                           
  7520                           ;psect for function _I2C_ISR
  7521  0EB8                     _I2C_ISR:	
  7522                           
  7523                           ;isr.c: 73: if(!SSP1STATbits.D_nA){
  7524                           
  7525                           ;incstack = 0
  7526                           ; Regs used in _I2C_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  7527  0EB8  0024               	movlb	4	; select bank4
  7528  0EB9  1A94               	btfsc	20,5	;volatile
  7529  0EBA  2ED5               	goto	i1l581
  7530                           
  7531                           ;isr.c: 74: SSP1IF = 0;
  7532  0EBB  0020               	movlb	0	; select bank0
  7533  0EBC  1191               	bcf	17,3	;volatile
  7534                           
  7535                           ;isr.c: 75: i2c_address = SSP1BUF;
  7536  0EBD  0024               	movlb	4	; select bank4
  7537  0EBE  0811               	movf	17,w	;volatile
  7538  0EBF  00F0               	movwf	??_I2C_ISR
  7539  0EC0  0870               	movf	??_I2C_ISR,w
  7540  0EC1  0021               	movlb	1	; select bank1
  7541  0EC2  00C6               	movwf	_i2c_address^(0+128)
  7542                           
  7543                           ;isr.c: 76: if(SSP1STATbits.R_nW){
  7544  0EC3  0024               	movlb	4	; select bank4
  7545  0EC4  1D14               	btfss	20,2	;volatile
  7546  0EC5  2F05               	goto	L8
  7547                           
  7548                           ;isr.c: 77: if(!SSP1STATbits.BF)
  7549  0EC6  1814               	btfsc	20,0	;volatile
  7550  0EC7  2EEC               	goto	i1l2313
  7551                           
  7552                           ;isr.c: 78: SSP1BUF = i2c_data[i2c_data_index++];
  7553  0EC8  0020               	movlb	0	; select bank0
  7554  0EC9  086E               	movf	_i2c_data_index,w
  7555  0ECA  3EA0               	addlw	_i2c_data& (0+255)
  7556  0ECB  0086               	movwf	6
  7557  0ECC  0187               	clrf	7
  7558  0ECD  0801               	movf	1,w
  7559  0ECE  0024               	movlb	4	; select bank4
  7560  0ECF  0091               	movwf	17	;volatile
  7561  0ED0  3001               	movlw	1
  7562  0ED1  00F0               	movwf	??_I2C_ISR
  7563  0ED2  0870               	movf	??_I2C_ISR,w
  7564  0ED3  0020               	movlb	0	; select bank0
  7565  0ED4  2F03               	goto	L10
  7566  0ED5                     i1l581:	
  7567                           ;isr.c: 87: }
  7568                           ;isr.c: 88: }
  7569                           
  7570                           ;isr.c: 85: else{
  7571                           ;isr.c: 86: CKP = 1;
  7572                           
  7573                           ;isr.c: 84: }
  7574                           
  7575                           ;isr.c: 82: }
  7576                           ;isr.c: 83: CKP = 1;
  7577                           
  7578                           ;isr.c: 81: SSP1BUF = 0xCC;
  7579                           
  7580                           ;isr.c: 79: else{
  7581                           ;isr.c: 80: i2c_dummy = SSP1BUF;
  7582                           
  7583                           
  7584                           ;isr.c: 91: else{
  7585                           ;isr.c: 92: SSP1IF = 0;
  7586  0ED5  0020               	movlb	0	; select bank0
  7587  0ED6  1191               	bcf	17,3	;volatile
  7588                           
  7589                           ;isr.c: 94: if(i2c_address & 0x01){
  7590  0ED7  0021               	movlb	1	; select bank1
  7591  0ED8  1C46               	btfss	_i2c_address^(0+128),0
  7592  0ED9  2EF6               	goto	i1l2317
  7593                           
  7594                           ;isr.c: 95: if(SSP1CON2bits.ACKSTAT == 1){
  7595  0EDA  0024               	movlb	4	; select bank4
  7596  0EDB  1B16               	btfsc	22,6	;volatile
  7597  0EDC  2F05               	goto	L8
  7598                           
  7599                           ;isr.c: 98: else{
  7600                           ;isr.c: 99: if(!SSP1STATbits.BF){
  7601                           
  7602                           ;isr.c: 97: }
  7603                           
  7604                           ;isr.c: 96: CKP = 1;
  7605  0EDD  1814               	btfsc	20,0	;volatile
  7606  0EDE  2EEC               	goto	i1l2313
  7607                           
  7608                           ;isr.c: 100: SSP1BUF = i2c_data[i2c_data_index++];
  7609  0EDF  0020               	movlb	0	; select bank0
  7610  0EE0  086E               	movf	_i2c_data_index,w
  7611  0EE1  3EA0               	addlw	_i2c_data& (0+255)
  7612  0EE2  0086               	movwf	6
  7613  0EE3  0187               	clrf	7
  7614  0EE4  0801               	movf	1,w
  7615  0EE5  0024               	movlb	4	; select bank4
  7616  0EE6  0091               	movwf	17	;volatile
  7617  0EE7  3001               	movlw	1
  7618  0EE8  00F0               	movwf	??_I2C_ISR
  7619  0EE9  0870               	movf	??_I2C_ISR,w
  7620  0EEA  0020               	movlb	0	; select bank0
  7621  0EEB  2F03               	goto	L10
  7622  0EEC                     i1l2313:	
  7623                           ;isr.c: 101: }
  7624                           
  7625                           
  7626                           ;isr.c: 102: else{
  7627                           ;isr.c: 103: i2c_dummy = SSP1BUF;
  7628  0EEC  0024               	movlb	4	; select bank4
  7629  0EED  0811               	movf	17,w	;volatile
  7630  0EEE  00F0               	movwf	??_I2C_ISR
  7631  0EEF  0870               	movf	??_I2C_ISR,w
  7632  0EF0  0021               	movlb	1	; select bank1
  7633  0EF1  00C7               	movwf	_i2c_dummy^(0+128)
  7634                           
  7635                           ;isr.c: 104: SSP1BUF = 0xCC;
  7636  0EF2  30CC               	movlw	204
  7637  0EF3  0024               	movlb	4	; select bank4
  7638  0EF4  0091               	movwf	17	;volatile
  7639  0EF5  2F04               	goto	L9
  7640  0EF6                     i1l2317:	
  7641                           ;isr.c: 107: }
  7642                           ;isr.c: 108: }
  7643                           
  7644                           ;isr.c: 105: }
  7645                           ;isr.c: 106: CKP = 1;
  7646                           
  7647                           
  7648                           ;isr.c: 109: else{
  7649                           ;isr.c: 110: i2c_data[i2c_data_index++] = SSP1BUF;
  7650  0EF6  0024               	movlb	4	; select bank4
  7651  0EF7  0811               	movf	17,w	;volatile
  7652  0EF8  00F0               	movwf	??_I2C_ISR
  7653  0EF9  0020               	movlb	0	; select bank0
  7654  0EFA  086E               	movf	_i2c_data_index,w
  7655  0EFB  3EA0               	addlw	_i2c_data& (0+255)
  7656  0EFC  0086               	movwf	6
  7657  0EFD  0187               	clrf	7
  7658  0EFE  0870               	movf	??_I2C_ISR,w
  7659  0EFF  0081               	movwf	1
  7660  0F00  3001               	movlw	1
  7661  0F01  00F0               	movwf	??_I2C_ISR
  7662  0F02  0870               	movf	??_I2C_ISR,w
  7663  0F03                     L10:	
  7664  0F03  07EE               	addwf	_i2c_data_index,f
  7665  0F04                     L9:	
  7666                           
  7667                           ;isr.c: 111: CKP = 1;
  7668  0F04  0024               	movlb	4	; select bank4
  7669  0F05                     L8:	
  7670  0F05  1615               	bsf	21,4	;volatile
  7671                           
  7672                           ;isr.c: 112: }
  7673                           ;isr.c: 113: }
  7674                           ;isr.c: 114: i2c_dummy = SSP1BUF;
  7675  0F06  0811               	movf	17,w	;volatile
  7676  0F07  00F0               	movwf	??_I2C_ISR
  7677  0F08  0870               	movf	??_I2C_ISR,w
  7678  0F09  0021               	movlb	1	; select bank1
  7679  0F0A  00C7               	movwf	_i2c_dummy^(0+128)
  7680                           
  7681                           ;isr.c: 115: WCOL = 0;
  7682  0F0B  0024               	movlb	4	; select bank4
  7683  0F0C  1395               	bcf	21,7	;volatile
  7684                           
  7685                           ;isr.c: 116: SSPOV = 0;
  7686  0F0D  1315               	bcf	21,6	;volatile
  7687                           
  7688                           ;isr.c: 118: if(i2c_data_index >= 5)
  7689  0F0E  3005               	movlw	5
  7690  0F0F  0020               	movlb	0	; select bank0
  7691  0F10  026E               	subwf	_i2c_data_index,w
  7692  0F11  1C03               	skipc
  7693  0F12  0008               	return
  7694                           
  7695                           ;isr.c: 119: i2c_data_index = 0;
  7696  0F13  01EE               	clrf	_i2c_data_index
  7697  0F14  0008               	return
  7698  0F15                     __end_of_I2C_ISR:	
  7699                           
  7700                           	psect	text47
  7701  0B96                     __ptext47:	
  7702 ;; *************** function _ADC_ISR *****************
  7703 ;; Defined at:
  7704 ;;		line 42 in file "isr.c"
  7705 ;; Parameters:    Size  Location     Type
  7706 ;;		None
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;		None
  7709 ;; Return value:  Size  Location     Type
  7710 ;;		None               void
  7711 ;; Registers used:
  7712 ;;		wreg
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;Total ram usage:        1 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; This function calls:
  7725 ;;		Nothing
  7726 ;; This function is called by:
  7727 ;;		_global_interrupt
  7728 ;; This function uses a non-reentrant model
  7729 ;;
  7730                           
  7731                           
  7732                           ;psect for function _ADC_ISR
  7733  0B96                     _ADC_ISR:	
  7734                           
  7735                           ;isr.c: 43: adc__high = ADRESH;
  7736                           
  7737                           ;incstack = 0
  7738                           ; Regs used in _ADC_ISR: [wreg]
  7739  0B96  0021               	movlb	1	; select bank1
  7740  0B97  081C               	movf	28,w	;volatile
  7741  0B98  00F0               	movwf	??_ADC_ISR
  7742  0B99  0870               	movf	??_ADC_ISR,w
  7743  0B9A  00C2               	movwf	_adc__high^(0+128)
  7744                           
  7745                           ;isr.c: 44: adc__low = ADRESL;
  7746  0B9B  081B               	movf	27,w	;volatile
  7747  0B9C  00F0               	movwf	??_ADC_ISR
  7748  0B9D  0870               	movf	??_ADC_ISR,w
  7749  0B9E  00C3               	movwf	_adc__low^(0+128)
  7750                           
  7751                           ;isr.c: 46: ADIF = 0;
  7752  0B9F  0020               	movlb	0	; select bank0
  7753  0BA0  1311               	bcf	17,6	;volatile
  7754  0BA1  0008               	return
  7755  0BA2                     __end_of_ADC_ISR:	
  7756  007E                     btemp	set	126	;btemp
  7757  007E                     pic14e$flags	set	126
  7758  007E                     wtemp	set	126
  7759  007E                     wtemp0	set	126
  7760  0080                     wtemp1	set	128
  7761  0082                     wtemp2	set	130
  7762  0084                     wtemp3	set	132
  7763  0086                     wtemp4	set	134
  7764  0088                     wtemp5	set	136
  7765  007F                     wtemp6	set	127
  7766  007E                     ttemp	set	126
  7767  007E                     ttemp0	set	126
  7768  0081                     ttemp1	set	129
  7769  0084                     ttemp2	set	132
  7770  0087                     ttemp3	set	135
  7771  007F                     ttemp4	set	127
  7772  007E                     ltemp	set	126
  7773  007E                     ltemp0	set	126
  7774  0082                     ltemp1	set	130
  7775  0086                     ltemp2	set	134
  7776  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     78      80
    BANK1            80     28      69
    BANK2            80      0      55
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_TIMER0_ISR
    _TIMER0_ISR->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Adf_Lock
    _main->_Modem_Flush_Frame
    _Ptt_Off->_Adf_Write_Register_Three
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_One->_Reverse_Array
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ptt_On->_Adf_Write_Register_Three
    _Adf_Write_Register_Two->_Reverse_Array
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc
    _Adf_Lock->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Adf_Lock
    _Ptt_Off->_Adf_Write_Register_Three
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Ptt_On->_Adf_Write_Register_Three
    _Adf_Lock->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0   67166
                                             77 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                           _Adf_Lock
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   12557
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   25114
                    _Configure_Audio
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   25114
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Config                                     0     0      0   22264
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Write_Register_One                              19    19      0    5566
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1425
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1425
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Configure_Audio                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   13982
                                             76 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ptt_On                                               1     1      0   12557
                                             75 BANK0      1     1      0
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Register_Two                              32    32      0    5566
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adf_Lock                                             6     6      0   12648
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
           _Adf_Write_Register_Three
            _Adf_Write_Register_Zero
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Adf_Write_Register_Zero                             36    36      0    5566
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Register_Three                            64    64      0    5566
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Write_Adf7012_Reg                                    4     3      1    3353
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (4) _Spi_Byte_Send                                        4     4      0    1517
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1425
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (3) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Reverse_Array                                       12    11      1    1332
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _Adf_Locked                                           0     0      0       0
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (3) _Read_Adf7012_Muxout                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _global_interrupt                                     2     2      0      45
                                              8 COMMON     2     2      0
                            _ADC_ISR
                            _I2C_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
 ---------------------------------------------------------------------------------
 (10) _TIMER1_ISR                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TIMER0_ISR                                          1     1      0      45
                                              7 COMMON     1     1      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (11) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (12) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _I2C_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _ADC_ISR                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Adf_Lock
     _Adf_Locked
       _Read_Adf7012_Muxout
     _Adf_Write_Register_Three
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Adf_Write_Register_Zero
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
     _Timer0_Start
   _Modem_Setup
     _Configure_Audio
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
   _Ptt_Off
     _Adf_Write_Register_Three
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Adf_Write_Register_Two
       _Reverse_Array
         _memcpy
       _Write_Adf7012_Reg
         _Delay_ms
           _Dac0_Start_Hold
         _Spi_Byte_Send
           _Delay_ms
             _Dac0_Start_Hold
       _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _ADC_ISR
   _I2C_ISR
   _TIMER0_ISR
     _Sinus_Generator
       _Send_Vcxo_Signal
       _Timer0_Stop
   _TIMER1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      45       7       86.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      37       9       68.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     11A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     11A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Oct 02 14:00:56 2014

                   _i2c_data_index 006E                        __CFG_CP$OFF 0000  
          _Adf_Reset_Register_Zero 03E1                     Reverse_Array@i 0032  
                   Spi_Byte_Send@i 0029           __end_of_Adf_Reset_Config 0BCB  
                      __CFG_LVP$ON 0000           _Adf_Reset_Register_Three 0CA4  
                              l229 0C8D                                l165 06DE  
                              l259 0D03                                _CKP 10AC  
                     __CFG_CPD$OFF 0000                                _SEN 10B0  
                              _PSA 04AB                    __end_of_I2C_ISR 0F15  
                              _crc 00B9                    __end_of_ADC_ISR 0BA2  
                     __CFG_BORV$LO 0000                                wreg 0009  
        Ax25_Send_Header@addresses 0033                       __CFG_IESO$ON 0000  
                    ??_Gpio_Config 0020             _Adf_Write_Register_One 0F15  
           _Adf_Write_Register_Two 04C4                               l2103 05EC  
                             l2113 062A                               l2055 0D97  
                             l2065 0B94                               l2233 0FD1  
                             l2235 0FF3                               l2503 027C  
                             l2257 03B2                               l2259 03D4  
                             l2507 021C                               l2509 0296  
                             l2517 0C6A                               l1903 0D04  
                             l2473 01F8                               l2563 079F  
                             l2467 01E5                               l1925 0CD4  
                             l1941 0DD1                               l2493 0236  
                             l2485 0219                               l2479 0206  
                             l2753 0746                               l1939 0DBD  
                             l2499 025B                               l2763 075A  
                             l1959 0E41                               l2759 074F  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _AHEN 10B9  
                             _ADON 04E8                               STR_1 04BE  
                     __CFG_WDTE$ON 0000                               _DHEN 10B8  
                             _GCEN 10B7                               _BOEN 10BC  
                             u1225 02A7                               u2105 026D  
                             u2025 01E3                               u1305 0F2C  
                             u1155 0C93                               u1235 02B6  
                             u2115 0280                               u2035 01F6  
                             u1315 0F47                               u1405 0081  
                             u1245 02C5                               u2125 0226  
                             u2045 0204                               u1325 04CD  
                             u1415 0090                               u1255 02D4  
                             u2055 0217                               u1335 04DC  
                             u1505 0117                               u1425 009F  
                             u1265 02E3                               u2145 0C5C  
                             u2065 0234                               u1345 04F7  
                             u1195 0CDE                               u1515 0126  
                             u1435 00AE                               u1275 02F2  
                             u2075 023A                               u1355 0506  
                             u1445 00BD                               u1285 030D  
                             u1605 05C5                               u2085 0259  
                             u1365 0515                               u1455 00CC  
                             u1615 05EA                               u2095 0268  
                             u1375 0524                               u1295 0F1E  
                             u3137 0C99                               u1465 00DB  
                             u1385 0063                               u1625 05FA  
                             u1634 0604                               u1554 0590  
                             u1475 00EA                               u1395 0072  
                             u1635 0603                               u1555 058F  
                             u1564 059D                               u1804 0FB6  
                             u1485 00F9                               u1645 0612  
                             u1565 059C                               u1805 0FB5  
                             u1495 0108                               u1815 0FC3  
                             u1824 0FD8                               u1905 03A4  
                             u1585 05AF                               u1825 0FD7  
                             u1914 03B9                               u1594 05B8  
                             u2570 0718                               u1915 03B8  
                             u1595 05B7                               u1835 0FE6  
                             _PCIE 10BE                               u1925 03C7  
                             u1775 0FA3                               u1784 0FAB  
                             u1865 0384                               u1785 0FAA  
                             u1874 038C                               u1875 038B  
                             u1894 0397                               u1895 0396  
                             _PIR1 0011                               _SCIE 10BD  
                             _TMR0 0015                               _WCOL 10AF  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 06D8                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    Send_Byte@byte 0029                      __CFG_BOREN$ON 0000  
                             ltemp 007E                               start 002B  
                             ttemp 007E                    _Sinus_Generator 0630  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
          _Adf_Write_Register_Zero 029E                        ?_TIMER0_ISR 0070  
                      ?_TIMER1_ISR 0070                        ?_Adc1_Start 0070  
                     Adf_Lock@bias 00D3                 main@beacon_address 00D5  
                    __CFG_PLLEN$ON 0000                    __end_of_Ptt_Off 0C20  
                    ??_Radio_Setup 006B                              _ADCS0 04F4  
                            _ADCS1 04F5                              _ADCS2 04F6  
                            ?_main 0070                              _DACEN 08C7  
                            _ACKDT 10B5                              _DACOE 08C5  
                            _ANSA1 0C61                              i1l155 0013  
                            i1l156 0026                              i1l157 0019  
                            i1l158 001F                              i1l159 0025  
                            _SBCDE 10BA                              i1l581 0ED5  
                            _TMR1H 0017                              _TMR1L 0016  
                            _SSPM0 10A8                              _SSPM1 10A9  
                            _SSPM2 10AA                              _SSPM3 10AB  
                            _TRISA 008C                              _TRISC 008E  
                            _SSPEN 10AD                              _SSPOV 10AE  
       Write_Adf7012_Reg@reg_value 002C                              _phase 006F  
                 __end_of_Adf_Lock 07E7                      ??_Modem_Setup 006B  
                __end_of_BAUD_RATE 04BC                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                 __size_of_Adf_Reset 0012  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 0BA2  
                            wtemp6 007F                __end_of_Gpio_Config 0C35  
                 __end_of_Delay_ms 0CA4                        ?_Adf_Locked 0070  
                  _Configure_Audio 0C35             _current_sample_in_baud 00C5  
                Spi_Byte_Send@data 0027                         Send_Byte@i 002A  
                  __initialization 002D          ??_Adf_Reset_Register_Zero 0020  
        __size_of_Ax25_Send_Header 00D8              __size_of_System_Start 0057  
                     __end_of_main 0768          __size_of_Ax25_Send_Footer 001B  
                        ??_I2C_ISR 0070                          ??_ADC_ISR 0070  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 0E61  
         _Adf_Write_Register_Three 005A              __end_of_Spi_Byte_Send 0D1D  
                           ??_main 006D          __size_of_Send_Vcxo_Signal 0005  
              __end_of_Radio_Setup 0BBC       __size_of_Read_Adf7012_Muxout 0007  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _CCP1IF 008A  
                           _DACNSS 08C0                             _ADNREF 04F2  
                           _ADRESH 009C                             _ADRESL 009B  
                           _CCPR1H 0292                             _CCPR1L 0291  
          __end_of_Sinus_Generator 06D8      Adf_Write_Register_One@reg_ptr 0043  
                           i1l2201 06B4                             i1l2313 0EEC  
                           i1l2317 0EF6                             i1l2181 067D  
                           i1l2191 068C                             i1l2175 0650  
                           i1l2195 0692                __size_of_TIMER0_ISR 0007  
                           _INTCON 000B                __size_of_TIMER1_ISR 002D  
                           u171_25 066E                             u174_25 06A6  
              __size_of_Adc1_Start 0006                             u168_25 0643  
                           u194_25 0D6A                 Reverse_Array@F3148 00A5  
                           _OSCCON 0099           __size_of_Dac0_Start_Hold 0005  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1IE 0488                             _TMR1IF 0088  
                           _TMR1ON 00C0                       _System_Start 0E61  
                           _SSP1IE 048B                             _SSP1IF 008B  
                           _WDTPS0 04B9                             _WDTPS1 04BA  
                           _WDTPS2 04BB                             _WDTPS3 04BC  
                           _WDTPS4 04BD                             _SSPMSK 0213  
              __end_of_Modem_Setup 0B7C                     __CFG_PWRTE$OFF 0000  
                    ??_Timer0_Stop 0070          ??_Adf_Write_Register_Zero 0033  
                           _Ptt_On 0DE1                          ??_Ptt_Off 006B  
               __size_of_Send_Byte 00B4                 Reverse_Array@input 0031  
                   __CFG_STVREN$ON 0000                   ??_Ax25_Send_Flag 0020  
                 ??_Ax25_Send_Byte 002C                             _memcpy 0CCA  
                 ??_Ax25_Send_Sync 0020                  __end_of_Adf_Reset 0C0D  
                       _Update_Crc 0D76                __size_of_Adf_Locked 0003  
                      _Gpio_Config 0C20            __end_of_Configure_Audio 0C4C  
                      _i2c_address 00C6            __end_of__initialization 0056  
        __size_of_global_interrupt 0027                 Write_Adf7012_Reg@i 002D  
       ??_Adf_Reset_Register_Three 0020                     __pcstackCOMMON 0070  
         ??_Adf_Reset_Register_One 0020                       __pidataBANK2 0BDA  
         ??_Adf_Reset_Register_Two 0020                         _adf_config 0120  
              __end_of_Timer0_Stop 0B5B                      _PLAYBACK_RATE 04B6  
                        ?_Adf_Lock 0070                  ?_Adf_Reset_Config 0070  
                      _Radio_Setup 0BAE            ?_Adf_Write_Register_One 0070  
          ?_Adf_Write_Register_Two 0070          Spi_Byte_Send@data_to_send 0028  
               ??_Adf_Reset_Config 0026                          ?_Delay_ms 0020  
                __end_of_Send_Byte 0630                   _PHASE_DELTA_1200 00A9  
                 _PHASE_DELTA_2200 00AD                        _Modem_Setup 0B76  
                       __pbssBANK0 006E                         __pbssBANK1 00A0  
                       __pbssBANK2 0120                         __pbssBANK3 01A0  
                 ?_Sinus_Generator 0070                 Ax25_Send_Flag@byte 0026  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 00CD  
                    ?_Timer1_Start 0070                         __pmaintext 06D8  
                 _Ax25_Send_Header 01C6                            ?_Ptt_On 0070  
                ??_Dac0_Start_Hold 0020                 __end_of_TABLE_SIZE 04BE  
                 _Ax25_Send_Footer 0C4C                       ??_TIMER0_ISR 0077  
                     ??_TIMER1_ISR 0070                         __pintentry 0004  
                     ??_Adc1_Start 0020                            _DACCON1 0119  
                          _I2C_ISR 0EB8                 Ax25_Send_Byte@byte 002C  
                          _DACPSS0 08C2                            _DACPSS1 08C3  
                          ?_memcpy 0020                            _ADC_ISR 0B96  
                 _Ax25_Send_String 0C67                            _ADPREF0 04F0  
                          _ADPREF1 04F1                         ??_Adf_Lock 006B  
   __end_of_Adf_Write_Register_One 0F87     __end_of_Adf_Write_Register_Two 057C  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                 _Send_Vcxo_Signal 0B5B           __end_of_Adf_Write_Config 0BAE  
                      ?_Update_Crc 0070                         ??_Delay_ms 0022  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _SSP1ADD 0212                            _SSP1BUF 0211  
                          _PTT_OFF 00C0                Update_Crc@input_bit 0022  
                 ?_Configure_Audio 0070      Adf_Write_Register_Two@reg_ptr 004B  
   Adf_Write_Register_Zero@reg_ptr 004F                 __end_of_TIMER0_ISR 0B8F  
               __end_of_TIMER1_ISR 0D76                 __end_of_Adc1_Start 0B70  
                   ??_Timer0_Start 0020                     ??_Timer1_Start 0020  
                        _BAUD_RATE 04BA                       ??_Adf_Locked 0020  
       ??_Adf_Write_Register_Three 0033                        _Timer0_Stop 0B57  
                       _packet_pos 00B5                            _Ptt_Off 0C0D  
                  __size_of_Ptt_On 003C                _Read_Adf7012_Muxout 0B8F  
  __size_of_Adf_Reset_Register_One 0011    __size_of_Adf_Reset_Register_Two 0018  
               Ax25_Send_Sync@byte 0026                Reverse_Array@length 0027  
                  Ax25_Send_Flag@i 0027                    __size_of_memcpy 0029  
                          __ptext1 0BCB                            __ptext2 0E61  
                          __ptext3 0C0D                            __ptext4 0B76  
                          __ptext5 0BAE                            __ptext6 0BA2  
                          __ptext7 0F15                            __ptext8 0BBC  
                          __ptext9 03E1              Delay_ms@time_to_delay 0020  
        Adf_Write_Register_One@reg 003F                    Ax25_Send_Sync@i 0027  
               __end_of_Adf_Locked 0B57               ?_Read_Adf7012_Muxout 0070  
        Adf_Write_Register_Two@reg 004F                            clrloop0 0B83  
  Adf_Write_Register_Three@reg_ptr 00C9               end_of_initialization 0056  
                          memcpy@d 0024                            memcpy@n 0021  
                          memcpy@s 0025                          Delay_ms@i 0024  
                          init_ram 0B7C                            initloop 0B7D  
                 _global_interrupt 0004                __size_of_Update_Crc 0032  
                     __pstringtext 0400                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 00B1                          _Adf_Reset 0BFB  
            ??_Read_Adf7012_Muxout 0020                   _SAMPLES_PER_BAUD 00C1  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 0BEA  
     Write_Adf7012_Reg@size_of_reg 002A             _Adf_Reset_Register_Two 07E7  
        Sinus_Generator@tone_index 00BD             __size_of_Reverse_Array 0044  
           __size_of_Spi_Byte_Send 002A           ?_Adf_Reset_Register_Zero 0070  
                      Adf_Lock@adj 00D1                     __end_of_Ptt_On 0E1D  
               _Change_to_New_Baud 00BE                     __end_of_memcpy 0CF3  
                     ?_Radio_Setup 0070                  __size_of_Adf_Lock 007F  
             __end_of_Timer0_Start 0B6A               __end_of_Timer1_Start 0BDA  
              start_initialization 002D                         ?_Adf_Reset 0070  
                        _i2c_dummy 00C7           __end_of_Ax25_Send_Header 029E  
         __end_of_Ax25_Send_Footer 0C67                  __size_of_Delay_ms 0020  
                     ?_Modem_Setup 0070                    _Dac0_Start_Hold 0B60  
         __end_of_Ax25_Send_String 0C84          __size_of_Adf_Reset_Config 000F  
         ?_Adf_Write_Register_Zero 0070                          _Send_Byte 057C  
         __end_of_Send_Vcxo_Signal 0B60                           ??_Ptt_On 006B  
                      __pdataBANK2 0147                           ?_I2C_ISR 0070  
                         ??_memcpy 0023                           ?_ADC_ISR 0070  
                    _Reverse_Array 0E1D                      _Spi_Byte_Send 0CF3  
                ?_Adf_Write_Config 0070                       ??_Update_Crc 0020  
                      __pbssCOMMON 007A                          ___latbits 0002  
__size_of_Adf_Reset_Register_Three 0026                      _ones_in_a_row 00BB  
                    __pcstackBANK0 0020                      __pcstackBANK1 00C9  
               ??_Adf_Write_Config 006B          ?_Adf_Reset_Register_Three 0070  
                        _adc__high 00C2                __end_of__stringdata 04C4  
          __size_of_Ax25_Send_Flag 007C            __size_of_Ax25_Send_Byte 0006  
          __size_of_Ax25_Send_Sync 0079    __end_of_Adf_Reset_Register_Zero 0400  
    Ax25_Send_Header@num_addresses 002C                         ?_Send_Byte 0070  
                _Write_Adf7012_Reg 0DA8                       _current_byte 00C4  
                Ax25_Send_Header@i 0034                  Ax25_Send_Header@j 0031  
               ?_Write_Adf7012_Reg 002A                       ?_Timer0_Stop 0070  
         __size_of_Sinus_Generator 00A8          Ax25_Send_Footer@final_crc 002C  
           Ax25_Send_String@string 002D                           ?_Ptt_Off 0070  
               __end_of_Update_Crc 0DA8                ??_Write_Adf7012_Reg 002B  
                   ?_Reverse_Array 0027                     ?_Spi_Byte_Send 0070  
         __end_of_global_interrupt 002B            __end_of_Dac0_Start_Hold 0B65  
                      ??_Adf_Reset 0026    __end_of_Adf_Write_Register_Zero 0365  
                Ax25_Send_String@i 002F          __end_of_Write_Adf7012_Reg 0DE1  
             __size_of_Gpio_Config 0015                      ?_System_Start 0070  
                     _modem_packet 01A0                          clear_ram0 0B82  
         __size_of_Configure_Audio 0017                          main@F3171 0147  
            __size_of_Timer0_Start 0005                           _Adf_Lock 0768  
            __size_of_Timer1_Start 000F                   __size_of_I2C_ISR 005D  
                 __size_of_ADC_ISR 000C          Reverse_Array@buffer_array 002D  
                      __stringdata 04BE  __size_of_Adf_Write_Register_Three 016C  
          ?_Adf_Reset_Register_One 0070          ?_Adf_Write_Register_Three 0070  
          ?_Adf_Reset_Register_Two 0070               __size_of_Radio_Setup 000E  
                         _Delay_ms 0C84              Send_Vcxo_Signal@value 0070  
                   ??_System_Start 0020                           _i2c_data 00A0  
                 _Adf_Reset_Config 0BBC                        ??_Send_Byte 0023  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 0D1D  
               ?_Modem_Flush_Frame 0070                       _Timer0_Start 0B65  
                     _Timer1_Start 0BCB           ??_Adf_Write_Register_One 0033  
         ??_Adf_Write_Register_Two 0033                   __size_of_Ptt_Off 0013  
                  ??_Reverse_Array 0028                    ??_Spi_Byte_Send 0026  
            __end_of_PLAYBACK_RATE 04BA                ??_Modem_Flush_Frame 006C  
                ??_Sinus_Generator 0071   __size_of_Adf_Reset_Register_Zero 001F  
                         _adc__low 00C3        __end_of_Read_Adf7012_Muxout 0B96  
   __end_of_Adf_Reset_Register_One 0BFB     __end_of_Adf_Reset_Register_Two 07FF  
              __end_of_sine_table2 04B6                   ?_Dac0_Start_Hold 0070  
                   _Ax25_Send_Flag 0365                     _Ax25_Send_Byte 0B70  
                   _Ax25_Send_Sync 0F87                           __ptext10 07E7  
                         __ptext11 0CA4                           __ptext20 0C67  
                         __ptext12 0BEA                           __ptext21 0B70  
                         __ptext13 0BFB                           __ptext30 005A  
                         __ptext22 01C6                           __ptext14 0C35  
                         __ptext31 0DA8                           __ptext23 0F87  
                         __ptext15 0D1D                           __ptext32 0CF3  
                         __ptext24 0C4C                           __ptext16 0B65  
                         __ptext41 0D49                           __ptext33 0C84  
                         __ptext25 057C                           __ptext17 0DE1  
                         __ptext42 0B88                           __ptext34 0B60  
                         __ptext26 0D76                           __ptext18 04C4  
                         __ptext43 0630                           __ptext35 0E1D  
                         __ptext27 0365                           __ptext19 0C20  
                         __ptext44 0B57                           __ptext36 0CCA  
                         __ptext28 0768                           __ptext45 0B5B  
                         __ptext37 0B54                           __ptext29 029E  
                         __ptext46 0EB8                           __ptext38 0B8F  
                         __ptext47 0B96                           __ptext39 0B6A  
                ?_Ax25_Send_Header 002C                       _SSP1CON2bits 0216  
                ?_Ax25_Send_Footer 0070                 ??_Ax25_Send_Header 002E  
        __end_of_Modem_Flush_Frame 0D49         __size_of_Write_Adf7012_Reg 0039  
                ?_Ax25_Send_String 002D                 ??_Ax25_Send_Footer 002C  
                    __size_of_main 0090                        _phase_delta 00C8  
                ?_Send_Vcxo_Signal 0070                 ??_Ax25_Send_String 002F  
               ??_Send_Vcxo_Signal 0070   __end_of_Adf_Reset_Register_Three 0CCA  
             __size_of_Timer0_Stop 0004         Adf_Write_Register_Zero@reg 0053  
                     _SSP1STATbits 0214   __size_of_Adf_Write_Register_Zero 00C7  
                ??_Configure_Audio 0020             __end_of_Ax25_Send_Flag 03E1  
           __end_of_Ax25_Send_Byte 0B76             __end_of_Ax25_Send_Sync 1000  
                       _TABLE_SIZE 04BC                           memcpy@d1 0026  
                         memcpy@s1 0020                        pic14e$flags 007E  
                         intlevel1 0000          __size_of_Adf_Write_Config 000C  
                __CFG_CLKOUTEN$OFF 0000                 _MODEM_TRANSMITTING 00BF  
  __size_of_Adf_Write_Register_One 0072    __size_of_Adf_Write_Register_Two 00B8  
                       _TIMER0_ISR 0B88                         _TIMER1_ISR 0D49  
                       _Adc1_Start 0B6A                        _sine_table2 0400  
             __end_of_System_Start 0EB8                    ?_Ax25_Send_Flag 0070  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070        Sinus_Generator@Audio_Signal 0076  
               ??_global_interrupt 0078         __size_of_Modem_Flush_Frame 002C  
                       _Adf_Locked 0B54                  _modem_packet_size 007A  
 __end_of_Adf_Write_Register_Three 01C6  
