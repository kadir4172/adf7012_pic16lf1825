

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Sep 22 18:16:03 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	intentry,global,class=CODE,delta=2
    71                           	dabs	1,0x7E,2
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000E                     	;# 
    86  0011                     	;# 
    87  0012                     	;# 
    88  0013                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  008C                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010E                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  011E                     	;# 
   131  018C                     	;# 
   132  018E                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019E                     	;# 
   149  019F                     	;# 
   150  020C                     	;# 
   151  020E                     	;# 
   152  0211                     	;# 
   153  0211                     	;# 
   154  0212                     	;# 
   155  0212                     	;# 
   156  0213                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0214                     	;# 
   160  0215                     	;# 
   161  0215                     	;# 
   162  0215                     	;# 
   163  0216                     	;# 
   164  0216                     	;# 
   165  0217                     	;# 
   166  0217                     	;# 
   167  0291                     	;# 
   168  0291                     	;# 
   169  0292                     	;# 
   170  0293                     	;# 
   171  0294                     	;# 
   172  0295                     	;# 
   173  0295                     	;# 
   174  0296                     	;# 
   175  0298                     	;# 
   176  0298                     	;# 
   177  0299                     	;# 
   178  029A                     	;# 
   179  029B                     	;# 
   180  029C                     	;# 
   181  029D                     	;# 
   182  029E                     	;# 
   183  0311                     	;# 
   184  0311                     	;# 
   185  0312                     	;# 
   186  0313                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  038C                     	;# 
   192  038E                     	;# 
   193  0391                     	;# 
   194  0392                     	;# 
   195  0393                     	;# 
   196  039A                     	;# 
   197  039C                     	;# 
   198  039D                     	;# 
   199  039E                     	;# 
   200  039F                     	;# 
   201  0415                     	;# 
   202  0416                     	;# 
   203  0417                     	;# 
   204  041C                     	;# 
   205  041D                     	;# 
   206  041E                     	;# 
   207  0FE4                     	;# 
   208  0FE5                     	;# 
   209  0FE6                     	;# 
   210  0FE7                     	;# 
   211  0FE8                     	;# 
   212  0FE9                     	;# 
   213  0FEA                     	;# 
   214  0FEB                     	;# 
   215  0FED                     	;# 
   216  0FEE                     	;# 
   217  0FEF                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000E                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  008C                     	;# 
   247  008E                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0095                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009B                     	;# 
   259  009C                     	;# 
   260  009D                     	;# 
   261  009E                     	;# 
   262  010C                     	;# 
   263  010E                     	;# 
   264  0111                     	;# 
   265  0112                     	;# 
   266  0113                     	;# 
   267  0114                     	;# 
   268  0115                     	;# 
   269  0116                     	;# 
   270  0117                     	;# 
   271  0118                     	;# 
   272  0119                     	;# 
   273  011A                     	;# 
   274  011B                     	;# 
   275  011D                     	;# 
   276  011E                     	;# 
   277  018C                     	;# 
   278  018E                     	;# 
   279  0191                     	;# 
   280  0191                     	;# 
   281  0192                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0193                     	;# 
   285  0194                     	;# 
   286  0195                     	;# 
   287  0196                     	;# 
   288  0199                     	;# 
   289  019A                     	;# 
   290  019B                     	;# 
   291  019B                     	;# 
   292  019C                     	;# 
   293  019D                     	;# 
   294  019E                     	;# 
   295  019F                     	;# 
   296  020C                     	;# 
   297  020E                     	;# 
   298  0211                     	;# 
   299  0211                     	;# 
   300  0212                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0213                     	;# 
   304  0214                     	;# 
   305  0214                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0216                     	;# 
   310  0216                     	;# 
   311  0217                     	;# 
   312  0217                     	;# 
   313  0291                     	;# 
   314  0291                     	;# 
   315  0292                     	;# 
   316  0293                     	;# 
   317  0294                     	;# 
   318  0295                     	;# 
   319  0295                     	;# 
   320  0296                     	;# 
   321  0298                     	;# 
   322  0298                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029D                     	;# 
   328  029E                     	;# 
   329  0311                     	;# 
   330  0311                     	;# 
   331  0312                     	;# 
   332  0313                     	;# 
   333  0318                     	;# 
   334  0318                     	;# 
   335  0319                     	;# 
   336  031A                     	;# 
   337  038C                     	;# 
   338  038E                     	;# 
   339  0391                     	;# 
   340  0392                     	;# 
   341  0393                     	;# 
   342  039A                     	;# 
   343  039C                     	;# 
   344  039D                     	;# 
   345  039E                     	;# 
   346  039F                     	;# 
   347  0415                     	;# 
   348  0416                     	;# 
   349  0417                     	;# 
   350  041C                     	;# 
   351  041D                     	;# 
   352  041E                     	;# 
   353  0FE4                     	;# 
   354  0FE5                     	;# 
   355  0FE6                     	;# 
   356  0FE7                     	;# 
   357  0FE8                     	;# 
   358  0FE9                     	;# 
   359  0FEA                     	;# 
   360  0FEB                     	;# 
   361  0FED                     	;# 
   362  0FEE                     	;# 
   363  0FEF                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000E                     	;# 
   378  0011                     	;# 
   379  0012                     	;# 
   380  0013                     	;# 
   381  0015                     	;# 
   382  0016                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001C                     	;# 
   390  001E                     	;# 
   391  001F                     	;# 
   392  008C                     	;# 
   393  008E                     	;# 
   394  0091                     	;# 
   395  0092                     	;# 
   396  0093                     	;# 
   397  0095                     	;# 
   398  0096                     	;# 
   399  0097                     	;# 
   400  0098                     	;# 
   401  0099                     	;# 
   402  009A                     	;# 
   403  009B                     	;# 
   404  009B                     	;# 
   405  009C                     	;# 
   406  009D                     	;# 
   407  009E                     	;# 
   408  010C                     	;# 
   409  010E                     	;# 
   410  0111                     	;# 
   411  0112                     	;# 
   412  0113                     	;# 
   413  0114                     	;# 
   414  0115                     	;# 
   415  0116                     	;# 
   416  0117                     	;# 
   417  0118                     	;# 
   418  0119                     	;# 
   419  011A                     	;# 
   420  011B                     	;# 
   421  011D                     	;# 
   422  011E                     	;# 
   423  018C                     	;# 
   424  018E                     	;# 
   425  0191                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0193                     	;# 
   431  0194                     	;# 
   432  0195                     	;# 
   433  0196                     	;# 
   434  0199                     	;# 
   435  019A                     	;# 
   436  019B                     	;# 
   437  019B                     	;# 
   438  019C                     	;# 
   439  019D                     	;# 
   440  019E                     	;# 
   441  019F                     	;# 
   442  020C                     	;# 
   443  020E                     	;# 
   444  0211                     	;# 
   445  0211                     	;# 
   446  0212                     	;# 
   447  0212                     	;# 
   448  0213                     	;# 
   449  0213                     	;# 
   450  0214                     	;# 
   451  0214                     	;# 
   452  0215                     	;# 
   453  0215                     	;# 
   454  0215                     	;# 
   455  0216                     	;# 
   456  0216                     	;# 
   457  0217                     	;# 
   458  0217                     	;# 
   459  0291                     	;# 
   460  0291                     	;# 
   461  0292                     	;# 
   462  0293                     	;# 
   463  0294                     	;# 
   464  0295                     	;# 
   465  0295                     	;# 
   466  0296                     	;# 
   467  0298                     	;# 
   468  0298                     	;# 
   469  0299                     	;# 
   470  029A                     	;# 
   471  029B                     	;# 
   472  029C                     	;# 
   473  029D                     	;# 
   474  029E                     	;# 
   475  0311                     	;# 
   476  0311                     	;# 
   477  0312                     	;# 
   478  0313                     	;# 
   479  0318                     	;# 
   480  0318                     	;# 
   481  0319                     	;# 
   482  031A                     	;# 
   483  038C                     	;# 
   484  038E                     	;# 
   485  0391                     	;# 
   486  0392                     	;# 
   487  0393                     	;# 
   488  039A                     	;# 
   489  039C                     	;# 
   490  039D                     	;# 
   491  039E                     	;# 
   492  039F                     	;# 
   493  0415                     	;# 
   494  0416                     	;# 
   495  0417                     	;# 
   496  041C                     	;# 
   497  041D                     	;# 
   498  041E                     	;# 
   499  0FE4                     	;# 
   500  0FE5                     	;# 
   501  0FE6                     	;# 
   502  0FE7                     	;# 
   503  0FE8                     	;# 
   504  0FE9                     	;# 
   505  0FEA                     	;# 
   506  0FEB                     	;# 
   507  0FED                     	;# 
   508  0FEE                     	;# 
   509  0FEF                     	;# 
   510  0000                     	;# 
   511  0001                     	;# 
   512  0002                     	;# 
   513  0003                     	;# 
   514  0004                     	;# 
   515  0005                     	;# 
   516  0006                     	;# 
   517  0007                     	;# 
   518  0008                     	;# 
   519  0009                     	;# 
   520  000A                     	;# 
   521  000B                     	;# 
   522  000C                     	;# 
   523  000E                     	;# 
   524  0011                     	;# 
   525  0012                     	;# 
   526  0013                     	;# 
   527  0015                     	;# 
   528  0016                     	;# 
   529  0016                     	;# 
   530  0017                     	;# 
   531  0018                     	;# 
   532  0019                     	;# 
   533  001A                     	;# 
   534  001B                     	;# 
   535  001C                     	;# 
   536  001E                     	;# 
   537  001F                     	;# 
   538  008C                     	;# 
   539  008E                     	;# 
   540  0091                     	;# 
   541  0092                     	;# 
   542  0093                     	;# 
   543  0095                     	;# 
   544  0096                     	;# 
   545  0097                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  010C                     	;# 
   555  010E                     	;# 
   556  0111                     	;# 
   557  0112                     	;# 
   558  0113                     	;# 
   559  0114                     	;# 
   560  0115                     	;# 
   561  0116                     	;# 
   562  0117                     	;# 
   563  0118                     	;# 
   564  0119                     	;# 
   565  011A                     	;# 
   566  011B                     	;# 
   567  011D                     	;# 
   568  011E                     	;# 
   569  018C                     	;# 
   570  018E                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0193                     	;# 
   577  0194                     	;# 
   578  0195                     	;# 
   579  0196                     	;# 
   580  0199                     	;# 
   581  019A                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019C                     	;# 
   585  019D                     	;# 
   586  019E                     	;# 
   587  019F                     	;# 
   588  020C                     	;# 
   589  020E                     	;# 
   590  0211                     	;# 
   591  0211                     	;# 
   592  0212                     	;# 
   593  0212                     	;# 
   594  0213                     	;# 
   595  0213                     	;# 
   596  0214                     	;# 
   597  0214                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0215                     	;# 
   601  0216                     	;# 
   602  0216                     	;# 
   603  0217                     	;# 
   604  0217                     	;# 
   605  0291                     	;# 
   606  0291                     	;# 
   607  0292                     	;# 
   608  0293                     	;# 
   609  0294                     	;# 
   610  0295                     	;# 
   611  0295                     	;# 
   612  0296                     	;# 
   613  0298                     	;# 
   614  0298                     	;# 
   615  0299                     	;# 
   616  029A                     	;# 
   617  029B                     	;# 
   618  029C                     	;# 
   619  029D                     	;# 
   620  029E                     	;# 
   621  0311                     	;# 
   622  0311                     	;# 
   623  0312                     	;# 
   624  0313                     	;# 
   625  0318                     	;# 
   626  0318                     	;# 
   627  0319                     	;# 
   628  031A                     	;# 
   629  038C                     	;# 
   630  038E                     	;# 
   631  0391                     	;# 
   632  0392                     	;# 
   633  0393                     	;# 
   634  039A                     	;# 
   635  039C                     	;# 
   636  039D                     	;# 
   637  039E                     	;# 
   638  039F                     	;# 
   639  0415                     	;# 
   640  0416                     	;# 
   641  0417                     	;# 
   642  041C                     	;# 
   643  041D                     	;# 
   644  041E                     	;# 
   645  0FE4                     	;# 
   646  0FE5                     	;# 
   647  0FE6                     	;# 
   648  0FE7                     	;# 
   649  0FE8                     	;# 
   650  0FE9                     	;# 
   651  0FEA                     	;# 
   652  0FEB                     	;# 
   653  0FED                     	;# 
   654  0FEE                     	;# 
   655  0FEF                     	;# 
   656                           
   657                           	psect	idataBANK2
   658  16A8                     __pidataBANK2:	
   659                           
   660                           ;initializer for main@F3177
   661  16A8  3443               	retlw	67
   662  16A9  3455               	retlw	85
   663  16AA  3442               	retlw	66
   664  16AB  3445               	retlw	69
   665  16AC  3459               	retlw	89
   666  16AD  3459               	retlw	89
   667  16AE  3400               	retlw	0
   668  16AF  3405               	retlw	5
   669  16B0  3443               	retlw	67
   670  16B1  3455               	retlw	85
   671  16B2  3442               	retlw	66
   672  16B3  3445               	retlw	69
   673  16B4  3458               	retlw	88
   674  16B5  3458               	retlw	88
   675  16B6  3400               	retlw	0
   676  16B7  3407               	retlw	7
   677                           
   678                           ;initializer for _sine_table2
   679  16B8  3410               	retlw	16
   680  16B9  3416               	retlw	22
   681  16BA  341C               	retlw	28
   682  16BB  341F               	retlw	31
   683  16BC  341F               	retlw	31
   684  16BD  341C               	retlw	28
   685  16BE  3416               	retlw	22
   686  16BF  3410               	retlw	16
   687  16C0  3409               	retlw	9
   688  16C1  3403               	retlw	3
   689  16C2  3400               	retlw	0
   690  16C3  3400               	retlw	0
   691  16C4  3403               	retlw	3
   692  16C5  3409               	retlw	9
   693                           
   694                           	psect	stringtext
   695  0100                     __pstringtext:	
   696  0100                     _sine_table:	
   697  0100  347F               	retlw	127
   698  0101  3481               	retlw	129
   699  0102  3482               	retlw	130
   700  0103  3484               	retlw	132
   701  0104  3485               	retlw	133
   702  0105  3487               	retlw	135
   703  0106  3488               	retlw	136
   704  0107  348A               	retlw	138
   705  0108  348B               	retlw	139
   706  0109  348D               	retlw	141
   707  010A  348F               	retlw	143
   708  010B  3490               	retlw	144
   709  010C  3492               	retlw	146
   710  010D  3493               	retlw	147
   711  010E  3495               	retlw	149
   712  010F  3496               	retlw	150
   713  0110  3498               	retlw	152
   714  0111  3499               	retlw	153
   715  0112  349B               	retlw	155
   716  0113  349C               	retlw	156
   717  0114  349E               	retlw	158
   718  0115  349F               	retlw	159
   719  0116  34A1               	retlw	161
   720  0117  34A3               	retlw	163
   721  0118  34A4               	retlw	164
   722  0119  34A6               	retlw	166
   723  011A  34A7               	retlw	167
   724  011B  34A8               	retlw	168
   725  011C  34AA               	retlw	170
   726  011D  34AB               	retlw	171
   727  011E  34AD               	retlw	173
   728  011F  34AE               	retlw	174
   729  0120  34B0               	retlw	176
   730  0121  34B1               	retlw	177
   731  0122  34B3               	retlw	179
   732  0123  34B4               	retlw	180
   733  0124  34B6               	retlw	182
   734  0125  34B7               	retlw	183
   735  0126  34B8               	retlw	184
   736  0127  34BA               	retlw	186
   737  0128  34BB               	retlw	187
   738  0129  34BC               	retlw	188
   739  012A  34BE               	retlw	190
   740  012B  34BF               	retlw	191
   741  012C  34C1               	retlw	193
   742  012D  34C2               	retlw	194
   743  012E  34C3               	retlw	195
   744  012F  34C5               	retlw	197
   745  0130  34C6               	retlw	198
   746  0131  34C7               	retlw	199
   747  0132  34C8               	retlw	200
   748  0133  34CA               	retlw	202
   749  0134  34CB               	retlw	203
   750  0135  34CC               	retlw	204
   751  0136  34CD               	retlw	205
   752  0137  34CF               	retlw	207
   753  0138  34D0               	retlw	208
   754  0139  34D1               	retlw	209
   755  013A  34D2               	retlw	210
   756  013B  34D3               	retlw	211
   757  013C  34D5               	retlw	213
   758  013D  34D6               	retlw	214
   759  013E  34D7               	retlw	215
   760  013F  34D8               	retlw	216
   761  0140  34D9               	retlw	217
   762  0141  34DA               	retlw	218
   763  0142  34DB               	retlw	219
   764  0143  34DC               	retlw	220
   765  0144  34DD               	retlw	221
   766  0145  34DF               	retlw	223
   767  0146  34E0               	retlw	224
   768  0147  34E1               	retlw	225
   769  0148  34E2               	retlw	226
   770  0149  34E3               	retlw	227
   771  014A  34E4               	retlw	228
   772  014B  34E4               	retlw	228
   773  014C  34E5               	retlw	229
   774  014D  34E6               	retlw	230
   775  014E  34E7               	retlw	231
   776  014F  34E8               	retlw	232
   777  0150  34E9               	retlw	233
   778  0151  34EA               	retlw	234
   779  0152  34EB               	retlw	235
   780  0153  34EC               	retlw	236
   781  0154  34EC               	retlw	236
   782  0155  34ED               	retlw	237
   783  0156  34EE               	retlw	238
   784  0157  34EF               	retlw	239
   785  0158  34EF               	retlw	239
   786  0159  34F0               	retlw	240
   787  015A  34F1               	retlw	241
   788  015B  34F2               	retlw	242
   789  015C  34F2               	retlw	242
   790  015D  34F3               	retlw	243
   791  015E  34F4               	retlw	244
   792  015F  34F4               	retlw	244
   793  0160  34F5               	retlw	245
   794  0161  34F5               	retlw	245
   795  0162  34F6               	retlw	246
   796  0163  34F7               	retlw	247
   797  0164  34F7               	retlw	247
   798  0165  34F8               	retlw	248
   799  0166  34F8               	retlw	248
   800  0167  34F9               	retlw	249
   801  0168  34F9               	retlw	249
   802  0169  34F9               	retlw	249
   803  016A  34FA               	retlw	250
   804  016B  34FA               	retlw	250
   805  016C  34FB               	retlw	251
   806  016D  34FB               	retlw	251
   807  016E  34FB               	retlw	251
   808  016F  34FC               	retlw	252
   809  0170  34FC               	retlw	252
   810  0171  34FC               	retlw	252
   811  0172  34FD               	retlw	253
   812  0173  34FD               	retlw	253
   813  0174  34FD               	retlw	253
   814  0175  34FD               	retlw	253
   815  0176  34FE               	retlw	254
   816  0177  34FE               	retlw	254
   817  0178  34FE               	retlw	254
   818  0179  34FE               	retlw	254
   819  017A  34FE               	retlw	254
   820  017B  34FE               	retlw	254
   821  017C  34FE               	retlw	254
   822  017D  34FE               	retlw	254
   823  017E  34FE               	retlw	254
   824  017F  34FE               	retlw	254
   825  0180  34FF               	retlw	255
   826  0181  34FE               	retlw	254
   827  0182  34FE               	retlw	254
   828  0183  34FE               	retlw	254
   829  0184  34FE               	retlw	254
   830  0185  34FE               	retlw	254
   831  0186  34FE               	retlw	254
   832  0187  34FE               	retlw	254
   833  0188  34FE               	retlw	254
   834  0189  34FE               	retlw	254
   835  018A  34FE               	retlw	254
   836  018B  34FD               	retlw	253
   837  018C  34FD               	retlw	253
   838  018D  34FD               	retlw	253
   839  018E  34FD               	retlw	253
   840  018F  34FC               	retlw	252
   841  0190  34FC               	retlw	252
   842  0191  34FC               	retlw	252
   843  0192  34FB               	retlw	251
   844  0193  34FB               	retlw	251
   845  0194  34FB               	retlw	251
   846  0195  34FA               	retlw	250
   847  0196  34FA               	retlw	250
   848  0197  34F9               	retlw	249
   849  0198  34F9               	retlw	249
   850  0199  34F9               	retlw	249
   851  019A  34F8               	retlw	248
   852  019B  34F8               	retlw	248
   853  019C  34F7               	retlw	247
   854  019D  34F7               	retlw	247
   855  019E  34F6               	retlw	246
   856  019F  34F5               	retlw	245
   857  01A0  34F5               	retlw	245
   858  01A1  34F4               	retlw	244
   859  01A2  34F4               	retlw	244
   860  01A3  34F3               	retlw	243
   861  01A4  34F2               	retlw	242
   862  01A5  34F2               	retlw	242
   863  01A6  34F1               	retlw	241
   864  01A7  34F0               	retlw	240
   865  01A8  34EF               	retlw	239
   866  01A9  34EF               	retlw	239
   867  01AA  34EE               	retlw	238
   868  01AB  34ED               	retlw	237
   869  01AC  34EC               	retlw	236
   870  01AD  34EC               	retlw	236
   871  01AE  34EB               	retlw	235
   872  01AF  34EA               	retlw	234
   873  01B0  34E9               	retlw	233
   874  01B1  34E8               	retlw	232
   875  01B2  34E7               	retlw	231
   876  01B3  34E6               	retlw	230
   877  01B4  34E5               	retlw	229
   878  01B5  34E4               	retlw	228
   879  01B6  34E4               	retlw	228
   880  01B7  34E3               	retlw	227
   881  01B8  34E2               	retlw	226
   882  01B9  34E1               	retlw	225
   883  01BA  34E0               	retlw	224
   884  01BB  34DF               	retlw	223
   885  01BC  34DD               	retlw	221
   886  01BD  34DC               	retlw	220
   887  01BE  34DB               	retlw	219
   888  01BF  34DA               	retlw	218
   889  01C0  34D9               	retlw	217
   890  01C1  34D8               	retlw	216
   891  01C2  34D7               	retlw	215
   892  01C3  34D6               	retlw	214
   893  01C4  34D5               	retlw	213
   894  01C5  34D3               	retlw	211
   895  01C6  34D2               	retlw	210
   896  01C7  34D1               	retlw	209
   897  01C8  34D0               	retlw	208
   898  01C9  34CF               	retlw	207
   899  01CA  34CD               	retlw	205
   900  01CB  34CC               	retlw	204
   901  01CC  34CB               	retlw	203
   902  01CD  34CA               	retlw	202
   903  01CE  34C8               	retlw	200
   904  01CF  34C7               	retlw	199
   905  01D0  34C6               	retlw	198
   906  01D1  34C5               	retlw	197
   907  01D2  34C3               	retlw	195
   908  01D3  34C2               	retlw	194
   909  01D4  34C1               	retlw	193
   910  01D5  34BF               	retlw	191
   911  01D6  34BE               	retlw	190
   912  01D7  34BC               	retlw	188
   913  01D8  34BB               	retlw	187
   914  01D9  34BA               	retlw	186
   915  01DA  34B8               	retlw	184
   916  01DB  34B7               	retlw	183
   917  01DC  34B6               	retlw	182
   918  01DD  34B4               	retlw	180
   919  01DE  34B3               	retlw	179
   920  01DF  34B1               	retlw	177
   921  01E0  34B0               	retlw	176
   922  01E1  34AE               	retlw	174
   923  01E2  34AD               	retlw	173
   924  01E3  34AB               	retlw	171
   925  01E4  34AA               	retlw	170
   926  01E5  34A8               	retlw	168
   927  01E6  34A7               	retlw	167
   928  01E7  34A6               	retlw	166
   929  01E8  34A4               	retlw	164
   930  01E9  34A3               	retlw	163
   931  01EA  34A1               	retlw	161
   932  01EB  349F               	retlw	159
   933  01EC  349E               	retlw	158
   934  01ED  349C               	retlw	156
   935  01EE  349B               	retlw	155
   936  01EF  3499               	retlw	153
   937  01F0  3498               	retlw	152
   938  01F1  3496               	retlw	150
   939  01F2  3495               	retlw	149
   940  01F3  3493               	retlw	147
   941  01F4  3492               	retlw	146
   942  01F5  3490               	retlw	144
   943  01F6  348F               	retlw	143
   944  01F7  348D               	retlw	141
   945  01F8  348B               	retlw	139
   946  01F9  348A               	retlw	138
   947  01FA  3488               	retlw	136
   948  01FB  3487               	retlw	135
   949  01FC  3485               	retlw	133
   950  01FD  3484               	retlw	132
   951  01FE  3482               	retlw	130
   952  01FF  3481               	retlw	129
   953  0200  347F               	retlw	127
   954  0201  347D               	retlw	125
   955  0202  347C               	retlw	124
   956  0203  347A               	retlw	122
   957  0204  3479               	retlw	121
   958  0205  3477               	retlw	119
   959  0206  3476               	retlw	118
   960  0207  3474               	retlw	116
   961  0208  3473               	retlw	115
   962  0209  3471               	retlw	113
   963  020A  346F               	retlw	111
   964  020B  346E               	retlw	110
   965  020C  346C               	retlw	108
   966  020D  346B               	retlw	107
   967  020E  3469               	retlw	105
   968  020F  3468               	retlw	104
   969  0210  3466               	retlw	102
   970  0211  3465               	retlw	101
   971  0212  3463               	retlw	99
   972  0213  3462               	retlw	98
   973  0214  3460               	retlw	96
   974  0215  345F               	retlw	95
   975  0216  345D               	retlw	93
   976  0217  345B               	retlw	91
   977  0218  345A               	retlw	90
   978  0219  3458               	retlw	88
   979  021A  3457               	retlw	87
   980  021B  3456               	retlw	86
   981  021C  3454               	retlw	84
   982  021D  3453               	retlw	83
   983  021E  3451               	retlw	81
   984  021F  3450               	retlw	80
   985  0220  344E               	retlw	78
   986  0221  344D               	retlw	77
   987  0222  344B               	retlw	75
   988  0223  344A               	retlw	74
   989  0224  3448               	retlw	72
   990  0225  3447               	retlw	71
   991  0226  3446               	retlw	70
   992  0227  3444               	retlw	68
   993  0228  3443               	retlw	67
   994  0229  3442               	retlw	66
   995  022A  3440               	retlw	64
   996  022B  343F               	retlw	63
   997  022C  343D               	retlw	61
   998  022D  343C               	retlw	60
   999  022E  343B               	retlw	59
  1000  022F  3439               	retlw	57
  1001  0230  3438               	retlw	56
  1002  0231  3437               	retlw	55
  1003  0232  3436               	retlw	54
  1004  0233  3434               	retlw	52
  1005  0234  3433               	retlw	51
  1006  0235  3432               	retlw	50
  1007  0236  3431               	retlw	49
  1008  0237  342F               	retlw	47
  1009  0238  342E               	retlw	46
  1010  0239  342D               	retlw	45
  1011  023A  342C               	retlw	44
  1012  023B  342B               	retlw	43
  1013  023C  3429               	retlw	41
  1014  023D  3428               	retlw	40
  1015  023E  3427               	retlw	39
  1016  023F  3426               	retlw	38
  1017  0240  3425               	retlw	37
  1018  0241  3424               	retlw	36
  1019  0242  3423               	retlw	35
  1020  0243  3422               	retlw	34
  1021  0244  3421               	retlw	33
  1022  0245  341F               	retlw	31
  1023  0246  341E               	retlw	30
  1024  0247  341D               	retlw	29
  1025  0248  341C               	retlw	28
  1026  0249  341B               	retlw	27
  1027  024A  341A               	retlw	26
  1028  024B  341A               	retlw	26
  1029  024C  3419               	retlw	25
  1030  024D  3418               	retlw	24
  1031  024E  3417               	retlw	23
  1032  024F  3416               	retlw	22
  1033  0250  3415               	retlw	21
  1034  0251  3414               	retlw	20
  1035  0252  3413               	retlw	19
  1036  0253  3412               	retlw	18
  1037  0254  3412               	retlw	18
  1038  0255  3411               	retlw	17
  1039  0256  3410               	retlw	16
  1040  0257  340F               	retlw	15
  1041  0258  340F               	retlw	15
  1042  0259  340E               	retlw	14
  1043  025A  340D               	retlw	13
  1044  025B  340C               	retlw	12
  1045  025C  340C               	retlw	12
  1046  025D  340B               	retlw	11
  1047  025E  340A               	retlw	10
  1048  025F  340A               	retlw	10
  1049  0260  3409               	retlw	9
  1050  0261  3409               	retlw	9
  1051  0262  3408               	retlw	8
  1052  0263  3407               	retlw	7
  1053  0264  3407               	retlw	7
  1054  0265  3406               	retlw	6
  1055  0266  3406               	retlw	6
  1056  0267  3405               	retlw	5
  1057  0268  3405               	retlw	5
  1058  0269  3405               	retlw	5
  1059  026A  3404               	retlw	4
  1060  026B  3404               	retlw	4
  1061  026C  3403               	retlw	3
  1062  026D  3403               	retlw	3
  1063  026E  3403               	retlw	3
  1064  026F  3402               	retlw	2
  1065  0270  3402               	retlw	2
  1066  0271  3402               	retlw	2
  1067  0272  3401               	retlw	1
  1068  0273  3401               	retlw	1
  1069  0274  3401               	retlw	1
  1070  0275  3401               	retlw	1
  1071  0276  3400               	retlw	0
  1072  0277  3400               	retlw	0
  1073  0278  3400               	retlw	0
  1074  0279  3400               	retlw	0
  1075  027A  3400               	retlw	0
  1076  027B  3400               	retlw	0
  1077  027C  3400               	retlw	0
  1078  027D  3400               	retlw	0
  1079  027E  3400               	retlw	0
  1080  027F  3400               	retlw	0
  1081  0280  3400               	retlw	0
  1082  0281  3400               	retlw	0
  1083  0282  3400               	retlw	0
  1084  0283  3400               	retlw	0
  1085  0284  3400               	retlw	0
  1086  0285  3400               	retlw	0
  1087  0286  3400               	retlw	0
  1088  0287  3400               	retlw	0
  1089  0288  3400               	retlw	0
  1090  0289  3400               	retlw	0
  1091  028A  3400               	retlw	0
  1092  028B  3401               	retlw	1
  1093  028C  3401               	retlw	1
  1094  028D  3401               	retlw	1
  1095  028E  3401               	retlw	1
  1096  028F  3402               	retlw	2
  1097  0290  3402               	retlw	2
  1098  0291  3402               	retlw	2
  1099  0292  3403               	retlw	3
  1100  0293  3403               	retlw	3
  1101  0294  3403               	retlw	3
  1102  0295  3404               	retlw	4
  1103  0296  3404               	retlw	4
  1104  0297  3405               	retlw	5
  1105  0298  3405               	retlw	5
  1106  0299  3405               	retlw	5
  1107  029A  3406               	retlw	6
  1108  029B  3406               	retlw	6
  1109  029C  3407               	retlw	7
  1110  029D  3407               	retlw	7
  1111  029E  3408               	retlw	8
  1112  029F  3409               	retlw	9
  1113  02A0  3409               	retlw	9
  1114  02A1  340A               	retlw	10
  1115  02A2  340A               	retlw	10
  1116  02A3  340B               	retlw	11
  1117  02A4  340C               	retlw	12
  1118  02A5  340C               	retlw	12
  1119  02A6  340D               	retlw	13
  1120  02A7  340E               	retlw	14
  1121  02A8  340F               	retlw	15
  1122  02A9  340F               	retlw	15
  1123  02AA  3410               	retlw	16
  1124  02AB  3411               	retlw	17
  1125  02AC  3412               	retlw	18
  1126  02AD  3412               	retlw	18
  1127  02AE  3413               	retlw	19
  1128  02AF  3414               	retlw	20
  1129  02B0  3415               	retlw	21
  1130  02B1  3416               	retlw	22
  1131  02B2  3417               	retlw	23
  1132  02B3  3418               	retlw	24
  1133  02B4  3419               	retlw	25
  1134  02B5  341A               	retlw	26
  1135  02B6  341A               	retlw	26
  1136  02B7  341B               	retlw	27
  1137  02B8  341C               	retlw	28
  1138  02B9  341D               	retlw	29
  1139  02BA  341E               	retlw	30
  1140  02BB  341F               	retlw	31
  1141  02BC  3421               	retlw	33
  1142  02BD  3422               	retlw	34
  1143  02BE  3423               	retlw	35
  1144  02BF  3424               	retlw	36
  1145  02C0  3425               	retlw	37
  1146  02C1  3426               	retlw	38
  1147  02C2  3427               	retlw	39
  1148  02C3  3428               	retlw	40
  1149  02C4  3429               	retlw	41
  1150  02C5  342B               	retlw	43
  1151  02C6  342C               	retlw	44
  1152  02C7  342D               	retlw	45
  1153  02C8  342E               	retlw	46
  1154  02C9  342F               	retlw	47
  1155  02CA  3431               	retlw	49
  1156  02CB  3432               	retlw	50
  1157  02CC  3433               	retlw	51
  1158  02CD  3434               	retlw	52
  1159  02CE  3436               	retlw	54
  1160  02CF  3437               	retlw	55
  1161  02D0  3438               	retlw	56
  1162  02D1  3439               	retlw	57
  1163  02D2  343B               	retlw	59
  1164  02D3  343C               	retlw	60
  1165  02D4  343D               	retlw	61
  1166  02D5  343F               	retlw	63
  1167  02D6  3440               	retlw	64
  1168  02D7  3442               	retlw	66
  1169  02D8  3443               	retlw	67
  1170  02D9  3444               	retlw	68
  1171  02DA  3446               	retlw	70
  1172  02DB  3447               	retlw	71
  1173  02DC  3448               	retlw	72
  1174  02DD  344A               	retlw	74
  1175  02DE  344B               	retlw	75
  1176  02DF  344D               	retlw	77
  1177  02E0  344E               	retlw	78
  1178  02E1  3450               	retlw	80
  1179  02E2  3451               	retlw	81
  1180  02E3  3453               	retlw	83
  1181  02E4  3454               	retlw	84
  1182  02E5  3456               	retlw	86
  1183  02E6  3457               	retlw	87
  1184  02E7  3458               	retlw	88
  1185  02E8  345A               	retlw	90
  1186  02E9  345B               	retlw	91
  1187  02EA  345D               	retlw	93
  1188  02EB  345F               	retlw	95
  1189  02EC  3460               	retlw	96
  1190  02ED  3462               	retlw	98
  1191  02EE  3463               	retlw	99
  1192  02EF  3465               	retlw	101
  1193  02F0  3466               	retlw	102
  1194  02F1  3468               	retlw	104
  1195  02F2  3469               	retlw	105
  1196  02F3  346B               	retlw	107
  1197  02F4  346C               	retlw	108
  1198  02F5  346E               	retlw	110
  1199  02F6  346F               	retlw	111
  1200  02F7  3471               	retlw	113
  1201  02F8  3473               	retlw	115
  1202  02F9  3474               	retlw	116
  1203  02FA  3476               	retlw	118
  1204  02FB  3477               	retlw	119
  1205  02FC  3479               	retlw	121
  1206  02FD  347A               	retlw	122
  1207  02FE  347C               	retlw	124
  1208  02FF  347D               	retlw	125
  1209  0300                     __end_of_sine_table:	
  1210  0300                     _PLAYBACK_RATE:	
  1211  0300  34A0               	retlw	160
  1212  0301  3486               	retlw	134
  1213  0302  3401               	retlw	1
  1214  0303  3400               	retlw	0
  1215  0304                     __end_of_PLAYBACK_RATE:	
  1216  0304                     _BAUD_RATE:	
  1217  0304  34B0               	retlw	176
  1218  0305  3404               	retlw	4
  1219  0306                     __end_of_BAUD_RATE:	
  1220  0306                     _TABLE_SIZE:	
  1221  0306  3400               	retlw	0
  1222  0307  3402               	retlw	2
  1223  0308                     __end_of_TABLE_SIZE:	
  1224  000B                     _INTCON	set	11
  1225  0011                     _PIR1	set	17
  1226  000C                     _PORTAbits	set	12
  1227  000E                     _PORTCbits	set	14
  1228  0015                     _TMR0	set	21
  1229  0017                     _TMR1H	set	23
  1230  0016                     _TMR1L	set	22
  1231  008E                     _ADIF	set	142
  1232  00C4                     _T1CKPS0	set	196
  1233  00C5                     _T1CKPS1	set	197
  1234  005D                     _TMR0IE	set	93
  1235  005A                     _TMR0IF	set	90
  1236  00C6                     _TMR1CS0	set	198
  1237  00C7                     _TMR1CS1	set	199
  1238  00CF                     _TMR1GE	set	207
  1239  00C0                     _TMR1ON	set	192
  1240  009D                     _ADCON0	set	157
  1241  009C                     _ADRESH	set	156
  1242  009B                     _ADRESL	set	155
  1243  0099                     _OSCCON	set	153
  1244  009A                     _OSCSTAT	set	154
  1245  0098                     _OSCTUNE	set	152
  1246  008C                     _TRISA	set	140
  1247  008E                     _TRISC	set	142
  1248  04F4                     _ADCS0	set	1268
  1249  04F5                     _ADCS1	set	1269
  1250  04F6                     _ADCS2	set	1270
  1251  04F7                     _ADFM	set	1271
  1252  048E                     _ADIE	set	1166
  1253  04F2                     _ADNREF	set	1266
  1254  04E8                     _ADON	set	1256
  1255  04F0                     _ADPREF0	set	1264
  1256  04F1                     _ADPREF1	set	1265
  1257  048A                     _CCP1IE	set	1162
  1258  04AB                     _PSA	set	1195
  1259  04AD                     _TMR0CS	set	1197
  1260  0119                     _DACCON1	set	281
  1261  08C7                     _DACEN	set	2247
  1262  08C0                     _DACNSS	set	2240
  1263  08C5                     _DACOE	set	2245
  1264  08C2                     _DACPSS0	set	2242
  1265  08C3                     _DACPSS1	set	2243
  1266  0C61                     _ANSA1	set	3169
  1267  0292                     _CCPR1H	set	658
  1268  0291                     _CCPR1L	set	657
  1269  1499                     _CCP1M1	set	5273
  1270  149A                     _CCP1M2	set	5274
  1271  149B                     _CCP1M3	set	5275
  1272  0308                     __stringdata:	
  1273  0308                     STR_1:	
  1274  0308  3448               	retlw	72	;'H'
  1275  0309  3445               	retlw	69	;'E'
  1276  030A  344C               	retlw	76	;'L'
  1277  030B  344C               	retlw	76	;'L'
  1278  030C  344F               	retlw	79	;'O'
  1279  030D  3400               	retlw	0
  1280  030E                     __end_of__stringdata:	
  1281                           
  1282                           ; #config settings
  1283  0000                     
  1284                           	psect	cinit
  1285  0046                     start_initialization:	
  1286  0046                     __initialization:	
  1287                           
  1288                           ; Clear objects allocated to COMMON
  1289  0046  01FA               	clrf	__pbssCOMMON& (0+127)
  1290  0047  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1291                           
  1292                           ; Clear objects allocated to BANK0
  1293  0048  01EF               	clrf	__pbssBANK0& (0+127)
  1294                           
  1295                           ; Clear objects allocated to BANK1
  1296  0049  30A0               	movlw	low __pbssBANK1
  1297  004A  0084               	movwf	4
  1298  004B  3000               	movlw	high __pbssBANK1
  1299  004C  0085               	movwf	5
  1300  004D  303B               	movlw	59
  1301  004E  3180  20FA  3180   	fcall	clear_ram0
  1302                           
  1303                           ; Clear objects allocated to BANK2
  1304  0051  3020               	movlw	low __pbssBANK2
  1305  0052  0084               	movwf	4
  1306  0053  3001               	movlw	high __pbssBANK2
  1307  0054  0085               	movwf	5
  1308  0055  3020               	movlw	32
  1309  0056  3180  20FA  3180   	fcall	clear_ram0
  1310                           
  1311                           ; Clear objects allocated to BANK3
  1312  0059  30A0               	movlw	low __pbssBANK3
  1313  005A  0084               	movwf	4
  1314  005B  3001               	movlw	high __pbssBANK3
  1315  005C  0085               	movwf	5
  1316  005D  3040               	movlw	64
  1317  005E  3180  20FA  3180   	fcall	clear_ram0
  1318                           
  1319                           ; Initialize objects allocated to BANK2
  1320  0061  30A8               	movlw	low __pidataBANK2
  1321  0062  0084               	movwf	4
  1322  0063  3096               	movlw	(high __pidataBANK2)| (0+128)
  1323  0064  0085               	movwf	5
  1324  0065  3040               	movlw	low __pdataBANK2
  1325  0066  0086               	movwf	6
  1326  0067  3001               	movlw	high __pdataBANK2
  1327  0068  0087               	movwf	7
  1328  0069  301E               	movlw	30
  1329  006A  3195  257A         	fcall	init_ram
  1330  006C                     end_of_initialization:	
  1331                           ;End of C runtime variable initialization code
  1332                           
  1333  006C                     __end_of__initialization:	
  1334  006C  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1335  006D  0020               	movlb	0
  1336  006E  3180  2870         	ljmp	_main	;jump to C main() function
  1337                           
  1338                           	psect	bssCOMMON
  1339  007A                     __pbssCOMMON:	
  1340  007A                     _current_byte:	
  1341  007A                     	ds	1
  1342  007B                     _i:	
  1343  007B                     	ds	1
  1344                           
  1345                           	psect	bssBANK0
  1346  006F                     __pbssBANK0:	
  1347  006F                     _SAMPLES_PER_BAUD:	
  1348  006F                     	ds	1
  1349                           
  1350                           	psect	bssBANK1
  1351  00A0                     __pbssBANK1:	
  1352  00A0                     _adf_config:	
  1353  00A0                     	ds	39
  1354  00C7                     _modem_packet_size:	
  1355  00C7                     	ds	4
  1356  00CB                     _packet_pos:	
  1357  00CB                     	ds	4
  1358  00CF                     _Systick_Counter:	
  1359  00CF                     	ds	2
  1360  00D1                     _crc:	
  1361  00D1                     	ds	2
  1362  00D3                     _MODEM_TRANSMITTING:	
  1363  00D3                     	ds	1
  1364  00D4                     _PTT_OFF:	
  1365  00D4                     	ds	1
  1366  00D5                     _adc_sonuc_high:	
  1367  00D5                     	ds	1
  1368  00D6                     _adc_sonuc_low:	
  1369  00D6                     	ds	1
  1370  00D7                     _current_sample_in_baud:	
  1371  00D7                     	ds	1
  1372  00D8                     _test:	
  1373  00D8                     	ds	1
  1374  00D9                     _test2:	
  1375  00D9                     	ds	1
  1376  00DA                     _timeout_flag:	
  1377  00DA                     	ds	1
  1378                           
  1379                           	psect	bssBANK2
  1380  0120                     __pbssBANK2:	
  1381  0120                     _Delay_Counter:	
  1382  0120                     	ds	4
  1383  0124                     _PHASE_DELTA_1200:	
  1384  0124                     	ds	4
  1385  0128                     _PHASE_DELTA_2200:	
  1386  0128                     	ds	4
  1387  012C                     _phase:	
  1388  012C                     	ds	4
  1389  0130                     _phase_delta:	
  1390  0130                     	ds	4
  1391  0134                     _powerlevel:	
  1392  0134                     	ds	4
  1393  0138                     _timeout_check:	
  1394  0138                     	ds	4
  1395  013C                     _dac_flag:	
  1396  013C                     	ds	2
  1397  013E                     _ones_in_a_row:	
  1398  013E                     	ds	2
  1399                           
  1400                           	psect	dataBANK2
  1401  0140                     __pdataBANK2:	
  1402  0140                     main@F3177:	
  1403  0140                     	ds	16
  1404  0150                     _sine_table2:	
  1405  0150                     	ds	14
  1406                           
  1407                           	psect	bssBANK3
  1408  01A0                     __pbssBANK3:	
  1409  01A0                     _modem_packet:	
  1410  01A0                     	ds	64
  1411                           
  1412                           	psect	clrtext
  1413  00FA                     clear_ram0:	
  1414                           ;	Called with FSR0 containing the base address, and
  1415                           ;	WREG with the size to clear
  1416                           
  1417  00FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1418  00FB                     clrloop0:	
  1419  00FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1420  00FC  3101               	addfsr 0,1
  1421  00FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1422  00FE  28FB               	goto	clrloop0	;have we reached the end yet?
  1423  00FF  3400               	retlw	0	;all done for this memory range, return
  1424                           
  1425                           	psect	inittext
  1426  157A                     init_ram:	
  1427  157A  00FE               	movwf	126
  1428  157B                     initloop:	
  1429  157B  0012               	moviw fsr0++
  1430  157C  001E               	movwi fsr1++
  1431  157D  0BFE               	decfsz	126,f
  1432  157E  2D7B               	goto	initloop
  1433  157F  3400               	retlw	0
  1434                           
  1435                           	psect	cstackBANK1
  1436  00DB                     __pcstackBANK1:	
  1437  00DB                     Adf_Lock@adj:	
  1438                           
  1439                           ; 2 bytes @ 0x0
  1440  00DB                     	ds	2
  1441  00DD                     Adf_Lock@bias:	
  1442                           
  1443                           ; 2 bytes @ 0x2
  1444  00DD                     	ds	2
  1445  00DF                     main@beacon_address:	
  1446                           
  1447                           ; 16 bytes @ 0x4
  1448  00DF                     	ds	16
  1449                           
  1450                           	psect	cstackCOMMON
  1451  0070                     __pcstackCOMMON:	
  1452  0070                     ?_Timer0_Start:	
  1453  0070                     ?_Timer1_Start:	
  1454                           ; 0 bytes @ 0x0
  1455                           
  1456  0070                     ?_Dac0_Start:	
  1457                           ; 0 bytes @ 0x0
  1458                           
  1459  0070                     ?_Adc1_Start:	
  1460                           ; 0 bytes @ 0x0
  1461                           
  1462  0070                     ?_Ax25_Send_Footer:	
  1463                           ; 0 bytes @ 0x0
  1464                           
  1465  0070                     ?_Modem_Setup:	
  1466                           ; 0 bytes @ 0x0
  1467                           
  1468  0070                     ?_Ptt_Off:	
  1469                           ; 0 bytes @ 0x0
  1470                           
  1471  0070                     ?_Modem_Flush_Frame:	
  1472                           ; 0 bytes @ 0x0
  1473                           
  1474  0070                     ?_Adf_Reset_Register_Zero:	
  1475                           ; 0 bytes @ 0x0
  1476                           
  1477  0070                     ?_Adf_Reset_Register_One:	
  1478                           ; 0 bytes @ 0x0
  1479                           
  1480  0070                     ?_Adf_Reset_Register_Two:	
  1481                           ; 0 bytes @ 0x0
  1482                           
  1483  0070                     ?_Adf_Reset_Register_Three:	
  1484                           ; 0 bytes @ 0x0
  1485                           
  1486  0070                     ?_Adf_Reset:	
  1487                           ; 0 bytes @ 0x0
  1488                           
  1489  0070                     ?_Adf_Write_Register_Zero:	
  1490                           ; 0 bytes @ 0x0
  1491                           
  1492  0070                     ?_Adf_Write_Register_One:	
  1493                           ; 0 bytes @ 0x0
  1494                           
  1495  0070                     ?_Adf_Write_Register_Two:	
  1496                           ; 0 bytes @ 0x0
  1497                           
  1498  0070                     ?_Adf_Write_Register_Three:	
  1499                           ; 0 bytes @ 0x0
  1500                           
  1501  0070                     ?_global_interrupt:	
  1502                           ; 0 bytes @ 0x0
  1503                           
  1504  0070                     ??_global_interrupt:	
  1505                           ; 0 bytes @ 0x0
  1506                           
  1507  0070                     ?_System_Start:	
  1508                           ; 0 bytes @ 0x0
  1509                           
  1510  0070                     ?_Adf_Reset_Config:	
  1511                           ; 0 bytes @ 0x0
  1512                           
  1513  0070                     ?_Adf_Write_Config:	
  1514                           ; 0 bytes @ 0x0
  1515                           
  1516  0070                     ?_Radio_Setup:	
  1517                           ; 0 bytes @ 0x0
  1518                           
  1519  0070                     ?_Modem_Init:	
  1520                           ; 0 bytes @ 0x0
  1521                           
  1522  0070                     ?_Update_Crc:	
  1523                           ; 0 bytes @ 0x0
  1524                           
  1525  0070                     ?_Send_Byte:	
  1526                           ; 0 bytes @ 0x0
  1527                           
  1528  0070                     ?_Ax25_Send_Byte:	
  1529                           ; 0 bytes @ 0x0
  1530                           
  1531  0070                     ?_Ax25_Send_Sync:	
  1532                           ; 0 bytes @ 0x0
  1533                           
  1534  0070                     ?_Ax25_Send_Flag:	
  1535                           ; 0 bytes @ 0x0
  1536                           
  1537  0070                     ?_Gpio_Config:	
  1538                           ; 0 bytes @ 0x0
  1539                           
  1540  0070                     ?_Ptt_On:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_Spi_Byte_Send:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_Adf_Locked:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?_Read_Adf7012_Muxout:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?_main:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_Adf_Lock:	
  1556                           ; 2 bytes @ 0x0
  1557                           
  1558                           
  1559                           ; 2 bytes @ 0x0
  1560  0070                     	ds	2
  1561  0072                     ??_Gpio_Config:	
  1562  0072                     ??_Timer0_Start:	
  1563                           ; 0 bytes @ 0x2
  1564                           
  1565  0072                     ??_Timer1_Start:	
  1566                           ; 0 bytes @ 0x2
  1567                           
  1568  0072                     ??_Dac0_Start:	
  1569                           ; 0 bytes @ 0x2
  1570                           
  1571  0072                     ??_Adc1_Start:	
  1572                           ; 0 bytes @ 0x2
  1573                           
  1574  0072                     ??_Adf_Reset_Register_Zero:	
  1575                           ; 0 bytes @ 0x2
  1576                           
  1577  0072                     ??_Adf_Reset_Register_One:	
  1578                           ; 0 bytes @ 0x2
  1579                           
  1580  0072                     ??_Adf_Reset_Register_Two:	
  1581                           ; 0 bytes @ 0x2
  1582                           
  1583  0072                     ??_Adf_Reset_Register_Three:	
  1584                           ; 0 bytes @ 0x2
  1585                           
  1586  0072                     ??_System_Start:	
  1587                           ; 0 bytes @ 0x2
  1588                           
  1589  0072                     ??_Update_Crc:	
  1590                           ; 0 bytes @ 0x2
  1591                           
  1592  0072                     ??_Ax25_Send_Sync:	
  1593                           ; 0 bytes @ 0x2
  1594                           
  1595  0072                     ??_Ax25_Send_Flag:	
  1596                           ; 0 bytes @ 0x2
  1597                           
  1598  0072                     ?_memcpy:	
  1599                           ; 0 bytes @ 0x2
  1600                           
  1601  0072                     ?_CheckDelay:	
  1602                           ; 1 bytes @ 0x2
  1603                           
  1604  0072                     ?___ftpack:	
  1605                           ; 2 bytes @ 0x2
  1606                           
  1607  0072                     ?___lmul:	
  1608                           ; 3 bytes @ 0x2
  1609                           
  1610  0072                     ?___aldiv:	
  1611                           ; 4 bytes @ 0x2
  1612                           
  1613  0072                     memcpy@s1:	
  1614                           ; 4 bytes @ 0x2
  1615                           
  1616  0072                     ___ftpack@arg:	
  1617                           ; 1 bytes @ 0x2
  1618                           
  1619  0072                     ___lmul@multiplier:	
  1620                           ; 3 bytes @ 0x2
  1621                           
  1622  0072                     ___aldiv@divisor:	
  1623                           ; 4 bytes @ 0x2
  1624                           
  1625                           
  1626                           ; 4 bytes @ 0x2
  1627  0072                     	ds	1
  1628  0073                     memcpy@n:	
  1629                           
  1630                           ; 2 bytes @ 0x3
  1631  0073                     	ds	1
  1632  0074                     ??_CheckDelay:	
  1633  0074                     Update_Crc@input_bit:	
  1634                           ; 0 bytes @ 0x4
  1635                           
  1636                           
  1637                           ; 1 bytes @ 0x4
  1638  0074                     	ds	1
  1639  0075                     ??_memcpy:	
  1640  0075                     Send_Byte@byte:	
  1641                           ; 0 bytes @ 0x5
  1642                           
  1643  0075                     ___ftpack@exp:	
  1644                           ; 1 bytes @ 0x5
  1645                           
  1646                           
  1647                           ; 1 bytes @ 0x5
  1648  0075                     	ds	1
  1649  0076                     CheckDelay@t:	
  1650  0076                     ___ftpack@sign:	
  1651                           ; 1 bytes @ 0x6
  1652                           
  1653  0076                     memcpy@d:	
  1654                           ; 1 bytes @ 0x6
  1655                           
  1656  0076                     Send_Byte@i:	
  1657                           ; 1 bytes @ 0x6
  1658                           
  1659  0076                     ___lmul@multiplicand:	
  1660                           ; 2 bytes @ 0x6
  1661                           
  1662  0076                     ___aldiv@dividend:	
  1663                           ; 4 bytes @ 0x6
  1664                           
  1665                           
  1666                           ; 4 bytes @ 0x6
  1667  0076                     	ds	1
  1668  0077                     ?_Delay_ms:	
  1669  0077                     ??___ftpack:	
  1670                           ; 0 bytes @ 0x7
  1671                           
  1672  0077                     memcpy@s:	
  1673                           ; 0 bytes @ 0x7
  1674                           
  1675  0077                     Delay_ms@time_to_delay:	
  1676                           ; 1 bytes @ 0x7
  1677                           
  1678                           
  1679                           ; 2 bytes @ 0x7
  1680  0077                     	ds	1
  1681  0078                     ??_Ax25_Send_Footer:	
  1682  0078                     ??_Ax25_Send_Byte:	
  1683                           ; 0 bytes @ 0x8
  1684                           
  1685  0078                     Ax25_Send_Byte@byte:	
  1686                           ; 0 bytes @ 0x8
  1687                           
  1688  0078                     memcpy@d1:	
  1689                           ; 1 bytes @ 0x8
  1690                           
  1691  0078                     Ax25_Send_Footer@final_crc:	
  1692                           ; 1 bytes @ 0x8
  1693                           
  1694                           
  1695                           ; 2 bytes @ 0x8
  1696  0078                     	ds	1
  1697  0079                     ??_Delay_ms:	
  1698  0079                     ??_Ax25_Send_String:	
  1699                           ; 0 bytes @ 0x9
  1700                           
  1701  0079                     ??_Spi_Byte_Send:	
  1702                           ; 0 bytes @ 0x9
  1703                           
  1704  0079                     ??_Adf_Reset:	
  1705                           ; 0 bytes @ 0x9
  1706                           
  1707  0079                     ??_Adf_Locked:	
  1708                           ; 0 bytes @ 0x9
  1709                           
  1710  0079                     ??_Read_Adf7012_Muxout:	
  1711                           ; 0 bytes @ 0x9
  1712                           
  1713  0079                     ??_Adf_Reset_Config:	
  1714                           ; 0 bytes @ 0x9
  1715                           
  1716  0079                     ?_Reverse_Array:	
  1717                           ; 0 bytes @ 0x9
  1718                           
  1719  0079                     Reverse_Array@length:	
  1720                           ; 1 bytes @ 0x9
  1721                           
  1722                           
  1723                           ; 1 bytes @ 0x9
  1724  0079                     	ds	1
  1725  007A                     ??_Modem_Setup:	
  1726  007A                     ??_Ptt_Off:	
  1727                           ; 0 bytes @ 0xA
  1728                           
  1729  007A                     ??_Modem_Flush_Frame:	
  1730                           ; 0 bytes @ 0xA
  1731                           
  1732  007A                     ??_Adf_Write_Config:	
  1733                           ; 0 bytes @ 0xA
  1734                           
  1735  007A                     ??_Radio_Setup:	
  1736                           ; 0 bytes @ 0xA
  1737                           
  1738  007A                     ??___lmul:	
  1739                           ; 0 bytes @ 0xA
  1740                           
  1741  007A                     ??___ftneg:	
  1742                           ; 0 bytes @ 0xA
  1743                           
  1744                           
  1745                           	psect	cstackBANK0
  1746  0020                     __pcstackBANK0:	
  1747                           ; 0 bytes @ 0xA
  1748                           
  1749  0020                     ??_Reverse_Array:	
  1750  0020                     ??_Send_Byte:	
  1751                           ; 0 bytes @ 0x0
  1752                           
  1753  0020                     ??___aldiv:	
  1754                           ; 0 bytes @ 0x0
  1755                           
  1756  0020                     ?___ftmul:	
  1757                           ; 0 bytes @ 0x0
  1758                           
  1759  0020                     ?___lltoft:	
  1760                           ; 3 bytes @ 0x0
  1761                           
  1762  0020                     Spi_Byte_Send@data:	
  1763                           ; 3 bytes @ 0x0
  1764                           
  1765  0020                     Ax25_Send_Sync@byte:	
  1766                           ; 1 bytes @ 0x0
  1767                           
  1768  0020                     Ax25_Send_Flag@byte:	
  1769                           ; 1 bytes @ 0x0
  1770                           
  1771  0020                     ___ftmul@f1:	
  1772                           ; 1 bytes @ 0x0
  1773                           
  1774  0020                     ___lmul@product:	
  1775                           ; 3 bytes @ 0x0
  1776                           
  1777  0020                     ___lltoft@c:	
  1778                           ; 4 bytes @ 0x0
  1779                           
  1780                           
  1781                           ; 4 bytes @ 0x0
  1782  0020                     	ds	1
  1783  0021                     Spi_Byte_Send@data_to_send:	
  1784  0021                     ___aldiv@counter:	
  1785                           ; 1 bytes @ 0x1
  1786                           
  1787  0021                     Ax25_Send_Sync@i:	
  1788                           ; 1 bytes @ 0x1
  1789                           
  1790  0021                     Ax25_Send_Flag@i:	
  1791                           ; 2 bytes @ 0x1
  1792                           
  1793                           
  1794                           ; 2 bytes @ 0x1
  1795  0021                     	ds	1
  1796  0022                     Spi_Byte_Send@i:	
  1797  0022                     ___aldiv@sign:	
  1798                           ; 1 bytes @ 0x2
  1799                           
  1800                           
  1801                           ; 1 bytes @ 0x2
  1802  0022                     	ds	1
  1803  0023                     ?_Write_Adf7012_Reg:	
  1804  0023                     Write_Adf7012_Reg@size_of_reg:	
  1805                           ; 1 bytes @ 0x3
  1806                           
  1807  0023                     ___ftmul@f2:	
  1808                           ; 1 bytes @ 0x3
  1809                           
  1810  0023                     ___aldiv@quotient:	
  1811                           ; 3 bytes @ 0x3
  1812                           
  1813                           
  1814                           ; 4 bytes @ 0x3
  1815  0023                     	ds	1
  1816  0024                     ??_Write_Adf7012_Reg:	
  1817  0024                     ??___lltoft:	
  1818                           ; 0 bytes @ 0x4
  1819                           
  1820  0024                     ?___lldiv:	
  1821                           ; 0 bytes @ 0x4
  1822                           
  1823  0024                     ___lldiv@divisor:	
  1824                           ; 4 bytes @ 0x4
  1825                           
  1826                           
  1827                           ; 4 bytes @ 0x4
  1828  0024                     	ds	1
  1829  0025                     Write_Adf7012_Reg@reg_value:	
  1830  0025                     ___lltoft@exp:	
  1831                           ; 1 bytes @ 0x5
  1832                           
  1833  0025                     Reverse_Array@buffer_array:	
  1834                           ; 1 bytes @ 0x5
  1835                           
  1836                           
  1837                           ; 4 bytes @ 0x5
  1838  0025                     	ds	1
  1839  0026                     ?_Ax25_Send_Header:	
  1840  0026                     ?_Ax25_Send_String:	
  1841                           ; 0 bytes @ 0x6
  1842                           
  1843  0026                     ??___ftmul:	
  1844                           ; 0 bytes @ 0x6
  1845                           
  1846  0026                     ?___ftdiv:	
  1847                           ; 0 bytes @ 0x6
  1848                           
  1849  0026                     ?___ftneg:	
  1850                           ; 3 bytes @ 0x6
  1851                           
  1852  0026                     Write_Adf7012_Reg@i:	
  1853                           ; 3 bytes @ 0x6
  1854                           
  1855  0026                     Ax25_Send_String@string:	
  1856                           ; 1 bytes @ 0x6
  1857                           
  1858  0026                     Ax25_Send_Header@num_addresses:	
  1859                           ; 2 bytes @ 0x6
  1860                           
  1861  0026                     ___ftdiv@f2:	
  1862                           ; 2 bytes @ 0x6
  1863                           
  1864  0026                     ___ftneg@f1:	
  1865                           ; 3 bytes @ 0x6
  1866                           
  1867                           
  1868                           ; 3 bytes @ 0x6
  1869  0026                     	ds	2
  1870  0028                     ??_Ax25_Send_Header:	
  1871  0028                     Ax25_Send_String@i:	
  1872                           ; 0 bytes @ 0x8
  1873                           
  1874  0028                     ___lldiv@dividend:	
  1875                           ; 2 bytes @ 0x8
  1876                           
  1877                           
  1878                           ; 4 bytes @ 0x8
  1879  0028                     	ds	1
  1880  0029                     ?___ftadd:	
  1881  0029                     Reverse_Array@input:	
  1882                           ; 3 bytes @ 0x9
  1883                           
  1884  0029                     ___ftadd@f1:	
  1885                           ; 1 bytes @ 0x9
  1886                           
  1887  0029                     ___ftdiv@f1:	
  1888                           ; 3 bytes @ 0x9
  1889                           
  1890                           
  1891                           ; 3 bytes @ 0x9
  1892  0029                     	ds	1
  1893  002A                     Reverse_Array@i:	
  1894  002A                     ___ftmul@exp:	
  1895                           ; 1 bytes @ 0xA
  1896                           
  1897                           
  1898                           ; 1 bytes @ 0xA
  1899  002A                     	ds	1
  1900  002B                     ??_Adf_Write_Register_Zero:	
  1901  002B                     ??_Adf_Write_Register_One:	
  1902                           ; 0 bytes @ 0xB
  1903                           
  1904  002B                     ??_Adf_Write_Register_Two:	
  1905                           ; 0 bytes @ 0xB
  1906                           
  1907  002B                     ??_Adf_Write_Register_Three:	
  1908                           ; 0 bytes @ 0xB
  1909                           
  1910  002B                     Ax25_Send_Header@addresses:	
  1911                           ; 0 bytes @ 0xB
  1912                           
  1913  002B                     ___ftmul@f3_as_product:	
  1914                           ; 1 bytes @ 0xB
  1915                           
  1916                           
  1917                           ; 3 bytes @ 0xB
  1918  002B                     	ds	1
  1919  002C                     ??___ftdiv:	
  1920  002C                     ??___lldiv:	
  1921                           ; 0 bytes @ 0xC
  1922                           
  1923  002C                     Ax25_Send_Header@j:	
  1924                           ; 0 bytes @ 0xC
  1925                           
  1926  002C                     ___ftadd@f2:	
  1927                           ; 2 bytes @ 0xC
  1928                           
  1929                           
  1930                           ; 3 bytes @ 0xC
  1931  002C                     	ds	1
  1932  002D                     ___lldiv@quotient:	
  1933                           
  1934                           ; 4 bytes @ 0xD
  1935  002D                     	ds	1
  1936  002E                     ___ftmul@cntr:	
  1937  002E                     Ax25_Send_Header@i:	
  1938                           ; 1 bytes @ 0xE
  1939                           
  1940                           
  1941                           ; 2 bytes @ 0xE
  1942  002E                     	ds	1
  1943  002F                     ??___ftadd:	
  1944  002F                     ___ftmul@sign:	
  1945                           ; 0 bytes @ 0xF
  1946                           
  1947                           
  1948                           ; 1 bytes @ 0xF
  1949  002F                     	ds	1
  1950  0030                     ?___fttol:	
  1951  0030                     ___ftdiv@cntr:	
  1952                           ; 4 bytes @ 0x10
  1953                           
  1954  0030                     ___fttol@f1:	
  1955                           ; 1 bytes @ 0x10
  1956                           
  1957                           
  1958                           ; 3 bytes @ 0x10
  1959  0030                     	ds	1
  1960  0031                     ___lldiv@counter:	
  1961  0031                     ___ftdiv@f3:	
  1962                           ; 1 bytes @ 0x11
  1963                           
  1964                           
  1965                           ; 3 bytes @ 0x11
  1966  0031                     	ds	1
  1967  0032                     ??_Modem_Init:	
  1968                           
  1969                           ; 0 bytes @ 0x12
  1970  0032                     	ds	1
  1971  0033                     ___ftadd@sign:	
  1972                           
  1973                           ; 1 bytes @ 0x13
  1974  0033                     	ds	1
  1975  0034                     ??___fttol:	
  1976  0034                     ___ftadd@exp2:	
  1977                           ; 0 bytes @ 0x14
  1978                           
  1979  0034                     ___ftdiv@exp:	
  1980                           ; 1 bytes @ 0x14
  1981                           
  1982                           
  1983                           ; 1 bytes @ 0x14
  1984  0034                     	ds	1
  1985  0035                     ___ftadd@exp1:	
  1986  0035                     ___ftdiv@sign:	
  1987                           ; 1 bytes @ 0x15
  1988                           
  1989                           
  1990                           ; 1 bytes @ 0x15
  1991  0035                     	ds	2
  1992  0037                     Adf_Write_Register_One@reg_ptr:	
  1993                           
  1994                           ; 3 bytes @ 0x17
  1995  0037                     	ds	1
  1996  0038                     ___fttol@sign1:	
  1997                           
  1998                           ; 1 bytes @ 0x18
  1999  0038                     	ds	1
  2000  0039                     ___fttol@lval:	
  2001                           
  2002                           ; 4 bytes @ 0x19
  2003  0039                     	ds	1
  2004  003A                     Adf_Write_Register_One@reg:	
  2005                           
  2006                           ; 4 bytes @ 0x1A
  2007  003A                     	ds	3
  2008  003D                     ___fttol@exp1:	
  2009                           
  2010                           ; 1 bytes @ 0x1D
  2011  003D                     	ds	1
  2012  003E                     ?_Set_Freq:	
  2013  003E                     Set_Freq@freq:	
  2014                           ; 0 bytes @ 0x1E
  2015                           
  2016                           
  2017                           ; 4 bytes @ 0x1E
  2018  003E                     	ds	4
  2019  0042                     ??_Set_Freq:	
  2020                           
  2021                           ; 0 bytes @ 0x22
  2022  0042                     	ds	1
  2023  0043                     Adf_Write_Register_Two@reg_ptr:	
  2024                           
  2025                           ; 4 bytes @ 0x23
  2026  0043                     	ds	3
  2027  0046                     Set_Freq@m:	
  2028                           
  2029                           ; 4 bytes @ 0x26
  2030  0046                     	ds	1
  2031  0047                     Adf_Write_Register_Zero@reg_ptr:	
  2032  0047                     Adf_Write_Register_Two@reg:	
  2033                           ; 4 bytes @ 0x27
  2034                           
  2035                           
  2036                           ; 4 bytes @ 0x27
  2037  0047                     	ds	3
  2038  004A                     Set_Freq@ratio:	
  2039                           
  2040                           ; 3 bytes @ 0x2A
  2041  004A                     	ds	1
  2042  004B                     Adf_Write_Register_Zero@reg:	
  2043                           
  2044                           ; 4 bytes @ 0x2B
  2045  004B                     	ds	2
  2046  004D                     Set_Freq@rest:	
  2047                           
  2048                           ; 3 bytes @ 0x2D
  2049  004D                     	ds	3
  2050  0050                     Set_Freq@f_pfd:	
  2051                           
  2052                           ; 4 bytes @ 0x30
  2053  0050                     	ds	4
  2054  0054                     Set_Freq@n:	
  2055                           
  2056                           ; 4 bytes @ 0x34
  2057  0054                     	ds	15
  2058  0063                     Adf_Write_Register_Three@reg_ptr:	
  2059                           
  2060                           ; 4 bytes @ 0x43
  2061  0063                     	ds	4
  2062  0067                     Adf_Write_Register_Three@reg:	
  2063                           
  2064                           ; 4 bytes @ 0x47
  2065  0067                     	ds	4
  2066  006B                     ??_Adf_Lock:	
  2067                           
  2068                           ; 0 bytes @ 0x4B
  2069  006B                     	ds	2
  2070  006D                     ??_Ptt_On:	
  2071                           
  2072                           ; 0 bytes @ 0x4D
  2073  006D                     	ds	1
  2074  006E                     ??_main:	
  2075                           
  2076                           ; 0 bytes @ 0x4E
  2077  006E                     	ds	1
  2078                           
  2079                           	psect	maintext
  2080  0070                     __pmaintext:	
  2081 ;;
  2082 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2083 ;;
  2084 ;; *************** function _main *****************
  2085 ;; Defined at:
  2086 ;;		line 153 in file "main.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;  beacon_addre   16    4[BANK1 ] struct .[2]
  2091 ;;  adc_sonuc       2    0        unsigned int 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  2  130[COMMON] int 
  2094 ;; Registers used:
  2095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 17F/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2102 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  2103 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2104 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  2105 ;;Total ram usage:       17 bytes
  2106 ;; Hardware stack levels required when called:   10
  2107 ;; This function calls:
  2108 ;;		_Adc1_Start
  2109 ;;		_Ax25_Send_Footer
  2110 ;;		_Ax25_Send_Header
  2111 ;;		_Ax25_Send_String
  2112 ;;		_Dac0_Start
  2113 ;;		_Delay_ms
  2114 ;;		_Gpio_Config
  2115 ;;		_Modem_Flush_Frame
  2116 ;;		_Modem_Setup
  2117 ;;		_Ptt_Off
  2118 ;;		_Ptt_On
  2119 ;;		_System_Start
  2120 ;;		_Timer0_Start
  2121 ;;		_Timer1_Start
  2122 ;; This function is called by:
  2123 ;;		Startup code after reset
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           
  2128                           ;psect for function _main
  2129  0070                     _main:	
  2130                           
  2131                           ;main.c: 154: unsigned int adc_sonuc;
  2132                           ;main.c: 155: System_Start();
  2133                           
  2134                           ;incstack = 0
  2135                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2136  0070  3197  276C  3180   	fcall	_System_Start
  2137  0073                     l131:	
  2138                           ;main.c: 156: while (!(OSCSTAT & (0x01))){}
  2139                           
  2140  0073  0021               	movlb	1	; select bank1
  2141  0074  1C1A               	btfss	26,0	;volatile
  2142  0075  2873               	goto	l131
  2143                           
  2144                           ;main.c: 159: Gpio_Config();
  2145  0076  3195  25B5  3180   	fcall	_Gpio_Config
  2146                           
  2147                           ;main.c: 161: Timer0_Start();
  2148  0079  3195  2569  3180   	fcall	_Timer0_Start
  2149                           
  2150                           ;main.c: 162: Timer1_Start();
  2151  007C  3195  2592  3180   	fcall	_Timer1_Start
  2152                           
  2153                           ;main.c: 164: Dac0_Start();
  2154  007F  3195  2564  3180   	fcall	_Dac0_Start
  2155                           
  2156                           ;main.c: 166: Adc1_Start();
  2157  0082  3195  256E  3180   	fcall	_Adc1_Start
  2158                           
  2159                           ;main.c: 168: PORTAbits.RA5 = 0;;
  2160  0085  0020               	movlb	0	; select bank0
  2161  0086  128C               	bcf	12,5	;volatile
  2162                           
  2163                           ;main.c: 169: Delay_ms(10);
  2164  0087  300A               	movlw	10
  2165  0088  00F7               	movwf	Delay_ms@time_to_delay
  2166  0089  3000               	movlw	0
  2167  008A  00F8               	movwf	Delay_ms@time_to_delay+1
  2168  008B  3195  259D  3180   	fcall	_Delay_ms
  2169                           
  2170                           ;main.c: 170: PORTAbits.RA4 = 1;;
  2171  008E  0020               	movlb	0	; select bank0
  2172  008F  160C               	bsf	12,4	;volatile
  2173                           
  2174                           ;main.c: 171: Delay_ms(10);
  2175  0090  300A               	movlw	10
  2176  0091  00F7               	movwf	Delay_ms@time_to_delay
  2177  0092  3000               	movlw	0
  2178  0093  00F8               	movwf	Delay_ms@time_to_delay+1
  2179  0094  3195  259D  3180   	fcall	_Delay_ms
  2180                           
  2181                           ;main.c: 172: PORTAbits.RA5 = 1;;
  2182  0097  0020               	movlb	0	; select bank0
  2183  0098  168C               	bsf	12,5	;volatile
  2184                           
  2185                           ;main.c: 173: Delay_ms(10);
  2186  0099  300A               	movlw	10
  2187  009A  00F7               	movwf	Delay_ms@time_to_delay
  2188  009B  3000               	movlw	0
  2189  009C  00F8               	movwf	Delay_ms@time_to_delay+1
  2190  009D  3195  259D  3180   	fcall	_Delay_ms
  2191                           
  2192                           ;main.c: 175: Delay_ms(200);
  2193  00A0  30C8               	movlw	200
  2194  00A1  00F7               	movwf	Delay_ms@time_to_delay
  2195  00A2  3000               	movlw	0
  2196  00A3  00F8               	movwf	Delay_ms@time_to_delay+1
  2197  00A4  3195  259D  3180   	fcall	_Delay_ms
  2198                           
  2199                           ;main.c: 178: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 7}};
  2200  00A7  3040               	movlw	low main@F3177
  2201  00A8  0086               	movwf	6
  2202  00A9  3001               	movlw	high main@F3177
  2203  00AA  0087               	movwf	7
  2204  00AB  30DF               	movlw	low main@beacon_address
  2205  00AC  0084               	movwf	4
  2206  00AD  3000               	movlw	high main@beacon_address
  2207  00AE  0085               	movwf	5
  2208  00AF  3010               	movlw	16
  2209  00B0  0020               	movlb	0	; select bank0
  2210  00B1  00EE               	movwf	??_main
  2211  00B2                     u5570:	
  2212  00B2  0016               	moviw fsr1++
  2213  00B3  001A               	movwi fsr0++
  2214  00B4  0BEE               	decfsz	??_main,f
  2215  00B5  28B2               	goto	u5570
  2216                           
  2217                           ;main.c: 180: Ax25_Send_Header(beacon_address,2);
  2218  00B6  3002               	movlw	2
  2219  00B7  00A6               	movwf	Ax25_Send_Header@num_addresses
  2220  00B8  3000               	movlw	0
  2221  00B9  00A7               	movwf	Ax25_Send_Header@num_addresses+1
  2222  00BA  30DF               	movlw	main@beacon_address& (0+255)
  2223  00BB  3186  267A  3180   	fcall	_Ax25_Send_Header
  2224                           
  2225                           ;main.c: 181: Ax25_Send_String("HELLO");
  2226  00BE  3008               	movlw	low (STR_1| (0+32768))
  2227  00BF  0020               	movlb	0	; select bank0
  2228  00C0  00A6               	movwf	Ax25_Send_String@string
  2229  00C1  3083               	movlw	high (STR_1| (0+32768))
  2230  00C2  00A7               	movwf	Ax25_Send_String@string+1
  2231  00C3  3196  266D  3180   	fcall	_Ax25_Send_String
  2232                           
  2233                           ;main.c: 182: Ax25_Send_Footer();
  2234  00C6  3196  2621  3180   	fcall	_Ax25_Send_Footer
  2235                           
  2236                           ;main.c: 186: Modem_Setup();
  2237  00C9  3195  2574  3180   	fcall	_Modem_Setup
  2238                           
  2239                           ;main.c: 187: Delay_ms(100);
  2240  00CC  3064               	movlw	100
  2241  00CD  00F7               	movwf	Delay_ms@time_to_delay
  2242  00CE  3000               	movlw	0
  2243  00CF  00F8               	movwf	Delay_ms@time_to_delay+1
  2244  00D0  3195  259D  3180   	fcall	_Delay_ms
  2245                           
  2246                           ;main.c: 188: PORTCbits.RC3 = 0; ;
  2247  00D3  0020               	movlb	0	; select bank0
  2248  00D4  118E               	bcf	14,3	;volatile
  2249                           
  2250                           ;main.c: 189: Delay_ms(100);
  2251  00D5  3064               	movlw	100
  2252  00D6  00F7               	movwf	Delay_ms@time_to_delay
  2253  00D7  3000               	movlw	0
  2254  00D8  00F8               	movwf	Delay_ms@time_to_delay+1
  2255  00D9  3195  259D  3180   	fcall	_Delay_ms
  2256                           
  2257                           ;main.c: 190: Ptt_On();
  2258  00DC  3188  2026  3180   	fcall	_Ptt_On
  2259  00DF                     l3653:	
  2260                           ;main.c: 192: while(1){
  2261                           
  2262                           
  2263                           ;main.c: 193: if(PTT_OFF){
  2264  00DF  0021               	movlb	1	; select bank1
  2265  00E0  0854               	movf	_PTT_OFF^(0+128),w
  2266  00E1  1903               	btfsc	3,2
  2267  00E2  28E8               	goto	l3659
  2268                           
  2269                           ;main.c: 194: Ptt_Off();
  2270  00E3  3195  25C1  3180   	fcall	_Ptt_Off
  2271                           
  2272                           ;main.c: 195: PTT_OFF = 0;
  2273  00E6  0021               	movlb	1	; select bank1
  2274  00E7  01D4               	clrf	_PTT_OFF^(0+128)
  2275  00E8                     l3659:	
  2276                           
  2277                           ;main.c: 196: }
  2278                           ;main.c: 199: Modem_Flush_Frame();
  2279  00E8  3197  2718  3180   	fcall	_Modem_Flush_Frame
  2280                           
  2281                           ;main.c: 200: Delay_ms(200);
  2282  00EB  30C8               	movlw	200
  2283  00EC  00F7               	movwf	Delay_ms@time_to_delay
  2284  00ED  3000               	movlw	0
  2285  00EE  00F8               	movwf	Delay_ms@time_to_delay+1
  2286  00EF  3195  259D  3180   	fcall	_Delay_ms
  2287                           
  2288                           ;main.c: 201: Delay_ms(10);
  2289  00F2  300A               	movlw	10
  2290  00F3  00F7               	movwf	Delay_ms@time_to_delay
  2291  00F4  3000               	movlw	0
  2292  00F5  00F8               	movwf	Delay_ms@time_to_delay+1
  2293  00F6  3195  259D  3180   	fcall	_Delay_ms
  2294  00F9  28DF               	goto	l3653
  2295  00FA                     __end_of_main:	
  2296                           ;main.c: 203: }
  2297                           ;main.c: 204: return (0);
  2298                           ;	Return value of _main is never used
  2299                           
  2300                           
  2301                           	psect	text1
  2302  1592                     __ptext1:	
  2303 ;; *************** function _Timer1_Start *****************
  2304 ;; Defined at:
  2305 ;;		line 264 in file "utility.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;		None
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;		None
  2310 ;; Return value:  Size  Location     Type
  2311 ;;		None               void
  2312 ;; Registers used:
  2313 ;;		wreg, status,2
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2323 ;;Total ram usage:        0 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; Hardware stack levels required when called:    1
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           
  2334                           ;psect for function _Timer1_Start
  2335  1592                     _Timer1_Start:	
  2336                           
  2337                           ;utility.c: 266: TMR1H = 0x00;
  2338                           
  2339                           ;incstack = 0
  2340                           ; Regs used in _Timer1_Start: [wreg+status,2]
  2341  1592  0020               	movlb	0	; select bank0
  2342  1593  0197               	clrf	23	;volatile
  2343                           
  2344                           ;utility.c: 267: TMR1L = 0x00;
  2345  1594  0196               	clrf	22	;volatile
  2346                           
  2347                           ;utility.c: 270: CCPR1H = 0x03;
  2348  1595  3003               	movlw	3
  2349  1596  0025               	movlb	5	; select bank5
  2350  1597  0092               	movwf	18	;volatile
  2351                           
  2352                           ;utility.c: 271: CCPR1L = 0x41;
  2353  1598  3041               	movlw	65
  2354  1599  0091               	movwf	17	;volatile
  2355                           
  2356                           ;utility.c: 274: CCP1IE = 1;
  2357  159A  0021               	movlb	1	; select bank1
  2358  159B  1511               	bsf	17,2	;volatile
  2359  159C  0008               	return
  2360  159D                     __end_of_Timer1_Start:	
  2361                           
  2362                           	psect	text2
  2363  176C                     __ptext2:	
  2364 ;; *************** function _System_Start *****************
  2365 ;; Defined at:
  2366 ;;		line 89 in file "main.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;		None               void
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2382 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;Total ram usage:        1 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_main
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           
  2395                           ;psect for function _System_Start
  2396  176C                     _System_Start:	
  2397                           
  2398                           ;main.c: 92: OSCCON = 0x00;
  2399                           
  2400                           ;incstack = 0
  2401                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2402  176C  0021               	movlb	1	; select bank1
  2403  176D  0199               	clrf	25	;volatile
  2404                           
  2405                           ;main.c: 93: OSCCON |= 0b11110000;
  2406  176E  30F0               	movlw	240
  2407  176F  00F2               	movwf	??_System_Start
  2408  1770  0872               	movf	??_System_Start,w
  2409  1771  0499               	iorwf	25,f	;volatile
  2410                           
  2411                           ;main.c: 94: OSCTUNE = 0x00;
  2412  1772  0198               	clrf	24	;volatile
  2413                           
  2414                           ;main.c: 98: TMR0CS = 0;
  2415  1773  1295               	bcf	21,5	;volatile
  2416                           
  2417                           ;main.c: 99: PSA = 1;
  2418  1774  1595               	bsf	21,3	;volatile
  2419                           
  2420                           ;main.c: 104: TMR1ON = 1;
  2421  1775  0020               	movlb	0	; select bank0
  2422  1776  1418               	bsf	24,0	;volatile
  2423                           
  2424                           ;main.c: 105: TMR1GE = 0;
  2425  1777  1399               	bcf	25,7	;volatile
  2426                           
  2427                           ;main.c: 108: TMR1CS1 = 0;
  2428  1778  1398               	bcf	24,7	;volatile
  2429                           
  2430                           ;main.c: 109: TMR1CS0 = 0;
  2431  1779  1318               	bcf	24,6	;volatile
  2432                           
  2433                           ;main.c: 112: T1CKPS1 = 1;
  2434  177A  1698               	bsf	24,5	;volatile
  2435                           
  2436                           ;main.c: 113: T1CKPS0 = 1;
  2437  177B  1618               	bsf	24,4	;volatile
  2438                           
  2439                           ;main.c: 116: CCP1M3 = 1;
  2440  177C  0025               	movlb	5	; select bank5
  2441  177D  1593               	bsf	19,3	;volatile
  2442                           
  2443                           ;main.c: 117: CCP1M2 = 0;
  2444  177E  1113               	bcf	19,2	;volatile
  2445                           
  2446                           ;main.c: 118: CCP1M1 = 1;
  2447  177F  1493               	bsf	19,1	;volatile
  2448                           
  2449                           ;main.c: 119: CCP1M1 = 0;
  2450  1780  1093               	bcf	19,1	;volatile
  2451                           
  2452                           ;main.c: 124: DACOE = 1;
  2453  1781  0022               	movlb	2	; select bank2
  2454  1782  1698               	bsf	24,5	;volatile
  2455                           
  2456                           ;main.c: 125: DACPSS1 = 0;
  2457  1783  1198               	bcf	24,3	;volatile
  2458                           
  2459                           ;main.c: 126: DACPSS0 = 0;
  2460  1784  1118               	bcf	24,2	;volatile
  2461                           
  2462                           ;main.c: 127: DACNSS = 0;
  2463  1785  1018               	bcf	24,0	;volatile
  2464                           
  2465                           ;main.c: 132: ANSA1 = 1;
  2466  1786  0023               	movlb	3	; select bank3
  2467  1787  148C               	bsf	12,1	;volatile
  2468                           
  2469                           ;main.c: 133: ADCON0 &= 0b10000011;
  2470  1788  3083               	movlw	131
  2471  1789  00F2               	movwf	??_System_Start
  2472  178A  0872               	movf	??_System_Start,w
  2473  178B  0021               	movlb	1	; select bank1
  2474  178C  059D               	andwf	29,f	;volatile
  2475                           
  2476                           ;main.c: 134: ADCON0 |= 0b00000100;
  2477  178D  151D               	bsf	29,2	;volatile
  2478                           
  2479                           ;main.c: 135: ADNREF = 0;
  2480  178E  111E               	bcf	30,2	;volatile
  2481                           
  2482                           ;main.c: 136: ADPREF1 = 0;
  2483  178F  109E               	bcf	30,1	;volatile
  2484                           
  2485                           ;main.c: 137: ADPREF0 = 0;
  2486  1790  101E               	bcf	30,0	;volatile
  2487                           
  2488                           ;main.c: 138: ADCS2 = 1;
  2489  1791  171E               	bsf	30,6	;volatile
  2490                           
  2491                           ;main.c: 139: ADCS1 = 1;
  2492  1792  169E               	bsf	30,5	;volatile
  2493                           
  2494                           ;main.c: 140: ADCS0 = 0;
  2495  1793  121E               	bcf	30,4	;volatile
  2496                           
  2497                           ;main.c: 141: ADFM = 1;
  2498  1794  179E               	bsf	30,7	;volatile
  2499                           
  2500                           ;main.c: 146: INTCON |= 0xC0;
  2501  1795  30C0               	movlw	192
  2502  1796  00F2               	movwf	??_System_Start
  2503  1797  0872               	movf	??_System_Start,w
  2504  1798  048B               	iorwf	11,f	;volatile
  2505  1799  0008               	return
  2506  179A                     __end_of_System_Start:	
  2507                           
  2508                           	psect	text3
  2509  15C1                     __ptext3:	
  2510 ;; *************** function _Ptt_Off *****************
  2511 ;; Defined at:
  2512 ;;		line 352 in file "adf7012.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;		None               void
  2519 ;; Registers used:
  2520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    7
  2533 ;; This function calls:
  2534 ;;		_Adf_Write_Config
  2535 ;;		_Delay_ms
  2536 ;; This function is called by:
  2537 ;;		_main
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function _Ptt_Off
  2543  15C1                     _Ptt_Off:	
  2544                           
  2545                           ;adf7012.c: 354: adf_config.r3.pa_enable = 0;
  2546                           
  2547                           ;incstack = 0
  2548                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2549  15C1  0021               	movlb	1	; select bank1
  2550  15C2  01BA               	clrf	(_adf_config^(0+128)+26)
  2551                           
  2552                           ;adf7012.c: 355: adf_config.r2.power_amplifier_level = 0;
  2553  15C3  01B2               	clrf	(_adf_config^(0+128)+18)
  2554                           
  2555                           ;adf7012.c: 356: Adf_Write_Config();
  2556  15C4  3195  25A9  3195   	fcall	_Adf_Write_Config
  2557                           
  2558                           ;adf7012.c: 357: Delay_ms(10);
  2559  15C7  300A               	movlw	10
  2560  15C8  00F7               	movwf	Delay_ms@time_to_delay
  2561  15C9  3000               	movlw	0
  2562  15CA  00F8               	movwf	Delay_ms@time_to_delay+1
  2563  15CB  3195  259D         	fcall	_Delay_ms
  2564  15CD  0008               	return
  2565  15CE                     __end_of_Ptt_Off:	
  2566                           
  2567                           	psect	text4
  2568  1574                     __ptext4:	
  2569 ;; *************** function _Modem_Setup *****************
  2570 ;; Defined at:
  2571 ;;		line 116 in file "audio_tone.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;		None               void
  2578 ;; Registers used:
  2579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2589 ;;Total ram usage:        0 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    8
  2592 ;; This function calls:
  2593 ;;		_Modem_Init
  2594 ;;		_Radio_Setup
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           
  2601                           ;psect for function _Modem_Setup
  2602  1574                     _Modem_Setup:	
  2603                           
  2604                           ;audio_tone.c: 118: Modem_Init();
  2605                           
  2606                           ;incstack = 0
  2607                           ; Regs used in _Modem_Setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2608  1574  318F  2733  3195   	fcall	_Modem_Init
  2609                           
  2610                           ;audio_tone.c: 119: Radio_Setup();
  2611  1577  3196  2651         	fcall	_Radio_Setup
  2612  1579  0008               	return
  2613  157A                     __end_of_Modem_Setup:	
  2614                           
  2615                           	psect	text5
  2616  1651                     __ptext5:	
  2617 ;; *************** function _Radio_Setup *****************
  2618 ;; Defined at:
  2619 ;;		line 305 in file "adf7012.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;		None               void
  2626 ;; Registers used:
  2627 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    7
  2640 ;; This function calls:
  2641 ;;		_Adf_Reset_Config
  2642 ;;		_Adf_Write_Config
  2643 ;;		_Delay_ms
  2644 ;;		_Gpio_Config
  2645 ;;		_Set_Freq
  2646 ;; This function is called by:
  2647 ;;		_Modem_Setup
  2648 ;; This function uses a non-reentrant model
  2649 ;;
  2650                           
  2651                           
  2652                           ;psect for function _Radio_Setup
  2653  1651                     _Radio_Setup:	
  2654                           
  2655                           ;adf7012.c: 308: Gpio_Config();
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2659  1651  3195  25B5  3196   	fcall	_Gpio_Config
  2660                           
  2661                           ;adf7012.c: 311: Adf_Reset_Config();
  2662  1654  3195  25DC  3196   	fcall	_Adf_Reset_Config
  2663                           
  2664                           ;adf7012.c: 312: Set_Freq(144390000UL);
  2665  1657  3008               	movlw	8
  2666  1658  0020               	movlb	0	; select bank0
  2667  1659  00C1               	movwf	Set_Freq@freq+3
  2668  165A  309B               	movlw	155
  2669  165B  00C0               	movwf	Set_Freq@freq+2
  2670  165C  3037               	movlw	55
  2671  165D  00BF               	movwf	Set_Freq@freq+1
  2672  165E  3070               	movlw	112
  2673  165F  00BE               	movwf	Set_Freq@freq
  2674  1660  3184  2472  3196   	fcall	_Set_Freq
  2675                           
  2676                           ;adf7012.c: 313: Adf_Write_Config();
  2677  1663  3195  25A9  3196   	fcall	_Adf_Write_Config
  2678                           
  2679                           ;adf7012.c: 315: Delay_ms(10);
  2680  1666  300A               	movlw	10
  2681  1667  00F7               	movwf	Delay_ms@time_to_delay
  2682  1668  3000               	movlw	0
  2683  1669  00F8               	movwf	Delay_ms@time_to_delay+1
  2684  166A  3195  259D         	fcall	_Delay_ms
  2685  166C  0008               	return
  2686  166D                     __end_of_Radio_Setup:	
  2687                           
  2688                           	psect	text6
  2689  0472                     __ptext6:	
  2690 ;; *************** function _Set_Freq *****************
  2691 ;; Defined at:
  2692 ;;		line 278 in file "adf7012.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  freq            4   30[BANK0 ] unsigned long 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  n               4   52[BANK0 ] unsigned long 
  2697 ;;  f_pfd           4   48[BANK0 ] unsigned long 
  2698 ;;  m               4   38[BANK0 ] unsigned long 
  2699 ;;  rest            3   45[BANK0 ] float 
  2700 ;;  ratio           3   42[BANK0 ] float 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;		None               void
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2711 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2713 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2714 ;;Total ram usage:       26 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    3
  2717 ;; This function calls:
  2718 ;;		___aldiv
  2719 ;;		___ftadd
  2720 ;;		___ftdiv
  2721 ;;		___ftmul
  2722 ;;		___ftneg
  2723 ;;		___fttol
  2724 ;;		___lldiv
  2725 ;;		___lltoft
  2726 ;; This function is called by:
  2727 ;;		_Radio_Setup
  2728 ;;		_Modem_Set_Tx_Freq
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _Set_Freq
  2734  0472                     _Set_Freq:	
  2735                           
  2736                           ;adf7012.c: 284: adf_config.r0.output_divider = 0;
  2737                           
  2738                           ;incstack = 0
  2739                           ; Regs used in _Set_Freq: [wreg+status,2+status,0+pclath+cstack]
  2740  0472  0021               	movlb	1	; select bank1
  2741  0473  01A9               	clrf	(_adf_config^(0+128)+9)
  2742                           
  2743                           ;adf7012.c: 285: if (freq < 410000000) { adf_config.r0.output_divider = 1; };
  2744  0474  3018               	movlw	24
  2745  0475  0020               	movlb	0	; select bank0
  2746  0476  0241               	subwf	Set_Freq@freq+3,w
  2747  0477  1D03               	skipz
  2748  0478  2C83               	goto	u5075
  2749  0479  3070               	movlw	112
  2750  047A  0240               	subwf	Set_Freq@freq+2,w
  2751  047B  1D03               	skipz
  2752  047C  2C83               	goto	u5075
  2753  047D  301A               	movlw	26
  2754  047E  023F               	subwf	Set_Freq@freq+1,w
  2755  047F  1D03               	skipz
  2756  0480  2C83               	goto	u5075
  2757  0481  3080               	movlw	128
  2758  0482  023E               	subwf	Set_Freq@freq,w
  2759  0483                     u5075:	
  2760  0483  1803               	skipnc
  2761  0484  2C88               	goto	l3387
  2762  0485  0021               	movlb	1	; select bank1
  2763  0486  01A9               	clrf	(_adf_config^(0+128)+9)
  2764  0487  0AA9               	incf	(_adf_config^(0+128)+9),f
  2765  0488                     l3387:	
  2766                           
  2767                           ;adf7012.c: 286: if (freq < 210000000) { adf_config.r0.output_divider = 2; };
  2768  0488  300C               	movlw	12
  2769  0489  0020               	movlb	0	; select bank0
  2770  048A  0241               	subwf	Set_Freq@freq+3,w
  2771  048B  1D03               	skipz
  2772  048C  2C97               	goto	u5085
  2773  048D  3084               	movlw	132
  2774  048E  0240               	subwf	Set_Freq@freq+2,w
  2775  048F  1D03               	skipz
  2776  0490  2C97               	goto	u5085
  2777  0491  3058               	movlw	88
  2778  0492  023F               	subwf	Set_Freq@freq+1,w
  2779  0493  1D03               	skipz
  2780  0494  2C97               	goto	u5085
  2781  0495  3080               	movlw	128
  2782  0496  023E               	subwf	Set_Freq@freq,w
  2783  0497                     u5085:	
  2784  0497  1803               	skipnc
  2785  0498  2C9E               	goto	l335
  2786  0499  3002               	movlw	2
  2787  049A  00C2               	movwf	??_Set_Freq
  2788  049B  0842               	movf	??_Set_Freq,w
  2789  049C  0021               	movlb	1	; select bank1
  2790  049D  00A9               	movwf	(_adf_config^(0+128)+9)
  2791  049E                     l335:	
  2792                           
  2793                           ;adf7012.c: 287: if (freq < 130000000) { adf_config.r0.output_divider = 3; };
  2794  049E  3007               	movlw	7
  2795  049F  0020               	movlb	0	; select bank0
  2796  04A0  0241               	subwf	Set_Freq@freq+3,w
  2797  04A1  1D03               	skipz
  2798  04A2  2CAD               	goto	u5095
  2799  04A3  30BF               	movlw	191
  2800  04A4  0240               	subwf	Set_Freq@freq+2,w
  2801  04A5  1D03               	skipz
  2802  04A6  2CAD               	goto	u5095
  2803  04A7  30A4               	movlw	164
  2804  04A8  023F               	subwf	Set_Freq@freq+1,w
  2805  04A9  1D03               	skipz
  2806  04AA  2CAD               	goto	u5095
  2807  04AB  3080               	movlw	128
  2808  04AC  023E               	subwf	Set_Freq@freq,w
  2809  04AD                     u5095:	
  2810  04AD  1803               	skipnc
  2811  04AE  2CB4               	goto	l3393
  2812  04AF  3003               	movlw	3
  2813  04B0  00C2               	movwf	??_Set_Freq
  2814  04B1  0842               	movf	??_Set_Freq,w
  2815  04B2  0021               	movlb	1	; select bank1
  2816  04B3  00A9               	movwf	(_adf_config^(0+128)+9)
  2817  04B4                     l3393:	
  2818                           
  2819                           ;adf7012.c: 289: uint32_t f_pfd = 20000000L / adf_config.r0.r_divider;
  2820  04B4  0021               	movlb	1	; select bank1
  2821  04B5  0824               	movf	(_adf_config^(0+128)+4),w
  2822  04B6  0020               	movlb	0	; select bank0
  2823  04B7  00C2               	movwf	??_Set_Freq
  2824  04B8  01C3               	clrf	??_Set_Freq+1
  2825  04B9  01C4               	clrf	??_Set_Freq+2
  2826  04BA  01C5               	clrf	??_Set_Freq+3
  2827  04BB  0845               	movf	??_Set_Freq+3,w
  2828  04BC  00F5               	movwf	___aldiv@divisor+3
  2829  04BD  0844               	movf	??_Set_Freq+2,w
  2830  04BE  00F4               	movwf	___aldiv@divisor+2
  2831  04BF  0843               	movf	??_Set_Freq+1,w
  2832  04C0  00F3               	movwf	___aldiv@divisor+1
  2833  04C1  0842               	movf	??_Set_Freq,w
  2834  04C2  00F2               	movwf	___aldiv@divisor
  2835  04C3  3001               	movlw	1
  2836  04C4  00F9               	movwf	___aldiv@dividend+3
  2837  04C5  3031               	movlw	49
  2838  04C6  00F8               	movwf	___aldiv@dividend+2
  2839  04C7  302D               	movlw	45
  2840  04C8  00F7               	movwf	___aldiv@dividend+1
  2841  04C9  3000               	movlw	0
  2842  04CA  00F6               	movwf	___aldiv@dividend
  2843  04CB  318B  232C  3184   	fcall	___aldiv
  2844  04CE  0875               	movf	?___aldiv+3,w
  2845  04CF  0020               	movlb	0	; select bank0
  2846  04D0  00D3               	movwf	Set_Freq@f_pfd+3
  2847  04D1  0874               	movf	?___aldiv+2,w
  2848  04D2  00D2               	movwf	Set_Freq@f_pfd+2
  2849  04D3  0873               	movf	?___aldiv+1,w
  2850  04D4  00D1               	movwf	Set_Freq@f_pfd+1
  2851  04D5  0872               	movf	?___aldiv,w
  2852  04D6  00D0               	movwf	Set_Freq@f_pfd
  2853                           
  2854                           ;adf7012.c: 291: uint32_t n = (uint32_t)(freq / f_pfd);
  2855  04D7  0853               	movf	Set_Freq@f_pfd+3,w
  2856  04D8  00A7               	movwf	___lldiv@divisor+3
  2857  04D9  0852               	movf	Set_Freq@f_pfd+2,w
  2858  04DA  00A6               	movwf	___lldiv@divisor+2
  2859  04DB  0851               	movf	Set_Freq@f_pfd+1,w
  2860  04DC  00A5               	movwf	___lldiv@divisor+1
  2861  04DD  0850               	movf	Set_Freq@f_pfd,w
  2862  04DE  00A4               	movwf	___lldiv@divisor
  2863  04DF  0841               	movf	Set_Freq@freq+3,w
  2864  04E0  00AB               	movwf	___lldiv@dividend+3
  2865  04E1  0840               	movf	Set_Freq@freq+2,w
  2866  04E2  00AA               	movwf	___lldiv@dividend+2
  2867  04E3  083F               	movf	Set_Freq@freq+1,w
  2868  04E4  00A9               	movwf	___lldiv@dividend+1
  2869  04E5  083E               	movf	Set_Freq@freq,w
  2870  04E6  00A8               	movwf	___lldiv@dividend
  2871  04E7  3188  2095  3184   	fcall	___lldiv
  2872  04EA  0020               	movlb	0	; select bank0
  2873  04EB  0827               	movf	?___lldiv+3,w
  2874  04EC  00D7               	movwf	Set_Freq@n+3
  2875  04ED  0826               	movf	?___lldiv+2,w
  2876  04EE  00D6               	movwf	Set_Freq@n+2
  2877  04EF  0825               	movf	?___lldiv+1,w
  2878  04F0  00D5               	movwf	Set_Freq@n+1
  2879  04F1  0824               	movf	?___lldiv,w
  2880  04F2  00D4               	movwf	Set_Freq@n
  2881                           
  2882                           ;adf7012.c: 293: float ratio = (float)freq / (float)f_pfd;
  2883  04F3  0853               	movf	Set_Freq@f_pfd+3,w
  2884  04F4  00A3               	movwf	___lltoft@c+3
  2885  04F5  0852               	movf	Set_Freq@f_pfd+2,w
  2886  04F6  00A2               	movwf	___lltoft@c+2
  2887  04F7  0851               	movf	Set_Freq@f_pfd+1,w
  2888  04F8  00A1               	movwf	___lltoft@c+1
  2889  04F9  0850               	movf	Set_Freq@f_pfd,w
  2890  04FA  00A0               	movwf	___lltoft@c
  2891  04FB  3197  2742  3184   	fcall	___lltoft
  2892  04FE  0020               	movlb	0	; select bank0
  2893  04FF  0820               	movf	?___lltoft,w
  2894  0500  00A6               	movwf	___ftdiv@f2
  2895  0501  0821               	movf	?___lltoft+1,w
  2896  0502  00A7               	movwf	___ftdiv@f2+1
  2897  0503  0822               	movf	?___lltoft+2,w
  2898  0504  00A8               	movwf	___ftdiv@f2+2
  2899  0505  0841               	movf	Set_Freq@freq+3,w
  2900  0506  00A3               	movwf	___lltoft@c+3
  2901  0507  0840               	movf	Set_Freq@freq+2,w
  2902  0508  00A2               	movwf	___lltoft@c+2
  2903  0509  083F               	movf	Set_Freq@freq+1,w
  2904  050A  00A1               	movwf	___lltoft@c+1
  2905  050B  083E               	movf	Set_Freq@freq,w
  2906  050C  00A0               	movwf	___lltoft@c
  2907  050D  3197  2742  3184   	fcall	___lltoft
  2908  0510  0020               	movlb	0	; select bank0
  2909  0511  0820               	movf	?___lltoft,w
  2910  0512  00A9               	movwf	___ftdiv@f1
  2911  0513  0821               	movf	?___lltoft+1,w
  2912  0514  00AA               	movwf	___ftdiv@f1+1
  2913  0515  0822               	movf	?___lltoft+2,w
  2914  0516  00AB               	movwf	___ftdiv@f1+2
  2915  0517  3187  2754  3184   	fcall	___ftdiv
  2916  051A  0020               	movlb	0	; select bank0
  2917  051B  0826               	movf	?___ftdiv,w
  2918  051C  00CA               	movwf	Set_Freq@ratio
  2919  051D  0827               	movf	?___ftdiv+1,w
  2920  051E  00CB               	movwf	Set_Freq@ratio+1
  2921  051F  0828               	movf	?___ftdiv+2,w
  2922  0520  00CC               	movwf	Set_Freq@ratio+2
  2923                           
  2924                           ;adf7012.c: 294: float rest = ratio - (float)n;
  2925  0521  084A               	movf	Set_Freq@ratio,w
  2926  0522  00A9               	movwf	___ftadd@f1
  2927  0523  084B               	movf	Set_Freq@ratio+1,w
  2928  0524  00AA               	movwf	___ftadd@f1+1
  2929  0525  084C               	movf	Set_Freq@ratio+2,w
  2930  0526  00AB               	movwf	___ftadd@f1+2
  2931  0527  0857               	movf	Set_Freq@n+3,w
  2932  0528  00A3               	movwf	___lltoft@c+3
  2933  0529  0856               	movf	Set_Freq@n+2,w
  2934  052A  00A2               	movwf	___lltoft@c+2
  2935  052B  0855               	movf	Set_Freq@n+1,w
  2936  052C  00A1               	movwf	___lltoft@c+1
  2937  052D  0854               	movf	Set_Freq@n,w
  2938  052E  00A0               	movwf	___lltoft@c
  2939  052F  3197  2742  3184   	fcall	___lltoft
  2940  0532  0020               	movlb	0	; select bank0
  2941  0533  0820               	movf	?___lltoft,w
  2942  0534  00A6               	movwf	___ftneg@f1
  2943  0535  0821               	movf	?___lltoft+1,w
  2944  0536  00A7               	movwf	___ftneg@f1+1
  2945  0537  0822               	movf	?___lltoft+2,w
  2946  0538  00A8               	movwf	___ftneg@f1+2
  2947  0539  3195  2589  3184   	fcall	___ftneg
  2948  053C  0020               	movlb	0	; select bank0
  2949  053D  0826               	movf	?___ftneg,w
  2950  053E  00AC               	movwf	___ftadd@f2
  2951  053F  0827               	movf	?___ftneg+1,w
  2952  0540  00AD               	movwf	___ftadd@f2+1
  2953  0541  0828               	movf	?___ftneg+2,w
  2954  0542  00AE               	movwf	___ftadd@f2+2
  2955  0543  3185  2584  3184   	fcall	___ftadd
  2956  0546  0020               	movlb	0	; select bank0
  2957  0547  0829               	movf	?___ftadd,w
  2958  0548  00CD               	movwf	Set_Freq@rest
  2959  0549  082A               	movf	?___ftadd+1,w
  2960  054A  00CE               	movwf	Set_Freq@rest+1
  2961  054B  082B               	movf	?___ftadd+2,w
  2962  054C  00CF               	movwf	Set_Freq@rest+2
  2963                           
  2964                           ;adf7012.c: 297: uint32_t m = (uint32_t)(rest * 4096);
  2965  054D  084D               	movf	Set_Freq@rest,w
  2966  054E  00A3               	movwf	___ftmul@f2
  2967  054F  084E               	movf	Set_Freq@rest+1,w
  2968  0550  00A4               	movwf	___ftmul@f2+1
  2969  0551  084F               	movf	Set_Freq@rest+2,w
  2970  0552  00A5               	movwf	___ftmul@f2+2
  2971  0553  3000               	movlw	0
  2972  0554  00A0               	movwf	___ftmul@f1
  2973  0555  3080               	movlw	128
  2974  0556  00A1               	movwf	___ftmul@f1+1
  2975  0557  3045               	movlw	69
  2976  0558  00A2               	movwf	___ftmul@f1+2
  2977  0559  318C  2435  3184   	fcall	___ftmul
  2978  055C  0020               	movlb	0	; select bank0
  2979  055D  0820               	movf	?___ftmul,w
  2980  055E  00B0               	movwf	___fttol@f1
  2981  055F  0821               	movf	?___ftmul+1,w
  2982  0560  00B1               	movwf	___fttol@f1+1
  2983  0561  0822               	movf	?___ftmul+2,w
  2984  0562  00B2               	movwf	___fttol@f1+2
  2985  0563  318B  23AE         	fcall	___fttol
  2986  0565  0020               	movlb	0	; select bank0
  2987  0566  0833               	movf	?___fttol+3,w
  2988  0567  00C9               	movwf	Set_Freq@m+3
  2989  0568  0832               	movf	?___fttol+2,w
  2990  0569  00C8               	movwf	Set_Freq@m+2
  2991  056A  0831               	movf	?___fttol+1,w
  2992  056B  00C7               	movwf	Set_Freq@m+1
  2993  056C  0830               	movf	?___fttol,w
  2994  056D  00C6               	movwf	Set_Freq@m
  2995                           
  2996                           ;adf7012.c: 299: adf_config.r1.integer_n = n;
  2997  056E  0854               	movf	Set_Freq@n,w
  2998  056F  00C2               	movwf	??_Set_Freq
  2999  0570  0842               	movf	??_Set_Freq,w
  3000  0571  0021               	movlb	1	; select bank1
  3001  0572  00AE               	movwf	(_adf_config^(0+128)+14)
  3002                           
  3003                           ;adf7012.c: 300: adf_config.r1.fractional_n = m;
  3004  0573  0020               	movlb	0	; select bank0
  3005  0574  0849               	movf	Set_Freq@m+3,w
  3006  0575  0021               	movlb	1	; select bank1
  3007  0576  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  3008  0577  0020               	movlb	0	; select bank0
  3009  0578  0848               	movf	Set_Freq@m+2,w
  3010  0579  0021               	movlb	1	; select bank1
  3011  057A  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  3012  057B  0020               	movlb	0	; select bank0
  3013  057C  0847               	movf	Set_Freq@m+1,w
  3014  057D  0021               	movlb	1	; select bank1
  3015  057E  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  3016  057F  0020               	movlb	0	; select bank0
  3017  0580  0846               	movf	Set_Freq@m,w
  3018  0581  0021               	movlb	1	; select bank1
  3019  0582  00AA               	movwf	(_adf_config^(0+128)+10)
  3020  0583  0008               	return
  3021  0584                     __end_of_Set_Freq:	
  3022                           
  3023                           	psect	text7
  3024  1742                     __ptext7:	
  3025 ;; *************** function ___lltoft *****************
  3026 ;; Defined at:
  3027 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;  c               4    0[BANK0 ] unsigned long 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  exp             1    5[BANK0 ] unsigned char 
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  3    0[BANK0 ] float 
  3034 ;; Registers used:
  3035 ;;		wreg, status,2, status,0, pclath, cstack
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3041 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3043 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3044 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3045 ;;Total ram usage:        6 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    2
  3048 ;; This function calls:
  3049 ;;		___ftpack
  3050 ;; This function is called by:
  3051 ;;		_Set_Freq
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           
  3056                           ;psect for function ___lltoft
  3057  1742                     ___lltoft:	
  3058                           
  3059                           ;incstack = 0
  3060                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3061  1742  308E               	movlw	142
  3062  1743  0020               	movlb	0	; select bank0
  3063  1744  00A4               	movwf	??___lltoft
  3064  1745  0824               	movf	??___lltoft,w
  3065  1746  00A5               	movwf	___lltoft@exp
  3066  1747                     l3343:	
  3067  1747  30FF               	movlw	255
  3068  1748  0523               	andwf	___lltoft@c+3,w
  3069  1749  1903               	btfsc	3,2
  3070  174A  2F57               	goto	l3345
  3071  174B  3001               	movlw	1
  3072  174C                     u5025:	
  3073  174C  36A3               	lsrf	___lltoft@c+3,f
  3074  174D  0CA2               	rrf	___lltoft@c+2,f
  3075  174E  0CA1               	rrf	___lltoft@c+1,f
  3076  174F  0CA0               	rrf	___lltoft@c,f
  3077  1750  0B89               	decfsz	9,f
  3078  1751  2F4C               	goto	u5025
  3079  1752  3001               	movlw	1
  3080  1753  00A4               	movwf	??___lltoft
  3081  1754  0824               	movf	??___lltoft,w
  3082  1755  07A5               	addwf	___lltoft@exp,f
  3083  1756  2F47               	goto	l3343
  3084  1757                     l3345:	
  3085  1757  0820               	movf	___lltoft@c,w
  3086  1758  00F2               	movwf	___ftpack@arg
  3087  1759  0821               	movf	___lltoft@c+1,w
  3088  175A  00F3               	movwf	___ftpack@arg+1
  3089  175B  0822               	movf	___lltoft@c+2,w
  3090  175C  00F4               	movwf	___ftpack@arg+2
  3091  175D  0825               	movf	___lltoft@exp,w
  3092  175E  00A4               	movwf	??___lltoft
  3093  175F  0824               	movf	??___lltoft,w
  3094  1760  00F5               	movwf	___ftpack@exp
  3095  1761  01F6               	clrf	___ftpack@sign
  3096  1762  3188  20E8         	fcall	___ftpack
  3097  1764  0872               	movf	?___ftpack,w
  3098  1765  0020               	movlb	0	; select bank0
  3099  1766  00A0               	movwf	?___lltoft
  3100  1767  0873               	movf	?___ftpack+1,w
  3101  1768  00A1               	movwf	?___lltoft+1
  3102  1769  0874               	movf	?___ftpack+2,w
  3103  176A  00A2               	movwf	?___lltoft+2
  3104  176B  0008               	return
  3105  176C                     __end_of___lltoft:	
  3106                           
  3107                           	psect	text8
  3108  0BAE                     __ptext8:	
  3109 ;; *************** function ___fttol *****************
  3110 ;; Defined at:
  3111 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  f1              3   16[BANK0 ] float 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  lval            4   25[BANK0 ] unsigned long 
  3116 ;;  exp1            1   29[BANK0 ] unsigned char 
  3117 ;;  sign1           1   24[BANK0 ] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  4   16[BANK0 ] long 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3127 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3128 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3129 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3130 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3131 ;;Total ram usage:       14 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_Set_Freq
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function ___fttol
  3143  0BAE                     ___fttol:	
  3144                           
  3145                           ;incstack = 0
  3146                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3147  0BAE  0020               	movlb	0	; select bank0
  3148  0BAF  0830               	movf	___fttol@f1,w
  3149  0BB0  00B4               	movwf	??___fttol
  3150  0BB1  0831               	movf	___fttol@f1+1,w
  3151  0BB2  00B5               	movwf	??___fttol+1
  3152  0BB3  0832               	movf	___fttol@f1+2,w
  3153  0BB4  00B6               	movwf	??___fttol+2
  3154  0BB5  1003               	clrc
  3155  0BB6  0D35               	rlf	??___fttol+1,w
  3156  0BB7  0D36               	rlf	??___fttol+2,w
  3157  0BB8  00B7               	movwf	??___fttol+3
  3158  0BB9  0837               	movf	??___fttol+3,w
  3159  0BBA  00BD               	movwf	___fttol@exp1
  3160  0BBB  08BD               	movf	___fttol@exp1,f
  3161  0BBC  1D03               	skipz
  3162  0BBD  2BC7               	goto	l2407
  3163  0BBE  3000               	movlw	0
  3164  0BBF  00B3               	movwf	?___fttol+3
  3165  0BC0  3000               	movlw	0
  3166  0BC1  00B2               	movwf	?___fttol+2
  3167  0BC2  3000               	movlw	0
  3168  0BC3  00B1               	movwf	?___fttol+1
  3169  0BC4  3000               	movlw	0
  3170  0BC5  00B0               	movwf	?___fttol
  3171  0BC6  0008               	return
  3172  0BC7                     l2407:	
  3173  0BC7  0830               	movf	___fttol@f1,w
  3174  0BC8  00B4               	movwf	??___fttol
  3175  0BC9  0831               	movf	___fttol@f1+1,w
  3176  0BCA  00B5               	movwf	??___fttol+1
  3177  0BCB  0832               	movf	___fttol@f1+2,w
  3178  0BCC  00B6               	movwf	??___fttol+2
  3179  0BCD  3017               	movlw	23
  3180  0BCE                     u3005:	
  3181  0BCE  36B6               	lsrf	??___fttol+2,f
  3182  0BCF  0CB5               	rrf	??___fttol+1,f
  3183  0BD0  0CB4               	rrf	??___fttol,f
  3184  0BD1  0B89               	decfsz	9,f
  3185  0BD2  2BCE               	goto	u3005
  3186  0BD3  0834               	movf	??___fttol,w
  3187  0BD4  00B7               	movwf	??___fttol+3
  3188  0BD5  0837               	movf	??___fttol+3,w
  3189  0BD6  00B8               	movwf	___fttol@sign1
  3190  0BD7  17B1               	bsf	___fttol@f1+1,7
  3191  0BD8  30FF               	movlw	255
  3192  0BD9  05B0               	andwf	___fttol@f1,f
  3193  0BDA  30FF               	movlw	255
  3194  0BDB  05B1               	andwf	___fttol@f1+1,f
  3195  0BDC  3000               	movlw	0
  3196  0BDD  05B2               	andwf	___fttol@f1+2,f
  3197  0BDE  0830               	movf	___fttol@f1,w
  3198  0BDF  00B9               	movwf	___fttol@lval
  3199  0BE0  0831               	movf	___fttol@f1+1,w
  3200  0BE1  00BA               	movwf	___fttol@lval+1
  3201  0BE2  0832               	movf	___fttol@f1+2,w
  3202  0BE3  00BB               	movwf	___fttol@lval+2
  3203  0BE4  01BC               	clrf	___fttol@lval+3
  3204  0BE5  308E               	movlw	142
  3205  0BE6  02BD               	subwf	___fttol@exp1,f
  3206  0BE7  1FBD               	btfss	___fttol@exp1,7
  3207  0BE8  2C05               	goto	l2427
  3208  0BE9  083D               	movf	___fttol@exp1,w
  3209  0BEA  3A80               	xorlw	128
  3210  0BEB  3E8F               	addlw	143
  3211  0BEC  1803               	skipnc
  3212  0BED  2BF7               	goto	l2425
  3213  0BEE  3000               	movlw	0
  3214  0BEF  00B3               	movwf	?___fttol+3
  3215  0BF0  3000               	movlw	0
  3216  0BF1  00B2               	movwf	?___fttol+2
  3217  0BF2  3000               	movlw	0
  3218  0BF3  00B1               	movwf	?___fttol+1
  3219  0BF4  3000               	movlw	0
  3220  0BF5  00B0               	movwf	?___fttol
  3221  0BF6  0008               	return
  3222  0BF7                     l2425:	
  3223  0BF7  3001               	movlw	1
  3224  0BF8                     u3035:	
  3225  0BF8  36BC               	lsrf	___fttol@lval+3,f
  3226  0BF9  0CBB               	rrf	___fttol@lval+2,f
  3227  0BFA  0CBA               	rrf	___fttol@lval+1,f
  3228  0BFB  0CB9               	rrf	___fttol@lval,f
  3229  0BFC  0B89               	decfsz	9,f
  3230  0BFD  2BF8               	goto	u3035
  3231  0BFE  3001               	movlw	1
  3232  0BFF  00B4               	movwf	??___fttol
  3233  0C00  0834               	movf	??___fttol,w
  3234  0C01  07BD               	addwf	___fttol@exp1,f
  3235  0C02  1903               	btfsc	3,2
  3236  0C03  2C1E               	goto	l2437
  3237  0C04  2BF7               	goto	l2425
  3238  0C05                     l2427:	
  3239  0C05  3018               	movlw	24
  3240  0C06  023D               	subwf	___fttol@exp1,w
  3241  0C07  1C03               	skipc
  3242  0C08  2C1B               	goto	l2435
  3243  0C09  3000               	movlw	0
  3244  0C0A  00B3               	movwf	?___fttol+3
  3245  0C0B  3000               	movlw	0
  3246  0C0C  00B2               	movwf	?___fttol+2
  3247  0C0D  3000               	movlw	0
  3248  0C0E  00B1               	movwf	?___fttol+1
  3249  0C0F  3000               	movlw	0
  3250  0C10  00B0               	movwf	?___fttol
  3251  0C11  0008               	return
  3252  0C12                     l2433:	
  3253  0C12  3001               	movlw	1
  3254  0C13                     u3065:	
  3255  0C13  35B9               	lslf	___fttol@lval,f
  3256  0C14  0DBA               	rlf	___fttol@lval+1,f
  3257  0C15  0DBB               	rlf	___fttol@lval+2,f
  3258  0C16  0DBC               	rlf	___fttol@lval+3,f
  3259  0C17  0B89               	decfsz	9,f
  3260  0C18  2C13               	goto	u3065
  3261  0C19  3001               	movlw	1
  3262  0C1A  02BD               	subwf	___fttol@exp1,f
  3263  0C1B                     l2435:	
  3264  0C1B  08BD               	movf	___fttol@exp1,f
  3265  0C1C  1D03               	skipz
  3266  0C1D  2C12               	goto	l2433
  3267  0C1E                     l2437:	
  3268  0C1E  0838               	movf	___fttol@sign1,w
  3269  0C1F  1903               	btfsc	3,2
  3270  0C20  2C2C               	goto	l2441
  3271  0C21  09B9               	comf	___fttol@lval,f
  3272  0C22  09BA               	comf	___fttol@lval+1,f
  3273  0C23  09BB               	comf	___fttol@lval+2,f
  3274  0C24  09BC               	comf	___fttol@lval+3,f
  3275  0C25  0AB9               	incf	___fttol@lval,f
  3276  0C26  1903               	skipnz
  3277  0C27  0ABA               	incf	___fttol@lval+1,f
  3278  0C28  1903               	skipnz
  3279  0C29  0ABB               	incf	___fttol@lval+2,f
  3280  0C2A  1903               	skipnz
  3281  0C2B  0ABC               	incf	___fttol@lval+3,f
  3282  0C2C                     l2441:	
  3283  0C2C  083C               	movf	___fttol@lval+3,w
  3284  0C2D  00B3               	movwf	?___fttol+3
  3285  0C2E  083B               	movf	___fttol@lval+2,w
  3286  0C2F  00B2               	movwf	?___fttol+2
  3287  0C30  083A               	movf	___fttol@lval+1,w
  3288  0C31  00B1               	movwf	?___fttol+1
  3289  0C32  0839               	movf	___fttol@lval,w
  3290  0C33  00B0               	movwf	?___fttol
  3291  0C34  0008               	return
  3292  0C35                     __end_of___fttol:	
  3293                           
  3294                           	psect	text9
  3295  1589                     __ptext9:	
  3296 ;; *************** function ___ftneg *****************
  3297 ;; Defined at:
  3298 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  f1              3    6[BANK0 ] float 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  3    6[BANK0 ] float 
  3305 ;; Registers used:
  3306 ;;		wreg
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3312 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3315 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3316 ;;Total ram usage:        3 bytes
  3317 ;; Hardware stack levels used:    1
  3318 ;; Hardware stack levels required when called:    1
  3319 ;; This function calls:
  3320 ;;		Nothing
  3321 ;; This function is called by:
  3322 ;;		_Set_Freq
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           
  3327                           ;psect for function ___ftneg
  3328  1589                     ___ftneg:	
  3329                           
  3330                           ;incstack = 0
  3331                           ; Regs used in ___ftneg: [wreg]
  3332  1589  0020               	movlb	0	; select bank0
  3333  158A  0828               	movf	___ftneg@f1+2,w
  3334  158B  0427               	iorwf	___ftneg@f1+1,w
  3335  158C  0426               	iorwf	___ftneg@f1,w
  3336  158D  1903               	skipnz
  3337  158E  0008               	return
  3338  158F  3080               	movlw	128
  3339  1590  06A8               	xorwf	___ftneg@f1+2,f
  3340  1591  0008               	return
  3341  1592                     __end_of___ftneg:	
  3342                           
  3343                           	psect	text10
  3344  0C35                     __ptext10:	
  3345 ;; *************** function ___ftmul *****************
  3346 ;; Defined at:
  3347 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  f1              3    0[BANK0 ] float 
  3350 ;;  f2              3    3[BANK0 ] float 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3353 ;;  sign            1   15[BANK0 ] unsigned char 
  3354 ;;  cntr            1   14[BANK0 ] unsigned char 
  3355 ;;  exp             1   10[BANK0 ] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  3    0[BANK0 ] float 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3365 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3366 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3368 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;Total ram usage:       16 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    2
  3372 ;; This function calls:
  3373 ;;		___ftpack
  3374 ;; This function is called by:
  3375 ;;		_Set_Freq
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function ___ftmul
  3381  0C35                     ___ftmul:	
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3385  0C35  0020               	movlb	0	; select bank0
  3386  0C36  0820               	movf	___ftmul@f1,w
  3387  0C37  00A6               	movwf	??___ftmul
  3388  0C38  0821               	movf	___ftmul@f1+1,w
  3389  0C39  00A7               	movwf	??___ftmul+1
  3390  0C3A  0822               	movf	___ftmul@f1+2,w
  3391  0C3B  00A8               	movwf	??___ftmul+2
  3392  0C3C  1003               	clrc
  3393  0C3D  0D27               	rlf	??___ftmul+1,w
  3394  0C3E  0D28               	rlf	??___ftmul+2,w
  3395  0C3F  00A9               	movwf	??___ftmul+3
  3396  0C40  0829               	movf	??___ftmul+3,w
  3397  0C41  00AA               	movwf	___ftmul@exp
  3398  0C42  08AA               	movf	___ftmul@exp,f
  3399  0C43  1D03               	skipz
  3400  0C44  2C4C               	goto	l3271
  3401  0C45  3000               	movlw	0
  3402  0C46  00A0               	movwf	?___ftmul
  3403  0C47  3000               	movlw	0
  3404  0C48  00A1               	movwf	?___ftmul+1
  3405  0C49  3000               	movlw	0
  3406  0C4A  00A2               	movwf	?___ftmul+2
  3407  0C4B  0008               	return
  3408  0C4C                     l3271:	
  3409  0C4C  0823               	movf	___ftmul@f2,w
  3410  0C4D  00A6               	movwf	??___ftmul
  3411  0C4E  0824               	movf	___ftmul@f2+1,w
  3412  0C4F  00A7               	movwf	??___ftmul+1
  3413  0C50  0825               	movf	___ftmul@f2+2,w
  3414  0C51  00A8               	movwf	??___ftmul+2
  3415  0C52  1003               	clrc
  3416  0C53  0D27               	rlf	??___ftmul+1,w
  3417  0C54  0D28               	rlf	??___ftmul+2,w
  3418  0C55  00A9               	movwf	??___ftmul+3
  3419  0C56  0829               	movf	??___ftmul+3,w
  3420  0C57  00AF               	movwf	___ftmul@sign
  3421  0C58  08AF               	movf	___ftmul@sign,f
  3422  0C59  1D03               	skipz
  3423  0C5A  2C62               	goto	l3277
  3424  0C5B  3000               	movlw	0
  3425  0C5C  00A0               	movwf	?___ftmul
  3426  0C5D  3000               	movlw	0
  3427  0C5E  00A1               	movwf	?___ftmul+1
  3428  0C5F  3000               	movlw	0
  3429  0C60  00A2               	movwf	?___ftmul+2
  3430  0C61  0008               	return
  3431  0C62                     l3277:	
  3432  0C62  082F               	movf	___ftmul@sign,w
  3433  0C63  3E7B               	addlw	123
  3434  0C64  00A6               	movwf	??___ftmul
  3435  0C65  0826               	movf	??___ftmul,w
  3436  0C66  07AA               	addwf	___ftmul@exp,f
  3437  0C67  0820               	movf	___ftmul@f1,w
  3438  0C68  00A6               	movwf	??___ftmul
  3439  0C69  0821               	movf	___ftmul@f1+1,w
  3440  0C6A  00A7               	movwf	??___ftmul+1
  3441  0C6B  0822               	movf	___ftmul@f1+2,w
  3442  0C6C  00A8               	movwf	??___ftmul+2
  3443  0C6D  3010               	movlw	16
  3444  0C6E                     u4855:	
  3445  0C6E  36A8               	lsrf	??___ftmul+2,f
  3446  0C6F  0CA7               	rrf	??___ftmul+1,f
  3447  0C70  0CA6               	rrf	??___ftmul,f
  3448  0C71  0B89               	decfsz	9,f
  3449  0C72  2C6E               	goto	u4855
  3450  0C73  0826               	movf	??___ftmul,w
  3451  0C74  00A9               	movwf	??___ftmul+3
  3452  0C75  0829               	movf	??___ftmul+3,w
  3453  0C76  00AF               	movwf	___ftmul@sign
  3454  0C77  0823               	movf	___ftmul@f2,w
  3455  0C78  00A6               	movwf	??___ftmul
  3456  0C79  0824               	movf	___ftmul@f2+1,w
  3457  0C7A  00A7               	movwf	??___ftmul+1
  3458  0C7B  0825               	movf	___ftmul@f2+2,w
  3459  0C7C  00A8               	movwf	??___ftmul+2
  3460  0C7D  3010               	movlw	16
  3461  0C7E                     u4865:	
  3462  0C7E  36A8               	lsrf	??___ftmul+2,f
  3463  0C7F  0CA7               	rrf	??___ftmul+1,f
  3464  0C80  0CA6               	rrf	??___ftmul,f
  3465  0C81  0B89               	decfsz	9,f
  3466  0C82  2C7E               	goto	u4865
  3467  0C83  0826               	movf	??___ftmul,w
  3468  0C84  00A9               	movwf	??___ftmul+3
  3469  0C85  0829               	movf	??___ftmul+3,w
  3470  0C86  06AF               	xorwf	___ftmul@sign,f
  3471  0C87  3080               	movlw	128
  3472  0C88  00A6               	movwf	??___ftmul
  3473  0C89  0826               	movf	??___ftmul,w
  3474  0C8A  05AF               	andwf	___ftmul@sign,f
  3475  0C8B  17A1               	bsf	___ftmul@f1+1,7
  3476  0C8C  17A4               	bsf	___ftmul@f2+1,7
  3477  0C8D  30FF               	movlw	255
  3478  0C8E  05A3               	andwf	___ftmul@f2,f
  3479  0C8F  30FF               	movlw	255
  3480  0C90  05A4               	andwf	___ftmul@f2+1,f
  3481  0C91  3000               	movlw	0
  3482  0C92  05A5               	andwf	___ftmul@f2+2,f
  3483  0C93  3000               	movlw	0
  3484  0C94  00AB               	movwf	___ftmul@f3_as_product
  3485  0C95  3000               	movlw	0
  3486  0C96  00AC               	movwf	___ftmul@f3_as_product+1
  3487  0C97  3000               	movlw	0
  3488  0C98  00AD               	movwf	___ftmul@f3_as_product+2
  3489  0C99  3007               	movlw	7
  3490  0C9A  00A6               	movwf	??___ftmul
  3491  0C9B  0826               	movf	??___ftmul,w
  3492  0C9C  00AE               	movwf	___ftmul@cntr
  3493  0C9D                     l3289:	
  3494  0C9D  1C20               	btfss	___ftmul@f1,0
  3495  0C9E  2CA5               	goto	l3293
  3496  0C9F  0823               	movf	___ftmul@f2,w
  3497  0CA0  07AB               	addwf	___ftmul@f3_as_product,f
  3498  0CA1  0824               	movf	___ftmul@f2+1,w
  3499  0CA2  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3500  0CA3  0825               	movf	___ftmul@f2+2,w
  3501  0CA4  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3502  0CA5                     l3293:	
  3503  0CA5  3001               	movlw	1
  3504  0CA6                     u4885:	
  3505  0CA6  36A2               	lsrf	___ftmul@f1+2,f
  3506  0CA7  0CA1               	rrf	___ftmul@f1+1,f
  3507  0CA8  0CA0               	rrf	___ftmul@f1,f
  3508  0CA9  0B89               	decfsz	9,f
  3509  0CAA  2CA6               	goto	u4885
  3510  0CAB  3001               	movlw	1
  3511  0CAC                     u4895:	
  3512  0CAC  35A3               	lslf	___ftmul@f2,f
  3513  0CAD  0DA4               	rlf	___ftmul@f2+1,f
  3514  0CAE  0DA5               	rlf	___ftmul@f2+2,f
  3515  0CAF  0B89               	decfsz	9,f
  3516  0CB0  2CAC               	goto	u4895
  3517  0CB1  3001               	movlw	1
  3518  0CB2  02AE               	subwf	___ftmul@cntr,f
  3519  0CB3  1D03               	btfss	3,2
  3520  0CB4  2C9D               	goto	l3289
  3521  0CB5  3009               	movlw	9
  3522  0CB6  00A6               	movwf	??___ftmul
  3523  0CB7  0826               	movf	??___ftmul,w
  3524  0CB8  00AE               	movwf	___ftmul@cntr
  3525  0CB9                     l3301:	
  3526  0CB9  1C20               	btfss	___ftmul@f1,0
  3527  0CBA  2CC1               	goto	l3305
  3528  0CBB  0823               	movf	___ftmul@f2,w
  3529  0CBC  07AB               	addwf	___ftmul@f3_as_product,f
  3530  0CBD  0824               	movf	___ftmul@f2+1,w
  3531  0CBE  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3532  0CBF  0825               	movf	___ftmul@f2+2,w
  3533  0CC0  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3534  0CC1                     l3305:	
  3535  0CC1  3001               	movlw	1
  3536  0CC2                     u4925:	
  3537  0CC2  36A2               	lsrf	___ftmul@f1+2,f
  3538  0CC3  0CA1               	rrf	___ftmul@f1+1,f
  3539  0CC4  0CA0               	rrf	___ftmul@f1,f
  3540  0CC5  0B89               	decfsz	9,f
  3541  0CC6  2CC2               	goto	u4925
  3542  0CC7  3001               	movlw	1
  3543  0CC8                     u4935:	
  3544  0CC8  36AD               	lsrf	___ftmul@f3_as_product+2,f
  3545  0CC9  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3546  0CCA  0CAB               	rrf	___ftmul@f3_as_product,f
  3547  0CCB  0B89               	decfsz	9,f
  3548  0CCC  2CC8               	goto	u4935
  3549  0CCD  3001               	movlw	1
  3550  0CCE  02AE               	subwf	___ftmul@cntr,f
  3551  0CCF  1D03               	btfss	3,2
  3552  0CD0  2CB9               	goto	l3301
  3553  0CD1  082B               	movf	___ftmul@f3_as_product,w
  3554  0CD2  00F2               	movwf	___ftpack@arg
  3555  0CD3  082C               	movf	___ftmul@f3_as_product+1,w
  3556  0CD4  00F3               	movwf	___ftpack@arg+1
  3557  0CD5  082D               	movf	___ftmul@f3_as_product+2,w
  3558  0CD6  00F4               	movwf	___ftpack@arg+2
  3559  0CD7  082A               	movf	___ftmul@exp,w
  3560  0CD8  00A6               	movwf	??___ftmul
  3561  0CD9  0826               	movf	??___ftmul,w
  3562  0CDA  00F5               	movwf	___ftpack@exp
  3563  0CDB  082F               	movf	___ftmul@sign,w
  3564  0CDC  00A7               	movwf	??___ftmul+1
  3565  0CDD  0827               	movf	??___ftmul+1,w
  3566  0CDE  00F6               	movwf	___ftpack@sign
  3567  0CDF  3188  20E8         	fcall	___ftpack
  3568  0CE1  0872               	movf	?___ftpack,w
  3569  0CE2  0020               	movlb	0	; select bank0
  3570  0CE3  00A0               	movwf	?___ftmul
  3571  0CE4  0873               	movf	?___ftpack+1,w
  3572  0CE5  00A1               	movwf	?___ftmul+1
  3573  0CE6  0874               	movf	?___ftpack+2,w
  3574  0CE7  00A2               	movwf	?___ftmul+2
  3575  0CE8  0008               	return
  3576  0CE9                     __end_of___ftmul:	
  3577                           
  3578                           	psect	text11
  3579  0754                     __ptext11:	
  3580 ;; *************** function ___ftdiv *****************
  3581 ;; Defined at:
  3582 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  f2              3    6[BANK0 ] float 
  3585 ;;  f1              3    9[BANK0 ] float 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  f3              3   17[BANK0 ] float 
  3588 ;;  sign            1   21[BANK0 ] unsigned char 
  3589 ;;  exp             1   20[BANK0 ] unsigned char 
  3590 ;;  cntr            1   16[BANK0 ] unsigned char 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  3    6[BANK0 ] float 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0, pclath, cstack
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3600 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3601 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3602 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3603 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3604 ;;Total ram usage:       16 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    2
  3607 ;; This function calls:
  3608 ;;		___ftpack
  3609 ;; This function is called by:
  3610 ;;		_Set_Freq
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           
  3615                           ;psect for function ___ftdiv
  3616  0754                     ___ftdiv:	
  3617                           
  3618                           ;incstack = 0
  3619                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3620  0754  0020               	movlb	0	; select bank0
  3621  0755  0829               	movf	___ftdiv@f1,w
  3622  0756  00AC               	movwf	??___ftdiv
  3623  0757  082A               	movf	___ftdiv@f1+1,w
  3624  0758  00AD               	movwf	??___ftdiv+1
  3625  0759  082B               	movf	___ftdiv@f1+2,w
  3626  075A  00AE               	movwf	??___ftdiv+2
  3627  075B  1003               	clrc
  3628  075C  0D2D               	rlf	??___ftdiv+1,w
  3629  075D  0D2E               	rlf	??___ftdiv+2,w
  3630  075E  00AF               	movwf	??___ftdiv+3
  3631  075F  082F               	movf	??___ftdiv+3,w
  3632  0760  00B4               	movwf	___ftdiv@exp
  3633  0761  08B4               	movf	___ftdiv@exp,f
  3634  0762  1D03               	skipz
  3635  0763  2F6B               	goto	l3229
  3636  0764  3000               	movlw	0
  3637  0765  00A6               	movwf	?___ftdiv
  3638  0766  3000               	movlw	0
  3639  0767  00A7               	movwf	?___ftdiv+1
  3640  0768  3000               	movlw	0
  3641  0769  00A8               	movwf	?___ftdiv+2
  3642  076A  0008               	return
  3643  076B                     l3229:	
  3644  076B  0826               	movf	___ftdiv@f2,w
  3645  076C  00AC               	movwf	??___ftdiv
  3646  076D  0827               	movf	___ftdiv@f2+1,w
  3647  076E  00AD               	movwf	??___ftdiv+1
  3648  076F  0828               	movf	___ftdiv@f2+2,w
  3649  0770  00AE               	movwf	??___ftdiv+2
  3650  0771  1003               	clrc
  3651  0772  0D2D               	rlf	??___ftdiv+1,w
  3652  0773  0D2E               	rlf	??___ftdiv+2,w
  3653  0774  00AF               	movwf	??___ftdiv+3
  3654  0775  082F               	movf	??___ftdiv+3,w
  3655  0776  00B5               	movwf	___ftdiv@sign
  3656  0777  08B5               	movf	___ftdiv@sign,f
  3657  0778  1D03               	skipz
  3658  0779  2F81               	goto	l3235
  3659  077A  3000               	movlw	0
  3660  077B  00A6               	movwf	?___ftdiv
  3661  077C  3000               	movlw	0
  3662  077D  00A7               	movwf	?___ftdiv+1
  3663  077E  3000               	movlw	0
  3664  077F  00A8               	movwf	?___ftdiv+2
  3665  0780  0008               	return
  3666  0781                     l3235:	
  3667  0781  3000               	movlw	0
  3668  0782  00B1               	movwf	___ftdiv@f3
  3669  0783  3000               	movlw	0
  3670  0784  00B2               	movwf	___ftdiv@f3+1
  3671  0785  3000               	movlw	0
  3672  0786  00B3               	movwf	___ftdiv@f3+2
  3673  0787  3089               	movlw	137
  3674  0788  0735               	addwf	___ftdiv@sign,w
  3675  0789  00AC               	movwf	??___ftdiv
  3676  078A  082C               	movf	??___ftdiv,w
  3677  078B  02B4               	subwf	___ftdiv@exp,f
  3678  078C  0829               	movf	___ftdiv@f1,w
  3679  078D  00AC               	movwf	??___ftdiv
  3680  078E  082A               	movf	___ftdiv@f1+1,w
  3681  078F  00AD               	movwf	??___ftdiv+1
  3682  0790  082B               	movf	___ftdiv@f1+2,w
  3683  0791  00AE               	movwf	??___ftdiv+2
  3684  0792  3010               	movlw	16
  3685  0793                     u4775:	
  3686  0793  36AE               	lsrf	??___ftdiv+2,f
  3687  0794  0CAD               	rrf	??___ftdiv+1,f
  3688  0795  0CAC               	rrf	??___ftdiv,f
  3689  0796  0B89               	decfsz	9,f
  3690  0797  2F93               	goto	u4775
  3691  0798  082C               	movf	??___ftdiv,w
  3692  0799  00AF               	movwf	??___ftdiv+3
  3693  079A  082F               	movf	??___ftdiv+3,w
  3694  079B  00B5               	movwf	___ftdiv@sign
  3695  079C  0826               	movf	___ftdiv@f2,w
  3696  079D  00AC               	movwf	??___ftdiv
  3697  079E  0827               	movf	___ftdiv@f2+1,w
  3698  079F  00AD               	movwf	??___ftdiv+1
  3699  07A0  0828               	movf	___ftdiv@f2+2,w
  3700  07A1  00AE               	movwf	??___ftdiv+2
  3701  07A2  3010               	movlw	16
  3702  07A3                     u4785:	
  3703  07A3  36AE               	lsrf	??___ftdiv+2,f
  3704  07A4  0CAD               	rrf	??___ftdiv+1,f
  3705  07A5  0CAC               	rrf	??___ftdiv,f
  3706  07A6  0B89               	decfsz	9,f
  3707  07A7  2FA3               	goto	u4785
  3708  07A8  082C               	movf	??___ftdiv,w
  3709  07A9  00AF               	movwf	??___ftdiv+3
  3710  07AA  082F               	movf	??___ftdiv+3,w
  3711  07AB  06B5               	xorwf	___ftdiv@sign,f
  3712  07AC  3080               	movlw	128
  3713  07AD  00AC               	movwf	??___ftdiv
  3714  07AE  082C               	movf	??___ftdiv,w
  3715  07AF  05B5               	andwf	___ftdiv@sign,f
  3716  07B0  17AA               	bsf	___ftdiv@f1+1,7
  3717  07B1  30FF               	movlw	255
  3718  07B2  05A9               	andwf	___ftdiv@f1,f
  3719  07B3  30FF               	movlw	255
  3720  07B4  05AA               	andwf	___ftdiv@f1+1,f
  3721  07B5  3000               	movlw	0
  3722  07B6  05AB               	andwf	___ftdiv@f1+2,f
  3723  07B7  17A7               	bsf	___ftdiv@f2+1,7
  3724  07B8  30FF               	movlw	255
  3725  07B9  05A6               	andwf	___ftdiv@f2,f
  3726  07BA  30FF               	movlw	255
  3727  07BB  05A7               	andwf	___ftdiv@f2+1,f
  3728  07BC  3000               	movlw	0
  3729  07BD  05A8               	andwf	___ftdiv@f2+2,f
  3730  07BE  3018               	movlw	24
  3731  07BF  00AC               	movwf	??___ftdiv
  3732  07C0  082C               	movf	??___ftdiv,w
  3733  07C1  00B0               	movwf	___ftdiv@cntr
  3734  07C2                     l3249:	
  3735  07C2  3001               	movlw	1
  3736  07C3                     u4795:	
  3737  07C3  35B1               	lslf	___ftdiv@f3,f
  3738  07C4  0DB2               	rlf	___ftdiv@f3+1,f
  3739  07C5  0DB3               	rlf	___ftdiv@f3+2,f
  3740  07C6  0B89               	decfsz	9,f
  3741  07C7  2FC3               	goto	u4795
  3742  07C8  0828               	movf	___ftdiv@f2+2,w
  3743  07C9  022B               	subwf	___ftdiv@f1+2,w
  3744  07CA  1D03               	skipz
  3745  07CB  2FD2               	goto	u4805
  3746  07CC  0827               	movf	___ftdiv@f2+1,w
  3747  07CD  022A               	subwf	___ftdiv@f1+1,w
  3748  07CE  1D03               	skipz
  3749  07CF  2FD2               	goto	u4805
  3750  07D0  0826               	movf	___ftdiv@f2,w
  3751  07D1  0229               	subwf	___ftdiv@f1,w
  3752  07D2                     u4805:	
  3753  07D2  1C03               	skipc
  3754  07D3  2FDB               	goto	l3257
  3755  07D4  0826               	movf	___ftdiv@f2,w
  3756  07D5  02A9               	subwf	___ftdiv@f1,f
  3757  07D6  0827               	movf	___ftdiv@f2+1,w
  3758  07D7  3BAA               	subwfb	___ftdiv@f1+1,f
  3759  07D8  0828               	movf	___ftdiv@f2+2,w
  3760  07D9  3BAB               	subwfb	___ftdiv@f1+2,f
  3761  07DA  1431               	bsf	___ftdiv@f3,0
  3762  07DB                     l3257:	
  3763  07DB  3001               	movlw	1
  3764  07DC                     u4815:	
  3765  07DC  35A9               	lslf	___ftdiv@f1,f
  3766  07DD  0DAA               	rlf	___ftdiv@f1+1,f
  3767  07DE  0DAB               	rlf	___ftdiv@f1+2,f
  3768  07DF  0B89               	decfsz	9,f
  3769  07E0  2FDC               	goto	u4815
  3770  07E1  3001               	movlw	1
  3771  07E2  02B0               	subwf	___ftdiv@cntr,f
  3772  07E3  1D03               	btfss	3,2
  3773  07E4  2FC2               	goto	l3249
  3774  07E5  0831               	movf	___ftdiv@f3,w
  3775  07E6  00F2               	movwf	___ftpack@arg
  3776  07E7  0832               	movf	___ftdiv@f3+1,w
  3777  07E8  00F3               	movwf	___ftpack@arg+1
  3778  07E9  0833               	movf	___ftdiv@f3+2,w
  3779  07EA  00F4               	movwf	___ftpack@arg+2
  3780  07EB  0834               	movf	___ftdiv@exp,w
  3781  07EC  00AC               	movwf	??___ftdiv
  3782  07ED  082C               	movf	??___ftdiv,w
  3783  07EE  00F5               	movwf	___ftpack@exp
  3784  07EF  0835               	movf	___ftdiv@sign,w
  3785  07F0  00AD               	movwf	??___ftdiv+1
  3786  07F1  082D               	movf	??___ftdiv+1,w
  3787  07F2  00F6               	movwf	___ftpack@sign
  3788  07F3  3188  20E8         	fcall	___ftpack
  3789  07F5  0872               	movf	?___ftpack,w
  3790  07F6  0020               	movlb	0	; select bank0
  3791  07F7  00A6               	movwf	?___ftdiv
  3792  07F8  0873               	movf	?___ftpack+1,w
  3793  07F9  00A7               	movwf	?___ftdiv+1
  3794  07FA  0874               	movf	?___ftpack+2,w
  3795  07FB  00A8               	movwf	?___ftdiv+2
  3796  07FC  0008               	return
  3797  07FD                     __end_of___ftdiv:	
  3798                           
  3799                           	psect	text12
  3800  0584                     __ptext12:	
  3801 ;; *************** function ___ftadd *****************
  3802 ;; Defined at:
  3803 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  f1              3    9[BANK0 ] float 
  3806 ;;  f2              3   12[BANK0 ] float 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;  exp1            1   21[BANK0 ] unsigned char 
  3809 ;;  exp2            1   20[BANK0 ] unsigned char 
  3810 ;;  sign            1   19[BANK0 ] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  3    9[BANK0 ] float 
  3813 ;; Registers used:
  3814 ;;		wreg, status,2, status,0, pclath, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3820 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3821 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3823 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3824 ;;Total ram usage:       13 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:    2
  3827 ;; This function calls:
  3828 ;;		___ftpack
  3829 ;; This function is called by:
  3830 ;;		_Set_Freq
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function ___ftadd
  3836  0584                     ___ftadd:	
  3837                           
  3838                           ;incstack = 0
  3839                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3840  0584  0020               	movlb	0	; select bank0
  3841  0585  0829               	movf	___ftadd@f1,w
  3842  0586  00AF               	movwf	??___ftadd
  3843  0587  082A               	movf	___ftadd@f1+1,w
  3844  0588  00B0               	movwf	??___ftadd+1
  3845  0589  082B               	movf	___ftadd@f1+2,w
  3846  058A  00B1               	movwf	??___ftadd+2
  3847  058B  1003               	clrc
  3848  058C  0D30               	rlf	??___ftadd+1,w
  3849  058D  0D31               	rlf	??___ftadd+2,w
  3850  058E  00B2               	movwf	??___ftadd+3
  3851  058F  0832               	movf	??___ftadd+3,w
  3852  0590  00B5               	movwf	___ftadd@exp1
  3853  0591  082C               	movf	___ftadd@f2,w
  3854  0592  00AF               	movwf	??___ftadd
  3855  0593  082D               	movf	___ftadd@f2+1,w
  3856  0594  00B0               	movwf	??___ftadd+1
  3857  0595  082E               	movf	___ftadd@f2+2,w
  3858  0596  00B1               	movwf	??___ftadd+2
  3859  0597  1003               	clrc
  3860  0598  0D30               	rlf	??___ftadd+1,w
  3861  0599  0D31               	rlf	??___ftadd+2,w
  3862  059A  00B2               	movwf	??___ftadd+3
  3863  059B  0832               	movf	??___ftadd+3,w
  3864  059C  00B4               	movwf	___ftadd@exp2
  3865  059D  0835               	movf	___ftadd@exp1,w
  3866  059E  1903               	btfsc	3,2
  3867  059F  2DAC               	goto	l3159
  3868  05A0  0834               	movf	___ftadd@exp2,w
  3869  05A1  0235               	subwf	___ftadd@exp1,w
  3870  05A2  1803               	skipnc
  3871  05A3  2DB3               	goto	l3163
  3872  05A4  0335               	decf	___ftadd@exp1,w
  3873  05A5  3AFF               	xorlw	255
  3874  05A6  0734               	addwf	___ftadd@exp2,w
  3875  05A7  00AF               	movwf	??___ftadd
  3876  05A8  3019               	movlw	25
  3877  05A9  022F               	subwf	??___ftadd,w
  3878  05AA  1C03               	skipc
  3879  05AB  2DB3               	goto	l3163
  3880  05AC                     l3159:	
  3881  05AC  082C               	movf	___ftadd@f2,w
  3882  05AD  00A9               	movwf	?___ftadd
  3883  05AE  082D               	movf	___ftadd@f2+1,w
  3884  05AF  00AA               	movwf	?___ftadd+1
  3885  05B0  082E               	movf	___ftadd@f2+2,w
  3886  05B1  00AB               	movwf	?___ftadd+2
  3887  05B2  0008               	return
  3888  05B3                     l3163:	
  3889  05B3  0834               	movf	___ftadd@exp2,w
  3890  05B4  1903               	btfsc	3,2
  3891  05B5  0008               	return
  3892  05B6  0835               	movf	___ftadd@exp1,w
  3893  05B7  0234               	subwf	___ftadd@exp2,w
  3894  05B8  1803               	skipnc
  3895  05B9  2DC2               	goto	l3169
  3896  05BA  0334               	decf	___ftadd@exp2,w
  3897  05BB  3AFF               	xorlw	255
  3898  05BC  0735               	addwf	___ftadd@exp1,w
  3899  05BD  00AF               	movwf	??___ftadd
  3900  05BE  3019               	movlw	25
  3901  05BF  022F               	subwf	??___ftadd,w
  3902  05C0  1803               	btfsc	3,0
  3903  05C1  0008               	return
  3904  05C2                     l3169:	
  3905  05C2  3006               	movlw	6
  3906  05C3  00AF               	movwf	??___ftadd
  3907  05C4  082F               	movf	??___ftadd,w
  3908  05C5  00B3               	movwf	___ftadd@sign
  3909  05C6  1BAB               	btfsc	___ftadd@f1+2,7
  3910  05C7  17B3               	bsf	___ftadd@sign,7
  3911  05C8  1BAE               	btfsc	___ftadd@f2+2,7
  3912  05C9  1733               	bsf	___ftadd@sign,6
  3913  05CA  17AA               	bsf	___ftadd@f1+1,7
  3914  05CB  30FF               	movlw	255
  3915  05CC  05A9               	andwf	___ftadd@f1,f
  3916  05CD  30FF               	movlw	255
  3917  05CE  05AA               	andwf	___ftadd@f1+1,f
  3918  05CF  3000               	movlw	0
  3919  05D0  05AB               	andwf	___ftadd@f1+2,f
  3920  05D1  17AD               	bsf	___ftadd@f2+1,7
  3921  05D2  30FF               	movlw	255
  3922  05D3  05AC               	andwf	___ftadd@f2,f
  3923  05D4  30FF               	movlw	255
  3924  05D5  05AD               	andwf	___ftadd@f2+1,f
  3925  05D6  3000               	movlw	0
  3926  05D7  05AE               	andwf	___ftadd@f2+2,f
  3927  05D8  0834               	movf	___ftadd@exp2,w
  3928  05D9  0235               	subwf	___ftadd@exp1,w
  3929  05DA  1803               	skipnc
  3930  05DB  2DFE               	goto	l3191
  3931  05DC                     l3181:	
  3932  05DC  3001               	movlw	1
  3933  05DD                     u4615:	
  3934  05DD  35AC               	lslf	___ftadd@f2,f
  3935  05DE  0DAD               	rlf	___ftadd@f2+1,f
  3936  05DF  0DAE               	rlf	___ftadd@f2+2,f
  3937  05E0  0B89               	decfsz	9,f
  3938  05E1  2DDD               	goto	u4615
  3939  05E2  3001               	movlw	1
  3940  05E3  02B4               	subwf	___ftadd@exp2,f
  3941  05E4  0834               	movf	___ftadd@exp2,w
  3942  05E5  0635               	xorwf	___ftadd@exp1,w
  3943  05E6  1903               	skipnz
  3944  05E7  2DF9               	goto	l3189
  3945  05E8  3001               	movlw	1
  3946  05E9  02B3               	subwf	___ftadd@sign,f
  3947  05EA  0833               	movf	___ftadd@sign,w
  3948  05EB  3907               	andlw	7
  3949  05EC  1903               	btfsc	3,2
  3950  05ED  2DF9               	goto	l3189
  3951  05EE  2DDC               	goto	l3181
  3952  05EF                     l3187:	
  3953  05EF  3001               	movlw	1
  3954  05F0                     u4645:	
  3955  05F0  36AB               	lsrf	___ftadd@f1+2,f
  3956  05F1  0CAA               	rrf	___ftadd@f1+1,f
  3957  05F2  0CA9               	rrf	___ftadd@f1,f
  3958  05F3  0B89               	decfsz	9,f
  3959  05F4  2DF0               	goto	u4645
  3960  05F5  3001               	movlw	1
  3961  05F6  00AF               	movwf	??___ftadd
  3962  05F7  082F               	movf	??___ftadd,w
  3963  05F8  07B5               	addwf	___ftadd@exp1,f
  3964  05F9                     l3189:	
  3965  05F9  0835               	movf	___ftadd@exp1,w
  3966  05FA  0634               	xorwf	___ftadd@exp2,w
  3967  05FB  1903               	btfsc	3,2
  3968  05FC  2E23               	goto	l764
  3969  05FD  2DEF               	goto	l3187
  3970  05FE                     l3191:	
  3971  05FE  0835               	movf	___ftadd@exp1,w
  3972  05FF  0234               	subwf	___ftadd@exp2,w
  3973  0600  1803               	skipnc
  3974  0601  2E23               	goto	l764
  3975  0602                     l3193:	
  3976  0602  3001               	movlw	1
  3977  0603                     u4675:	
  3978  0603  35A9               	lslf	___ftadd@f1,f
  3979  0604  0DAA               	rlf	___ftadd@f1+1,f
  3980  0605  0DAB               	rlf	___ftadd@f1+2,f
  3981  0606  0B89               	decfsz	9,f
  3982  0607  2E03               	goto	u4675
  3983  0608  3001               	movlw	1
  3984  0609  02B5               	subwf	___ftadd@exp1,f
  3985  060A  0834               	movf	___ftadd@exp2,w
  3986  060B  0635               	xorwf	___ftadd@exp1,w
  3987  060C  1903               	skipnz
  3988  060D  2E1F               	goto	l3201
  3989  060E  3001               	movlw	1
  3990  060F  02B3               	subwf	___ftadd@sign,f
  3991  0610  0833               	movf	___ftadd@sign,w
  3992  0611  3907               	andlw	7
  3993  0612  1903               	btfsc	3,2
  3994  0613  2E1F               	goto	l3201
  3995  0614  2E02               	goto	l3193
  3996  0615                     l3199:	
  3997  0615  3001               	movlw	1
  3998  0616                     u4705:	
  3999  0616  36AE               	lsrf	___ftadd@f2+2,f
  4000  0617  0CAD               	rrf	___ftadd@f2+1,f
  4001  0618  0CAC               	rrf	___ftadd@f2,f
  4002  0619  0B89               	decfsz	9,f
  4003  061A  2E16               	goto	u4705
  4004  061B  3001               	movlw	1
  4005  061C  00AF               	movwf	??___ftadd
  4006  061D  082F               	movf	??___ftadd,w
  4007  061E  07B4               	addwf	___ftadd@exp2,f
  4008  061F                     l3201:	
  4009  061F  0835               	movf	___ftadd@exp1,w
  4010  0620  0634               	xorwf	___ftadd@exp2,w
  4011  0621  1D03               	skipz
  4012  0622  2E15               	goto	l3199
  4013  0623                     l764:	
  4014  0623  1FB3               	btfss	___ftadd@sign,7
  4015  0624  2E35               	goto	l3205
  4016  0625  30FF               	movlw	255
  4017  0626  06A9               	xorwf	___ftadd@f1,f
  4018  0627  30FF               	movlw	255
  4019  0628  06AA               	xorwf	___ftadd@f1+1,f
  4020  0629  30FF               	movlw	255
  4021  062A  06AB               	xorwf	___ftadd@f1+2,f
  4022  062B  3001               	movlw	1
  4023  062C  07A9               	addwf	___ftadd@f1,f
  4024  062D  3000               	movlw	0
  4025  062E  1803               	skipnc
  4026  062F  3001               	movlw	1
  4027  0630  07AA               	addwf	___ftadd@f1+1,f
  4028  0631  3000               	movlw	0
  4029  0632  1803               	skipnc
  4030  0633  3001               	movlw	1
  4031  0634  07AB               	addwf	___ftadd@f1+2,f
  4032  0635                     l3205:	
  4033  0635  1F33               	btfss	___ftadd@sign,6
  4034  0636  2E47               	goto	l3209
  4035  0637  30FF               	movlw	255
  4036  0638  06AC               	xorwf	___ftadd@f2,f
  4037  0639  30FF               	movlw	255
  4038  063A  06AD               	xorwf	___ftadd@f2+1,f
  4039  063B  30FF               	movlw	255
  4040  063C  06AE               	xorwf	___ftadd@f2+2,f
  4041  063D  3001               	movlw	1
  4042  063E  07AC               	addwf	___ftadd@f2,f
  4043  063F  3000               	movlw	0
  4044  0640  1803               	skipnc
  4045  0641  3001               	movlw	1
  4046  0642  07AD               	addwf	___ftadd@f2+1,f
  4047  0643  3000               	movlw	0
  4048  0644  1803               	skipnc
  4049  0645  3001               	movlw	1
  4050  0646  07AE               	addwf	___ftadd@f2+2,f
  4051  0647                     l3209:	
  4052  0647  01B3               	clrf	___ftadd@sign
  4053  0648  0829               	movf	___ftadd@f1,w
  4054  0649  07AC               	addwf	___ftadd@f2,f
  4055  064A  082A               	movf	___ftadd@f1+1,w
  4056  064B  3DAD               	addwfc	___ftadd@f2+1,f
  4057  064C  082B               	movf	___ftadd@f1+2,w
  4058  064D  3DAE               	addwfc	___ftadd@f2+2,f
  4059  064E  1FAE               	btfss	___ftadd@f2+2,7
  4060  064F  2E62               	goto	l3219
  4061  0650  30FF               	movlw	255
  4062  0651  06AC               	xorwf	___ftadd@f2,f
  4063  0652  30FF               	movlw	255
  4064  0653  06AD               	xorwf	___ftadd@f2+1,f
  4065  0654  30FF               	movlw	255
  4066  0655  06AE               	xorwf	___ftadd@f2+2,f
  4067  0656  3001               	movlw	1
  4068  0657  07AC               	addwf	___ftadd@f2,f
  4069  0658  3000               	movlw	0
  4070  0659  1803               	skipnc
  4071  065A  3001               	movlw	1
  4072  065B  07AD               	addwf	___ftadd@f2+1,f
  4073  065C  3000               	movlw	0
  4074  065D  1803               	skipnc
  4075  065E  3001               	movlw	1
  4076  065F  07AE               	addwf	___ftadd@f2+2,f
  4077  0660  01B3               	clrf	___ftadd@sign
  4078  0661  0AB3               	incf	___ftadd@sign,f
  4079  0662                     l3219:	
  4080  0662  082C               	movf	___ftadd@f2,w
  4081  0663  00F2               	movwf	___ftpack@arg
  4082  0664  082D               	movf	___ftadd@f2+1,w
  4083  0665  00F3               	movwf	___ftpack@arg+1
  4084  0666  082E               	movf	___ftadd@f2+2,w
  4085  0667  00F4               	movwf	___ftpack@arg+2
  4086  0668  0835               	movf	___ftadd@exp1,w
  4087  0669  00AF               	movwf	??___ftadd
  4088  066A  082F               	movf	??___ftadd,w
  4089  066B  00F5               	movwf	___ftpack@exp
  4090  066C  0833               	movf	___ftadd@sign,w
  4091  066D  00B0               	movwf	??___ftadd+1
  4092  066E  0830               	movf	??___ftadd+1,w
  4093  066F  00F6               	movwf	___ftpack@sign
  4094  0670  3188  20E8         	fcall	___ftpack
  4095  0672  0872               	movf	?___ftpack,w
  4096  0673  0020               	movlb	0	; select bank0
  4097  0674  00A9               	movwf	?___ftadd
  4098  0675  0873               	movf	?___ftpack+1,w
  4099  0676  00AA               	movwf	?___ftadd+1
  4100  0677  0874               	movf	?___ftpack+2,w
  4101  0678  00AB               	movwf	?___ftadd+2
  4102  0679  0008               	return
  4103  067A                     __end_of___ftadd:	
  4104                           
  4105                           	psect	text13
  4106  08E8                     __ptext13:	
  4107 ;; *************** function ___ftpack *****************
  4108 ;; Defined at:
  4109 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  arg             3    2[COMMON] unsigned um
  4112 ;;  exp             1    5[COMMON] unsigned char 
  4113 ;;  sign            1    6[COMMON] unsigned char 
  4114 ;; Auto vars:     Size  Location     Type
  4115 ;;		None
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  3    2[COMMON] float 
  4118 ;; Registers used:
  4119 ;;		wreg, status,2, status,0
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4125 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4127 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4128 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4129 ;;Total ram usage:        8 bytes
  4130 ;; Hardware stack levels used:    1
  4131 ;; Hardware stack levels required when called:    1
  4132 ;; This function calls:
  4133 ;;		Nothing
  4134 ;; This function is called by:
  4135 ;;		___ftadd
  4136 ;;		___ftdiv
  4137 ;;		___ftmul
  4138 ;;		___lltoft
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function ___ftpack
  4144  08E8                     ___ftpack:	
  4145                           
  4146                           ;incstack = 0
  4147                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4148  08E8  0875               	movf	___ftpack@exp,w
  4149  08E9  1903               	btfsc	3,2
  4150  08EA  28F0               	goto	l3075
  4151  08EB  0874               	movf	___ftpack@arg+2,w
  4152  08EC  0473               	iorwf	___ftpack@arg+1,w
  4153  08ED  0472               	iorwf	___ftpack@arg,w
  4154  08EE  1D03               	skipz
  4155  08EF  2901               	goto	l3081
  4156  08F0                     l3075:	
  4157  08F0  3000               	movlw	0
  4158  08F1  00F2               	movwf	?___ftpack
  4159  08F2  3000               	movlw	0
  4160  08F3  00F3               	movwf	?___ftpack+1
  4161  08F4  3000               	movlw	0
  4162  08F5  00F4               	movwf	?___ftpack+2
  4163  08F6  0008               	return
  4164  08F7                     l3079:	
  4165  08F7  3001               	movlw	1
  4166  08F8  00F7               	movwf	??___ftpack
  4167  08F9  0877               	movf	??___ftpack,w
  4168  08FA  07F5               	addwf	___ftpack@exp,f
  4169  08FB  3001               	movlw	1
  4170  08FC                     u4325:	
  4171  08FC  36F4               	lsrf	___ftpack@arg+2,f
  4172  08FD  0CF3               	rrf	___ftpack@arg+1,f
  4173  08FE  0CF2               	rrf	___ftpack@arg,f
  4174  08FF  0B89               	decfsz	9,f
  4175  0900  28FC               	goto	u4325
  4176  0901                     l3081:	
  4177  0901  30FE               	movlw	254
  4178  0902  0574               	andwf	___ftpack@arg+2,w
  4179  0903  1903               	btfsc	3,2
  4180  0904  291A               	goto	l735
  4181  0905  28F7               	goto	l3079
  4182  0906                     l3083:	
  4183  0906  3001               	movlw	1
  4184  0907  00F7               	movwf	??___ftpack
  4185  0908  0877               	movf	??___ftpack,w
  4186  0909  07F5               	addwf	___ftpack@exp,f
  4187  090A  3001               	movlw	1
  4188  090B  07F2               	addwf	___ftpack@arg,f
  4189  090C  3000               	movlw	0
  4190  090D  1803               	skipnc
  4191  090E  3001               	movlw	1
  4192  090F  07F3               	addwf	___ftpack@arg+1,f
  4193  0910  3000               	movlw	0
  4194  0911  1803               	skipnc
  4195  0912  3001               	movlw	1
  4196  0913  07F4               	addwf	___ftpack@arg+2,f
  4197  0914  3001               	movlw	1
  4198  0915                     u4345:	
  4199  0915  36F4               	lsrf	___ftpack@arg+2,f
  4200  0916  0CF3               	rrf	___ftpack@arg+1,f
  4201  0917  0CF2               	rrf	___ftpack@arg,f
  4202  0918  0B89               	decfsz	9,f
  4203  0919  2915               	goto	u4345
  4204  091A                     l735:	
  4205  091A  30FF               	movlw	255
  4206  091B  0574               	andwf	___ftpack@arg+2,w
  4207  091C  1903               	btfsc	3,2
  4208  091D  2927               	goto	l3091
  4209  091E  2906               	goto	l3083
  4210  091F                     l3089:	
  4211  091F  3001               	movlw	1
  4212  0920  02F5               	subwf	___ftpack@exp,f
  4213  0921  3001               	movlw	1
  4214  0922                     u4365:	
  4215  0922  35F2               	lslf	___ftpack@arg,f
  4216  0923  0DF3               	rlf	___ftpack@arg+1,f
  4217  0924  0DF4               	rlf	___ftpack@arg+2,f
  4218  0925  0B89               	decfsz	9,f
  4219  0926  2922               	goto	u4365
  4220  0927                     l3091:	
  4221  0927  1FF3               	btfss	___ftpack@arg+1,7
  4222  0928  291F               	goto	l3089
  4223  0929  1875               	btfsc	___ftpack@exp,0
  4224  092A  2931               	goto	l741
  4225  092B  30FF               	movlw	255
  4226  092C  05F2               	andwf	___ftpack@arg,f
  4227  092D  307F               	movlw	127
  4228  092E  05F3               	andwf	___ftpack@arg+1,f
  4229  092F  30FF               	movlw	255
  4230  0930  05F4               	andwf	___ftpack@arg+2,f
  4231  0931                     l741:	
  4232  0931  1003               	clrc
  4233  0932  0CF5               	rrf	___ftpack@exp,f
  4234  0933  0875               	movf	___ftpack@exp,w
  4235  0934  00F7               	movwf	??___ftpack
  4236  0935  01F8               	clrf	??___ftpack+1
  4237  0936  01F9               	clrf	??___ftpack+2
  4238  0937  3010               	movlw	16
  4239  0938                     u4395:	
  4240  0938  35F7               	lslf	??___ftpack,f
  4241  0939  0DF8               	rlf	??___ftpack+1,f
  4242  093A  0DF9               	rlf	??___ftpack+2,f
  4243  093B  0B89               	decfsz	9,f
  4244  093C  2938               	goto	u4395
  4245  093D  0877               	movf	??___ftpack,w
  4246  093E  04F2               	iorwf	___ftpack@arg,f
  4247  093F  0878               	movf	??___ftpack+1,w
  4248  0940  04F3               	iorwf	___ftpack@arg+1,f
  4249  0941  0879               	movf	??___ftpack+2,w
  4250  0942  04F4               	iorwf	___ftpack@arg+2,f
  4251  0943  0876               	movf	___ftpack@sign,w
  4252  0944  1903               	btfsc	3,2
  4253  0945  0008               	return
  4254  0946  17F4               	bsf	___ftpack@arg+2,7
  4255  0947  0008               	return
  4256  0948                     __end_of___ftpack:	
  4257                           
  4258                           	psect	text14
  4259  0B2C                     __ptext14:	
  4260 ;; *************** function ___aldiv *****************
  4261 ;; Defined at:
  4262 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  divisor         4    2[COMMON] long 
  4265 ;;  dividend        4    6[COMMON] long 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  quotient        4    3[BANK0 ] long 
  4268 ;;  sign            1    2[BANK0 ] unsigned char 
  4269 ;;  counter         1    1[BANK0 ] unsigned char 
  4270 ;; Return value:  Size  Location     Type
  4271 ;;                  4    2[COMMON] long 
  4272 ;; Registers used:
  4273 ;;		wreg, status,2, status,0
  4274 ;; Tracked objects:
  4275 ;;		On entry : 0/0
  4276 ;;		On exit  : 0/0
  4277 ;;		Unchanged: 0/0
  4278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4279 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4280 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4281 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4282 ;;      Totals:         8       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4283 ;;Total ram usage:       15 bytes
  4284 ;; Hardware stack levels used:    1
  4285 ;; Hardware stack levels required when called:    1
  4286 ;; This function calls:
  4287 ;;		Nothing
  4288 ;; This function is called by:
  4289 ;;		_Set_Freq
  4290 ;; This function uses a non-reentrant model
  4291 ;;
  4292                           
  4293                           
  4294                           ;psect for function ___aldiv
  4295  0B2C                     ___aldiv:	
  4296                           
  4297                           ;incstack = 0
  4298                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4299  0B2C  0020               	movlb	0	; select bank0
  4300  0B2D  01A2               	clrf	___aldiv@sign
  4301  0B2E  1FF5               	btfss	___aldiv@divisor+3,7
  4302  0B2F  2B3D               	goto	l629
  4303  0B30  09F2               	comf	___aldiv@divisor,f
  4304  0B31  09F3               	comf	___aldiv@divisor+1,f
  4305  0B32  09F4               	comf	___aldiv@divisor+2,f
  4306  0B33  09F5               	comf	___aldiv@divisor+3,f
  4307  0B34  0AF2               	incf	___aldiv@divisor,f
  4308  0B35  1903               	skipnz
  4309  0B36  0AF3               	incf	___aldiv@divisor+1,f
  4310  0B37  1903               	skipnz
  4311  0B38  0AF4               	incf	___aldiv@divisor+2,f
  4312  0B39  1903               	skipnz
  4313  0B3A  0AF5               	incf	___aldiv@divisor+3,f
  4314  0B3B  01A2               	clrf	___aldiv@sign
  4315  0B3C  0AA2               	incf	___aldiv@sign,f
  4316  0B3D                     l629:	
  4317  0B3D  1FF9               	btfss	___aldiv@dividend+3,7
  4318  0B3E  2B4E               	goto	l3121
  4319  0B3F  09F6               	comf	___aldiv@dividend,f
  4320  0B40  09F7               	comf	___aldiv@dividend+1,f
  4321  0B41  09F8               	comf	___aldiv@dividend+2,f
  4322  0B42  09F9               	comf	___aldiv@dividend+3,f
  4323  0B43  0AF6               	incf	___aldiv@dividend,f
  4324  0B44  1903               	skipnz
  4325  0B45  0AF7               	incf	___aldiv@dividend+1,f
  4326  0B46  1903               	skipnz
  4327  0B47  0AF8               	incf	___aldiv@dividend+2,f
  4328  0B48  1903               	skipnz
  4329  0B49  0AF9               	incf	___aldiv@dividend+3,f
  4330  0B4A  3001               	movlw	1
  4331  0B4B  00A0               	movwf	??___aldiv
  4332  0B4C  0820               	movf	??___aldiv,w
  4333  0B4D  06A2               	xorwf	___aldiv@sign,f
  4334  0B4E                     l3121:	
  4335  0B4E  3000               	movlw	0
  4336  0B4F  00A6               	movwf	___aldiv@quotient+3
  4337  0B50  3000               	movlw	0
  4338  0B51  00A5               	movwf	___aldiv@quotient+2
  4339  0B52  3000               	movlw	0
  4340  0B53  00A4               	movwf	___aldiv@quotient+1
  4341  0B54  3000               	movlw	0
  4342  0B55  00A3               	movwf	___aldiv@quotient
  4343  0B56  0875               	movf	___aldiv@divisor+3,w
  4344  0B57  0474               	iorwf	___aldiv@divisor+2,w
  4345  0B58  0473               	iorwf	___aldiv@divisor+1,w
  4346  0B59  0472               	iorwf	___aldiv@divisor,w
  4347  0B5A  1903               	skipnz
  4348  0B5B  2B97               	goto	l3143
  4349  0B5C  01A1               	clrf	___aldiv@counter
  4350  0B5D  0AA1               	incf	___aldiv@counter,f
  4351  0B5E                     l3129:	
  4352  0B5E  1BF5               	btfsc	___aldiv@divisor+3,7
  4353  0B5F  2B6C               	goto	l3131
  4354  0B60  3001               	movlw	1
  4355  0B61                     u4455:	
  4356  0B61  35F2               	lslf	___aldiv@divisor,f
  4357  0B62  0DF3               	rlf	___aldiv@divisor+1,f
  4358  0B63  0DF4               	rlf	___aldiv@divisor+2,f
  4359  0B64  0DF5               	rlf	___aldiv@divisor+3,f
  4360  0B65  0B89               	decfsz	9,f
  4361  0B66  2B61               	goto	u4455
  4362  0B67  3001               	movlw	1
  4363  0B68  00A0               	movwf	??___aldiv
  4364  0B69  0820               	movf	??___aldiv,w
  4365  0B6A  07A1               	addwf	___aldiv@counter,f
  4366  0B6B  2B5E               	goto	l3129
  4367  0B6C                     l3131:	
  4368  0B6C  3001               	movlw	1
  4369  0B6D                     u4475:	
  4370  0B6D  35A3               	lslf	___aldiv@quotient,f
  4371  0B6E  0DA4               	rlf	___aldiv@quotient+1,f
  4372  0B6F  0DA5               	rlf	___aldiv@quotient+2,f
  4373  0B70  0DA6               	rlf	___aldiv@quotient+3,f
  4374  0B71  0B89               	decfsz	9,f
  4375  0B72  2B6D               	goto	u4475
  4376  0B73  0875               	movf	___aldiv@divisor+3,w
  4377  0B74  0279               	subwf	___aldiv@dividend+3,w
  4378  0B75  1D03               	skipz
  4379  0B76  2B81               	goto	u4485
  4380  0B77  0874               	movf	___aldiv@divisor+2,w
  4381  0B78  0278               	subwf	___aldiv@dividend+2,w
  4382  0B79  1D03               	skipz
  4383  0B7A  2B81               	goto	u4485
  4384  0B7B  0873               	movf	___aldiv@divisor+1,w
  4385  0B7C  0277               	subwf	___aldiv@dividend+1,w
  4386  0B7D  1D03               	skipz
  4387  0B7E  2B81               	goto	u4485
  4388  0B7F  0872               	movf	___aldiv@divisor,w
  4389  0B80  0276               	subwf	___aldiv@dividend,w
  4390  0B81                     u4485:	
  4391  0B81  1C03               	skipc
  4392  0B82  2B8C               	goto	l3139
  4393  0B83  0872               	movf	___aldiv@divisor,w
  4394  0B84  02F6               	subwf	___aldiv@dividend,f
  4395  0B85  0873               	movf	___aldiv@divisor+1,w
  4396  0B86  3BF7               	subwfb	___aldiv@dividend+1,f
  4397  0B87  0874               	movf	___aldiv@divisor+2,w
  4398  0B88  3BF8               	subwfb	___aldiv@dividend+2,f
  4399  0B89  0875               	movf	___aldiv@divisor+3,w
  4400  0B8A  3BF9               	subwfb	___aldiv@dividend+3,f
  4401  0B8B  1423               	bsf	___aldiv@quotient,0
  4402  0B8C                     l3139:	
  4403  0B8C  3001               	movlw	1
  4404  0B8D                     u4495:	
  4405  0B8D  36F5               	lsrf	___aldiv@divisor+3,f
  4406  0B8E  0CF4               	rrf	___aldiv@divisor+2,f
  4407  0B8F  0CF3               	rrf	___aldiv@divisor+1,f
  4408  0B90  0CF2               	rrf	___aldiv@divisor,f
  4409  0B91  0B89               	decfsz	9,f
  4410  0B92  2B8D               	goto	u4495
  4411  0B93  3001               	movlw	1
  4412  0B94  02A1               	subwf	___aldiv@counter,f
  4413  0B95  1D03               	btfss	3,2
  4414  0B96  2B6C               	goto	l3131
  4415  0B97                     l3143:	
  4416  0B97  0822               	movf	___aldiv@sign,w
  4417  0B98  1903               	btfsc	3,2
  4418  0B99  2BA5               	goto	l3147
  4419  0B9A  09A3               	comf	___aldiv@quotient,f
  4420  0B9B  09A4               	comf	___aldiv@quotient+1,f
  4421  0B9C  09A5               	comf	___aldiv@quotient+2,f
  4422  0B9D  09A6               	comf	___aldiv@quotient+3,f
  4423  0B9E  0AA3               	incf	___aldiv@quotient,f
  4424  0B9F  1903               	skipnz
  4425  0BA0  0AA4               	incf	___aldiv@quotient+1,f
  4426  0BA1  1903               	skipnz
  4427  0BA2  0AA5               	incf	___aldiv@quotient+2,f
  4428  0BA3  1903               	skipnz
  4429  0BA4  0AA6               	incf	___aldiv@quotient+3,f
  4430  0BA5                     l3147:	
  4431  0BA5  0826               	movf	___aldiv@quotient+3,w
  4432  0BA6  00F5               	movwf	?___aldiv+3
  4433  0BA7  0825               	movf	___aldiv@quotient+2,w
  4434  0BA8  00F4               	movwf	?___aldiv+2
  4435  0BA9  0824               	movf	___aldiv@quotient+1,w
  4436  0BAA  00F3               	movwf	?___aldiv+1
  4437  0BAB  0823               	movf	___aldiv@quotient,w
  4438  0BAC  00F2               	movwf	?___aldiv
  4439  0BAD  0008               	return
  4440  0BAE                     __end_of___aldiv:	
  4441                           
  4442                           	psect	text15
  4443  15B5                     __ptext15:	
  4444 ;; *************** function _Gpio_Config *****************
  4445 ;; Defined at:
  4446 ;;		line 35 in file "utility.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      unsigned char 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4464 ;;Total ram usage:        1 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    1
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_main
  4471 ;;		_Radio_Setup
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           
  4475                           
  4476                           ;psect for function _Gpio_Config
  4477  15B5                     _Gpio_Config:	
  4478                           
  4479                           ;utility.c: 38: TRISA |= 0b00000010;
  4480                           
  4481                           ;incstack = 0
  4482                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  4483  15B5  0021               	movlb	1	; select bank1
  4484  15B6  148C               	bsf	12,1	;volatile
  4485                           
  4486                           ;utility.c: 39: TRISA &= 0b11001011;
  4487  15B7  30CB               	movlw	203
  4488  15B8  00F2               	movwf	??_Gpio_Config
  4489  15B9  0872               	movf	??_Gpio_Config,w
  4490  15BA  058C               	andwf	12,f	;volatile
  4491                           
  4492                           ;utility.c: 40: TRISC |= 0b00100000;
  4493  15BB  168E               	bsf	14,5	;volatile
  4494                           
  4495                           ;utility.c: 41: TRISC &= 0b11100000;
  4496  15BC  30E0               	movlw	224
  4497  15BD  00F2               	movwf	??_Gpio_Config
  4498  15BE  0872               	movf	??_Gpio_Config,w
  4499  15BF  058E               	andwf	14,f	;volatile
  4500  15C0  0008               	return
  4501  15C1                     __end_of_Gpio_Config:	
  4502                           ;utility.c: 43: return 1;
  4503                           ;	Return value of _Gpio_Config is never used
  4504                           
  4505                           
  4506                           	psect	text16
  4507  15DC                     __ptext16:	
  4508 ;; *************** function _Adf_Reset_Config *****************
  4509 ;; Defined at:
  4510 ;;		line 87 in file "adf7012.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;		None
  4515 ;; Return value:  Size  Location     Type
  4516 ;;		None               void
  4517 ;; Registers used:
  4518 ;;		wreg, status,2, status,0, pclath, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4528 ;;Total ram usage:        0 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    4
  4531 ;; This function calls:
  4532 ;;		_Adf_Reset
  4533 ;;		_Adf_Reset_Register_One
  4534 ;;		_Adf_Reset_Register_Three
  4535 ;;		_Adf_Reset_Register_Two
  4536 ;;		_Adf_Reset_Register_Zero
  4537 ;; This function is called by:
  4538 ;;		_Radio_Setup
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           
  4543                           ;psect for function _Adf_Reset_Config
  4544  15DC                     _Adf_Reset_Config:	
  4545                           
  4546                           ;adf7012.c: 90: Adf_Reset_Register_Zero();
  4547                           
  4548                           ;incstack = 0
  4549                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  4550  15DC  3196  2638  3195   	fcall	_Adf_Reset_Register_Zero
  4551                           
  4552                           ;adf7012.c: 91: Adf_Reset_Register_One();
  4553  15DF  3195  25EB  3195   	fcall	_Adf_Reset_Register_One
  4554                           
  4555                           ;adf7012.c: 92: Adf_Reset_Register_Two();
  4556  15E2  3196  260C  3195   	fcall	_Adf_Reset_Register_Two
  4557                           
  4558                           ;adf7012.c: 93: Adf_Reset_Register_Three();
  4559  15E5  3196  268A  3195   	fcall	_Adf_Reset_Register_Three
  4560                           
  4561                           ;adf7012.c: 95: Adf_Reset();
  4562  15E8  3195  2580         	fcall	_Adf_Reset
  4563  15EA  0008               	return
  4564  15EB                     __end_of_Adf_Reset_Config:	
  4565                           
  4566                           	psect	text17
  4567  1638                     __ptext17:	
  4568 ;; *************** function _Adf_Reset_Register_Zero *****************
  4569 ;; Defined at:
  4570 ;;		line 99 in file "adf7012.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;		None               void
  4577 ;; Registers used:
  4578 ;;		wreg, status,2
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4586 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4588 ;;Total ram usage:        1 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    1
  4591 ;; This function calls:
  4592 ;;		Nothing
  4593 ;; This function is called by:
  4594 ;;		_Adf_Reset_Config
  4595 ;; This function uses a non-reentrant model
  4596 ;;
  4597                           
  4598                           
  4599                           ;psect for function _Adf_Reset_Register_Zero
  4600  1638                     _Adf_Reset_Register_Zero:	
  4601                           
  4602                           ;adf7012.c: 100: adf_config.r0.frequency_error_correction = 0;
  4603                           
  4604                           ;incstack = 0
  4605                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  4606  1638  3000               	movlw	0
  4607  1639  0021               	movlb	1	; select bank1
  4608  163A  00A3               	movwf	(_adf_config+3)^(0+128)
  4609  163B  3000               	movlw	0
  4610  163C  00A2               	movwf	(_adf_config+2)^(0+128)
  4611  163D  3000               	movlw	0
  4612  163E  00A1               	movwf	(_adf_config+1)^(0+128)
  4613  163F  3000               	movlw	0
  4614  1640  00A0               	movwf	_adf_config^(0+128)
  4615                           
  4616                           ;adf7012.c: 101: adf_config.r0.r_divider = 15;
  4617  1641  300F               	movlw	15
  4618  1642  00F2               	movwf	??_Adf_Reset_Register_Zero
  4619  1643  0872               	movf	??_Adf_Reset_Register_Zero,w
  4620  1644  00A4               	movwf	(_adf_config^(0+128)+4)
  4621                           
  4622                           ;adf7012.c: 102: adf_config.r0.crystal_doubler = 0;
  4623  1645  01A5               	clrf	(_adf_config^(0+128)+5)
  4624                           
  4625                           ;adf7012.c: 103: adf_config.r0.crystal_oscillator_disable = 0;
  4626  1646  01A6               	clrf	(_adf_config^(0+128)+6)
  4627                           
  4628                           ;adf7012.c: 104: adf_config.r0.clock_out_divider = 2;
  4629  1647  3002               	movlw	2
  4630  1648  00F2               	movwf	??_Adf_Reset_Register_Zero
  4631  1649  0872               	movf	??_Adf_Reset_Register_Zero,w
  4632  164A  00A7               	movwf	(_adf_config^(0+128)+7)
  4633                           
  4634                           ;adf7012.c: 105: adf_config.r0.vco_adjust = 0;
  4635  164B  01A8               	clrf	(_adf_config^(0+128)+8)
  4636                           
  4637                           ;adf7012.c: 106: adf_config.r0.output_divider = 2;
  4638  164C  3002               	movlw	2
  4639  164D  00F2               	movwf	??_Adf_Reset_Register_Zero
  4640  164E  0872               	movf	??_Adf_Reset_Register_Zero,w
  4641  164F  00A9               	movwf	(_adf_config^(0+128)+9)
  4642  1650  0008               	return
  4643  1651                     __end_of_Adf_Reset_Register_Zero:	
  4644                           
  4645                           	psect	text18
  4646  160C                     __ptext18:	
  4647 ;; *************** function _Adf_Reset_Register_Two *****************
  4648 ;; Defined at:
  4649 ;;		line 115 in file "adf7012.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;		None               void
  4656 ;; Registers used:
  4657 ;;		wreg, status,2
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;Total ram usage:        1 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    1
  4670 ;; This function calls:
  4671 ;;		Nothing
  4672 ;; This function is called by:
  4673 ;;		_Adf_Reset_Config
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           
  4678                           ;psect for function _Adf_Reset_Register_Two
  4679  160C                     _Adf_Reset_Register_Two:	
  4680                           
  4681                           ;adf7012.c: 116: adf_config.r2.mod_control = 3;
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  4685  160C  3003               	movlw	3
  4686  160D  00F2               	movwf	??_Adf_Reset_Register_Two
  4687  160E  0872               	movf	??_Adf_Reset_Register_Two,w
  4688  160F  0021               	movlb	1	; select bank1
  4689  1610  00B0               	movwf	(_adf_config^(0+128)+16)
  4690                           
  4691                           ;adf7012.c: 117: adf_config.r2.gook = 0;
  4692  1611  01B1               	clrf	(_adf_config^(0+128)+17)
  4693                           
  4694                           ;adf7012.c: 118: adf_config.r2.power_amplifier_level = 15;
  4695  1612  300F               	movlw	15
  4696  1613  00F2               	movwf	??_Adf_Reset_Register_Two
  4697  1614  0872               	movf	??_Adf_Reset_Register_Two,w
  4698  1615  00B2               	movwf	(_adf_config^(0+128)+18)
  4699                           
  4700                           ;adf7012.c: 119: adf_config.r2.modulation_deviation = 16;
  4701  1616  3000               	movlw	0
  4702  1617  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  4703  1618  3000               	movlw	0
  4704  1619  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  4705  161A  3000               	movlw	0
  4706  161B  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  4707  161C  3010               	movlw	16
  4708  161D  00B3               	movwf	(_adf_config^(0+128)+19)
  4709                           
  4710                           ;adf7012.c: 120: adf_config.r2.gfsk_modulation_control = 0;
  4711  161E  01B7               	clrf	(_adf_config^(0+128)+23)
  4712                           
  4713                           ;adf7012.c: 121: adf_config.r2.index_counter = 0;
  4714  161F  01B8               	clrf	(_adf_config^(0+128)+24)
  4715  1620  0008               	return
  4716  1621                     __end_of_Adf_Reset_Register_Two:	
  4717                           
  4718                           	psect	text19
  4719  168A                     __ptext19:	
  4720 ;; *************** function _Adf_Reset_Register_Three *****************
  4721 ;; Defined at:
  4722 ;;		line 124 in file "adf7012.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;		None
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;		None
  4727 ;; Return value:  Size  Location     Type
  4728 ;;		None               void
  4729 ;; Registers used:
  4730 ;;		wreg, status,2
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;Total ram usage:        1 bytes
  4741 ;; Hardware stack levels used:    1
  4742 ;; Hardware stack levels required when called:    1
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_Adf_Reset_Config
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _Adf_Reset_Register_Three
  4752  168A                     _Adf_Reset_Register_Three:	
  4753                           
  4754                           ;adf7012.c: 125: adf_config.r3.pll_enable = 0;
  4755                           
  4756                           ;incstack = 0
  4757                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  4758  168A  0021               	movlb	1	; select bank1
  4759  168B  01B9               	clrf	(_adf_config^(0+128)+25)
  4760                           
  4761                           ;adf7012.c: 126: adf_config.r3.pa_enable = 0;
  4762  168C  01BA               	clrf	(_adf_config^(0+128)+26)
  4763                           
  4764                           ;adf7012.c: 127: adf_config.r3.clkout_enable = 1;
  4765  168D  01BB               	clrf	(_adf_config^(0+128)+27)
  4766  168E  0ABB               	incf	(_adf_config^(0+128)+27),f
  4767                           
  4768                           ;adf7012.c: 128: adf_config.r3.data_invert = 1;
  4769  168F  01BC               	clrf	(_adf_config^(0+128)+28)
  4770  1690  0ABC               	incf	(_adf_config^(0+128)+28),f
  4771                           
  4772                           ;adf7012.c: 129: adf_config.r3.charge_pump_current = 3;
  4773  1691  3003               	movlw	3
  4774  1692  00F2               	movwf	??_Adf_Reset_Register_Three
  4775  1693  0872               	movf	??_Adf_Reset_Register_Three,w
  4776  1694  00BD               	movwf	(_adf_config^(0+128)+29)
  4777                           
  4778                           ;adf7012.c: 130: adf_config.r3.bleed_up = 0;
  4779  1695  01BE               	clrf	(_adf_config^(0+128)+30)
  4780                           
  4781                           ;adf7012.c: 131: adf_config.r3.bleed_down = 0;
  4782  1696  01BF               	clrf	(_adf_config^(0+128)+31)
  4783                           
  4784                           ;adf7012.c: 132: adf_config.r3.vco_disable = 0;
  4785  1697  01C0               	clrf	(_adf_config^(0+128)+32)
  4786                           
  4787                           ;adf7012.c: 134: adf_config.r3.muxout = 3;
  4788  1698  3003               	movlw	3
  4789  1699  00F2               	movwf	??_Adf_Reset_Register_Three
  4790  169A  0872               	movf	??_Adf_Reset_Register_Three,w
  4791  169B  00C1               	movwf	(_adf_config^(0+128)+33)
  4792                           
  4793                           ;adf7012.c: 136: adf_config.r3.ld_precision = 0;
  4794  169C  01C2               	clrf	(_adf_config^(0+128)+34)
  4795                           
  4796                           ;adf7012.c: 137: adf_config.r3.vco_bias = 6;
  4797  169D  3006               	movlw	6
  4798  169E  00F2               	movwf	??_Adf_Reset_Register_Three
  4799  169F  0872               	movf	??_Adf_Reset_Register_Three,w
  4800  16A0  00C3               	movwf	(_adf_config^(0+128)+35)
  4801                           
  4802                           ;adf7012.c: 138: adf_config.r3.pa_bias = 4;
  4803  16A1  3004               	movlw	4
  4804  16A2  00F2               	movwf	??_Adf_Reset_Register_Three
  4805  16A3  0872               	movf	??_Adf_Reset_Register_Three,w
  4806  16A4  00C4               	movwf	(_adf_config^(0+128)+36)
  4807                           
  4808                           ;adf7012.c: 139: adf_config.r3.pll_test_mode = 0;
  4809  16A5  01C5               	clrf	(_adf_config^(0+128)+37)
  4810                           
  4811                           ;adf7012.c: 140: adf_config.r3.sd_test_mode = 0;
  4812  16A6  01C6               	clrf	(_adf_config^(0+128)+38)
  4813  16A7  0008               	return
  4814  16A8                     __end_of_Adf_Reset_Register_Three:	
  4815                           
  4816                           	psect	text20
  4817  15EB                     __ptext20:	
  4818 ;; *************** function _Adf_Reset_Register_One *****************
  4819 ;; Defined at:
  4820 ;;		line 109 in file "adf7012.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;		None
  4823 ;; Auto vars:     Size  Location     Type
  4824 ;;		None
  4825 ;; Return value:  Size  Location     Type
  4826 ;;		None               void
  4827 ;; Registers used:
  4828 ;;		wreg
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4836 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4838 ;;Total ram usage:        1 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    1
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_Adf_Reset_Config
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           
  4849                           ;psect for function _Adf_Reset_Register_One
  4850  15EB                     _Adf_Reset_Register_One:	
  4851                           
  4852                           ;adf7012.c: 110: adf_config.r1.integer_n = 109;
  4853                           
  4854                           ;incstack = 0
  4855                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  4856  15EB  306D               	movlw	109
  4857  15EC  00F2               	movwf	??_Adf_Reset_Register_One
  4858  15ED  0872               	movf	??_Adf_Reset_Register_One,w
  4859  15EE  0021               	movlb	1	; select bank1
  4860  15EF  00AE               	movwf	(_adf_config^(0+128)+14)
  4861                           
  4862                           ;adf7012.c: 111: adf_config.r1.fractional_n = 0;
  4863  15F0  3000               	movlw	0
  4864  15F1  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  4865  15F2  3000               	movlw	0
  4866  15F3  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  4867  15F4  3000               	movlw	0
  4868  15F5  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  4869  15F6  3000               	movlw	0
  4870  15F7  00AA               	movwf	(_adf_config^(0+128)+10)
  4871                           
  4872                           ;adf7012.c: 112: adf_config.r1.prescaler = 1;
  4873  15F8  01AF               	clrf	(_adf_config^(0+128)+15)
  4874  15F9  0AAF               	incf	(_adf_config^(0+128)+15),f
  4875  15FA  0008               	return
  4876  15FB                     __end_of_Adf_Reset_Register_One:	
  4877                           
  4878                           	psect	text21
  4879  1580                     __ptext21:	
  4880 ;; *************** function _Adf_Reset *****************
  4881 ;; Defined at:
  4882 ;;		line 143 in file "adf7012.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;		None               void
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, status,0, pclath, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    3
  4903 ;; This function calls:
  4904 ;;		_Delay_ms
  4905 ;; This function is called by:
  4906 ;;		_Adf_Reset_Config
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function _Adf_Reset
  4912  1580                     _Adf_Reset:	
  4913                           
  4914                           ;adf7012.c: 145: PORTAbits.RA5 = 1;;
  4915                           
  4916                           ;incstack = 0
  4917                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  4918  1580  0020               	movlb	0	; select bank0
  4919  1581  168C               	bsf	12,5	;volatile
  4920                           
  4921                           ;adf7012.c: 146: Delay_ms(10);
  4922  1582  300A               	movlw	10
  4923  1583  00F7               	movwf	Delay_ms@time_to_delay
  4924  1584  3000               	movlw	0
  4925  1585  00F8               	movwf	Delay_ms@time_to_delay+1
  4926  1586  3195  259D         	fcall	_Delay_ms
  4927  1588  0008               	return
  4928  1589                     __end_of_Adf_Reset:	
  4929                           
  4930                           	psect	text22
  4931  0F33                     __ptext22:	
  4932 ;; *************** function _Modem_Init *****************
  4933 ;; Defined at:
  4934 ;;		line 110 in file "audio_tone.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;		None               void
  4941 ;; Registers used:
  4942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;Total ram usage:        6 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    2
  4955 ;; This function calls:
  4956 ;;		___lldiv
  4957 ;;		___lmul
  4958 ;; This function is called by:
  4959 ;;		_Modem_Setup
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function _Modem_Init
  4965  0F33                     _Modem_Init:	
  4966                           
  4967                           ;audio_tone.c: 111: SAMPLES_PER_BAUD = (PLAYBACK_RATE / BAUD_RATE);
  4968                           
  4969                           ;incstack = 0
  4970                           ; Regs used in _Modem_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4971  0F33  3004               	movlw	low (_BAUD_RATE| (0+32768))
  4972  0F34  0084               	movwf	4
  4973  0F35  3083               	movlw	high (_BAUD_RATE| (0+32768))
  4974  0F36  0085               	movwf	5
  4975  0F37  3F00               	moviw [0]fsr0
  4976  0F38  0020               	movlb	0	; select bank0
  4977  0F39  00B2               	movwf	??_Modem_Init
  4978  0F3A  3F01               	moviw [1]fsr0
  4979  0F3B  00B3               	movwf	??_Modem_Init+1
  4980  0F3C  0832               	movf	??_Modem_Init,w
  4981  0F3D  00A4               	movwf	___lldiv@divisor
  4982  0F3E  0833               	movf	??_Modem_Init+1,w
  4983  0F3F  00A5               	movwf	___lldiv@divisor+1
  4984  0F40  0D89               	rlf	9,f
  4985  0F41  3B89               	subwfb	9,f
  4986  0F42  0989               	comf	9,f
  4987  0F43  00A6               	movwf	___lldiv@divisor+2
  4988  0F44  00A7               	movwf	___lldiv@divisor+3
  4989  0F45  3000               	movlw	low (_PLAYBACK_RATE| (0+32768))
  4990  0F46  0084               	movwf	4
  4991  0F47  3083               	movlw	high (_PLAYBACK_RATE| (0+32768))
  4992  0F48  0085               	movwf	5
  4993  0F49  3F00               	moviw [0]fsr0
  4994  0F4A  00A8               	movwf	___lldiv@dividend
  4995  0F4B  3F01               	moviw [1]fsr0
  4996  0F4C  00A9               	movwf	___lldiv@dividend+1
  4997  0F4D  3F02               	moviw [2]fsr0
  4998  0F4E  00AA               	movwf	___lldiv@dividend+2
  4999  0F4F  3F03               	moviw [3]fsr0
  5000  0F50  00AB               	movwf	___lldiv@dividend+3
  5001  0F51  3188  2095  318F   	fcall	___lldiv
  5002  0F54  0020               	movlb	0	; select bank0
  5003  0F55  0824               	movf	?___lldiv,w
  5004  0F56  00B4               	movwf	??_Modem_Init+2
  5005  0F57  0834               	movf	??_Modem_Init+2,w
  5006  0F58  00EF               	movwf	_SAMPLES_PER_BAUD
  5007                           
  5008                           ;audio_tone.c: 112: PHASE_DELTA_1200 = (((TABLE_SIZE * 1200L) << 7) / PLAYBACK_RATE);
  5009  0F59  3000               	movlw	low (_PLAYBACK_RATE| (0+32768))
  5010  0F5A  0084               	movwf	4
  5011  0F5B  3083               	movlw	high (_PLAYBACK_RATE| (0+32768))
  5012  0F5C  0085               	movwf	5
  5013  0F5D  3F00               	moviw [0]fsr0
  5014  0F5E  00A4               	movwf	___lldiv@divisor
  5015  0F5F  3F01               	moviw [1]fsr0
  5016  0F60  00A5               	movwf	___lldiv@divisor+1
  5017  0F61  3F02               	moviw [2]fsr0
  5018  0F62  00A6               	movwf	___lldiv@divisor+2
  5019  0F63  3F03               	moviw [3]fsr0
  5020  0F64  00A7               	movwf	___lldiv@divisor+3
  5021  0F65  3000               	movlw	0
  5022  0F66  00F9               	movwf	___lmul@multiplicand+3
  5023  0F67  3000               	movlw	0
  5024  0F68  00F8               	movwf	___lmul@multiplicand+2
  5025  0F69  3004               	movlw	4
  5026  0F6A  00F7               	movwf	___lmul@multiplicand+1
  5027  0F6B  30B0               	movlw	176
  5028  0F6C  00F6               	movwf	___lmul@multiplicand
  5029  0F6D  3006               	movlw	low (_TABLE_SIZE| (0+32768))
  5030  0F6E  0084               	movwf	4
  5031  0F6F  3083               	movlw	high (_TABLE_SIZE| (0+32768))
  5032  0F70  0085               	movwf	5
  5033  0F71  3F00               	moviw [0]fsr0
  5034  0F72  00B2               	movwf	??_Modem_Init
  5035  0F73  3F01               	moviw [1]fsr0
  5036  0F74  00B3               	movwf	??_Modem_Init+1
  5037  0F75  0832               	movf	??_Modem_Init,w
  5038  0F76  00F2               	movwf	___lmul@multiplier
  5039  0F77  0833               	movf	??_Modem_Init+1,w
  5040  0F78  00F3               	movwf	___lmul@multiplier+1
  5041  0F79  0D89               	rlf	9,f
  5042  0F7A  3B89               	subwfb	9,f
  5043  0F7B  0989               	comf	9,f
  5044  0F7C  00F4               	movwf	___lmul@multiplier+2
  5045  0F7D  00F5               	movwf	___lmul@multiplier+3
  5046  0F7E  3197  279A  318F   	fcall	___lmul
  5047  0F81  0872               	movf	?___lmul,w
  5048  0F82  0020               	movlb	0	; select bank0
  5049  0F83  00B4               	movwf	??_Modem_Init+2
  5050  0F84  0873               	movf	?___lmul+1,w
  5051  0F85  00B5               	movwf	??_Modem_Init+3
  5052  0F86  0874               	movf	?___lmul+2,w
  5053  0F87  00B6               	movwf	??_Modem_Init+4
  5054  0F88  0875               	movf	?___lmul+3,w
  5055  0F89  00B7               	movwf	??_Modem_Init+5
  5056  0F8A  3007               	movlw	7
  5057  0F8B                     u5235:	
  5058  0F8B  35B4               	lslf	??_Modem_Init+2,f
  5059  0F8C  0DB5               	rlf	??_Modem_Init+3,f
  5060  0F8D  0DB6               	rlf	??_Modem_Init+4,f
  5061  0F8E  0DB7               	rlf	??_Modem_Init+5,f
  5062  0F8F  0B89               	decfsz	9,f
  5063  0F90  2F8B               	goto	u5235
  5064  0F91  0837               	movf	??_Modem_Init+5,w
  5065  0F92  00AB               	movwf	___lldiv@dividend+3
  5066  0F93  0836               	movf	??_Modem_Init+4,w
  5067  0F94  00AA               	movwf	___lldiv@dividend+2
  5068  0F95  0835               	movf	??_Modem_Init+3,w
  5069  0F96  00A9               	movwf	___lldiv@dividend+1
  5070  0F97  0834               	movf	??_Modem_Init+2,w
  5071  0F98  00A8               	movwf	___lldiv@dividend
  5072  0F99  3188  2095  318F   	fcall	___lldiv
  5073  0F9C  0020               	movlb	0	; select bank0
  5074  0F9D  0827               	movf	?___lldiv+3,w
  5075  0F9E  0022               	movlb	2	; select bank2
  5076  0F9F  00A7               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  5077  0FA0  0020               	movlb	0	; select bank0
  5078  0FA1  0826               	movf	?___lldiv+2,w
  5079  0FA2  0022               	movlb	2	; select bank2
  5080  0FA3  00A6               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  5081  0FA4  0020               	movlb	0	; select bank0
  5082  0FA5  0825               	movf	?___lldiv+1,w
  5083  0FA6  0022               	movlb	2	; select bank2
  5084  0FA7  00A5               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  5085  0FA8  0020               	movlb	0	; select bank0
  5086  0FA9  0824               	movf	?___lldiv,w
  5087  0FAA  0022               	movlb	2	; select bank2
  5088  0FAB  00A4               	movwf	_PHASE_DELTA_1200^(0+256)
  5089                           
  5090                           ;audio_tone.c: 113: PHASE_DELTA_2200 = (((TABLE_SIZE * 2200L) << 7) / PLAYBACK_RATE);
  5091  0FAC  3000               	movlw	low (_PLAYBACK_RATE| (0+32768))
  5092  0FAD  0084               	movwf	4
  5093  0FAE  3083               	movlw	high (_PLAYBACK_RATE| (0+32768))
  5094  0FAF  0085               	movwf	5
  5095  0FB0  3F00               	moviw [0]fsr0
  5096  0FB1  0020               	movlb	0	; select bank0
  5097  0FB2  00A4               	movwf	___lldiv@divisor
  5098  0FB3  3F01               	moviw [1]fsr0
  5099  0FB4  00A5               	movwf	___lldiv@divisor+1
  5100  0FB5  3F02               	moviw [2]fsr0
  5101  0FB6  00A6               	movwf	___lldiv@divisor+2
  5102  0FB7  3F03               	moviw [3]fsr0
  5103  0FB8  00A7               	movwf	___lldiv@divisor+3
  5104  0FB9  3000               	movlw	0
  5105  0FBA  00F9               	movwf	___lmul@multiplicand+3
  5106  0FBB  3000               	movlw	0
  5107  0FBC  00F8               	movwf	___lmul@multiplicand+2
  5108  0FBD  3008               	movlw	8
  5109  0FBE  00F7               	movwf	___lmul@multiplicand+1
  5110  0FBF  3098               	movlw	152
  5111  0FC0  00F6               	movwf	___lmul@multiplicand
  5112  0FC1  3006               	movlw	low (_TABLE_SIZE| (0+32768))
  5113  0FC2  0084               	movwf	4
  5114  0FC3  3083               	movlw	high (_TABLE_SIZE| (0+32768))
  5115  0FC4  0085               	movwf	5
  5116  0FC5  3F00               	moviw [0]fsr0
  5117  0FC6  00B2               	movwf	??_Modem_Init
  5118  0FC7  3F01               	moviw [1]fsr0
  5119  0FC8  00B3               	movwf	??_Modem_Init+1
  5120  0FC9  0832               	movf	??_Modem_Init,w
  5121  0FCA  00F2               	movwf	___lmul@multiplier
  5122  0FCB  0833               	movf	??_Modem_Init+1,w
  5123  0FCC  00F3               	movwf	___lmul@multiplier+1
  5124  0FCD  0D89               	rlf	9,f
  5125  0FCE  3B89               	subwfb	9,f
  5126  0FCF  0989               	comf	9,f
  5127  0FD0  00F4               	movwf	___lmul@multiplier+2
  5128  0FD1  00F5               	movwf	___lmul@multiplier+3
  5129  0FD2  3197  279A  318F   	fcall	___lmul
  5130  0FD5  0872               	movf	?___lmul,w
  5131  0FD6  0020               	movlb	0	; select bank0
  5132  0FD7  00B4               	movwf	??_Modem_Init+2
  5133  0FD8  0873               	movf	?___lmul+1,w
  5134  0FD9  00B5               	movwf	??_Modem_Init+3
  5135  0FDA  0874               	movf	?___lmul+2,w
  5136  0FDB  00B6               	movwf	??_Modem_Init+4
  5137  0FDC  0875               	movf	?___lmul+3,w
  5138  0FDD  00B7               	movwf	??_Modem_Init+5
  5139  0FDE  3007               	movlw	7
  5140  0FDF                     u5245:	
  5141  0FDF  35B4               	lslf	??_Modem_Init+2,f
  5142  0FE0  0DB5               	rlf	??_Modem_Init+3,f
  5143  0FE1  0DB6               	rlf	??_Modem_Init+4,f
  5144  0FE2  0DB7               	rlf	??_Modem_Init+5,f
  5145  0FE3  0B89               	decfsz	9,f
  5146  0FE4  2FDF               	goto	u5245
  5147  0FE5  0837               	movf	??_Modem_Init+5,w
  5148  0FE6  00AB               	movwf	___lldiv@dividend+3
  5149  0FE7  0836               	movf	??_Modem_Init+4,w
  5150  0FE8  00AA               	movwf	___lldiv@dividend+2
  5151  0FE9  0835               	movf	??_Modem_Init+3,w
  5152  0FEA  00A9               	movwf	___lldiv@dividend+1
  5153  0FEB  0834               	movf	??_Modem_Init+2,w
  5154  0FEC  00A8               	movwf	___lldiv@dividend
  5155  0FED  3188  2095         	fcall	___lldiv
  5156  0FEF  0020               	movlb	0	; select bank0
  5157  0FF0  0827               	movf	?___lldiv+3,w
  5158  0FF1  0022               	movlb	2	; select bank2
  5159  0FF2  00AB               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  5160  0FF3  0020               	movlb	0	; select bank0
  5161  0FF4  0826               	movf	?___lldiv+2,w
  5162  0FF5  0022               	movlb	2	; select bank2
  5163  0FF6  00AA               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  5164  0FF7  0020               	movlb	0	; select bank0
  5165  0FF8  0825               	movf	?___lldiv+1,w
  5166  0FF9  0022               	movlb	2	; select bank2
  5167  0FFA  00A9               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  5168  0FFB  0020               	movlb	0	; select bank0
  5169  0FFC  0824               	movf	?___lldiv,w
  5170  0FFD  0022               	movlb	2	; select bank2
  5171  0FFE  00A8               	movwf	_PHASE_DELTA_2200^(0+256)
  5172  0FFF  0008               	return
  5173  1000                     __end_of_Modem_Init:	
  5174                           
  5175                           	psect	text23
  5176  179A                     __ptext23:	
  5177 ;; *************** function ___lmul *****************
  5178 ;; Defined at:
  5179 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;  multiplier      4    2[COMMON] unsigned long 
  5182 ;;  multiplicand    4    6[COMMON] unsigned long 
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;  product         4    0[BANK0 ] unsigned long 
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  4    2[COMMON] unsigned long 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5194 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5197 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5198 ;;Total ram usage:       12 bytes
  5199 ;; Hardware stack levels used:    1
  5200 ;; Hardware stack levels required when called:    1
  5201 ;; This function calls:
  5202 ;;		Nothing
  5203 ;; This function is called by:
  5204 ;;		_Modem_Init
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           
  5209                           ;psect for function ___lmul
  5210  179A                     ___lmul:	
  5211                           
  5212                           ;incstack = 0
  5213                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5214  179A  3000               	movlw	0
  5215  179B  0020               	movlb	0	; select bank0
  5216  179C  00A3               	movwf	___lmul@product+3
  5217  179D  3000               	movlw	0
  5218  179E  00A2               	movwf	___lmul@product+2
  5219  179F  3000               	movlw	0
  5220  17A0  00A1               	movwf	___lmul@product+1
  5221  17A1  3000               	movlw	0
  5222  17A2  00A0               	movwf	___lmul@product
  5223  17A3                     l2585:	
  5224  17A3  1C72               	btfss	___lmul@multiplier,0
  5225  17A4  2FAE               	goto	l2589
  5226  17A5  0876               	movf	___lmul@multiplicand,w
  5227  17A6  0020               	movlb	0	; select bank0
  5228  17A7  07A0               	addwf	___lmul@product,f
  5229  17A8  0877               	movf	___lmul@multiplicand+1,w
  5230  17A9  3DA1               	addwfc	___lmul@product+1,f
  5231  17AA  0878               	movf	___lmul@multiplicand+2,w
  5232  17AB  3DA2               	addwfc	___lmul@product+2,f
  5233  17AC  0879               	movf	___lmul@multiplicand+3,w
  5234  17AD  3DA3               	addwfc	___lmul@product+3,f
  5235  17AE                     l2589:	
  5236  17AE  3001               	movlw	1
  5237  17AF                     u3375:	
  5238  17AF  35F6               	lslf	___lmul@multiplicand,f
  5239  17B0  0DF7               	rlf	___lmul@multiplicand+1,f
  5240  17B1  0DF8               	rlf	___lmul@multiplicand+2,f
  5241  17B2  0DF9               	rlf	___lmul@multiplicand+3,f
  5242  17B3  0B89               	decfsz	9,f
  5243  17B4  2FAF               	goto	u3375
  5244  17B5  3001               	movlw	1
  5245  17B6                     u3385:	
  5246  17B6  36F5               	lsrf	___lmul@multiplier+3,f
  5247  17B7  0CF4               	rrf	___lmul@multiplier+2,f
  5248  17B8  0CF3               	rrf	___lmul@multiplier+1,f
  5249  17B9  0CF2               	rrf	___lmul@multiplier,f
  5250  17BA  0B89               	decfsz	9,f
  5251  17BB  2FB6               	goto	u3385
  5252  17BC  0875               	movf	___lmul@multiplier+3,w
  5253  17BD  0474               	iorwf	___lmul@multiplier+2,w
  5254  17BE  0473               	iorwf	___lmul@multiplier+1,w
  5255  17BF  0472               	iorwf	___lmul@multiplier,w
  5256  17C0  1D03               	skipz
  5257  17C1  2FA3               	goto	l2585
  5258  17C2  0020               	movlb	0	; select bank0
  5259  17C3  0823               	movf	___lmul@product+3,w
  5260  17C4  00F5               	movwf	?___lmul+3
  5261  17C5  0822               	movf	___lmul@product+2,w
  5262  17C6  00F4               	movwf	?___lmul+2
  5263  17C7  0821               	movf	___lmul@product+1,w
  5264  17C8  00F3               	movwf	?___lmul+1
  5265  17C9  0820               	movf	___lmul@product,w
  5266  17CA  00F2               	movwf	?___lmul
  5267  17CB  0008               	return
  5268  17CC                     __end_of___lmul:	
  5269                           
  5270                           	psect	text24
  5271  0895                     __ptext24:	
  5272 ;; *************** function ___lldiv *****************
  5273 ;; Defined at:
  5274 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  divisor         4    4[BANK0 ] unsigned long 
  5277 ;;  dividend        4    8[BANK0 ] unsigned long 
  5278 ;; Auto vars:     Size  Location     Type
  5279 ;;  quotient        4   13[BANK0 ] unsigned long 
  5280 ;;  counter         1   17[BANK0 ] unsigned char 
  5281 ;; Return value:  Size  Location     Type
  5282 ;;                  4    4[BANK0 ] unsigned long 
  5283 ;; Registers used:
  5284 ;;		wreg, status,2, status,0
  5285 ;; Tracked objects:
  5286 ;;		On entry : 0/0
  5287 ;;		On exit  : 0/0
  5288 ;;		Unchanged: 0/0
  5289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5290 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5291 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5292 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5293 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5294 ;;Total ram usage:       14 bytes
  5295 ;; Hardware stack levels used:    1
  5296 ;; Hardware stack levels required when called:    1
  5297 ;; This function calls:
  5298 ;;		Nothing
  5299 ;; This function is called by:
  5300 ;;		_Set_Freq
  5301 ;;		_Modem_Init
  5302 ;; This function uses a non-reentrant model
  5303 ;;
  5304                           
  5305                           
  5306                           ;psect for function ___lldiv
  5307  0895                     ___lldiv:	
  5308                           
  5309                           ;incstack = 0
  5310                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5311  0895  3000               	movlw	0
  5312  0896  0020               	movlb	0	; select bank0
  5313  0897  00B0               	movwf	___lldiv@quotient+3
  5314  0898  3000               	movlw	0
  5315  0899  00AF               	movwf	___lldiv@quotient+2
  5316  089A  3000               	movlw	0
  5317  089B  00AE               	movwf	___lldiv@quotient+1
  5318  089C  3000               	movlw	0
  5319  089D  00AD               	movwf	___lldiv@quotient
  5320  089E  0827               	movf	___lldiv@divisor+3,w
  5321  089F  0426               	iorwf	___lldiv@divisor+2,w
  5322  08A0  0425               	iorwf	___lldiv@divisor+1,w
  5323  08A1  0424               	iorwf	___lldiv@divisor,w
  5324  08A2  1903               	skipnz
  5325  08A3  28DF               	goto	l3335
  5326  08A4  01B1               	clrf	___lldiv@counter
  5327  08A5  0AB1               	incf	___lldiv@counter,f
  5328  08A6                     l3321:	
  5329  08A6  1BA7               	btfsc	___lldiv@divisor+3,7
  5330  08A7  28B4               	goto	l3323
  5331  08A8  3001               	movlw	1
  5332  08A9                     u4965:	
  5333  08A9  35A4               	lslf	___lldiv@divisor,f
  5334  08AA  0DA5               	rlf	___lldiv@divisor+1,f
  5335  08AB  0DA6               	rlf	___lldiv@divisor+2,f
  5336  08AC  0DA7               	rlf	___lldiv@divisor+3,f
  5337  08AD  0B89               	decfsz	9,f
  5338  08AE  28A9               	goto	u4965
  5339  08AF  3001               	movlw	1
  5340  08B0  00AC               	movwf	??___lldiv
  5341  08B1  082C               	movf	??___lldiv,w
  5342  08B2  07B1               	addwf	___lldiv@counter,f
  5343  08B3  28A6               	goto	l3321
  5344  08B4                     l3323:	
  5345  08B4  3001               	movlw	1
  5346  08B5                     u4985:	
  5347  08B5  35AD               	lslf	___lldiv@quotient,f
  5348  08B6  0DAE               	rlf	___lldiv@quotient+1,f
  5349  08B7  0DAF               	rlf	___lldiv@quotient+2,f
  5350  08B8  0DB0               	rlf	___lldiv@quotient+3,f
  5351  08B9  0B89               	decfsz	9,f
  5352  08BA  28B5               	goto	u4985
  5353  08BB  0827               	movf	___lldiv@divisor+3,w
  5354  08BC  022B               	subwf	___lldiv@dividend+3,w
  5355  08BD  1D03               	skipz
  5356  08BE  28C9               	goto	u4995
  5357  08BF  0826               	movf	___lldiv@divisor+2,w
  5358  08C0  022A               	subwf	___lldiv@dividend+2,w
  5359  08C1  1D03               	skipz
  5360  08C2  28C9               	goto	u4995
  5361  08C3  0825               	movf	___lldiv@divisor+1,w
  5362  08C4  0229               	subwf	___lldiv@dividend+1,w
  5363  08C5  1D03               	skipz
  5364  08C6  28C9               	goto	u4995
  5365  08C7  0824               	movf	___lldiv@divisor,w
  5366  08C8  0228               	subwf	___lldiv@dividend,w
  5367  08C9                     u4995:	
  5368  08C9  1C03               	skipc
  5369  08CA  28D4               	goto	l3331
  5370  08CB  0824               	movf	___lldiv@divisor,w
  5371  08CC  02A8               	subwf	___lldiv@dividend,f
  5372  08CD  0825               	movf	___lldiv@divisor+1,w
  5373  08CE  3BA9               	subwfb	___lldiv@dividend+1,f
  5374  08CF  0826               	movf	___lldiv@divisor+2,w
  5375  08D0  3BAA               	subwfb	___lldiv@dividend+2,f
  5376  08D1  0827               	movf	___lldiv@divisor+3,w
  5377  08D2  3BAB               	subwfb	___lldiv@dividend+3,f
  5378  08D3  142D               	bsf	___lldiv@quotient,0
  5379  08D4                     l3331:	
  5380  08D4  3001               	movlw	1
  5381  08D5                     u5005:	
  5382  08D5  36A7               	lsrf	___lldiv@divisor+3,f
  5383  08D6  0CA6               	rrf	___lldiv@divisor+2,f
  5384  08D7  0CA5               	rrf	___lldiv@divisor+1,f
  5385  08D8  0CA4               	rrf	___lldiv@divisor,f
  5386  08D9  0B89               	decfsz	9,f
  5387  08DA  28D5               	goto	u5005
  5388  08DB  3001               	movlw	1
  5389  08DC  02B1               	subwf	___lldiv@counter,f
  5390  08DD  1D03               	btfss	3,2
  5391  08DE  28B4               	goto	l3323
  5392  08DF                     l3335:	
  5393  08DF  0830               	movf	___lldiv@quotient+3,w
  5394  08E0  00A7               	movwf	?___lldiv+3
  5395  08E1  082F               	movf	___lldiv@quotient+2,w
  5396  08E2  00A6               	movwf	?___lldiv+2
  5397  08E3  082E               	movf	___lldiv@quotient+1,w
  5398  08E4  00A5               	movwf	?___lldiv+1
  5399  08E5  082D               	movf	___lldiv@quotient,w
  5400  08E6  00A4               	movwf	?___lldiv
  5401  08E7  0008               	return
  5402  08E8                     __end_of___lldiv:	
  5403                           
  5404                           	psect	text25
  5405  1718                     __ptext25:	
  5406 ;; *************** function _Modem_Flush_Frame *****************
  5407 ;; Defined at:
  5408 ;;		line 133 in file "audio_tone.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;		None               void
  5415 ;; Registers used:
  5416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    9
  5429 ;; This function calls:
  5430 ;;		_Delay_ms
  5431 ;;		_Ptt_On
  5432 ;;		_Timer0_Start
  5433 ;; This function is called by:
  5434 ;;		_main
  5435 ;;		_Ax25_Flush_Frame
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           
  5440                           ;psect for function _Modem_Flush_Frame
  5441  1718                     _Modem_Flush_Frame:	
  5442                           
  5443                           ;audio_tone.c: 135: phase_delta = PHASE_DELTA_1200;
  5444                           
  5445                           ;incstack = 0
  5446                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5447  1718  0022               	movlb	2	; select bank2
  5448  1719  0827               	movf	(_PHASE_DELTA_1200+3)^(0+256),w
  5449  171A  00B3               	movwf	(_phase_delta+3)^(0+256)
  5450  171B  0826               	movf	(_PHASE_DELTA_1200+2)^(0+256),w
  5451  171C  00B2               	movwf	(_phase_delta+2)^(0+256)
  5452  171D  0825               	movf	(_PHASE_DELTA_1200+1)^(0+256),w
  5453  171E  00B1               	movwf	(_phase_delta+1)^(0+256)
  5454  171F  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  5455  1720  00B0               	movwf	_phase_delta^(0+256)
  5456                           
  5457                           ;audio_tone.c: 136: phase = 0;
  5458  1721  3000               	movlw	0
  5459  1722  00AF               	movwf	(_phase+3)^(0+256)
  5460  1723  3000               	movlw	0
  5461  1724  00AE               	movwf	(_phase+2)^(0+256)
  5462  1725  3000               	movlw	0
  5463  1726  00AD               	movwf	(_phase+1)^(0+256)
  5464  1727  3000               	movlw	0
  5465  1728  00AC               	movwf	_phase^(0+256)
  5466                           
  5467                           ;audio_tone.c: 137: packet_pos = 0;
  5468  1729  3000               	movlw	0
  5469  172A  0021               	movlb	1	; select bank1
  5470  172B  00CE               	movwf	(_packet_pos+3)^(0+128)
  5471  172C  3000               	movlw	0
  5472  172D  00CD               	movwf	(_packet_pos+2)^(0+128)
  5473  172E  3000               	movlw	0
  5474  172F  00CC               	movwf	(_packet_pos+1)^(0+128)
  5475  1730  3000               	movlw	0
  5476  1731  00CB               	movwf	_packet_pos^(0+128)
  5477                           
  5478                           ;audio_tone.c: 138: current_sample_in_baud = 0;
  5479  1732  01D7               	clrf	_current_sample_in_baud^(0+128)
  5480                           
  5481                           ;audio_tone.c: 139: MODEM_TRANSMITTING = 1;
  5482  1733  01D3               	clrf	_MODEM_TRANSMITTING^(0+128)
  5483  1734  0AD3               	incf	_MODEM_TRANSMITTING^(0+128),f
  5484                           
  5485                           ;audio_tone.c: 142: Ptt_On();
  5486  1735  3188  2026  3197   	fcall	_Ptt_On
  5487                           
  5488                           ;audio_tone.c: 144: Delay_ms(100);
  5489  1738  3064               	movlw	100
  5490  1739  00F7               	movwf	Delay_ms@time_to_delay
  5491  173A  3000               	movlw	0
  5492  173B  00F8               	movwf	Delay_ms@time_to_delay+1
  5493  173C  3195  259D  3197   	fcall	_Delay_ms
  5494                           
  5495                           ;audio_tone.c: 146: Timer0_Start();
  5496  173F  3195  2569         	fcall	_Timer0_Start
  5497  1741  0008               	return
  5498  1742                     __end_of_Modem_Flush_Frame:	
  5499                           
  5500                           	psect	text26
  5501  1569                     __ptext26:	
  5502 ;; *************** function _Timer0_Start *****************
  5503 ;; Defined at:
  5504 ;;		line 254 in file "utility.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;		None
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;		None
  5509 ;; Return value:  Size  Location     Type
  5510 ;;		None               void
  5511 ;; Registers used:
  5512 ;;		status,2
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5522 ;;Total ram usage:        0 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    1
  5525 ;; This function calls:
  5526 ;;		Nothing
  5527 ;; This function is called by:
  5528 ;;		_main
  5529 ;;		_Modem_Flush_Frame
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           
  5534                           ;psect for function _Timer0_Start
  5535  1569                     _Timer0_Start:	
  5536                           
  5537                           ;utility.c: 255: TMR0 = 0x00;
  5538                           
  5539                           ;incstack = 0
  5540                           ; Regs used in _Timer0_Start: [status,2]
  5541  1569  0020               	movlb	0	; select bank0
  5542  156A  0195               	clrf	21	;volatile
  5543                           
  5544                           ;utility.c: 256: TMR0IF = 0;
  5545  156B  110B               	bcf	11,2	;volatile
  5546                           
  5547                           ;utility.c: 257: TMR0IE = 1;
  5548  156C  168B               	bsf	11,5	;volatile
  5549  156D  0008               	return
  5550  156E                     __end_of_Timer0_Start:	
  5551                           
  5552                           	psect	text27
  5553  0826                     __ptext27:	
  5554 ;; *************** function _Ptt_On *****************
  5555 ;; Defined at:
  5556 ;;		line 319 in file "adf7012.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      unsigned char 
  5563 ;; Registers used:
  5564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5572 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5573 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;Total ram usage:        1 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    8
  5577 ;; This function calls:
  5578 ;;		_Adf_Lock
  5579 ;;		_Adf_Write_Config
  5580 ;;		_Delay_ms
  5581 ;;		_Read_Adf7012_Muxout
  5582 ;; This function is called by:
  5583 ;;		_main
  5584 ;;		_Modem_Flush_Frame
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           
  5589                           ;psect for function _Ptt_On
  5590  0826                     _Ptt_On:	
  5591                           
  5592                           ;adf7012.c: 324: adf_config.r3.pa_enable = 0;
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5596  0826  0021               	movlb	1	; select bank1
  5597  0827  01BA               	clrf	(_adf_config^(0+128)+26)
  5598                           
  5599                           ;adf7012.c: 325: adf_config.r2.power_amplifier_level = 0;
  5600  0828  01B2               	clrf	(_adf_config^(0+128)+18)
  5601                           
  5602                           ;adf7012.c: 326: adf_config.r3.muxout = 3;
  5603  0829  3003               	movlw	3
  5604  082A  0020               	movlb	0	; select bank0
  5605  082B  00ED               	movwf	??_Ptt_On
  5606  082C  086D               	movf	??_Ptt_On,w
  5607  082D  0021               	movlb	1	; select bank1
  5608  082E  00C1               	movwf	(_adf_config^(0+128)+33)
  5609                           
  5610                           ;adf7012.c: 328: Adf_Write_Config();
  5611  082F  3195  25A9  3188   	fcall	_Adf_Write_Config
  5612                           
  5613                           ;adf7012.c: 329: Delay_ms(10);
  5614  0832  300A               	movlw	10
  5615  0833  00F7               	movwf	Delay_ms@time_to_delay
  5616  0834  3000               	movlw	0
  5617  0835  00F8               	movwf	Delay_ms@time_to_delay+1
  5618  0836  3195  259D  3188   	fcall	_Delay_ms
  5619                           
  5620                           ;adf7012.c: 333: if (!Read_Adf7012_Muxout())
  5621  0839  3195  25CE  3188   	fcall	_Read_Adf7012_Muxout
  5622  083C  3800               	iorlw	0
  5623  083D  1903               	btfsc	3,2
  5624  083E  0008               	return
  5625                           
  5626                           ;adf7012.c: 337: else
  5627                           ;adf7012.c: 338: {
  5628                           ;adf7012.c: 340: Adf_Lock();
  5629                           
  5630                           ;adf7012.c: 336: }
  5631                           
  5632                           ;adf7012.c: 334: {
  5633                           ;adf7012.c: 335: return 0;
  5634                           ;	Return value of _Ptt_On is never used
  5635  083F  3189  21B9  3188   	fcall	_Adf_Lock
  5636                           
  5637                           ;adf7012.c: 341: adf_config.r3.pa_enable = 1;
  5638  0842  0021               	movlb	1	; select bank1
  5639  0843  01BA               	clrf	(_adf_config^(0+128)+26)
  5640  0844  0ABA               	incf	(_adf_config^(0+128)+26),f
  5641                           
  5642                           ;adf7012.c: 342: adf_config.r2.power_amplifier_level = 63;
  5643  0845  303F               	movlw	63
  5644  0846  0020               	movlb	0	; select bank0
  5645  0847  00ED               	movwf	??_Ptt_On
  5646  0848  086D               	movf	??_Ptt_On,w
  5647  0849  0021               	movlb	1	; select bank1
  5648  084A  00B2               	movwf	(_adf_config^(0+128)+18)
  5649                           
  5650                           ;adf7012.c: 344: Delay_ms(10);
  5651  084B  300A               	movlw	10
  5652  084C  00F7               	movwf	Delay_ms@time_to_delay
  5653  084D  3000               	movlw	0
  5654  084E  00F8               	movwf	Delay_ms@time_to_delay+1
  5655  084F  3195  259D  3188   	fcall	_Delay_ms
  5656                           
  5657                           ;adf7012.c: 345: Adf_Write_Config();
  5658  0852  3195  25A9  3188   	fcall	_Adf_Write_Config
  5659                           
  5660                           ;adf7012.c: 346: Delay_ms(1);
  5661  0855  3001               	movlw	1
  5662  0856  00F7               	movwf	Delay_ms@time_to_delay
  5663  0857  3000               	movlw	0
  5664  0858  00F8               	movwf	Delay_ms@time_to_delay+1
  5665  0859  3195  259D         	fcall	_Delay_ms
  5666                           
  5667                           ;adf7012.c: 348: return 1;
  5668                           ;	Return value of _Ptt_On is never used
  5669  085B  0008               	return
  5670  085C                     __end_of_Ptt_On:	
  5671                           
  5672                           	psect	text28
  5673  09B9                     __ptext28:	
  5674 ;; *************** function _Adf_Lock *****************
  5675 ;; Defined at:
  5676 ;;		line 232 in file "adf7012.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  bias            2    2[BANK1 ] int 
  5681 ;;  adj             2    0[BANK1 ] int 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  2  322[COMMON] int 
  5684 ;; Registers used:
  5685 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5692 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;Total ram usage:        6 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    7
  5698 ;; This function calls:
  5699 ;;		_Adf_Locked
  5700 ;;		_Adf_Write_Config
  5701 ;;		_Delay_ms
  5702 ;; This function is called by:
  5703 ;;		_Ptt_On
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           
  5708                           ;psect for function _Adf_Lock
  5709  09B9                     _Adf_Lock:	
  5710                           
  5711                           ;adf7012.c: 235: Delay_ms(200);
  5712                           
  5713                           ;incstack = 0
  5714                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5715  09B9  30C8               	movlw	200
  5716  09BA  00F7               	movwf	Delay_ms@time_to_delay
  5717  09BB  3000               	movlw	0
  5718  09BC  00F8               	movwf	Delay_ms@time_to_delay+1
  5719  09BD  3195  259D  3189   	fcall	_Delay_ms
  5720                           
  5721                           ;adf7012.c: 236: int adj = adf_config.r0.vco_adjust;
  5722  09C0  0021               	movlb	1	; select bank1
  5723  09C1  0828               	movf	(_adf_config^(0+128)+8),w
  5724  09C2  0020               	movlb	0	; select bank0
  5725  09C3  00EB               	movwf	??_Adf_Lock
  5726  09C4  01EC               	clrf	??_Adf_Lock+1
  5727  09C5  086B               	movf	??_Adf_Lock,w
  5728  09C6  0021               	movlb	1	; select bank1
  5729  09C7  00DB               	movwf	Adf_Lock@adj^(0+128)
  5730  09C8  0020               	movlb	0	; select bank0
  5731  09C9  086C               	movf	??_Adf_Lock+1,w
  5732  09CA  0021               	movlb	1	; select bank1
  5733  09CB  00DC               	movwf	(Adf_Lock@adj+1)^(0+128)
  5734                           
  5735                           ;adf7012.c: 237: int bias = adf_config.r3.vco_bias;
  5736  09CC  0843               	movf	(_adf_config^(0+128)+35),w
  5737  09CD  0020               	movlb	0	; select bank0
  5738  09CE  00EB               	movwf	??_Adf_Lock
  5739  09CF  01EC               	clrf	??_Adf_Lock+1
  5740  09D0  086B               	movf	??_Adf_Lock,w
  5741  09D1  0021               	movlb	1	; select bank1
  5742  09D2  00DD               	movwf	Adf_Lock@bias^(0+128)
  5743  09D3  0020               	movlb	0	; select bank0
  5744  09D4  086C               	movf	??_Adf_Lock+1,w
  5745  09D5  0021               	movlb	1	; select bank1
  5746  09D6  00DE               	movwf	(Adf_Lock@bias+1)^(0+128)
  5747                           
  5748                           ;adf7012.c: 239: adf_config.r3.pll_enable = 1;
  5749  09D7  01B9               	clrf	(_adf_config^(0+128)+25)
  5750  09D8  0AB9               	incf	(_adf_config^(0+128)+25),f
  5751                           
  5752                           ;adf7012.c: 241: adf_config.r3.muxout = 5;
  5753  09D9  3005               	movlw	5
  5754  09DA  0020               	movlb	0	; select bank0
  5755  09DB  00EB               	movwf	??_Adf_Lock
  5756  09DC  086B               	movf	??_Adf_Lock,w
  5757  09DD  0021               	movlb	1	; select bank1
  5758  09DE  00C1               	movwf	(_adf_config^(0+128)+33)
  5759                           
  5760                           ;adf7012.c: 243: Adf_Write_Config();
  5761  09DF  3195  25A9  3189   	fcall	_Adf_Write_Config
  5762                           
  5763                           ;adf7012.c: 244: Delay_ms(5);
  5764  09E2  3005               	movlw	5
  5765  09E3  00F7               	movwf	Delay_ms@time_to_delay
  5766  09E4  3000               	movlw	0
  5767  09E5  00F8               	movwf	Delay_ms@time_to_delay+1
  5768  09E6  3195  259D  3189   	fcall	_Delay_ms
  5769  09E9                     l3379:	
  5770                           ;adf7012.c: 246: while(!Adf_Locked()) {
  5771                           
  5772  09E9  3187  27FD  3189   	fcall	_Adf_Locked
  5773  09EC  3A00               	xorlw	0
  5774  09ED  1D03               	btfss	3,2
  5775  09EE  0008               	return
  5776                           
  5777                           ;adf7012.c: 248: adf_config.r0.vco_adjust = adj;
  5778  09EF  0021               	movlb	1	; select bank1
  5779  09F0  085B               	movf	Adf_Lock@adj^(0+128),w
  5780  09F1  0020               	movlb	0	; select bank0
  5781  09F2  00EB               	movwf	??_Adf_Lock
  5782  09F3  086B               	movf	??_Adf_Lock,w
  5783  09F4  0021               	movlb	1	; select bank1
  5784  09F5  00A8               	movwf	(_adf_config^(0+128)+8)
  5785                           
  5786                           ;adf7012.c: 249: adf_config.r3.vco_bias = bias;
  5787  09F6  085D               	movf	Adf_Lock@bias^(0+128),w
  5788  09F7  0020               	movlb	0	; select bank0
  5789  09F8  00EB               	movwf	??_Adf_Lock
  5790  09F9  086B               	movf	??_Adf_Lock,w
  5791  09FA  0021               	movlb	1	; select bank1
  5792  09FB  00C3               	movwf	(_adf_config^(0+128)+35)
  5793                           
  5794                           ;adf7012.c: 251: adf_config.r3.muxout = 5;
  5795  09FC  3005               	movlw	5
  5796  09FD  0020               	movlb	0	; select bank0
  5797  09FE  00EB               	movwf	??_Adf_Lock
  5798  09FF  086B               	movf	??_Adf_Lock,w
  5799  0A00  0021               	movlb	1	; select bank1
  5800  0A01  00C1               	movwf	(_adf_config^(0+128)+33)
  5801                           
  5802                           ;adf7012.c: 252: Adf_Write_Config();
  5803  0A02  3195  25A9  3189   	fcall	_Adf_Write_Config
  5804                           
  5805                           ;adf7012.c: 253: Delay_ms(5);
  5806  0A05  3005               	movlw	5
  5807  0A06  00F7               	movwf	Delay_ms@time_to_delay
  5808  0A07  3000               	movlw	0
  5809  0A08  00F8               	movwf	Delay_ms@time_to_delay+1
  5810  0A09  3195  259D  3189   	fcall	_Delay_ms
  5811                           
  5812                           ;adf7012.c: 254: if(++bias == 14) {
  5813  0A0C  3001               	movlw	1
  5814  0A0D  0021               	movlb	1	; select bank1
  5815  0A0E  07DD               	addwf	Adf_Lock@bias^(0+128),f
  5816  0A0F  3000               	movlw	0
  5817  0A10  3DDE               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  5818  0A11  300E               	movlw	14
  5819  0A12  065D               	xorwf	Adf_Lock@bias^(0+128),w
  5820  0A13  045E               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  5821  0A14  1D03               	skipz
  5822  0A15  29E9               	goto	l3379
  5823                           
  5824                           ;adf7012.c: 255: bias = 1;
  5825  0A16  3001               	movlw	1
  5826  0A17  00DD               	movwf	Adf_Lock@bias^(0+128)
  5827  0A18  3000               	movlw	0
  5828  0A19  00DE               	movwf	(Adf_Lock@bias^(0+128)+1)
  5829                           
  5830                           ;adf7012.c: 256: if(++adj == 4) {
  5831  0A1A  3001               	movlw	1
  5832  0A1B  07DB               	addwf	Adf_Lock@adj^(0+128),f
  5833  0A1C  3000               	movlw	0
  5834  0A1D  3DDC               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  5835  0A1E  3004               	movlw	4
  5836  0A1F  065B               	xorwf	Adf_Lock@adj^(0+128),w
  5837  0A20  045C               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  5838  0A21  1D03               	skipz
  5839  0A22  29E9               	goto	l3379
  5840                           
  5841                           ;adf7012.c: 259: adf_config.r0.vco_adjust = 0;
  5842  0A23  01A8               	clrf	(_adf_config^(0+128)+8)
  5843                           
  5844                           ;adf7012.c: 260: adf_config.r3.vco_bias = 5;
  5845  0A24  3005               	movlw	5
  5846  0A25  0020               	movlb	0	; select bank0
  5847  0A26  00EB               	movwf	??_Adf_Lock
  5848  0A27  086B               	movf	??_Adf_Lock,w
  5849  0A28  0021               	movlb	1	; select bank1
  5850  0A29  00C3               	movwf	(_adf_config^(0+128)+35)
  5851                           
  5852                           ;adf7012.c: 262: return 0;
  5853                           ;	Return value of _Adf_Lock is never used
  5854  0A2A  0008               	return
  5855  0A2B                     __end_of_Adf_Lock:	
  5856                           ;adf7012.c: 263: }
  5857                           ;adf7012.c: 264: }
  5858                           ;adf7012.c: 265: }
  5859                           ;adf7012.c: 269: return 1;
  5860                           ;	Return value of _Adf_Lock is never used
  5861                           
  5862                           
  5863                           	psect	text29
  5864  15A9                     __ptext29:	
  5865 ;; *************** function _Adf_Write_Config *****************
  5866 ;; Defined at:
  5867 ;;		line 151 in file "adf7012.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;		None
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;		None               void
  5874 ;; Registers used:
  5875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;Total ram usage:        0 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    6
  5888 ;; This function calls:
  5889 ;;		_Adf_Write_Register_One
  5890 ;;		_Adf_Write_Register_Three
  5891 ;;		_Adf_Write_Register_Two
  5892 ;;		_Adf_Write_Register_Zero
  5893 ;; This function is called by:
  5894 ;;		_Adf_Lock
  5895 ;;		_Radio_Setup
  5896 ;;		_Ptt_On
  5897 ;;		_Ptt_Off
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           
  5902                           ;psect for function _Adf_Write_Config
  5903  15A9                     _Adf_Write_Config:	
  5904                           
  5905                           ;adf7012.c: 152: Adf_Write_Register_Zero();
  5906                           
  5907                           ;incstack = 0
  5908                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5909  15A9  318D  25A0  3195   	fcall	_Adf_Write_Register_Zero
  5910                           
  5911                           ;adf7012.c: 153: Adf_Write_Register_One();
  5912  15AC  3189  2148  3195   	fcall	_Adf_Write_Register_One
  5913                           
  5914                           ;adf7012.c: 154: Adf_Write_Register_Two();
  5915  15AF  318C  24E9  3195   	fcall	_Adf_Write_Register_Two
  5916                           
  5917                           ;adf7012.c: 155: Adf_Write_Register_Three();
  5918  15B2  3183  230E         	fcall	_Adf_Write_Register_Three
  5919  15B4  0008               	return
  5920  15B5                     __end_of_Adf_Write_Config:	
  5921                           
  5922                           	psect	text30
  5923  0DA0                     __ptext30:	
  5924 ;; *************** function _Adf_Write_Register_Zero *****************
  5925 ;; Defined at:
  5926 ;;		line 158 in file "adf7012.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;		None
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  reg_ptr         4   39[BANK0 ] unsigned char [4]
  5931 ;;  reg             4   43[BANK0 ] unsigned long 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;		None               void
  5934 ;; Registers used:
  5935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5942 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5943 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5944 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5945 ;;Total ram usage:       36 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    5
  5948 ;; This function calls:
  5949 ;;		_Reverse_Array
  5950 ;;		_Write_Adf7012_Reg
  5951 ;;		_memcpy
  5952 ;; This function is called by:
  5953 ;;		_Adf_Write_Config
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           
  5958                           ;psect for function _Adf_Write_Register_Zero
  5959  0DA0                     _Adf_Write_Register_Zero:	
  5960                           
  5961                           ;adf7012.c: 160: uint32_t reg =
  5962                           ;adf7012.c: 161: (0) |
  5963                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  5964                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  5965                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  5966                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  5967                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  5968                           ;adf7012.c: 167: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5972  0DA0  0021               	movlb	1	; select bank1
  5973  0DA1  0829               	movf	(_adf_config^(0+128)+9),w
  5974  0DA2  3903               	andlw	3
  5975  0DA3  0020               	movlb	0	; select bank0
  5976  0DA4  00AB               	movwf	??_Adf_Write_Register_Zero
  5977  0DA5  01AC               	clrf	??_Adf_Write_Register_Zero+1
  5978  0DA6  01AD               	clrf	??_Adf_Write_Register_Zero+2
  5979  0DA7  01AE               	clrf	??_Adf_Write_Register_Zero+3
  5980  0DA8  3019               	movlw	25
  5981  0DA9                     u4005:	
  5982  0DA9  35AB               	lslf	??_Adf_Write_Register_Zero,f
  5983  0DAA  0DAC               	rlf	??_Adf_Write_Register_Zero+1,f
  5984  0DAB  0DAD               	rlf	??_Adf_Write_Register_Zero+2,f
  5985  0DAC  0DAE               	rlf	??_Adf_Write_Register_Zero+3,f
  5986  0DAD  0B89               	decfsz	9,f
  5987  0DAE  2DA9               	goto	u4005
  5988  0DAF  0021               	movlb	1	; select bank1
  5989  0DB0  0828               	movf	(_adf_config^(0+128)+8),w
  5990  0DB1  3903               	andlw	3
  5991  0DB2  0020               	movlb	0	; select bank0
  5992  0DB3  00AF               	movwf	??_Adf_Write_Register_Zero+4
  5993  0DB4  01B0               	clrf	??_Adf_Write_Register_Zero+5
  5994  0DB5  01B1               	clrf	??_Adf_Write_Register_Zero+6
  5995  0DB6  01B2               	clrf	??_Adf_Write_Register_Zero+7
  5996  0DB7  3017               	movlw	23
  5997  0DB8                     u4015:	
  5998  0DB8  35AF               	lslf	??_Adf_Write_Register_Zero+4,f
  5999  0DB9  0DB0               	rlf	??_Adf_Write_Register_Zero+5,f
  6000  0DBA  0DB1               	rlf	??_Adf_Write_Register_Zero+6,f
  6001  0DBB  0DB2               	rlf	??_Adf_Write_Register_Zero+7,f
  6002  0DBC  0B89               	decfsz	9,f
  6003  0DBD  2DB8               	goto	u4015
  6004  0DBE  0021               	movlb	1	; select bank1
  6005  0DBF  0827               	movf	(_adf_config^(0+128)+7),w
  6006  0DC0  390F               	andlw	15
  6007  0DC1  0020               	movlb	0	; select bank0
  6008  0DC2  00B3               	movwf	??_Adf_Write_Register_Zero+8
  6009  0DC3  01B4               	clrf	??_Adf_Write_Register_Zero+9
  6010  0DC4  01B5               	clrf	??_Adf_Write_Register_Zero+10
  6011  0DC5  01B6               	clrf	??_Adf_Write_Register_Zero+11
  6012  0DC6  3013               	movlw	19
  6013  0DC7                     u4025:	
  6014  0DC7  35B3               	lslf	??_Adf_Write_Register_Zero+8,f
  6015  0DC8  0DB4               	rlf	??_Adf_Write_Register_Zero+9,f
  6016  0DC9  0DB5               	rlf	??_Adf_Write_Register_Zero+10,f
  6017  0DCA  0DB6               	rlf	??_Adf_Write_Register_Zero+11,f
  6018  0DCB  0B89               	decfsz	9,f
  6019  0DCC  2DC7               	goto	u4025
  6020  0DCD  0021               	movlb	1	; select bank1
  6021  0DCE  0826               	movf	(_adf_config^(0+128)+6),w
  6022  0DCF  3901               	andlw	1
  6023  0DD0  0020               	movlb	0	; select bank0
  6024  0DD1  00B7               	movwf	??_Adf_Write_Register_Zero+12
  6025  0DD2  01B8               	clrf	??_Adf_Write_Register_Zero+13
  6026  0DD3  01B9               	clrf	??_Adf_Write_Register_Zero+14
  6027  0DD4  01BA               	clrf	??_Adf_Write_Register_Zero+15
  6028  0DD5  3012               	movlw	18
  6029  0DD6                     u4035:	
  6030  0DD6  35B7               	lslf	??_Adf_Write_Register_Zero+12,f
  6031  0DD7  0DB8               	rlf	??_Adf_Write_Register_Zero+13,f
  6032  0DD8  0DB9               	rlf	??_Adf_Write_Register_Zero+14,f
  6033  0DD9  0DBA               	rlf	??_Adf_Write_Register_Zero+15,f
  6034  0DDA  0B89               	decfsz	9,f
  6035  0DDB  2DD6               	goto	u4035
  6036  0DDC  0021               	movlb	1	; select bank1
  6037  0DDD  0825               	movf	(_adf_config^(0+128)+5),w
  6038  0DDE  3901               	andlw	1
  6039  0DDF  0020               	movlb	0	; select bank0
  6040  0DE0  00BB               	movwf	??_Adf_Write_Register_Zero+16
  6041  0DE1  01BC               	clrf	??_Adf_Write_Register_Zero+17
  6042  0DE2  01BD               	clrf	??_Adf_Write_Register_Zero+18
  6043  0DE3  01BE               	clrf	??_Adf_Write_Register_Zero+19
  6044  0DE4  3011               	movlw	17
  6045  0DE5                     u4045:	
  6046  0DE5  35BB               	lslf	??_Adf_Write_Register_Zero+16,f
  6047  0DE6  0DBC               	rlf	??_Adf_Write_Register_Zero+17,f
  6048  0DE7  0DBD               	rlf	??_Adf_Write_Register_Zero+18,f
  6049  0DE8  0DBE               	rlf	??_Adf_Write_Register_Zero+19,f
  6050  0DE9  0B89               	decfsz	9,f
  6051  0DEA  2DE5               	goto	u4045
  6052  0DEB  0021               	movlb	1	; select bank1
  6053  0DEC  0824               	movf	(_adf_config^(0+128)+4),w
  6054  0DED  390F               	andlw	15
  6055  0DEE  0020               	movlb	0	; select bank0
  6056  0DEF  00BF               	movwf	??_Adf_Write_Register_Zero+20
  6057  0DF0  01C0               	clrf	??_Adf_Write_Register_Zero+21
  6058  0DF1  01C1               	clrf	??_Adf_Write_Register_Zero+22
  6059  0DF2  01C2               	clrf	??_Adf_Write_Register_Zero+23
  6060  0DF3  300D               	movlw	13
  6061  0DF4                     u4055:	
  6062  0DF4  35BF               	lslf	??_Adf_Write_Register_Zero+20,f
  6063  0DF5  0DC0               	rlf	??_Adf_Write_Register_Zero+21,f
  6064  0DF6  0DC1               	rlf	??_Adf_Write_Register_Zero+22,f
  6065  0DF7  0DC2               	rlf	??_Adf_Write_Register_Zero+23,f
  6066  0DF8  0B89               	decfsz	9,f
  6067  0DF9  2DF4               	goto	u4055
  6068  0DFA  30FF               	movlw	255
  6069  0DFB  0021               	movlb	1	; select bank1
  6070  0DFC  0520               	andwf	_adf_config^(0+128),w
  6071  0DFD  0020               	movlb	0	; select bank0
  6072  0DFE  00C3               	movwf	??_Adf_Write_Register_Zero+24
  6073  0DFF  3007               	movlw	7
  6074  0E00  0021               	movlb	1	; select bank1
  6075  0E01  0521               	andwf	(_adf_config+1)^(0+128),w
  6076  0E02  0020               	movlb	0	; select bank0
  6077  0E03  00C4               	movwf	??_Adf_Write_Register_Zero+25
  6078  0E04  3000               	movlw	0
  6079  0E05  0021               	movlb	1	; select bank1
  6080  0E06  0522               	andwf	(_adf_config+2)^(0+128),w
  6081  0E07  0020               	movlb	0	; select bank0
  6082  0E08  00C5               	movwf	??_Adf_Write_Register_Zero+26
  6083  0E09  3000               	movlw	0
  6084  0E0A  0021               	movlb	1	; select bank1
  6085  0E0B  0523               	andwf	(_adf_config+3)^(0+128),w
  6086  0E0C  0020               	movlb	0	; select bank0
  6087  0E0D  00C6               	movwf	??_Adf_Write_Register_Zero+27
  6088  0E0E  3002               	movlw	2
  6089  0E0F                     u4065:	
  6090  0E0F  35C3               	lslf	??_Adf_Write_Register_Zero+24,f
  6091  0E10  0DC4               	rlf	??_Adf_Write_Register_Zero+25,f
  6092  0E11  0DC5               	rlf	??_Adf_Write_Register_Zero+26,f
  6093  0E12  0DC6               	rlf	??_Adf_Write_Register_Zero+27,f
  6094  0E13  0B89               	decfsz	9,f
  6095  0E14  2E0F               	goto	u4065
  6096  0E15  0843               	movf	??_Adf_Write_Register_Zero+24,w
  6097  0E16  04BF               	iorwf	??_Adf_Write_Register_Zero+20,f
  6098  0E17  0844               	movf	??_Adf_Write_Register_Zero+25,w
  6099  0E18  04C0               	iorwf	??_Adf_Write_Register_Zero+21,f
  6100  0E19  0845               	movf	??_Adf_Write_Register_Zero+26,w
  6101  0E1A  04C1               	iorwf	??_Adf_Write_Register_Zero+22,f
  6102  0E1B  0846               	movf	??_Adf_Write_Register_Zero+27,w
  6103  0E1C  04C2               	iorwf	??_Adf_Write_Register_Zero+23,f
  6104  0E1D  083F               	movf	??_Adf_Write_Register_Zero+20,w
  6105  0E1E  04BB               	iorwf	??_Adf_Write_Register_Zero+16,f
  6106  0E1F  0840               	movf	??_Adf_Write_Register_Zero+21,w
  6107  0E20  04BC               	iorwf	??_Adf_Write_Register_Zero+17,f
  6108  0E21  0841               	movf	??_Adf_Write_Register_Zero+22,w
  6109  0E22  04BD               	iorwf	??_Adf_Write_Register_Zero+18,f
  6110  0E23  0842               	movf	??_Adf_Write_Register_Zero+23,w
  6111  0E24  04BE               	iorwf	??_Adf_Write_Register_Zero+19,f
  6112  0E25  083B               	movf	??_Adf_Write_Register_Zero+16,w
  6113  0E26  04B7               	iorwf	??_Adf_Write_Register_Zero+12,f
  6114  0E27  083C               	movf	??_Adf_Write_Register_Zero+17,w
  6115  0E28  04B8               	iorwf	??_Adf_Write_Register_Zero+13,f
  6116  0E29  083D               	movf	??_Adf_Write_Register_Zero+18,w
  6117  0E2A  04B9               	iorwf	??_Adf_Write_Register_Zero+14,f
  6118  0E2B  083E               	movf	??_Adf_Write_Register_Zero+19,w
  6119  0E2C  04BA               	iorwf	??_Adf_Write_Register_Zero+15,f
  6120  0E2D  0837               	movf	??_Adf_Write_Register_Zero+12,w
  6121  0E2E  04B3               	iorwf	??_Adf_Write_Register_Zero+8,f
  6122  0E2F  0838               	movf	??_Adf_Write_Register_Zero+13,w
  6123  0E30  04B4               	iorwf	??_Adf_Write_Register_Zero+9,f
  6124  0E31  0839               	movf	??_Adf_Write_Register_Zero+14,w
  6125  0E32  04B5               	iorwf	??_Adf_Write_Register_Zero+10,f
  6126  0E33  083A               	movf	??_Adf_Write_Register_Zero+15,w
  6127  0E34  04B6               	iorwf	??_Adf_Write_Register_Zero+11,f
  6128  0E35  0833               	movf	??_Adf_Write_Register_Zero+8,w
  6129  0E36  04AF               	iorwf	??_Adf_Write_Register_Zero+4,f
  6130  0E37  0834               	movf	??_Adf_Write_Register_Zero+9,w
  6131  0E38  04B0               	iorwf	??_Adf_Write_Register_Zero+5,f
  6132  0E39  0835               	movf	??_Adf_Write_Register_Zero+10,w
  6133  0E3A  04B1               	iorwf	??_Adf_Write_Register_Zero+6,f
  6134  0E3B  0836               	movf	??_Adf_Write_Register_Zero+11,w
  6135  0E3C  04B2               	iorwf	??_Adf_Write_Register_Zero+7,f
  6136  0E3D  082B               	movf	??_Adf_Write_Register_Zero,w
  6137  0E3E  042F               	iorwf	??_Adf_Write_Register_Zero+4,w
  6138  0E3F  00CB               	movwf	Adf_Write_Register_Zero@reg
  6139  0E40  082C               	movf	??_Adf_Write_Register_Zero+1,w
  6140  0E41  0430               	iorwf	??_Adf_Write_Register_Zero+5,w
  6141  0E42  00CC               	movwf	Adf_Write_Register_Zero@reg+1
  6142  0E43  082D               	movf	??_Adf_Write_Register_Zero+2,w
  6143  0E44  0431               	iorwf	??_Adf_Write_Register_Zero+6,w
  6144  0E45  00CD               	movwf	Adf_Write_Register_Zero@reg+2
  6145  0E46  082E               	movf	??_Adf_Write_Register_Zero+3,w
  6146  0E47  0432               	iorwf	??_Adf_Write_Register_Zero+7,w
  6147  0E48  00CE               	movwf	Adf_Write_Register_Zero@reg+3
  6148                           
  6149                           ;adf7012.c: 171: uint8_t reg_ptr[4];
  6150                           ;adf7012.c: 172: memcpy(reg_ptr, &reg, 4);
  6151  0E49  304B               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  6152  0E4A  00AB               	movwf	??_Adf_Write_Register_Zero
  6153  0E4B  082B               	movf	??_Adf_Write_Register_Zero,w
  6154  0E4C  00F2               	movwf	memcpy@s1
  6155  0E4D  3004               	movlw	4
  6156  0E4E  00F3               	movwf	memcpy@n
  6157  0E4F  3000               	movlw	0
  6158  0E50  00F4               	movwf	memcpy@n+1
  6159  0E51  3047               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  6160  0E52  3196  26C6  318D   	fcall	_memcpy
  6161                           
  6162                           ;adf7012.c: 173: Reverse_Array(reg_ptr,4);
  6163  0E55  3004               	movlw	4
  6164  0E56  0020               	movlb	0	; select bank0
  6165  0E57  00AB               	movwf	??_Adf_Write_Register_Zero
  6166  0E58  082B               	movf	??_Adf_Write_Register_Zero,w
  6167  0E59  00F9               	movwf	Reverse_Array@length
  6168  0E5A  3047               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  6169  0E5B  3197  27CC  318D   	fcall	_Reverse_Array
  6170                           
  6171                           ;adf7012.c: 174: Write_Adf7012_Reg(reg_ptr, 4);
  6172  0E5E  3004               	movlw	4
  6173  0E5F  0020               	movlb	0	; select bank0
  6174  0E60  00AB               	movwf	??_Adf_Write_Register_Zero
  6175  0E61  082B               	movf	??_Adf_Write_Register_Zero,w
  6176  0E62  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  6177  0E63  3047               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  6178  0E64  3188  205C         	fcall	_Write_Adf7012_Reg
  6179  0E66  0008               	return
  6180  0E67                     __end_of_Adf_Write_Register_Zero:	
  6181                           
  6182                           	psect	text31
  6183  0CE9                     __ptext31:	
  6184 ;; *************** function _Adf_Write_Register_Two *****************
  6185 ;; Defined at:
  6186 ;;		line 190 in file "adf7012.c"
  6187 ;; Parameters:    Size  Location     Type
  6188 ;;		None
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;  reg_ptr         4   35[BANK0 ] unsigned char [4]
  6191 ;;  reg             4   39[BANK0 ] unsigned long 
  6192 ;; Return value:  Size  Location     Type
  6193 ;;		None               void
  6194 ;; Registers used:
  6195 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6196 ;; Tracked objects:
  6197 ;;		On entry : 0/0
  6198 ;;		On exit  : 0/0
  6199 ;;		Unchanged: 0/0
  6200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6204 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6205 ;;Total ram usage:       32 bytes
  6206 ;; Hardware stack levels used:    1
  6207 ;; Hardware stack levels required when called:    5
  6208 ;; This function calls:
  6209 ;;		_Reverse_Array
  6210 ;;		_Write_Adf7012_Reg
  6211 ;;		_memcpy
  6212 ;; This function is called by:
  6213 ;;		_Adf_Write_Config
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           
  6218                           ;psect for function _Adf_Write_Register_Two
  6219  0CE9                     _Adf_Write_Register_Two:	
  6220                           
  6221                           ;adf7012.c: 191: uint32_t reg =
  6222                           ;adf7012.c: 192: (2) |
  6223                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  6224                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  6225                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  6226                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  6227                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  6228                           ;adf7012.c: 198: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  6229                           
  6230                           ;incstack = 0
  6231                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6232  0CE9  0021               	movlb	1	; select bank1
  6233  0CEA  0838               	movf	(_adf_config^(0+128)+24),w
  6234  0CEB  3903               	andlw	3
  6235  0CEC  0020               	movlb	0	; select bank0
  6236  0CED  00AB               	movwf	??_Adf_Write_Register_Two
  6237  0CEE  01AC               	clrf	??_Adf_Write_Register_Two+1
  6238  0CEF  01AD               	clrf	??_Adf_Write_Register_Two+2
  6239  0CF0  01AE               	clrf	??_Adf_Write_Register_Two+3
  6240  0CF1  3017               	movlw	23
  6241  0CF2                     u4105:	
  6242  0CF2  35AB               	lslf	??_Adf_Write_Register_Two,f
  6243  0CF3  0DAC               	rlf	??_Adf_Write_Register_Two+1,f
  6244  0CF4  0DAD               	rlf	??_Adf_Write_Register_Two+2,f
  6245  0CF5  0DAE               	rlf	??_Adf_Write_Register_Two+3,f
  6246  0CF6  0B89               	decfsz	9,f
  6247  0CF7  2CF2               	goto	u4105
  6248  0CF8  0021               	movlb	1	; select bank1
  6249  0CF9  0837               	movf	(_adf_config^(0+128)+23),w
  6250  0CFA  3907               	andlw	7
  6251  0CFB  0020               	movlb	0	; select bank0
  6252  0CFC  00AF               	movwf	??_Adf_Write_Register_Two+4
  6253  0CFD  01B0               	clrf	??_Adf_Write_Register_Two+5
  6254  0CFE  01B1               	clrf	??_Adf_Write_Register_Two+6
  6255  0CFF  01B2               	clrf	??_Adf_Write_Register_Two+7
  6256  0D00  3014               	movlw	20
  6257  0D01                     u4115:	
  6258  0D01  35AF               	lslf	??_Adf_Write_Register_Two+4,f
  6259  0D02  0DB0               	rlf	??_Adf_Write_Register_Two+5,f
  6260  0D03  0DB1               	rlf	??_Adf_Write_Register_Two+6,f
  6261  0D04  0DB2               	rlf	??_Adf_Write_Register_Two+7,f
  6262  0D05  0B89               	decfsz	9,f
  6263  0D06  2D01               	goto	u4115
  6264  0D07  3013               	movlw	19
  6265  0D08  3EA0               	addlw	_adf_config& (0+255)
  6266  0D09  0086               	movwf	6
  6267  0D0A  0187               	clrf	7
  6268  0D0B  30FF               	movlw	255
  6269  0D0C  0501               	andwf	1,w
  6270  0D0D  00B3               	movwf	??_Adf_Write_Register_Two+8
  6271  0D0E  3141               	addfsr 1,1
  6272  0D0F  3001               	movlw	1
  6273  0D10  0501               	andwf	1,w
  6274  0D11  00B4               	movwf	??_Adf_Write_Register_Two+9
  6275  0D12  3141               	addfsr 1,1
  6276  0D13  3000               	movlw	0
  6277  0D14  0501               	andwf	1,w
  6278  0D15  00B5               	movwf	??_Adf_Write_Register_Two+10
  6279  0D16  3141               	addfsr 1,1
  6280  0D17  3000               	movlw	0
  6281  0D18  0501               	andwf	1,w
  6282  0D19  00B6               	movwf	??_Adf_Write_Register_Two+11
  6283  0D1A  300B               	movlw	11
  6284  0D1B                     u4125:	
  6285  0D1B  35B3               	lslf	??_Adf_Write_Register_Two+8,f
  6286  0D1C  0DB4               	rlf	??_Adf_Write_Register_Two+9,f
  6287  0D1D  0DB5               	rlf	??_Adf_Write_Register_Two+10,f
  6288  0D1E  0DB6               	rlf	??_Adf_Write_Register_Two+11,f
  6289  0D1F  0B89               	decfsz	9,f
  6290  0D20  2D1B               	goto	u4125
  6291  0D21  0021               	movlb	1	; select bank1
  6292  0D22  0832               	movf	(_adf_config^(0+128)+18),w
  6293  0D23  393F               	andlw	63
  6294  0D24  0020               	movlb	0	; select bank0
  6295  0D25  00B7               	movwf	??_Adf_Write_Register_Two+12
  6296  0D26  01B8               	clrf	??_Adf_Write_Register_Two+13
  6297  0D27  01B9               	clrf	??_Adf_Write_Register_Two+14
  6298  0D28  01BA               	clrf	??_Adf_Write_Register_Two+15
  6299  0D29  3005               	movlw	5
  6300  0D2A                     u4135:	
  6301  0D2A  35B7               	lslf	??_Adf_Write_Register_Two+12,f
  6302  0D2B  0DB8               	rlf	??_Adf_Write_Register_Two+13,f
  6303  0D2C  0DB9               	rlf	??_Adf_Write_Register_Two+14,f
  6304  0D2D  0DBA               	rlf	??_Adf_Write_Register_Two+15,f
  6305  0D2E  0B89               	decfsz	9,f
  6306  0D2F  2D2A               	goto	u4135
  6307  0D30  0021               	movlb	1	; select bank1
  6308  0D31  0831               	movf	(_adf_config^(0+128)+17),w
  6309  0D32  3901               	andlw	1
  6310  0D33  0020               	movlb	0	; select bank0
  6311  0D34  00BB               	movwf	??_Adf_Write_Register_Two+16
  6312  0D35  01BC               	clrf	??_Adf_Write_Register_Two+17
  6313  0D36  01BD               	clrf	??_Adf_Write_Register_Two+18
  6314  0D37  01BE               	clrf	??_Adf_Write_Register_Two+19
  6315  0D38  3004               	movlw	4
  6316  0D39                     u4145:	
  6317  0D39  35BB               	lslf	??_Adf_Write_Register_Two+16,f
  6318  0D3A  0DBC               	rlf	??_Adf_Write_Register_Two+17,f
  6319  0D3B  0DBD               	rlf	??_Adf_Write_Register_Two+18,f
  6320  0D3C  0DBE               	rlf	??_Adf_Write_Register_Two+19,f
  6321  0D3D  0B89               	decfsz	9,f
  6322  0D3E  2D39               	goto	u4145
  6323  0D3F  0021               	movlb	1	; select bank1
  6324  0D40  0830               	movf	(_adf_config^(0+128)+16),w
  6325  0D41  3903               	andlw	3
  6326  0D42  0020               	movlb	0	; select bank0
  6327  0D43  00BF               	movwf	??_Adf_Write_Register_Two+20
  6328  0D44  01C0               	clrf	??_Adf_Write_Register_Two+21
  6329  0D45  01C1               	clrf	??_Adf_Write_Register_Two+22
  6330  0D46  01C2               	clrf	??_Adf_Write_Register_Two+23
  6331  0D47  3002               	movlw	2
  6332  0D48                     u4155:	
  6333  0D48  35BF               	lslf	??_Adf_Write_Register_Two+20,f
  6334  0D49  0DC0               	rlf	??_Adf_Write_Register_Two+21,f
  6335  0D4A  0DC1               	rlf	??_Adf_Write_Register_Two+22,f
  6336  0D4B  0DC2               	rlf	??_Adf_Write_Register_Two+23,f
  6337  0D4C  0B89               	decfsz	9,f
  6338  0D4D  2D48               	goto	u4155
  6339  0D4E  083F               	movf	??_Adf_Write_Register_Two+20,w
  6340  0D4F  04BB               	iorwf	??_Adf_Write_Register_Two+16,f
  6341  0D50  0840               	movf	??_Adf_Write_Register_Two+21,w
  6342  0D51  04BC               	iorwf	??_Adf_Write_Register_Two+17,f
  6343  0D52  0841               	movf	??_Adf_Write_Register_Two+22,w
  6344  0D53  04BD               	iorwf	??_Adf_Write_Register_Two+18,f
  6345  0D54  0842               	movf	??_Adf_Write_Register_Two+23,w
  6346  0D55  04BE               	iorwf	??_Adf_Write_Register_Two+19,f
  6347  0D56  083B               	movf	??_Adf_Write_Register_Two+16,w
  6348  0D57  04B7               	iorwf	??_Adf_Write_Register_Two+12,f
  6349  0D58  083C               	movf	??_Adf_Write_Register_Two+17,w
  6350  0D59  04B8               	iorwf	??_Adf_Write_Register_Two+13,f
  6351  0D5A  083D               	movf	??_Adf_Write_Register_Two+18,w
  6352  0D5B  04B9               	iorwf	??_Adf_Write_Register_Two+14,f
  6353  0D5C  083E               	movf	??_Adf_Write_Register_Two+19,w
  6354  0D5D  04BA               	iorwf	??_Adf_Write_Register_Two+15,f
  6355  0D5E  0837               	movf	??_Adf_Write_Register_Two+12,w
  6356  0D5F  04B3               	iorwf	??_Adf_Write_Register_Two+8,f
  6357  0D60  0838               	movf	??_Adf_Write_Register_Two+13,w
  6358  0D61  04B4               	iorwf	??_Adf_Write_Register_Two+9,f
  6359  0D62  0839               	movf	??_Adf_Write_Register_Two+14,w
  6360  0D63  04B5               	iorwf	??_Adf_Write_Register_Two+10,f
  6361  0D64  083A               	movf	??_Adf_Write_Register_Two+15,w
  6362  0D65  04B6               	iorwf	??_Adf_Write_Register_Two+11,f
  6363  0D66  0833               	movf	??_Adf_Write_Register_Two+8,w
  6364  0D67  04AF               	iorwf	??_Adf_Write_Register_Two+4,f
  6365  0D68  0834               	movf	??_Adf_Write_Register_Two+9,w
  6366  0D69  04B0               	iorwf	??_Adf_Write_Register_Two+5,f
  6367  0D6A  0835               	movf	??_Adf_Write_Register_Two+10,w
  6368  0D6B  04B1               	iorwf	??_Adf_Write_Register_Two+6,f
  6369  0D6C  0836               	movf	??_Adf_Write_Register_Two+11,w
  6370  0D6D  04B2               	iorwf	??_Adf_Write_Register_Two+7,f
  6371  0D6E  082F               	movf	??_Adf_Write_Register_Two+4,w
  6372  0D6F  04AB               	iorwf	??_Adf_Write_Register_Two,f
  6373  0D70  0830               	movf	??_Adf_Write_Register_Two+5,w
  6374  0D71  04AC               	iorwf	??_Adf_Write_Register_Two+1,f
  6375  0D72  0831               	movf	??_Adf_Write_Register_Two+6,w
  6376  0D73  04AD               	iorwf	??_Adf_Write_Register_Two+2,f
  6377  0D74  0832               	movf	??_Adf_Write_Register_Two+7,w
  6378  0D75  04AE               	iorwf	??_Adf_Write_Register_Two+3,f
  6379  0D76  3002               	movlw	2
  6380  0D77  042B               	iorwf	??_Adf_Write_Register_Two,w
  6381  0D78  00C7               	movwf	Adf_Write_Register_Two@reg
  6382  0D79  3000               	movlw	0
  6383  0D7A  042C               	iorwf	??_Adf_Write_Register_Two+1,w
  6384  0D7B  00C8               	movwf	Adf_Write_Register_Two@reg+1
  6385  0D7C  3000               	movlw	0
  6386  0D7D  042D               	iorwf	??_Adf_Write_Register_Two+2,w
  6387  0D7E  00C9               	movwf	Adf_Write_Register_Two@reg+2
  6388  0D7F  3000               	movlw	0
  6389  0D80  042E               	iorwf	??_Adf_Write_Register_Two+3,w
  6390  0D81  00CA               	movwf	Adf_Write_Register_Two@reg+3
  6391                           
  6392                           ;adf7012.c: 201: uint8_t reg_ptr[4];
  6393                           ;adf7012.c: 202: memcpy(reg_ptr, &reg, 4);
  6394  0D82  3047               	movlw	Adf_Write_Register_Two@reg& (0+255)
  6395  0D83  00AB               	movwf	??_Adf_Write_Register_Two
  6396  0D84  082B               	movf	??_Adf_Write_Register_Two,w
  6397  0D85  00F2               	movwf	memcpy@s1
  6398  0D86  3004               	movlw	4
  6399  0D87  00F3               	movwf	memcpy@n
  6400  0D88  3000               	movlw	0
  6401  0D89  00F4               	movwf	memcpy@n+1
  6402  0D8A  3043               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6403  0D8B  3196  26C6  318C   	fcall	_memcpy
  6404                           
  6405                           ;adf7012.c: 203: Reverse_Array(reg_ptr,4);
  6406  0D8E  3004               	movlw	4
  6407  0D8F  0020               	movlb	0	; select bank0
  6408  0D90  00AB               	movwf	??_Adf_Write_Register_Two
  6409  0D91  082B               	movf	??_Adf_Write_Register_Two,w
  6410  0D92  00F9               	movwf	Reverse_Array@length
  6411  0D93  3043               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6412  0D94  3197  27CC  318C   	fcall	_Reverse_Array
  6413                           
  6414                           ;adf7012.c: 204: Write_Adf7012_Reg(reg_ptr, 4);
  6415  0D97  3004               	movlw	4
  6416  0D98  0020               	movlb	0	; select bank0
  6417  0D99  00AB               	movwf	??_Adf_Write_Register_Two
  6418  0D9A  082B               	movf	??_Adf_Write_Register_Two,w
  6419  0D9B  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  6420  0D9C  3043               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6421  0D9D  3188  205C         	fcall	_Write_Adf7012_Reg
  6422  0D9F  0008               	return
  6423  0DA0                     __end_of_Adf_Write_Register_Two:	
  6424                           
  6425                           	psect	text32
  6426  030E                     __ptext32:	
  6427 ;; *************** function _Adf_Write_Register_Three *****************
  6428 ;; Defined at:
  6429 ;;		line 207 in file "adf7012.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;		None
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  reg_ptr         4   67[BANK0 ] unsigned char [4]
  6434 ;;  reg             4   71[BANK0 ] unsigned long 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;		None               void
  6437 ;; Registers used:
  6438 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6445 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6446 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6447 ;;      Totals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;Total ram usage:       64 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; Hardware stack levels required when called:    5
  6451 ;; This function calls:
  6452 ;;		_Reverse_Array
  6453 ;;		_Write_Adf7012_Reg
  6454 ;;		_memcpy
  6455 ;; This function is called by:
  6456 ;;		_Adf_Write_Config
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           
  6461                           ;psect for function _Adf_Write_Register_Three
  6462  030E                     _Adf_Write_Register_Three:	
  6463                           
  6464                           ;adf7012.c: 208: uint32_t reg =
  6465                           ;adf7012.c: 209: (3) |
  6466                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  6467                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  6468                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  6469                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  6470                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  6471                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  6472                           ;adf7012.c: 216: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  6473                           
  6474                           ;incstack = 0
  6475                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  6476  030E  0021               	movlb	1	; select bank1
  6477  030F  0846               	movf	(_adf_config^(0+128)+38),w
  6478  0310  390F               	andlw	15
  6479  0311  0020               	movlb	0	; select bank0
  6480  0312  00AB               	movwf	??_Adf_Write_Register_Three
  6481  0313  01AC               	clrf	??_Adf_Write_Register_Three+1
  6482  0314  01AD               	clrf	??_Adf_Write_Register_Three+2
  6483  0315  01AE               	clrf	??_Adf_Write_Register_Three+3
  6484  0316  301C               	movlw	28
  6485  0317                     u4165:	
  6486  0317  35AB               	lslf	??_Adf_Write_Register_Three,f
  6487  0318  0DAC               	rlf	??_Adf_Write_Register_Three+1,f
  6488  0319  0DAD               	rlf	??_Adf_Write_Register_Three+2,f
  6489  031A  0DAE               	rlf	??_Adf_Write_Register_Three+3,f
  6490  031B  0B89               	decfsz	9,f
  6491  031C  2B17               	goto	u4165
  6492  031D  0021               	movlb	1	; select bank1
  6493  031E  0845               	movf	(_adf_config^(0+128)+37),w
  6494  031F  391F               	andlw	31
  6495  0320  0020               	movlb	0	; select bank0
  6496  0321  00AF               	movwf	??_Adf_Write_Register_Three+4
  6497  0322  01B0               	clrf	??_Adf_Write_Register_Three+5
  6498  0323  01B1               	clrf	??_Adf_Write_Register_Three+6
  6499  0324  01B2               	clrf	??_Adf_Write_Register_Three+7
  6500  0325  3017               	movlw	23
  6501  0326                     u4175:	
  6502  0326  35AF               	lslf	??_Adf_Write_Register_Three+4,f
  6503  0327  0DB0               	rlf	??_Adf_Write_Register_Three+5,f
  6504  0328  0DB1               	rlf	??_Adf_Write_Register_Three+6,f
  6505  0329  0DB2               	rlf	??_Adf_Write_Register_Three+7,f
  6506  032A  0B89               	decfsz	9,f
  6507  032B  2B26               	goto	u4175
  6508  032C  0021               	movlb	1	; select bank1
  6509  032D  0844               	movf	(_adf_config^(0+128)+36),w
  6510  032E  3907               	andlw	7
  6511  032F  0020               	movlb	0	; select bank0
  6512  0330  00B3               	movwf	??_Adf_Write_Register_Three+8
  6513  0331  01B4               	clrf	??_Adf_Write_Register_Three+9
  6514  0332  01B5               	clrf	??_Adf_Write_Register_Three+10
  6515  0333  01B6               	clrf	??_Adf_Write_Register_Three+11
  6516  0334  3014               	movlw	20
  6517  0335                     u4185:	
  6518  0335  35B3               	lslf	??_Adf_Write_Register_Three+8,f
  6519  0336  0DB4               	rlf	??_Adf_Write_Register_Three+9,f
  6520  0337  0DB5               	rlf	??_Adf_Write_Register_Three+10,f
  6521  0338  0DB6               	rlf	??_Adf_Write_Register_Three+11,f
  6522  0339  0B89               	decfsz	9,f
  6523  033A  2B35               	goto	u4185
  6524  033B  0021               	movlb	1	; select bank1
  6525  033C  0843               	movf	(_adf_config^(0+128)+35),w
  6526  033D  390F               	andlw	15
  6527  033E  0020               	movlb	0	; select bank0
  6528  033F  00B7               	movwf	??_Adf_Write_Register_Three+12
  6529  0340  01B8               	clrf	??_Adf_Write_Register_Three+13
  6530  0341  01B9               	clrf	??_Adf_Write_Register_Three+14
  6531  0342  01BA               	clrf	??_Adf_Write_Register_Three+15
  6532  0343  3010               	movlw	16
  6533  0344                     u4195:	
  6534  0344  35B7               	lslf	??_Adf_Write_Register_Three+12,f
  6535  0345  0DB8               	rlf	??_Adf_Write_Register_Three+13,f
  6536  0346  0DB9               	rlf	??_Adf_Write_Register_Three+14,f
  6537  0347  0DBA               	rlf	??_Adf_Write_Register_Three+15,f
  6538  0348  0B89               	decfsz	9,f
  6539  0349  2B44               	goto	u4195
  6540  034A  0021               	movlb	1	; select bank1
  6541  034B  0842               	movf	(_adf_config^(0+128)+34),w
  6542  034C  3901               	andlw	1
  6543  034D  0020               	movlb	0	; select bank0
  6544  034E  00BB               	movwf	??_Adf_Write_Register_Three+16
  6545  034F  01BC               	clrf	??_Adf_Write_Register_Three+17
  6546  0350  01BD               	clrf	??_Adf_Write_Register_Three+18
  6547  0351  01BE               	clrf	??_Adf_Write_Register_Three+19
  6548  0352  300F               	movlw	15
  6549  0353                     u4205:	
  6550  0353  35BB               	lslf	??_Adf_Write_Register_Three+16,f
  6551  0354  0DBC               	rlf	??_Adf_Write_Register_Three+17,f
  6552  0355  0DBD               	rlf	??_Adf_Write_Register_Three+18,f
  6553  0356  0DBE               	rlf	??_Adf_Write_Register_Three+19,f
  6554  0357  0B89               	decfsz	9,f
  6555  0358  2B53               	goto	u4205
  6556  0359  0021               	movlb	1	; select bank1
  6557  035A  0841               	movf	(_adf_config^(0+128)+33),w
  6558  035B  390F               	andlw	15
  6559  035C  0020               	movlb	0	; select bank0
  6560  035D  00BF               	movwf	??_Adf_Write_Register_Three+20
  6561  035E  01C0               	clrf	??_Adf_Write_Register_Three+21
  6562  035F  01C1               	clrf	??_Adf_Write_Register_Three+22
  6563  0360  01C2               	clrf	??_Adf_Write_Register_Three+23
  6564  0361  300B               	movlw	11
  6565  0362                     u4215:	
  6566  0362  35BF               	lslf	??_Adf_Write_Register_Three+20,f
  6567  0363  0DC0               	rlf	??_Adf_Write_Register_Three+21,f
  6568  0364  0DC1               	rlf	??_Adf_Write_Register_Three+22,f
  6569  0365  0DC2               	rlf	??_Adf_Write_Register_Three+23,f
  6570  0366  0B89               	decfsz	9,f
  6571  0367  2B62               	goto	u4215
  6572  0368  0021               	movlb	1	; select bank1
  6573  0369  0840               	movf	(_adf_config^(0+128)+32),w
  6574  036A  3901               	andlw	1
  6575  036B  0020               	movlb	0	; select bank0
  6576  036C  00C3               	movwf	??_Adf_Write_Register_Three+24
  6577  036D  01C4               	clrf	??_Adf_Write_Register_Three+25
  6578  036E  01C5               	clrf	??_Adf_Write_Register_Three+26
  6579  036F  01C6               	clrf	??_Adf_Write_Register_Three+27
  6580  0370  300A               	movlw	10
  6581  0371                     u4225:	
  6582  0371  35C3               	lslf	??_Adf_Write_Register_Three+24,f
  6583  0372  0DC4               	rlf	??_Adf_Write_Register_Three+25,f
  6584  0373  0DC5               	rlf	??_Adf_Write_Register_Three+26,f
  6585  0374  0DC6               	rlf	??_Adf_Write_Register_Three+27,f
  6586  0375  0B89               	decfsz	9,f
  6587  0376  2B71               	goto	u4225
  6588  0377  0021               	movlb	1	; select bank1
  6589  0378  083F               	movf	(_adf_config^(0+128)+31),w
  6590  0379  3901               	andlw	1
  6591  037A  0020               	movlb	0	; select bank0
  6592  037B  00C7               	movwf	??_Adf_Write_Register_Three+28
  6593  037C  01C8               	clrf	??_Adf_Write_Register_Three+29
  6594  037D  01C9               	clrf	??_Adf_Write_Register_Three+30
  6595  037E  01CA               	clrf	??_Adf_Write_Register_Three+31
  6596  037F  3009               	movlw	9
  6597  0380                     u4235:	
  6598  0380  35C7               	lslf	??_Adf_Write_Register_Three+28,f
  6599  0381  0DC8               	rlf	??_Adf_Write_Register_Three+29,f
  6600  0382  0DC9               	rlf	??_Adf_Write_Register_Three+30,f
  6601  0383  0DCA               	rlf	??_Adf_Write_Register_Three+31,f
  6602  0384  0B89               	decfsz	9,f
  6603  0385  2B80               	goto	u4235
  6604  0386  0021               	movlb	1	; select bank1
  6605  0387  083E               	movf	(_adf_config^(0+128)+30),w
  6606  0388  3901               	andlw	1
  6607  0389  0020               	movlb	0	; select bank0
  6608  038A  00CB               	movwf	??_Adf_Write_Register_Three+32
  6609  038B  01CC               	clrf	??_Adf_Write_Register_Three+33
  6610  038C  01CD               	clrf	??_Adf_Write_Register_Three+34
  6611  038D  01CE               	clrf	??_Adf_Write_Register_Three+35
  6612  038E  3008               	movlw	8
  6613  038F                     u4245:	
  6614  038F  35CB               	lslf	??_Adf_Write_Register_Three+32,f
  6615  0390  0DCC               	rlf	??_Adf_Write_Register_Three+33,f
  6616  0391  0DCD               	rlf	??_Adf_Write_Register_Three+34,f
  6617  0392  0DCE               	rlf	??_Adf_Write_Register_Three+35,f
  6618  0393  0B89               	decfsz	9,f
  6619  0394  2B8F               	goto	u4245
  6620  0395  0021               	movlb	1	; select bank1
  6621  0396  083D               	movf	(_adf_config^(0+128)+29),w
  6622  0397  3903               	andlw	3
  6623  0398  0020               	movlb	0	; select bank0
  6624  0399  00CF               	movwf	??_Adf_Write_Register_Three+36
  6625  039A  01D0               	clrf	??_Adf_Write_Register_Three+37
  6626  039B  01D1               	clrf	??_Adf_Write_Register_Three+38
  6627  039C  01D2               	clrf	??_Adf_Write_Register_Three+39
  6628  039D  3006               	movlw	6
  6629  039E                     u4255:	
  6630  039E  35CF               	lslf	??_Adf_Write_Register_Three+36,f
  6631  039F  0DD0               	rlf	??_Adf_Write_Register_Three+37,f
  6632  03A0  0DD1               	rlf	??_Adf_Write_Register_Three+38,f
  6633  03A1  0DD2               	rlf	??_Adf_Write_Register_Three+39,f
  6634  03A2  0B89               	decfsz	9,f
  6635  03A3  2B9E               	goto	u4255
  6636  03A4  0021               	movlb	1	; select bank1
  6637  03A5  083C               	movf	(_adf_config^(0+128)+28),w
  6638  03A6  3901               	andlw	1
  6639  03A7  0020               	movlb	0	; select bank0
  6640  03A8  00D3               	movwf	??_Adf_Write_Register_Three+40
  6641  03A9  01D4               	clrf	??_Adf_Write_Register_Three+41
  6642  03AA  01D5               	clrf	??_Adf_Write_Register_Three+42
  6643  03AB  01D6               	clrf	??_Adf_Write_Register_Three+43
  6644  03AC  3005               	movlw	5
  6645  03AD                     u4265:	
  6646  03AD  35D3               	lslf	??_Adf_Write_Register_Three+40,f
  6647  03AE  0DD4               	rlf	??_Adf_Write_Register_Three+41,f
  6648  03AF  0DD5               	rlf	??_Adf_Write_Register_Three+42,f
  6649  03B0  0DD6               	rlf	??_Adf_Write_Register_Three+43,f
  6650  03B1  0B89               	decfsz	9,f
  6651  03B2  2BAD               	goto	u4265
  6652  03B3  0021               	movlb	1	; select bank1
  6653  03B4  083B               	movf	(_adf_config^(0+128)+27),w
  6654  03B5  3901               	andlw	1
  6655  03B6  0020               	movlb	0	; select bank0
  6656  03B7  00D7               	movwf	??_Adf_Write_Register_Three+44
  6657  03B8  01D8               	clrf	??_Adf_Write_Register_Three+45
  6658  03B9  01D9               	clrf	??_Adf_Write_Register_Three+46
  6659  03BA  01DA               	clrf	??_Adf_Write_Register_Three+47
  6660  03BB  3004               	movlw	4
  6661  03BC                     u4275:	
  6662  03BC  35D7               	lslf	??_Adf_Write_Register_Three+44,f
  6663  03BD  0DD8               	rlf	??_Adf_Write_Register_Three+45,f
  6664  03BE  0DD9               	rlf	??_Adf_Write_Register_Three+46,f
  6665  03BF  0DDA               	rlf	??_Adf_Write_Register_Three+47,f
  6666  03C0  0B89               	decfsz	9,f
  6667  03C1  2BBC               	goto	u4275
  6668  03C2  0021               	movlb	1	; select bank1
  6669  03C3  083A               	movf	(_adf_config^(0+128)+26),w
  6670  03C4  3901               	andlw	1
  6671  03C5  0020               	movlb	0	; select bank0
  6672  03C6  00DB               	movwf	??_Adf_Write_Register_Three+48
  6673  03C7  01DC               	clrf	??_Adf_Write_Register_Three+49
  6674  03C8  01DD               	clrf	??_Adf_Write_Register_Three+50
  6675  03C9  01DE               	clrf	??_Adf_Write_Register_Three+51
  6676  03CA  3003               	movlw	3
  6677  03CB                     u4285:	
  6678  03CB  35DB               	lslf	??_Adf_Write_Register_Three+48,f
  6679  03CC  0DDC               	rlf	??_Adf_Write_Register_Three+49,f
  6680  03CD  0DDD               	rlf	??_Adf_Write_Register_Three+50,f
  6681  03CE  0DDE               	rlf	??_Adf_Write_Register_Three+51,f
  6682  03CF  0B89               	decfsz	9,f
  6683  03D0  2BCB               	goto	u4285
  6684  03D1  0021               	movlb	1	; select bank1
  6685  03D2  0839               	movf	(_adf_config^(0+128)+25),w
  6686  03D3  3901               	andlw	1
  6687  03D4  0020               	movlb	0	; select bank0
  6688  03D5  00DF               	movwf	??_Adf_Write_Register_Three+52
  6689  03D6  01E0               	clrf	??_Adf_Write_Register_Three+53
  6690  03D7  01E1               	clrf	??_Adf_Write_Register_Three+54
  6691  03D8  01E2               	clrf	??_Adf_Write_Register_Three+55
  6692  03D9  3002               	movlw	2
  6693  03DA                     u4295:	
  6694  03DA  35DF               	lslf	??_Adf_Write_Register_Three+52,f
  6695  03DB  0DE0               	rlf	??_Adf_Write_Register_Three+53,f
  6696  03DC  0DE1               	rlf	??_Adf_Write_Register_Three+54,f
  6697  03DD  0DE2               	rlf	??_Adf_Write_Register_Three+55,f
  6698  03DE  0B89               	decfsz	9,f
  6699  03DF  2BDA               	goto	u4295
  6700  03E0  085F               	movf	??_Adf_Write_Register_Three+52,w
  6701  03E1  04DB               	iorwf	??_Adf_Write_Register_Three+48,f
  6702  03E2  0860               	movf	??_Adf_Write_Register_Three+53,w
  6703  03E3  04DC               	iorwf	??_Adf_Write_Register_Three+49,f
  6704  03E4  0861               	movf	??_Adf_Write_Register_Three+54,w
  6705  03E5  04DD               	iorwf	??_Adf_Write_Register_Three+50,f
  6706  03E6  0862               	movf	??_Adf_Write_Register_Three+55,w
  6707  03E7  04DE               	iorwf	??_Adf_Write_Register_Three+51,f
  6708  03E8  085B               	movf	??_Adf_Write_Register_Three+48,w
  6709  03E9  04D7               	iorwf	??_Adf_Write_Register_Three+44,f
  6710  03EA  085C               	movf	??_Adf_Write_Register_Three+49,w
  6711  03EB  04D8               	iorwf	??_Adf_Write_Register_Three+45,f
  6712  03EC  085D               	movf	??_Adf_Write_Register_Three+50,w
  6713  03ED  04D9               	iorwf	??_Adf_Write_Register_Three+46,f
  6714  03EE  085E               	movf	??_Adf_Write_Register_Three+51,w
  6715  03EF  04DA               	iorwf	??_Adf_Write_Register_Three+47,f
  6716  03F0  0857               	movf	??_Adf_Write_Register_Three+44,w
  6717  03F1  04D3               	iorwf	??_Adf_Write_Register_Three+40,f
  6718  03F2  0858               	movf	??_Adf_Write_Register_Three+45,w
  6719  03F3  04D4               	iorwf	??_Adf_Write_Register_Three+41,f
  6720  03F4  0859               	movf	??_Adf_Write_Register_Three+46,w
  6721  03F5  04D5               	iorwf	??_Adf_Write_Register_Three+42,f
  6722  03F6  085A               	movf	??_Adf_Write_Register_Three+47,w
  6723  03F7  04D6               	iorwf	??_Adf_Write_Register_Three+43,f
  6724  03F8  0853               	movf	??_Adf_Write_Register_Three+40,w
  6725  03F9  04CF               	iorwf	??_Adf_Write_Register_Three+36,f
  6726  03FA  0854               	movf	??_Adf_Write_Register_Three+41,w
  6727  03FB  04D0               	iorwf	??_Adf_Write_Register_Three+37,f
  6728  03FC  0855               	movf	??_Adf_Write_Register_Three+42,w
  6729  03FD  04D1               	iorwf	??_Adf_Write_Register_Three+38,f
  6730  03FE  0856               	movf	??_Adf_Write_Register_Three+43,w
  6731  03FF  04D2               	iorwf	??_Adf_Write_Register_Three+39,f
  6732  0400  084F               	movf	??_Adf_Write_Register_Three+36,w
  6733  0401  04CB               	iorwf	??_Adf_Write_Register_Three+32,f
  6734  0402  0850               	movf	??_Adf_Write_Register_Three+37,w
  6735  0403  04CC               	iorwf	??_Adf_Write_Register_Three+33,f
  6736  0404  0851               	movf	??_Adf_Write_Register_Three+38,w
  6737  0405  04CD               	iorwf	??_Adf_Write_Register_Three+34,f
  6738  0406  0852               	movf	??_Adf_Write_Register_Three+39,w
  6739  0407  04CE               	iorwf	??_Adf_Write_Register_Three+35,f
  6740  0408  084B               	movf	??_Adf_Write_Register_Three+32,w
  6741  0409  04C7               	iorwf	??_Adf_Write_Register_Three+28,f
  6742  040A  084C               	movf	??_Adf_Write_Register_Three+33,w
  6743  040B  04C8               	iorwf	??_Adf_Write_Register_Three+29,f
  6744  040C  084D               	movf	??_Adf_Write_Register_Three+34,w
  6745  040D  04C9               	iorwf	??_Adf_Write_Register_Three+30,f
  6746  040E  084E               	movf	??_Adf_Write_Register_Three+35,w
  6747  040F  04CA               	iorwf	??_Adf_Write_Register_Three+31,f
  6748  0410  0847               	movf	??_Adf_Write_Register_Three+28,w
  6749  0411  04C3               	iorwf	??_Adf_Write_Register_Three+24,f
  6750  0412  0848               	movf	??_Adf_Write_Register_Three+29,w
  6751  0413  04C4               	iorwf	??_Adf_Write_Register_Three+25,f
  6752  0414  0849               	movf	??_Adf_Write_Register_Three+30,w
  6753  0415  04C5               	iorwf	??_Adf_Write_Register_Three+26,f
  6754  0416  084A               	movf	??_Adf_Write_Register_Three+31,w
  6755  0417  04C6               	iorwf	??_Adf_Write_Register_Three+27,f
  6756  0418  0843               	movf	??_Adf_Write_Register_Three+24,w
  6757  0419  04BF               	iorwf	??_Adf_Write_Register_Three+20,f
  6758  041A  0844               	movf	??_Adf_Write_Register_Three+25,w
  6759  041B  04C0               	iorwf	??_Adf_Write_Register_Three+21,f
  6760  041C  0845               	movf	??_Adf_Write_Register_Three+26,w
  6761  041D  04C1               	iorwf	??_Adf_Write_Register_Three+22,f
  6762  041E  0846               	movf	??_Adf_Write_Register_Three+27,w
  6763  041F  04C2               	iorwf	??_Adf_Write_Register_Three+23,f
  6764  0420  083F               	movf	??_Adf_Write_Register_Three+20,w
  6765  0421  04BB               	iorwf	??_Adf_Write_Register_Three+16,f
  6766  0422  0840               	movf	??_Adf_Write_Register_Three+21,w
  6767  0423  04BC               	iorwf	??_Adf_Write_Register_Three+17,f
  6768  0424  0841               	movf	??_Adf_Write_Register_Three+22,w
  6769  0425  04BD               	iorwf	??_Adf_Write_Register_Three+18,f
  6770  0426  0842               	movf	??_Adf_Write_Register_Three+23,w
  6771  0427  04BE               	iorwf	??_Adf_Write_Register_Three+19,f
  6772  0428  083B               	movf	??_Adf_Write_Register_Three+16,w
  6773  0429  04B7               	iorwf	??_Adf_Write_Register_Three+12,f
  6774  042A  083C               	movf	??_Adf_Write_Register_Three+17,w
  6775  042B  04B8               	iorwf	??_Adf_Write_Register_Three+13,f
  6776  042C  083D               	movf	??_Adf_Write_Register_Three+18,w
  6777  042D  04B9               	iorwf	??_Adf_Write_Register_Three+14,f
  6778  042E  083E               	movf	??_Adf_Write_Register_Three+19,w
  6779  042F  04BA               	iorwf	??_Adf_Write_Register_Three+15,f
  6780  0430  0837               	movf	??_Adf_Write_Register_Three+12,w
  6781  0431  04B3               	iorwf	??_Adf_Write_Register_Three+8,f
  6782  0432  0838               	movf	??_Adf_Write_Register_Three+13,w
  6783  0433  04B4               	iorwf	??_Adf_Write_Register_Three+9,f
  6784  0434  0839               	movf	??_Adf_Write_Register_Three+14,w
  6785  0435  04B5               	iorwf	??_Adf_Write_Register_Three+10,f
  6786  0436  083A               	movf	??_Adf_Write_Register_Three+15,w
  6787  0437  04B6               	iorwf	??_Adf_Write_Register_Three+11,f
  6788  0438  0833               	movf	??_Adf_Write_Register_Three+8,w
  6789  0439  04AF               	iorwf	??_Adf_Write_Register_Three+4,f
  6790  043A  0834               	movf	??_Adf_Write_Register_Three+9,w
  6791  043B  04B0               	iorwf	??_Adf_Write_Register_Three+5,f
  6792  043C  0835               	movf	??_Adf_Write_Register_Three+10,w
  6793  043D  04B1               	iorwf	??_Adf_Write_Register_Three+6,f
  6794  043E  0836               	movf	??_Adf_Write_Register_Three+11,w
  6795  043F  04B2               	iorwf	??_Adf_Write_Register_Three+7,f
  6796  0440  082F               	movf	??_Adf_Write_Register_Three+4,w
  6797  0441  04AB               	iorwf	??_Adf_Write_Register_Three,f
  6798  0442  0830               	movf	??_Adf_Write_Register_Three+5,w
  6799  0443  04AC               	iorwf	??_Adf_Write_Register_Three+1,f
  6800  0444  0831               	movf	??_Adf_Write_Register_Three+6,w
  6801  0445  04AD               	iorwf	??_Adf_Write_Register_Three+2,f
  6802  0446  0832               	movf	??_Adf_Write_Register_Three+7,w
  6803  0447  04AE               	iorwf	??_Adf_Write_Register_Three+3,f
  6804  0448  3003               	movlw	3
  6805  0449  042B               	iorwf	??_Adf_Write_Register_Three,w
  6806  044A  00E7               	movwf	Adf_Write_Register_Three@reg
  6807  044B  3000               	movlw	0
  6808  044C  042C               	iorwf	??_Adf_Write_Register_Three+1,w
  6809  044D  00E8               	movwf	Adf_Write_Register_Three@reg+1
  6810  044E  3000               	movlw	0
  6811  044F  042D               	iorwf	??_Adf_Write_Register_Three+2,w
  6812  0450  00E9               	movwf	Adf_Write_Register_Three@reg+2
  6813  0451  3000               	movlw	0
  6814  0452  042E               	iorwf	??_Adf_Write_Register_Three+3,w
  6815  0453  00EA               	movwf	Adf_Write_Register_Three@reg+3
  6816                           
  6817                           ;adf7012.c: 226: uint8_t reg_ptr[4];
  6818                           ;adf7012.c: 227: memcpy(reg_ptr, &reg, 4);
  6819  0454  3067               	movlw	Adf_Write_Register_Three@reg& (0+255)
  6820  0455  00AB               	movwf	??_Adf_Write_Register_Three
  6821  0456  082B               	movf	??_Adf_Write_Register_Three,w
  6822  0457  00F2               	movwf	memcpy@s1
  6823  0458  3004               	movlw	4
  6824  0459  00F3               	movwf	memcpy@n
  6825  045A  3000               	movlw	0
  6826  045B  00F4               	movwf	memcpy@n+1
  6827  045C  3063               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6828  045D  3196  26C6  3183   	fcall	_memcpy
  6829                           
  6830                           ;adf7012.c: 228: Reverse_Array(reg_ptr,4);
  6831  0460  3004               	movlw	4
  6832  0461  0020               	movlb	0	; select bank0
  6833  0462  00AB               	movwf	??_Adf_Write_Register_Three
  6834  0463  082B               	movf	??_Adf_Write_Register_Three,w
  6835  0464  00F9               	movwf	Reverse_Array@length
  6836  0465  3063               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6837  0466  3197  27CC  3183   	fcall	_Reverse_Array
  6838                           
  6839                           ;adf7012.c: 229: Write_Adf7012_Reg(reg_ptr, 4);
  6840  0469  3004               	movlw	4
  6841  046A  0020               	movlb	0	; select bank0
  6842  046B  00AB               	movwf	??_Adf_Write_Register_Three
  6843  046C  082B               	movf	??_Adf_Write_Register_Three,w
  6844  046D  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  6845  046E  3063               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6846  046F  3188  205C         	fcall	_Write_Adf7012_Reg
  6847  0471  0008               	return
  6848  0472                     __end_of_Adf_Write_Register_Three:	
  6849                           
  6850                           	psect	text33
  6851  0948                     __ptext33:	
  6852 ;; *************** function _Adf_Write_Register_One *****************
  6853 ;; Defined at:
  6854 ;;		line 177 in file "adf7012.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  reg             4   26[BANK0 ] unsigned long 
  6859 ;;  reg_ptr         3   23[BANK0 ] unsigned char [3]
  6860 ;; Return value:  Size  Location     Type
  6861 ;;		None               void
  6862 ;; Registers used:
  6863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6870 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6871 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6872 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6873 ;;Total ram usage:       19 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    5
  6876 ;; This function calls:
  6877 ;;		_Reverse_Array
  6878 ;;		_Write_Adf7012_Reg
  6879 ;;		_memcpy
  6880 ;; This function is called by:
  6881 ;;		_Adf_Write_Config
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           
  6886                           ;psect for function _Adf_Write_Register_One
  6887  0948                     _Adf_Write_Register_One:	
  6888                           
  6889                           ;adf7012.c: 178: uint32_t reg =
  6890                           ;adf7012.c: 179: (1) |
  6891                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  6892                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  6893                           ;adf7012.c: 182: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  6894                           
  6895                           ;incstack = 0
  6896                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6897  0948  0021               	movlb	1	; select bank1
  6898  0949  082F               	movf	(_adf_config^(0+128)+15),w
  6899  094A  3901               	andlw	1
  6900  094B  0020               	movlb	0	; select bank0
  6901  094C  00AB               	movwf	??_Adf_Write_Register_One
  6902  094D  01AC               	clrf	??_Adf_Write_Register_One+1
  6903  094E  01AD               	clrf	??_Adf_Write_Register_One+2
  6904  094F  01AE               	clrf	??_Adf_Write_Register_One+3
  6905  0950  3016               	movlw	22
  6906  0951                     u4075:	
  6907  0951  35AB               	lslf	??_Adf_Write_Register_One,f
  6908  0952  0DAC               	rlf	??_Adf_Write_Register_One+1,f
  6909  0953  0DAD               	rlf	??_Adf_Write_Register_One+2,f
  6910  0954  0DAE               	rlf	??_Adf_Write_Register_One+3,f
  6911  0955  0B89               	decfsz	9,f
  6912  0956  2951               	goto	u4075
  6913  0957  0021               	movlb	1	; select bank1
  6914  0958  082E               	movf	(_adf_config^(0+128)+14),w
  6915  0959  0020               	movlb	0	; select bank0
  6916  095A  00AF               	movwf	??_Adf_Write_Register_One+4
  6917  095B  01B0               	clrf	??_Adf_Write_Register_One+5
  6918  095C  01B1               	clrf	??_Adf_Write_Register_One+6
  6919  095D  01B2               	clrf	??_Adf_Write_Register_One+7
  6920  095E  300E               	movlw	14
  6921  095F                     u4085:	
  6922  095F  35AF               	lslf	??_Adf_Write_Register_One+4,f
  6923  0960  0DB0               	rlf	??_Adf_Write_Register_One+5,f
  6924  0961  0DB1               	rlf	??_Adf_Write_Register_One+6,f
  6925  0962  0DB2               	rlf	??_Adf_Write_Register_One+7,f
  6926  0963  0B89               	decfsz	9,f
  6927  0964  295F               	goto	u4085
  6928  0965  300A               	movlw	10
  6929  0966  3EA0               	addlw	_adf_config& (0+255)
  6930  0967  0086               	movwf	6
  6931  0968  0187               	clrf	7
  6932  0969  30FF               	movlw	255
  6933  096A  0501               	andwf	1,w
  6934  096B  00B3               	movwf	??_Adf_Write_Register_One+8
  6935  096C  3141               	addfsr 1,1
  6936  096D  300F               	movlw	15
  6937  096E  0501               	andwf	1,w
  6938  096F  00B4               	movwf	??_Adf_Write_Register_One+9
  6939  0970  3141               	addfsr 1,1
  6940  0971  3000               	movlw	0
  6941  0972  0501               	andwf	1,w
  6942  0973  00B5               	movwf	??_Adf_Write_Register_One+10
  6943  0974  3141               	addfsr 1,1
  6944  0975  3000               	movlw	0
  6945  0976  0501               	andwf	1,w
  6946  0977  00B6               	movwf	??_Adf_Write_Register_One+11
  6947  0978  3002               	movlw	2
  6948  0979                     u4095:	
  6949  0979  35B3               	lslf	??_Adf_Write_Register_One+8,f
  6950  097A  0DB4               	rlf	??_Adf_Write_Register_One+9,f
  6951  097B  0DB5               	rlf	??_Adf_Write_Register_One+10,f
  6952  097C  0DB6               	rlf	??_Adf_Write_Register_One+11,f
  6953  097D  0B89               	decfsz	9,f
  6954  097E  2979               	goto	u4095
  6955  097F  0833               	movf	??_Adf_Write_Register_One+8,w
  6956  0980  04AF               	iorwf	??_Adf_Write_Register_One+4,f
  6957  0981  0834               	movf	??_Adf_Write_Register_One+9,w
  6958  0982  04B0               	iorwf	??_Adf_Write_Register_One+5,f
  6959  0983  0835               	movf	??_Adf_Write_Register_One+10,w
  6960  0984  04B1               	iorwf	??_Adf_Write_Register_One+6,f
  6961  0985  0836               	movf	??_Adf_Write_Register_One+11,w
  6962  0986  04B2               	iorwf	??_Adf_Write_Register_One+7,f
  6963  0987  082F               	movf	??_Adf_Write_Register_One+4,w
  6964  0988  04AB               	iorwf	??_Adf_Write_Register_One,f
  6965  0989  0830               	movf	??_Adf_Write_Register_One+5,w
  6966  098A  04AC               	iorwf	??_Adf_Write_Register_One+1,f
  6967  098B  0831               	movf	??_Adf_Write_Register_One+6,w
  6968  098C  04AD               	iorwf	??_Adf_Write_Register_One+2,f
  6969  098D  0832               	movf	??_Adf_Write_Register_One+7,w
  6970  098E  04AE               	iorwf	??_Adf_Write_Register_One+3,f
  6971  098F  3001               	movlw	1
  6972  0990  042B               	iorwf	??_Adf_Write_Register_One,w
  6973  0991  00BA               	movwf	Adf_Write_Register_One@reg
  6974  0992  3000               	movlw	0
  6975  0993  042C               	iorwf	??_Adf_Write_Register_One+1,w
  6976  0994  00BB               	movwf	Adf_Write_Register_One@reg+1
  6977  0995  3000               	movlw	0
  6978  0996  042D               	iorwf	??_Adf_Write_Register_One+2,w
  6979  0997  00BC               	movwf	Adf_Write_Register_One@reg+2
  6980  0998  3000               	movlw	0
  6981  0999  042E               	iorwf	??_Adf_Write_Register_One+3,w
  6982  099A  00BD               	movwf	Adf_Write_Register_One@reg+3
  6983                           
  6984                           ;adf7012.c: 184: uint8_t reg_ptr[3];
  6985                           ;adf7012.c: 185: memcpy(reg_ptr, &reg, 3);
  6986  099B  303A               	movlw	Adf_Write_Register_One@reg& (0+255)
  6987  099C  00AB               	movwf	??_Adf_Write_Register_One
  6988  099D  082B               	movf	??_Adf_Write_Register_One,w
  6989  099E  00F2               	movwf	memcpy@s1
  6990  099F  3003               	movlw	3
  6991  09A0  00F3               	movwf	memcpy@n
  6992  09A1  3000               	movlw	0
  6993  09A2  00F4               	movwf	memcpy@n+1
  6994  09A3  3037               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  6995  09A4  3196  26C6  3189   	fcall	_memcpy
  6996                           
  6997                           ;adf7012.c: 186: Reverse_Array(reg_ptr,3);
  6998  09A7  3003               	movlw	3
  6999  09A8  0020               	movlb	0	; select bank0
  7000  09A9  00AB               	movwf	??_Adf_Write_Register_One
  7001  09AA  082B               	movf	??_Adf_Write_Register_One,w
  7002  09AB  00F9               	movwf	Reverse_Array@length
  7003  09AC  3037               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  7004  09AD  3197  27CC  3189   	fcall	_Reverse_Array
  7005                           
  7006                           ;adf7012.c: 187: Write_Adf7012_Reg(reg_ptr, 3);
  7007  09B0  3003               	movlw	3
  7008  09B1  0020               	movlb	0	; select bank0
  7009  09B2  00AB               	movwf	??_Adf_Write_Register_One
  7010  09B3  082B               	movf	??_Adf_Write_Register_One,w
  7011  09B4  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  7012  09B5  3037               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  7013  09B6  3188  205C         	fcall	_Write_Adf7012_Reg
  7014  09B8  0008               	return
  7015  09B9                     __end_of_Adf_Write_Register_One:	
  7016                           
  7017                           	psect	text34
  7018  085C                     __ptext34:	
  7019 ;; *************** function _Write_Adf7012_Reg *****************
  7020 ;; Defined at:
  7021 ;;		line 89 in file "utility.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  reg_value       1    wreg     PTR unsigned char 
  7024 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7025 ;;  size_of_reg     1    3[BANK0 ] unsigned char 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;  reg_value       1    5[BANK0 ] PTR unsigned char 
  7028 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7029 ;;  i               1    6[BANK0 ] unsigned char 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  1    wreg      unsigned char 
  7032 ;; Registers used:
  7033 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7039 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;Total ram usage:        4 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    4
  7046 ;; This function calls:
  7047 ;;		_Delay_ms
  7048 ;;		_Spi_Byte_Send
  7049 ;; This function is called by:
  7050 ;;		_Adf_Write_Register_Zero
  7051 ;;		_Adf_Write_Register_One
  7052 ;;		_Adf_Write_Register_Two
  7053 ;;		_Adf_Write_Register_Three
  7054 ;; This function uses a non-reentrant model
  7055 ;;
  7056                           
  7057                           
  7058                           ;psect for function _Write_Adf7012_Reg
  7059  085C                     _Write_Adf7012_Reg:	
  7060                           
  7061                           ;incstack = 0
  7062                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7063                           ;Write_Adf7012_Reg@reg_value stored from wreg
  7064  085C  0020               	movlb	0	; select bank0
  7065  085D  00A5               	movwf	Write_Adf7012_Reg@reg_value
  7066                           
  7067                           ;utility.c: 91: uint8_t i = 0;
  7068  085E  01A6               	clrf	Write_Adf7012_Reg@i
  7069                           
  7070                           ;utility.c: 92: Delay_ms(1);
  7071  085F  3001               	movlw	1
  7072  0860  00F7               	movwf	Delay_ms@time_to_delay
  7073  0861  3000               	movlw	0
  7074  0862  00F8               	movwf	Delay_ms@time_to_delay+1
  7075  0863  3195  259D  3188   	fcall	_Delay_ms
  7076                           
  7077                           ;utility.c: 93: PORTAbits.RA4 = 0;;
  7078  0866  0020               	movlb	0	; select bank0
  7079  0867  120C               	bcf	12,4	;volatile
  7080                           
  7081                           ;utility.c: 94: Delay_ms(1);
  7082  0868  3001               	movlw	1
  7083  0869  00F7               	movwf	Delay_ms@time_to_delay
  7084  086A  3000               	movlw	0
  7085  086B  00F8               	movwf	Delay_ms@time_to_delay+1
  7086  086C  3195  259D  3188   	fcall	_Delay_ms
  7087                           
  7088                           ;utility.c: 96: for (i = 0; i < size_of_reg; i++){
  7089  086F  0020               	movlb	0	; select bank0
  7090  0870  01A6               	clrf	Write_Adf7012_Reg@i
  7091  0871                     l3031:	
  7092  0871  0823               	movf	Write_Adf7012_Reg@size_of_reg,w
  7093  0872  0226               	subwf	Write_Adf7012_Reg@i,w
  7094  0873  1803               	btfsc	3,0
  7095  0874  2885               	goto	l3033
  7096                           
  7097                           ;utility.c: 97: Spi_Byte_Send(*(reg_value+i));
  7098  0875  0826               	movf	Write_Adf7012_Reg@i,w
  7099  0876  0725               	addwf	Write_Adf7012_Reg@reg_value,w
  7100  0877  00A4               	movwf	??_Write_Adf7012_Reg
  7101  0878  0824               	movf	??_Write_Adf7012_Reg,w
  7102  0879  0086               	movwf	6
  7103  087A  0187               	clrf	7
  7104  087B  0801               	movf	1,w
  7105  087C  3196  26EE  3188   	fcall	_Spi_Byte_Send
  7106  087F  3001               	movlw	1
  7107  0880  0020               	movlb	0	; select bank0
  7108  0881  00A4               	movwf	??_Write_Adf7012_Reg
  7109  0882  0824               	movf	??_Write_Adf7012_Reg,w
  7110  0883  07A6               	addwf	Write_Adf7012_Reg@i,f
  7111  0884  2871               	goto	l3031
  7112  0885                     l3033:	
  7113                           
  7114                           ;utility.c: 98: }
  7115                           ;utility.c: 100: Delay_ms(1);
  7116  0885  3001               	movlw	1
  7117  0886  00F7               	movwf	Delay_ms@time_to_delay
  7118  0887  3000               	movlw	0
  7119  0888  00F8               	movwf	Delay_ms@time_to_delay+1
  7120  0889  3195  259D  3188   	fcall	_Delay_ms
  7121                           
  7122                           ;utility.c: 101: PORTAbits.RA4 = 1;;
  7123  088C  0020               	movlb	0	; select bank0
  7124  088D  160C               	bsf	12,4	;volatile
  7125                           
  7126                           ;utility.c: 103: Delay_ms(1);
  7127  088E  3001               	movlw	1
  7128  088F  00F7               	movwf	Delay_ms@time_to_delay
  7129  0890  3000               	movlw	0
  7130  0891  00F8               	movwf	Delay_ms@time_to_delay+1
  7131  0892  3195  259D         	fcall	_Delay_ms
  7132  0894  0008               	return
  7133  0895                     __end_of_Write_Adf7012_Reg:	
  7134                           ;utility.c: 104: return 1;
  7135                           ;	Return value of _Write_Adf7012_Reg is never used
  7136                           
  7137                           
  7138                           	psect	text35
  7139  16EE                     __ptext35:	
  7140 ;; *************** function _Spi_Byte_Send *****************
  7141 ;; Defined at:
  7142 ;;		line 227 in file "utility.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  data            1    wreg     unsigned char 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  data            1    0[BANK0 ] unsigned char 
  7147 ;;  i               1    2[BANK0 ] unsigned char 
  7148 ;;  data_to_send    1    1[BANK0 ] unsigned char 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      unsigned char 
  7151 ;; Registers used:
  7152 ;;		wreg, status,2, status,0, pclath, cstack
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7159 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7161 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;Total ram usage:        4 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    3
  7165 ;; This function calls:
  7166 ;;		_Delay_ms
  7167 ;; This function is called by:
  7168 ;;		_Write_Adf7012_Reg
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           
  7173                           ;psect for function _Spi_Byte_Send
  7174  16EE                     _Spi_Byte_Send:	
  7175                           
  7176                           ;incstack = 0
  7177                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  7178                           ;Spi_Byte_Send@data stored from wreg
  7179  16EE  0020               	movlb	0	; select bank0
  7180  16EF  00A0               	movwf	Spi_Byte_Send@data
  7181                           
  7182                           ;utility.c: 229: PORTAbits.RA2 = 0;
  7183  16F0  110C               	bcf	12,2	;volatile
  7184                           
  7185                           ;utility.c: 230: uint8_t i;
  7186                           ;utility.c: 231: uint8_t data_to_send;
  7187                           ;utility.c: 232: data_to_send = data;
  7188  16F1  0820               	movf	Spi_Byte_Send@data,w
  7189  16F2  00F9               	movwf	??_Spi_Byte_Send
  7190  16F3  0879               	movf	??_Spi_Byte_Send,w
  7191  16F4  00A1               	movwf	Spi_Byte_Send@data_to_send
  7192                           
  7193                           ;utility.c: 233: for(i = 0; i <8; i++){
  7194  16F5  01A2               	clrf	Spi_Byte_Send@i
  7195  16F6                     L1:	
  7196  16F6  3008               	movlw	8
  7197  16F7  0222               	subwf	Spi_Byte_Send@i,w
  7198  16F8  1803               	btfsc	3,0
  7199  16F9  0008               	return
  7200                           
  7201                           ;utility.c: 235: if(data_to_send & 0x80)
  7202  16FA  1FA1               	btfss	Spi_Byte_Send@data_to_send,7
  7203  16FB  2EFE               	goto	l223
  7204                           
  7205                           ;utility.c: 236: PORTCbits.RC2 = 1;
  7206  16FC  150E               	bsf	14,2	;volatile
  7207  16FD  2EFF               	goto	l1989
  7208  16FE                     l223:	
  7209                           
  7210                           ;utility.c: 237: else
  7211                           ;utility.c: 238: PORTCbits.RC2 = 0;
  7212  16FE  110E               	bcf	14,2	;volatile
  7213  16FF                     l1989:	
  7214                           
  7215                           ;utility.c: 240: data_to_send <<= 1;
  7216  16FF  1003               	clrc
  7217  1700  0DA1               	rlf	Spi_Byte_Send@data_to_send,f
  7218                           
  7219                           ;utility.c: 242: PORTAbits.RA2 = 1;
  7220  1701  150C               	bsf	12,2	;volatile
  7221                           
  7222                           ;utility.c: 243: Delay_ms(1);
  7223  1702  3001               	movlw	1
  7224  1703  00F7               	movwf	Delay_ms@time_to_delay
  7225  1704  3000               	movlw	0
  7226  1705  00F8               	movwf	Delay_ms@time_to_delay+1
  7227  1706  3195  259D  3196   	fcall	_Delay_ms
  7228                           
  7229                           ;utility.c: 244: PORTAbits.RA2 = 0;
  7230  1709  0020               	movlb	0	; select bank0
  7231  170A  110C               	bcf	12,2	;volatile
  7232                           
  7233                           ;utility.c: 245: Delay_ms(1);
  7234  170B  3001               	movlw	1
  7235  170C  00F7               	movwf	Delay_ms@time_to_delay
  7236  170D  3000               	movlw	0
  7237  170E  00F8               	movwf	Delay_ms@time_to_delay+1
  7238  170F  3195  259D  3196   	fcall	_Delay_ms
  7239  1712  3001               	movlw	1
  7240  1713  00F9               	movwf	??_Spi_Byte_Send
  7241  1714  0879               	movf	??_Spi_Byte_Send,w
  7242  1715  0020               	movlb	0	; select bank0
  7243  1716  07A2               	addwf	Spi_Byte_Send@i,f
  7244  1717  2EF6               	goto	L1
  7245  1718                     __end_of_Spi_Byte_Send:	
  7246                           ;utility.c: 247: }
  7247                           ;utility.c: 248: return 1;
  7248                           ;	Return value of _Spi_Byte_Send is never used
  7249                           
  7250                           
  7251                           	psect	text36
  7252  17CC                     __ptext36:	
  7253 ;; *************** function _Reverse_Array *****************
  7254 ;; Defined at:
  7255 ;;		line 205 in file "utility.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;  input           1    wreg     PTR unsigned char 
  7258 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7259 ;;  length          1    9[COMMON] unsigned char 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  input           1    9[BANK0 ] PTR unsigned char 
  7262 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7263 ;;  buffer_array    4    5[BANK0 ] unsigned char [4]
  7264 ;;  i               1   10[BANK0 ] unsigned char 
  7265 ;; Return value:  Size  Location     Type
  7266 ;;                  1    wreg      unsigned char 
  7267 ;; Registers used:
  7268 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7269 ;; Tracked objects:
  7270 ;;		On entry : 0/0
  7271 ;;		On exit  : 0/0
  7272 ;;		Unchanged: 0/0
  7273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7274 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7276 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7277 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7278 ;;Total ram usage:       12 bytes
  7279 ;; Hardware stack levels used:    1
  7280 ;; Hardware stack levels required when called:    2
  7281 ;; This function calls:
  7282 ;;		_memcpy
  7283 ;; This function is called by:
  7284 ;;		_Adf_Write_Register_Zero
  7285 ;;		_Adf_Write_Register_One
  7286 ;;		_Adf_Write_Register_Two
  7287 ;;		_Adf_Write_Register_Three
  7288 ;; This function uses a non-reentrant model
  7289 ;;
  7290                           
  7291                           
  7292                           ;psect for function _Reverse_Array
  7293  17CC                     _Reverse_Array:	
  7294                           
  7295                           ;incstack = 0
  7296                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7297                           ;Reverse_Array@input stored from wreg
  7298  17CC  0020               	movlb	0	; select bank0
  7299  17CD  00A9               	movwf	Reverse_Array@input
  7300                           
  7301                           ;utility.c: 206: uint8_t i = 0;
  7302  17CE  01AA               	clrf	Reverse_Array@i
  7303                           
  7304                           ;utility.c: 207: uint8_t buffer_array[4];
  7305                           ;utility.c: 208: memcpy(buffer_array, input, length);
  7306  17CF  0829               	movf	Reverse_Array@input,w
  7307  17D0  00A0               	movwf	??_Reverse_Array
  7308  17D1  0820               	movf	??_Reverse_Array,w
  7309  17D2  00F2               	movwf	memcpy@s1
  7310  17D3  0879               	movf	Reverse_Array@length,w
  7311  17D4  00A1               	movwf	??_Reverse_Array+1
  7312  17D5  01A2               	clrf	??_Reverse_Array+2
  7313  17D6  0821               	movf	??_Reverse_Array+1,w
  7314  17D7  00F3               	movwf	memcpy@n
  7315  17D8  0822               	movf	??_Reverse_Array+2,w
  7316  17D9  00F4               	movwf	memcpy@n+1
  7317  17DA  3025               	movlw	Reverse_Array@buffer_array& (0+255)
  7318  17DB  3196  26C6  3197   	fcall	_memcpy
  7319                           
  7320                           ;utility.c: 210: for(i = 0; i<length; i++){
  7321  17DE  0020               	movlb	0	; select bank0
  7322  17DF  01AA               	clrf	Reverse_Array@i
  7323  17E0                     l2043:	
  7324  17E0  0879               	movf	Reverse_Array@length,w
  7325  17E1  022A               	subwf	Reverse_Array@i,w
  7326  17E2  1803               	btfsc	3,0
  7327  17E3  0008               	return
  7328                           
  7329                           ;utility.c: 211: *(input+i) = *(buffer_array+(length-1)-i);
  7330  17E4  30FF               	movlw	-1
  7331  17E5  0779               	addwf	Reverse_Array@length,w
  7332  17E6  00A0               	movwf	??_Reverse_Array
  7333  17E7  3025               	movlw	Reverse_Array@buffer_array& (0+255)
  7334  17E8  0720               	addwf	??_Reverse_Array,w
  7335  17E9  00A1               	movwf	??_Reverse_Array+1
  7336  17EA  032A               	decf	Reverse_Array@i,w
  7337  17EB  3AFF               	xorlw	255
  7338  17EC  0721               	addwf	??_Reverse_Array+1,w
  7339  17ED  00A2               	movwf	??_Reverse_Array+2
  7340  17EE  0822               	movf	??_Reverse_Array+2,w
  7341  17EF  0086               	movwf	6
  7342  17F0  0187               	clrf	7
  7343  17F1  0801               	movf	1,w
  7344  17F2  00A3               	movwf	??_Reverse_Array+3
  7345  17F3  082A               	movf	Reverse_Array@i,w
  7346  17F4  0729               	addwf	Reverse_Array@input,w
  7347  17F5  00A4               	movwf	??_Reverse_Array+4
  7348  17F6  0824               	movf	??_Reverse_Array+4,w
  7349  17F7  0086               	movwf	6
  7350  17F8  0187               	clrf	7
  7351  17F9  0823               	movf	??_Reverse_Array+3,w
  7352  17FA  0081               	movwf	1
  7353  17FB  3001               	movlw	1
  7354  17FC  00A0               	movwf	??_Reverse_Array
  7355  17FD  0820               	movf	??_Reverse_Array,w
  7356  17FE  07AA               	addwf	Reverse_Array@i,f
  7357  17FF  2FE0               	goto	l2043
  7358  1800                     __end_of_Reverse_Array:	
  7359                           ;utility.c: 212: }
  7360                           ;utility.c: 216: return 1;
  7361                           ;	Return value of _Reverse_Array is never used
  7362                           
  7363                           
  7364                           	psect	text37
  7365  16C6                     __ptext37:	
  7366 ;; *************** function _memcpy *****************
  7367 ;; Defined at:
  7368 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;  d1              1    wreg     PTR void 
  7371 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7372 ;;		 -> Reverse_Array@buffer_array(4), 
  7373 ;;  s1              1    2[COMMON] PTR const void 
  7374 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  7375 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  7376 ;;  n               2    3[COMMON] unsigned int 
  7377 ;; Auto vars:     Size  Location     Type
  7378 ;;  d1              1    8[COMMON] PTR void 
  7379 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7380 ;;		 -> Reverse_Array@buffer_array(4), 
  7381 ;;  s               1    7[COMMON] PTR const unsigned char 
  7382 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  7383 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  7384 ;;  d               1    6[COMMON] PTR unsigned char 
  7385 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7386 ;;		 -> Reverse_Array@buffer_array(4), 
  7387 ;; Return value:  Size  Location     Type
  7388 ;;                  1    wreg      PTR void 
  7389 ;; Registers used:
  7390 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7391 ;; Tracked objects:
  7392 ;;		On entry : 0/0
  7393 ;;		On exit  : 0/0
  7394 ;;		Unchanged: 0/0
  7395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7396 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7397 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7398 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7399 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7400 ;;Total ram usage:        7 bytes
  7401 ;; Hardware stack levels used:    1
  7402 ;; Hardware stack levels required when called:    1
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_Reverse_Array
  7407 ;;		_Adf_Write_Register_Zero
  7408 ;;		_Adf_Write_Register_One
  7409 ;;		_Adf_Write_Register_Two
  7410 ;;		_Adf_Write_Register_Three
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           
  7415                           ;psect for function _memcpy
  7416  16C6                     _memcpy:	
  7417                           
  7418                           ;incstack = 0
  7419                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7420                           ;memcpy@d1 stored from wreg
  7421  16C6  00F8               	movwf	memcpy@d1
  7422  16C7  0872               	movf	memcpy@s1,w
  7423  16C8  00F5               	movwf	??_memcpy
  7424  16C9  0875               	movf	??_memcpy,w
  7425  16CA  00F7               	movwf	memcpy@s
  7426  16CB  0878               	movf	memcpy@d1,w
  7427  16CC  00F5               	movwf	??_memcpy
  7428  16CD  0875               	movf	??_memcpy,w
  7429  16CE  00F6               	movwf	memcpy@d
  7430  16CF                     l2011:	
  7431  16CF  3001               	movlw	1
  7432  16D0  02F3               	subwf	memcpy@n,f
  7433  16D1  3000               	movlw	0
  7434  16D2  3BF4               	subwfb	memcpy@n+1,f
  7435  16D3  30FF               	movlw	255
  7436  16D4  0674               	xorwf	memcpy@n+1,w
  7437  16D5  1D03               	skipz
  7438  16D6  2ED9               	goto	u1995
  7439  16D7  30FF               	movlw	255
  7440  16D8  0673               	xorwf	memcpy@n,w
  7441  16D9                     u1995:	
  7442  16D9  1903               	btfsc	3,2
  7443  16DA  0008               	return
  7444  16DB  0877               	movf	memcpy@s,w
  7445  16DC  0086               	movwf	6
  7446  16DD  0187               	clrf	7
  7447  16DE  0801               	movf	1,w
  7448  16DF  00F5               	movwf	??_memcpy
  7449  16E0  0876               	movf	memcpy@d,w
  7450  16E1  0086               	movwf	6
  7451  16E2  0187               	clrf	7
  7452  16E3  0875               	movf	??_memcpy,w
  7453  16E4  0081               	movwf	1
  7454  16E5  3001               	movlw	1
  7455  16E6  00F5               	movwf	??_memcpy
  7456  16E7  0875               	movf	??_memcpy,w
  7457  16E8  07F7               	addwf	memcpy@s,f
  7458  16E9  3001               	movlw	1
  7459  16EA  00F5               	movwf	??_memcpy
  7460  16EB  0875               	movf	??_memcpy,w
  7461  16EC  07F6               	addwf	memcpy@d,f
  7462  16ED  2ECF               	goto	l2011
  7463  16EE                     __end_of_memcpy:	
  7464                           ;	Return value of _memcpy is never used
  7465                           
  7466                           
  7467                           	psect	text38
  7468  07FD                     __ptext38:	
  7469 ;; *************** function _Adf_Locked *****************
  7470 ;; Defined at:
  7471 ;;		line 272 in file "adf7012.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;		None
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;		None
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      unsigned char 
  7478 ;; Registers used:
  7479 ;;		wreg, status,2, status,0, pclath, cstack
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7489 ;;Total ram usage:        0 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:    4
  7492 ;; This function calls:
  7493 ;;		_Read_Adf7012_Muxout
  7494 ;; This function is called by:
  7495 ;;		_Adf_Lock
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           
  7500                           ;psect for function _Adf_Locked
  7501  07FD                     _Adf_Locked:	
  7502                           
  7503                           ;adf7012.c: 274: return Read_Adf7012_Muxout();
  7504                           
  7505                           ;incstack = 0
  7506                           ; Regs used in _Adf_Locked: [wreg+status,2+status,0+pclath+cstack]
  7507  07FD  3195  25CE         	fcall	_Read_Adf7012_Muxout
  7508  07FF  0008               	return
  7509  0800                     __end_of_Adf_Locked:	
  7510                           
  7511                           	psect	text39
  7512  15CE                     __ptext39:	
  7513 ;; *************** function _Read_Adf7012_Muxout *****************
  7514 ;; Defined at:
  7515 ;;		line 69 in file "utility.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;		None
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;		None
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1    wreg      unsigned char 
  7522 ;; Registers used:
  7523 ;;		wreg, status,2, status,0, pclath, cstack
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7533 ;;Total ram usage:        0 bytes
  7534 ;; Hardware stack levels used:    1
  7535 ;; Hardware stack levels required when called:    3
  7536 ;; This function calls:
  7537 ;;		_Delay_ms
  7538 ;; This function is called by:
  7539 ;;		_Adf_Locked
  7540 ;;		_Ptt_On
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           
  7545                           ;psect for function _Read_Adf7012_Muxout
  7546  15CE                     _Read_Adf7012_Muxout:	
  7547                           
  7548                           ;utility.c: 71: Delay_ms(1);
  7549                           
  7550                           ;incstack = 0
  7551                           ; Regs used in _Read_Adf7012_Muxout: [wreg+status,2+status,0+pclath+cstack]
  7552  15CE  3001               	movlw	1
  7553  15CF  00F7               	movwf	Delay_ms@time_to_delay
  7554  15D0  3000               	movlw	0
  7555  15D1  00F8               	movwf	Delay_ms@time_to_delay+1
  7556  15D2  3195  259D  3195   	fcall	_Delay_ms
  7557                           
  7558                           ;utility.c: 73: if(PORTCbits.RC5)
  7559  15D5  0020               	movlb	0	; select bank0
  7560  15D6  1E8E               	btfss	14,5	;volatile
  7561  15D7  2DDA               	goto	l2055
  7562                           
  7563                           ;utility.c: 74: return 1;
  7564  15D8  3001               	movlw	1
  7565  15D9  0008               	return
  7566  15DA                     l2055:	
  7567                           
  7568                           ;utility.c: 75: else
  7569                           ;utility.c: 76: return 0;
  7570  15DA  3000               	movlw	0
  7571  15DB  0008               	return
  7572  15DC                     __end_of_Read_Adf7012_Muxout:	
  7573                           
  7574                           	psect	text40
  7575  159D                     __ptext40:	
  7576 ;; *************** function _Delay_ms *****************
  7577 ;; Defined at:
  7578 ;;		line 53 in file "utility.c"
  7579 ;; Parameters:    Size  Location     Type
  7580 ;;  time_to_dela    2    7[COMMON] unsigned int 
  7581 ;; Auto vars:     Size  Location     Type
  7582 ;;		None
  7583 ;; Return value:  Size  Location     Type
  7584 ;;		None               void
  7585 ;; Registers used:
  7586 ;;		wreg, status,2, status,0, pclath, cstack
  7587 ;; Tracked objects:
  7588 ;;		On entry : 0/0
  7589 ;;		On exit  : 0/0
  7590 ;;		Unchanged: 0/0
  7591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7596 ;;Total ram usage:        2 bytes
  7597 ;; Hardware stack levels used:    1
  7598 ;; Hardware stack levels required when called:    2
  7599 ;; This function calls:
  7600 ;;		_CheckDelay
  7601 ;; This function is called by:
  7602 ;;		_main
  7603 ;;		_Read_Adf7012_Muxout
  7604 ;;		_Write_Adf7012_Reg
  7605 ;;		_Spi_Byte_Send
  7606 ;;		_Adf_Reset
  7607 ;;		_Adf_Lock
  7608 ;;		_Radio_Setup
  7609 ;;		_Ptt_On
  7610 ;;		_Ptt_Off
  7611 ;;		_Modem_Flush_Frame
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           
  7616                           ;psect for function _Delay_ms
  7617  159D                     _Delay_ms:	
  7618                           
  7619                           ;utility.c: 55: Systick_Counter = 0;
  7620                           
  7621                           ;incstack = 0
  7622                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  7623  159D  0021               	movlb	1	; select bank1
  7624  159E  01CF               	clrf	_Systick_Counter^(0+128)
  7625  159F  01D0               	clrf	(_Systick_Counter+1)^(0+128)
  7626  15A0                     l1975:	
  7627                           ;utility.c: 56: while (CheckDelay(time_to_delay));
  7628                           
  7629  15A0  0877               	movf	Delay_ms@time_to_delay,w
  7630  15A1  3195  25FB  3195   	fcall	_CheckDelay
  7631  15A4  0873               	movf	?_CheckDelay+1,w
  7632  15A5  0472               	iorwf	?_CheckDelay,w
  7633  15A6  1903               	btfsc	3,2
  7634  15A7  0008               	return
  7635  15A8  2DA0               	goto	l1975
  7636  15A9                     __end_of_Delay_ms:	
  7637                           
  7638                           	psect	text41
  7639  15FB                     __ptext41:	
  7640 ;; *************** function _CheckDelay *****************
  7641 ;; Defined at:
  7642 ;;		line 48 in file "utility.c"
  7643 ;; Parameters:    Size  Location     Type
  7644 ;;  t               1    wreg     unsigned char 
  7645 ;; Auto vars:     Size  Location     Type
  7646 ;;  t               1    6[COMMON] unsigned char 
  7647 ;; Return value:  Size  Location     Type
  7648 ;;                  2    2[COMMON] int 
  7649 ;; Registers used:
  7650 ;;		wreg, status,2, status,0
  7651 ;; Tracked objects:
  7652 ;;		On entry : 0/0
  7653 ;;		On exit  : 0/0
  7654 ;;		Unchanged: 0/0
  7655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7659 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;Total ram usage:        5 bytes
  7661 ;; Hardware stack levels used:    1
  7662 ;; Hardware stack levels required when called:    1
  7663 ;; This function calls:
  7664 ;;		Nothing
  7665 ;; This function is called by:
  7666 ;;		_Delay_ms
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           
  7671                           ;psect for function _CheckDelay
  7672  15FB                     _CheckDelay:	
  7673                           
  7674                           ;incstack = 0
  7675                           ; Regs used in _CheckDelay: [wreg+status,2+status,0]
  7676                           ;CheckDelay@t stored from wreg
  7677  15FB  00F6               	movwf	CheckDelay@t
  7678                           
  7679                           ;utility.c: 50: return((t - Systick_Counter));
  7680  15FC  0021               	movlb	1	; select bank1
  7681  15FD  094F               	comf	_Systick_Counter^(0+128),w
  7682  15FE  00F4               	movwf	??_CheckDelay
  7683  15FF  0950               	comf	(_Systick_Counter+1)^(0+128),w
  7684  1600  00F5               	movwf	??_CheckDelay+1
  7685  1601  0AF4               	incf	??_CheckDelay,f
  7686  1602  1903               	skipnz
  7687  1603  0AF5               	incf	??_CheckDelay+1,f
  7688  1604  0876               	movf	CheckDelay@t,w
  7689  1605  0774               	addwf	??_CheckDelay,w
  7690  1606  00F2               	movwf	?_CheckDelay
  7691  1607  0875               	movf	??_CheckDelay+1,w
  7692  1608  1803               	skipnc
  7693  1609  0A75               	incf	??_CheckDelay+1,w
  7694  160A  00F3               	movwf	?_CheckDelay+1
  7695  160B  0008               	return
  7696  160C                     __end_of_CheckDelay:	
  7697                           
  7698                           	psect	text42
  7699  1564                     __ptext42:	
  7700 ;; *************** function _Dac0_Start *****************
  7701 ;; Defined at:
  7702 ;;		line 285 in file "utility.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;		None
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;		None
  7707 ;; Return value:  Size  Location     Type
  7708 ;;		None               void
  7709 ;; Registers used:
  7710 ;;		wreg
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;Total ram usage:        0 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; Hardware stack levels required when called:    1
  7723 ;; This function calls:
  7724 ;;		Nothing
  7725 ;; This function is called by:
  7726 ;;		_main
  7727 ;; This function uses a non-reentrant model
  7728 ;;
  7729                           
  7730                           
  7731                           ;psect for function _Dac0_Start
  7732  1564                     _Dac0_Start:	
  7733                           
  7734                           ;utility.c: 286: DACEN = 1;
  7735                           
  7736                           ;incstack = 0
  7737                           ; Regs used in _Dac0_Start: [wreg]
  7738  1564  0022               	movlb	2	; select bank2
  7739  1565  1798               	bsf	24,7	;volatile
  7740                           
  7741                           ;utility.c: 287: DACCON1 = 0x10;
  7742  1566  3010               	movlw	16
  7743  1567  0099               	movwf	25	;volatile
  7744  1568  0008               	return
  7745  1569                     __end_of_Dac0_Start:	
  7746                           
  7747                           	psect	text43
  7748  166D                     __ptext43:	
  7749 ;; *************** function _Ax25_Send_String *****************
  7750 ;; Defined at:
  7751 ;;		line 91 in file "ax25.c"
  7752 ;; Parameters:    Size  Location     Type
  7753 ;;  string          2    6[BANK0 ] PTR const unsigned char 
  7754 ;;		 -> STR_1(6), 
  7755 ;; Auto vars:     Size  Location     Type
  7756 ;;  i               2    8[BANK0 ] int 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;		None               void
  7759 ;; Registers used:
  7760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;Total ram usage:        4 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    4
  7773 ;; This function calls:
  7774 ;;		_Ax25_Send_Byte
  7775 ;; This function is called by:
  7776 ;;		_main
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           
  7781                           ;psect for function _Ax25_Send_String
  7782  166D                     _Ax25_Send_String:	
  7783                           
  7784                           ;ax25.c: 93: int i;
  7785                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  7786                           
  7787                           ;incstack = 0
  7788                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7789  166D  0020               	movlb	0	; select bank0
  7790  166E  01A8               	clrf	Ax25_Send_String@i
  7791  166F  01A9               	clrf	Ax25_Send_String@i+1
  7792  1670                     l3587:	
  7793  1670  0826               	movf	Ax25_Send_String@string,w
  7794  1671  0728               	addwf	Ax25_Send_String@i,w
  7795  1672  0084               	movwf	4
  7796  1673  0827               	movf	Ax25_Send_String@string+1,w
  7797  1674  3D29               	addwfc	Ax25_Send_String@i+1,w
  7798  1675  0085               	movwf	5
  7799  1676  0800               	movf	0,w	;code access
  7800  1677  3800               	iorlw	0
  7801  1678  1903               	btfsc	3,2
  7802  1679  0008               	return
  7803                           
  7804                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  7805  167A  0826               	movf	Ax25_Send_String@string,w
  7806  167B  0728               	addwf	Ax25_Send_String@i,w
  7807  167C  0084               	movwf	4
  7808  167D  0827               	movf	Ax25_Send_String@string+1,w
  7809  167E  3D29               	addwfc	Ax25_Send_String@i+1,w
  7810  167F  0085               	movwf	5
  7811  1680  0800               	movf	0,w	;code access
  7812  1681  3195  255F  3196   	fcall	_Ax25_Send_Byte
  7813  1684  3001               	movlw	1
  7814  1685  0020               	movlb	0	; select bank0
  7815  1686  07A8               	addwf	Ax25_Send_String@i,f
  7816  1687  3000               	movlw	0
  7817  1688  3DA9               	addwfc	Ax25_Send_String@i+1,f
  7818  1689  2E70               	goto	l3587
  7819  168A                     __end_of_Ax25_Send_String:	
  7820                           
  7821                           	psect	text44
  7822  155F                     __ptext44:	
  7823 ;; *************** function _Ax25_Send_Byte *****************
  7824 ;; Defined at:
  7825 ;;		line 56 in file "ax25.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  byte            1    wreg     unsigned char 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  byte            1    8[COMMON] unsigned char 
  7830 ;; Return value:  Size  Location     Type
  7831 ;;		None               void
  7832 ;; Registers used:
  7833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7842 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7843 ;;Total ram usage:        1 bytes
  7844 ;; Hardware stack levels used:    1
  7845 ;; Hardware stack levels required when called:    3
  7846 ;; This function calls:
  7847 ;;		_Send_Byte
  7848 ;; This function is called by:
  7849 ;;		_Ax25_Send_String
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           
  7854                           ;psect for function _Ax25_Send_Byte
  7855  155F                     _Ax25_Send_Byte:	
  7856                           
  7857                           ;incstack = 0
  7858                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7859                           ;Ax25_Send_Byte@byte stored from wreg
  7860  155F  00F8               	movwf	Ax25_Send_Byte@byte
  7861                           
  7862                           ;ax25.c: 59: Send_Byte(byte);
  7863  1560  0878               	movf	Ax25_Send_Byte@byte,w
  7864  1561  318E  2667         	fcall	_Send_Byte
  7865  1563  0008               	return
  7866  1564                     __end_of_Ax25_Send_Byte:	
  7867                           
  7868                           	psect	text45
  7869  067A                     __ptext45:	
  7870 ;; *************** function _Ax25_Send_Header *****************
  7871 ;; Defined at:
  7872 ;;		line 99 in file "ax25.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  addresses       1    wreg     PTR struct .
  7875 ;;		 -> main@beacon_address(16), 
  7876 ;;  num_addresse    2    6[BANK0 ] int 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  addresses       1   11[BANK0 ] PTR struct .
  7879 ;;		 -> main@beacon_address(16), 
  7880 ;;  i               2   14[BANK0 ] int 
  7881 ;;  j               2   12[BANK0 ] int 
  7882 ;; Return value:  Size  Location     Type
  7883 ;;		None               void
  7884 ;; Registers used:
  7885 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7895 ;;Total ram usage:       10 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:    3
  7898 ;; This function calls:
  7899 ;;		_Ax25_Send_Flag
  7900 ;;		_Ax25_Send_Sync
  7901 ;;		_Send_Byte
  7902 ;; This function is called by:
  7903 ;;		_main
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           
  7908                           ;psect for function _Ax25_Send_Header
  7909  067A                     _Ax25_Send_Header:	
  7910                           
  7911                           ;incstack = 0
  7912                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7913                           ;Ax25_Send_Header@addresses stored from wreg
  7914  067A  0020               	movlb	0	; select bank0
  7915  067B  00AB               	movwf	Ax25_Send_Header@addresses
  7916                           
  7917                           ;ax25.c: 101: int i, j;
  7918                           ;ax25.c: 102: modem_packet_size = 0;
  7919  067C  3000               	movlw	0
  7920  067D  0021               	movlb	1	; select bank1
  7921  067E  00CA               	movwf	(_modem_packet_size+3)^(0+128)
  7922  067F  3000               	movlw	0
  7923  0680  00C9               	movwf	(_modem_packet_size+2)^(0+128)
  7924  0681  3000               	movlw	0
  7925  0682  00C8               	movwf	(_modem_packet_size+1)^(0+128)
  7926  0683  3000               	movlw	0
  7927  0684  00C7               	movwf	_modem_packet_size^(0+128)
  7928                           
  7929                           ;ax25.c: 103: ones_in_a_row = 0;
  7930  0685  0022               	movlb	2	; select bank2
  7931  0686  01BE               	clrf	_ones_in_a_row^(0+256)
  7932  0687  01BF               	clrf	(_ones_in_a_row+1)^(0+256)
  7933                           
  7934                           ;ax25.c: 104: crc = 0xffff;
  7935  0688  30FF               	movlw	255
  7936  0689  0021               	movlb	1	; select bank1
  7937  068A  00D1               	movwf	_crc^(0+128)
  7938  068B  30FF               	movlw	255
  7939  068C  00D2               	movwf	(_crc^(0+128)+1)
  7940                           
  7941                           ;ax25.c: 107: for (i = 0; i < 100; i++)
  7942  068D  0020               	movlb	0	; select bank0
  7943  068E  01AE               	clrf	Ax25_Send_Header@i
  7944  068F  01AF               	clrf	Ax25_Send_Header@i+1
  7945  0690  082F               	movf	Ax25_Send_Header@i+1,w
  7946  0691  3A80               	xorlw	128
  7947  0692  00A8               	movwf	??_Ax25_Send_Header
  7948  0693  3080               	movlw	128
  7949  0694  0228               	subwf	??_Ax25_Send_Header,w
  7950  0695  1D03               	skipz
  7951  0696  2E99               	goto	u5435
  7952  0697  3064               	movlw	100
  7953  0698  022E               	subwf	Ax25_Send_Header@i,w
  7954  0699                     u5435:	
  7955  0699  1803               	btfsc	3,0
  7956  069A  2EAE               	goto	l3543
  7957  069B                     l3537:	
  7958                           
  7959                           ;ax25.c: 108: {
  7960                           ;ax25.c: 109: Ax25_Send_Sync();
  7961  069B  318A  222B  3186   	fcall	_Ax25_Send_Sync
  7962  069E  3001               	movlw	1
  7963  069F  0020               	movlb	0	; select bank0
  7964  06A0  07AE               	addwf	Ax25_Send_Header@i,f
  7965  06A1  3000               	movlw	0
  7966  06A2  3DAF               	addwfc	Ax25_Send_Header@i+1,f
  7967  06A3  082F               	movf	Ax25_Send_Header@i+1,w
  7968  06A4  3A80               	xorlw	128
  7969  06A5  00A8               	movwf	??_Ax25_Send_Header
  7970  06A6  3080               	movlw	128
  7971  06A7  0228               	subwf	??_Ax25_Send_Header,w
  7972  06A8  1D03               	skipz
  7973  06A9  2EAC               	goto	u5445
  7974  06AA  3064               	movlw	100
  7975  06AB  022E               	subwf	Ax25_Send_Header@i,w
  7976  06AC                     u5445:	
  7977  06AC  1C03               	skipc
  7978  06AD  2E9B               	goto	l3537
  7979  06AE                     l3543:	
  7980                           
  7981                           ;ax25.c: 110: }
  7982                           ;ax25.c: 113: for (i = 0; i < 3; i++)
  7983  06AE  0020               	movlb	0	; select bank0
  7984  06AF  01AE               	clrf	Ax25_Send_Header@i
  7985  06B0  01AF               	clrf	Ax25_Send_Header@i+1
  7986  06B1  082F               	movf	Ax25_Send_Header@i+1,w
  7987  06B2  3A80               	xorlw	128
  7988  06B3  00A8               	movwf	??_Ax25_Send_Header
  7989  06B4  3080               	movlw	128
  7990  06B5  0228               	subwf	??_Ax25_Send_Header,w
  7991  06B6  1D03               	skipz
  7992  06B7  2EBA               	goto	u5455
  7993  06B8  3003               	movlw	3
  7994  06B9  022E               	subwf	Ax25_Send_Header@i,w
  7995  06BA                     u5455:	
  7996  06BA  1803               	btfsc	3,0
  7997  06BB  2ECF               	goto	l3555
  7998  06BC                     l3549:	
  7999                           
  8000                           ;ax25.c: 114: {
  8001                           ;ax25.c: 115: Ax25_Send_Flag();
  8002  06BC  318A  22AA  3186   	fcall	_Ax25_Send_Flag
  8003  06BF  3001               	movlw	1
  8004  06C0  0020               	movlb	0	; select bank0
  8005  06C1  07AE               	addwf	Ax25_Send_Header@i,f
  8006  06C2  3000               	movlw	0
  8007  06C3  3DAF               	addwfc	Ax25_Send_Header@i+1,f
  8008  06C4  082F               	movf	Ax25_Send_Header@i+1,w
  8009  06C5  3A80               	xorlw	128
  8010  06C6  00A8               	movwf	??_Ax25_Send_Header
  8011  06C7  3080               	movlw	128
  8012  06C8  0228               	subwf	??_Ax25_Send_Header,w
  8013  06C9  1D03               	skipz
  8014  06CA  2ECD               	goto	u5465
  8015  06CB  3003               	movlw	3
  8016  06CC  022E               	subwf	Ax25_Send_Header@i,w
  8017  06CD                     u5465:	
  8018  06CD  1C03               	skipc
  8019  06CE  2EBC               	goto	l3549
  8020  06CF                     l3555:	
  8021                           
  8022                           ;ax25.c: 116: }
  8023                           ;ax25.c: 118: for (i = 0; i < num_addresses; i++) {
  8024  06CF  0020               	movlb	0	; select bank0
  8025  06D0  01AE               	clrf	Ax25_Send_Header@i
  8026  06D1  01AF               	clrf	Ax25_Send_Header@i+1
  8027  06D2                     l3577:	
  8028  06D2  082F               	movf	Ax25_Send_Header@i+1,w
  8029  06D3  3A80               	xorlw	128
  8030  06D4  00A8               	movwf	??_Ax25_Send_Header
  8031  06D5  0827               	movf	Ax25_Send_Header@num_addresses+1,w
  8032  06D6  3A80               	xorlw	128
  8033  06D7  0228               	subwf	??_Ax25_Send_Header,w
  8034  06D8  1D03               	skipz
  8035  06D9  2EDC               	goto	u5535
  8036  06DA  0826               	movf	Ax25_Send_Header@num_addresses,w
  8037  06DB  022E               	subwf	Ax25_Send_Header@i,w
  8038  06DC                     u5535:	
  8039  06DC  1803               	btfsc	3,0
  8040  06DD  2F4C               	goto	l3579
  8041                           
  8042                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  8043  06DE  0020               	movlb	0	; select bank0
  8044  06DF  01AC               	clrf	Ax25_Send_Header@j
  8045  06E0  01AD               	clrf	Ax25_Send_Header@j+1
  8046  06E1  082D               	movf	Ax25_Send_Header@j+1,w
  8047  06E2  3A80               	xorlw	128
  8048  06E3  00A8               	movwf	??_Ax25_Send_Header
  8049  06E4  3080               	movlw	128
  8050  06E5  0228               	subwf	??_Ax25_Send_Header,w
  8051  06E6  1D03               	skipz
  8052  06E7  2EEA               	goto	u5475
  8053  06E8  3006               	movlw	6
  8054  06E9  022C               	subwf	Ax25_Send_Header@j,w
  8055  06EA                     u5475:	
  8056  06EA  1803               	btfsc	3,0
  8057  06EB  2F11               	goto	l3569
  8058  06EC                     l3563:	
  8059                           
  8060                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  8061  06EC  0020               	movlb	0	; select bank0
  8062  06ED  082E               	movf	Ax25_Send_Header@i,w
  8063  06EE  00A8               	movwf	??_Ax25_Send_Header
  8064  06EF  3002               	movlw	2
  8065  06F0                     u5485:	
  8066  06F0  35A8               	lslf	??_Ax25_Send_Header,f
  8067  06F1  3EFF               	addlw	-1
  8068  06F2  1D03               	skipz
  8069  06F3  2EF0               	goto	u5485
  8070  06F4  3528               	lslf	??_Ax25_Send_Header,w
  8071  06F5  072B               	addwf	Ax25_Send_Header@addresses,w
  8072  06F6  00A9               	movwf	??_Ax25_Send_Header+1
  8073  06F7  082C               	movf	Ax25_Send_Header@j,w
  8074  06F8  0729               	addwf	??_Ax25_Send_Header+1,w
  8075  06F9  00AA               	movwf	??_Ax25_Send_Header+2
  8076  06FA  082A               	movf	??_Ax25_Send_Header+2,w
  8077  06FB  0086               	movwf	6
  8078  06FC  0187               	clrf	7
  8079  06FD  3501               	lslf	1,w
  8080  06FE  318E  2667  3186   	fcall	_Send_Byte
  8081  0701  3001               	movlw	1
  8082  0702  0020               	movlb	0	; select bank0
  8083  0703  07AC               	addwf	Ax25_Send_Header@j,f
  8084  0704  3000               	movlw	0
  8085  0705  3DAD               	addwfc	Ax25_Send_Header@j+1,f
  8086  0706  082D               	movf	Ax25_Send_Header@j+1,w
  8087  0707  3A80               	xorlw	128
  8088  0708  00A8               	movwf	??_Ax25_Send_Header
  8089  0709  3080               	movlw	128
  8090  070A  0228               	subwf	??_Ax25_Send_Header,w
  8091  070B  1D03               	skipz
  8092  070C  2F0F               	goto	u5495
  8093  070D  3006               	movlw	6
  8094  070E  022C               	subwf	Ax25_Send_Header@j,w
  8095  070F                     u5495:	
  8096  070F  1C03               	skipc
  8097  0710  2EEC               	goto	l3563
  8098  0711                     l3569:	
  8099                           
  8100                           ;ax25.c: 127: if (i == num_addresses - 1)
  8101  0711  0020               	movlb	0	; select bank0
  8102  0712  0826               	movf	Ax25_Send_Header@num_addresses,w
  8103  0713  3EFF               	addlw	255
  8104  0714  00A8               	movwf	??_Ax25_Send_Header
  8105  0715  30FF               	movlw	255
  8106  0716  3D27               	addwfc	Ax25_Send_Header@num_addresses+1,w
  8107  0717  00A9               	movwf	??_Ax25_Send_Header+1
  8108  0718  082F               	movf	Ax25_Send_Header@i+1,w
  8109  0719  0629               	xorwf	??_Ax25_Send_Header+1,w
  8110  071A  1D03               	skipz
  8111  071B  2F1E               	goto	u5505
  8112  071C  082E               	movf	Ax25_Send_Header@i,w
  8113  071D  0628               	xorwf	??_Ax25_Send_Header,w
  8114  071E                     u5505:	
  8115  071E  1D03               	skipz
  8116  071F  2F32               	goto	l3573
  8117                           
  8118                           ;ax25.c: 128: Send_Byte(('0' + addresses[i].ssid) << 1 | 1);
  8119  0720  082E               	movf	Ax25_Send_Header@i,w
  8120  0721  00A8               	movwf	??_Ax25_Send_Header
  8121  0722  3002               	movlw	2
  8122  0723                     u5515:	
  8123  0723  35A8               	lslf	??_Ax25_Send_Header,f
  8124  0724  3EFF               	addlw	-1
  8125  0725  1D03               	skipz
  8126  0726  2F23               	goto	u5515
  8127  0727  3528               	lslf	??_Ax25_Send_Header,w
  8128  0728  072B               	addwf	Ax25_Send_Header@addresses,w
  8129  0729  00A9               	movwf	??_Ax25_Send_Header+1
  8130  072A  0829               	movf	??_Ax25_Send_Header+1,w
  8131  072B  3E07               	addlw	7
  8132  072C  0086               	movwf	6
  8133  072D  0187               	clrf	7
  8134  072E  3501               	lslf	1,w
  8135  072F  3E60               	addlw	96
  8136  0730  3801               	iorlw	1
  8137  0731  2F43               	goto	L2
  8138  0732                     l3573:	
  8139                           
  8140                           ;ax25.c: 130: else
  8141                           ;ax25.c: 131: Send_Byte(('0' + addresses[i].ssid) << 1);
  8142  0732  0020               	movlb	0	; select bank0
  8143  0733  082E               	movf	Ax25_Send_Header@i,w
  8144  0734  00A8               	movwf	??_Ax25_Send_Header
  8145  0735  3002               	movlw	2
  8146  0736                     u5525:	
  8147  0736  35A8               	lslf	??_Ax25_Send_Header,f
  8148  0737  3EFF               	addlw	-1
  8149  0738  1D03               	skipz
  8150  0739  2F36               	goto	u5525
  8151  073A  3528               	lslf	??_Ax25_Send_Header,w
  8152  073B  072B               	addwf	Ax25_Send_Header@addresses,w
  8153  073C  00A9               	movwf	??_Ax25_Send_Header+1
  8154  073D  0829               	movf	??_Ax25_Send_Header+1,w
  8155  073E  3E07               	addlw	7
  8156  073F  0086               	movwf	6
  8157  0740  0187               	clrf	7
  8158  0741  3501               	lslf	1,w
  8159  0742  3E60               	addlw	96
  8160  0743                     L2:	
  8161  0743  318E  2667  3186   	fcall	_Send_Byte
  8162  0746  3001               	movlw	1
  8163  0747  0020               	movlb	0	; select bank0
  8164  0748  07AE               	addwf	Ax25_Send_Header@i,f
  8165  0749  3000               	movlw	0
  8166  074A  3DAF               	addwfc	Ax25_Send_Header@i+1,f
  8167  074B  2ED2               	goto	l3577
  8168  074C                     l3579:	
  8169                           
  8170                           ;ax25.c: 132: }
  8171                           ;ax25.c: 135: Send_Byte(0x03);
  8172  074C  3003               	movlw	3
  8173  074D  318E  2667  3186   	fcall	_Send_Byte
  8174                           
  8175                           ;ax25.c: 138: Send_Byte(0xf0);
  8176  0750  30F0               	movlw	240
  8177  0751  318E  2667         	fcall	_Send_Byte
  8178  0753  0008               	return
  8179  0754                     __end_of_Ax25_Send_Header:	
  8180                           
  8181                           	psect	text46
  8182  0A2B                     __ptext46:	
  8183 ;; *************** function _Ax25_Send_Sync *****************
  8184 ;; Defined at:
  8185 ;;		line 63 in file "ax25.c"
  8186 ;; Parameters:    Size  Location     Type
  8187 ;;		None
  8188 ;; Auto vars:     Size  Location     Type
  8189 ;;  i               2    1[BANK0 ] int 
  8190 ;;  byte            1    0[BANK0 ] unsigned char 
  8191 ;; Return value:  Size  Location     Type
  8192 ;;		None               void
  8193 ;; Registers used:
  8194 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8195 ;; Tracked objects:
  8196 ;;		On entry : 0/0
  8197 ;;		On exit  : 0/0
  8198 ;;		Unchanged: 0/0
  8199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8201 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8202 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;Total ram usage:        9 bytes
  8205 ;; Hardware stack levels used:    1
  8206 ;; Hardware stack levels required when called:    1
  8207 ;; This function calls:
  8208 ;;		Nothing
  8209 ;; This function is called by:
  8210 ;;		_Ax25_Send_Header
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           
  8215                           ;psect for function _Ax25_Send_Sync
  8216  0A2B                     _Ax25_Send_Sync:	
  8217                           
  8218                           ;ax25.c: 65: uint8_t byte = 0x00;
  8219                           
  8220                           ;incstack = 0
  8221                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  8222  0A2B  0020               	movlb	0	; select bank0
  8223  0A2C  01A0               	clrf	Ax25_Send_Sync@byte
  8224                           
  8225                           ;ax25.c: 66: int i;
  8226                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  8227  0A2D  01A1               	clrf	Ax25_Send_Sync@i
  8228  0A2E  01A2               	clrf	Ax25_Send_Sync@i+1
  8229  0A2F                     L3:	
  8230  0A2F  0822               	movf	Ax25_Send_Sync@i+1,w
  8231  0A30  3A80               	xorlw	128
  8232  0A31  00F2               	movwf	??_Ax25_Send_Sync
  8233  0A32  3080               	movlw	128
  8234  0A33  0272               	subwf	??_Ax25_Send_Sync,w
  8235  0A34  3008               	movlw	8
  8236  0A35  1903               	btfsc	3,2
  8237  0A36  0221               	subwf	Ax25_Send_Sync@i,w
  8238  0A37  1803               	btfsc	3,0
  8239  0A38  0008               	return
  8240                           
  8241                           ;ax25.c: 68: if (modem_packet_size >= 64 * 8)
  8242  0A39  3000               	movlw	0
  8243  0A3A  0021               	movlb	1	; select bank1
  8244  0A3B  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8245  0A3C  1D03               	skipz
  8246  0A3D  2A48               	goto	u5265
  8247  0A3E  3000               	movlw	0
  8248  0A3F  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8249  0A40  1D03               	skipz
  8250  0A41  2A48               	goto	u5265
  8251  0A42  3002               	movlw	2
  8252  0A43  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8253  0A44  1D03               	skipz
  8254  0A45  2A48               	goto	u5265
  8255  0A46  3000               	movlw	0
  8256  0A47  0247               	subwf	_modem_packet_size^(0+128),w
  8257  0A48                     u5265:	
  8258  0A48  1803               	btfsc	3,0
  8259  0A49  0008               	return
  8260                           
  8261                           ;ax25.c: 70: if ((byte >> i) & 1)
  8262                           
  8263                           ;ax25.c: 69: return;
  8264  0A4A  0020               	movlb	0	; select bank0
  8265  0A4B  0820               	movf	Ax25_Send_Sync@byte,w
  8266  0A4C  00F2               	movwf	??_Ax25_Send_Sync
  8267  0A4D  0A21               	incf	Ax25_Send_Sync@i,w
  8268  0A4E  2A50               	goto	u5274
  8269  0A4F                     u5275:	
  8270  0A4F  36F2               	lsrf	??_Ax25_Send_Sync,f
  8271  0A50                     u5274:	
  8272  0A50  0B89               	decfsz	9,f
  8273  0A51  2A4F               	goto	u5275
  8274  0A52  1C72               	btfss	??_Ax25_Send_Sync,0
  8275  0A53  2A77               	goto	l3495
  8276                           
  8277                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8278  0A54  3001               	movlw	1
  8279  0A55  00F2               	movwf	??_Ax25_Send_Sync
  8280  0A56  0021               	movlb	1	; select bank1
  8281  0A57  0847               	movf	_modem_packet_size^(0+128),w
  8282  0A58  3907               	andlw	7
  8283  0A59  0A89               	incf	9,f
  8284  0A5A  2A5C               	goto	u5294
  8285  0A5B                     u5295:	
  8286  0A5B  35F2               	lslf	??_Ax25_Send_Sync,f
  8287  0A5C                     u5294:	
  8288  0A5C  0B89               	decfsz	9,f
  8289  0A5D  2A5B               	goto	u5295
  8290  0A5E  0872               	movf	??_Ax25_Send_Sync,w
  8291  0A5F  00F3               	movwf	??_Ax25_Send_Sync+1
  8292  0A60  0847               	movf	_modem_packet_size^(0+128),w
  8293  0A61  00F4               	movwf	??_Ax25_Send_Sync+2
  8294  0A62  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8295  0A63  00F5               	movwf	??_Ax25_Send_Sync+3
  8296  0A64  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8297  0A65  00F6               	movwf	??_Ax25_Send_Sync+4
  8298  0A66  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8299  0A67  00F7               	movwf	??_Ax25_Send_Sync+5
  8300  0A68  3003               	movlw	3
  8301  0A69                     u5305:	
  8302  0A69  36F7               	lsrf	??_Ax25_Send_Sync+5,f
  8303  0A6A  0CF6               	rrf	??_Ax25_Send_Sync+4,f
  8304  0A6B  0CF5               	rrf	??_Ax25_Send_Sync+3,f
  8305  0A6C  0CF4               	rrf	??_Ax25_Send_Sync+2,f
  8306  0A6D  0B89               	decfsz	9,f
  8307  0A6E  2A69               	goto	u5305
  8308  0A6F  0874               	movf	??_Ax25_Send_Sync+2,w
  8309  0A70  3EA0               	addlw	_modem_packet& (0+255)
  8310  0A71  0086               	movwf	6
  8311  0A72  3001               	movlw	1	; select bank3/4
  8312  0A73  0087               	movwf	7
  8313  0A74  0873               	movf	??_Ax25_Send_Sync+1,w
  8314  0A75  0481               	iorwf	1,f
  8315  0A76  2A9A               	goto	l3497
  8316  0A77                     l3495:	
  8317                           
  8318                           ;ax25.c: 72: else
  8319                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8320  0A77  3001               	movlw	1
  8321  0A78  00F2               	movwf	??_Ax25_Send_Sync
  8322  0A79  0021               	movlb	1	; select bank1
  8323  0A7A  0847               	movf	_modem_packet_size^(0+128),w
  8324  0A7B  3907               	andlw	7
  8325  0A7C  0A89               	incf	9,f
  8326  0A7D  2A7F               	goto	u5314
  8327  0A7E                     u5315:	
  8328  0A7E  35F2               	lslf	??_Ax25_Send_Sync,f
  8329  0A7F                     u5314:	
  8330  0A7F  0B89               	decfsz	9,f
  8331  0A80  2A7E               	goto	u5315
  8332  0A81  0872               	movf	??_Ax25_Send_Sync,w
  8333  0A82  3AFF               	xorlw	255
  8334  0A83  00F3               	movwf	??_Ax25_Send_Sync+1
  8335  0A84  0847               	movf	_modem_packet_size^(0+128),w
  8336  0A85  00F4               	movwf	??_Ax25_Send_Sync+2
  8337  0A86  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8338  0A87  00F5               	movwf	??_Ax25_Send_Sync+3
  8339  0A88  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8340  0A89  00F6               	movwf	??_Ax25_Send_Sync+4
  8341  0A8A  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8342  0A8B  00F7               	movwf	??_Ax25_Send_Sync+5
  8343  0A8C  3003               	movlw	3
  8344  0A8D                     u5325:	
  8345  0A8D  36F7               	lsrf	??_Ax25_Send_Sync+5,f
  8346  0A8E  0CF6               	rrf	??_Ax25_Send_Sync+4,f
  8347  0A8F  0CF5               	rrf	??_Ax25_Send_Sync+3,f
  8348  0A90  0CF4               	rrf	??_Ax25_Send_Sync+2,f
  8349  0A91  0B89               	decfsz	9,f
  8350  0A92  2A8D               	goto	u5325
  8351  0A93  0874               	movf	??_Ax25_Send_Sync+2,w
  8352  0A94  3EA0               	addlw	_modem_packet& (0+255)
  8353  0A95  0086               	movwf	6
  8354  0A96  3001               	movlw	1	; select bank3/4
  8355  0A97  0087               	movwf	7
  8356  0A98  0873               	movf	??_Ax25_Send_Sync+1,w
  8357  0A99  0581               	andwf	1,f
  8358  0A9A                     l3497:	
  8359  0A9A  3001               	movlw	1
  8360  0A9B  0020               	movlb	0	; select bank0
  8361  0A9C  07A1               	addwf	Ax25_Send_Sync@i,f
  8362  0A9D  3000               	movlw	0
  8363  0A9E  3DA2               	addwfc	Ax25_Send_Sync@i+1,f
  8364  0A9F  3001               	movlw	1
  8365  0AA0  0021               	movlb	1	; select bank1
  8366  0AA1  07C7               	addwf	_modem_packet_size^(0+128),f
  8367  0AA2  3000               	movlw	0
  8368  0AA3  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8369  0AA4  3000               	movlw	0
  8370  0AA5  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8371  0AA6  3000               	movlw	0
  8372  0AA7  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8373  0AA8  0020               	movlb	0	; select bank0
  8374  0AA9  2A2F               	goto	L3
  8375  0AAA                     __end_of_Ax25_Send_Sync:	
  8376                           
  8377                           	psect	text47
  8378  1621                     __ptext47:	
  8379 ;; *************** function _Ax25_Send_Footer *****************
  8380 ;; Defined at:
  8381 ;;		line 141 in file "ax25.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;		None
  8384 ;; Auto vars:     Size  Location     Type
  8385 ;;  final_crc       2    8[COMMON] unsigned int 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;		None               void
  8388 ;; Registers used:
  8389 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8399 ;;Total ram usage:        2 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    3
  8402 ;; This function calls:
  8403 ;;		_Ax25_Send_Flag
  8404 ;;		_Send_Byte
  8405 ;; This function is called by:
  8406 ;;		_main
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           
  8411                           ;psect for function _Ax25_Send_Footer
  8412  1621                     _Ax25_Send_Footer:	
  8413                           
  8414                           ;ax25.c: 144: uint16_t final_crc = crc;
  8415                           
  8416                           ;incstack = 0
  8417                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8418  1621  0021               	movlb	1	; select bank1
  8419  1622  0852               	movf	(_crc+1)^(0+128),w
  8420  1623  01F9               	clrf	Ax25_Send_Footer@final_crc+1
  8421  1624  07F9               	addwf	Ax25_Send_Footer@final_crc+1,f
  8422  1625  0851               	movf	_crc^(0+128),w
  8423  1626  01F8               	clrf	Ax25_Send_Footer@final_crc
  8424  1627  07F8               	addwf	Ax25_Send_Footer@final_crc,f
  8425                           
  8426                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  8427  1628  0978               	comf	Ax25_Send_Footer@final_crc,w
  8428  1629  318E  2667  3196   	fcall	_Send_Byte
  8429                           
  8430                           ;ax25.c: 148: final_crc >>= 8;
  8431  162C  3008               	movlw	8
  8432  162D                     u5555:	
  8433  162D  36F9               	lsrf	Ax25_Send_Footer@final_crc+1,f
  8434  162E  0CF8               	rrf	Ax25_Send_Footer@final_crc,f
  8435  162F  0B89               	decfsz	9,f
  8436  1630  2E2D               	goto	u5555
  8437                           
  8438                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  8439  1631  0978               	comf	Ax25_Send_Footer@final_crc,w
  8440  1632  318E  2667  3196   	fcall	_Send_Byte
  8441                           
  8442                           ;ax25.c: 152: Ax25_Send_Flag();
  8443  1635  318A  22AA         	fcall	_Ax25_Send_Flag
  8444  1637  0008               	return
  8445  1638                     __end_of_Ax25_Send_Footer:	
  8446                           
  8447                           	psect	text48
  8448  0E67                     __ptext48:	
  8449 ;; *************** function _Send_Byte *****************
  8450 ;; Defined at:
  8451 ;;		line 33 in file "ax25.c"
  8452 ;; Parameters:    Size  Location     Type
  8453 ;;  byte            1    wreg     unsigned char 
  8454 ;; Auto vars:     Size  Location     Type
  8455 ;;  byte            1    5[COMMON] unsigned char 
  8456 ;;  i               2    6[COMMON] int 
  8457 ;; Return value:  Size  Location     Type
  8458 ;;		None               void
  8459 ;; Registers used:
  8460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;Total ram usage:        9 bytes
  8471 ;; Hardware stack levels used:    1
  8472 ;; Hardware stack levels required when called:    2
  8473 ;; This function calls:
  8474 ;;		_Update_Crc
  8475 ;; This function is called by:
  8476 ;;		_Ax25_Send_Byte
  8477 ;;		_Ax25_Send_Header
  8478 ;;		_Ax25_Send_Footer
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481                           
  8482                           
  8483                           ;psect for function _Send_Byte
  8484  0E67                     _Send_Byte:	
  8485                           
  8486                           ;incstack = 0
  8487                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8488                           ;Send_Byte@byte stored from wreg
  8489  0E67  00F5               	movwf	Send_Byte@byte
  8490                           
  8491                           ;ax25.c: 35: int i;
  8492                           ;ax25.c: 36: for (i = 0; i < 8; i++) {
  8493  0E68  01F6               	clrf	Send_Byte@i
  8494  0E69  01F7               	clrf	Send_Byte@i+1
  8495  0E6A                     L4:	
  8496  0E6A  0877               	movf	Send_Byte@i+1,w
  8497  0E6B  3A80               	xorlw	128
  8498  0E6C  0020               	movlb	0	; select bank0
  8499  0E6D  00A0               	movwf	??_Send_Byte
  8500  0E6E  3080               	movlw	128
  8501  0E6F  0220               	subwf	??_Send_Byte,w
  8502  0E70  3008               	movlw	8
  8503  0E71  1903               	btfsc	3,2
  8504  0E72  0276               	subwf	Send_Byte@i,w
  8505  0E73  1803               	btfsc	3,0
  8506  0E74  0008               	return
  8507                           
  8508                           ;ax25.c: 37: Update_Crc((byte >> i) & 1);
  8509  0E75  0875               	movf	Send_Byte@byte,w
  8510  0E76  0020               	movlb	0	; select bank0
  8511  0E77  00A0               	movwf	??_Send_Byte
  8512  0E78  0A76               	incf	Send_Byte@i,w
  8513  0E79  2E7B               	goto	u5114
  8514  0E7A                     u5115:	
  8515  0E7A  36A0               	lsrf	??_Send_Byte,f
  8516  0E7B                     u5114:	
  8517  0E7B  0B89               	decfsz	9,f
  8518  0E7C  2E7A               	goto	u5115
  8519  0E7D  0820               	movf	??_Send_Byte,w
  8520  0E7E  3901               	andlw	1
  8521  0E7F  3188  2003  318E   	fcall	_Update_Crc
  8522                           
  8523                           ;ax25.c: 38: if ((byte >> i) & 1) {
  8524  0E82  0875               	movf	Send_Byte@byte,w
  8525  0E83  0020               	movlb	0	; select bank0
  8526  0E84  00A0               	movwf	??_Send_Byte
  8527  0E85  0A76               	incf	Send_Byte@i,w
  8528  0E86  2E88               	goto	u5124
  8529  0E87                     u5125:	
  8530  0E87  36A0               	lsrf	??_Send_Byte,f
  8531  0E88                     u5124:	
  8532  0E88  0B89               	decfsz	9,f
  8533  0E89  2E87               	goto	u5125
  8534  0E8A  1C20               	btfss	??_Send_Byte,0
  8535  0E8B  2EE4               	goto	l3429
  8536                           
  8537                           ;ax25.c: 40: if (modem_packet_size >= 64 * 8)
  8538  0E8C  3000               	movlw	0
  8539  0E8D  0021               	movlb	1	; select bank1
  8540  0E8E  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8541  0E8F  1D03               	skipz
  8542  0E90  2E9B               	goto	u5145
  8543  0E91  3000               	movlw	0
  8544  0E92  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8545  0E93  1D03               	skipz
  8546  0E94  2E9B               	goto	u5145
  8547  0E95  3002               	movlw	2
  8548  0E96  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8549  0E97  1D03               	skipz
  8550  0E98  2E9B               	goto	u5145
  8551  0E99  3000               	movlw	0
  8552  0E9A  0247               	subwf	_modem_packet_size^(0+128),w
  8553  0E9B                     u5145:	
  8554  0E9B  1803               	btfsc	3,0
  8555  0E9C  0008               	return
  8556                           
  8557                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8558                           
  8559                           ;ax25.c: 41: return;
  8560  0E9D  3001               	movlw	1
  8561  0E9E  0020               	movlb	0	; select bank0
  8562  0E9F  00A0               	movwf	??_Send_Byte
  8563  0EA0  0021               	movlb	1	; select bank1
  8564  0EA1  0847               	movf	_modem_packet_size^(0+128),w
  8565  0EA2  3907               	andlw	7
  8566  0EA3  0A89               	incf	9,f
  8567  0EA4  0020               	movlb	0	; select bank0
  8568  0EA5  2EA7               	goto	u5154
  8569  0EA6                     u5155:	
  8570  0EA6  35A0               	lslf	??_Send_Byte,f
  8571  0EA7                     u5154:	
  8572  0EA7  0B89               	decfsz	9,f
  8573  0EA8  2EA6               	goto	u5155
  8574  0EA9  0820               	movf	??_Send_Byte,w
  8575  0EAA  00A1               	movwf	??_Send_Byte+1
  8576  0EAB  0021               	movlb	1	; select bank1
  8577  0EAC  0847               	movf	_modem_packet_size^(0+128),w
  8578  0EAD  0020               	movlb	0	; select bank0
  8579  0EAE  00A2               	movwf	??_Send_Byte+2
  8580  0EAF  0021               	movlb	1	; select bank1
  8581  0EB0  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8582  0EB1  0020               	movlb	0	; select bank0
  8583  0EB2  00A3               	movwf	??_Send_Byte+3
  8584  0EB3  0021               	movlb	1	; select bank1
  8585  0EB4  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8586  0EB5  0020               	movlb	0	; select bank0
  8587  0EB6  00A4               	movwf	??_Send_Byte+4
  8588  0EB7  0021               	movlb	1	; select bank1
  8589  0EB8  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8590  0EB9  0020               	movlb	0	; select bank0
  8591  0EBA  00A5               	movwf	??_Send_Byte+5
  8592  0EBB  3003               	movlw	3
  8593  0EBC                     u5165:	
  8594  0EBC  36A5               	lsrf	??_Send_Byte+5,f
  8595  0EBD  0CA4               	rrf	??_Send_Byte+4,f
  8596  0EBE  0CA3               	rrf	??_Send_Byte+3,f
  8597  0EBF  0CA2               	rrf	??_Send_Byte+2,f
  8598  0EC0  0B89               	decfsz	9,f
  8599  0EC1  2EBC               	goto	u5165
  8600  0EC2  0822               	movf	??_Send_Byte+2,w
  8601  0EC3  3EA0               	addlw	_modem_packet& (0+255)
  8602  0EC4  0086               	movwf	6
  8603  0EC5  3001               	movlw	1	; select bank3/4
  8604  0EC6  0087               	movwf	7
  8605  0EC7  0821               	movf	??_Send_Byte+1,w
  8606  0EC8  0481               	iorwf	1,f
  8607                           
  8608                           ;ax25.c: 43: modem_packet_size++;
  8609  0EC9  3001               	movlw	1
  8610  0ECA  0021               	movlb	1	; select bank1
  8611  0ECB  07C7               	addwf	_modem_packet_size^(0+128),f
  8612  0ECC  3000               	movlw	0
  8613  0ECD  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8614  0ECE  3000               	movlw	0
  8615  0ECF  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8616  0ED0  3000               	movlw	0
  8617  0ED1  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8618                           
  8619                           ;ax25.c: 44: if (++ones_in_a_row < 5) continue;
  8620  0ED2  3001               	movlw	1
  8621  0ED3  0022               	movlb	2	; select bank2
  8622  0ED4  07BE               	addwf	_ones_in_a_row^(0+256),f
  8623  0ED5  3000               	movlw	0
  8624  0ED6  3DBF               	addwfc	(_ones_in_a_row+1)^(0+256),f
  8625  0ED7  083F               	movf	(_ones_in_a_row+1)^(0+256),w
  8626  0ED8  3A80               	xorlw	128
  8627  0ED9  0020               	movlb	0	; select bank0
  8628  0EDA  00A0               	movwf	??_Send_Byte
  8629  0EDB  3080               	movlw	128
  8630  0EDC  0220               	subwf	??_Send_Byte,w
  8631  0EDD  1D03               	skipz
  8632  0EDE  2EE2               	goto	u5175
  8633  0EDF  3005               	movlw	5
  8634  0EE0  0022               	movlb	2	; select bank2
  8635  0EE1  023E               	subwf	_ones_in_a_row^(0+256),w
  8636  0EE2                     u5175:	
  8637  0EE2  1C03               	btfss	3,0
  8638  0EE3  2F2E               	goto	l3439
  8639  0EE4                     l3429:	
  8640                           
  8641                           ;ax25.c: 45: }
  8642                           ;ax25.c: 47: if (modem_packet_size >= 64 * 8)
  8643  0EE4  3000               	movlw	0
  8644  0EE5  0021               	movlb	1	; select bank1
  8645  0EE6  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8646  0EE7  1D03               	skipz
  8647  0EE8  2EF3               	goto	u5185
  8648  0EE9  3000               	movlw	0
  8649  0EEA  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8650  0EEB  1D03               	skipz
  8651  0EEC  2EF3               	goto	u5185
  8652  0EED  3002               	movlw	2
  8653  0EEE  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8654  0EEF  1D03               	skipz
  8655  0EF0  2EF3               	goto	u5185
  8656  0EF1  3000               	movlw	0
  8657  0EF2  0247               	subwf	_modem_packet_size^(0+128),w
  8658  0EF3                     u5185:	
  8659  0EF3  1803               	btfsc	3,0
  8660  0EF4  0008               	return
  8661                           
  8662                           ;ax25.c: 49: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8663                           
  8664                           ;ax25.c: 48: return;
  8665  0EF5  3001               	movlw	1
  8666  0EF6  0020               	movlb	0	; select bank0
  8667  0EF7  00A0               	movwf	??_Send_Byte
  8668  0EF8  0021               	movlb	1	; select bank1
  8669  0EF9  0847               	movf	_modem_packet_size^(0+128),w
  8670  0EFA  3907               	andlw	7
  8671  0EFB  0A89               	incf	9,f
  8672  0EFC  0020               	movlb	0	; select bank0
  8673  0EFD  2EFF               	goto	u5194
  8674  0EFE                     u5195:	
  8675  0EFE  35A0               	lslf	??_Send_Byte,f
  8676  0EFF                     u5194:	
  8677  0EFF  0B89               	decfsz	9,f
  8678  0F00  2EFE               	goto	u5195
  8679  0F01  0820               	movf	??_Send_Byte,w
  8680  0F02  3AFF               	xorlw	255
  8681  0F03  00A1               	movwf	??_Send_Byte+1
  8682  0F04  0021               	movlb	1	; select bank1
  8683  0F05  0847               	movf	_modem_packet_size^(0+128),w
  8684  0F06  0020               	movlb	0	; select bank0
  8685  0F07  00A2               	movwf	??_Send_Byte+2
  8686  0F08  0021               	movlb	1	; select bank1
  8687  0F09  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8688  0F0A  0020               	movlb	0	; select bank0
  8689  0F0B  00A3               	movwf	??_Send_Byte+3
  8690  0F0C  0021               	movlb	1	; select bank1
  8691  0F0D  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8692  0F0E  0020               	movlb	0	; select bank0
  8693  0F0F  00A4               	movwf	??_Send_Byte+4
  8694  0F10  0021               	movlb	1	; select bank1
  8695  0F11  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8696  0F12  0020               	movlb	0	; select bank0
  8697  0F13  00A5               	movwf	??_Send_Byte+5
  8698  0F14  3003               	movlw	3
  8699  0F15                     u5205:	
  8700  0F15  36A5               	lsrf	??_Send_Byte+5,f
  8701  0F16  0CA4               	rrf	??_Send_Byte+4,f
  8702  0F17  0CA3               	rrf	??_Send_Byte+3,f
  8703  0F18  0CA2               	rrf	??_Send_Byte+2,f
  8704  0F19  0B89               	decfsz	9,f
  8705  0F1A  2F15               	goto	u5205
  8706  0F1B  0822               	movf	??_Send_Byte+2,w
  8707  0F1C  3EA0               	addlw	_modem_packet& (0+255)
  8708  0F1D  0086               	movwf	6
  8709  0F1E  3001               	movlw	1	; select bank3/4
  8710  0F1F  0087               	movwf	7
  8711  0F20  0821               	movf	??_Send_Byte+1,w
  8712  0F21  0581               	andwf	1,f
  8713                           
  8714                           ;ax25.c: 50: modem_packet_size++;
  8715  0F22  3001               	movlw	1
  8716  0F23  0021               	movlb	1	; select bank1
  8717  0F24  07C7               	addwf	_modem_packet_size^(0+128),f
  8718  0F25  3000               	movlw	0
  8719  0F26  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8720  0F27  3000               	movlw	0
  8721  0F28  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8722  0F29  3000               	movlw	0
  8723  0F2A  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8724                           
  8725                           ;ax25.c: 51: ones_in_a_row = 0;
  8726  0F2B  0022               	movlb	2	; select bank2
  8727  0F2C  01BE               	clrf	_ones_in_a_row^(0+256)
  8728  0F2D  01BF               	clrf	(_ones_in_a_row+1)^(0+256)
  8729  0F2E                     l3439:	
  8730  0F2E  3001               	movlw	1
  8731  0F2F  07F6               	addwf	Send_Byte@i,f
  8732  0F30  3000               	movlw	0
  8733  0F31  3DF7               	addwfc	Send_Byte@i+1,f
  8734  0F32  2E6A               	goto	L4
  8735  0F33                     __end_of_Send_Byte:	
  8736                           
  8737                           	psect	text49
  8738  0803                     __ptext49:	
  8739 ;; *************** function _Update_Crc *****************
  8740 ;; Defined at:
  8741 ;;		line 24 in file "ax25.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;  input_bit       1    wreg     unsigned char 
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;  input_bit       1    4[COMMON] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;		None               void
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8758 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8759 ;;Total ram usage:        3 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    1
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_Send_Byte
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           
  8770                           ;psect for function _Update_Crc
  8771  0803                     _Update_Crc:	
  8772                           
  8773                           ;incstack = 0
  8774                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  8775                           ;Update_Crc@input_bit stored from wreg
  8776  0803  00F4               	movwf	Update_Crc@input_bit
  8777                           
  8778                           ;ax25.c: 26: crc ^= input_bit;
  8779  0804  0874               	movf	Update_Crc@input_bit,w
  8780  0805  00F2               	movwf	??_Update_Crc
  8781  0806  01F3               	clrf	??_Update_Crc+1
  8782  0807  0872               	movf	??_Update_Crc,w
  8783  0808  0021               	movlb	1	; select bank1
  8784  0809  06D1               	xorwf	_crc^(0+128),f
  8785  080A  0873               	movf	??_Update_Crc+1,w
  8786  080B  06D2               	xorwf	(_crc+1)^(0+128),f
  8787                           
  8788                           ;ax25.c: 27: if (crc & 1)
  8789  080C  1C51               	btfss	_crc^(0+128),0
  8790  080D  281B               	goto	l3109
  8791                           
  8792                           ;ax25.c: 28: crc = (crc >> 1) ^ 0x8408;
  8793  080E  0852               	movf	(_crc+1)^(0+128),w
  8794  080F  00F3               	movwf	??_Update_Crc+1
  8795  0810  0851               	movf	_crc^(0+128),w
  8796  0811  00F2               	movwf	??_Update_Crc
  8797  0812  36F3               	lsrf	??_Update_Crc+1,f
  8798  0813  0CF2               	rrf	??_Update_Crc,f
  8799  0814  3008               	movlw	8
  8800  0815  0672               	xorwf	??_Update_Crc,w
  8801  0816  00D1               	movwf	_crc^(0+128)
  8802  0817  3084               	movlw	132
  8803  0818  0673               	xorwf	??_Update_Crc+1,w
  8804  0819  00D2               	movwf	(_crc+1)^(0+128)
  8805  081A  0008               	return
  8806  081B                     l3109:	
  8807                           
  8808                           ;ax25.c: 29: else
  8809                           ;ax25.c: 30: crc = crc >> 1;
  8810  081B  0852               	movf	(_crc+1)^(0+128),w
  8811  081C  00F3               	movwf	??_Update_Crc+1
  8812  081D  0851               	movf	_crc^(0+128),w
  8813  081E  00F2               	movwf	??_Update_Crc
  8814  081F  36F3               	lsrf	??_Update_Crc+1,f
  8815  0820  0CF2               	rrf	??_Update_Crc,f
  8816  0821  0872               	movf	??_Update_Crc,w
  8817  0822  00D1               	movwf	_crc^(0+128)
  8818  0823  0873               	movf	??_Update_Crc+1,w
  8819  0824  00D2               	movwf	(_crc+1)^(0+128)
  8820  0825  0008               	return
  8821  0826                     __end_of_Update_Crc:	
  8822                           
  8823                           	psect	text50
  8824  0AAA                     __ptext50:	
  8825 ;; *************** function _Ax25_Send_Flag *****************
  8826 ;; Defined at:
  8827 ;;		line 77 in file "ax25.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;		None
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  i               2    1[BANK0 ] int 
  8832 ;;  byte            1    0[BANK0 ] unsigned char 
  8833 ;; Return value:  Size  Location     Type
  8834 ;;		None               void
  8835 ;; Registers used:
  8836 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;      Totals:         6       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8846 ;;Total ram usage:        9 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; Hardware stack levels required when called:    1
  8849 ;; This function calls:
  8850 ;;		Nothing
  8851 ;; This function is called by:
  8852 ;;		_Ax25_Send_Header
  8853 ;;		_Ax25_Send_Footer
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           
  8858                           ;psect for function _Ax25_Send_Flag
  8859  0AAA                     _Ax25_Send_Flag:	
  8860                           
  8861                           ;ax25.c: 79: uint8_t byte = 0x7e;
  8862                           
  8863                           ;incstack = 0
  8864                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  8865  0AAA  307E               	movlw	126
  8866  0AAB  00F2               	movwf	??_Ax25_Send_Flag
  8867  0AAC  0872               	movf	??_Ax25_Send_Flag,w
  8868  0AAD  0020               	movlb	0	; select bank0
  8869  0AAE  00A0               	movwf	Ax25_Send_Flag@byte
  8870                           
  8871                           ;ax25.c: 80: int i;
  8872                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  8873  0AAF  01A1               	clrf	Ax25_Send_Flag@i
  8874  0AB0  01A2               	clrf	Ax25_Send_Flag@i+1
  8875  0AB1                     L5:	
  8876  0AB1  0822               	movf	Ax25_Send_Flag@i+1,w
  8877  0AB2  3A80               	xorlw	128
  8878  0AB3  00F2               	movwf	??_Ax25_Send_Flag
  8879  0AB4  3080               	movlw	128
  8880  0AB5  0272               	subwf	??_Ax25_Send_Flag,w
  8881  0AB6  3008               	movlw	8
  8882  0AB7  1903               	btfsc	3,2
  8883  0AB8  0221               	subwf	Ax25_Send_Flag@i,w
  8884  0AB9  1803               	btfsc	3,0
  8885  0ABA  0008               	return
  8886                           
  8887                           ;ax25.c: 82: if (modem_packet_size >= 64 * 8)
  8888  0ABB  3000               	movlw	0
  8889  0ABC  0021               	movlb	1	; select bank1
  8890  0ABD  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8891  0ABE  1D03               	skipz
  8892  0ABF  2ACA               	goto	u5355
  8893  0AC0  3000               	movlw	0
  8894  0AC1  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8895  0AC2  1D03               	skipz
  8896  0AC3  2ACA               	goto	u5355
  8897  0AC4  3002               	movlw	2
  8898  0AC5  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8899  0AC6  1D03               	skipz
  8900  0AC7  2ACA               	goto	u5355
  8901  0AC8  3000               	movlw	0
  8902  0AC9  0247               	subwf	_modem_packet_size^(0+128),w
  8903  0ACA                     u5355:	
  8904  0ACA  1803               	btfsc	3,0
  8905  0ACB  0008               	return
  8906                           
  8907                           ;ax25.c: 84: if ((byte >> i) & 1)
  8908                           
  8909                           ;ax25.c: 83: return;
  8910  0ACC  0020               	movlb	0	; select bank0
  8911  0ACD  0820               	movf	Ax25_Send_Flag@byte,w
  8912  0ACE  00F2               	movwf	??_Ax25_Send_Flag
  8913  0ACF  0A21               	incf	Ax25_Send_Flag@i,w
  8914  0AD0  2AD2               	goto	u5364
  8915  0AD1                     u5365:	
  8916  0AD1  36F2               	lsrf	??_Ax25_Send_Flag,f
  8917  0AD2                     u5364:	
  8918  0AD2  0B89               	decfsz	9,f
  8919  0AD3  2AD1               	goto	u5365
  8920  0AD4  1C72               	btfss	??_Ax25_Send_Flag,0
  8921  0AD5  2AF9               	goto	l3519
  8922                           
  8923                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8924  0AD6  3001               	movlw	1
  8925  0AD7  00F2               	movwf	??_Ax25_Send_Flag
  8926  0AD8  0021               	movlb	1	; select bank1
  8927  0AD9  0847               	movf	_modem_packet_size^(0+128),w
  8928  0ADA  3907               	andlw	7
  8929  0ADB  0A89               	incf	9,f
  8930  0ADC  2ADE               	goto	u5384
  8931  0ADD                     u5385:	
  8932  0ADD  35F2               	lslf	??_Ax25_Send_Flag,f
  8933  0ADE                     u5384:	
  8934  0ADE  0B89               	decfsz	9,f
  8935  0ADF  2ADD               	goto	u5385
  8936  0AE0  0872               	movf	??_Ax25_Send_Flag,w
  8937  0AE1  00F3               	movwf	??_Ax25_Send_Flag+1
  8938  0AE2  0847               	movf	_modem_packet_size^(0+128),w
  8939  0AE3  00F4               	movwf	??_Ax25_Send_Flag+2
  8940  0AE4  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8941  0AE5  00F5               	movwf	??_Ax25_Send_Flag+3
  8942  0AE6  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8943  0AE7  00F6               	movwf	??_Ax25_Send_Flag+4
  8944  0AE8  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8945  0AE9  00F7               	movwf	??_Ax25_Send_Flag+5
  8946  0AEA  3003               	movlw	3
  8947  0AEB                     u5395:	
  8948  0AEB  36F7               	lsrf	??_Ax25_Send_Flag+5,f
  8949  0AEC  0CF6               	rrf	??_Ax25_Send_Flag+4,f
  8950  0AED  0CF5               	rrf	??_Ax25_Send_Flag+3,f
  8951  0AEE  0CF4               	rrf	??_Ax25_Send_Flag+2,f
  8952  0AEF  0B89               	decfsz	9,f
  8953  0AF0  2AEB               	goto	u5395
  8954  0AF1  0874               	movf	??_Ax25_Send_Flag+2,w
  8955  0AF2  3EA0               	addlw	_modem_packet& (0+255)
  8956  0AF3  0086               	movwf	6
  8957  0AF4  3001               	movlw	1	; select bank3/4
  8958  0AF5  0087               	movwf	7
  8959  0AF6  0873               	movf	??_Ax25_Send_Flag+1,w
  8960  0AF7  0481               	iorwf	1,f
  8961  0AF8  2B1C               	goto	l3521
  8962  0AF9                     l3519:	
  8963                           
  8964                           ;ax25.c: 86: else
  8965                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8966  0AF9  3001               	movlw	1
  8967  0AFA  00F2               	movwf	??_Ax25_Send_Flag
  8968  0AFB  0021               	movlb	1	; select bank1
  8969  0AFC  0847               	movf	_modem_packet_size^(0+128),w
  8970  0AFD  3907               	andlw	7
  8971  0AFE  0A89               	incf	9,f
  8972  0AFF  2B01               	goto	u5404
  8973  0B00                     u5405:	
  8974  0B00  35F2               	lslf	??_Ax25_Send_Flag,f
  8975  0B01                     u5404:	
  8976  0B01  0B89               	decfsz	9,f
  8977  0B02  2B00               	goto	u5405
  8978  0B03  0872               	movf	??_Ax25_Send_Flag,w
  8979  0B04  3AFF               	xorlw	255
  8980  0B05  00F3               	movwf	??_Ax25_Send_Flag+1
  8981  0B06  0847               	movf	_modem_packet_size^(0+128),w
  8982  0B07  00F4               	movwf	??_Ax25_Send_Flag+2
  8983  0B08  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8984  0B09  00F5               	movwf	??_Ax25_Send_Flag+3
  8985  0B0A  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8986  0B0B  00F6               	movwf	??_Ax25_Send_Flag+4
  8987  0B0C  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8988  0B0D  00F7               	movwf	??_Ax25_Send_Flag+5
  8989  0B0E  3003               	movlw	3
  8990  0B0F                     u5415:	
  8991  0B0F  36F7               	lsrf	??_Ax25_Send_Flag+5,f
  8992  0B10  0CF6               	rrf	??_Ax25_Send_Flag+4,f
  8993  0B11  0CF5               	rrf	??_Ax25_Send_Flag+3,f
  8994  0B12  0CF4               	rrf	??_Ax25_Send_Flag+2,f
  8995  0B13  0B89               	decfsz	9,f
  8996  0B14  2B0F               	goto	u5415
  8997  0B15  0874               	movf	??_Ax25_Send_Flag+2,w
  8998  0B16  3EA0               	addlw	_modem_packet& (0+255)
  8999  0B17  0086               	movwf	6
  9000  0B18  3001               	movlw	1	; select bank3/4
  9001  0B19  0087               	movwf	7
  9002  0B1A  0873               	movf	??_Ax25_Send_Flag+1,w
  9003  0B1B  0581               	andwf	1,f
  9004  0B1C                     l3521:	
  9005  0B1C  3001               	movlw	1
  9006  0B1D  0020               	movlb	0	; select bank0
  9007  0B1E  07A1               	addwf	Ax25_Send_Flag@i,f
  9008  0B1F  3000               	movlw	0
  9009  0B20  3DA2               	addwfc	Ax25_Send_Flag@i+1,f
  9010  0B21  3001               	movlw	1
  9011  0B22  0021               	movlb	1	; select bank1
  9012  0B23  07C7               	addwf	_modem_packet_size^(0+128),f
  9013  0B24  3000               	movlw	0
  9014  0B25  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  9015  0B26  3000               	movlw	0
  9016  0B27  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  9017  0B28  3000               	movlw	0
  9018  0B29  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  9019  0B2A  0020               	movlb	0	; select bank0
  9020  0B2B  2AB1               	goto	L5
  9021  0B2C                     __end_of_Ax25_Send_Flag:	
  9022                           
  9023                           	psect	text51
  9024  156E                     __ptext51:	
  9025 ;; *************** function _Adc1_Start *****************
  9026 ;; Defined at:
  9027 ;;		line 294 in file "utility.c"
  9028 ;; Parameters:    Size  Location     Type
  9029 ;;		None
  9030 ;; Auto vars:     Size  Location     Type
  9031 ;;		None
  9032 ;; Return value:  Size  Location     Type
  9033 ;;		None               void
  9034 ;; Registers used:
  9035 ;;		None
  9036 ;; Tracked objects:
  9037 ;;		On entry : 0/0
  9038 ;;		On exit  : 0/0
  9039 ;;		Unchanged: 0/0
  9040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9045 ;;Total ram usage:        0 bytes
  9046 ;; Hardware stack levels used:    1
  9047 ;; Hardware stack levels required when called:    1
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_main
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           
  9056                           ;psect for function _Adc1_Start
  9057  156E                     _Adc1_Start:	
  9058                           
  9059                           ;utility.c: 295: ADIF = 0;
  9060                           
  9061                           ;incstack = 0
  9062                           ; Regs used in _Adc1_Start: []
  9063  156E  0020               	movlb	0	; select bank0
  9064  156F  1311               	bcf	17,6	;volatile
  9065                           
  9066                           ;utility.c: 296: ADON = 1;
  9067  1570  0021               	movlb	1	; select bank1
  9068  1571  141D               	bsf	29,0	;volatile
  9069                           
  9070                           ;utility.c: 297: ADIE = 1;
  9071  1572  1711               	bsf	17,6	;volatile
  9072  1573  0008               	return
  9073  1574                     __end_of_Adc1_Start:	
  9074                           
  9075                           	psect	intentry
  9076  0004                     __pintentry:	
  9077 ;; *************** function _global_interrupt *****************
  9078 ;; Defined at:
  9079 ;;		line 41 in file "main.c"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;		None
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;		None
  9084 ;; Return value:  Size  Location     Type
  9085 ;;		None               void
  9086 ;; Registers used:
  9087 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9088 ;; Tracked objects:
  9089 ;;		On entry : 0/0
  9090 ;;		On exit  : 0/0
  9091 ;;		Unchanged: 0/0
  9092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9097 ;;Total ram usage:        2 bytes
  9098 ;; Hardware stack levels used:    1
  9099 ;; This function calls:
  9100 ;;		Nothing
  9101 ;; This function is called by:
  9102 ;;		Interrupt level 1
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106  0004                     _global_interrupt:	
  9107                           
  9108                           ;incstack = 0
  9109                           ; Regs used in _global_interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  9110  0004  147E               	bsf	126,0	;set compiler interrupt flag
  9111  0005  3180               	pagesel	$
  9112  0006  0020               	movlb	0	; select bank0
  9113  0007  087F               	movf	127,w
  9114  0008  00F1               	movwf	??_global_interrupt+1
  9115                           
  9116                           ;main.c: 43: INTCON &= ~0x80;
  9117  0009  307F               	movlw	127
  9118  000A  00F0               	movwf	??_global_interrupt
  9119  000B  0870               	movf	??_global_interrupt,w
  9120  000C  058B               	andwf	11,f	;volatile
  9121                           
  9122                           ;main.c: 46: if(ADIF){
  9123  000D  1F11               	btfss	17,6	;volatile
  9124  000E  281A               	goto	i1l2863
  9125                           
  9126                           ;main.c: 47: adc_sonuc_high = ADRESH;
  9127  000F  0021               	movlb	1	; select bank1
  9128  0010  081C               	movf	28,w	;volatile
  9129  0011  00F0               	movwf	??_global_interrupt
  9130  0012  0870               	movf	??_global_interrupt,w
  9131  0013  00D5               	movwf	_adc_sonuc_high^(0+128)
  9132                           
  9133                           ;main.c: 48: adc_sonuc_low = ADRESL;
  9134  0014  081B               	movf	27,w	;volatile
  9135  0015  00F0               	movwf	??_global_interrupt
  9136  0016  0870               	movf	??_global_interrupt,w
  9137  0017  00D6               	movwf	_adc_sonuc_low^(0+128)
  9138                           
  9139                           ;main.c: 50: ADIF = 0;
  9140  0018  0020               	movlb	0	; select bank0
  9141  0019  1311               	bcf	17,6	;volatile
  9142  001A                     i1l2863:	
  9143                           
  9144                           ;main.c: 51: }
  9145                           ;main.c: 55: if(PIR1 & 0x04){
  9146  001A  1D11               	btfss	17,2	;volatile
  9147  001B  2828               	goto	i1l2873
  9148                           
  9149                           ;main.c: 57: Systick_Counter += 1;
  9150  001C  3001               	movlw	1
  9151  001D  0021               	movlb	1	; select bank1
  9152  001E  07CF               	addwf	_Systick_Counter^(0+128),f
  9153  001F  3000               	movlw	0
  9154  0020  3DD0               	addwfc	(_Systick_Counter+1)^(0+128),f
  9155                           
  9156                           ;main.c: 61: TMR1H = 0x00;
  9157  0021  0020               	movlb	0	; select bank0
  9158  0022  0197               	clrf	23	;volatile
  9159                           
  9160                           ;main.c: 62: TMR1L = 0x00;
  9161  0023  0196               	clrf	22	;volatile
  9162                           
  9163                           ;main.c: 64: PIR1 &= ~0x04;
  9164  0024  30FB               	movlw	251
  9165  0025  00F0               	movwf	??_global_interrupt
  9166  0026  0870               	movf	??_global_interrupt,w
  9167  0027  0591               	andwf	17,f	;volatile
  9168  0028                     i1l2873:	
  9169                           
  9170                           ;main.c: 68: }
  9171                           ;main.c: 72: if(INTCON & 0x04){
  9172  0028  1D0B               	btfss	11,2	;volatile
  9173  0029  283E               	goto	i1l2885
  9174                           
  9175                           ;main.c: 74: DACCON1 = sine_table2[i++];
  9176  002A  087B               	movf	_i,w
  9177  002B  3E50               	addlw	_sine_table2& (0+255)
  9178  002C  0086               	movwf	6
  9179  002D  3001               	movlw	1	; select bank2/3
  9180  002E  0087               	movwf	7
  9181  002F  0801               	movf	1,w
  9182  0030  0022               	movlb	2	; select bank2
  9183  0031  0099               	movwf	25	;volatile
  9184  0032  3001               	movlw	1
  9185  0033  00F0               	movwf	??_global_interrupt
  9186  0034  0870               	movf	??_global_interrupt,w
  9187  0035  07FB               	addwf	_i,f
  9188                           
  9189                           ;main.c: 75: if (i==13)
  9190  0036  087B               	movf	_i,w
  9191  0037  3A0D               	xorlw	13
  9192  0038  1903               	btfsc	3,2
  9193                           
  9194                           ;main.c: 76: i=0;
  9195  0039  01FB               	clrf	_i
  9196                           
  9197                           ;main.c: 80: INTCON &= ~0x04;
  9198  003A  30FB               	movlw	251
  9199  003B  00F0               	movwf	??_global_interrupt
  9200  003C  0870               	movf	??_global_interrupt,w
  9201  003D  058B               	andwf	11,f	;volatile
  9202  003E                     i1l2885:	
  9203                           
  9204                           ;main.c: 81: }
  9205                           ;main.c: 86: INTCON |= 0x80;
  9206  003E  178B               	bsf	11,7	;volatile
  9207  003F  0871               	movf	??_global_interrupt+1,w
  9208  0040  0020               	movlb	0	; select bank0
  9209  0041  00FF               	movwf	127
  9210  0042  107E               	bcf	126,0	;clear compiler interrupt flag
  9211  0043  0009               	retfie
  9212  0044                     __end_of_global_interrupt:	
  9213  007E                     btemp	set	126	;btemp
  9214  007E                     pic14e$flags	set	126
  9215  007E                     wtemp	set	126
  9216  007E                     wtemp0	set	126
  9217  0080                     wtemp1	set	128
  9218  0082                     wtemp2	set	130
  9219  0084                     wtemp3	set	132
  9220  0086                     wtemp4	set	134
  9221  0088                     wtemp5	set	136
  9222  007F                     wtemp6	set	127
  9223  007E                     ttemp	set	126
  9224  007E                     ttemp0	set	126
  9225  0081                     ttemp1	set	129
  9226  0084                     ttemp2	set	132
  9227  0087                     ttemp3	set	135
  9228  007F                     ttemp4	set	127
  9229  007E                     ltemp	set	126
  9230  007E                     ltemp0	set	126
  9231  0082                     ltemp1	set	130
  9232  0086                     ltemp2	set	134
  9233  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    520
    Data        30
    BSS         158
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     79      80
    BANK1            80     20      79
    BANK2            80      0      62
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Three@reg(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Three@reg(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_Ax25_Send_Footer
    _Set_Freq->___aldiv
    ___lltoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    _Adf_Reset->_Delay_ms
    _Modem_Init->___lmul
    ___lldiv->___lmul
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy
    _Read_Adf7012_Muxout->_Delay_ms
    _Delay_ms->_CheckDelay
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Ax25_Send_Flag
    _Ax25_Send_Header->_Ax25_Send_Sync
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Ax25_Send_Flag
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc

Critical Paths under _global_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Ptt_On
    _Set_Freq->___fttol
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftdiv->___lltoft
    ___ftadd->___ftneg
    _Modem_Init->___lldiv
    ___lldiv->___lmul
    _Modem_Flush_Frame->_Ptt_On
    _Ptt_On->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _Ptt_On->_Adf_Lock

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  169061
                                             78 BANK0      1     1      0
                                              4 BANK1     16    16      0
                         _Adc1_Start
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                         _Dac0_Start
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                             _Ptt_On
                       _System_Start
                       _Timer0_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   23797
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   39545
                         _Modem_Init
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   38480
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
                        _Gpio_Config
                           _Set_Freq
 ---------------------------------------------------------------------------------
 (3) _Set_Freq                                            26    22      4   13314
                                             30 BANK0     26    22      4
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4    2334
                                              0 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      98
                                              6 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2655
                                              0 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2587
                                              6 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3482
                                              9 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2037
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     575
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) _Gpio_Config                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1369
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1369
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Modem_Init                                           6     6      0    1065
                                             18 BANK0      6     6      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     304
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     761
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    0     0      0   51834
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (1) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ptt_On                                               1     1      0   50465
                                             77 BANK0      1     1      0
                           _Adf_Lock
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Adf_Lock                                             6     6      0   25299
                                             75 BANK0      2     2      0
                                              0 BANK1      4     4      0
                         _Adf_Locked
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   22428
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    5607
                                             11 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    5607
                                             11 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    5607
                                             11 BANK0     64    64      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    5607
                                             11 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    3343
                                              3 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1461
                                              9 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1331
                                              9 COMMON     1     0      1
                                              0 BANK0     11    11      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              2 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (3) _Adf_Locked                                           0     0      0    1369
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Read_Adf7012_Muxout                                  0     0      0    1369
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             2     0      2    1369
                                              7 COMMON     2     0      2
                         _CheckDelay
 ---------------------------------------------------------------------------------
 (4) _CheckDelay                                           5     3      2      22
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Dac0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     449
                                              6 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     254
                                              8 COMMON     1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2    1135
                                              6 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0     133
                                              2 COMMON     6     6      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     424
                                              8 COMMON     2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     223
                                              5 COMMON     3     3      0
                                              0 BANK0      6     6      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0     133
                                              2 COMMON     6     6      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _global_interrupt                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start
   _Delay_ms
     _CheckDelay
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _CheckDelay
     _Ptt_On
       _Adf_Lock
         _Adf_Locked
           _Read_Adf7012_Muxout
             _Delay_ms
               _CheckDelay
         _Adf_Write_Config
           _Adf_Write_Register_One
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _CheckDelay
               _Spi_Byte_Send
                 _Delay_ms
                   _CheckDelay
             _memcpy
           _Adf_Write_Register_Three
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _CheckDelay
               _Spi_Byte_Send
                 _Delay_ms
                   _CheckDelay
             _memcpy
           _Adf_Write_Register_Two
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _CheckDelay
               _Spi_Byte_Send
                 _Delay_ms
                   _CheckDelay
             _memcpy
           _Adf_Write_Register_Zero
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _CheckDelay
               _Spi_Byte_Send
                 _Delay_ms
                   _CheckDelay
             _memcpy
         _Delay_ms
           _CheckDelay
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
       _Delay_ms
         _CheckDelay
       _Read_Adf7012_Muxout
         _Delay_ms
           _CheckDelay
     _Timer0_Start
   _Modem_Setup
     _Modem_Init
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _CheckDelay
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
       _Delay_ms
         _CheckDelay
       _Gpio_Config
       _Set_Freq
         ___aldiv
         ___ftadd
           ___ftneg (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
         ___ftneg
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lldiv
           ___lmul (ARG)
         ___lltoft
           ___ftpack
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
     _Delay_ms
       _CheckDelay
   _Ptt_On
     _Adf_Lock
       _Adf_Locked
         _Read_Adf7012_Muxout
           _Delay_ms
             _CheckDelay
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
       _Delay_ms
         _CheckDelay
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
     _Delay_ms
       _CheckDelay
     _Read_Adf7012_Muxout
       _Delay_ms
         _CheckDelay
   _System_Start
   _Timer0_Start
   _Timer1_Start

 _global_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3E       9       77.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     129      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     129      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Sep 22 18:16:03 2014

                                _i 007B                        __CFG_CP$OFF 0000  
          _Adf_Reset_Register_Zero 1638                     Reverse_Array@i 002A  
                   Spi_Byte_Send@i 0022           __end_of_Adf_Reset_Config 15EB  
                     ___ftadd@exp1 0035                       ___ftadd@exp2 0034  
                      __CFG_LVP$ON 0000                       ___ftadd@sign 0033  
         _Adf_Reset_Register_Three 168A                                l131 0073  
                              l223 16FE                                l335 049E  
                              l629 0B3D                                l741 0931  
                              l735 091A                                l764 0623  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00D1                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 002B  
                     __CFG_IESO$ON 0000                         _CheckDelay 15FB  
                    ??_Gpio_Config 0072             _Adf_Write_Register_One 0948  
           _Adf_Write_Register_Two 0CE9                       ___ftdiv@cntr 0030  
                     ___ftdiv@sign 0035                               l2011 16CF  
                             l2043 17E0                               l2055 15DA  
                             l3031 0871                               l3033 0885  
                             l3121 0B4E                               l3201 061F  
                             l3131 0B6C                               l3109 081B  
                             l3205 0635                               l3301 0CB9  
                             l3143 0B97                               l2407 0BC7  
                             l3321 08A6                               l3129 0B5E  
                             l3081 0901                               l3209 0647  
                             l3305 0CC1                               l2441 0C2C  
                             l2433 0C12                               l2425 0BF7  
                             l3331 08D4                               l3323 08B4  
                             l3147 0BA5                               l3139 0B8C  
                             l3091 0927                               l3083 0906  
                             l3075 08F0                               l3219 0662  
                             l3163 05B3                               l3235 0781  
                             l2435 0C1B                               l2427 0C05  
                             l3181 05DC                               l3229 076B  
                             l2437 0C1E                               l3335 08DF  
                             l3079 08F7                               l3191 05FE  
                             l3159 05AC                               l3271 0C4C  
                             l3343 1747                               l3521 0B1C  
                             l3089 091F                               l3193 0602  
                             l3169 05C2                               l3257 07DB  
                             l3249 07C2                               l3345 1757  
                             l3187 05EF                               l3429 0EE4  
                             l3189 05F9                               l3293 0CA5  
                             l3277 0C62                               l3519 0AF9  
                             l3439 0F2E                               l3543 06AE  
                             l3199 0615                               l3537 069B  
                             l2585 17A3                               l3289 0C9D  
                             l3393 04B4                               l3563 06EC  
                             l3555 06CF                               l3379 09E9  
                             l3387 0488                               l3573 0732  
                             l3549 06BC                               l2589 17AE  
                             l3653 00DF                               l3495 0A77  
                             l1975 15A0                               l3497 0A9A  
                             l3569 0711                               l3577 06D2  
                             l3579 074C                               l3587 1670  
                             l3659 00E8                               l1989 16FF  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _ADON 04E8  
                             STR_1 0308                               u3005 0BCE  
                             u3035 0BF8                               u4005 0DA9  
                             u4015 0DB8                               u4105 0CF2  
                             u4025 0DC7                               u3065 0C13  
                             u4115 0D01                               u4035 0DD6  
                             u4205 0353                               u4125 0D1B  
                             u4045 0DE5                               u5005 08D5  
                             u4215 0362                               u4135 0D2A  
                             u4055 0DF4                               u4225 0371  
                             u4145 0D39                               u4065 0E0F  
                             u5025 174C                               u5114 0E7B  
                             u5115 0E7A                               u4075 0951  
                             u4235 0380                               u4155 0D48  
                             u5124 0E88                               u5205 0F15  
                             u5125 0E87                               u4085 095F  
                             u4245 038F                               u4165 0317  
                             u4325 08FC                               u4095 0979  
                             u4255 039E                               u4175 0326  
                             u3375 17AF                               u5145 0E9B  
                             u5305 0A69                               u4265 03AD  
                             u4185 0335                               u3385 17B6  
                             u4345 0915                               u5154 0EA7  
                             u5314 0A7F                               u5155 0EA6  
                             u5315 0A7E                               u4275 03BC  
                             u4195 0344                               u5235 0F8B  
                             u5075 0483                               u5404 0B01  
                             u5405 0B00                               u5165 0EBC  
                             u5325 0A8D                               u4285 03CB  
                             u5245 0FDF                               u4365 0922  
                             u5085 0497                               u5415 0B0F  
                             u5175 0EE2                               u4295 03DA  
                             u4455 0B61                               u4615 05DD  
                             u5095 04AD                               u5185 0EF3  
                             u5265 0A48                               u5505 071E  
                             u4705 0616                               u5194 0EFF  
                             u5274 0A50                               u5355 0ACA  
                             u5195 0EFE                               u5275 0A4F  
                             u5515 0723                               u5435 0699  
                             u1995 16D9                               u4475 0B6D  
                             u4395 0938                               u5364 0AD2  
                             u5365 0AD1                               u5525 0736  
                             u5445 06AC                               u4485 0B81  
                             u4645 05F0                               u4805 07D2  
                             u5294 0A5C                               u5295 0A5B  
                             u5535 06DC                               u5455 06BA  
                             u4495 0B8D                               u4815 07DC  
                             u5384 0ADE                               u5385 0ADD  
                             u5465 06CD                               _PIR1 0011  
                             u5570 00B2                               u5395 0AEB  
                             u5555 162D                               u5475 06EA  
                             u4675 0603                               u5485 06F0  
                             u4925 0CC2                               u5495 070F  
                             u4775 0793                               u4935 0CC8  
                             u4855 0C6E                               u4785 07A3  
                             u4865 0C7E                               u4795 07C3  
                             u4965 08A9                               u4885 0CA6  
                             u4895 0CAC                               u4985 08B5  
                             u4995 08C9                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 0070                       ___ftpack@arg 0072  
                     ___ftpack@exp 0075                               _test 00D8  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      Send_Byte@byte 0075  
                    __CFG_BOREN$ON 0000                               ltemp 007E  
                             start 0044                               ttemp 007E  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                       ___ftmul@sign 002F  
          _Adf_Write_Register_Zero 0DA0                       ___fttol@exp1 003D  
                     ___fttol@lval 0039                        ?_Adc1_Start 0070  
                     Adf_Lock@bias 00DD                 main@beacon_address 00DF  
                    __CFG_PLLEN$ON 0000                    __end_of_Ptt_Off 15CE  
                  __end_of___aldiv 0BAE                      ??_Radio_Setup 007A  
                            _ADCS0 04F4                              _ADCS1 04F5  
                            _ADCS2 04F6                              ?_main 0070  
                            _DACEN 08C7                              _DACOE 08C5  
                  __end_of___ftadd 067A                      __CFG_WDTE$OFF 0000  
                            _ANSA1 0C61                    __end_of___ftdiv 07FD  
                  __end_of___ftneg 1592                    __end_of___lldiv 08E8  
                      ?_Dac0_Start 0070                    __end_of___ftmul 0CE9  
                  __end_of___fttol 0C35                              _TMR1H 0017  
                            _TMR1L 0016                              _TRISA 008C  
                            _TRISC 008E         Write_Adf7012_Reg@reg_value 0025  
              ___lmul@multiplicand 0076                       ___lltoft@exp 0025  
                            _phase 012C                              _test2 00D9  
                    ___ftpack@sign 0076                   __end_of_Adf_Lock 0A2B  
                    ??_Modem_Setup 007A                      Set_Freq@f_pfd 0050  
                __end_of_BAUD_RATE 0306                      Set_Freq@ratio 004A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
               __size_of_Adf_Reset 0009                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 15A9  
                            wtemp6 007F                __end_of_Gpio_Config 15C1  
                 __end_of_Delay_ms 15A9                        ?_Adf_Locked 0070  
           _current_sample_in_baud 00D7                  Spi_Byte_Send@data 0020  
                       Send_Byte@i 0076                    __initialization 0046  
        ??_Adf_Reset_Register_Zero 0072          __size_of_Ax25_Send_Header 00DA  
            __size_of_System_Start 002E                       __end_of_main 00FA  
        __size_of_Ax25_Send_Footer 0017          __size_of_Ax25_Send_String 001D  
            __end_of_Reverse_Array 1800           _Adf_Write_Register_Three 030E  
            __end_of_Spi_Byte_Send 1718                             ??_main 006E  
                    ___fttol@sign1 0038                         _Modem_Init 0F33  
                 __end_of_Set_Freq 0584                        ?_CheckDelay 0072  
              __end_of_Radio_Setup 166D       __size_of_Read_Adf7012_Muxout 000E  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _DACNSS 08C0  
                           _ADNREF 04F2                             _ADRESH 009C  
                           _ADRESL 009B                             _CCPR1H 0292  
                           _CCPR1L 0291                   __end_of___ftpack 0948  
    Adf_Write_Register_One@reg_ptr 0037                   __end_of___lltoft 176C  
                           i1l2863 001A                             i1l2873 0028  
                           i1l2885 003E                             _INTCON 000B  
              __size_of_Adc1_Start 0006                             _OSCCON 0099  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1ON 00C0                       _System_Start 176C  
              __size_of_Dac0_Start 0005                __end_of_Modem_Setup 157A  
                   __CFG_PWRTE$OFF 0000          ??_Adf_Write_Register_Zero 002B  
                           _Ptt_On 0826                          ??_Ptt_Off 007A  
                           ___lmul 179A                          ??___aldiv 0020  
               __size_of_Send_Byte 00CC                 Reverse_Array@input 0029  
                        ??___ftadd 002F                     __CFG_STVREN$ON 0000  
                        ??___ftdiv 002C                          ??___ftneg 007A  
                        ??___lldiv 002C                          ??___ftmul 0026  
                        ??___fttol 0034                   ??_Ax25_Send_Flag 0072  
                 ??_Ax25_Send_Byte 0078                             _memcpy 16C6  
                 ??_Ax25_Send_Sync 0072                  __end_of_Adf_Reset 1589  
            ___ftmul@f3_as_product 002B                         _Update_Crc 0803  
              __size_of_Adf_Locked 0003                        _Gpio_Config 15B5  
          __end_of__initialization 006C                      _adc_sonuc_low 00D6  
                       ___ftadd@f1 0029                         ___ftadd@f2 002C  
                       ___ftdiv@f1 0029                         ___ftdiv@f2 0026  
                       ___ftdiv@f3 0031                         ___ftneg@f1 0026  
        __size_of_global_interrupt 0040                 Write_Adf7012_Reg@i 0026  
                       ___ftmul@f1 0020                         ___ftmul@f2 0023  
       ??_Adf_Reset_Register_Three 0072                         ___fttol@f1 0030  
                   __pcstackCOMMON 0070           ??_Adf_Reset_Register_One 0072  
                     __pidataBANK2 16A8           ??_Adf_Reset_Register_Two 0072  
              __size_of_CheckDelay 0011                         ___lltoft@c 0020  
                       _adf_config 00A0                      _PLAYBACK_RATE 0300  
                        ?_Adf_Lock 0070                        ?_Modem_Init 0070  
                ?_Adf_Reset_Config 0070                        _Radio_Setup 1651  
          ?_Adf_Write_Register_One 0070            ?_Adf_Write_Register_Two 0070  
        Spi_Byte_Send@data_to_send 0021                 ??_Adf_Reset_Config 0079  
                        ?_Delay_ms 0077                  __end_of_Send_Byte 0F33  
                 _PHASE_DELTA_1200 0124                   _PHASE_DELTA_2200 0128  
                      _Modem_Setup 1574                         __pbssBANK0 006F  
                       __pbssBANK1 00A0                         __pbssBANK2 0120  
                       __pbssBANK3 01A0                 Ax25_Send_Flag@byte 0020  
                        ?_Set_Freq 003E                      ?_Timer0_Start 0070  
      Adf_Write_Register_Three@reg 0067                      ?_Timer1_Start 0070  
                       __pmaintext 0070                   _Ax25_Send_Header 067A  
                          ?_Ptt_On 0070                            ?___lmul 0072  
               __end_of_TABLE_SIZE 0308                   _Ax25_Send_Footer 1621  
                       __pintentry 0004                       ??_Adc1_Start 0072  
                          _DACCON1 0119                 Ax25_Send_Byte@byte 0078  
                          _DACPSS0 08C2                            _DACPSS1 08C3  
                          ?_memcpy 0072                   _Ax25_Send_String 166D  
                          _ADPREF0 04F0                            _ADPREF1 04F1  
                   ___lmul@product 0020                         ??_Adf_Lock 006B  
                        ?___ftpack 0072                          ?___lltoft 0020  
   __end_of_Adf_Write_Register_One 09B9     __end_of_Adf_Write_Register_Two 0DA0  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                     ??_Dac0_Start 0072           __end_of_Adf_Write_Config 15B5  
                      ?_Update_Crc 0070                         ??_Delay_ms 0079  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _PTT_OFF 00D4                Update_Crc@input_bit 0074  
    Adf_Write_Register_Two@reg_ptr 0043     Adf_Write_Register_Zero@reg_ptr 0047  
               __end_of_Adc1_Start 1574                     ??_Timer0_Start 0072  
              __size_of_Modem_Init 00CD                     ??_Timer1_Start 0072  
                        _BAUD_RATE 0304                       ??_Adf_Locked 0079  
                       ??_Set_Freq 0042         ??_Adf_Write_Register_Three 002B  
               __end_of_Dac0_Start 1569                         _packet_pos 00CB  
                          _Ptt_Off 15C1                    __size_of_Ptt_On 0036  
              _Read_Adf7012_Muxout 15CE                            ___aldiv 0B2C  
                  __size_of___lmul 0032                            ___ftadd 0584  
  __size_of_Adf_Reset_Register_One 0010                            ___ftdiv 0754  
                          ___ftneg 1589                            ___lldiv 0895  
  __size_of_Adf_Reset_Register_Two 0015                            ___ftmul 0C35  
                          ___fttol 0BAE                 Ax25_Send_Sync@byte 0020  
              Reverse_Array@length 0079                    Ax25_Send_Flag@i 0021  
                  __size_of_memcpy 0028                         ??___ftpack 0077  
                       ??___lltoft 0024                            __ptext1 1592  
                          __ptext2 176C                            __ptext3 15C1  
                          __ptext4 1574                            __ptext5 1651  
                          __ptext6 0472                            __ptext7 1742  
                          __ptext8 0BAE                            __ptext9 1589  
            Delay_ms@time_to_delay 0077          Adf_Write_Register_One@reg 003A  
                  Ax25_Send_Sync@i 0021                   ___aldiv@dividend 0076  
                     ??_CheckDelay 0074                 __end_of_Adf_Locked 0800  
             ?_Read_Adf7012_Muxout 0070          Adf_Write_Register_Two@reg 0047  
                    _Delay_Counter 0120                            clrloop0 00FB  
  Adf_Write_Register_Three@reg_ptr 0063               end_of_initialization 006C  
                          memcpy@d 0076                            memcpy@n 0073  
                          memcpy@s 0077                            init_ram 157A  
                          initloop 157B                   _global_interrupt 0004  
                  ___lldiv@divisor 0024                    ___lldiv@counter 0031  
              __size_of_Update_Crc 0023                   ___aldiv@quotient 0023  
                       _sine_table 0100                       __pstringtext 0100  
               __end_of_CheckDelay 160C                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 00CF                          _Adf_Reset 1580  
                   _adc_sonuc_high 00D5              ??_Read_Adf7012_Muxout 0079  
                       _powerlevel 0134                   _SAMPLES_PER_BAUD 006F  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 15EB  
     Write_Adf7012_Reg@size_of_reg 0023             _Adf_Reset_Register_Two 160C  
           __size_of_Reverse_Array 0034             __size_of_Spi_Byte_Send 002A  
                      ___ftdiv@exp 0034           ?_Adf_Reset_Register_Zero 0070  
                      ___ftmul@exp 002A                        Adf_Lock@adj 00DB  
                   __end_of_Ptt_On 085C                     __end_of___lmul 17CC  
                   __end_of_memcpy 16EE                       ??_Modem_Init 0032  
                     ?_Radio_Setup 0070                       Set_Freq@freq 003E  
                     Set_Freq@rest 004D                  __size_of_Adf_Lock 0072  
             __end_of_Timer0_Start 156E               __end_of_Timer1_Start 159D  
              start_initialization 0046                         ?_Adf_Reset 0070  
         __end_of_Ax25_Send_Header 0754                          Set_Freq@m 0046  
                        Set_Freq@n 0054           __end_of_Ax25_Send_Footer 1638  
                __size_of_Delay_ms 000C                       ?_Modem_Setup 0070  
         __end_of_Ax25_Send_String 168A          __size_of_Adf_Reset_Config 000F  
         ?_Adf_Write_Register_Zero 0070                          _Send_Byte 0E67  
               __end_of_Modem_Init 1000                           ??_Ptt_On 006D  
                __size_of_Set_Freq 0112                           ??___lmul 007A  
                      __pdataBANK2 0140                           ??_memcpy 0075  
                    _Reverse_Array 17CC                      _Spi_Byte_Send 16EE  
                ?_Adf_Write_Config 0070                  __size_of___ftpack 0060  
                     ??_Update_Crc 0072                  __size_of___lltoft 002A  
                      __pbssCOMMON 007A                          ___latbits 0002  
__size_of_Adf_Reset_Register_Three 001E                      _ones_in_a_row 013E  
                    __pcstackBANK0 0020                      __pcstackBANK1 00DB  
               ??_Adf_Write_Config 007A          ?_Adf_Reset_Register_Three 0070  
              __end_of__stringdata 030E            __size_of_Ax25_Send_Flag 0082  
          __size_of_Ax25_Send_Byte 0005            __size_of_Ax25_Send_Sync 007F  
  __end_of_Adf_Reset_Register_Zero 1651      Ax25_Send_Header@num_addresses 0026  
                       ?_Send_Byte 0070                  _Write_Adf7012_Reg 085C  
                     _current_byte 007A                  Ax25_Send_Header@i 002E  
                Ax25_Send_Header@j 002C                 ?_Write_Adf7012_Reg 0023  
        Ax25_Send_Footer@final_crc 0078             Ax25_Send_String@string 0026  
                         ?_Ptt_Off 0070                 __end_of_Update_Crc 0826  
                         ?___aldiv 0072                           ?___ftadd 0029  
                         ?___ftdiv 0026                           ?___ftneg 0026  
                         ?___lldiv 0024                           ?___ftmul 0020  
                         ?___fttol 0030                ??_Write_Adf7012_Reg 0024  
                   ?_Reverse_Array 0079                     ?_Spi_Byte_Send 0070  
         __end_of_global_interrupt 0044                        ??_Adf_Reset 0079  
  __end_of_Adf_Write_Register_Zero 0E67                  Ax25_Send_String@i 0028  
                      CheckDelay@t 0076          __end_of_Write_Adf7012_Reg 0895  
             __size_of_Gpio_Config 000C                    ___aldiv@divisor 0072  
                    ?_System_Start 0070                       _modem_packet 01A0  
                  ___aldiv@counter 0021                          clear_ram0 00FA  
                        main@F3177 0140              __size_of_Timer0_Start 0005  
                         _Adf_Lock 09B9              __size_of_Timer1_Start 000B  
        Reverse_Array@buffer_array 0025                        __stringdata 0308  
__size_of_Adf_Write_Register_Three 0164            ?_Adf_Reset_Register_One 0070  
        ?_Adf_Write_Register_Three 0070            ?_Adf_Reset_Register_Two 0070  
             __size_of_Radio_Setup 001C                           _Delay_ms 159D  
                ___lmul@multiplier 0072                     ??_System_Start 0072  
                 _Adf_Reset_Config 15DC                        ??_Send_Byte 0020  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 1718  
                         _Set_Freq 0472                 ?_Modem_Flush_Frame 0070  
                     _Timer0_Start 1569                       _Timer1_Start 1592  
         ??_Adf_Write_Register_One 002B           ??_Adf_Write_Register_Two 002B  
                 __size_of_Ptt_Off 000D                    ??_Reverse_Array 0020  
                  ??_Spi_Byte_Send 0079                   __size_of___aldiv 0082  
            __end_of_PLAYBACK_RATE 0304                   __size_of___ftadd 00F6  
              ??_Modem_Flush_Frame 007A                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0009                   __size_of___lldiv 0053  
                 __size_of___ftmul 00B4                   __size_of___fttol 0087  
                         ___ftpack 08E8   __size_of_Adf_Reset_Register_Zero 0019  
                         ___lltoft 1742        __end_of_Read_Adf7012_Muxout 15DC  
   __end_of_Adf_Reset_Register_One 15FB                           _dac_flag 013C  
   __end_of_Adf_Reset_Register_Two 1621                     _Ax25_Send_Flag 0AAA  
                   _Ax25_Send_Byte 155F                     _Ax25_Send_Sync 0A2B  
                         __ptext10 0C35                           __ptext11 0754  
                         __ptext20 15EB                           __ptext12 0584  
                         __ptext21 1580                           __ptext13 08E8  
                         __ptext30 0DA0                           __ptext22 0F33  
                         __ptext14 0B2C                           __ptext31 0CE9  
                         __ptext23 179A                           __ptext15 15B5  
                         __ptext40 159D                           __ptext32 030E  
                         __ptext24 0895                           __ptext16 15DC  
                         __ptext41 15FB                           __ptext33 0948  
                         __ptext25 1718                           __ptext17 1638  
                         __ptext50 0AAA                           __ptext42 1564  
                         __ptext34 085C                           __ptext26 1569  
                         __ptext18 160C                           __ptext51 156E  
                         __ptext43 166D                           __ptext35 16EE  
                         __ptext27 0826                           __ptext19 168A  
                         __ptext44 155F                           __ptext36 17CC  
                         __ptext28 09B9                           __ptext45 067A  
                         __ptext37 16C6                           __ptext29 15A9  
                         __ptext46 0A2B                           __ptext38 07FD  
                         __ptext47 1621                           __ptext39 15CE  
                         __ptext48 0E67                           __ptext49 0803  
                ?_Ax25_Send_Header 0026                  ?_Ax25_Send_Footer 0070  
               ??_Ax25_Send_Header 0028          __end_of_Modem_Flush_Frame 1742  
       __size_of_Write_Adf7012_Reg 0039                  ?_Ax25_Send_String 0026  
               ??_Ax25_Send_Footer 0078                      __size_of_main 008A  
                      _phase_delta 0130                 ??_Ax25_Send_String 0079  
 __end_of_Adf_Reset_Register_Three 16A8         Adf_Write_Register_Zero@reg 004B  
 __size_of_Adf_Write_Register_Zero 00C7             __end_of_Ax25_Send_Flag 0B2C  
           __end_of_Ax25_Send_Byte 1564             __end_of_Ax25_Send_Sync 0AAA  
                       _TABLE_SIZE 0306                           memcpy@d1 0078  
                         memcpy@s1 0072                        pic14e$flags 007E  
                         intlevel1 0000                 __end_of_sine_table 0300  
                    _timeout_check 0138                   ___lldiv@dividend 0028  
        __size_of_Adf_Write_Config 000C                  __CFG_CLKOUTEN$OFF 0000  
               _MODEM_TRANSMITTING 00D3    __size_of_Adf_Write_Register_One 0071  
  __size_of_Adf_Write_Register_Two 00B7                         _Adc1_Start 156E  
                      _sine_table2 0150               __end_of_System_Start 179A  
                       _Dac0_Start 1564                       _timeout_flag 00DA  
                  ?_Ax25_Send_Flag 0070                   ___lldiv@quotient 002D  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070                       ___aldiv@sign 0022  
               ??_global_interrupt 0070         __size_of_Modem_Flush_Frame 002A  
                       _Adf_Locked 07FD                  _modem_packet_size 00C7  
 __end_of_Adf_Write_Register_Three 0472  
