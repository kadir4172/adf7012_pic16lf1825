

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Sep 22 17:56:15 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	dabs	1,0x620,48
    71                           	dabs	1,0x5A0,80
    72                           	dabs	1,0x520,80
    73                           	dabs	1,0x4A0,80
    74                           	dabs	1,0x420,80
    75                           	dabs	1,0x3A0,80
    76                           	dabs	1,0x330,64
    77                           	dabs	1,0x21F0,0,_modem_packet
    78                           	dabs	1,0x7E,2
    79  0000                     	;# 
    80  0001                     	;# 
    81  0002                     	;# 
    82  0003                     	;# 
    83  0004                     	;# 
    84  0005                     	;# 
    85  0006                     	;# 
    86  0007                     	;# 
    87  0008                     	;# 
    88  0009                     	;# 
    89  000A                     	;# 
    90  000B                     	;# 
    91  000C                     	;# 
    92  000E                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  008C                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  010C                     	;# 
   124  010E                     	;# 
   125  0111                     	;# 
   126  0112                     	;# 
   127  0113                     	;# 
   128  0114                     	;# 
   129  0115                     	;# 
   130  0116                     	;# 
   131  0117                     	;# 
   132  0118                     	;# 
   133  0119                     	;# 
   134  011A                     	;# 
   135  011B                     	;# 
   136  011D                     	;# 
   137  011E                     	;# 
   138  018C                     	;# 
   139  018E                     	;# 
   140  0191                     	;# 
   141  0191                     	;# 
   142  0192                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0194                     	;# 
   147  0195                     	;# 
   148  0196                     	;# 
   149  0199                     	;# 
   150  019A                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  020C                     	;# 
   158  020E                     	;# 
   159  0211                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  0291                     	;# 
   175  0291                     	;# 
   176  0292                     	;# 
   177  0293                     	;# 
   178  0294                     	;# 
   179  0295                     	;# 
   180  0295                     	;# 
   181  0296                     	;# 
   182  0298                     	;# 
   183  0298                     	;# 
   184  0299                     	;# 
   185  029A                     	;# 
   186  029B                     	;# 
   187  029C                     	;# 
   188  029D                     	;# 
   189  029E                     	;# 
   190  0311                     	;# 
   191  0311                     	;# 
   192  0312                     	;# 
   193  0313                     	;# 
   194  0318                     	;# 
   195  0318                     	;# 
   196  0319                     	;# 
   197  031A                     	;# 
   198  038C                     	;# 
   199  038E                     	;# 
   200  0391                     	;# 
   201  0392                     	;# 
   202  0393                     	;# 
   203  039A                     	;# 
   204  039C                     	;# 
   205  039D                     	;# 
   206  039E                     	;# 
   207  039F                     	;# 
   208  0415                     	;# 
   209  0416                     	;# 
   210  0417                     	;# 
   211  041C                     	;# 
   212  041D                     	;# 
   213  041E                     	;# 
   214  0FE4                     	;# 
   215  0FE5                     	;# 
   216  0FE6                     	;# 
   217  0FE7                     	;# 
   218  0FE8                     	;# 
   219  0FE9                     	;# 
   220  0FEA                     	;# 
   221  0FEB                     	;# 
   222  0FED                     	;# 
   223  0FEE                     	;# 
   224  0FEF                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000E                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  008C                     	;# 
   254  008E                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  010C                     	;# 
   270  010E                     	;# 
   271  0111                     	;# 
   272  0112                     	;# 
   273  0113                     	;# 
   274  0114                     	;# 
   275  0115                     	;# 
   276  0116                     	;# 
   277  0117                     	;# 
   278  0118                     	;# 
   279  0119                     	;# 
   280  011A                     	;# 
   281  011B                     	;# 
   282  011D                     	;# 
   283  011E                     	;# 
   284  018C                     	;# 
   285  018E                     	;# 
   286  0191                     	;# 
   287  0191                     	;# 
   288  0192                     	;# 
   289  0193                     	;# 
   290  0193                     	;# 
   291  0193                     	;# 
   292  0194                     	;# 
   293  0195                     	;# 
   294  0196                     	;# 
   295  0199                     	;# 
   296  019A                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019C                     	;# 
   300  019D                     	;# 
   301  019E                     	;# 
   302  019F                     	;# 
   303  020C                     	;# 
   304  020E                     	;# 
   305  0211                     	;# 
   306  0211                     	;# 
   307  0212                     	;# 
   308  0212                     	;# 
   309  0213                     	;# 
   310  0213                     	;# 
   311  0214                     	;# 
   312  0214                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0215                     	;# 
   316  0216                     	;# 
   317  0216                     	;# 
   318  0217                     	;# 
   319  0217                     	;# 
   320  0291                     	;# 
   321  0291                     	;# 
   322  0292                     	;# 
   323  0293                     	;# 
   324  0294                     	;# 
   325  0295                     	;# 
   326  0295                     	;# 
   327  0296                     	;# 
   328  0298                     	;# 
   329  0298                     	;# 
   330  0299                     	;# 
   331  029A                     	;# 
   332  029B                     	;# 
   333  029C                     	;# 
   334  029D                     	;# 
   335  029E                     	;# 
   336  0311                     	;# 
   337  0311                     	;# 
   338  0312                     	;# 
   339  0313                     	;# 
   340  0318                     	;# 
   341  0318                     	;# 
   342  0319                     	;# 
   343  031A                     	;# 
   344  038C                     	;# 
   345  038E                     	;# 
   346  0391                     	;# 
   347  0392                     	;# 
   348  0393                     	;# 
   349  039A                     	;# 
   350  039C                     	;# 
   351  039D                     	;# 
   352  039E                     	;# 
   353  039F                     	;# 
   354  0415                     	;# 
   355  0416                     	;# 
   356  0417                     	;# 
   357  041C                     	;# 
   358  041D                     	;# 
   359  041E                     	;# 
   360  0FE4                     	;# 
   361  0FE5                     	;# 
   362  0FE6                     	;# 
   363  0FE7                     	;# 
   364  0FE8                     	;# 
   365  0FE9                     	;# 
   366  0FEA                     	;# 
   367  0FEB                     	;# 
   368  0FED                     	;# 
   369  0FEE                     	;# 
   370  0FEF                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000E                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001E                     	;# 
   398  001F                     	;# 
   399  008C                     	;# 
   400  008E                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0095                     	;# 
   405  0096                     	;# 
   406  0097                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009A                     	;# 
   410  009B                     	;# 
   411  009B                     	;# 
   412  009C                     	;# 
   413  009D                     	;# 
   414  009E                     	;# 
   415  010C                     	;# 
   416  010E                     	;# 
   417  0111                     	;# 
   418  0112                     	;# 
   419  0113                     	;# 
   420  0114                     	;# 
   421  0115                     	;# 
   422  0116                     	;# 
   423  0117                     	;# 
   424  0118                     	;# 
   425  0119                     	;# 
   426  011A                     	;# 
   427  011B                     	;# 
   428  011D                     	;# 
   429  011E                     	;# 
   430  018C                     	;# 
   431  018E                     	;# 
   432  0191                     	;# 
   433  0191                     	;# 
   434  0192                     	;# 
   435  0193                     	;# 
   436  0193                     	;# 
   437  0193                     	;# 
   438  0194                     	;# 
   439  0195                     	;# 
   440  0196                     	;# 
   441  0199                     	;# 
   442  019A                     	;# 
   443  019B                     	;# 
   444  019B                     	;# 
   445  019C                     	;# 
   446  019D                     	;# 
   447  019E                     	;# 
   448  019F                     	;# 
   449  020C                     	;# 
   450  020E                     	;# 
   451  0211                     	;# 
   452  0211                     	;# 
   453  0212                     	;# 
   454  0212                     	;# 
   455  0213                     	;# 
   456  0213                     	;# 
   457  0214                     	;# 
   458  0214                     	;# 
   459  0215                     	;# 
   460  0215                     	;# 
   461  0215                     	;# 
   462  0216                     	;# 
   463  0216                     	;# 
   464  0217                     	;# 
   465  0217                     	;# 
   466  0291                     	;# 
   467  0291                     	;# 
   468  0292                     	;# 
   469  0293                     	;# 
   470  0294                     	;# 
   471  0295                     	;# 
   472  0295                     	;# 
   473  0296                     	;# 
   474  0298                     	;# 
   475  0298                     	;# 
   476  0299                     	;# 
   477  029A                     	;# 
   478  029B                     	;# 
   479  029C                     	;# 
   480  029D                     	;# 
   481  029E                     	;# 
   482  0311                     	;# 
   483  0311                     	;# 
   484  0312                     	;# 
   485  0313                     	;# 
   486  0318                     	;# 
   487  0318                     	;# 
   488  0319                     	;# 
   489  031A                     	;# 
   490  038C                     	;# 
   491  038E                     	;# 
   492  0391                     	;# 
   493  0392                     	;# 
   494  0393                     	;# 
   495  039A                     	;# 
   496  039C                     	;# 
   497  039D                     	;# 
   498  039E                     	;# 
   499  039F                     	;# 
   500  0415                     	;# 
   501  0416                     	;# 
   502  0417                     	;# 
   503  041C                     	;# 
   504  041D                     	;# 
   505  041E                     	;# 
   506  0FE4                     	;# 
   507  0FE5                     	;# 
   508  0FE6                     	;# 
   509  0FE7                     	;# 
   510  0FE8                     	;# 
   511  0FE9                     	;# 
   512  0FEA                     	;# 
   513  0FEB                     	;# 
   514  0FED                     	;# 
   515  0FEE                     	;# 
   516  0FEF                     	;# 
   517  0000                     	;# 
   518  0001                     	;# 
   519  0002                     	;# 
   520  0003                     	;# 
   521  0004                     	;# 
   522  0005                     	;# 
   523  0006                     	;# 
   524  0007                     	;# 
   525  0008                     	;# 
   526  0009                     	;# 
   527  000A                     	;# 
   528  000B                     	;# 
   529  000C                     	;# 
   530  000E                     	;# 
   531  0011                     	;# 
   532  0012                     	;# 
   533  0013                     	;# 
   534  0015                     	;# 
   535  0016                     	;# 
   536  0016                     	;# 
   537  0017                     	;# 
   538  0018                     	;# 
   539  0019                     	;# 
   540  001A                     	;# 
   541  001B                     	;# 
   542  001C                     	;# 
   543  001E                     	;# 
   544  001F                     	;# 
   545  008C                     	;# 
   546  008E                     	;# 
   547  0091                     	;# 
   548  0092                     	;# 
   549  0093                     	;# 
   550  0095                     	;# 
   551  0096                     	;# 
   552  0097                     	;# 
   553  0098                     	;# 
   554  0099                     	;# 
   555  009A                     	;# 
   556  009B                     	;# 
   557  009B                     	;# 
   558  009C                     	;# 
   559  009D                     	;# 
   560  009E                     	;# 
   561  010C                     	;# 
   562  010E                     	;# 
   563  0111                     	;# 
   564  0112                     	;# 
   565  0113                     	;# 
   566  0114                     	;# 
   567  0115                     	;# 
   568  0116                     	;# 
   569  0117                     	;# 
   570  0118                     	;# 
   571  0119                     	;# 
   572  011A                     	;# 
   573  011B                     	;# 
   574  011D                     	;# 
   575  011E                     	;# 
   576  018C                     	;# 
   577  018E                     	;# 
   578  0191                     	;# 
   579  0191                     	;# 
   580  0192                     	;# 
   581  0193                     	;# 
   582  0193                     	;# 
   583  0193                     	;# 
   584  0194                     	;# 
   585  0195                     	;# 
   586  0196                     	;# 
   587  0199                     	;# 
   588  019A                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019C                     	;# 
   592  019D                     	;# 
   593  019E                     	;# 
   594  019F                     	;# 
   595  020C                     	;# 
   596  020E                     	;# 
   597  0211                     	;# 
   598  0211                     	;# 
   599  0212                     	;# 
   600  0212                     	;# 
   601  0213                     	;# 
   602  0213                     	;# 
   603  0214                     	;# 
   604  0214                     	;# 
   605  0215                     	;# 
   606  0215                     	;# 
   607  0215                     	;# 
   608  0216                     	;# 
   609  0216                     	;# 
   610  0217                     	;# 
   611  0217                     	;# 
   612  0291                     	;# 
   613  0291                     	;# 
   614  0292                     	;# 
   615  0293                     	;# 
   616  0294                     	;# 
   617  0295                     	;# 
   618  0295                     	;# 
   619  0296                     	;# 
   620  0298                     	;# 
   621  0298                     	;# 
   622  0299                     	;# 
   623  029A                     	;# 
   624  029B                     	;# 
   625  029C                     	;# 
   626  029D                     	;# 
   627  029E                     	;# 
   628  0311                     	;# 
   629  0311                     	;# 
   630  0312                     	;# 
   631  0313                     	;# 
   632  0318                     	;# 
   633  0318                     	;# 
   634  0319                     	;# 
   635  031A                     	;# 
   636  038C                     	;# 
   637  038E                     	;# 
   638  0391                     	;# 
   639  0392                     	;# 
   640  0393                     	;# 
   641  039A                     	;# 
   642  039C                     	;# 
   643  039D                     	;# 
   644  039E                     	;# 
   645  039F                     	;# 
   646  0415                     	;# 
   647  0416                     	;# 
   648  0417                     	;# 
   649  041C                     	;# 
   650  041D                     	;# 
   651  041E                     	;# 
   652  0FE4                     	;# 
   653  0FE5                     	;# 
   654  0FE6                     	;# 
   655  0FE7                     	;# 
   656  0FE8                     	;# 
   657  0FE9                     	;# 
   658  0FEA                     	;# 
   659  0FEB                     	;# 
   660  0FED                     	;# 
   661  0FEE                     	;# 
   662  0FEF                     	;_modem_packet
   663                           
   664                           	psect	idataBANK2
   665  1672                     __pidataBANK2:	
   666                           
   667                           ;initializer for main@F3178
   668  1672  3443               	retlw	67
   669  1673  3455               	retlw	85
   670  1674  3442               	retlw	66
   671  1675  3445               	retlw	69
   672  1676  3459               	retlw	89
   673  1677  3459               	retlw	89
   674  1678  3400               	retlw	0
   675  1679  3405               	retlw	5
   676  167A  3443               	retlw	67
   677  167B  3455               	retlw	85
   678  167C  3442               	retlw	66
   679  167D  3445               	retlw	69
   680  167E  3458               	retlw	88
   681  167F  3458               	retlw	88
   682  1680  3400               	retlw	0
   683  1681  3407               	retlw	7
   684                           
   685                           ;initializer for _sine_table2
   686  1682  3410               	retlw	16
   687  1683  3416               	retlw	22
   688  1684  341C               	retlw	28
   689  1685  341F               	retlw	31
   690  1686  341F               	retlw	31
   691  1687  341C               	retlw	28
   692  1688  3416               	retlw	22
   693  1689  3410               	retlw	16
   694  168A  3409               	retlw	9
   695  168B  3403               	retlw	3
   696  168C  3400               	retlw	0
   697  168D  3400               	retlw	0
   698  168E  3403               	retlw	3
   699  168F  3409               	retlw	9
   700                           
   701                           	psect	stringtext
   702  0100                     __pstringtext:	
   703  0100                     _sine_table:	
   704  0100  347F               	retlw	127
   705  0101  3481               	retlw	129
   706  0102  3482               	retlw	130
   707  0103  3484               	retlw	132
   708  0104  3485               	retlw	133
   709  0105  3487               	retlw	135
   710  0106  3488               	retlw	136
   711  0107  348A               	retlw	138
   712  0108  348B               	retlw	139
   713  0109  348D               	retlw	141
   714  010A  348F               	retlw	143
   715  010B  3490               	retlw	144
   716  010C  3492               	retlw	146
   717  010D  3493               	retlw	147
   718  010E  3495               	retlw	149
   719  010F  3496               	retlw	150
   720  0110  3498               	retlw	152
   721  0111  3499               	retlw	153
   722  0112  349B               	retlw	155
   723  0113  349C               	retlw	156
   724  0114  349E               	retlw	158
   725  0115  349F               	retlw	159
   726  0116  34A1               	retlw	161
   727  0117  34A3               	retlw	163
   728  0118  34A4               	retlw	164
   729  0119  34A6               	retlw	166
   730  011A  34A7               	retlw	167
   731  011B  34A8               	retlw	168
   732  011C  34AA               	retlw	170
   733  011D  34AB               	retlw	171
   734  011E  34AD               	retlw	173
   735  011F  34AE               	retlw	174
   736  0120  34B0               	retlw	176
   737  0121  34B1               	retlw	177
   738  0122  34B3               	retlw	179
   739  0123  34B4               	retlw	180
   740  0124  34B6               	retlw	182
   741  0125  34B7               	retlw	183
   742  0126  34B8               	retlw	184
   743  0127  34BA               	retlw	186
   744  0128  34BB               	retlw	187
   745  0129  34BC               	retlw	188
   746  012A  34BE               	retlw	190
   747  012B  34BF               	retlw	191
   748  012C  34C1               	retlw	193
   749  012D  34C2               	retlw	194
   750  012E  34C3               	retlw	195
   751  012F  34C5               	retlw	197
   752  0130  34C6               	retlw	198
   753  0131  34C7               	retlw	199
   754  0132  34C8               	retlw	200
   755  0133  34CA               	retlw	202
   756  0134  34CB               	retlw	203
   757  0135  34CC               	retlw	204
   758  0136  34CD               	retlw	205
   759  0137  34CF               	retlw	207
   760  0138  34D0               	retlw	208
   761  0139  34D1               	retlw	209
   762  013A  34D2               	retlw	210
   763  013B  34D3               	retlw	211
   764  013C  34D5               	retlw	213
   765  013D  34D6               	retlw	214
   766  013E  34D7               	retlw	215
   767  013F  34D8               	retlw	216
   768  0140  34D9               	retlw	217
   769  0141  34DA               	retlw	218
   770  0142  34DB               	retlw	219
   771  0143  34DC               	retlw	220
   772  0144  34DD               	retlw	221
   773  0145  34DF               	retlw	223
   774  0146  34E0               	retlw	224
   775  0147  34E1               	retlw	225
   776  0148  34E2               	retlw	226
   777  0149  34E3               	retlw	227
   778  014A  34E4               	retlw	228
   779  014B  34E4               	retlw	228
   780  014C  34E5               	retlw	229
   781  014D  34E6               	retlw	230
   782  014E  34E7               	retlw	231
   783  014F  34E8               	retlw	232
   784  0150  34E9               	retlw	233
   785  0151  34EA               	retlw	234
   786  0152  34EB               	retlw	235
   787  0153  34EC               	retlw	236
   788  0154  34EC               	retlw	236
   789  0155  34ED               	retlw	237
   790  0156  34EE               	retlw	238
   791  0157  34EF               	retlw	239
   792  0158  34EF               	retlw	239
   793  0159  34F0               	retlw	240
   794  015A  34F1               	retlw	241
   795  015B  34F2               	retlw	242
   796  015C  34F2               	retlw	242
   797  015D  34F3               	retlw	243
   798  015E  34F4               	retlw	244
   799  015F  34F4               	retlw	244
   800  0160  34F5               	retlw	245
   801  0161  34F5               	retlw	245
   802  0162  34F6               	retlw	246
   803  0163  34F7               	retlw	247
   804  0164  34F7               	retlw	247
   805  0165  34F8               	retlw	248
   806  0166  34F8               	retlw	248
   807  0167  34F9               	retlw	249
   808  0168  34F9               	retlw	249
   809  0169  34F9               	retlw	249
   810  016A  34FA               	retlw	250
   811  016B  34FA               	retlw	250
   812  016C  34FB               	retlw	251
   813  016D  34FB               	retlw	251
   814  016E  34FB               	retlw	251
   815  016F  34FC               	retlw	252
   816  0170  34FC               	retlw	252
   817  0171  34FC               	retlw	252
   818  0172  34FD               	retlw	253
   819  0173  34FD               	retlw	253
   820  0174  34FD               	retlw	253
   821  0175  34FD               	retlw	253
   822  0176  34FE               	retlw	254
   823  0177  34FE               	retlw	254
   824  0178  34FE               	retlw	254
   825  0179  34FE               	retlw	254
   826  017A  34FE               	retlw	254
   827  017B  34FE               	retlw	254
   828  017C  34FE               	retlw	254
   829  017D  34FE               	retlw	254
   830  017E  34FE               	retlw	254
   831  017F  34FE               	retlw	254
   832  0180  34FF               	retlw	255
   833  0181  34FE               	retlw	254
   834  0182  34FE               	retlw	254
   835  0183  34FE               	retlw	254
   836  0184  34FE               	retlw	254
   837  0185  34FE               	retlw	254
   838  0186  34FE               	retlw	254
   839  0187  34FE               	retlw	254
   840  0188  34FE               	retlw	254
   841  0189  34FE               	retlw	254
   842  018A  34FE               	retlw	254
   843  018B  34FD               	retlw	253
   844  018C  34FD               	retlw	253
   845  018D  34FD               	retlw	253
   846  018E  34FD               	retlw	253
   847  018F  34FC               	retlw	252
   848  0190  34FC               	retlw	252
   849  0191  34FC               	retlw	252
   850  0192  34FB               	retlw	251
   851  0193  34FB               	retlw	251
   852  0194  34FB               	retlw	251
   853  0195  34FA               	retlw	250
   854  0196  34FA               	retlw	250
   855  0197  34F9               	retlw	249
   856  0198  34F9               	retlw	249
   857  0199  34F9               	retlw	249
   858  019A  34F8               	retlw	248
   859  019B  34F8               	retlw	248
   860  019C  34F7               	retlw	247
   861  019D  34F7               	retlw	247
   862  019E  34F6               	retlw	246
   863  019F  34F5               	retlw	245
   864  01A0  34F5               	retlw	245
   865  01A1  34F4               	retlw	244
   866  01A2  34F4               	retlw	244
   867  01A3  34F3               	retlw	243
   868  01A4  34F2               	retlw	242
   869  01A5  34F2               	retlw	242
   870  01A6  34F1               	retlw	241
   871  01A7  34F0               	retlw	240
   872  01A8  34EF               	retlw	239
   873  01A9  34EF               	retlw	239
   874  01AA  34EE               	retlw	238
   875  01AB  34ED               	retlw	237
   876  01AC  34EC               	retlw	236
   877  01AD  34EC               	retlw	236
   878  01AE  34EB               	retlw	235
   879  01AF  34EA               	retlw	234
   880  01B0  34E9               	retlw	233
   881  01B1  34E8               	retlw	232
   882  01B2  34E7               	retlw	231
   883  01B3  34E6               	retlw	230
   884  01B4  34E5               	retlw	229
   885  01B5  34E4               	retlw	228
   886  01B6  34E4               	retlw	228
   887  01B7  34E3               	retlw	227
   888  01B8  34E2               	retlw	226
   889  01B9  34E1               	retlw	225
   890  01BA  34E0               	retlw	224
   891  01BB  34DF               	retlw	223
   892  01BC  34DD               	retlw	221
   893  01BD  34DC               	retlw	220
   894  01BE  34DB               	retlw	219
   895  01BF  34DA               	retlw	218
   896  01C0  34D9               	retlw	217
   897  01C1  34D8               	retlw	216
   898  01C2  34D7               	retlw	215
   899  01C3  34D6               	retlw	214
   900  01C4  34D5               	retlw	213
   901  01C5  34D3               	retlw	211
   902  01C6  34D2               	retlw	210
   903  01C7  34D1               	retlw	209
   904  01C8  34D0               	retlw	208
   905  01C9  34CF               	retlw	207
   906  01CA  34CD               	retlw	205
   907  01CB  34CC               	retlw	204
   908  01CC  34CB               	retlw	203
   909  01CD  34CA               	retlw	202
   910  01CE  34C8               	retlw	200
   911  01CF  34C7               	retlw	199
   912  01D0  34C6               	retlw	198
   913  01D1  34C5               	retlw	197
   914  01D2  34C3               	retlw	195
   915  01D3  34C2               	retlw	194
   916  01D4  34C1               	retlw	193
   917  01D5  34BF               	retlw	191
   918  01D6  34BE               	retlw	190
   919  01D7  34BC               	retlw	188
   920  01D8  34BB               	retlw	187
   921  01D9  34BA               	retlw	186
   922  01DA  34B8               	retlw	184
   923  01DB  34B7               	retlw	183
   924  01DC  34B6               	retlw	182
   925  01DD  34B4               	retlw	180
   926  01DE  34B3               	retlw	179
   927  01DF  34B1               	retlw	177
   928  01E0  34B0               	retlw	176
   929  01E1  34AE               	retlw	174
   930  01E2  34AD               	retlw	173
   931  01E3  34AB               	retlw	171
   932  01E4  34AA               	retlw	170
   933  01E5  34A8               	retlw	168
   934  01E6  34A7               	retlw	167
   935  01E7  34A6               	retlw	166
   936  01E8  34A4               	retlw	164
   937  01E9  34A3               	retlw	163
   938  01EA  34A1               	retlw	161
   939  01EB  349F               	retlw	159
   940  01EC  349E               	retlw	158
   941  01ED  349C               	retlw	156
   942  01EE  349B               	retlw	155
   943  01EF  3499               	retlw	153
   944  01F0  3498               	retlw	152
   945  01F1  3496               	retlw	150
   946  01F2  3495               	retlw	149
   947  01F3  3493               	retlw	147
   948  01F4  3492               	retlw	146
   949  01F5  3490               	retlw	144
   950  01F6  348F               	retlw	143
   951  01F7  348D               	retlw	141
   952  01F8  348B               	retlw	139
   953  01F9  348A               	retlw	138
   954  01FA  3488               	retlw	136
   955  01FB  3487               	retlw	135
   956  01FC  3485               	retlw	133
   957  01FD  3484               	retlw	132
   958  01FE  3482               	retlw	130
   959  01FF  3481               	retlw	129
   960  0200  347F               	retlw	127
   961  0201  347D               	retlw	125
   962  0202  347C               	retlw	124
   963  0203  347A               	retlw	122
   964  0204  3479               	retlw	121
   965  0205  3477               	retlw	119
   966  0206  3476               	retlw	118
   967  0207  3474               	retlw	116
   968  0208  3473               	retlw	115
   969  0209  3471               	retlw	113
   970  020A  346F               	retlw	111
   971  020B  346E               	retlw	110
   972  020C  346C               	retlw	108
   973  020D  346B               	retlw	107
   974  020E  3469               	retlw	105
   975  020F  3468               	retlw	104
   976  0210  3466               	retlw	102
   977  0211  3465               	retlw	101
   978  0212  3463               	retlw	99
   979  0213  3462               	retlw	98
   980  0214  3460               	retlw	96
   981  0215  345F               	retlw	95
   982  0216  345D               	retlw	93
   983  0217  345B               	retlw	91
   984  0218  345A               	retlw	90
   985  0219  3458               	retlw	88
   986  021A  3457               	retlw	87
   987  021B  3456               	retlw	86
   988  021C  3454               	retlw	84
   989  021D  3453               	retlw	83
   990  021E  3451               	retlw	81
   991  021F  3450               	retlw	80
   992  0220  344E               	retlw	78
   993  0221  344D               	retlw	77
   994  0222  344B               	retlw	75
   995  0223  344A               	retlw	74
   996  0224  3448               	retlw	72
   997  0225  3447               	retlw	71
   998  0226  3446               	retlw	70
   999  0227  3444               	retlw	68
  1000  0228  3443               	retlw	67
  1001  0229  3442               	retlw	66
  1002  022A  3440               	retlw	64
  1003  022B  343F               	retlw	63
  1004  022C  343D               	retlw	61
  1005  022D  343C               	retlw	60
  1006  022E  343B               	retlw	59
  1007  022F  3439               	retlw	57
  1008  0230  3438               	retlw	56
  1009  0231  3437               	retlw	55
  1010  0232  3436               	retlw	54
  1011  0233  3434               	retlw	52
  1012  0234  3433               	retlw	51
  1013  0235  3432               	retlw	50
  1014  0236  3431               	retlw	49
  1015  0237  342F               	retlw	47
  1016  0238  342E               	retlw	46
  1017  0239  342D               	retlw	45
  1018  023A  342C               	retlw	44
  1019  023B  342B               	retlw	43
  1020  023C  3429               	retlw	41
  1021  023D  3428               	retlw	40
  1022  023E  3427               	retlw	39
  1023  023F  3426               	retlw	38
  1024  0240  3425               	retlw	37
  1025  0241  3424               	retlw	36
  1026  0242  3423               	retlw	35
  1027  0243  3422               	retlw	34
  1028  0244  3421               	retlw	33
  1029  0245  341F               	retlw	31
  1030  0246  341E               	retlw	30
  1031  0247  341D               	retlw	29
  1032  0248  341C               	retlw	28
  1033  0249  341B               	retlw	27
  1034  024A  341A               	retlw	26
  1035  024B  341A               	retlw	26
  1036  024C  3419               	retlw	25
  1037  024D  3418               	retlw	24
  1038  024E  3417               	retlw	23
  1039  024F  3416               	retlw	22
  1040  0250  3415               	retlw	21
  1041  0251  3414               	retlw	20
  1042  0252  3413               	retlw	19
  1043  0253  3412               	retlw	18
  1044  0254  3412               	retlw	18
  1045  0255  3411               	retlw	17
  1046  0256  3410               	retlw	16
  1047  0257  340F               	retlw	15
  1048  0258  340F               	retlw	15
  1049  0259  340E               	retlw	14
  1050  025A  340D               	retlw	13
  1051  025B  340C               	retlw	12
  1052  025C  340C               	retlw	12
  1053  025D  340B               	retlw	11
  1054  025E  340A               	retlw	10
  1055  025F  340A               	retlw	10
  1056  0260  3409               	retlw	9
  1057  0261  3409               	retlw	9
  1058  0262  3408               	retlw	8
  1059  0263  3407               	retlw	7
  1060  0264  3407               	retlw	7
  1061  0265  3406               	retlw	6
  1062  0266  3406               	retlw	6
  1063  0267  3405               	retlw	5
  1064  0268  3405               	retlw	5
  1065  0269  3405               	retlw	5
  1066  026A  3404               	retlw	4
  1067  026B  3404               	retlw	4
  1068  026C  3403               	retlw	3
  1069  026D  3403               	retlw	3
  1070  026E  3403               	retlw	3
  1071  026F  3402               	retlw	2
  1072  0270  3402               	retlw	2
  1073  0271  3402               	retlw	2
  1074  0272  3401               	retlw	1
  1075  0273  3401               	retlw	1
  1076  0274  3401               	retlw	1
  1077  0275  3401               	retlw	1
  1078  0276  3400               	retlw	0
  1079  0277  3400               	retlw	0
  1080  0278  3400               	retlw	0
  1081  0279  3400               	retlw	0
  1082  027A  3400               	retlw	0
  1083  027B  3400               	retlw	0
  1084  027C  3400               	retlw	0
  1085  027D  3400               	retlw	0
  1086  027E  3400               	retlw	0
  1087  027F  3400               	retlw	0
  1088  0280  3400               	retlw	0
  1089  0281  3400               	retlw	0
  1090  0282  3400               	retlw	0
  1091  0283  3400               	retlw	0
  1092  0284  3400               	retlw	0
  1093  0285  3400               	retlw	0
  1094  0286  3400               	retlw	0
  1095  0287  3400               	retlw	0
  1096  0288  3400               	retlw	0
  1097  0289  3400               	retlw	0
  1098  028A  3400               	retlw	0
  1099  028B  3401               	retlw	1
  1100  028C  3401               	retlw	1
  1101  028D  3401               	retlw	1
  1102  028E  3401               	retlw	1
  1103  028F  3402               	retlw	2
  1104  0290  3402               	retlw	2
  1105  0291  3402               	retlw	2
  1106  0292  3403               	retlw	3
  1107  0293  3403               	retlw	3
  1108  0294  3403               	retlw	3
  1109  0295  3404               	retlw	4
  1110  0296  3404               	retlw	4
  1111  0297  3405               	retlw	5
  1112  0298  3405               	retlw	5
  1113  0299  3405               	retlw	5
  1114  029A  3406               	retlw	6
  1115  029B  3406               	retlw	6
  1116  029C  3407               	retlw	7
  1117  029D  3407               	retlw	7
  1118  029E  3408               	retlw	8
  1119  029F  3409               	retlw	9
  1120  02A0  3409               	retlw	9
  1121  02A1  340A               	retlw	10
  1122  02A2  340A               	retlw	10
  1123  02A3  340B               	retlw	11
  1124  02A4  340C               	retlw	12
  1125  02A5  340C               	retlw	12
  1126  02A6  340D               	retlw	13
  1127  02A7  340E               	retlw	14
  1128  02A8  340F               	retlw	15
  1129  02A9  340F               	retlw	15
  1130  02AA  3410               	retlw	16
  1131  02AB  3411               	retlw	17
  1132  02AC  3412               	retlw	18
  1133  02AD  3412               	retlw	18
  1134  02AE  3413               	retlw	19
  1135  02AF  3414               	retlw	20
  1136  02B0  3415               	retlw	21
  1137  02B1  3416               	retlw	22
  1138  02B2  3417               	retlw	23
  1139  02B3  3418               	retlw	24
  1140  02B4  3419               	retlw	25
  1141  02B5  341A               	retlw	26
  1142  02B6  341A               	retlw	26
  1143  02B7  341B               	retlw	27
  1144  02B8  341C               	retlw	28
  1145  02B9  341D               	retlw	29
  1146  02BA  341E               	retlw	30
  1147  02BB  341F               	retlw	31
  1148  02BC  3421               	retlw	33
  1149  02BD  3422               	retlw	34
  1150  02BE  3423               	retlw	35
  1151  02BF  3424               	retlw	36
  1152  02C0  3425               	retlw	37
  1153  02C1  3426               	retlw	38
  1154  02C2  3427               	retlw	39
  1155  02C3  3428               	retlw	40
  1156  02C4  3429               	retlw	41
  1157  02C5  342B               	retlw	43
  1158  02C6  342C               	retlw	44
  1159  02C7  342D               	retlw	45
  1160  02C8  342E               	retlw	46
  1161  02C9  342F               	retlw	47
  1162  02CA  3431               	retlw	49
  1163  02CB  3432               	retlw	50
  1164  02CC  3433               	retlw	51
  1165  02CD  3434               	retlw	52
  1166  02CE  3436               	retlw	54
  1167  02CF  3437               	retlw	55
  1168  02D0  3438               	retlw	56
  1169  02D1  3439               	retlw	57
  1170  02D2  343B               	retlw	59
  1171  02D3  343C               	retlw	60
  1172  02D4  343D               	retlw	61
  1173  02D5  343F               	retlw	63
  1174  02D6  3440               	retlw	64
  1175  02D7  3442               	retlw	66
  1176  02D8  3443               	retlw	67
  1177  02D9  3444               	retlw	68
  1178  02DA  3446               	retlw	70
  1179  02DB  3447               	retlw	71
  1180  02DC  3448               	retlw	72
  1181  02DD  344A               	retlw	74
  1182  02DE  344B               	retlw	75
  1183  02DF  344D               	retlw	77
  1184  02E0  344E               	retlw	78
  1185  02E1  3450               	retlw	80
  1186  02E2  3451               	retlw	81
  1187  02E3  3453               	retlw	83
  1188  02E4  3454               	retlw	84
  1189  02E5  3456               	retlw	86
  1190  02E6  3457               	retlw	87
  1191  02E7  3458               	retlw	88
  1192  02E8  345A               	retlw	90
  1193  02E9  345B               	retlw	91
  1194  02EA  345D               	retlw	93
  1195  02EB  345F               	retlw	95
  1196  02EC  3460               	retlw	96
  1197  02ED  3462               	retlw	98
  1198  02EE  3463               	retlw	99
  1199  02EF  3465               	retlw	101
  1200  02F0  3466               	retlw	102
  1201  02F1  3468               	retlw	104
  1202  02F2  3469               	retlw	105
  1203  02F3  346B               	retlw	107
  1204  02F4  346C               	retlw	108
  1205  02F5  346E               	retlw	110
  1206  02F6  346F               	retlw	111
  1207  02F7  3471               	retlw	113
  1208  02F8  3473               	retlw	115
  1209  02F9  3474               	retlw	116
  1210  02FA  3476               	retlw	118
  1211  02FB  3477               	retlw	119
  1212  02FC  3479               	retlw	121
  1213  02FD  347A               	retlw	122
  1214  02FE  347C               	retlw	124
  1215  02FF  347D               	retlw	125
  1216  0300                     __end_of_sine_table:	
  1217  0300                     _PLAYBACK_RATE:	
  1218  0300  34A0               	retlw	160
  1219  0301  3486               	retlw	134
  1220  0302  3401               	retlw	1
  1221  0303  3400               	retlw	0
  1222  0304                     __end_of_PLAYBACK_RATE:	
  1223  0304                     _BAUD_RATE:	
  1224  0304  34B0               	retlw	176
  1225  0305  3404               	retlw	4
  1226  0306                     __end_of_BAUD_RATE:	
  1227  0306                     _TABLE_SIZE:	
  1228  0306  3400               	retlw	0
  1229  0307  3402               	retlw	2
  1230  0308                     __end_of_TABLE_SIZE:	
  1231  000B                     _INTCON	set	11
  1232  0011                     _PIR1	set	17
  1233  000C                     _PORTAbits	set	12
  1234  000E                     _PORTCbits	set	14
  1235  0015                     _TMR0	set	21
  1236  0017                     _TMR1H	set	23
  1237  0016                     _TMR1L	set	22
  1238  008E                     _ADIF	set	142
  1239  00C4                     _T1CKPS0	set	196
  1240  00C5                     _T1CKPS1	set	197
  1241  005D                     _TMR0IE	set	93
  1242  005A                     _TMR0IF	set	90
  1243  00C6                     _TMR1CS0	set	198
  1244  00C7                     _TMR1CS1	set	199
  1245  00CF                     _TMR1GE	set	207
  1246  00C0                     _TMR1ON	set	192
  1247  009D                     _ADCON0	set	157
  1248  009C                     _ADRESH	set	156
  1249  009B                     _ADRESL	set	155
  1250  0099                     _OSCCON	set	153
  1251  009A                     _OSCSTAT	set	154
  1252  0098                     _OSCTUNE	set	152
  1253  008C                     _TRISA	set	140
  1254  008E                     _TRISC	set	142
  1255  04F4                     _ADCS0	set	1268
  1256  04F5                     _ADCS1	set	1269
  1257  04F6                     _ADCS2	set	1270
  1258  04F7                     _ADFM	set	1271
  1259  048E                     _ADIE	set	1166
  1260  04F2                     _ADNREF	set	1266
  1261  04E8                     _ADON	set	1256
  1262  04F0                     _ADPREF0	set	1264
  1263  04F1                     _ADPREF1	set	1265
  1264  048A                     _CCP1IE	set	1162
  1265  04AB                     _PSA	set	1195
  1266  04AD                     _TMR0CS	set	1197
  1267  0119                     _DACCON1	set	281
  1268  08C7                     _DACEN	set	2247
  1269  08C0                     _DACNSS	set	2240
  1270  08C5                     _DACOE	set	2245
  1271  08C2                     _DACPSS0	set	2242
  1272  08C3                     _DACPSS1	set	2243
  1273  0C61                     _ANSA1	set	3169
  1274  0292                     _CCPR1H	set	658
  1275  0291                     _CCPR1L	set	657
  1276  1499                     _CCP1M1	set	5273
  1277  149A                     _CCP1M2	set	5274
  1278  149B                     _CCP1M3	set	5275
  1279  0308                     __stringdata:	
  1280  0308                     STR_1:	
  1281  0308  3448               	retlw	72	;'H'
  1282  0309  3445               	retlw	69	;'E'
  1283  030A  344C               	retlw	76	;'L'
  1284  030B  344C               	retlw	76	;'L'
  1285  030C  344F               	retlw	79	;'O'
  1286  030D  3400               	retlw	0
  1287  030E                     __end_of__stringdata:	
  1288                           
  1289                           ; #config settings
  1290  0000                     
  1291                           	psect	cinit
  1292  004A                     start_initialization:	
  1293  004A                     __initialization:		;BIGRAM
  1294                           
  1295                           ; Clear objects allocated to BIGRAM
  1296  004A  30F0               	movlw	low (0+8688)
  1297  004B  0084               	movwf	4
  1298  004C  3021               	movlw	high (0+8688)
  1299  004D  0085               	movwf	5
  1300  004E  3000               	movlw	0
  1301  004F  00FE               	movwf	btemp
  1302  0050  3002               	movlw	2
  1303  0051  00FF               	movwf	btemp+1
  1304  0052  3195  258A  3180   	fcall	clear_ram0
  1305                           
  1306                           ; Clear objects allocated to COMMON
  1307  0055  01FA               	clrf	__pbssCOMMON& (0+127)
  1308  0056  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  1309                           
  1310                           ; Clear objects allocated to BANK0
  1311  0057  01EF               	clrf	__pbssBANK0& (0+127)
  1312                           
  1313                           ; Clear objects allocated to BANK1
  1314  0058  30A0               	movlw	low __pbssBANK1
  1315  0059  0084               	movwf	4
  1316  005A  3000               	movlw	high __pbssBANK1
  1317  005B  0085               	movwf	5
  1318  005C  303B               	movlw	59
  1319  005D  00FE               	movwf	btemp
  1320  005E  3000               	movlw	0
  1321  005F  00FF               	movwf	btemp+1
  1322  0060  3195  258A  3180   	fcall	clear_ram0
  1323                           
  1324                           ; Clear objects allocated to BANK2
  1325  0063  3020               	movlw	low __pbssBANK2
  1326  0064  0084               	movwf	4
  1327  0065  3001               	movlw	high __pbssBANK2
  1328  0066  0085               	movwf	5
  1329  0067  3020               	movlw	32
  1330  0068  00FE               	movwf	btemp
  1331  0069  3000               	movlw	0
  1332  006A  00FF               	movwf	btemp+1
  1333  006B  3195  258A  3180   	fcall	clear_ram0
  1334                           
  1335                           ; Initialize objects allocated to BANK2
  1336  006E  3072               	movlw	low __pidataBANK2
  1337  006F  0084               	movwf	4
  1338  0070  3096               	movlw	(high __pidataBANK2)| (0+128)
  1339  0071  0085               	movwf	5
  1340  0072  3040               	movlw	low __pdataBANK2
  1341  0073  0086               	movwf	6
  1342  0074  3001               	movlw	high __pdataBANK2
  1343  0075  0087               	movwf	7
  1344  0076  3000               	movlw	0
  1345  0077  00FF               	movwf	btemp+1
  1346  0078  301E               	movlw	30
  1347  0079  3195  257E         	fcall	init_ram
  1348  007B                     end_of_initialization:	
  1349                           ;End of C runtime variable initialization code
  1350                           
  1351  007B                     __end_of__initialization:	
  1352  007B  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1353  007C  0020               	movlb	0
  1354  007D  318B  2B15         	ljmp	_main	;jump to C main() function
  1355                           
  1356                           	psect	bssCOMMON
  1357  007A                     __pbssCOMMON:	
  1358  007A                     _current_byte:	
  1359  007A                     	ds	1
  1360  007B                     _i:	
  1361  007B                     	ds	1
  1362                           
  1363                           	psect	bssBANK0
  1364  006F                     __pbssBANK0:	
  1365  006F                     _SAMPLES_PER_BAUD:	
  1366  006F                     	ds	1
  1367                           
  1368                           	psect	bssBANK1
  1369  00A0                     __pbssBANK1:	
  1370  00A0                     _adf_config:	
  1371  00A0                     	ds	39
  1372  00C7                     _modem_packet_size:	
  1373  00C7                     	ds	4
  1374  00CB                     _packet_pos:	
  1375  00CB                     	ds	4
  1376  00CF                     _Systick_Counter:	
  1377  00CF                     	ds	2
  1378  00D1                     _crc:	
  1379  00D1                     	ds	2
  1380  00D3                     _MODEM_TRANSMITTING:	
  1381  00D3                     	ds	1
  1382  00D4                     _PTT_OFF:	
  1383  00D4                     	ds	1
  1384  00D5                     _adc_sonuc_high:	
  1385  00D5                     	ds	1
  1386  00D6                     _adc_sonuc_low:	
  1387  00D6                     	ds	1
  1388  00D7                     _current_sample_in_baud:	
  1389  00D7                     	ds	1
  1390  00D8                     _test:	
  1391  00D8                     	ds	1
  1392  00D9                     _test2:	
  1393  00D9                     	ds	1
  1394  00DA                     _timeout_flag:	
  1395  00DA                     	ds	1
  1396                           
  1397                           	psect	bssBANK2
  1398  0120                     __pbssBANK2:	
  1399  0120                     _Delay_Counter:	
  1400  0120                     	ds	4
  1401  0124                     _PHASE_DELTA_1200:	
  1402  0124                     	ds	4
  1403  0128                     _PHASE_DELTA_2200:	
  1404  0128                     	ds	4
  1405  012C                     _phase:	
  1406  012C                     	ds	4
  1407  0130                     _phase_delta:	
  1408  0130                     	ds	4
  1409  0134                     _powerlevel:	
  1410  0134                     	ds	4
  1411  0138                     _timeout_check:	
  1412  0138                     	ds	4
  1413  013C                     _dac_flag:	
  1414  013C                     	ds	2
  1415  013E                     _ones_in_a_row:	
  1416  013E                     	ds	2
  1417                           
  1418                           	psect	dataBANK2
  1419  0140                     __pdataBANK2:	
  1420  0140                     main@F3178:	
  1421  0140                     	ds	16
  1422  0150                     _sine_table2:	
  1423  0150                     	ds	14
  1424                           
  1425                           	psect	clrtext
  1426  158A                     clear_ram0:	
  1427                           ;	Called with FSR0 containing the base address, and
  1428                           ;	btemp/btemp+1 has the size to clear
  1429                           
  1430  158A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1431  158B                     clrloop0:	
  1432  158B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1433  158C  3101               	addfsr 0,1
  1434  158D  3001               	movlw	1
  1435  158E  02FE               	subwf	126,f
  1436  158F  3000               	movlw	0
  1437  1590  3BFF               	subwfb	127,f
  1438  1591  087F               	movf	127,w
  1439  1592  047E               	iorwf	126,w
  1440  1593  1903               	btfsc	3,2
  1441  1594  3400               	retlw	0	;all done for this memory range, return
  1442  1595  2D8B               	goto	clrloop0	;have we reached the end yet?
  1443                           
  1444                           	psect	inittext
  1445  157E                     init_ram:	
  1446  157E  00FE               	movwf	126
  1447  157F                     initloop:	
  1448  157F  0012               	moviw fsr0++
  1449  1580  001E               	movwi fsr1++
  1450  1581  3001               	movlw	1
  1451  1582  02FE               	subwf	126,f
  1452  1583  3000               	movlw	0
  1453  1584  3BFF               	subwfb	127,f
  1454  1585  087F               	movf	127,w
  1455  1586  047E               	iorwf	126,w
  1456  1587  1903               	btfsc	3,2
  1457  1588  3400               	retlw	0
  1458  1589  2D7F               	goto	initloop
  1459                           
  1460                           	psect	cstackBANK1
  1461  00DB                     __pcstackBANK1:	
  1462  00DB                     Adf_Lock@adj:	
  1463                           
  1464                           ; 2 bytes @ 0x0
  1465  00DB                     	ds	2
  1466  00DD                     Adf_Lock@bias:	
  1467                           
  1468                           ; 2 bytes @ 0x2
  1469  00DD                     	ds	2
  1470  00DF                     main@beacon_address:	
  1471                           
  1472                           ; 16 bytes @ 0x4
  1473  00DF                     	ds	16
  1474                           
  1475                           	psect	cstackCOMMON
  1476  0070                     __pcstackCOMMON:	
  1477  0070                     ?_Timer0_Start:	
  1478  0070                     ?_Timer1_Start:	
  1479                           ; 0 bytes @ 0x0
  1480                           
  1481  0070                     ?_Dac0_Start:	
  1482                           ; 0 bytes @ 0x0
  1483                           
  1484  0070                     ?_Adc1_Start:	
  1485                           ; 0 bytes @ 0x0
  1486                           
  1487  0070                     ?_Ax25_Send_Footer:	
  1488                           ; 0 bytes @ 0x0
  1489                           
  1490  0070                     ?_Modem_Setup:	
  1491                           ; 0 bytes @ 0x0
  1492                           
  1493  0070                     ?_Ptt_Off:	
  1494                           ; 0 bytes @ 0x0
  1495                           
  1496  0070                     ?_Modem_Flush_Frame:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_Adf_Reset_Register_Zero:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_Adf_Reset_Register_One:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_Adf_Reset_Register_Two:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ?_Adf_Reset_Register_Three:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_Adf_Reset:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_Adf_Write_Register_Zero:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_Adf_Write_Register_One:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_Adf_Write_Register_Two:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_Adf_Write_Register_Three:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_global_interrupt:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ??_global_interrupt:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_System_Start:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?_Adf_Reset_Config:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?_Adf_Write_Config:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ?_Radio_Setup:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_Modem_Init:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_Update_Crc:	
  1548                           ; 0 bytes @ 0x0
  1549                           
  1550  0070                     ?_Send_Byte:	
  1551                           ; 0 bytes @ 0x0
  1552                           
  1553  0070                     ?_Ax25_Send_Byte:	
  1554                           ; 0 bytes @ 0x0
  1555                           
  1556  0070                     ?_Ax25_Send_Sync:	
  1557                           ; 0 bytes @ 0x0
  1558                           
  1559  0070                     ?_Ax25_Send_Flag:	
  1560                           ; 0 bytes @ 0x0
  1561                           
  1562  0070                     ?_Gpio_Config:	
  1563                           ; 0 bytes @ 0x0
  1564                           
  1565  0070                     ?_Ptt_On:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_Spi_Byte_Send:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_Adf_Locked:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ?_Read_Adf7012_Muxout:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_main:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ?_Adf_Lock:	
  1581                           ; 2 bytes @ 0x0
  1582                           
  1583                           
  1584                           ; 2 bytes @ 0x0
  1585  0070                     	ds	2
  1586  0072                     ??_Gpio_Config:	
  1587  0072                     ??_Timer0_Start:	
  1588                           ; 0 bytes @ 0x2
  1589                           
  1590  0072                     ??_Timer1_Start:	
  1591                           ; 0 bytes @ 0x2
  1592                           
  1593  0072                     ??_Dac0_Start:	
  1594                           ; 0 bytes @ 0x2
  1595                           
  1596  0072                     ??_Adc1_Start:	
  1597                           ; 0 bytes @ 0x2
  1598                           
  1599  0072                     ??_Adf_Reset_Register_Zero:	
  1600                           ; 0 bytes @ 0x2
  1601                           
  1602  0072                     ??_Adf_Reset_Register_One:	
  1603                           ; 0 bytes @ 0x2
  1604                           
  1605  0072                     ??_Adf_Reset_Register_Two:	
  1606                           ; 0 bytes @ 0x2
  1607                           
  1608  0072                     ??_Adf_Reset_Register_Three:	
  1609                           ; 0 bytes @ 0x2
  1610                           
  1611  0072                     ??_System_Start:	
  1612                           ; 0 bytes @ 0x2
  1613                           
  1614  0072                     ??_Update_Crc:	
  1615                           ; 0 bytes @ 0x2
  1616                           
  1617  0072                     ??_Ax25_Send_Sync:	
  1618                           ; 0 bytes @ 0x2
  1619                           
  1620  0072                     ??_Ax25_Send_Flag:	
  1621                           ; 0 bytes @ 0x2
  1622                           
  1623  0072                     ?_memcpy:	
  1624                           ; 0 bytes @ 0x2
  1625                           
  1626  0072                     ?_CheckDelay:	
  1627                           ; 1 bytes @ 0x2
  1628                           
  1629  0072                     ?___ftpack:	
  1630                           ; 2 bytes @ 0x2
  1631                           
  1632  0072                     ?___lmul:	
  1633                           ; 3 bytes @ 0x2
  1634                           
  1635  0072                     ?___aldiv:	
  1636                           ; 4 bytes @ 0x2
  1637                           
  1638  0072                     memcpy@s1:	
  1639                           ; 4 bytes @ 0x2
  1640                           
  1641  0072                     ___ftpack@arg:	
  1642                           ; 1 bytes @ 0x2
  1643                           
  1644  0072                     ___lmul@multiplier:	
  1645                           ; 3 bytes @ 0x2
  1646                           
  1647  0072                     ___aldiv@divisor:	
  1648                           ; 4 bytes @ 0x2
  1649                           
  1650                           
  1651                           ; 4 bytes @ 0x2
  1652  0072                     	ds	1
  1653  0073                     memcpy@n:	
  1654                           
  1655                           ; 2 bytes @ 0x3
  1656  0073                     	ds	1
  1657  0074                     ??_CheckDelay:	
  1658  0074                     Update_Crc@input_bit:	
  1659                           ; 0 bytes @ 0x4
  1660                           
  1661                           
  1662                           ; 1 bytes @ 0x4
  1663  0074                     	ds	1
  1664  0075                     ??_memcpy:	
  1665  0075                     Send_Byte@byte:	
  1666                           ; 0 bytes @ 0x5
  1667                           
  1668  0075                     ___ftpack@exp:	
  1669                           ; 1 bytes @ 0x5
  1670                           
  1671                           
  1672                           ; 1 bytes @ 0x5
  1673  0075                     	ds	1
  1674  0076                     CheckDelay@t:	
  1675  0076                     ___ftpack@sign:	
  1676                           ; 1 bytes @ 0x6
  1677                           
  1678  0076                     memcpy@d:	
  1679                           ; 1 bytes @ 0x6
  1680                           
  1681  0076                     Send_Byte@i:	
  1682                           ; 1 bytes @ 0x6
  1683                           
  1684  0076                     ___lmul@multiplicand:	
  1685                           ; 2 bytes @ 0x6
  1686                           
  1687  0076                     ___aldiv@dividend:	
  1688                           ; 4 bytes @ 0x6
  1689                           
  1690                           
  1691                           ; 4 bytes @ 0x6
  1692  0076                     	ds	1
  1693  0077                     ?_Delay_ms:	
  1694  0077                     ??___ftpack:	
  1695                           ; 0 bytes @ 0x7
  1696                           
  1697  0077                     memcpy@s:	
  1698                           ; 0 bytes @ 0x7
  1699                           
  1700  0077                     Delay_ms@time_to_delay:	
  1701                           ; 1 bytes @ 0x7
  1702                           
  1703                           
  1704                           ; 2 bytes @ 0x7
  1705  0077                     	ds	1
  1706  0078                     ??_Ax25_Send_Byte:	
  1707  0078                     Ax25_Send_Byte@byte:	
  1708                           ; 0 bytes @ 0x8
  1709                           
  1710  0078                     memcpy@d1:	
  1711                           ; 1 bytes @ 0x8
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0x8
  1715  0078                     	ds	1
  1716  0079                     ??_Delay_ms:	
  1717  0079                     ??_Ax25_Send_String:	
  1718                           ; 0 bytes @ 0x9
  1719                           
  1720  0079                     ??_Spi_Byte_Send:	
  1721                           ; 0 bytes @ 0x9
  1722                           
  1723  0079                     ??_Adf_Reset:	
  1724                           ; 0 bytes @ 0x9
  1725                           
  1726  0079                     ??_Adf_Locked:	
  1727                           ; 0 bytes @ 0x9
  1728                           
  1729  0079                     ??_Read_Adf7012_Muxout:	
  1730                           ; 0 bytes @ 0x9
  1731                           
  1732  0079                     ??_Adf_Reset_Config:	
  1733                           ; 0 bytes @ 0x9
  1734                           
  1735  0079                     ?_Reverse_Array:	
  1736                           ; 0 bytes @ 0x9
  1737                           
  1738  0079                     Reverse_Array@length:	
  1739                           ; 1 bytes @ 0x9
  1740                           
  1741                           
  1742                           ; 1 bytes @ 0x9
  1743  0079                     	ds	1
  1744  007A                     ??_Ax25_Send_Footer:	
  1745  007A                     ??_Modem_Setup:	
  1746                           ; 0 bytes @ 0xA
  1747                           
  1748  007A                     ??_Ptt_Off:	
  1749                           ; 0 bytes @ 0xA
  1750                           
  1751  007A                     ??_Modem_Flush_Frame:	
  1752                           ; 0 bytes @ 0xA
  1753                           
  1754  007A                     ??_Adf_Write_Config:	
  1755                           ; 0 bytes @ 0xA
  1756                           
  1757  007A                     ??_Radio_Setup:	
  1758                           ; 0 bytes @ 0xA
  1759                           
  1760  007A                     ??___lmul:	
  1761                           ; 0 bytes @ 0xA
  1762                           
  1763  007A                     ??___ftneg:	
  1764                           ; 0 bytes @ 0xA
  1765                           
  1766                           
  1767                           	psect	cstackBANK0
  1768  0020                     __pcstackBANK0:	
  1769                           ; 0 bytes @ 0xA
  1770                           
  1771  0020                     ??_Reverse_Array:	
  1772  0020                     ??_Send_Byte:	
  1773                           ; 0 bytes @ 0x0
  1774                           
  1775  0020                     ??___aldiv:	
  1776                           ; 0 bytes @ 0x0
  1777                           
  1778  0020                     ?___ftmul:	
  1779                           ; 0 bytes @ 0x0
  1780                           
  1781  0020                     ?___lltoft:	
  1782                           ; 3 bytes @ 0x0
  1783                           
  1784  0020                     Spi_Byte_Send@data:	
  1785                           ; 3 bytes @ 0x0
  1786                           
  1787  0020                     Ax25_Send_Sync@byte:	
  1788                           ; 1 bytes @ 0x0
  1789                           
  1790  0020                     Ax25_Send_Flag@byte:	
  1791                           ; 1 bytes @ 0x0
  1792                           
  1793  0020                     ___ftmul@f1:	
  1794                           ; 1 bytes @ 0x0
  1795                           
  1796  0020                     ___lmul@product:	
  1797                           ; 3 bytes @ 0x0
  1798                           
  1799  0020                     ___lltoft@c:	
  1800                           ; 4 bytes @ 0x0
  1801                           
  1802                           
  1803                           ; 4 bytes @ 0x0
  1804  0020                     	ds	1
  1805  0021                     Spi_Byte_Send@data_to_send:	
  1806  0021                     ___aldiv@counter:	
  1807                           ; 1 bytes @ 0x1
  1808                           
  1809  0021                     Ax25_Send_Sync@i:	
  1810                           ; 1 bytes @ 0x1
  1811                           
  1812  0021                     Ax25_Send_Flag@i:	
  1813                           ; 2 bytes @ 0x1
  1814                           
  1815                           
  1816                           ; 2 bytes @ 0x1
  1817  0021                     	ds	1
  1818  0022                     Spi_Byte_Send@i:	
  1819  0022                     ___aldiv@sign:	
  1820                           ; 1 bytes @ 0x2
  1821                           
  1822                           
  1823                           ; 1 bytes @ 0x2
  1824  0022                     	ds	1
  1825  0023                     ?_Write_Adf7012_Reg:	
  1826  0023                     Write_Adf7012_Reg@size_of_reg:	
  1827                           ; 1 bytes @ 0x3
  1828                           
  1829  0023                     ___ftmul@f2:	
  1830                           ; 1 bytes @ 0x3
  1831                           
  1832  0023                     ___aldiv@quotient:	
  1833                           ; 3 bytes @ 0x3
  1834                           
  1835                           
  1836                           ; 4 bytes @ 0x3
  1837  0023                     	ds	1
  1838  0024                     ??_Write_Adf7012_Reg:	
  1839  0024                     ??___lltoft:	
  1840                           ; 0 bytes @ 0x4
  1841                           
  1842  0024                     ?___lldiv:	
  1843                           ; 0 bytes @ 0x4
  1844                           
  1845  0024                     ___lldiv@divisor:	
  1846                           ; 4 bytes @ 0x4
  1847                           
  1848                           
  1849                           ; 4 bytes @ 0x4
  1850  0024                     	ds	1
  1851  0025                     Write_Adf7012_Reg@reg_value:	
  1852  0025                     ___lltoft@exp:	
  1853                           ; 1 bytes @ 0x5
  1854                           
  1855  0025                     Reverse_Array@buffer_array:	
  1856                           ; 1 bytes @ 0x5
  1857                           
  1858                           
  1859                           ; 4 bytes @ 0x5
  1860  0025                     	ds	1
  1861  0026                     ??___ftmul:	
  1862  0026                     ?___ftdiv:	
  1863                           ; 0 bytes @ 0x6
  1864                           
  1865  0026                     ?___ftneg:	
  1866                           ; 3 bytes @ 0x6
  1867                           
  1868  0026                     Write_Adf7012_Reg@i:	
  1869                           ; 3 bytes @ 0x6
  1870                           
  1871  0026                     ___ftdiv@f2:	
  1872                           ; 1 bytes @ 0x6
  1873                           
  1874  0026                     ___ftneg@f1:	
  1875                           ; 3 bytes @ 0x6
  1876                           
  1877                           
  1878                           ; 3 bytes @ 0x6
  1879  0026                     	ds	2
  1880  0028                     ?_Ax25_Send_Header:	
  1881  0028                     ?_Ax25_Send_String:	
  1882                           ; 0 bytes @ 0x8
  1883                           
  1884  0028                     Ax25_Send_String@string:	
  1885                           ; 0 bytes @ 0x8
  1886                           
  1887  0028                     Ax25_Send_Header@num_addresses:	
  1888                           ; 2 bytes @ 0x8
  1889                           
  1890  0028                     Ax25_Send_Footer@final_crc:	
  1891                           ; 2 bytes @ 0x8
  1892                           
  1893  0028                     ___lldiv@dividend:	
  1894                           ; 2 bytes @ 0x8
  1895                           
  1896                           
  1897                           ; 4 bytes @ 0x8
  1898  0028                     	ds	1
  1899  0029                     ?___ftadd:	
  1900  0029                     Reverse_Array@input:	
  1901                           ; 3 bytes @ 0x9
  1902                           
  1903  0029                     ___ftadd@f1:	
  1904                           ; 1 bytes @ 0x9
  1905                           
  1906  0029                     ___ftdiv@f1:	
  1907                           ; 3 bytes @ 0x9
  1908                           
  1909                           
  1910                           ; 3 bytes @ 0x9
  1911  0029                     	ds	1
  1912  002A                     ??_Ax25_Send_Header:	
  1913  002A                     Reverse_Array@i:	
  1914                           ; 0 bytes @ 0xA
  1915                           
  1916  002A                     ___ftmul@exp:	
  1917                           ; 1 bytes @ 0xA
  1918                           
  1919  002A                     Ax25_Send_String@i:	
  1920                           ; 1 bytes @ 0xA
  1921                           
  1922                           
  1923                           ; 2 bytes @ 0xA
  1924  002A                     	ds	1
  1925  002B                     ??_Adf_Write_Register_Zero:	
  1926  002B                     ??_Adf_Write_Register_One:	
  1927                           ; 0 bytes @ 0xB
  1928                           
  1929  002B                     ??_Adf_Write_Register_Two:	
  1930                           ; 0 bytes @ 0xB
  1931                           
  1932  002B                     ??_Adf_Write_Register_Three:	
  1933                           ; 0 bytes @ 0xB
  1934                           
  1935  002B                     ___ftmul@f3_as_product:	
  1936                           ; 0 bytes @ 0xB
  1937                           
  1938                           
  1939                           ; 3 bytes @ 0xB
  1940  002B                     	ds	1
  1941  002C                     ??___ftdiv:	
  1942  002C                     ??___lldiv:	
  1943                           ; 0 bytes @ 0xC
  1944                           
  1945  002C                     ___ftadd@f2:	
  1946                           ; 0 bytes @ 0xC
  1947                           
  1948                           
  1949                           ; 3 bytes @ 0xC
  1950  002C                     	ds	1
  1951  002D                     Ax25_Send_Header@addresses:	
  1952  002D                     ___lldiv@quotient:	
  1953                           ; 1 bytes @ 0xD
  1954                           
  1955                           
  1956                           ; 4 bytes @ 0xD
  1957  002D                     	ds	1
  1958  002E                     ___ftmul@cntr:	
  1959  002E                     Ax25_Send_Header@j:	
  1960                           ; 1 bytes @ 0xE
  1961                           
  1962                           
  1963                           ; 2 bytes @ 0xE
  1964  002E                     	ds	1
  1965  002F                     ??___ftadd:	
  1966  002F                     ___ftmul@sign:	
  1967                           ; 0 bytes @ 0xF
  1968                           
  1969                           
  1970                           ; 1 bytes @ 0xF
  1971  002F                     	ds	1
  1972  0030                     ?___fttol:	
  1973  0030                     ___ftdiv@cntr:	
  1974                           ; 4 bytes @ 0x10
  1975                           
  1976  0030                     Ax25_Send_Header@i:	
  1977                           ; 1 bytes @ 0x10
  1978                           
  1979  0030                     ___fttol@f1:	
  1980                           ; 2 bytes @ 0x10
  1981                           
  1982                           
  1983                           ; 3 bytes @ 0x10
  1984  0030                     	ds	1
  1985  0031                     ___lldiv@counter:	
  1986  0031                     ___ftdiv@f3:	
  1987                           ; 1 bytes @ 0x11
  1988                           
  1989                           
  1990                           ; 3 bytes @ 0x11
  1991  0031                     	ds	1
  1992  0032                     ??_Modem_Init:	
  1993                           
  1994                           ; 0 bytes @ 0x12
  1995  0032                     	ds	1
  1996  0033                     ___ftadd@sign:	
  1997                           
  1998                           ; 1 bytes @ 0x13
  1999  0033                     	ds	1
  2000  0034                     ??___fttol:	
  2001  0034                     ___ftadd@exp2:	
  2002                           ; 0 bytes @ 0x14
  2003                           
  2004  0034                     ___ftdiv@exp:	
  2005                           ; 1 bytes @ 0x14
  2006                           
  2007                           
  2008                           ; 1 bytes @ 0x14
  2009  0034                     	ds	1
  2010  0035                     ___ftadd@exp1:	
  2011  0035                     ___ftdiv@sign:	
  2012                           ; 1 bytes @ 0x15
  2013                           
  2014                           
  2015                           ; 1 bytes @ 0x15
  2016  0035                     	ds	2
  2017  0037                     Adf_Write_Register_One@reg_ptr:	
  2018                           
  2019                           ; 3 bytes @ 0x17
  2020  0037                     	ds	1
  2021  0038                     ___fttol@sign1:	
  2022                           
  2023                           ; 1 bytes @ 0x18
  2024  0038                     	ds	1
  2025  0039                     ___fttol@lval:	
  2026                           
  2027                           ; 4 bytes @ 0x19
  2028  0039                     	ds	1
  2029  003A                     Adf_Write_Register_One@reg:	
  2030                           
  2031                           ; 4 bytes @ 0x1A
  2032  003A                     	ds	3
  2033  003D                     ___fttol@exp1:	
  2034                           
  2035                           ; 1 bytes @ 0x1D
  2036  003D                     	ds	1
  2037  003E                     ?_Set_Freq:	
  2038  003E                     Set_Freq@freq:	
  2039                           ; 0 bytes @ 0x1E
  2040                           
  2041                           
  2042                           ; 4 bytes @ 0x1E
  2043  003E                     	ds	4
  2044  0042                     ??_Set_Freq:	
  2045                           
  2046                           ; 0 bytes @ 0x22
  2047  0042                     	ds	1
  2048  0043                     Adf_Write_Register_Two@reg_ptr:	
  2049                           
  2050                           ; 4 bytes @ 0x23
  2051  0043                     	ds	3
  2052  0046                     Set_Freq@m:	
  2053                           
  2054                           ; 4 bytes @ 0x26
  2055  0046                     	ds	1
  2056  0047                     Adf_Write_Register_Zero@reg_ptr:	
  2057  0047                     Adf_Write_Register_Two@reg:	
  2058                           ; 4 bytes @ 0x27
  2059                           
  2060                           
  2061                           ; 4 bytes @ 0x27
  2062  0047                     	ds	3
  2063  004A                     Set_Freq@ratio:	
  2064                           
  2065                           ; 3 bytes @ 0x2A
  2066  004A                     	ds	1
  2067  004B                     Adf_Write_Register_Zero@reg:	
  2068                           
  2069                           ; 4 bytes @ 0x2B
  2070  004B                     	ds	2
  2071  004D                     Set_Freq@rest:	
  2072                           
  2073                           ; 3 bytes @ 0x2D
  2074  004D                     	ds	3
  2075  0050                     Set_Freq@f_pfd:	
  2076                           
  2077                           ; 4 bytes @ 0x30
  2078  0050                     	ds	4
  2079  0054                     Set_Freq@n:	
  2080                           
  2081                           ; 4 bytes @ 0x34
  2082  0054                     	ds	15
  2083  0063                     Adf_Write_Register_Three@reg_ptr:	
  2084                           
  2085                           ; 4 bytes @ 0x43
  2086  0063                     	ds	4
  2087  0067                     Adf_Write_Register_Three@reg:	
  2088                           
  2089                           ; 4 bytes @ 0x47
  2090  0067                     	ds	4
  2091  006B                     ??_Adf_Lock:	
  2092                           
  2093                           ; 0 bytes @ 0x4B
  2094  006B                     	ds	2
  2095  006D                     ??_Ptt_On:	
  2096                           
  2097                           ; 0 bytes @ 0x4D
  2098  006D                     	ds	1
  2099  006E                     ??_main:	
  2100                           
  2101                           ; 0 bytes @ 0x4E
  2102  006E                     	ds	1
  2103                           
  2104                           	psect	maintext
  2105  0B15                     __pmaintext:	
  2106 ;;
  2107 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2108 ;;
  2109 ;; *************** function _main *****************
  2110 ;; Defined at:
  2111 ;;		line 153 in file "main.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;		None
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  beacon_addre   16    4[BANK1 ] struct .[2]
  2116 ;;  adc_sonuc       2    0        unsigned int 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  2  132[COMMON] int 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 17F/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2129 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  2130 ;;Total ram usage:       17 bytes
  2131 ;; Hardware stack levels required when called:   10
  2132 ;; This function calls:
  2133 ;;		_Adc1_Start
  2134 ;;		_Ax25_Send_Footer
  2135 ;;		_Ax25_Send_Header
  2136 ;;		_Ax25_Send_String
  2137 ;;		_Dac0_Start
  2138 ;;		_Delay_ms
  2139 ;;		_Gpio_Config
  2140 ;;		_Modem_Flush_Frame
  2141 ;;		_Modem_Setup
  2142 ;;		_Ptt_Off
  2143 ;;		_Ptt_On
  2144 ;;		_System_Start
  2145 ;;		_Timer0_Start
  2146 ;;		_Timer1_Start
  2147 ;; This function is called by:
  2148 ;;		Startup code after reset
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function _main
  2154  0B15                     _main:	
  2155                           
  2156                           ;main.c: 154: unsigned int adc_sonuc;
  2157                           ;main.c: 155: System_Start();
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2161  0B15  3197  2736  318B   	fcall	_System_Start
  2162  0B18                     l133:	
  2163                           ;main.c: 156: while (!(OSCSTAT & (0x01))){}
  2164                           
  2165  0B18  0021               	movlb	1	; select bank1
  2166  0B19  1C1A               	btfss	26,0	;volatile
  2167  0B1A  2B18               	goto	l133
  2168                           
  2169                           ;main.c: 159: Gpio_Config();
  2170  0B1B  3195  2572  318B   	fcall	_Gpio_Config
  2171                           
  2172                           ;main.c: 161: Timer0_Start();
  2173  0B1E  3195  252C  318B   	fcall	_Timer0_Start
  2174                           
  2175                           ;main.c: 162: Timer1_Start();
  2176  0B21  3195  254F  318B   	fcall	_Timer1_Start
  2177                           
  2178                           ;main.c: 164: Dac0_Start();
  2179  0B24  3195  2527  318B   	fcall	_Dac0_Start
  2180                           
  2181                           ;main.c: 166: Adc1_Start();
  2182  0B27  3195  2531  318B   	fcall	_Adc1_Start
  2183                           
  2184                           ;main.c: 168: PORTAbits.RA5 = 0;;
  2185  0B2A  0020               	movlb	0	; select bank0
  2186  0B2B  128C               	bcf	12,5	;volatile
  2187                           
  2188                           ;main.c: 169: Delay_ms(10);
  2189  0B2C  300A               	movlw	10
  2190  0B2D  00F7               	movwf	Delay_ms@time_to_delay
  2191  0B2E  3000               	movlw	0
  2192  0B2F  00F8               	movwf	Delay_ms@time_to_delay+1
  2193  0B30  3195  255A  318B   	fcall	_Delay_ms
  2194                           
  2195                           ;main.c: 170: PORTAbits.RA4 = 1;;
  2196  0B33  0020               	movlb	0	; select bank0
  2197  0B34  160C               	bsf	12,4	;volatile
  2198                           
  2199                           ;main.c: 171: Delay_ms(10);
  2200  0B35  300A               	movlw	10
  2201  0B36  00F7               	movwf	Delay_ms@time_to_delay
  2202  0B37  3000               	movlw	0
  2203  0B38  00F8               	movwf	Delay_ms@time_to_delay+1
  2204  0B39  3195  255A  318B   	fcall	_Delay_ms
  2205                           
  2206                           ;main.c: 172: PORTAbits.RA5 = 1;;
  2207  0B3C  0020               	movlb	0	; select bank0
  2208  0B3D  168C               	bsf	12,5	;volatile
  2209                           
  2210                           ;main.c: 173: Delay_ms(10);
  2211  0B3E  300A               	movlw	10
  2212  0B3F  00F7               	movwf	Delay_ms@time_to_delay
  2213  0B40  3000               	movlw	0
  2214  0B41  00F8               	movwf	Delay_ms@time_to_delay+1
  2215  0B42  3195  255A  318B   	fcall	_Delay_ms
  2216                           
  2217                           ;main.c: 175: Delay_ms(200);
  2218  0B45  30C8               	movlw	200
  2219  0B46  00F7               	movwf	Delay_ms@time_to_delay
  2220  0B47  3000               	movlw	0
  2221  0B48  00F8               	movwf	Delay_ms@time_to_delay+1
  2222  0B49  3195  255A  318B   	fcall	_Delay_ms
  2223                           
  2224                           ;main.c: 178: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 7}};
  2225  0B4C  3040               	movlw	low main@F3178
  2226  0B4D  0086               	movwf	6
  2227  0B4E  3001               	movlw	high main@F3178
  2228  0B4F  0087               	movwf	7
  2229  0B50  30DF               	movlw	low main@beacon_address
  2230  0B51  0084               	movwf	4
  2231  0B52  3000               	movlw	high main@beacon_address
  2232  0B53  0085               	movwf	5
  2233  0B54  3010               	movlw	16
  2234  0B55  0020               	movlb	0	; select bank0
  2235  0B56  00EE               	movwf	??_main
  2236  0B57                     u5480:	
  2237  0B57  0016               	moviw fsr1++
  2238  0B58  001A               	movwi fsr0++
  2239  0B59  0BEE               	decfsz	??_main,f
  2240  0B5A  2B57               	goto	u5480
  2241                           
  2242                           ;main.c: 180: Ax25_Send_Header(beacon_address,2);
  2243  0B5B  3002               	movlw	2
  2244  0B5C  00A8               	movwf	Ax25_Send_Header@num_addresses
  2245  0B5D  3000               	movlw	0
  2246  0B5E  00A9               	movwf	Ax25_Send_Header@num_addresses+1
  2247  0B5F  30DF               	movlw	main@beacon_address& (0+255)
  2248  0B60  3186  267A  318B   	fcall	_Ax25_Send_Header
  2249                           
  2250                           ;main.c: 181: Ax25_Send_String("HELLO");
  2251  0B63  3008               	movlw	low (STR_1| (0+32768))
  2252  0B64  0020               	movlb	0	; select bank0
  2253  0B65  00A8               	movwf	Ax25_Send_String@string
  2254  0B66  3083               	movlw	high (STR_1| (0+32768))
  2255  0B67  00A9               	movwf	Ax25_Send_String@string+1
  2256  0B68  3196  2637  318B   	fcall	_Ax25_Send_String
  2257                           
  2258                           ;main.c: 182: Ax25_Send_Footer();
  2259  0B6B  3196  2600  318B   	fcall	_Ax25_Send_Footer
  2260                           
  2261                           ;main.c: 186: Modem_Setup();
  2262  0B6E  3195  2537  318B   	fcall	_Modem_Setup
  2263                           
  2264                           ;main.c: 187: Delay_ms(100);
  2265  0B71  3064               	movlw	100
  2266  0B72  00F7               	movwf	Delay_ms@time_to_delay
  2267  0B73  3000               	movlw	0
  2268  0B74  00F8               	movwf	Delay_ms@time_to_delay+1
  2269  0B75  3195  255A  318B   	fcall	_Delay_ms
  2270                           
  2271                           ;main.c: 188: PORTCbits.RC3 = 0; ;
  2272  0B78  0020               	movlb	0	; select bank0
  2273  0B79  118E               	bcf	14,3	;volatile
  2274                           
  2275                           ;main.c: 189: Delay_ms(100);
  2276  0B7A  3064               	movlw	100
  2277  0B7B  00F7               	movwf	Delay_ms@time_to_delay
  2278  0B7C  3000               	movlw	0
  2279  0B7D  00F8               	movwf	Delay_ms@time_to_delay+1
  2280  0B7E  3195  255A  318B   	fcall	_Delay_ms
  2281                           
  2282                           ;main.c: 190: Ptt_On();
  2283  0B81  3197  27CA  318B   	fcall	_Ptt_On
  2284  0B84                     l3637:	
  2285                           ;main.c: 192: while(1){
  2286                           
  2287                           
  2288                           ;main.c: 193: if(PTT_OFF){
  2289  0B84  0021               	movlb	1	; select bank1
  2290  0B85  0854               	movf	_PTT_OFF^(0+128),w
  2291  0B86  1903               	btfsc	3,2
  2292  0B87  2B8D               	goto	l3643
  2293                           
  2294                           ;main.c: 194: Ptt_Off();
  2295  0B88  3195  2596  318B   	fcall	_Ptt_Off
  2296                           
  2297                           ;main.c: 195: PTT_OFF = 0;
  2298  0B8B  0021               	movlb	1	; select bank1
  2299  0B8C  01D4               	clrf	_PTT_OFF^(0+128)
  2300  0B8D                     l3643:	
  2301                           
  2302                           ;main.c: 196: }
  2303                           ;main.c: 199: Modem_Flush_Frame();
  2304  0B8D  3196  26E2  318B   	fcall	_Modem_Flush_Frame
  2305                           
  2306                           ;main.c: 200: Delay_ms(200);
  2307  0B90  30C8               	movlw	200
  2308  0B91  00F7               	movwf	Delay_ms@time_to_delay
  2309  0B92  3000               	movlw	0
  2310  0B93  00F8               	movwf	Delay_ms@time_to_delay+1
  2311  0B94  3195  255A  318B   	fcall	_Delay_ms
  2312                           
  2313                           ;main.c: 201: Delay_ms(10);
  2314  0B97  300A               	movlw	10
  2315  0B98  00F7               	movwf	Delay_ms@time_to_delay
  2316  0B99  3000               	movlw	0
  2317  0B9A  00F8               	movwf	Delay_ms@time_to_delay+1
  2318  0B9B  3195  255A  318B   	fcall	_Delay_ms
  2319  0B9E  2B84               	goto	l3637
  2320  0B9F                     __end_of_main:	
  2321                           ;main.c: 203: }
  2322                           ;main.c: 204: return (0);
  2323                           ;	Return value of _main is never used
  2324                           
  2325                           
  2326                           	psect	text1
  2327  154F                     __ptext1:	
  2328 ;; *************** function _Timer1_Start *****************
  2329 ;; Defined at:
  2330 ;;		line 264 in file "utility.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;		None               void
  2337 ;; Registers used:
  2338 ;;		wreg, status,2
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           
  2359                           ;psect for function _Timer1_Start
  2360  154F                     _Timer1_Start:	
  2361                           
  2362                           ;utility.c: 266: TMR1H = 0x00;
  2363                           
  2364                           ;incstack = 0
  2365                           ; Regs used in _Timer1_Start: [wreg+status,2]
  2366  154F  0020               	movlb	0	; select bank0
  2367  1550  0197               	clrf	23	;volatile
  2368                           
  2369                           ;utility.c: 267: TMR1L = 0x00;
  2370  1551  0196               	clrf	22	;volatile
  2371                           
  2372                           ;utility.c: 270: CCPR1H = 0x03;
  2373  1552  3003               	movlw	3
  2374  1553  0025               	movlb	5	; select bank5
  2375  1554  0092               	movwf	18	;volatile
  2376                           
  2377                           ;utility.c: 271: CCPR1L = 0x41;
  2378  1555  3041               	movlw	65
  2379  1556  0091               	movwf	17	;volatile
  2380                           
  2381                           ;utility.c: 274: CCP1IE = 1;
  2382  1557  0021               	movlb	1	; select bank1
  2383  1558  1511               	bsf	17,2	;volatile
  2384  1559  0008               	return
  2385  155A                     __end_of_Timer1_Start:	
  2386                           
  2387                           	psect	text2
  2388  1736                     __ptext2:	
  2389 ;; *************** function _System_Start *****************
  2390 ;; Defined at:
  2391 ;;		line 89 in file "main.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;		None               void
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2409 ;;Total ram usage:        1 bytes
  2410 ;; Hardware stack levels used:    1
  2411 ;; Hardware stack levels required when called:    1
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_main
  2416 ;; This function uses a non-reentrant model
  2417 ;;
  2418                           
  2419                           
  2420                           ;psect for function _System_Start
  2421  1736                     _System_Start:	
  2422                           
  2423                           ;main.c: 92: OSCCON = 0x00;
  2424                           
  2425                           ;incstack = 0
  2426                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2427  1736  0021               	movlb	1	; select bank1
  2428  1737  0199               	clrf	25	;volatile
  2429                           
  2430                           ;main.c: 93: OSCCON |= 0b11110000;
  2431  1738  30F0               	movlw	240
  2432  1739  00F2               	movwf	??_System_Start
  2433  173A  0872               	movf	??_System_Start,w
  2434  173B  0499               	iorwf	25,f	;volatile
  2435                           
  2436                           ;main.c: 94: OSCTUNE = 0x00;
  2437  173C  0198               	clrf	24	;volatile
  2438                           
  2439                           ;main.c: 98: TMR0CS = 0;
  2440  173D  1295               	bcf	21,5	;volatile
  2441                           
  2442                           ;main.c: 99: PSA = 1;
  2443  173E  1595               	bsf	21,3	;volatile
  2444                           
  2445                           ;main.c: 104: TMR1ON = 1;
  2446  173F  0020               	movlb	0	; select bank0
  2447  1740  1418               	bsf	24,0	;volatile
  2448                           
  2449                           ;main.c: 105: TMR1GE = 0;
  2450  1741  1399               	bcf	25,7	;volatile
  2451                           
  2452                           ;main.c: 108: TMR1CS1 = 0;
  2453  1742  1398               	bcf	24,7	;volatile
  2454                           
  2455                           ;main.c: 109: TMR1CS0 = 0;
  2456  1743  1318               	bcf	24,6	;volatile
  2457                           
  2458                           ;main.c: 112: T1CKPS1 = 1;
  2459  1744  1698               	bsf	24,5	;volatile
  2460                           
  2461                           ;main.c: 113: T1CKPS0 = 1;
  2462  1745  1618               	bsf	24,4	;volatile
  2463                           
  2464                           ;main.c: 116: CCP1M3 = 1;
  2465  1746  0025               	movlb	5	; select bank5
  2466  1747  1593               	bsf	19,3	;volatile
  2467                           
  2468                           ;main.c: 117: CCP1M2 = 0;
  2469  1748  1113               	bcf	19,2	;volatile
  2470                           
  2471                           ;main.c: 118: CCP1M1 = 1;
  2472  1749  1493               	bsf	19,1	;volatile
  2473                           
  2474                           ;main.c: 119: CCP1M1 = 0;
  2475  174A  1093               	bcf	19,1	;volatile
  2476                           
  2477                           ;main.c: 124: DACOE = 1;
  2478  174B  0022               	movlb	2	; select bank2
  2479  174C  1698               	bsf	24,5	;volatile
  2480                           
  2481                           ;main.c: 125: DACPSS1 = 0;
  2482  174D  1198               	bcf	24,3	;volatile
  2483                           
  2484                           ;main.c: 126: DACPSS0 = 0;
  2485  174E  1118               	bcf	24,2	;volatile
  2486                           
  2487                           ;main.c: 127: DACNSS = 0;
  2488  174F  1018               	bcf	24,0	;volatile
  2489                           
  2490                           ;main.c: 132: ANSA1 = 1;
  2491  1750  0023               	movlb	3	; select bank3
  2492  1751  148C               	bsf	12,1	;volatile
  2493                           
  2494                           ;main.c: 133: ADCON0 &= 0b10000011;
  2495  1752  3083               	movlw	131
  2496  1753  00F2               	movwf	??_System_Start
  2497  1754  0872               	movf	??_System_Start,w
  2498  1755  0021               	movlb	1	; select bank1
  2499  1756  059D               	andwf	29,f	;volatile
  2500                           
  2501                           ;main.c: 134: ADCON0 |= 0b00000100;
  2502  1757  151D               	bsf	29,2	;volatile
  2503                           
  2504                           ;main.c: 135: ADNREF = 0;
  2505  1758  111E               	bcf	30,2	;volatile
  2506                           
  2507                           ;main.c: 136: ADPREF1 = 0;
  2508  1759  109E               	bcf	30,1	;volatile
  2509                           
  2510                           ;main.c: 137: ADPREF0 = 0;
  2511  175A  101E               	bcf	30,0	;volatile
  2512                           
  2513                           ;main.c: 138: ADCS2 = 1;
  2514  175B  171E               	bsf	30,6	;volatile
  2515                           
  2516                           ;main.c: 139: ADCS1 = 1;
  2517  175C  169E               	bsf	30,5	;volatile
  2518                           
  2519                           ;main.c: 140: ADCS0 = 0;
  2520  175D  121E               	bcf	30,4	;volatile
  2521                           
  2522                           ;main.c: 141: ADFM = 1;
  2523  175E  179E               	bsf	30,7	;volatile
  2524                           
  2525                           ;main.c: 146: INTCON |= 0xC0;
  2526  175F  30C0               	movlw	192
  2527  1760  00F2               	movwf	??_System_Start
  2528  1761  0872               	movf	??_System_Start,w
  2529  1762  048B               	iorwf	11,f	;volatile
  2530  1763  0008               	return
  2531  1764                     __end_of_System_Start:	
  2532                           
  2533                           	psect	text3
  2534  1596                     __ptext3:	
  2535 ;; *************** function _Ptt_Off *****************
  2536 ;; Defined at:
  2537 ;;		line 352 in file "adf7012.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;		None               void
  2544 ;; Registers used:
  2545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    7
  2558 ;; This function calls:
  2559 ;;		_Adf_Write_Config
  2560 ;;		_Delay_ms
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _Ptt_Off
  2568  1596                     _Ptt_Off:	
  2569                           
  2570                           ;adf7012.c: 354: adf_config.r3.pa_enable = 0;
  2571                           
  2572                           ;incstack = 0
  2573                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2574  1596  0021               	movlb	1	; select bank1
  2575  1597  01BA               	clrf	(_adf_config^(0+128)+26)
  2576                           
  2577                           ;adf7012.c: 355: adf_config.r2.power_amplifier_level = 0;
  2578  1598  01B2               	clrf	(_adf_config^(0+128)+18)
  2579                           
  2580                           ;adf7012.c: 356: Adf_Write_Config();
  2581  1599  3195  2566  3195   	fcall	_Adf_Write_Config
  2582                           
  2583                           ;adf7012.c: 357: Delay_ms(10);
  2584  159C  300A               	movlw	10
  2585  159D  00F7               	movwf	Delay_ms@time_to_delay
  2586  159E  3000               	movlw	0
  2587  159F  00F8               	movwf	Delay_ms@time_to_delay+1
  2588  15A0  3195  255A         	fcall	_Delay_ms
  2589  15A2  0008               	return
  2590  15A3                     __end_of_Ptt_Off:	
  2591                           
  2592                           	psect	text4
  2593  1537                     __ptext4:	
  2594 ;; *************** function _Modem_Setup *****************
  2595 ;; Defined at:
  2596 ;;		line 116 in file "audio_tone.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;		None               void
  2603 ;; Registers used:
  2604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;Total ram usage:        0 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    8
  2617 ;; This function calls:
  2618 ;;		_Modem_Init
  2619 ;;		_Radio_Setup
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _Modem_Setup
  2627  1537                     _Modem_Setup:	
  2628                           
  2629                           ;audio_tone.c: 118: Modem_Init();
  2630                           
  2631                           ;incstack = 0
  2632                           ; Regs used in _Modem_Setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2633  1537  318E  265D  3195   	fcall	_Modem_Init
  2634                           
  2635                           ;audio_tone.c: 119: Radio_Setup();
  2636  153A  3196  261B         	fcall	_Radio_Setup
  2637  153C  0008               	return
  2638  153D                     __end_of_Modem_Setup:	
  2639                           
  2640                           	psect	text5
  2641  161B                     __ptext5:	
  2642 ;; *************** function _Radio_Setup *****************
  2643 ;; Defined at:
  2644 ;;		line 305 in file "adf7012.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;		None               void
  2651 ;; Registers used:
  2652 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; Hardware stack levels required when called:    7
  2665 ;; This function calls:
  2666 ;;		_Adf_Reset_Config
  2667 ;;		_Adf_Write_Config
  2668 ;;		_Delay_ms
  2669 ;;		_Gpio_Config
  2670 ;;		_Set_Freq
  2671 ;; This function is called by:
  2672 ;;		_Modem_Setup
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           
  2677                           ;psect for function _Radio_Setup
  2678  161B                     _Radio_Setup:	
  2679                           
  2680                           ;adf7012.c: 308: Gpio_Config();
  2681                           
  2682                           ;incstack = 0
  2683                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2684  161B  3195  2572  3196   	fcall	_Gpio_Config
  2685                           
  2686                           ;adf7012.c: 311: Adf_Reset_Config();
  2687  161E  3180  20F1  3196   	fcall	_Adf_Reset_Config
  2688                           
  2689                           ;adf7012.c: 312: Set_Freq(144390000UL);
  2690  1621  3008               	movlw	8
  2691  1622  0020               	movlb	0	; select bank0
  2692  1623  00C1               	movwf	Set_Freq@freq+3
  2693  1624  309B               	movlw	155
  2694  1625  00C0               	movwf	Set_Freq@freq+2
  2695  1626  3037               	movlw	55
  2696  1627  00BF               	movwf	Set_Freq@freq+1
  2697  1628  3070               	movlw	112
  2698  1629  00BE               	movwf	Set_Freq@freq
  2699  162A  3184  2472  3196   	fcall	_Set_Freq
  2700                           
  2701                           ;adf7012.c: 313: Adf_Write_Config();
  2702  162D  3195  2566  3196   	fcall	_Adf_Write_Config
  2703                           
  2704                           ;adf7012.c: 315: Delay_ms(10);
  2705  1630  300A               	movlw	10
  2706  1631  00F7               	movwf	Delay_ms@time_to_delay
  2707  1632  3000               	movlw	0
  2708  1633  00F8               	movwf	Delay_ms@time_to_delay+1
  2709  1634  3195  255A         	fcall	_Delay_ms
  2710  1636  0008               	return
  2711  1637                     __end_of_Radio_Setup:	
  2712                           
  2713                           	psect	text6
  2714  0472                     __ptext6:	
  2715 ;; *************** function _Set_Freq *****************
  2716 ;; Defined at:
  2717 ;;		line 278 in file "adf7012.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  freq            4   30[BANK0 ] unsigned long 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  n               4   52[BANK0 ] unsigned long 
  2722 ;;  f_pfd           4   48[BANK0 ] unsigned long 
  2723 ;;  m               4   38[BANK0 ] unsigned long 
  2724 ;;  rest            3   45[BANK0 ] float 
  2725 ;;  ratio           3   42[BANK0 ] float 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;		None               void
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2735 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2736 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2737 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2738 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2739 ;;Total ram usage:       26 bytes
  2740 ;; Hardware stack levels used:    1
  2741 ;; Hardware stack levels required when called:    3
  2742 ;; This function calls:
  2743 ;;		___aldiv
  2744 ;;		___ftadd
  2745 ;;		___ftdiv
  2746 ;;		___ftmul
  2747 ;;		___ftneg
  2748 ;;		___fttol
  2749 ;;		___lldiv
  2750 ;;		___lltoft
  2751 ;; This function is called by:
  2752 ;;		_Radio_Setup
  2753 ;;		_Modem_Set_Tx_Freq
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           
  2758                           ;psect for function _Set_Freq
  2759  0472                     _Set_Freq:	
  2760                           
  2761                           ;adf7012.c: 284: adf_config.r0.output_divider = 0;
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in _Set_Freq: [wreg+status,2+status,0+pclath+cstack]
  2765  0472  0021               	movlb	1	; select bank1
  2766  0473  01A9               	clrf	(_adf_config^(0+128)+9)
  2767                           
  2768                           ;adf7012.c: 285: if (freq < 410000000) { adf_config.r0.output_divider = 1; };
  2769  0474  3018               	movlw	24
  2770  0475  0020               	movlb	0	; select bank0
  2771  0476  0241               	subwf	Set_Freq@freq+3,w
  2772  0477  1D03               	skipz
  2773  0478  2C83               	goto	u5075
  2774  0479  3070               	movlw	112
  2775  047A  0240               	subwf	Set_Freq@freq+2,w
  2776  047B  1D03               	skipz
  2777  047C  2C83               	goto	u5075
  2778  047D  301A               	movlw	26
  2779  047E  023F               	subwf	Set_Freq@freq+1,w
  2780  047F  1D03               	skipz
  2781  0480  2C83               	goto	u5075
  2782  0481  3080               	movlw	128
  2783  0482  023E               	subwf	Set_Freq@freq,w
  2784  0483                     u5075:	
  2785  0483  1803               	skipnc
  2786  0484  2C88               	goto	l3393
  2787  0485  0021               	movlb	1	; select bank1
  2788  0486  01A9               	clrf	(_adf_config^(0+128)+9)
  2789  0487  0AA9               	incf	(_adf_config^(0+128)+9),f
  2790  0488                     l3393:	
  2791                           
  2792                           ;adf7012.c: 286: if (freq < 210000000) { adf_config.r0.output_divider = 2; };
  2793  0488  300C               	movlw	12
  2794  0489  0020               	movlb	0	; select bank0
  2795  048A  0241               	subwf	Set_Freq@freq+3,w
  2796  048B  1D03               	skipz
  2797  048C  2C97               	goto	u5085
  2798  048D  3084               	movlw	132
  2799  048E  0240               	subwf	Set_Freq@freq+2,w
  2800  048F  1D03               	skipz
  2801  0490  2C97               	goto	u5085
  2802  0491  3058               	movlw	88
  2803  0492  023F               	subwf	Set_Freq@freq+1,w
  2804  0493  1D03               	skipz
  2805  0494  2C97               	goto	u5085
  2806  0495  3080               	movlw	128
  2807  0496  023E               	subwf	Set_Freq@freq,w
  2808  0497                     u5085:	
  2809  0497  1803               	skipnc
  2810  0498  2C9E               	goto	l337
  2811  0499  3002               	movlw	2
  2812  049A  00C2               	movwf	??_Set_Freq
  2813  049B  0842               	movf	??_Set_Freq,w
  2814  049C  0021               	movlb	1	; select bank1
  2815  049D  00A9               	movwf	(_adf_config^(0+128)+9)
  2816  049E                     l337:	
  2817                           
  2818                           ;adf7012.c: 287: if (freq < 130000000) { adf_config.r0.output_divider = 3; };
  2819  049E  3007               	movlw	7
  2820  049F  0020               	movlb	0	; select bank0
  2821  04A0  0241               	subwf	Set_Freq@freq+3,w
  2822  04A1  1D03               	skipz
  2823  04A2  2CAD               	goto	u5095
  2824  04A3  30BF               	movlw	191
  2825  04A4  0240               	subwf	Set_Freq@freq+2,w
  2826  04A5  1D03               	skipz
  2827  04A6  2CAD               	goto	u5095
  2828  04A7  30A4               	movlw	164
  2829  04A8  023F               	subwf	Set_Freq@freq+1,w
  2830  04A9  1D03               	skipz
  2831  04AA  2CAD               	goto	u5095
  2832  04AB  3080               	movlw	128
  2833  04AC  023E               	subwf	Set_Freq@freq,w
  2834  04AD                     u5095:	
  2835  04AD  1803               	skipnc
  2836  04AE  2CB4               	goto	l3399
  2837  04AF  3003               	movlw	3
  2838  04B0  00C2               	movwf	??_Set_Freq
  2839  04B1  0842               	movf	??_Set_Freq,w
  2840  04B2  0021               	movlb	1	; select bank1
  2841  04B3  00A9               	movwf	(_adf_config^(0+128)+9)
  2842  04B4                     l3399:	
  2843                           
  2844                           ;adf7012.c: 289: uint32_t f_pfd = 20000000L / adf_config.r0.r_divider;
  2845  04B4  0021               	movlb	1	; select bank1
  2846  04B5  0824               	movf	(_adf_config^(0+128)+4),w
  2847  04B6  0020               	movlb	0	; select bank0
  2848  04B7  00C2               	movwf	??_Set_Freq
  2849  04B8  01C3               	clrf	??_Set_Freq+1
  2850  04B9  01C4               	clrf	??_Set_Freq+2
  2851  04BA  01C5               	clrf	??_Set_Freq+3
  2852  04BB  0845               	movf	??_Set_Freq+3,w
  2853  04BC  00F5               	movwf	___aldiv@divisor+3
  2854  04BD  0844               	movf	??_Set_Freq+2,w
  2855  04BE  00F4               	movwf	___aldiv@divisor+2
  2856  04BF  0843               	movf	??_Set_Freq+1,w
  2857  04C0  00F3               	movwf	___aldiv@divisor+1
  2858  04C1  0842               	movf	??_Set_Freq,w
  2859  04C2  00F2               	movwf	___aldiv@divisor
  2860  04C3  3001               	movlw	1
  2861  04C4  00F9               	movwf	___aldiv@dividend+3
  2862  04C5  3031               	movlw	49
  2863  04C6  00F8               	movwf	___aldiv@dividend+2
  2864  04C7  302D               	movlw	45
  2865  04C8  00F7               	movwf	___aldiv@dividend+1
  2866  04C9  3000               	movlw	0
  2867  04CA  00F6               	movwf	___aldiv@dividend
  2868  04CB  3189  2183  3184   	fcall	___aldiv
  2869  04CE  0875               	movf	?___aldiv+3,w
  2870  04CF  0020               	movlb	0	; select bank0
  2871  04D0  00D3               	movwf	Set_Freq@f_pfd+3
  2872  04D1  0874               	movf	?___aldiv+2,w
  2873  04D2  00D2               	movwf	Set_Freq@f_pfd+2
  2874  04D3  0873               	movf	?___aldiv+1,w
  2875  04D4  00D1               	movwf	Set_Freq@f_pfd+1
  2876  04D5  0872               	movf	?___aldiv,w
  2877  04D6  00D0               	movwf	Set_Freq@f_pfd
  2878                           
  2879                           ;adf7012.c: 291: uint32_t n = (uint32_t)(freq / f_pfd);
  2880  04D7  0853               	movf	Set_Freq@f_pfd+3,w
  2881  04D8  00A7               	movwf	___lldiv@divisor+3
  2882  04D9  0852               	movf	Set_Freq@f_pfd+2,w
  2883  04DA  00A6               	movwf	___lldiv@divisor+2
  2884  04DB  0851               	movf	Set_Freq@f_pfd+1,w
  2885  04DC  00A5               	movwf	___lldiv@divisor+1
  2886  04DD  0850               	movf	Set_Freq@f_pfd,w
  2887  04DE  00A4               	movwf	___lldiv@divisor
  2888  04DF  0841               	movf	Set_Freq@freq+3,w
  2889  04E0  00AB               	movwf	___lldiv@dividend+3
  2890  04E1  0840               	movf	Set_Freq@freq+2,w
  2891  04E2  00AA               	movwf	___lldiv@dividend+2
  2892  04E3  083F               	movf	Set_Freq@freq+1,w
  2893  04E4  00A9               	movwf	___lldiv@dividend+1
  2894  04E5  083E               	movf	Set_Freq@freq,w
  2895  04E6  00A8               	movwf	___lldiv@dividend
  2896  04E7  3188  205F  3184   	fcall	___lldiv
  2897  04EA  0020               	movlb	0	; select bank0
  2898  04EB  0827               	movf	?___lldiv+3,w
  2899  04EC  00D7               	movwf	Set_Freq@n+3
  2900  04ED  0826               	movf	?___lldiv+2,w
  2901  04EE  00D6               	movwf	Set_Freq@n+2
  2902  04EF  0825               	movf	?___lldiv+1,w
  2903  04F0  00D5               	movwf	Set_Freq@n+1
  2904  04F1  0824               	movf	?___lldiv,w
  2905  04F2  00D4               	movwf	Set_Freq@n
  2906                           
  2907                           ;adf7012.c: 293: float ratio = (float)freq / (float)f_pfd;
  2908  04F3  0853               	movf	Set_Freq@f_pfd+3,w
  2909  04F4  00A3               	movwf	___lltoft@c+3
  2910  04F5  0852               	movf	Set_Freq@f_pfd+2,w
  2911  04F6  00A2               	movwf	___lltoft@c+2
  2912  04F7  0851               	movf	Set_Freq@f_pfd+1,w
  2913  04F8  00A1               	movwf	___lltoft@c+1
  2914  04F9  0850               	movf	Set_Freq@f_pfd,w
  2915  04FA  00A0               	movwf	___lltoft@c
  2916  04FB  3197  270C  3184   	fcall	___lltoft
  2917  04FE  0020               	movlb	0	; select bank0
  2918  04FF  0820               	movf	?___lltoft,w
  2919  0500  00A6               	movwf	___ftdiv@f2
  2920  0501  0821               	movf	?___lltoft+1,w
  2921  0502  00A7               	movwf	___ftdiv@f2+1
  2922  0503  0822               	movf	?___lltoft+2,w
  2923  0504  00A8               	movwf	___ftdiv@f2+2
  2924  0505  0841               	movf	Set_Freq@freq+3,w
  2925  0506  00A3               	movwf	___lltoft@c+3
  2926  0507  0840               	movf	Set_Freq@freq+2,w
  2927  0508  00A2               	movwf	___lltoft@c+2
  2928  0509  083F               	movf	Set_Freq@freq+1,w
  2929  050A  00A1               	movwf	___lltoft@c+1
  2930  050B  083E               	movf	Set_Freq@freq,w
  2931  050C  00A0               	movwf	___lltoft@c
  2932  050D  3197  270C  3184   	fcall	___lltoft
  2933  0510  0020               	movlb	0	; select bank0
  2934  0511  0820               	movf	?___lltoft,w
  2935  0512  00A9               	movwf	___ftdiv@f1
  2936  0513  0821               	movf	?___lltoft+1,w
  2937  0514  00AA               	movwf	___ftdiv@f1+1
  2938  0515  0822               	movf	?___lltoft+2,w
  2939  0516  00AB               	movwf	___ftdiv@f1+2
  2940  0517  3187  2754  3184   	fcall	___ftdiv
  2941  051A  0020               	movlb	0	; select bank0
  2942  051B  0826               	movf	?___ftdiv,w
  2943  051C  00CA               	movwf	Set_Freq@ratio
  2944  051D  0827               	movf	?___ftdiv+1,w
  2945  051E  00CB               	movwf	Set_Freq@ratio+1
  2946  051F  0828               	movf	?___ftdiv+2,w
  2947  0520  00CC               	movwf	Set_Freq@ratio+2
  2948                           
  2949                           ;adf7012.c: 294: float rest = ratio - (float)n;
  2950  0521  084A               	movf	Set_Freq@ratio,w
  2951  0522  00A9               	movwf	___ftadd@f1
  2952  0523  084B               	movf	Set_Freq@ratio+1,w
  2953  0524  00AA               	movwf	___ftadd@f1+1
  2954  0525  084C               	movf	Set_Freq@ratio+2,w
  2955  0526  00AB               	movwf	___ftadd@f1+2
  2956  0527  0857               	movf	Set_Freq@n+3,w
  2957  0528  00A3               	movwf	___lltoft@c+3
  2958  0529  0856               	movf	Set_Freq@n+2,w
  2959  052A  00A2               	movwf	___lltoft@c+2
  2960  052B  0855               	movf	Set_Freq@n+1,w
  2961  052C  00A1               	movwf	___lltoft@c+1
  2962  052D  0854               	movf	Set_Freq@n,w
  2963  052E  00A0               	movwf	___lltoft@c
  2964  052F  3197  270C  3184   	fcall	___lltoft
  2965  0532  0020               	movlb	0	; select bank0
  2966  0533  0820               	movf	?___lltoft,w
  2967  0534  00A6               	movwf	___ftneg@f1
  2968  0535  0821               	movf	?___lltoft+1,w
  2969  0536  00A7               	movwf	___ftneg@f1+1
  2970  0537  0822               	movf	?___lltoft+2,w
  2971  0538  00A8               	movwf	___ftneg@f1+2
  2972  0539  3195  2546  3184   	fcall	___ftneg
  2973  053C  0020               	movlb	0	; select bank0
  2974  053D  0826               	movf	?___ftneg,w
  2975  053E  00AC               	movwf	___ftadd@f2
  2976  053F  0827               	movf	?___ftneg+1,w
  2977  0540  00AD               	movwf	___ftadd@f2+1
  2978  0541  0828               	movf	?___ftneg+2,w
  2979  0542  00AE               	movwf	___ftadd@f2+2
  2980  0543  3185  2584  3184   	fcall	___ftadd
  2981  0546  0020               	movlb	0	; select bank0
  2982  0547  0829               	movf	?___ftadd,w
  2983  0548  00CD               	movwf	Set_Freq@rest
  2984  0549  082A               	movf	?___ftadd+1,w
  2985  054A  00CE               	movwf	Set_Freq@rest+1
  2986  054B  082B               	movf	?___ftadd+2,w
  2987  054C  00CF               	movwf	Set_Freq@rest+2
  2988                           
  2989                           ;adf7012.c: 297: uint32_t m = (uint32_t)(rest * 4096);
  2990  054D  084D               	movf	Set_Freq@rest,w
  2991  054E  00A3               	movwf	___ftmul@f2
  2992  054F  084E               	movf	Set_Freq@rest+1,w
  2993  0550  00A4               	movwf	___ftmul@f2+1
  2994  0551  084F               	movf	Set_Freq@rest+2,w
  2995  0552  00A5               	movwf	___ftmul@f2+2
  2996  0553  3000               	movlw	0
  2997  0554  00A0               	movwf	___ftmul@f1
  2998  0555  3080               	movlw	128
  2999  0556  00A1               	movwf	___ftmul@f1+1
  3000  0557  3045               	movlw	69
  3001  0558  00A2               	movwf	___ftmul@f1+2
  3002  0559  318C  242B  3184   	fcall	___ftmul
  3003  055C  0020               	movlb	0	; select bank0
  3004  055D  0820               	movf	?___ftmul,w
  3005  055E  00B0               	movwf	___fttol@f1
  3006  055F  0821               	movf	?___ftmul+1,w
  3007  0560  00B1               	movwf	___fttol@f1+1
  3008  0561  0822               	movf	?___ftmul+2,w
  3009  0562  00B2               	movwf	___fttol@f1+2
  3010  0563  318A  2205         	fcall	___fttol
  3011  0565  0020               	movlb	0	; select bank0
  3012  0566  0833               	movf	?___fttol+3,w
  3013  0567  00C9               	movwf	Set_Freq@m+3
  3014  0568  0832               	movf	?___fttol+2,w
  3015  0569  00C8               	movwf	Set_Freq@m+2
  3016  056A  0831               	movf	?___fttol+1,w
  3017  056B  00C7               	movwf	Set_Freq@m+1
  3018  056C  0830               	movf	?___fttol,w
  3019  056D  00C6               	movwf	Set_Freq@m
  3020                           
  3021                           ;adf7012.c: 299: adf_config.r1.integer_n = n;
  3022  056E  0854               	movf	Set_Freq@n,w
  3023  056F  00C2               	movwf	??_Set_Freq
  3024  0570  0842               	movf	??_Set_Freq,w
  3025  0571  0021               	movlb	1	; select bank1
  3026  0572  00AE               	movwf	(_adf_config^(0+128)+14)
  3027                           
  3028                           ;adf7012.c: 300: adf_config.r1.fractional_n = m;
  3029  0573  0020               	movlb	0	; select bank0
  3030  0574  0849               	movf	Set_Freq@m+3,w
  3031  0575  0021               	movlb	1	; select bank1
  3032  0576  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  3033  0577  0020               	movlb	0	; select bank0
  3034  0578  0848               	movf	Set_Freq@m+2,w
  3035  0579  0021               	movlb	1	; select bank1
  3036  057A  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  3037  057B  0020               	movlb	0	; select bank0
  3038  057C  0847               	movf	Set_Freq@m+1,w
  3039  057D  0021               	movlb	1	; select bank1
  3040  057E  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  3041  057F  0020               	movlb	0	; select bank0
  3042  0580  0846               	movf	Set_Freq@m,w
  3043  0581  0021               	movlb	1	; select bank1
  3044  0582  00AA               	movwf	(_adf_config^(0+128)+10)
  3045  0583  0008               	return
  3046  0584                     __end_of_Set_Freq:	
  3047                           
  3048                           	psect	text7
  3049  170C                     __ptext7:	
  3050 ;; *************** function ___lltoft *****************
  3051 ;; Defined at:
  3052 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  c               4    0[BANK0 ] unsigned long 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  exp             1    5[BANK0 ] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  3    0[BANK0 ] float 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, pclath, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3066 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3068 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3069 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3070 ;;Total ram usage:        6 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    2
  3073 ;; This function calls:
  3074 ;;		___ftpack
  3075 ;; This function is called by:
  3076 ;;		_Set_Freq
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function ___lltoft
  3082  170C                     ___lltoft:	
  3083                           
  3084                           ;incstack = 0
  3085                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  3086  170C  308E               	movlw	142
  3087  170D  0020               	movlb	0	; select bank0
  3088  170E  00A4               	movwf	??___lltoft
  3089  170F  0824               	movf	??___lltoft,w
  3090  1710  00A5               	movwf	___lltoft@exp
  3091  1711                     l3349:	
  3092  1711  30FF               	movlw	255
  3093  1712  0523               	andwf	___lltoft@c+3,w
  3094  1713  1903               	btfsc	3,2
  3095  1714  2F21               	goto	l3351
  3096  1715  3001               	movlw	1
  3097  1716                     u5025:	
  3098  1716  36A3               	lsrf	___lltoft@c+3,f
  3099  1717  0CA2               	rrf	___lltoft@c+2,f
  3100  1718  0CA1               	rrf	___lltoft@c+1,f
  3101  1719  0CA0               	rrf	___lltoft@c,f
  3102  171A  0B89               	decfsz	9,f
  3103  171B  2F16               	goto	u5025
  3104  171C  3001               	movlw	1
  3105  171D  00A4               	movwf	??___lltoft
  3106  171E  0824               	movf	??___lltoft,w
  3107  171F  07A5               	addwf	___lltoft@exp,f
  3108  1720  2F11               	goto	l3349
  3109  1721                     l3351:	
  3110  1721  0820               	movf	___lltoft@c,w
  3111  1722  00F2               	movwf	___ftpack@arg
  3112  1723  0821               	movf	___lltoft@c+1,w
  3113  1724  00F3               	movwf	___ftpack@arg+1
  3114  1725  0822               	movf	___lltoft@c+2,w
  3115  1726  00F4               	movwf	___ftpack@arg+2
  3116  1727  0825               	movf	___lltoft@exp,w
  3117  1728  00A4               	movwf	??___lltoft
  3118  1729  0824               	movf	??___lltoft,w
  3119  172A  00F5               	movwf	___ftpack@exp
  3120  172B  01F6               	clrf	___ftpack@sign
  3121  172C  3188  20B2         	fcall	___ftpack
  3122  172E  0872               	movf	?___ftpack,w
  3123  172F  0020               	movlb	0	; select bank0
  3124  1730  00A0               	movwf	?___lltoft
  3125  1731  0873               	movf	?___ftpack+1,w
  3126  1732  00A1               	movwf	?___lltoft+1
  3127  1733  0874               	movf	?___ftpack+2,w
  3128  1734  00A2               	movwf	?___lltoft+2
  3129  1735  0008               	return
  3130  1736                     __end_of___lltoft:	
  3131                           
  3132                           	psect	text8
  3133  0A05                     __ptext8:	
  3134 ;; *************** function ___fttol *****************
  3135 ;; Defined at:
  3136 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  f1              3   16[BANK0 ] float 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  lval            4   25[BANK0 ] unsigned long 
  3141 ;;  exp1            1   29[BANK0 ] unsigned char 
  3142 ;;  sign1           1   24[BANK0 ] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  4   16[BANK0 ] long 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3152 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3153 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3154 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3156 ;;Total ram usage:       14 bytes
  3157 ;; Hardware stack levels used:    1
  3158 ;; Hardware stack levels required when called:    1
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_Set_Freq
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function ___fttol
  3168  0A05                     ___fttol:	
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3172  0A05  0020               	movlb	0	; select bank0
  3173  0A06  0830               	movf	___fttol@f1,w
  3174  0A07  00B4               	movwf	??___fttol
  3175  0A08  0831               	movf	___fttol@f1+1,w
  3176  0A09  00B5               	movwf	??___fttol+1
  3177  0A0A  0832               	movf	___fttol@f1+2,w
  3178  0A0B  00B6               	movwf	??___fttol+2
  3179  0A0C  1003               	clrc
  3180  0A0D  0D35               	rlf	??___fttol+1,w
  3181  0A0E  0D36               	rlf	??___fttol+2,w
  3182  0A0F  00B7               	movwf	??___fttol+3
  3183  0A10  0837               	movf	??___fttol+3,w
  3184  0A11  00BD               	movwf	___fttol@exp1
  3185  0A12  08BD               	movf	___fttol@exp1,f
  3186  0A13  1D03               	skipz
  3187  0A14  2A1E               	goto	l2411
  3188  0A15  3000               	movlw	0
  3189  0A16  00B3               	movwf	?___fttol+3
  3190  0A17  3000               	movlw	0
  3191  0A18  00B2               	movwf	?___fttol+2
  3192  0A19  3000               	movlw	0
  3193  0A1A  00B1               	movwf	?___fttol+1
  3194  0A1B  3000               	movlw	0
  3195  0A1C  00B0               	movwf	?___fttol
  3196  0A1D  0008               	return
  3197  0A1E                     l2411:	
  3198  0A1E  0830               	movf	___fttol@f1,w
  3199  0A1F  00B4               	movwf	??___fttol
  3200  0A20  0831               	movf	___fttol@f1+1,w
  3201  0A21  00B5               	movwf	??___fttol+1
  3202  0A22  0832               	movf	___fttol@f1+2,w
  3203  0A23  00B6               	movwf	??___fttol+2
  3204  0A24  3017               	movlw	23
  3205  0A25                     u3005:	
  3206  0A25  36B6               	lsrf	??___fttol+2,f
  3207  0A26  0CB5               	rrf	??___fttol+1,f
  3208  0A27  0CB4               	rrf	??___fttol,f
  3209  0A28  0B89               	decfsz	9,f
  3210  0A29  2A25               	goto	u3005
  3211  0A2A  0834               	movf	??___fttol,w
  3212  0A2B  00B7               	movwf	??___fttol+3
  3213  0A2C  0837               	movf	??___fttol+3,w
  3214  0A2D  00B8               	movwf	___fttol@sign1
  3215  0A2E  17B1               	bsf	___fttol@f1+1,7
  3216  0A2F  30FF               	movlw	255
  3217  0A30  05B0               	andwf	___fttol@f1,f
  3218  0A31  30FF               	movlw	255
  3219  0A32  05B1               	andwf	___fttol@f1+1,f
  3220  0A33  3000               	movlw	0
  3221  0A34  05B2               	andwf	___fttol@f1+2,f
  3222  0A35  0830               	movf	___fttol@f1,w
  3223  0A36  00B9               	movwf	___fttol@lval
  3224  0A37  0831               	movf	___fttol@f1+1,w
  3225  0A38  00BA               	movwf	___fttol@lval+1
  3226  0A39  0832               	movf	___fttol@f1+2,w
  3227  0A3A  00BB               	movwf	___fttol@lval+2
  3228  0A3B  01BC               	clrf	___fttol@lval+3
  3229  0A3C  308E               	movlw	142
  3230  0A3D  02BD               	subwf	___fttol@exp1,f
  3231  0A3E  1FBD               	btfss	___fttol@exp1,7
  3232  0A3F  2A5C               	goto	l2431
  3233  0A40  083D               	movf	___fttol@exp1,w
  3234  0A41  3A80               	xorlw	128
  3235  0A42  3E8F               	addlw	143
  3236  0A43  1803               	skipnc
  3237  0A44  2A4E               	goto	l2429
  3238  0A45  3000               	movlw	0
  3239  0A46  00B3               	movwf	?___fttol+3
  3240  0A47  3000               	movlw	0
  3241  0A48  00B2               	movwf	?___fttol+2
  3242  0A49  3000               	movlw	0
  3243  0A4A  00B1               	movwf	?___fttol+1
  3244  0A4B  3000               	movlw	0
  3245  0A4C  00B0               	movwf	?___fttol
  3246  0A4D  0008               	return
  3247  0A4E                     l2429:	
  3248  0A4E  3001               	movlw	1
  3249  0A4F                     u3035:	
  3250  0A4F  36BC               	lsrf	___fttol@lval+3,f
  3251  0A50  0CBB               	rrf	___fttol@lval+2,f
  3252  0A51  0CBA               	rrf	___fttol@lval+1,f
  3253  0A52  0CB9               	rrf	___fttol@lval,f
  3254  0A53  0B89               	decfsz	9,f
  3255  0A54  2A4F               	goto	u3035
  3256  0A55  3001               	movlw	1
  3257  0A56  00B4               	movwf	??___fttol
  3258  0A57  0834               	movf	??___fttol,w
  3259  0A58  07BD               	addwf	___fttol@exp1,f
  3260  0A59  1903               	btfsc	3,2
  3261  0A5A  2A75               	goto	l2441
  3262  0A5B  2A4E               	goto	l2429
  3263  0A5C                     l2431:	
  3264  0A5C  3018               	movlw	24
  3265  0A5D  023D               	subwf	___fttol@exp1,w
  3266  0A5E  1C03               	skipc
  3267  0A5F  2A72               	goto	l2439
  3268  0A60  3000               	movlw	0
  3269  0A61  00B3               	movwf	?___fttol+3
  3270  0A62  3000               	movlw	0
  3271  0A63  00B2               	movwf	?___fttol+2
  3272  0A64  3000               	movlw	0
  3273  0A65  00B1               	movwf	?___fttol+1
  3274  0A66  3000               	movlw	0
  3275  0A67  00B0               	movwf	?___fttol
  3276  0A68  0008               	return
  3277  0A69                     l2437:	
  3278  0A69  3001               	movlw	1
  3279  0A6A                     u3065:	
  3280  0A6A  35B9               	lslf	___fttol@lval,f
  3281  0A6B  0DBA               	rlf	___fttol@lval+1,f
  3282  0A6C  0DBB               	rlf	___fttol@lval+2,f
  3283  0A6D  0DBC               	rlf	___fttol@lval+3,f
  3284  0A6E  0B89               	decfsz	9,f
  3285  0A6F  2A6A               	goto	u3065
  3286  0A70  3001               	movlw	1
  3287  0A71  02BD               	subwf	___fttol@exp1,f
  3288  0A72                     l2439:	
  3289  0A72  08BD               	movf	___fttol@exp1,f
  3290  0A73  1D03               	skipz
  3291  0A74  2A69               	goto	l2437
  3292  0A75                     l2441:	
  3293  0A75  0838               	movf	___fttol@sign1,w
  3294  0A76  1903               	btfsc	3,2
  3295  0A77  2A83               	goto	l2445
  3296  0A78  09B9               	comf	___fttol@lval,f
  3297  0A79  09BA               	comf	___fttol@lval+1,f
  3298  0A7A  09BB               	comf	___fttol@lval+2,f
  3299  0A7B  09BC               	comf	___fttol@lval+3,f
  3300  0A7C  0AB9               	incf	___fttol@lval,f
  3301  0A7D  1903               	skipnz
  3302  0A7E  0ABA               	incf	___fttol@lval+1,f
  3303  0A7F  1903               	skipnz
  3304  0A80  0ABB               	incf	___fttol@lval+2,f
  3305  0A81  1903               	skipnz
  3306  0A82  0ABC               	incf	___fttol@lval+3,f
  3307  0A83                     l2445:	
  3308  0A83  083C               	movf	___fttol@lval+3,w
  3309  0A84  00B3               	movwf	?___fttol+3
  3310  0A85  083B               	movf	___fttol@lval+2,w
  3311  0A86  00B2               	movwf	?___fttol+2
  3312  0A87  083A               	movf	___fttol@lval+1,w
  3313  0A88  00B1               	movwf	?___fttol+1
  3314  0A89  0839               	movf	___fttol@lval,w
  3315  0A8A  00B0               	movwf	?___fttol
  3316  0A8B  0008               	return
  3317  0A8C                     __end_of___fttol:	
  3318                           
  3319                           	psect	text9
  3320  1546                     __ptext9:	
  3321 ;; *************** function ___ftneg *****************
  3322 ;; Defined at:
  3323 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  f1              3    6[BANK0 ] float 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;		None
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  3    6[BANK0 ] float 
  3330 ;; Registers used:
  3331 ;;		wreg
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3337 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;Total ram usage:        3 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    1
  3344 ;; This function calls:
  3345 ;;		Nothing
  3346 ;; This function is called by:
  3347 ;;		_Set_Freq
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function ___ftneg
  3353  1546                     ___ftneg:	
  3354                           
  3355                           ;incstack = 0
  3356                           ; Regs used in ___ftneg: [wreg]
  3357  1546  0020               	movlb	0	; select bank0
  3358  1547  0828               	movf	___ftneg@f1+2,w
  3359  1548  0427               	iorwf	___ftneg@f1+1,w
  3360  1549  0426               	iorwf	___ftneg@f1,w
  3361  154A  1903               	skipnz
  3362  154B  0008               	return
  3363  154C  3080               	movlw	128
  3364  154D  06A8               	xorwf	___ftneg@f1+2,f
  3365  154E  0008               	return
  3366  154F                     __end_of___ftneg:	
  3367                           
  3368                           	psect	text10
  3369  0C2B                     __ptext10:	
  3370 ;; *************** function ___ftmul *****************
  3371 ;; Defined at:
  3372 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  f1              3    0[BANK0 ] float 
  3375 ;;  f2              3    3[BANK0 ] float 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  3378 ;;  sign            1   15[BANK0 ] unsigned char 
  3379 ;;  cntr            1   14[BANK0 ] unsigned char 
  3380 ;;  exp             1   10[BANK0 ] unsigned char 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  3    0[BANK0 ] float 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, pclath, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3390 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3391 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3392 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3393 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3394 ;;Total ram usage:       16 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    2
  3397 ;; This function calls:
  3398 ;;		___ftpack
  3399 ;; This function is called by:
  3400 ;;		_Set_Freq
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function ___ftmul
  3406  0C2B                     ___ftmul:	
  3407                           
  3408                           ;incstack = 0
  3409                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3410  0C2B  0020               	movlb	0	; select bank0
  3411  0C2C  0820               	movf	___ftmul@f1,w
  3412  0C2D  00A6               	movwf	??___ftmul
  3413  0C2E  0821               	movf	___ftmul@f1+1,w
  3414  0C2F  00A7               	movwf	??___ftmul+1
  3415  0C30  0822               	movf	___ftmul@f1+2,w
  3416  0C31  00A8               	movwf	??___ftmul+2
  3417  0C32  1003               	clrc
  3418  0C33  0D27               	rlf	??___ftmul+1,w
  3419  0C34  0D28               	rlf	??___ftmul+2,w
  3420  0C35  00A9               	movwf	??___ftmul+3
  3421  0C36  0829               	movf	??___ftmul+3,w
  3422  0C37  00AA               	movwf	___ftmul@exp
  3423  0C38  08AA               	movf	___ftmul@exp,f
  3424  0C39  1D03               	skipz
  3425  0C3A  2C42               	goto	l3277
  3426  0C3B  3000               	movlw	0
  3427  0C3C  00A0               	movwf	?___ftmul
  3428  0C3D  3000               	movlw	0
  3429  0C3E  00A1               	movwf	?___ftmul+1
  3430  0C3F  3000               	movlw	0
  3431  0C40  00A2               	movwf	?___ftmul+2
  3432  0C41  0008               	return
  3433  0C42                     l3277:	
  3434  0C42  0823               	movf	___ftmul@f2,w
  3435  0C43  00A6               	movwf	??___ftmul
  3436  0C44  0824               	movf	___ftmul@f2+1,w
  3437  0C45  00A7               	movwf	??___ftmul+1
  3438  0C46  0825               	movf	___ftmul@f2+2,w
  3439  0C47  00A8               	movwf	??___ftmul+2
  3440  0C48  1003               	clrc
  3441  0C49  0D27               	rlf	??___ftmul+1,w
  3442  0C4A  0D28               	rlf	??___ftmul+2,w
  3443  0C4B  00A9               	movwf	??___ftmul+3
  3444  0C4C  0829               	movf	??___ftmul+3,w
  3445  0C4D  00AF               	movwf	___ftmul@sign
  3446  0C4E  08AF               	movf	___ftmul@sign,f
  3447  0C4F  1D03               	skipz
  3448  0C50  2C58               	goto	l3283
  3449  0C51  3000               	movlw	0
  3450  0C52  00A0               	movwf	?___ftmul
  3451  0C53  3000               	movlw	0
  3452  0C54  00A1               	movwf	?___ftmul+1
  3453  0C55  3000               	movlw	0
  3454  0C56  00A2               	movwf	?___ftmul+2
  3455  0C57  0008               	return
  3456  0C58                     l3283:	
  3457  0C58  082F               	movf	___ftmul@sign,w
  3458  0C59  3E7B               	addlw	123
  3459  0C5A  00A6               	movwf	??___ftmul
  3460  0C5B  0826               	movf	??___ftmul,w
  3461  0C5C  07AA               	addwf	___ftmul@exp,f
  3462  0C5D  0820               	movf	___ftmul@f1,w
  3463  0C5E  00A6               	movwf	??___ftmul
  3464  0C5F  0821               	movf	___ftmul@f1+1,w
  3465  0C60  00A7               	movwf	??___ftmul+1
  3466  0C61  0822               	movf	___ftmul@f1+2,w
  3467  0C62  00A8               	movwf	??___ftmul+2
  3468  0C63  3010               	movlw	16
  3469  0C64                     u4855:	
  3470  0C64  36A8               	lsrf	??___ftmul+2,f
  3471  0C65  0CA7               	rrf	??___ftmul+1,f
  3472  0C66  0CA6               	rrf	??___ftmul,f
  3473  0C67  0B89               	decfsz	9,f
  3474  0C68  2C64               	goto	u4855
  3475  0C69  0826               	movf	??___ftmul,w
  3476  0C6A  00A9               	movwf	??___ftmul+3
  3477  0C6B  0829               	movf	??___ftmul+3,w
  3478  0C6C  00AF               	movwf	___ftmul@sign
  3479  0C6D  0823               	movf	___ftmul@f2,w
  3480  0C6E  00A6               	movwf	??___ftmul
  3481  0C6F  0824               	movf	___ftmul@f2+1,w
  3482  0C70  00A7               	movwf	??___ftmul+1
  3483  0C71  0825               	movf	___ftmul@f2+2,w
  3484  0C72  00A8               	movwf	??___ftmul+2
  3485  0C73  3010               	movlw	16
  3486  0C74                     u4865:	
  3487  0C74  36A8               	lsrf	??___ftmul+2,f
  3488  0C75  0CA7               	rrf	??___ftmul+1,f
  3489  0C76  0CA6               	rrf	??___ftmul,f
  3490  0C77  0B89               	decfsz	9,f
  3491  0C78  2C74               	goto	u4865
  3492  0C79  0826               	movf	??___ftmul,w
  3493  0C7A  00A9               	movwf	??___ftmul+3
  3494  0C7B  0829               	movf	??___ftmul+3,w
  3495  0C7C  06AF               	xorwf	___ftmul@sign,f
  3496  0C7D  3080               	movlw	128
  3497  0C7E  00A6               	movwf	??___ftmul
  3498  0C7F  0826               	movf	??___ftmul,w
  3499  0C80  05AF               	andwf	___ftmul@sign,f
  3500  0C81  17A1               	bsf	___ftmul@f1+1,7
  3501  0C82  17A4               	bsf	___ftmul@f2+1,7
  3502  0C83  30FF               	movlw	255
  3503  0C84  05A3               	andwf	___ftmul@f2,f
  3504  0C85  30FF               	movlw	255
  3505  0C86  05A4               	andwf	___ftmul@f2+1,f
  3506  0C87  3000               	movlw	0
  3507  0C88  05A5               	andwf	___ftmul@f2+2,f
  3508  0C89  3000               	movlw	0
  3509  0C8A  00AB               	movwf	___ftmul@f3_as_product
  3510  0C8B  3000               	movlw	0
  3511  0C8C  00AC               	movwf	___ftmul@f3_as_product+1
  3512  0C8D  3000               	movlw	0
  3513  0C8E  00AD               	movwf	___ftmul@f3_as_product+2
  3514  0C8F  3007               	movlw	7
  3515  0C90  00A6               	movwf	??___ftmul
  3516  0C91  0826               	movf	??___ftmul,w
  3517  0C92  00AE               	movwf	___ftmul@cntr
  3518  0C93                     l3295:	
  3519  0C93  1C20               	btfss	___ftmul@f1,0
  3520  0C94  2C9B               	goto	l3299
  3521  0C95  0823               	movf	___ftmul@f2,w
  3522  0C96  07AB               	addwf	___ftmul@f3_as_product,f
  3523  0C97  0824               	movf	___ftmul@f2+1,w
  3524  0C98  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3525  0C99  0825               	movf	___ftmul@f2+2,w
  3526  0C9A  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3527  0C9B                     l3299:	
  3528  0C9B  3001               	movlw	1
  3529  0C9C                     u4885:	
  3530  0C9C  36A2               	lsrf	___ftmul@f1+2,f
  3531  0C9D  0CA1               	rrf	___ftmul@f1+1,f
  3532  0C9E  0CA0               	rrf	___ftmul@f1,f
  3533  0C9F  0B89               	decfsz	9,f
  3534  0CA0  2C9C               	goto	u4885
  3535  0CA1  3001               	movlw	1
  3536  0CA2                     u4895:	
  3537  0CA2  35A3               	lslf	___ftmul@f2,f
  3538  0CA3  0DA4               	rlf	___ftmul@f2+1,f
  3539  0CA4  0DA5               	rlf	___ftmul@f2+2,f
  3540  0CA5  0B89               	decfsz	9,f
  3541  0CA6  2CA2               	goto	u4895
  3542  0CA7  3001               	movlw	1
  3543  0CA8  02AE               	subwf	___ftmul@cntr,f
  3544  0CA9  1D03               	btfss	3,2
  3545  0CAA  2C93               	goto	l3295
  3546  0CAB  3009               	movlw	9
  3547  0CAC  00A6               	movwf	??___ftmul
  3548  0CAD  0826               	movf	??___ftmul,w
  3549  0CAE  00AE               	movwf	___ftmul@cntr
  3550  0CAF                     l3307:	
  3551  0CAF  1C20               	btfss	___ftmul@f1,0
  3552  0CB0  2CB7               	goto	l3311
  3553  0CB1  0823               	movf	___ftmul@f2,w
  3554  0CB2  07AB               	addwf	___ftmul@f3_as_product,f
  3555  0CB3  0824               	movf	___ftmul@f2+1,w
  3556  0CB4  3DAC               	addwfc	___ftmul@f3_as_product+1,f
  3557  0CB5  0825               	movf	___ftmul@f2+2,w
  3558  0CB6  3DAD               	addwfc	___ftmul@f3_as_product+2,f
  3559  0CB7                     l3311:	
  3560  0CB7  3001               	movlw	1
  3561  0CB8                     u4925:	
  3562  0CB8  36A2               	lsrf	___ftmul@f1+2,f
  3563  0CB9  0CA1               	rrf	___ftmul@f1+1,f
  3564  0CBA  0CA0               	rrf	___ftmul@f1,f
  3565  0CBB  0B89               	decfsz	9,f
  3566  0CBC  2CB8               	goto	u4925
  3567  0CBD  3001               	movlw	1
  3568  0CBE                     u4935:	
  3569  0CBE  36AD               	lsrf	___ftmul@f3_as_product+2,f
  3570  0CBF  0CAC               	rrf	___ftmul@f3_as_product+1,f
  3571  0CC0  0CAB               	rrf	___ftmul@f3_as_product,f
  3572  0CC1  0B89               	decfsz	9,f
  3573  0CC2  2CBE               	goto	u4935
  3574  0CC3  3001               	movlw	1
  3575  0CC4  02AE               	subwf	___ftmul@cntr,f
  3576  0CC5  1D03               	btfss	3,2
  3577  0CC6  2CAF               	goto	l3307
  3578  0CC7  082B               	movf	___ftmul@f3_as_product,w
  3579  0CC8  00F2               	movwf	___ftpack@arg
  3580  0CC9  082C               	movf	___ftmul@f3_as_product+1,w
  3581  0CCA  00F3               	movwf	___ftpack@arg+1
  3582  0CCB  082D               	movf	___ftmul@f3_as_product+2,w
  3583  0CCC  00F4               	movwf	___ftpack@arg+2
  3584  0CCD  082A               	movf	___ftmul@exp,w
  3585  0CCE  00A6               	movwf	??___ftmul
  3586  0CCF  0826               	movf	??___ftmul,w
  3587  0CD0  00F5               	movwf	___ftpack@exp
  3588  0CD1  082F               	movf	___ftmul@sign,w
  3589  0CD2  00A7               	movwf	??___ftmul+1
  3590  0CD3  0827               	movf	??___ftmul+1,w
  3591  0CD4  00F6               	movwf	___ftpack@sign
  3592  0CD5  3188  20B2         	fcall	___ftpack
  3593  0CD7  0872               	movf	?___ftpack,w
  3594  0CD8  0020               	movlb	0	; select bank0
  3595  0CD9  00A0               	movwf	?___ftmul
  3596  0CDA  0873               	movf	?___ftpack+1,w
  3597  0CDB  00A1               	movwf	?___ftmul+1
  3598  0CDC  0874               	movf	?___ftpack+2,w
  3599  0CDD  00A2               	movwf	?___ftmul+2
  3600  0CDE  0008               	return
  3601  0CDF                     __end_of___ftmul:	
  3602                           
  3603                           	psect	text11
  3604  0754                     __ptext11:	
  3605 ;; *************** function ___ftdiv *****************
  3606 ;; Defined at:
  3607 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  f2              3    6[BANK0 ] float 
  3610 ;;  f1              3    9[BANK0 ] float 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  f3              3   17[BANK0 ] float 
  3613 ;;  sign            1   21[BANK0 ] unsigned char 
  3614 ;;  exp             1   20[BANK0 ] unsigned char 
  3615 ;;  cntr            1   16[BANK0 ] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  3    6[BANK0 ] float 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, pclath, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3625 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3626 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3627 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3628 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3629 ;;Total ram usage:       16 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    2
  3632 ;; This function calls:
  3633 ;;		___ftpack
  3634 ;; This function is called by:
  3635 ;;		_Set_Freq
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function ___ftdiv
  3641  0754                     ___ftdiv:	
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  3645  0754  0020               	movlb	0	; select bank0
  3646  0755  0829               	movf	___ftdiv@f1,w
  3647  0756  00AC               	movwf	??___ftdiv
  3648  0757  082A               	movf	___ftdiv@f1+1,w
  3649  0758  00AD               	movwf	??___ftdiv+1
  3650  0759  082B               	movf	___ftdiv@f1+2,w
  3651  075A  00AE               	movwf	??___ftdiv+2
  3652  075B  1003               	clrc
  3653  075C  0D2D               	rlf	??___ftdiv+1,w
  3654  075D  0D2E               	rlf	??___ftdiv+2,w
  3655  075E  00AF               	movwf	??___ftdiv+3
  3656  075F  082F               	movf	??___ftdiv+3,w
  3657  0760  00B4               	movwf	___ftdiv@exp
  3658  0761  08B4               	movf	___ftdiv@exp,f
  3659  0762  1D03               	skipz
  3660  0763  2F6B               	goto	l3235
  3661  0764  3000               	movlw	0
  3662  0765  00A6               	movwf	?___ftdiv
  3663  0766  3000               	movlw	0
  3664  0767  00A7               	movwf	?___ftdiv+1
  3665  0768  3000               	movlw	0
  3666  0769  00A8               	movwf	?___ftdiv+2
  3667  076A  0008               	return
  3668  076B                     l3235:	
  3669  076B  0826               	movf	___ftdiv@f2,w
  3670  076C  00AC               	movwf	??___ftdiv
  3671  076D  0827               	movf	___ftdiv@f2+1,w
  3672  076E  00AD               	movwf	??___ftdiv+1
  3673  076F  0828               	movf	___ftdiv@f2+2,w
  3674  0770  00AE               	movwf	??___ftdiv+2
  3675  0771  1003               	clrc
  3676  0772  0D2D               	rlf	??___ftdiv+1,w
  3677  0773  0D2E               	rlf	??___ftdiv+2,w
  3678  0774  00AF               	movwf	??___ftdiv+3
  3679  0775  082F               	movf	??___ftdiv+3,w
  3680  0776  00B5               	movwf	___ftdiv@sign
  3681  0777  08B5               	movf	___ftdiv@sign,f
  3682  0778  1D03               	skipz
  3683  0779  2F81               	goto	l3241
  3684  077A  3000               	movlw	0
  3685  077B  00A6               	movwf	?___ftdiv
  3686  077C  3000               	movlw	0
  3687  077D  00A7               	movwf	?___ftdiv+1
  3688  077E  3000               	movlw	0
  3689  077F  00A8               	movwf	?___ftdiv+2
  3690  0780  0008               	return
  3691  0781                     l3241:	
  3692  0781  3000               	movlw	0
  3693  0782  00B1               	movwf	___ftdiv@f3
  3694  0783  3000               	movlw	0
  3695  0784  00B2               	movwf	___ftdiv@f3+1
  3696  0785  3000               	movlw	0
  3697  0786  00B3               	movwf	___ftdiv@f3+2
  3698  0787  3089               	movlw	137
  3699  0788  0735               	addwf	___ftdiv@sign,w
  3700  0789  00AC               	movwf	??___ftdiv
  3701  078A  082C               	movf	??___ftdiv,w
  3702  078B  02B4               	subwf	___ftdiv@exp,f
  3703  078C  0829               	movf	___ftdiv@f1,w
  3704  078D  00AC               	movwf	??___ftdiv
  3705  078E  082A               	movf	___ftdiv@f1+1,w
  3706  078F  00AD               	movwf	??___ftdiv+1
  3707  0790  082B               	movf	___ftdiv@f1+2,w
  3708  0791  00AE               	movwf	??___ftdiv+2
  3709  0792  3010               	movlw	16
  3710  0793                     u4775:	
  3711  0793  36AE               	lsrf	??___ftdiv+2,f
  3712  0794  0CAD               	rrf	??___ftdiv+1,f
  3713  0795  0CAC               	rrf	??___ftdiv,f
  3714  0796  0B89               	decfsz	9,f
  3715  0797  2F93               	goto	u4775
  3716  0798  082C               	movf	??___ftdiv,w
  3717  0799  00AF               	movwf	??___ftdiv+3
  3718  079A  082F               	movf	??___ftdiv+3,w
  3719  079B  00B5               	movwf	___ftdiv@sign
  3720  079C  0826               	movf	___ftdiv@f2,w
  3721  079D  00AC               	movwf	??___ftdiv
  3722  079E  0827               	movf	___ftdiv@f2+1,w
  3723  079F  00AD               	movwf	??___ftdiv+1
  3724  07A0  0828               	movf	___ftdiv@f2+2,w
  3725  07A1  00AE               	movwf	??___ftdiv+2
  3726  07A2  3010               	movlw	16
  3727  07A3                     u4785:	
  3728  07A3  36AE               	lsrf	??___ftdiv+2,f
  3729  07A4  0CAD               	rrf	??___ftdiv+1,f
  3730  07A5  0CAC               	rrf	??___ftdiv,f
  3731  07A6  0B89               	decfsz	9,f
  3732  07A7  2FA3               	goto	u4785
  3733  07A8  082C               	movf	??___ftdiv,w
  3734  07A9  00AF               	movwf	??___ftdiv+3
  3735  07AA  082F               	movf	??___ftdiv+3,w
  3736  07AB  06B5               	xorwf	___ftdiv@sign,f
  3737  07AC  3080               	movlw	128
  3738  07AD  00AC               	movwf	??___ftdiv
  3739  07AE  082C               	movf	??___ftdiv,w
  3740  07AF  05B5               	andwf	___ftdiv@sign,f
  3741  07B0  17AA               	bsf	___ftdiv@f1+1,7
  3742  07B1  30FF               	movlw	255
  3743  07B2  05A9               	andwf	___ftdiv@f1,f
  3744  07B3  30FF               	movlw	255
  3745  07B4  05AA               	andwf	___ftdiv@f1+1,f
  3746  07B5  3000               	movlw	0
  3747  07B6  05AB               	andwf	___ftdiv@f1+2,f
  3748  07B7  17A7               	bsf	___ftdiv@f2+1,7
  3749  07B8  30FF               	movlw	255
  3750  07B9  05A6               	andwf	___ftdiv@f2,f
  3751  07BA  30FF               	movlw	255
  3752  07BB  05A7               	andwf	___ftdiv@f2+1,f
  3753  07BC  3000               	movlw	0
  3754  07BD  05A8               	andwf	___ftdiv@f2+2,f
  3755  07BE  3018               	movlw	24
  3756  07BF  00AC               	movwf	??___ftdiv
  3757  07C0  082C               	movf	??___ftdiv,w
  3758  07C1  00B0               	movwf	___ftdiv@cntr
  3759  07C2                     l3255:	
  3760  07C2  3001               	movlw	1
  3761  07C3                     u4795:	
  3762  07C3  35B1               	lslf	___ftdiv@f3,f
  3763  07C4  0DB2               	rlf	___ftdiv@f3+1,f
  3764  07C5  0DB3               	rlf	___ftdiv@f3+2,f
  3765  07C6  0B89               	decfsz	9,f
  3766  07C7  2FC3               	goto	u4795
  3767  07C8  0828               	movf	___ftdiv@f2+2,w
  3768  07C9  022B               	subwf	___ftdiv@f1+2,w
  3769  07CA  1D03               	skipz
  3770  07CB  2FD2               	goto	u4805
  3771  07CC  0827               	movf	___ftdiv@f2+1,w
  3772  07CD  022A               	subwf	___ftdiv@f1+1,w
  3773  07CE  1D03               	skipz
  3774  07CF  2FD2               	goto	u4805
  3775  07D0  0826               	movf	___ftdiv@f2,w
  3776  07D1  0229               	subwf	___ftdiv@f1,w
  3777  07D2                     u4805:	
  3778  07D2  1C03               	skipc
  3779  07D3  2FDB               	goto	l3263
  3780  07D4  0826               	movf	___ftdiv@f2,w
  3781  07D5  02A9               	subwf	___ftdiv@f1,f
  3782  07D6  0827               	movf	___ftdiv@f2+1,w
  3783  07D7  3BAA               	subwfb	___ftdiv@f1+1,f
  3784  07D8  0828               	movf	___ftdiv@f2+2,w
  3785  07D9  3BAB               	subwfb	___ftdiv@f1+2,f
  3786  07DA  1431               	bsf	___ftdiv@f3,0
  3787  07DB                     l3263:	
  3788  07DB  3001               	movlw	1
  3789  07DC                     u4815:	
  3790  07DC  35A9               	lslf	___ftdiv@f1,f
  3791  07DD  0DAA               	rlf	___ftdiv@f1+1,f
  3792  07DE  0DAB               	rlf	___ftdiv@f1+2,f
  3793  07DF  0B89               	decfsz	9,f
  3794  07E0  2FDC               	goto	u4815
  3795  07E1  3001               	movlw	1
  3796  07E2  02B0               	subwf	___ftdiv@cntr,f
  3797  07E3  1D03               	btfss	3,2
  3798  07E4  2FC2               	goto	l3255
  3799  07E5  0831               	movf	___ftdiv@f3,w
  3800  07E6  00F2               	movwf	___ftpack@arg
  3801  07E7  0832               	movf	___ftdiv@f3+1,w
  3802  07E8  00F3               	movwf	___ftpack@arg+1
  3803  07E9  0833               	movf	___ftdiv@f3+2,w
  3804  07EA  00F4               	movwf	___ftpack@arg+2
  3805  07EB  0834               	movf	___ftdiv@exp,w
  3806  07EC  00AC               	movwf	??___ftdiv
  3807  07ED  082C               	movf	??___ftdiv,w
  3808  07EE  00F5               	movwf	___ftpack@exp
  3809  07EF  0835               	movf	___ftdiv@sign,w
  3810  07F0  00AD               	movwf	??___ftdiv+1
  3811  07F1  082D               	movf	??___ftdiv+1,w
  3812  07F2  00F6               	movwf	___ftpack@sign
  3813  07F3  3188  20B2         	fcall	___ftpack
  3814  07F5  0872               	movf	?___ftpack,w
  3815  07F6  0020               	movlb	0	; select bank0
  3816  07F7  00A6               	movwf	?___ftdiv
  3817  07F8  0873               	movf	?___ftpack+1,w
  3818  07F9  00A7               	movwf	?___ftdiv+1
  3819  07FA  0874               	movf	?___ftpack+2,w
  3820  07FB  00A8               	movwf	?___ftdiv+2
  3821  07FC  0008               	return
  3822  07FD                     __end_of___ftdiv:	
  3823                           
  3824                           	psect	text12
  3825  0584                     __ptext12:	
  3826 ;; *************** function ___ftadd *****************
  3827 ;; Defined at:
  3828 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  f1              3    9[BANK0 ] float 
  3831 ;;  f2              3   12[BANK0 ] float 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  exp1            1   21[BANK0 ] unsigned char 
  3834 ;;  exp2            1   20[BANK0 ] unsigned char 
  3835 ;;  sign            1   19[BANK0 ] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  3    9[BANK0 ] float 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2, status,0, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3845 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3846 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3847 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;Total ram usage:       13 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    2
  3852 ;; This function calls:
  3853 ;;		___ftpack
  3854 ;; This function is called by:
  3855 ;;		_Set_Freq
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           
  3860                           ;psect for function ___ftadd
  3861  0584                     ___ftadd:	
  3862                           
  3863                           ;incstack = 0
  3864                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3865  0584  0020               	movlb	0	; select bank0
  3866  0585  0829               	movf	___ftadd@f1,w
  3867  0586  00AF               	movwf	??___ftadd
  3868  0587  082A               	movf	___ftadd@f1+1,w
  3869  0588  00B0               	movwf	??___ftadd+1
  3870  0589  082B               	movf	___ftadd@f1+2,w
  3871  058A  00B1               	movwf	??___ftadd+2
  3872  058B  1003               	clrc
  3873  058C  0D30               	rlf	??___ftadd+1,w
  3874  058D  0D31               	rlf	??___ftadd+2,w
  3875  058E  00B2               	movwf	??___ftadd+3
  3876  058F  0832               	movf	??___ftadd+3,w
  3877  0590  00B5               	movwf	___ftadd@exp1
  3878  0591  082C               	movf	___ftadd@f2,w
  3879  0592  00AF               	movwf	??___ftadd
  3880  0593  082D               	movf	___ftadd@f2+1,w
  3881  0594  00B0               	movwf	??___ftadd+1
  3882  0595  082E               	movf	___ftadd@f2+2,w
  3883  0596  00B1               	movwf	??___ftadd+2
  3884  0597  1003               	clrc
  3885  0598  0D30               	rlf	??___ftadd+1,w
  3886  0599  0D31               	rlf	??___ftadd+2,w
  3887  059A  00B2               	movwf	??___ftadd+3
  3888  059B  0832               	movf	??___ftadd+3,w
  3889  059C  00B4               	movwf	___ftadd@exp2
  3890  059D  0835               	movf	___ftadd@exp1,w
  3891  059E  1903               	btfsc	3,2
  3892  059F  2DAC               	goto	l3165
  3893  05A0  0834               	movf	___ftadd@exp2,w
  3894  05A1  0235               	subwf	___ftadd@exp1,w
  3895  05A2  1803               	skipnc
  3896  05A3  2DB3               	goto	l3169
  3897  05A4  0335               	decf	___ftadd@exp1,w
  3898  05A5  3AFF               	xorlw	255
  3899  05A6  0734               	addwf	___ftadd@exp2,w
  3900  05A7  00AF               	movwf	??___ftadd
  3901  05A8  3019               	movlw	25
  3902  05A9  022F               	subwf	??___ftadd,w
  3903  05AA  1C03               	skipc
  3904  05AB  2DB3               	goto	l3169
  3905  05AC                     l3165:	
  3906  05AC  082C               	movf	___ftadd@f2,w
  3907  05AD  00A9               	movwf	?___ftadd
  3908  05AE  082D               	movf	___ftadd@f2+1,w
  3909  05AF  00AA               	movwf	?___ftadd+1
  3910  05B0  082E               	movf	___ftadd@f2+2,w
  3911  05B1  00AB               	movwf	?___ftadd+2
  3912  05B2  0008               	return
  3913  05B3                     l3169:	
  3914  05B3  0834               	movf	___ftadd@exp2,w
  3915  05B4  1903               	btfsc	3,2
  3916  05B5  0008               	return
  3917  05B6  0835               	movf	___ftadd@exp1,w
  3918  05B7  0234               	subwf	___ftadd@exp2,w
  3919  05B8  1803               	skipnc
  3920  05B9  2DC2               	goto	l3175
  3921  05BA  0334               	decf	___ftadd@exp2,w
  3922  05BB  3AFF               	xorlw	255
  3923  05BC  0735               	addwf	___ftadd@exp1,w
  3924  05BD  00AF               	movwf	??___ftadd
  3925  05BE  3019               	movlw	25
  3926  05BF  022F               	subwf	??___ftadd,w
  3927  05C0  1803               	btfsc	3,0
  3928  05C1  0008               	return
  3929  05C2                     l3175:	
  3930  05C2  3006               	movlw	6
  3931  05C3  00AF               	movwf	??___ftadd
  3932  05C4  082F               	movf	??___ftadd,w
  3933  05C5  00B3               	movwf	___ftadd@sign
  3934  05C6  1BAB               	btfsc	___ftadd@f1+2,7
  3935  05C7  17B3               	bsf	___ftadd@sign,7
  3936  05C8  1BAE               	btfsc	___ftadd@f2+2,7
  3937  05C9  1733               	bsf	___ftadd@sign,6
  3938  05CA  17AA               	bsf	___ftadd@f1+1,7
  3939  05CB  30FF               	movlw	255
  3940  05CC  05A9               	andwf	___ftadd@f1,f
  3941  05CD  30FF               	movlw	255
  3942  05CE  05AA               	andwf	___ftadd@f1+1,f
  3943  05CF  3000               	movlw	0
  3944  05D0  05AB               	andwf	___ftadd@f1+2,f
  3945  05D1  17AD               	bsf	___ftadd@f2+1,7
  3946  05D2  30FF               	movlw	255
  3947  05D3  05AC               	andwf	___ftadd@f2,f
  3948  05D4  30FF               	movlw	255
  3949  05D5  05AD               	andwf	___ftadd@f2+1,f
  3950  05D6  3000               	movlw	0
  3951  05D7  05AE               	andwf	___ftadd@f2+2,f
  3952  05D8  0834               	movf	___ftadd@exp2,w
  3953  05D9  0235               	subwf	___ftadd@exp1,w
  3954  05DA  1803               	skipnc
  3955  05DB  2DFE               	goto	l3197
  3956  05DC                     l3187:	
  3957  05DC  3001               	movlw	1
  3958  05DD                     u4615:	
  3959  05DD  35AC               	lslf	___ftadd@f2,f
  3960  05DE  0DAD               	rlf	___ftadd@f2+1,f
  3961  05DF  0DAE               	rlf	___ftadd@f2+2,f
  3962  05E0  0B89               	decfsz	9,f
  3963  05E1  2DDD               	goto	u4615
  3964  05E2  3001               	movlw	1
  3965  05E3  02B4               	subwf	___ftadd@exp2,f
  3966  05E4  0834               	movf	___ftadd@exp2,w
  3967  05E5  0635               	xorwf	___ftadd@exp1,w
  3968  05E6  1903               	skipnz
  3969  05E7  2DF9               	goto	l3195
  3970  05E8  3001               	movlw	1
  3971  05E9  02B3               	subwf	___ftadd@sign,f
  3972  05EA  0833               	movf	___ftadd@sign,w
  3973  05EB  3907               	andlw	7
  3974  05EC  1903               	btfsc	3,2
  3975  05ED  2DF9               	goto	l3195
  3976  05EE  2DDC               	goto	l3187
  3977  05EF                     l3193:	
  3978  05EF  3001               	movlw	1
  3979  05F0                     u4645:	
  3980  05F0  36AB               	lsrf	___ftadd@f1+2,f
  3981  05F1  0CAA               	rrf	___ftadd@f1+1,f
  3982  05F2  0CA9               	rrf	___ftadd@f1,f
  3983  05F3  0B89               	decfsz	9,f
  3984  05F4  2DF0               	goto	u4645
  3985  05F5  3001               	movlw	1
  3986  05F6  00AF               	movwf	??___ftadd
  3987  05F7  082F               	movf	??___ftadd,w
  3988  05F8  07B5               	addwf	___ftadd@exp1,f
  3989  05F9                     l3195:	
  3990  05F9  0835               	movf	___ftadd@exp1,w
  3991  05FA  0634               	xorwf	___ftadd@exp2,w
  3992  05FB  1903               	btfsc	3,2
  3993  05FC  2E23               	goto	l766
  3994  05FD  2DEF               	goto	l3193
  3995  05FE                     l3197:	
  3996  05FE  0835               	movf	___ftadd@exp1,w
  3997  05FF  0234               	subwf	___ftadd@exp2,w
  3998  0600  1803               	skipnc
  3999  0601  2E23               	goto	l766
  4000  0602                     l3199:	
  4001  0602  3001               	movlw	1
  4002  0603                     u4675:	
  4003  0603  35A9               	lslf	___ftadd@f1,f
  4004  0604  0DAA               	rlf	___ftadd@f1+1,f
  4005  0605  0DAB               	rlf	___ftadd@f1+2,f
  4006  0606  0B89               	decfsz	9,f
  4007  0607  2E03               	goto	u4675
  4008  0608  3001               	movlw	1
  4009  0609  02B5               	subwf	___ftadd@exp1,f
  4010  060A  0834               	movf	___ftadd@exp2,w
  4011  060B  0635               	xorwf	___ftadd@exp1,w
  4012  060C  1903               	skipnz
  4013  060D  2E1F               	goto	l3207
  4014  060E  3001               	movlw	1
  4015  060F  02B3               	subwf	___ftadd@sign,f
  4016  0610  0833               	movf	___ftadd@sign,w
  4017  0611  3907               	andlw	7
  4018  0612  1903               	btfsc	3,2
  4019  0613  2E1F               	goto	l3207
  4020  0614  2E02               	goto	l3199
  4021  0615                     l3205:	
  4022  0615  3001               	movlw	1
  4023  0616                     u4705:	
  4024  0616  36AE               	lsrf	___ftadd@f2+2,f
  4025  0617  0CAD               	rrf	___ftadd@f2+1,f
  4026  0618  0CAC               	rrf	___ftadd@f2,f
  4027  0619  0B89               	decfsz	9,f
  4028  061A  2E16               	goto	u4705
  4029  061B  3001               	movlw	1
  4030  061C  00AF               	movwf	??___ftadd
  4031  061D  082F               	movf	??___ftadd,w
  4032  061E  07B4               	addwf	___ftadd@exp2,f
  4033  061F                     l3207:	
  4034  061F  0835               	movf	___ftadd@exp1,w
  4035  0620  0634               	xorwf	___ftadd@exp2,w
  4036  0621  1D03               	skipz
  4037  0622  2E15               	goto	l3205
  4038  0623                     l766:	
  4039  0623  1FB3               	btfss	___ftadd@sign,7
  4040  0624  2E35               	goto	l3211
  4041  0625  30FF               	movlw	255
  4042  0626  06A9               	xorwf	___ftadd@f1,f
  4043  0627  30FF               	movlw	255
  4044  0628  06AA               	xorwf	___ftadd@f1+1,f
  4045  0629  30FF               	movlw	255
  4046  062A  06AB               	xorwf	___ftadd@f1+2,f
  4047  062B  3001               	movlw	1
  4048  062C  07A9               	addwf	___ftadd@f1,f
  4049  062D  3000               	movlw	0
  4050  062E  1803               	skipnc
  4051  062F  3001               	movlw	1
  4052  0630  07AA               	addwf	___ftadd@f1+1,f
  4053  0631  3000               	movlw	0
  4054  0632  1803               	skipnc
  4055  0633  3001               	movlw	1
  4056  0634  07AB               	addwf	___ftadd@f1+2,f
  4057  0635                     l3211:	
  4058  0635  1F33               	btfss	___ftadd@sign,6
  4059  0636  2E47               	goto	l3215
  4060  0637  30FF               	movlw	255
  4061  0638  06AC               	xorwf	___ftadd@f2,f
  4062  0639  30FF               	movlw	255
  4063  063A  06AD               	xorwf	___ftadd@f2+1,f
  4064  063B  30FF               	movlw	255
  4065  063C  06AE               	xorwf	___ftadd@f2+2,f
  4066  063D  3001               	movlw	1
  4067  063E  07AC               	addwf	___ftadd@f2,f
  4068  063F  3000               	movlw	0
  4069  0640  1803               	skipnc
  4070  0641  3001               	movlw	1
  4071  0642  07AD               	addwf	___ftadd@f2+1,f
  4072  0643  3000               	movlw	0
  4073  0644  1803               	skipnc
  4074  0645  3001               	movlw	1
  4075  0646  07AE               	addwf	___ftadd@f2+2,f
  4076  0647                     l3215:	
  4077  0647  01B3               	clrf	___ftadd@sign
  4078  0648  0829               	movf	___ftadd@f1,w
  4079  0649  07AC               	addwf	___ftadd@f2,f
  4080  064A  082A               	movf	___ftadd@f1+1,w
  4081  064B  3DAD               	addwfc	___ftadd@f2+1,f
  4082  064C  082B               	movf	___ftadd@f1+2,w
  4083  064D  3DAE               	addwfc	___ftadd@f2+2,f
  4084  064E  1FAE               	btfss	___ftadd@f2+2,7
  4085  064F  2E62               	goto	l3225
  4086  0650  30FF               	movlw	255
  4087  0651  06AC               	xorwf	___ftadd@f2,f
  4088  0652  30FF               	movlw	255
  4089  0653  06AD               	xorwf	___ftadd@f2+1,f
  4090  0654  30FF               	movlw	255
  4091  0655  06AE               	xorwf	___ftadd@f2+2,f
  4092  0656  3001               	movlw	1
  4093  0657  07AC               	addwf	___ftadd@f2,f
  4094  0658  3000               	movlw	0
  4095  0659  1803               	skipnc
  4096  065A  3001               	movlw	1
  4097  065B  07AD               	addwf	___ftadd@f2+1,f
  4098  065C  3000               	movlw	0
  4099  065D  1803               	skipnc
  4100  065E  3001               	movlw	1
  4101  065F  07AE               	addwf	___ftadd@f2+2,f
  4102  0660  01B3               	clrf	___ftadd@sign
  4103  0661  0AB3               	incf	___ftadd@sign,f
  4104  0662                     l3225:	
  4105  0662  082C               	movf	___ftadd@f2,w
  4106  0663  00F2               	movwf	___ftpack@arg
  4107  0664  082D               	movf	___ftadd@f2+1,w
  4108  0665  00F3               	movwf	___ftpack@arg+1
  4109  0666  082E               	movf	___ftadd@f2+2,w
  4110  0667  00F4               	movwf	___ftpack@arg+2
  4111  0668  0835               	movf	___ftadd@exp1,w
  4112  0669  00AF               	movwf	??___ftadd
  4113  066A  082F               	movf	??___ftadd,w
  4114  066B  00F5               	movwf	___ftpack@exp
  4115  066C  0833               	movf	___ftadd@sign,w
  4116  066D  00B0               	movwf	??___ftadd+1
  4117  066E  0830               	movf	??___ftadd+1,w
  4118  066F  00F6               	movwf	___ftpack@sign
  4119  0670  3188  20B2         	fcall	___ftpack
  4120  0672  0872               	movf	?___ftpack,w
  4121  0673  0020               	movlb	0	; select bank0
  4122  0674  00A9               	movwf	?___ftadd
  4123  0675  0873               	movf	?___ftpack+1,w
  4124  0676  00AA               	movwf	?___ftadd+1
  4125  0677  0874               	movf	?___ftpack+2,w
  4126  0678  00AB               	movwf	?___ftadd+2
  4127  0679  0008               	return
  4128  067A                     __end_of___ftadd:	
  4129                           
  4130                           	psect	text13
  4131  08B2                     __ptext13:	
  4132 ;; *************** function ___ftpack *****************
  4133 ;; Defined at:
  4134 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  arg             3    2[COMMON] unsigned um
  4137 ;;  exp             1    5[COMMON] unsigned char 
  4138 ;;  sign            1    6[COMMON] unsigned char 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  3    2[COMMON] float 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4150 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;Total ram usage:        8 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; Hardware stack levels required when called:    1
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		___ftadd
  4161 ;;		___ftdiv
  4162 ;;		___ftmul
  4163 ;;		___lltoft
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           
  4168                           ;psect for function ___ftpack
  4169  08B2                     ___ftpack:	
  4170                           
  4171                           ;incstack = 0
  4172                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4173  08B2  0875               	movf	___ftpack@exp,w
  4174  08B3  1903               	btfsc	3,2
  4175  08B4  28BA               	goto	l3081
  4176  08B5  0874               	movf	___ftpack@arg+2,w
  4177  08B6  0473               	iorwf	___ftpack@arg+1,w
  4178  08B7  0472               	iorwf	___ftpack@arg,w
  4179  08B8  1D03               	skipz
  4180  08B9  28CB               	goto	l3087
  4181  08BA                     l3081:	
  4182  08BA  3000               	movlw	0
  4183  08BB  00F2               	movwf	?___ftpack
  4184  08BC  3000               	movlw	0
  4185  08BD  00F3               	movwf	?___ftpack+1
  4186  08BE  3000               	movlw	0
  4187  08BF  00F4               	movwf	?___ftpack+2
  4188  08C0  0008               	return
  4189  08C1                     l3085:	
  4190  08C1  3001               	movlw	1
  4191  08C2  00F7               	movwf	??___ftpack
  4192  08C3  0877               	movf	??___ftpack,w
  4193  08C4  07F5               	addwf	___ftpack@exp,f
  4194  08C5  3001               	movlw	1
  4195  08C6                     u4325:	
  4196  08C6  36F4               	lsrf	___ftpack@arg+2,f
  4197  08C7  0CF3               	rrf	___ftpack@arg+1,f
  4198  08C8  0CF2               	rrf	___ftpack@arg,f
  4199  08C9  0B89               	decfsz	9,f
  4200  08CA  28C6               	goto	u4325
  4201  08CB                     l3087:	
  4202  08CB  30FE               	movlw	254
  4203  08CC  0574               	andwf	___ftpack@arg+2,w
  4204  08CD  1903               	btfsc	3,2
  4205  08CE  28E4               	goto	l737
  4206  08CF  28C1               	goto	l3085
  4207  08D0                     l3089:	
  4208  08D0  3001               	movlw	1
  4209  08D1  00F7               	movwf	??___ftpack
  4210  08D2  0877               	movf	??___ftpack,w
  4211  08D3  07F5               	addwf	___ftpack@exp,f
  4212  08D4  3001               	movlw	1
  4213  08D5  07F2               	addwf	___ftpack@arg,f
  4214  08D6  3000               	movlw	0
  4215  08D7  1803               	skipnc
  4216  08D8  3001               	movlw	1
  4217  08D9  07F3               	addwf	___ftpack@arg+1,f
  4218  08DA  3000               	movlw	0
  4219  08DB  1803               	skipnc
  4220  08DC  3001               	movlw	1
  4221  08DD  07F4               	addwf	___ftpack@arg+2,f
  4222  08DE  3001               	movlw	1
  4223  08DF                     u4345:	
  4224  08DF  36F4               	lsrf	___ftpack@arg+2,f
  4225  08E0  0CF3               	rrf	___ftpack@arg+1,f
  4226  08E1  0CF2               	rrf	___ftpack@arg,f
  4227  08E2  0B89               	decfsz	9,f
  4228  08E3  28DF               	goto	u4345
  4229  08E4                     l737:	
  4230  08E4  30FF               	movlw	255
  4231  08E5  0574               	andwf	___ftpack@arg+2,w
  4232  08E6  1903               	btfsc	3,2
  4233  08E7  28F1               	goto	l3097
  4234  08E8  28D0               	goto	l3089
  4235  08E9                     l3095:	
  4236  08E9  3001               	movlw	1
  4237  08EA  02F5               	subwf	___ftpack@exp,f
  4238  08EB  3001               	movlw	1
  4239  08EC                     u4365:	
  4240  08EC  35F2               	lslf	___ftpack@arg,f
  4241  08ED  0DF3               	rlf	___ftpack@arg+1,f
  4242  08EE  0DF4               	rlf	___ftpack@arg+2,f
  4243  08EF  0B89               	decfsz	9,f
  4244  08F0  28EC               	goto	u4365
  4245  08F1                     l3097:	
  4246  08F1  1FF3               	btfss	___ftpack@arg+1,7
  4247  08F2  28E9               	goto	l3095
  4248  08F3  1875               	btfsc	___ftpack@exp,0
  4249  08F4  28FB               	goto	l743
  4250  08F5  30FF               	movlw	255
  4251  08F6  05F2               	andwf	___ftpack@arg,f
  4252  08F7  307F               	movlw	127
  4253  08F8  05F3               	andwf	___ftpack@arg+1,f
  4254  08F9  30FF               	movlw	255
  4255  08FA  05F4               	andwf	___ftpack@arg+2,f
  4256  08FB                     l743:	
  4257  08FB  1003               	clrc
  4258  08FC  0CF5               	rrf	___ftpack@exp,f
  4259  08FD  0875               	movf	___ftpack@exp,w
  4260  08FE  00F7               	movwf	??___ftpack
  4261  08FF  01F8               	clrf	??___ftpack+1
  4262  0900  01F9               	clrf	??___ftpack+2
  4263  0901  3010               	movlw	16
  4264  0902                     u4395:	
  4265  0902  35F7               	lslf	??___ftpack,f
  4266  0903  0DF8               	rlf	??___ftpack+1,f
  4267  0904  0DF9               	rlf	??___ftpack+2,f
  4268  0905  0B89               	decfsz	9,f
  4269  0906  2902               	goto	u4395
  4270  0907  0877               	movf	??___ftpack,w
  4271  0908  04F2               	iorwf	___ftpack@arg,f
  4272  0909  0878               	movf	??___ftpack+1,w
  4273  090A  04F3               	iorwf	___ftpack@arg+1,f
  4274  090B  0879               	movf	??___ftpack+2,w
  4275  090C  04F4               	iorwf	___ftpack@arg+2,f
  4276  090D  0876               	movf	___ftpack@sign,w
  4277  090E  1903               	btfsc	3,2
  4278  090F  0008               	return
  4279  0910  17F4               	bsf	___ftpack@arg+2,7
  4280  0911  0008               	return
  4281  0912                     __end_of___ftpack:	
  4282                           
  4283                           	psect	text14
  4284  0983                     __ptext14:	
  4285 ;; *************** function ___aldiv *****************
  4286 ;; Defined at:
  4287 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\aldiv.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  divisor         4    2[COMMON] long 
  4290 ;;  dividend        4    6[COMMON] long 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  quotient        4    3[BANK0 ] long 
  4293 ;;  sign            1    2[BANK0 ] unsigned char 
  4294 ;;  counter         1    1[BANK0 ] unsigned char 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  4    2[COMMON] long 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2, status,0
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4304 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4307 ;;      Totals:         8       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4308 ;;Total ram usage:       15 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; Hardware stack levels required when called:    1
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_Set_Freq
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           
  4318                           
  4319                           ;psect for function ___aldiv
  4320  0983                     ___aldiv:	
  4321                           
  4322                           ;incstack = 0
  4323                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4324  0983  0020               	movlb	0	; select bank0
  4325  0984  01A2               	clrf	___aldiv@sign
  4326  0985  1FF5               	btfss	___aldiv@divisor+3,7
  4327  0986  2994               	goto	l631
  4328  0987  09F2               	comf	___aldiv@divisor,f
  4329  0988  09F3               	comf	___aldiv@divisor+1,f
  4330  0989  09F4               	comf	___aldiv@divisor+2,f
  4331  098A  09F5               	comf	___aldiv@divisor+3,f
  4332  098B  0AF2               	incf	___aldiv@divisor,f
  4333  098C  1903               	skipnz
  4334  098D  0AF3               	incf	___aldiv@divisor+1,f
  4335  098E  1903               	skipnz
  4336  098F  0AF4               	incf	___aldiv@divisor+2,f
  4337  0990  1903               	skipnz
  4338  0991  0AF5               	incf	___aldiv@divisor+3,f
  4339  0992  01A2               	clrf	___aldiv@sign
  4340  0993  0AA2               	incf	___aldiv@sign,f
  4341  0994                     l631:	
  4342  0994  1FF9               	btfss	___aldiv@dividend+3,7
  4343  0995  29A5               	goto	l3127
  4344  0996  09F6               	comf	___aldiv@dividend,f
  4345  0997  09F7               	comf	___aldiv@dividend+1,f
  4346  0998  09F8               	comf	___aldiv@dividend+2,f
  4347  0999  09F9               	comf	___aldiv@dividend+3,f
  4348  099A  0AF6               	incf	___aldiv@dividend,f
  4349  099B  1903               	skipnz
  4350  099C  0AF7               	incf	___aldiv@dividend+1,f
  4351  099D  1903               	skipnz
  4352  099E  0AF8               	incf	___aldiv@dividend+2,f
  4353  099F  1903               	skipnz
  4354  09A0  0AF9               	incf	___aldiv@dividend+3,f
  4355  09A1  3001               	movlw	1
  4356  09A2  00A0               	movwf	??___aldiv
  4357  09A3  0820               	movf	??___aldiv,w
  4358  09A4  06A2               	xorwf	___aldiv@sign,f
  4359  09A5                     l3127:	
  4360  09A5  3000               	movlw	0
  4361  09A6  00A6               	movwf	___aldiv@quotient+3
  4362  09A7  3000               	movlw	0
  4363  09A8  00A5               	movwf	___aldiv@quotient+2
  4364  09A9  3000               	movlw	0
  4365  09AA  00A4               	movwf	___aldiv@quotient+1
  4366  09AB  3000               	movlw	0
  4367  09AC  00A3               	movwf	___aldiv@quotient
  4368  09AD  0875               	movf	___aldiv@divisor+3,w
  4369  09AE  0474               	iorwf	___aldiv@divisor+2,w
  4370  09AF  0473               	iorwf	___aldiv@divisor+1,w
  4371  09B0  0472               	iorwf	___aldiv@divisor,w
  4372  09B1  1903               	skipnz
  4373  09B2  29EE               	goto	l3149
  4374  09B3  01A1               	clrf	___aldiv@counter
  4375  09B4  0AA1               	incf	___aldiv@counter,f
  4376  09B5                     l3135:	
  4377  09B5  1BF5               	btfsc	___aldiv@divisor+3,7
  4378  09B6  29C3               	goto	l3137
  4379  09B7  3001               	movlw	1
  4380  09B8                     u4455:	
  4381  09B8  35F2               	lslf	___aldiv@divisor,f
  4382  09B9  0DF3               	rlf	___aldiv@divisor+1,f
  4383  09BA  0DF4               	rlf	___aldiv@divisor+2,f
  4384  09BB  0DF5               	rlf	___aldiv@divisor+3,f
  4385  09BC  0B89               	decfsz	9,f
  4386  09BD  29B8               	goto	u4455
  4387  09BE  3001               	movlw	1
  4388  09BF  00A0               	movwf	??___aldiv
  4389  09C0  0820               	movf	??___aldiv,w
  4390  09C1  07A1               	addwf	___aldiv@counter,f
  4391  09C2  29B5               	goto	l3135
  4392  09C3                     l3137:	
  4393  09C3  3001               	movlw	1
  4394  09C4                     u4475:	
  4395  09C4  35A3               	lslf	___aldiv@quotient,f
  4396  09C5  0DA4               	rlf	___aldiv@quotient+1,f
  4397  09C6  0DA5               	rlf	___aldiv@quotient+2,f
  4398  09C7  0DA6               	rlf	___aldiv@quotient+3,f
  4399  09C8  0B89               	decfsz	9,f
  4400  09C9  29C4               	goto	u4475
  4401  09CA  0875               	movf	___aldiv@divisor+3,w
  4402  09CB  0279               	subwf	___aldiv@dividend+3,w
  4403  09CC  1D03               	skipz
  4404  09CD  29D8               	goto	u4485
  4405  09CE  0874               	movf	___aldiv@divisor+2,w
  4406  09CF  0278               	subwf	___aldiv@dividend+2,w
  4407  09D0  1D03               	skipz
  4408  09D1  29D8               	goto	u4485
  4409  09D2  0873               	movf	___aldiv@divisor+1,w
  4410  09D3  0277               	subwf	___aldiv@dividend+1,w
  4411  09D4  1D03               	skipz
  4412  09D5  29D8               	goto	u4485
  4413  09D6  0872               	movf	___aldiv@divisor,w
  4414  09D7  0276               	subwf	___aldiv@dividend,w
  4415  09D8                     u4485:	
  4416  09D8  1C03               	skipc
  4417  09D9  29E3               	goto	l3145
  4418  09DA  0872               	movf	___aldiv@divisor,w
  4419  09DB  02F6               	subwf	___aldiv@dividend,f
  4420  09DC  0873               	movf	___aldiv@divisor+1,w
  4421  09DD  3BF7               	subwfb	___aldiv@dividend+1,f
  4422  09DE  0874               	movf	___aldiv@divisor+2,w
  4423  09DF  3BF8               	subwfb	___aldiv@dividend+2,f
  4424  09E0  0875               	movf	___aldiv@divisor+3,w
  4425  09E1  3BF9               	subwfb	___aldiv@dividend+3,f
  4426  09E2  1423               	bsf	___aldiv@quotient,0
  4427  09E3                     l3145:	
  4428  09E3  3001               	movlw	1
  4429  09E4                     u4495:	
  4430  09E4  36F5               	lsrf	___aldiv@divisor+3,f
  4431  09E5  0CF4               	rrf	___aldiv@divisor+2,f
  4432  09E6  0CF3               	rrf	___aldiv@divisor+1,f
  4433  09E7  0CF2               	rrf	___aldiv@divisor,f
  4434  09E8  0B89               	decfsz	9,f
  4435  09E9  29E4               	goto	u4495
  4436  09EA  3001               	movlw	1
  4437  09EB  02A1               	subwf	___aldiv@counter,f
  4438  09EC  1D03               	btfss	3,2
  4439  09ED  29C3               	goto	l3137
  4440  09EE                     l3149:	
  4441  09EE  0822               	movf	___aldiv@sign,w
  4442  09EF  1903               	btfsc	3,2
  4443  09F0  29FC               	goto	l3153
  4444  09F1  09A3               	comf	___aldiv@quotient,f
  4445  09F2  09A4               	comf	___aldiv@quotient+1,f
  4446  09F3  09A5               	comf	___aldiv@quotient+2,f
  4447  09F4  09A6               	comf	___aldiv@quotient+3,f
  4448  09F5  0AA3               	incf	___aldiv@quotient,f
  4449  09F6  1903               	skipnz
  4450  09F7  0AA4               	incf	___aldiv@quotient+1,f
  4451  09F8  1903               	skipnz
  4452  09F9  0AA5               	incf	___aldiv@quotient+2,f
  4453  09FA  1903               	skipnz
  4454  09FB  0AA6               	incf	___aldiv@quotient+3,f
  4455  09FC                     l3153:	
  4456  09FC  0826               	movf	___aldiv@quotient+3,w
  4457  09FD  00F5               	movwf	?___aldiv+3
  4458  09FE  0825               	movf	___aldiv@quotient+2,w
  4459  09FF  00F4               	movwf	?___aldiv+2
  4460  0A00  0824               	movf	___aldiv@quotient+1,w
  4461  0A01  00F3               	movwf	?___aldiv+1
  4462  0A02  0823               	movf	___aldiv@quotient,w
  4463  0A03  00F2               	movwf	?___aldiv
  4464  0A04  0008               	return
  4465  0A05                     __end_of___aldiv:	
  4466                           
  4467                           	psect	text15
  4468  1572                     __ptext15:	
  4469 ;; *************** function _Gpio_Config *****************
  4470 ;; Defined at:
  4471 ;;		line 35 in file "utility.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      unsigned char 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;Total ram usage:        1 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    1
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_main
  4496 ;;		_Radio_Setup
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           
  4501                           ;psect for function _Gpio_Config
  4502  1572                     _Gpio_Config:	
  4503                           
  4504                           ;utility.c: 38: TRISA |= 0b00000010;
  4505                           
  4506                           ;incstack = 0
  4507                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  4508  1572  0021               	movlb	1	; select bank1
  4509  1573  148C               	bsf	12,1	;volatile
  4510                           
  4511                           ;utility.c: 39: TRISA &= 0b11001011;
  4512  1574  30CB               	movlw	203
  4513  1575  00F2               	movwf	??_Gpio_Config
  4514  1576  0872               	movf	??_Gpio_Config,w
  4515  1577  058C               	andwf	12,f	;volatile
  4516                           
  4517                           ;utility.c: 40: TRISC |= 0b00100000;
  4518  1578  168E               	bsf	14,5	;volatile
  4519                           
  4520                           ;utility.c: 41: TRISC &= 0b11100000;
  4521  1579  30E0               	movlw	224
  4522  157A  00F2               	movwf	??_Gpio_Config
  4523  157B  0872               	movf	??_Gpio_Config,w
  4524  157C  058E               	andwf	14,f	;volatile
  4525  157D  0008               	return
  4526  157E                     __end_of_Gpio_Config:	
  4527                           ;utility.c: 43: return 1;
  4528                           ;	Return value of _Gpio_Config is never used
  4529                           
  4530                           
  4531                           	psect	text16
  4532  00F1                     __ptext16:	
  4533 ;; *************** function _Adf_Reset_Config *****************
  4534 ;; Defined at:
  4535 ;;		line 87 in file "adf7012.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;		None
  4540 ;; Return value:  Size  Location     Type
  4541 ;;		None               void
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, pclath, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4553 ;;Total ram usage:        0 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    4
  4556 ;; This function calls:
  4557 ;;		_Adf_Reset
  4558 ;;		_Adf_Reset_Register_One
  4559 ;;		_Adf_Reset_Register_Three
  4560 ;;		_Adf_Reset_Register_Two
  4561 ;;		_Adf_Reset_Register_Zero
  4562 ;; This function is called by:
  4563 ;;		_Radio_Setup
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           
  4568                           ;psect for function _Adf_Reset_Config
  4569  00F1                     _Adf_Reset_Config:	
  4570                           
  4571                           ;adf7012.c: 90: Adf_Reset_Register_Zero();
  4572                           
  4573                           ;incstack = 0
  4574                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  4575  00F1  3195  25E7  3180   	fcall	_Adf_Reset_Register_Zero
  4576                           
  4577                           ;adf7012.c: 91: Adf_Reset_Register_One();
  4578  00F4  3195  25B1  3180   	fcall	_Adf_Reset_Register_One
  4579                           
  4580                           ;adf7012.c: 92: Adf_Reset_Register_Two();
  4581  00F7  3195  25D2  3180   	fcall	_Adf_Reset_Register_Two
  4582                           
  4583                           ;adf7012.c: 93: Adf_Reset_Register_Three();
  4584  00FA  3196  2654  3180   	fcall	_Adf_Reset_Register_Three
  4585                           
  4586                           ;adf7012.c: 95: Adf_Reset();
  4587  00FD  3195  253D         	fcall	_Adf_Reset
  4588  00FF  0008               	return
  4589  0100                     __end_of_Adf_Reset_Config:	
  4590                           
  4591                           	psect	text17
  4592  15E7                     __ptext17:	
  4593 ;; *************** function _Adf_Reset_Register_Zero *****************
  4594 ;; Defined at:
  4595 ;;		line 99 in file "adf7012.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;		None               void
  4602 ;; Registers used:
  4603 ;;		wreg, status,2
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;Total ram usage:        1 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:    1
  4616 ;; This function calls:
  4617 ;;		Nothing
  4618 ;; This function is called by:
  4619 ;;		_Adf_Reset_Config
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           
  4624                           ;psect for function _Adf_Reset_Register_Zero
  4625  15E7                     _Adf_Reset_Register_Zero:	
  4626                           
  4627                           ;adf7012.c: 100: adf_config.r0.frequency_error_correction = 0;
  4628                           
  4629                           ;incstack = 0
  4630                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  4631  15E7  3000               	movlw	0
  4632  15E8  0021               	movlb	1	; select bank1
  4633  15E9  00A3               	movwf	(_adf_config+3)^(0+128)
  4634  15EA  3000               	movlw	0
  4635  15EB  00A2               	movwf	(_adf_config+2)^(0+128)
  4636  15EC  3000               	movlw	0
  4637  15ED  00A1               	movwf	(_adf_config+1)^(0+128)
  4638  15EE  3000               	movlw	0
  4639  15EF  00A0               	movwf	_adf_config^(0+128)
  4640                           
  4641                           ;adf7012.c: 101: adf_config.r0.r_divider = 15;
  4642  15F0  300F               	movlw	15
  4643  15F1  00F2               	movwf	??_Adf_Reset_Register_Zero
  4644  15F2  0872               	movf	??_Adf_Reset_Register_Zero,w
  4645  15F3  00A4               	movwf	(_adf_config^(0+128)+4)
  4646                           
  4647                           ;adf7012.c: 102: adf_config.r0.crystal_doubler = 0;
  4648  15F4  01A5               	clrf	(_adf_config^(0+128)+5)
  4649                           
  4650                           ;adf7012.c: 103: adf_config.r0.crystal_oscillator_disable = 0;
  4651  15F5  01A6               	clrf	(_adf_config^(0+128)+6)
  4652                           
  4653                           ;adf7012.c: 104: adf_config.r0.clock_out_divider = 2;
  4654  15F6  3002               	movlw	2
  4655  15F7  00F2               	movwf	??_Adf_Reset_Register_Zero
  4656  15F8  0872               	movf	??_Adf_Reset_Register_Zero,w
  4657  15F9  00A7               	movwf	(_adf_config^(0+128)+7)
  4658                           
  4659                           ;adf7012.c: 105: adf_config.r0.vco_adjust = 0;
  4660  15FA  01A8               	clrf	(_adf_config^(0+128)+8)
  4661                           
  4662                           ;adf7012.c: 106: adf_config.r0.output_divider = 2;
  4663  15FB  3002               	movlw	2
  4664  15FC  00F2               	movwf	??_Adf_Reset_Register_Zero
  4665  15FD  0872               	movf	??_Adf_Reset_Register_Zero,w
  4666  15FE  00A9               	movwf	(_adf_config^(0+128)+9)
  4667  15FF  0008               	return
  4668  1600                     __end_of_Adf_Reset_Register_Zero:	
  4669                           
  4670                           	psect	text18
  4671  15D2                     __ptext18:	
  4672 ;; *************** function _Adf_Reset_Register_Two *****************
  4673 ;; Defined at:
  4674 ;;		line 115 in file "adf7012.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;		None               void
  4681 ;; Registers used:
  4682 ;;		wreg, status,2
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;Total ram usage:        1 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    1
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_Adf_Reset_Config
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           
  4703                           ;psect for function _Adf_Reset_Register_Two
  4704  15D2                     _Adf_Reset_Register_Two:	
  4705                           
  4706                           ;adf7012.c: 116: adf_config.r2.mod_control = 3;
  4707                           
  4708                           ;incstack = 0
  4709                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  4710  15D2  3003               	movlw	3
  4711  15D3  00F2               	movwf	??_Adf_Reset_Register_Two
  4712  15D4  0872               	movf	??_Adf_Reset_Register_Two,w
  4713  15D5  0021               	movlb	1	; select bank1
  4714  15D6  00B0               	movwf	(_adf_config^(0+128)+16)
  4715                           
  4716                           ;adf7012.c: 117: adf_config.r2.gook = 0;
  4717  15D7  01B1               	clrf	(_adf_config^(0+128)+17)
  4718                           
  4719                           ;adf7012.c: 118: adf_config.r2.power_amplifier_level = 15;
  4720  15D8  300F               	movlw	15
  4721  15D9  00F2               	movwf	??_Adf_Reset_Register_Two
  4722  15DA  0872               	movf	??_Adf_Reset_Register_Two,w
  4723  15DB  00B2               	movwf	(_adf_config^(0+128)+18)
  4724                           
  4725                           ;adf7012.c: 119: adf_config.r2.modulation_deviation = 16;
  4726  15DC  3000               	movlw	0
  4727  15DD  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  4728  15DE  3000               	movlw	0
  4729  15DF  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  4730  15E0  3000               	movlw	0
  4731  15E1  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  4732  15E2  3010               	movlw	16
  4733  15E3  00B3               	movwf	(_adf_config^(0+128)+19)
  4734                           
  4735                           ;adf7012.c: 120: adf_config.r2.gfsk_modulation_control = 0;
  4736  15E4  01B7               	clrf	(_adf_config^(0+128)+23)
  4737                           
  4738                           ;adf7012.c: 121: adf_config.r2.index_counter = 0;
  4739  15E5  01B8               	clrf	(_adf_config^(0+128)+24)
  4740  15E6  0008               	return
  4741  15E7                     __end_of_Adf_Reset_Register_Two:	
  4742                           
  4743                           	psect	text19
  4744  1654                     __ptext19:	
  4745 ;; *************** function _Adf_Reset_Register_Three *****************
  4746 ;; Defined at:
  4747 ;;		line 124 in file "adf7012.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;		None               void
  4754 ;; Registers used:
  4755 ;;		wreg, status,2
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;Total ram usage:        1 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    1
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_Adf_Reset_Config
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           
  4776                           ;psect for function _Adf_Reset_Register_Three
  4777  1654                     _Adf_Reset_Register_Three:	
  4778                           
  4779                           ;adf7012.c: 125: adf_config.r3.pll_enable = 0;
  4780                           
  4781                           ;incstack = 0
  4782                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  4783  1654  0021               	movlb	1	; select bank1
  4784  1655  01B9               	clrf	(_adf_config^(0+128)+25)
  4785                           
  4786                           ;adf7012.c: 126: adf_config.r3.pa_enable = 0;
  4787  1656  01BA               	clrf	(_adf_config^(0+128)+26)
  4788                           
  4789                           ;adf7012.c: 127: adf_config.r3.clkout_enable = 1;
  4790  1657  01BB               	clrf	(_adf_config^(0+128)+27)
  4791  1658  0ABB               	incf	(_adf_config^(0+128)+27),f
  4792                           
  4793                           ;adf7012.c: 128: adf_config.r3.data_invert = 1;
  4794  1659  01BC               	clrf	(_adf_config^(0+128)+28)
  4795  165A  0ABC               	incf	(_adf_config^(0+128)+28),f
  4796                           
  4797                           ;adf7012.c: 129: adf_config.r3.charge_pump_current = 3;
  4798  165B  3003               	movlw	3
  4799  165C  00F2               	movwf	??_Adf_Reset_Register_Three
  4800  165D  0872               	movf	??_Adf_Reset_Register_Three,w
  4801  165E  00BD               	movwf	(_adf_config^(0+128)+29)
  4802                           
  4803                           ;adf7012.c: 130: adf_config.r3.bleed_up = 0;
  4804  165F  01BE               	clrf	(_adf_config^(0+128)+30)
  4805                           
  4806                           ;adf7012.c: 131: adf_config.r3.bleed_down = 0;
  4807  1660  01BF               	clrf	(_adf_config^(0+128)+31)
  4808                           
  4809                           ;adf7012.c: 132: adf_config.r3.vco_disable = 0;
  4810  1661  01C0               	clrf	(_adf_config^(0+128)+32)
  4811                           
  4812                           ;adf7012.c: 134: adf_config.r3.muxout = 3;
  4813  1662  3003               	movlw	3
  4814  1663  00F2               	movwf	??_Adf_Reset_Register_Three
  4815  1664  0872               	movf	??_Adf_Reset_Register_Three,w
  4816  1665  00C1               	movwf	(_adf_config^(0+128)+33)
  4817                           
  4818                           ;adf7012.c: 136: adf_config.r3.ld_precision = 0;
  4819  1666  01C2               	clrf	(_adf_config^(0+128)+34)
  4820                           
  4821                           ;adf7012.c: 137: adf_config.r3.vco_bias = 6;
  4822  1667  3006               	movlw	6
  4823  1668  00F2               	movwf	??_Adf_Reset_Register_Three
  4824  1669  0872               	movf	??_Adf_Reset_Register_Three,w
  4825  166A  00C3               	movwf	(_adf_config^(0+128)+35)
  4826                           
  4827                           ;adf7012.c: 138: adf_config.r3.pa_bias = 4;
  4828  166B  3004               	movlw	4
  4829  166C  00F2               	movwf	??_Adf_Reset_Register_Three
  4830  166D  0872               	movf	??_Adf_Reset_Register_Three,w
  4831  166E  00C4               	movwf	(_adf_config^(0+128)+36)
  4832                           
  4833                           ;adf7012.c: 139: adf_config.r3.pll_test_mode = 0;
  4834  166F  01C5               	clrf	(_adf_config^(0+128)+37)
  4835                           
  4836                           ;adf7012.c: 140: adf_config.r3.sd_test_mode = 0;
  4837  1670  01C6               	clrf	(_adf_config^(0+128)+38)
  4838  1671  0008               	return
  4839  1672                     __end_of_Adf_Reset_Register_Three:	
  4840                           
  4841                           	psect	text20
  4842  15B1                     __ptext20:	
  4843 ;; *************** function _Adf_Reset_Register_One *****************
  4844 ;; Defined at:
  4845 ;;		line 109 in file "adf7012.c"
  4846 ;; Parameters:    Size  Location     Type
  4847 ;;		None
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;		None
  4850 ;; Return value:  Size  Location     Type
  4851 ;;		None               void
  4852 ;; Registers used:
  4853 ;;		wreg
  4854 ;; Tracked objects:
  4855 ;;		On entry : 0/0
  4856 ;;		On exit  : 0/0
  4857 ;;		Unchanged: 0/0
  4858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;Total ram usage:        1 bytes
  4864 ;; Hardware stack levels used:    1
  4865 ;; Hardware stack levels required when called:    1
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_Adf_Reset_Config
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           
  4874                           ;psect for function _Adf_Reset_Register_One
  4875  15B1                     _Adf_Reset_Register_One:	
  4876                           
  4877                           ;adf7012.c: 110: adf_config.r1.integer_n = 109;
  4878                           
  4879                           ;incstack = 0
  4880                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  4881  15B1  306D               	movlw	109
  4882  15B2  00F2               	movwf	??_Adf_Reset_Register_One
  4883  15B3  0872               	movf	??_Adf_Reset_Register_One,w
  4884  15B4  0021               	movlb	1	; select bank1
  4885  15B5  00AE               	movwf	(_adf_config^(0+128)+14)
  4886                           
  4887                           ;adf7012.c: 111: adf_config.r1.fractional_n = 0;
  4888  15B6  3000               	movlw	0
  4889  15B7  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  4890  15B8  3000               	movlw	0
  4891  15B9  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  4892  15BA  3000               	movlw	0
  4893  15BB  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  4894  15BC  3000               	movlw	0
  4895  15BD  00AA               	movwf	(_adf_config^(0+128)+10)
  4896                           
  4897                           ;adf7012.c: 112: adf_config.r1.prescaler = 1;
  4898  15BE  01AF               	clrf	(_adf_config^(0+128)+15)
  4899  15BF  0AAF               	incf	(_adf_config^(0+128)+15),f
  4900  15C0  0008               	return
  4901  15C1                     __end_of_Adf_Reset_Register_One:	
  4902                           
  4903                           	psect	text21
  4904  153D                     __ptext21:	
  4905 ;; *************** function _Adf_Reset *****************
  4906 ;; Defined at:
  4907 ;;		line 143 in file "adf7012.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;		None               void
  4914 ;; Registers used:
  4915 ;;		wreg, status,2, status,0, pclath, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4925 ;;Total ram usage:        0 bytes
  4926 ;; Hardware stack levels used:    1
  4927 ;; Hardware stack levels required when called:    3
  4928 ;; This function calls:
  4929 ;;		_Delay_ms
  4930 ;; This function is called by:
  4931 ;;		_Adf_Reset_Config
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           
  4936                           ;psect for function _Adf_Reset
  4937  153D                     _Adf_Reset:	
  4938                           
  4939                           ;adf7012.c: 145: PORTAbits.RA5 = 1;;
  4940                           
  4941                           ;incstack = 0
  4942                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  4943  153D  0020               	movlb	0	; select bank0
  4944  153E  168C               	bsf	12,5	;volatile
  4945                           
  4946                           ;adf7012.c: 146: Delay_ms(10);
  4947  153F  300A               	movlw	10
  4948  1540  00F7               	movwf	Delay_ms@time_to_delay
  4949  1541  3000               	movlw	0
  4950  1542  00F8               	movwf	Delay_ms@time_to_delay+1
  4951  1543  3195  255A         	fcall	_Delay_ms
  4952  1545  0008               	return
  4953  1546                     __end_of_Adf_Reset:	
  4954                           
  4955                           	psect	text22
  4956  0E5D                     __ptext22:	
  4957 ;; *************** function _Modem_Init *****************
  4958 ;; Defined at:
  4959 ;;		line 110 in file "audio_tone.c"
  4960 ;; Parameters:    Size  Location     Type
  4961 ;;		None
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;		None
  4964 ;; Return value:  Size  Location     Type
  4965 ;;		None               void
  4966 ;; Registers used:
  4967 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4975 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4976 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4977 ;;Total ram usage:        6 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; Hardware stack levels required when called:    2
  4980 ;; This function calls:
  4981 ;;		___lldiv
  4982 ;;		___lmul
  4983 ;; This function is called by:
  4984 ;;		_Modem_Setup
  4985 ;; This function uses a non-reentrant model
  4986 ;;
  4987                           
  4988                           
  4989                           ;psect for function _Modem_Init
  4990  0E5D                     _Modem_Init:	
  4991                           
  4992                           ;audio_tone.c: 111: SAMPLES_PER_BAUD = (PLAYBACK_RATE / BAUD_RATE);
  4993                           
  4994                           ;incstack = 0
  4995                           ; Regs used in _Modem_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4996  0E5D  3004               	movlw	low (_BAUD_RATE| (0+32768))
  4997  0E5E  0084               	movwf	4
  4998  0E5F  3083               	movlw	high (_BAUD_RATE| (0+32768))
  4999  0E60  0085               	movwf	5
  5000  0E61  3F00               	moviw [0]fsr0
  5001  0E62  0020               	movlb	0	; select bank0
  5002  0E63  00B2               	movwf	??_Modem_Init
  5003  0E64  3F01               	moviw [1]fsr0
  5004  0E65  00B3               	movwf	??_Modem_Init+1
  5005  0E66  0832               	movf	??_Modem_Init,w
  5006  0E67  00A4               	movwf	___lldiv@divisor
  5007  0E68  0833               	movf	??_Modem_Init+1,w
  5008  0E69  00A5               	movwf	___lldiv@divisor+1
  5009  0E6A  0D89               	rlf	9,f
  5010  0E6B  3B89               	subwfb	9,f
  5011  0E6C  0989               	comf	9,f
  5012  0E6D  00A6               	movwf	___lldiv@divisor+2
  5013  0E6E  00A7               	movwf	___lldiv@divisor+3
  5014  0E6F  3000               	movlw	low (_PLAYBACK_RATE| (0+32768))
  5015  0E70  0084               	movwf	4
  5016  0E71  3083               	movlw	high (_PLAYBACK_RATE| (0+32768))
  5017  0E72  0085               	movwf	5
  5018  0E73  3F00               	moviw [0]fsr0
  5019  0E74  00A8               	movwf	___lldiv@dividend
  5020  0E75  3F01               	moviw [1]fsr0
  5021  0E76  00A9               	movwf	___lldiv@dividend+1
  5022  0E77  3F02               	moviw [2]fsr0
  5023  0E78  00AA               	movwf	___lldiv@dividend+2
  5024  0E79  3F03               	moviw [3]fsr0
  5025  0E7A  00AB               	movwf	___lldiv@dividend+3
  5026  0E7B  3188  205F  318E   	fcall	___lldiv
  5027  0E7E  0020               	movlb	0	; select bank0
  5028  0E7F  0824               	movf	?___lldiv,w
  5029  0E80  00B4               	movwf	??_Modem_Init+2
  5030  0E81  0834               	movf	??_Modem_Init+2,w
  5031  0E82  00EF               	movwf	_SAMPLES_PER_BAUD
  5032                           
  5033                           ;audio_tone.c: 112: PHASE_DELTA_1200 = (((TABLE_SIZE * 1200L) << 7) / PLAYBACK_RATE);
  5034  0E83  3000               	movlw	low (_PLAYBACK_RATE| (0+32768))
  5035  0E84  0084               	movwf	4
  5036  0E85  3083               	movlw	high (_PLAYBACK_RATE| (0+32768))
  5037  0E86  0085               	movwf	5
  5038  0E87  3F00               	moviw [0]fsr0
  5039  0E88  00A4               	movwf	___lldiv@divisor
  5040  0E89  3F01               	moviw [1]fsr0
  5041  0E8A  00A5               	movwf	___lldiv@divisor+1
  5042  0E8B  3F02               	moviw [2]fsr0
  5043  0E8C  00A6               	movwf	___lldiv@divisor+2
  5044  0E8D  3F03               	moviw [3]fsr0
  5045  0E8E  00A7               	movwf	___lldiv@divisor+3
  5046  0E8F  3000               	movlw	0
  5047  0E90  00F9               	movwf	___lmul@multiplicand+3
  5048  0E91  3000               	movlw	0
  5049  0E92  00F8               	movwf	___lmul@multiplicand+2
  5050  0E93  3004               	movlw	4
  5051  0E94  00F7               	movwf	___lmul@multiplicand+1
  5052  0E95  30B0               	movlw	176
  5053  0E96  00F6               	movwf	___lmul@multiplicand
  5054  0E97  3006               	movlw	low (_TABLE_SIZE| (0+32768))
  5055  0E98  0084               	movwf	4
  5056  0E99  3083               	movlw	high (_TABLE_SIZE| (0+32768))
  5057  0E9A  0085               	movwf	5
  5058  0E9B  3F00               	moviw [0]fsr0
  5059  0E9C  00B2               	movwf	??_Modem_Init
  5060  0E9D  3F01               	moviw [1]fsr0
  5061  0E9E  00B3               	movwf	??_Modem_Init+1
  5062  0E9F  0832               	movf	??_Modem_Init,w
  5063  0EA0  00F2               	movwf	___lmul@multiplier
  5064  0EA1  0833               	movf	??_Modem_Init+1,w
  5065  0EA2  00F3               	movwf	___lmul@multiplier+1
  5066  0EA3  0D89               	rlf	9,f
  5067  0EA4  3B89               	subwfb	9,f
  5068  0EA5  0989               	comf	9,f
  5069  0EA6  00F4               	movwf	___lmul@multiplier+2
  5070  0EA7  00F5               	movwf	___lmul@multiplier+3
  5071  0EA8  3197  2764  318E   	fcall	___lmul
  5072  0EAB  0872               	movf	?___lmul,w
  5073  0EAC  0020               	movlb	0	; select bank0
  5074  0EAD  00B4               	movwf	??_Modem_Init+2
  5075  0EAE  0873               	movf	?___lmul+1,w
  5076  0EAF  00B5               	movwf	??_Modem_Init+3
  5077  0EB0  0874               	movf	?___lmul+2,w
  5078  0EB1  00B6               	movwf	??_Modem_Init+4
  5079  0EB2  0875               	movf	?___lmul+3,w
  5080  0EB3  00B7               	movwf	??_Modem_Init+5
  5081  0EB4  3007               	movlw	7
  5082  0EB5                     u5235:	
  5083  0EB5  35B4               	lslf	??_Modem_Init+2,f
  5084  0EB6  0DB5               	rlf	??_Modem_Init+3,f
  5085  0EB7  0DB6               	rlf	??_Modem_Init+4,f
  5086  0EB8  0DB7               	rlf	??_Modem_Init+5,f
  5087  0EB9  0B89               	decfsz	9,f
  5088  0EBA  2EB5               	goto	u5235
  5089  0EBB  0837               	movf	??_Modem_Init+5,w
  5090  0EBC  00AB               	movwf	___lldiv@dividend+3
  5091  0EBD  0836               	movf	??_Modem_Init+4,w
  5092  0EBE  00AA               	movwf	___lldiv@dividend+2
  5093  0EBF  0835               	movf	??_Modem_Init+3,w
  5094  0EC0  00A9               	movwf	___lldiv@dividend+1
  5095  0EC1  0834               	movf	??_Modem_Init+2,w
  5096  0EC2  00A8               	movwf	___lldiv@dividend
  5097  0EC3  3188  205F  318E   	fcall	___lldiv
  5098  0EC6  0020               	movlb	0	; select bank0
  5099  0EC7  0827               	movf	?___lldiv+3,w
  5100  0EC8  0022               	movlb	2	; select bank2
  5101  0EC9  00A7               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  5102  0ECA  0020               	movlb	0	; select bank0
  5103  0ECB  0826               	movf	?___lldiv+2,w
  5104  0ECC  0022               	movlb	2	; select bank2
  5105  0ECD  00A6               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  5106  0ECE  0020               	movlb	0	; select bank0
  5107  0ECF  0825               	movf	?___lldiv+1,w
  5108  0ED0  0022               	movlb	2	; select bank2
  5109  0ED1  00A5               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  5110  0ED2  0020               	movlb	0	; select bank0
  5111  0ED3  0824               	movf	?___lldiv,w
  5112  0ED4  0022               	movlb	2	; select bank2
  5113  0ED5  00A4               	movwf	_PHASE_DELTA_1200^(0+256)
  5114                           
  5115                           ;audio_tone.c: 113: PHASE_DELTA_2200 = (((TABLE_SIZE * 2200L) << 7) / PLAYBACK_RATE);
  5116  0ED6  3000               	movlw	low (_PLAYBACK_RATE| (0+32768))
  5117  0ED7  0084               	movwf	4
  5118  0ED8  3083               	movlw	high (_PLAYBACK_RATE| (0+32768))
  5119  0ED9  0085               	movwf	5
  5120  0EDA  3F00               	moviw [0]fsr0
  5121  0EDB  0020               	movlb	0	; select bank0
  5122  0EDC  00A4               	movwf	___lldiv@divisor
  5123  0EDD  3F01               	moviw [1]fsr0
  5124  0EDE  00A5               	movwf	___lldiv@divisor+1
  5125  0EDF  3F02               	moviw [2]fsr0
  5126  0EE0  00A6               	movwf	___lldiv@divisor+2
  5127  0EE1  3F03               	moviw [3]fsr0
  5128  0EE2  00A7               	movwf	___lldiv@divisor+3
  5129  0EE3  3000               	movlw	0
  5130  0EE4  00F9               	movwf	___lmul@multiplicand+3
  5131  0EE5  3000               	movlw	0
  5132  0EE6  00F8               	movwf	___lmul@multiplicand+2
  5133  0EE7  3008               	movlw	8
  5134  0EE8  00F7               	movwf	___lmul@multiplicand+1
  5135  0EE9  3098               	movlw	152
  5136  0EEA  00F6               	movwf	___lmul@multiplicand
  5137  0EEB  3006               	movlw	low (_TABLE_SIZE| (0+32768))
  5138  0EEC  0084               	movwf	4
  5139  0EED  3083               	movlw	high (_TABLE_SIZE| (0+32768))
  5140  0EEE  0085               	movwf	5
  5141  0EEF  3F00               	moviw [0]fsr0
  5142  0EF0  00B2               	movwf	??_Modem_Init
  5143  0EF1  3F01               	moviw [1]fsr0
  5144  0EF2  00B3               	movwf	??_Modem_Init+1
  5145  0EF3  0832               	movf	??_Modem_Init,w
  5146  0EF4  00F2               	movwf	___lmul@multiplier
  5147  0EF5  0833               	movf	??_Modem_Init+1,w
  5148  0EF6  00F3               	movwf	___lmul@multiplier+1
  5149  0EF7  0D89               	rlf	9,f
  5150  0EF8  3B89               	subwfb	9,f
  5151  0EF9  0989               	comf	9,f
  5152  0EFA  00F4               	movwf	___lmul@multiplier+2
  5153  0EFB  00F5               	movwf	___lmul@multiplier+3
  5154  0EFC  3197  2764  318E   	fcall	___lmul
  5155  0EFF  0872               	movf	?___lmul,w
  5156  0F00  0020               	movlb	0	; select bank0
  5157  0F01  00B4               	movwf	??_Modem_Init+2
  5158  0F02  0873               	movf	?___lmul+1,w
  5159  0F03  00B5               	movwf	??_Modem_Init+3
  5160  0F04  0874               	movf	?___lmul+2,w
  5161  0F05  00B6               	movwf	??_Modem_Init+4
  5162  0F06  0875               	movf	?___lmul+3,w
  5163  0F07  00B7               	movwf	??_Modem_Init+5
  5164  0F08  3007               	movlw	7
  5165  0F09                     u5245:	
  5166  0F09  35B4               	lslf	??_Modem_Init+2,f
  5167  0F0A  0DB5               	rlf	??_Modem_Init+3,f
  5168  0F0B  0DB6               	rlf	??_Modem_Init+4,f
  5169  0F0C  0DB7               	rlf	??_Modem_Init+5,f
  5170  0F0D  0B89               	decfsz	9,f
  5171  0F0E  2F09               	goto	u5245
  5172  0F0F  0837               	movf	??_Modem_Init+5,w
  5173  0F10  00AB               	movwf	___lldiv@dividend+3
  5174  0F11  0836               	movf	??_Modem_Init+4,w
  5175  0F12  00AA               	movwf	___lldiv@dividend+2
  5176  0F13  0835               	movf	??_Modem_Init+3,w
  5177  0F14  00A9               	movwf	___lldiv@dividend+1
  5178  0F15  0834               	movf	??_Modem_Init+2,w
  5179  0F16  00A8               	movwf	___lldiv@dividend
  5180  0F17  3188  205F         	fcall	___lldiv
  5181  0F19  0020               	movlb	0	; select bank0
  5182  0F1A  0827               	movf	?___lldiv+3,w
  5183  0F1B  0022               	movlb	2	; select bank2
  5184  0F1C  00AB               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  5185  0F1D  0020               	movlb	0	; select bank0
  5186  0F1E  0826               	movf	?___lldiv+2,w
  5187  0F1F  0022               	movlb	2	; select bank2
  5188  0F20  00AA               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  5189  0F21  0020               	movlb	0	; select bank0
  5190  0F22  0825               	movf	?___lldiv+1,w
  5191  0F23  0022               	movlb	2	; select bank2
  5192  0F24  00A9               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  5193  0F25  0020               	movlb	0	; select bank0
  5194  0F26  0824               	movf	?___lldiv,w
  5195  0F27  0022               	movlb	2	; select bank2
  5196  0F28  00A8               	movwf	_PHASE_DELTA_2200^(0+256)
  5197  0F29  0008               	return
  5198  0F2A                     __end_of_Modem_Init:	
  5199                           
  5200                           	psect	text23
  5201  1764                     __ptext23:	
  5202 ;; *************** function ___lmul *****************
  5203 ;; Defined at:
  5204 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;  multiplier      4    2[COMMON] unsigned long 
  5207 ;;  multiplicand    4    6[COMMON] unsigned long 
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;  product         4    0[BANK0 ] unsigned long 
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  4    2[COMMON] unsigned long 
  5212 ;; Registers used:
  5213 ;;		wreg, status,2, status,0
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5219 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5220 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5222 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5223 ;;Total ram usage:       12 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    1
  5226 ;; This function calls:
  5227 ;;		Nothing
  5228 ;; This function is called by:
  5229 ;;		_Modem_Init
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           
  5234                           ;psect for function ___lmul
  5235  1764                     ___lmul:	
  5236                           
  5237                           ;incstack = 0
  5238                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5239  1764  3000               	movlw	0
  5240  1765  0020               	movlb	0	; select bank0
  5241  1766  00A3               	movwf	___lmul@product+3
  5242  1767  3000               	movlw	0
  5243  1768  00A2               	movwf	___lmul@product+2
  5244  1769  3000               	movlw	0
  5245  176A  00A1               	movwf	___lmul@product+1
  5246  176B  3000               	movlw	0
  5247  176C  00A0               	movwf	___lmul@product
  5248  176D                     l2589:	
  5249  176D  1C72               	btfss	___lmul@multiplier,0
  5250  176E  2F78               	goto	l2593
  5251  176F  0876               	movf	___lmul@multiplicand,w
  5252  1770  0020               	movlb	0	; select bank0
  5253  1771  07A0               	addwf	___lmul@product,f
  5254  1772  0877               	movf	___lmul@multiplicand+1,w
  5255  1773  3DA1               	addwfc	___lmul@product+1,f
  5256  1774  0878               	movf	___lmul@multiplicand+2,w
  5257  1775  3DA2               	addwfc	___lmul@product+2,f
  5258  1776  0879               	movf	___lmul@multiplicand+3,w
  5259  1777  3DA3               	addwfc	___lmul@product+3,f
  5260  1778                     l2593:	
  5261  1778  3001               	movlw	1
  5262  1779                     u3375:	
  5263  1779  35F6               	lslf	___lmul@multiplicand,f
  5264  177A  0DF7               	rlf	___lmul@multiplicand+1,f
  5265  177B  0DF8               	rlf	___lmul@multiplicand+2,f
  5266  177C  0DF9               	rlf	___lmul@multiplicand+3,f
  5267  177D  0B89               	decfsz	9,f
  5268  177E  2F79               	goto	u3375
  5269  177F  3001               	movlw	1
  5270  1780                     u3385:	
  5271  1780  36F5               	lsrf	___lmul@multiplier+3,f
  5272  1781  0CF4               	rrf	___lmul@multiplier+2,f
  5273  1782  0CF3               	rrf	___lmul@multiplier+1,f
  5274  1783  0CF2               	rrf	___lmul@multiplier,f
  5275  1784  0B89               	decfsz	9,f
  5276  1785  2F80               	goto	u3385
  5277  1786  0875               	movf	___lmul@multiplier+3,w
  5278  1787  0474               	iorwf	___lmul@multiplier+2,w
  5279  1788  0473               	iorwf	___lmul@multiplier+1,w
  5280  1789  0472               	iorwf	___lmul@multiplier,w
  5281  178A  1D03               	skipz
  5282  178B  2F6D               	goto	l2589
  5283  178C  0020               	movlb	0	; select bank0
  5284  178D  0823               	movf	___lmul@product+3,w
  5285  178E  00F5               	movwf	?___lmul+3
  5286  178F  0822               	movf	___lmul@product+2,w
  5287  1790  00F4               	movwf	?___lmul+2
  5288  1791  0821               	movf	___lmul@product+1,w
  5289  1792  00F3               	movwf	?___lmul+1
  5290  1793  0820               	movf	___lmul@product,w
  5291  1794  00F2               	movwf	?___lmul
  5292  1795  0008               	return
  5293  1796                     __end_of___lmul:	
  5294                           
  5295                           	psect	text24
  5296  085F                     __ptext24:	
  5297 ;; *************** function ___lldiv *****************
  5298 ;; Defined at:
  5299 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  divisor         4    4[BANK0 ] unsigned long 
  5302 ;;  dividend        4    8[BANK0 ] unsigned long 
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;  quotient        4   13[BANK0 ] unsigned long 
  5305 ;;  counter         1   17[BANK0 ] unsigned char 
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  4    4[BANK0 ] unsigned long 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2, status,0
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5315 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5316 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5317 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5319 ;;Total ram usage:       14 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    1
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_Set_Freq
  5326 ;;		_Modem_Init
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           
  5331                           ;psect for function ___lldiv
  5332  085F                     ___lldiv:	
  5333                           
  5334                           ;incstack = 0
  5335                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5336  085F  3000               	movlw	0
  5337  0860  0020               	movlb	0	; select bank0
  5338  0861  00B0               	movwf	___lldiv@quotient+3
  5339  0862  3000               	movlw	0
  5340  0863  00AF               	movwf	___lldiv@quotient+2
  5341  0864  3000               	movlw	0
  5342  0865  00AE               	movwf	___lldiv@quotient+1
  5343  0866  3000               	movlw	0
  5344  0867  00AD               	movwf	___lldiv@quotient
  5345  0868  0827               	movf	___lldiv@divisor+3,w
  5346  0869  0426               	iorwf	___lldiv@divisor+2,w
  5347  086A  0425               	iorwf	___lldiv@divisor+1,w
  5348  086B  0424               	iorwf	___lldiv@divisor,w
  5349  086C  1903               	skipnz
  5350  086D  28A9               	goto	l3341
  5351  086E  01B1               	clrf	___lldiv@counter
  5352  086F  0AB1               	incf	___lldiv@counter,f
  5353  0870                     l3327:	
  5354  0870  1BA7               	btfsc	___lldiv@divisor+3,7
  5355  0871  287E               	goto	l3329
  5356  0872  3001               	movlw	1
  5357  0873                     u4965:	
  5358  0873  35A4               	lslf	___lldiv@divisor,f
  5359  0874  0DA5               	rlf	___lldiv@divisor+1,f
  5360  0875  0DA6               	rlf	___lldiv@divisor+2,f
  5361  0876  0DA7               	rlf	___lldiv@divisor+3,f
  5362  0877  0B89               	decfsz	9,f
  5363  0878  2873               	goto	u4965
  5364  0879  3001               	movlw	1
  5365  087A  00AC               	movwf	??___lldiv
  5366  087B  082C               	movf	??___lldiv,w
  5367  087C  07B1               	addwf	___lldiv@counter,f
  5368  087D  2870               	goto	l3327
  5369  087E                     l3329:	
  5370  087E  3001               	movlw	1
  5371  087F                     u4985:	
  5372  087F  35AD               	lslf	___lldiv@quotient,f
  5373  0880  0DAE               	rlf	___lldiv@quotient+1,f
  5374  0881  0DAF               	rlf	___lldiv@quotient+2,f
  5375  0882  0DB0               	rlf	___lldiv@quotient+3,f
  5376  0883  0B89               	decfsz	9,f
  5377  0884  287F               	goto	u4985
  5378  0885  0827               	movf	___lldiv@divisor+3,w
  5379  0886  022B               	subwf	___lldiv@dividend+3,w
  5380  0887  1D03               	skipz
  5381  0888  2893               	goto	u4995
  5382  0889  0826               	movf	___lldiv@divisor+2,w
  5383  088A  022A               	subwf	___lldiv@dividend+2,w
  5384  088B  1D03               	skipz
  5385  088C  2893               	goto	u4995
  5386  088D  0825               	movf	___lldiv@divisor+1,w
  5387  088E  0229               	subwf	___lldiv@dividend+1,w
  5388  088F  1D03               	skipz
  5389  0890  2893               	goto	u4995
  5390  0891  0824               	movf	___lldiv@divisor,w
  5391  0892  0228               	subwf	___lldiv@dividend,w
  5392  0893                     u4995:	
  5393  0893  1C03               	skipc
  5394  0894  289E               	goto	l3337
  5395  0895  0824               	movf	___lldiv@divisor,w
  5396  0896  02A8               	subwf	___lldiv@dividend,f
  5397  0897  0825               	movf	___lldiv@divisor+1,w
  5398  0898  3BA9               	subwfb	___lldiv@dividend+1,f
  5399  0899  0826               	movf	___lldiv@divisor+2,w
  5400  089A  3BAA               	subwfb	___lldiv@dividend+2,f
  5401  089B  0827               	movf	___lldiv@divisor+3,w
  5402  089C  3BAB               	subwfb	___lldiv@dividend+3,f
  5403  089D  142D               	bsf	___lldiv@quotient,0
  5404  089E                     l3337:	
  5405  089E  3001               	movlw	1
  5406  089F                     u5005:	
  5407  089F  36A7               	lsrf	___lldiv@divisor+3,f
  5408  08A0  0CA6               	rrf	___lldiv@divisor+2,f
  5409  08A1  0CA5               	rrf	___lldiv@divisor+1,f
  5410  08A2  0CA4               	rrf	___lldiv@divisor,f
  5411  08A3  0B89               	decfsz	9,f
  5412  08A4  289F               	goto	u5005
  5413  08A5  3001               	movlw	1
  5414  08A6  02B1               	subwf	___lldiv@counter,f
  5415  08A7  1D03               	btfss	3,2
  5416  08A8  287E               	goto	l3329
  5417  08A9                     l3341:	
  5418  08A9  0830               	movf	___lldiv@quotient+3,w
  5419  08AA  00A7               	movwf	?___lldiv+3
  5420  08AB  082F               	movf	___lldiv@quotient+2,w
  5421  08AC  00A6               	movwf	?___lldiv+2
  5422  08AD  082E               	movf	___lldiv@quotient+1,w
  5423  08AE  00A5               	movwf	?___lldiv+1
  5424  08AF  082D               	movf	___lldiv@quotient,w
  5425  08B0  00A4               	movwf	?___lldiv
  5426  08B1  0008               	return
  5427  08B2                     __end_of___lldiv:	
  5428                           
  5429                           	psect	text25
  5430  16E2                     __ptext25:	
  5431 ;; *************** function _Modem_Flush_Frame *****************
  5432 ;; Defined at:
  5433 ;;		line 133 in file "audio_tone.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;		None               void
  5440 ;; Registers used:
  5441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;Total ram usage:        0 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    9
  5454 ;; This function calls:
  5455 ;;		_Delay_ms
  5456 ;;		_Ptt_On
  5457 ;;		_Timer0_Start
  5458 ;; This function is called by:
  5459 ;;		_main
  5460 ;;		_Ax25_Flush_Frame
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           
  5465                           ;psect for function _Modem_Flush_Frame
  5466  16E2                     _Modem_Flush_Frame:	
  5467                           
  5468                           ;audio_tone.c: 135: phase_delta = PHASE_DELTA_1200;
  5469                           
  5470                           ;incstack = 0
  5471                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5472  16E2  0022               	movlb	2	; select bank2
  5473  16E3  0827               	movf	(_PHASE_DELTA_1200+3)^(0+256),w
  5474  16E4  00B3               	movwf	(_phase_delta+3)^(0+256)
  5475  16E5  0826               	movf	(_PHASE_DELTA_1200+2)^(0+256),w
  5476  16E6  00B2               	movwf	(_phase_delta+2)^(0+256)
  5477  16E7  0825               	movf	(_PHASE_DELTA_1200+1)^(0+256),w
  5478  16E8  00B1               	movwf	(_phase_delta+1)^(0+256)
  5479  16E9  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  5480  16EA  00B0               	movwf	_phase_delta^(0+256)
  5481                           
  5482                           ;audio_tone.c: 136: phase = 0;
  5483  16EB  3000               	movlw	0
  5484  16EC  00AF               	movwf	(_phase+3)^(0+256)
  5485  16ED  3000               	movlw	0
  5486  16EE  00AE               	movwf	(_phase+2)^(0+256)
  5487  16EF  3000               	movlw	0
  5488  16F0  00AD               	movwf	(_phase+1)^(0+256)
  5489  16F1  3000               	movlw	0
  5490  16F2  00AC               	movwf	_phase^(0+256)
  5491                           
  5492                           ;audio_tone.c: 137: packet_pos = 0;
  5493  16F3  3000               	movlw	0
  5494  16F4  0021               	movlb	1	; select bank1
  5495  16F5  00CE               	movwf	(_packet_pos+3)^(0+128)
  5496  16F6  3000               	movlw	0
  5497  16F7  00CD               	movwf	(_packet_pos+2)^(0+128)
  5498  16F8  3000               	movlw	0
  5499  16F9  00CC               	movwf	(_packet_pos+1)^(0+128)
  5500  16FA  3000               	movlw	0
  5501  16FB  00CB               	movwf	_packet_pos^(0+128)
  5502                           
  5503                           ;audio_tone.c: 138: current_sample_in_baud = 0;
  5504  16FC  01D7               	clrf	_current_sample_in_baud^(0+128)
  5505                           
  5506                           ;audio_tone.c: 139: MODEM_TRANSMITTING = 1;
  5507  16FD  01D3               	clrf	_MODEM_TRANSMITTING^(0+128)
  5508  16FE  0AD3               	incf	_MODEM_TRANSMITTING^(0+128),f
  5509                           
  5510                           ;audio_tone.c: 142: Ptt_On();
  5511  16FF  3197  27CA  3196   	fcall	_Ptt_On
  5512                           
  5513                           ;audio_tone.c: 144: Delay_ms(100);
  5514  1702  3064               	movlw	100
  5515  1703  00F7               	movwf	Delay_ms@time_to_delay
  5516  1704  3000               	movlw	0
  5517  1705  00F8               	movwf	Delay_ms@time_to_delay+1
  5518  1706  3195  255A  3196   	fcall	_Delay_ms
  5519                           
  5520                           ;audio_tone.c: 146: Timer0_Start();
  5521  1709  3195  252C         	fcall	_Timer0_Start
  5522  170B  0008               	return
  5523  170C                     __end_of_Modem_Flush_Frame:	
  5524                           
  5525                           	psect	text26
  5526  152C                     __ptext26:	
  5527 ;; *************** function _Timer0_Start *****************
  5528 ;; Defined at:
  5529 ;;		line 254 in file "utility.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;		None               void
  5536 ;; Registers used:
  5537 ;;		status,2
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5547 ;;Total ram usage:        0 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    1
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_main
  5554 ;;		_Modem_Flush_Frame
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           
  5559                           ;psect for function _Timer0_Start
  5560  152C                     _Timer0_Start:	
  5561                           
  5562                           ;utility.c: 255: TMR0 = 0x00;
  5563                           
  5564                           ;incstack = 0
  5565                           ; Regs used in _Timer0_Start: [status,2]
  5566  152C  0020               	movlb	0	; select bank0
  5567  152D  0195               	clrf	21	;volatile
  5568                           
  5569                           ;utility.c: 256: TMR0IF = 0;
  5570  152E  110B               	bcf	11,2	;volatile
  5571                           
  5572                           ;utility.c: 257: TMR0IE = 1;
  5573  152F  168B               	bsf	11,5	;volatile
  5574  1530  0008               	return
  5575  1531                     __end_of_Timer0_Start:	
  5576                           
  5577                           	psect	text27
  5578  17CA                     __ptext27:	
  5579 ;; *************** function _Ptt_On *****************
  5580 ;; Defined at:
  5581 ;;		line 319 in file "adf7012.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;		None
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      unsigned char 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5599 ;;Total ram usage:        1 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    8
  5602 ;; This function calls:
  5603 ;;		_Adf_Lock
  5604 ;;		_Adf_Write_Config
  5605 ;;		_Delay_ms
  5606 ;;		_Read_Adf7012_Muxout
  5607 ;; This function is called by:
  5608 ;;		_main
  5609 ;;		_Modem_Flush_Frame
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function _Ptt_On
  5615  17CA                     _Ptt_On:	
  5616                           
  5617                           ;adf7012.c: 324: adf_config.r3.pa_enable = 0;
  5618                           
  5619                           ;incstack = 0
  5620                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5621  17CA  0021               	movlb	1	; select bank1
  5622  17CB  01BA               	clrf	(_adf_config^(0+128)+26)
  5623                           
  5624                           ;adf7012.c: 325: adf_config.r2.power_amplifier_level = 0;
  5625  17CC  01B2               	clrf	(_adf_config^(0+128)+18)
  5626                           
  5627                           ;adf7012.c: 326: adf_config.r3.muxout = 3;
  5628  17CD  3003               	movlw	3
  5629  17CE  0020               	movlb	0	; select bank0
  5630  17CF  00ED               	movwf	??_Ptt_On
  5631  17D0  086D               	movf	??_Ptt_On,w
  5632  17D1  0021               	movlb	1	; select bank1
  5633  17D2  00C1               	movwf	(_adf_config^(0+128)+33)
  5634                           
  5635                           ;adf7012.c: 328: Adf_Write_Config();
  5636  17D3  3195  2566  3197   	fcall	_Adf_Write_Config
  5637                           
  5638                           ;adf7012.c: 329: Delay_ms(10);
  5639  17D6  300A               	movlw	10
  5640  17D7  00F7               	movwf	Delay_ms@time_to_delay
  5641  17D8  3000               	movlw	0
  5642  17D9  00F8               	movwf	Delay_ms@time_to_delay+1
  5643  17DA  3195  255A  3197   	fcall	_Delay_ms
  5644                           
  5645                           ;adf7012.c: 333: if (!Read_Adf7012_Muxout())
  5646  17DD  3195  25A3  3197   	fcall	_Read_Adf7012_Muxout
  5647  17E0  3800               	iorlw	0
  5648  17E1  1903               	btfsc	3,2
  5649  17E2  0008               	return
  5650                           
  5651                           ;adf7012.c: 337: else
  5652                           ;adf7012.c: 338: {
  5653                           ;adf7012.c: 340: Adf_Lock();
  5654                           
  5655                           ;adf7012.c: 336: }
  5656                           
  5657                           ;adf7012.c: 334: {
  5658                           ;adf7012.c: 335: return 0;
  5659                           ;	Return value of _Ptt_On is never used
  5660  17E3  3180  207F  3197   	fcall	_Adf_Lock
  5661                           
  5662                           ;adf7012.c: 341: adf_config.r3.pa_enable = 1;
  5663  17E6  0021               	movlb	1	; select bank1
  5664  17E7  01BA               	clrf	(_adf_config^(0+128)+26)
  5665  17E8  0ABA               	incf	(_adf_config^(0+128)+26),f
  5666                           
  5667                           ;adf7012.c: 342: adf_config.r2.power_amplifier_level = 63;
  5668  17E9  303F               	movlw	63
  5669  17EA  0020               	movlb	0	; select bank0
  5670  17EB  00ED               	movwf	??_Ptt_On
  5671  17EC  086D               	movf	??_Ptt_On,w
  5672  17ED  0021               	movlb	1	; select bank1
  5673  17EE  00B2               	movwf	(_adf_config^(0+128)+18)
  5674                           
  5675                           ;adf7012.c: 344: Delay_ms(10);
  5676  17EF  300A               	movlw	10
  5677  17F0  00F7               	movwf	Delay_ms@time_to_delay
  5678  17F1  3000               	movlw	0
  5679  17F2  00F8               	movwf	Delay_ms@time_to_delay+1
  5680  17F3  3195  255A  3197   	fcall	_Delay_ms
  5681                           
  5682                           ;adf7012.c: 345: Adf_Write_Config();
  5683  17F6  3195  2566  3197   	fcall	_Adf_Write_Config
  5684                           
  5685                           ;adf7012.c: 346: Delay_ms(1);
  5686  17F9  3001               	movlw	1
  5687  17FA  00F7               	movwf	Delay_ms@time_to_delay
  5688  17FB  3000               	movlw	0
  5689  17FC  00F8               	movwf	Delay_ms@time_to_delay+1
  5690  17FD  3195  255A         	fcall	_Delay_ms
  5691                           
  5692                           ;adf7012.c: 348: return 1;
  5693                           ;	Return value of _Ptt_On is never used
  5694  17FF  0008               	return
  5695  1800                     __end_of_Ptt_On:	
  5696                           
  5697                           	psect	text28
  5698  007F                     __ptext28:	
  5699 ;; *************** function _Adf_Lock *****************
  5700 ;; Defined at:
  5701 ;;		line 232 in file "adf7012.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  bias            2    2[BANK1 ] int 
  5706 ;;  adj             2    0[BANK1 ] int 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  2  324[COMMON] int 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5717 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5718 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5719 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5720 ;;Total ram usage:        6 bytes
  5721 ;; Hardware stack levels used:    1
  5722 ;; Hardware stack levels required when called:    7
  5723 ;; This function calls:
  5724 ;;		_Adf_Locked
  5725 ;;		_Adf_Write_Config
  5726 ;;		_Delay_ms
  5727 ;; This function is called by:
  5728 ;;		_Ptt_On
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           
  5733                           ;psect for function _Adf_Lock
  5734  007F                     _Adf_Lock:	
  5735                           
  5736                           ;adf7012.c: 235: Delay_ms(200);
  5737                           
  5738                           ;incstack = 0
  5739                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5740  007F  30C8               	movlw	200
  5741  0080  00F7               	movwf	Delay_ms@time_to_delay
  5742  0081  3000               	movlw	0
  5743  0082  00F8               	movwf	Delay_ms@time_to_delay+1
  5744  0083  3195  255A  3180   	fcall	_Delay_ms
  5745                           
  5746                           ;adf7012.c: 236: int adj = adf_config.r0.vco_adjust;
  5747  0086  0021               	movlb	1	; select bank1
  5748  0087  0828               	movf	(_adf_config^(0+128)+8),w
  5749  0088  0020               	movlb	0	; select bank0
  5750  0089  00EB               	movwf	??_Adf_Lock
  5751  008A  01EC               	clrf	??_Adf_Lock+1
  5752  008B  086B               	movf	??_Adf_Lock,w
  5753  008C  0021               	movlb	1	; select bank1
  5754  008D  00DB               	movwf	Adf_Lock@adj^(0+128)
  5755  008E  0020               	movlb	0	; select bank0
  5756  008F  086C               	movf	??_Adf_Lock+1,w
  5757  0090  0021               	movlb	1	; select bank1
  5758  0091  00DC               	movwf	(Adf_Lock@adj+1)^(0+128)
  5759                           
  5760                           ;adf7012.c: 237: int bias = adf_config.r3.vco_bias;
  5761  0092  0843               	movf	(_adf_config^(0+128)+35),w
  5762  0093  0020               	movlb	0	; select bank0
  5763  0094  00EB               	movwf	??_Adf_Lock
  5764  0095  01EC               	clrf	??_Adf_Lock+1
  5765  0096  086B               	movf	??_Adf_Lock,w
  5766  0097  0021               	movlb	1	; select bank1
  5767  0098  00DD               	movwf	Adf_Lock@bias^(0+128)
  5768  0099  0020               	movlb	0	; select bank0
  5769  009A  086C               	movf	??_Adf_Lock+1,w
  5770  009B  0021               	movlb	1	; select bank1
  5771  009C  00DE               	movwf	(Adf_Lock@bias+1)^(0+128)
  5772                           
  5773                           ;adf7012.c: 239: adf_config.r3.pll_enable = 1;
  5774  009D  01B9               	clrf	(_adf_config^(0+128)+25)
  5775  009E  0AB9               	incf	(_adf_config^(0+128)+25),f
  5776                           
  5777                           ;adf7012.c: 241: adf_config.r3.muxout = 5;
  5778  009F  3005               	movlw	5
  5779  00A0  0020               	movlb	0	; select bank0
  5780  00A1  00EB               	movwf	??_Adf_Lock
  5781  00A2  086B               	movf	??_Adf_Lock,w
  5782  00A3  0021               	movlb	1	; select bank1
  5783  00A4  00C1               	movwf	(_adf_config^(0+128)+33)
  5784                           
  5785                           ;adf7012.c: 243: Adf_Write_Config();
  5786  00A5  3195  2566  3180   	fcall	_Adf_Write_Config
  5787                           
  5788                           ;adf7012.c: 244: Delay_ms(5);
  5789  00A8  3005               	movlw	5
  5790  00A9  00F7               	movwf	Delay_ms@time_to_delay
  5791  00AA  3000               	movlw	0
  5792  00AB  00F8               	movwf	Delay_ms@time_to_delay+1
  5793  00AC  3195  255A  3180   	fcall	_Delay_ms
  5794  00AF                     l3385:	
  5795                           ;adf7012.c: 246: while(!Adf_Locked()) {
  5796                           
  5797  00AF  3187  27FD  3180   	fcall	_Adf_Locked
  5798  00B2  3A00               	xorlw	0
  5799  00B3  1D03               	btfss	3,2
  5800  00B4  0008               	return
  5801                           
  5802                           ;adf7012.c: 248: adf_config.r0.vco_adjust = adj;
  5803  00B5  0021               	movlb	1	; select bank1
  5804  00B6  085B               	movf	Adf_Lock@adj^(0+128),w
  5805  00B7  0020               	movlb	0	; select bank0
  5806  00B8  00EB               	movwf	??_Adf_Lock
  5807  00B9  086B               	movf	??_Adf_Lock,w
  5808  00BA  0021               	movlb	1	; select bank1
  5809  00BB  00A8               	movwf	(_adf_config^(0+128)+8)
  5810                           
  5811                           ;adf7012.c: 249: adf_config.r3.vco_bias = bias;
  5812  00BC  085D               	movf	Adf_Lock@bias^(0+128),w
  5813  00BD  0020               	movlb	0	; select bank0
  5814  00BE  00EB               	movwf	??_Adf_Lock
  5815  00BF  086B               	movf	??_Adf_Lock,w
  5816  00C0  0021               	movlb	1	; select bank1
  5817  00C1  00C3               	movwf	(_adf_config^(0+128)+35)
  5818                           
  5819                           ;adf7012.c: 251: adf_config.r3.muxout = 5;
  5820  00C2  3005               	movlw	5
  5821  00C3  0020               	movlb	0	; select bank0
  5822  00C4  00EB               	movwf	??_Adf_Lock
  5823  00C5  086B               	movf	??_Adf_Lock,w
  5824  00C6  0021               	movlb	1	; select bank1
  5825  00C7  00C1               	movwf	(_adf_config^(0+128)+33)
  5826                           
  5827                           ;adf7012.c: 252: Adf_Write_Config();
  5828  00C8  3195  2566  3180   	fcall	_Adf_Write_Config
  5829                           
  5830                           ;adf7012.c: 253: Delay_ms(5);
  5831  00CB  3005               	movlw	5
  5832  00CC  00F7               	movwf	Delay_ms@time_to_delay
  5833  00CD  3000               	movlw	0
  5834  00CE  00F8               	movwf	Delay_ms@time_to_delay+1
  5835  00CF  3195  255A  3180   	fcall	_Delay_ms
  5836                           
  5837                           ;adf7012.c: 254: if(++bias == 14) {
  5838  00D2  3001               	movlw	1
  5839  00D3  0021               	movlb	1	; select bank1
  5840  00D4  07DD               	addwf	Adf_Lock@bias^(0+128),f
  5841  00D5  3000               	movlw	0
  5842  00D6  3DDE               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  5843  00D7  300E               	movlw	14
  5844  00D8  065D               	xorwf	Adf_Lock@bias^(0+128),w
  5845  00D9  045E               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  5846  00DA  1D03               	skipz
  5847  00DB  28AF               	goto	l3385
  5848                           
  5849                           ;adf7012.c: 255: bias = 1;
  5850  00DC  3001               	movlw	1
  5851  00DD  00DD               	movwf	Adf_Lock@bias^(0+128)
  5852  00DE  3000               	movlw	0
  5853  00DF  00DE               	movwf	(Adf_Lock@bias^(0+128)+1)
  5854                           
  5855                           ;adf7012.c: 256: if(++adj == 4) {
  5856  00E0  3001               	movlw	1
  5857  00E1  07DB               	addwf	Adf_Lock@adj^(0+128),f
  5858  00E2  3000               	movlw	0
  5859  00E3  3DDC               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  5860  00E4  3004               	movlw	4
  5861  00E5  065B               	xorwf	Adf_Lock@adj^(0+128),w
  5862  00E6  045C               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  5863  00E7  1D03               	skipz
  5864  00E8  28AF               	goto	l3385
  5865                           
  5866                           ;adf7012.c: 259: adf_config.r0.vco_adjust = 0;
  5867  00E9  01A8               	clrf	(_adf_config^(0+128)+8)
  5868                           
  5869                           ;adf7012.c: 260: adf_config.r3.vco_bias = 5;
  5870  00EA  3005               	movlw	5
  5871  00EB  0020               	movlb	0	; select bank0
  5872  00EC  00EB               	movwf	??_Adf_Lock
  5873  00ED  086B               	movf	??_Adf_Lock,w
  5874  00EE  0021               	movlb	1	; select bank1
  5875  00EF  00C3               	movwf	(_adf_config^(0+128)+35)
  5876                           
  5877                           ;adf7012.c: 262: return 0;
  5878                           ;	Return value of _Adf_Lock is never used
  5879  00F0  0008               	return
  5880  00F1                     __end_of_Adf_Lock:	
  5881                           ;adf7012.c: 263: }
  5882                           ;adf7012.c: 264: }
  5883                           ;adf7012.c: 265: }
  5884                           ;adf7012.c: 269: return 1;
  5885                           ;	Return value of _Adf_Lock is never used
  5886                           
  5887                           
  5888                           	psect	text29
  5889  1566                     __ptext29:	
  5890 ;; *************** function _Adf_Write_Config *****************
  5891 ;; Defined at:
  5892 ;;		line 151 in file "adf7012.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;		None
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;		None               void
  5899 ;; Registers used:
  5900 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;Total ram usage:        0 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    6
  5913 ;; This function calls:
  5914 ;;		_Adf_Write_Register_One
  5915 ;;		_Adf_Write_Register_Three
  5916 ;;		_Adf_Write_Register_Two
  5917 ;;		_Adf_Write_Register_Zero
  5918 ;; This function is called by:
  5919 ;;		_Adf_Lock
  5920 ;;		_Radio_Setup
  5921 ;;		_Ptt_On
  5922 ;;		_Ptt_Off
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           
  5927                           ;psect for function _Adf_Write_Config
  5928  1566                     _Adf_Write_Config:	
  5929                           
  5930                           ;adf7012.c: 152: Adf_Write_Register_Zero();
  5931                           
  5932                           ;incstack = 0
  5933                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5934  1566  318D  2596  3195   	fcall	_Adf_Write_Register_Zero
  5935                           
  5936                           ;adf7012.c: 153: Adf_Write_Register_One();
  5937  1569  3189  2112  3195   	fcall	_Adf_Write_Register_One
  5938                           
  5939                           ;adf7012.c: 154: Adf_Write_Register_Two();
  5940  156C  318C  24DF  3195   	fcall	_Adf_Write_Register_Two
  5941                           
  5942                           ;adf7012.c: 155: Adf_Write_Register_Three();
  5943  156F  3183  230E         	fcall	_Adf_Write_Register_Three
  5944  1571  0008               	return
  5945  1572                     __end_of_Adf_Write_Config:	
  5946                           
  5947                           	psect	text30
  5948  0D96                     __ptext30:	
  5949 ;; *************** function _Adf_Write_Register_Zero *****************
  5950 ;; Defined at:
  5951 ;;		line 158 in file "adf7012.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;		None
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  reg_ptr         4   39[BANK0 ] unsigned char [4]
  5956 ;;  reg             4   43[BANK0 ] unsigned long 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;		None               void
  5959 ;; Registers used:
  5960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;Total ram usage:       36 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; Hardware stack levels required when called:    5
  5973 ;; This function calls:
  5974 ;;		_Reverse_Array
  5975 ;;		_Write_Adf7012_Reg
  5976 ;;		_memcpy
  5977 ;; This function is called by:
  5978 ;;		_Adf_Write_Config
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function _Adf_Write_Register_Zero
  5984  0D96                     _Adf_Write_Register_Zero:	
  5985                           
  5986                           ;adf7012.c: 160: uint32_t reg =
  5987                           ;adf7012.c: 161: (0) |
  5988                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  5989                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  5990                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  5991                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  5992                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  5993                           ;adf7012.c: 167: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  5994                           
  5995                           ;incstack = 0
  5996                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  5997  0D96  0021               	movlb	1	; select bank1
  5998  0D97  0829               	movf	(_adf_config^(0+128)+9),w
  5999  0D98  3903               	andlw	3
  6000  0D99  0020               	movlb	0	; select bank0
  6001  0D9A  00AB               	movwf	??_Adf_Write_Register_Zero
  6002  0D9B  01AC               	clrf	??_Adf_Write_Register_Zero+1
  6003  0D9C  01AD               	clrf	??_Adf_Write_Register_Zero+2
  6004  0D9D  01AE               	clrf	??_Adf_Write_Register_Zero+3
  6005  0D9E  3019               	movlw	25
  6006  0D9F                     u4005:	
  6007  0D9F  35AB               	lslf	??_Adf_Write_Register_Zero,f
  6008  0DA0  0DAC               	rlf	??_Adf_Write_Register_Zero+1,f
  6009  0DA1  0DAD               	rlf	??_Adf_Write_Register_Zero+2,f
  6010  0DA2  0DAE               	rlf	??_Adf_Write_Register_Zero+3,f
  6011  0DA3  0B89               	decfsz	9,f
  6012  0DA4  2D9F               	goto	u4005
  6013  0DA5  0021               	movlb	1	; select bank1
  6014  0DA6  0828               	movf	(_adf_config^(0+128)+8),w
  6015  0DA7  3903               	andlw	3
  6016  0DA8  0020               	movlb	0	; select bank0
  6017  0DA9  00AF               	movwf	??_Adf_Write_Register_Zero+4
  6018  0DAA  01B0               	clrf	??_Adf_Write_Register_Zero+5
  6019  0DAB  01B1               	clrf	??_Adf_Write_Register_Zero+6
  6020  0DAC  01B2               	clrf	??_Adf_Write_Register_Zero+7
  6021  0DAD  3017               	movlw	23
  6022  0DAE                     u4015:	
  6023  0DAE  35AF               	lslf	??_Adf_Write_Register_Zero+4,f
  6024  0DAF  0DB0               	rlf	??_Adf_Write_Register_Zero+5,f
  6025  0DB0  0DB1               	rlf	??_Adf_Write_Register_Zero+6,f
  6026  0DB1  0DB2               	rlf	??_Adf_Write_Register_Zero+7,f
  6027  0DB2  0B89               	decfsz	9,f
  6028  0DB3  2DAE               	goto	u4015
  6029  0DB4  0021               	movlb	1	; select bank1
  6030  0DB5  0827               	movf	(_adf_config^(0+128)+7),w
  6031  0DB6  390F               	andlw	15
  6032  0DB7  0020               	movlb	0	; select bank0
  6033  0DB8  00B3               	movwf	??_Adf_Write_Register_Zero+8
  6034  0DB9  01B4               	clrf	??_Adf_Write_Register_Zero+9
  6035  0DBA  01B5               	clrf	??_Adf_Write_Register_Zero+10
  6036  0DBB  01B6               	clrf	??_Adf_Write_Register_Zero+11
  6037  0DBC  3013               	movlw	19
  6038  0DBD                     u4025:	
  6039  0DBD  35B3               	lslf	??_Adf_Write_Register_Zero+8,f
  6040  0DBE  0DB4               	rlf	??_Adf_Write_Register_Zero+9,f
  6041  0DBF  0DB5               	rlf	??_Adf_Write_Register_Zero+10,f
  6042  0DC0  0DB6               	rlf	??_Adf_Write_Register_Zero+11,f
  6043  0DC1  0B89               	decfsz	9,f
  6044  0DC2  2DBD               	goto	u4025
  6045  0DC3  0021               	movlb	1	; select bank1
  6046  0DC4  0826               	movf	(_adf_config^(0+128)+6),w
  6047  0DC5  3901               	andlw	1
  6048  0DC6  0020               	movlb	0	; select bank0
  6049  0DC7  00B7               	movwf	??_Adf_Write_Register_Zero+12
  6050  0DC8  01B8               	clrf	??_Adf_Write_Register_Zero+13
  6051  0DC9  01B9               	clrf	??_Adf_Write_Register_Zero+14
  6052  0DCA  01BA               	clrf	??_Adf_Write_Register_Zero+15
  6053  0DCB  3012               	movlw	18
  6054  0DCC                     u4035:	
  6055  0DCC  35B7               	lslf	??_Adf_Write_Register_Zero+12,f
  6056  0DCD  0DB8               	rlf	??_Adf_Write_Register_Zero+13,f
  6057  0DCE  0DB9               	rlf	??_Adf_Write_Register_Zero+14,f
  6058  0DCF  0DBA               	rlf	??_Adf_Write_Register_Zero+15,f
  6059  0DD0  0B89               	decfsz	9,f
  6060  0DD1  2DCC               	goto	u4035
  6061  0DD2  0021               	movlb	1	; select bank1
  6062  0DD3  0825               	movf	(_adf_config^(0+128)+5),w
  6063  0DD4  3901               	andlw	1
  6064  0DD5  0020               	movlb	0	; select bank0
  6065  0DD6  00BB               	movwf	??_Adf_Write_Register_Zero+16
  6066  0DD7  01BC               	clrf	??_Adf_Write_Register_Zero+17
  6067  0DD8  01BD               	clrf	??_Adf_Write_Register_Zero+18
  6068  0DD9  01BE               	clrf	??_Adf_Write_Register_Zero+19
  6069  0DDA  3011               	movlw	17
  6070  0DDB                     u4045:	
  6071  0DDB  35BB               	lslf	??_Adf_Write_Register_Zero+16,f
  6072  0DDC  0DBC               	rlf	??_Adf_Write_Register_Zero+17,f
  6073  0DDD  0DBD               	rlf	??_Adf_Write_Register_Zero+18,f
  6074  0DDE  0DBE               	rlf	??_Adf_Write_Register_Zero+19,f
  6075  0DDF  0B89               	decfsz	9,f
  6076  0DE0  2DDB               	goto	u4045
  6077  0DE1  0021               	movlb	1	; select bank1
  6078  0DE2  0824               	movf	(_adf_config^(0+128)+4),w
  6079  0DE3  390F               	andlw	15
  6080  0DE4  0020               	movlb	0	; select bank0
  6081  0DE5  00BF               	movwf	??_Adf_Write_Register_Zero+20
  6082  0DE6  01C0               	clrf	??_Adf_Write_Register_Zero+21
  6083  0DE7  01C1               	clrf	??_Adf_Write_Register_Zero+22
  6084  0DE8  01C2               	clrf	??_Adf_Write_Register_Zero+23
  6085  0DE9  300D               	movlw	13
  6086  0DEA                     u4055:	
  6087  0DEA  35BF               	lslf	??_Adf_Write_Register_Zero+20,f
  6088  0DEB  0DC0               	rlf	??_Adf_Write_Register_Zero+21,f
  6089  0DEC  0DC1               	rlf	??_Adf_Write_Register_Zero+22,f
  6090  0DED  0DC2               	rlf	??_Adf_Write_Register_Zero+23,f
  6091  0DEE  0B89               	decfsz	9,f
  6092  0DEF  2DEA               	goto	u4055
  6093  0DF0  30FF               	movlw	255
  6094  0DF1  0021               	movlb	1	; select bank1
  6095  0DF2  0520               	andwf	_adf_config^(0+128),w
  6096  0DF3  0020               	movlb	0	; select bank0
  6097  0DF4  00C3               	movwf	??_Adf_Write_Register_Zero+24
  6098  0DF5  3007               	movlw	7
  6099  0DF6  0021               	movlb	1	; select bank1
  6100  0DF7  0521               	andwf	(_adf_config+1)^(0+128),w
  6101  0DF8  0020               	movlb	0	; select bank0
  6102  0DF9  00C4               	movwf	??_Adf_Write_Register_Zero+25
  6103  0DFA  3000               	movlw	0
  6104  0DFB  0021               	movlb	1	; select bank1
  6105  0DFC  0522               	andwf	(_adf_config+2)^(0+128),w
  6106  0DFD  0020               	movlb	0	; select bank0
  6107  0DFE  00C5               	movwf	??_Adf_Write_Register_Zero+26
  6108  0DFF  3000               	movlw	0
  6109  0E00  0021               	movlb	1	; select bank1
  6110  0E01  0523               	andwf	(_adf_config+3)^(0+128),w
  6111  0E02  0020               	movlb	0	; select bank0
  6112  0E03  00C6               	movwf	??_Adf_Write_Register_Zero+27
  6113  0E04  3002               	movlw	2
  6114  0E05                     u4065:	
  6115  0E05  35C3               	lslf	??_Adf_Write_Register_Zero+24,f
  6116  0E06  0DC4               	rlf	??_Adf_Write_Register_Zero+25,f
  6117  0E07  0DC5               	rlf	??_Adf_Write_Register_Zero+26,f
  6118  0E08  0DC6               	rlf	??_Adf_Write_Register_Zero+27,f
  6119  0E09  0B89               	decfsz	9,f
  6120  0E0A  2E05               	goto	u4065
  6121  0E0B  0843               	movf	??_Adf_Write_Register_Zero+24,w
  6122  0E0C  04BF               	iorwf	??_Adf_Write_Register_Zero+20,f
  6123  0E0D  0844               	movf	??_Adf_Write_Register_Zero+25,w
  6124  0E0E  04C0               	iorwf	??_Adf_Write_Register_Zero+21,f
  6125  0E0F  0845               	movf	??_Adf_Write_Register_Zero+26,w
  6126  0E10  04C1               	iorwf	??_Adf_Write_Register_Zero+22,f
  6127  0E11  0846               	movf	??_Adf_Write_Register_Zero+27,w
  6128  0E12  04C2               	iorwf	??_Adf_Write_Register_Zero+23,f
  6129  0E13  083F               	movf	??_Adf_Write_Register_Zero+20,w
  6130  0E14  04BB               	iorwf	??_Adf_Write_Register_Zero+16,f
  6131  0E15  0840               	movf	??_Adf_Write_Register_Zero+21,w
  6132  0E16  04BC               	iorwf	??_Adf_Write_Register_Zero+17,f
  6133  0E17  0841               	movf	??_Adf_Write_Register_Zero+22,w
  6134  0E18  04BD               	iorwf	??_Adf_Write_Register_Zero+18,f
  6135  0E19  0842               	movf	??_Adf_Write_Register_Zero+23,w
  6136  0E1A  04BE               	iorwf	??_Adf_Write_Register_Zero+19,f
  6137  0E1B  083B               	movf	??_Adf_Write_Register_Zero+16,w
  6138  0E1C  04B7               	iorwf	??_Adf_Write_Register_Zero+12,f
  6139  0E1D  083C               	movf	??_Adf_Write_Register_Zero+17,w
  6140  0E1E  04B8               	iorwf	??_Adf_Write_Register_Zero+13,f
  6141  0E1F  083D               	movf	??_Adf_Write_Register_Zero+18,w
  6142  0E20  04B9               	iorwf	??_Adf_Write_Register_Zero+14,f
  6143  0E21  083E               	movf	??_Adf_Write_Register_Zero+19,w
  6144  0E22  04BA               	iorwf	??_Adf_Write_Register_Zero+15,f
  6145  0E23  0837               	movf	??_Adf_Write_Register_Zero+12,w
  6146  0E24  04B3               	iorwf	??_Adf_Write_Register_Zero+8,f
  6147  0E25  0838               	movf	??_Adf_Write_Register_Zero+13,w
  6148  0E26  04B4               	iorwf	??_Adf_Write_Register_Zero+9,f
  6149  0E27  0839               	movf	??_Adf_Write_Register_Zero+14,w
  6150  0E28  04B5               	iorwf	??_Adf_Write_Register_Zero+10,f
  6151  0E29  083A               	movf	??_Adf_Write_Register_Zero+15,w
  6152  0E2A  04B6               	iorwf	??_Adf_Write_Register_Zero+11,f
  6153  0E2B  0833               	movf	??_Adf_Write_Register_Zero+8,w
  6154  0E2C  04AF               	iorwf	??_Adf_Write_Register_Zero+4,f
  6155  0E2D  0834               	movf	??_Adf_Write_Register_Zero+9,w
  6156  0E2E  04B0               	iorwf	??_Adf_Write_Register_Zero+5,f
  6157  0E2F  0835               	movf	??_Adf_Write_Register_Zero+10,w
  6158  0E30  04B1               	iorwf	??_Adf_Write_Register_Zero+6,f
  6159  0E31  0836               	movf	??_Adf_Write_Register_Zero+11,w
  6160  0E32  04B2               	iorwf	??_Adf_Write_Register_Zero+7,f
  6161  0E33  082B               	movf	??_Adf_Write_Register_Zero,w
  6162  0E34  042F               	iorwf	??_Adf_Write_Register_Zero+4,w
  6163  0E35  00CB               	movwf	Adf_Write_Register_Zero@reg
  6164  0E36  082C               	movf	??_Adf_Write_Register_Zero+1,w
  6165  0E37  0430               	iorwf	??_Adf_Write_Register_Zero+5,w
  6166  0E38  00CC               	movwf	Adf_Write_Register_Zero@reg+1
  6167  0E39  082D               	movf	??_Adf_Write_Register_Zero+2,w
  6168  0E3A  0431               	iorwf	??_Adf_Write_Register_Zero+6,w
  6169  0E3B  00CD               	movwf	Adf_Write_Register_Zero@reg+2
  6170  0E3C  082E               	movf	??_Adf_Write_Register_Zero+3,w
  6171  0E3D  0432               	iorwf	??_Adf_Write_Register_Zero+7,w
  6172  0E3E  00CE               	movwf	Adf_Write_Register_Zero@reg+3
  6173                           
  6174                           ;adf7012.c: 171: uint8_t reg_ptr[4];
  6175                           ;adf7012.c: 172: memcpy(reg_ptr, &reg, 4);
  6176  0E3F  304B               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  6177  0E40  00AB               	movwf	??_Adf_Write_Register_Zero
  6178  0E41  082B               	movf	??_Adf_Write_Register_Zero,w
  6179  0E42  00F2               	movwf	memcpy@s1
  6180  0E43  3004               	movlw	4
  6181  0E44  00F3               	movwf	memcpy@n
  6182  0E45  3000               	movlw	0
  6183  0E46  00F4               	movwf	memcpy@n+1
  6184  0E47  3047               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  6185  0E48  3196  2690  318D   	fcall	_memcpy
  6186                           
  6187                           ;adf7012.c: 173: Reverse_Array(reg_ptr,4);
  6188  0E4B  3004               	movlw	4
  6189  0E4C  0020               	movlb	0	; select bank0
  6190  0E4D  00AB               	movwf	??_Adf_Write_Register_Zero
  6191  0E4E  082B               	movf	??_Adf_Write_Register_Zero,w
  6192  0E4F  00F9               	movwf	Reverse_Array@length
  6193  0E50  3047               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  6194  0E51  3197  2796  318D   	fcall	_Reverse_Array
  6195                           
  6196                           ;adf7012.c: 174: Write_Adf7012_Reg(reg_ptr, 4);
  6197  0E54  3004               	movlw	4
  6198  0E55  0020               	movlb	0	; select bank0
  6199  0E56  00AB               	movwf	??_Adf_Write_Register_Zero
  6200  0E57  082B               	movf	??_Adf_Write_Register_Zero,w
  6201  0E58  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  6202  0E59  3047               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  6203  0E5A  3188  2026         	fcall	_Write_Adf7012_Reg
  6204  0E5C  0008               	return
  6205  0E5D                     __end_of_Adf_Write_Register_Zero:	
  6206                           
  6207                           	psect	text31
  6208  0CDF                     __ptext31:	
  6209 ;; *************** function _Adf_Write_Register_Two *****************
  6210 ;; Defined at:
  6211 ;;		line 190 in file "adf7012.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;		None
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;  reg_ptr         4   35[BANK0 ] unsigned char [4]
  6216 ;;  reg             4   39[BANK0 ] unsigned long 
  6217 ;; Return value:  Size  Location     Type
  6218 ;;		None               void
  6219 ;; Registers used:
  6220 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6227 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6228 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6229 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6230 ;;Total ram usage:       32 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; Hardware stack levels required when called:    5
  6233 ;; This function calls:
  6234 ;;		_Reverse_Array
  6235 ;;		_Write_Adf7012_Reg
  6236 ;;		_memcpy
  6237 ;; This function is called by:
  6238 ;;		_Adf_Write_Config
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           
  6243                           ;psect for function _Adf_Write_Register_Two
  6244  0CDF                     _Adf_Write_Register_Two:	
  6245                           
  6246                           ;adf7012.c: 191: uint32_t reg =
  6247                           ;adf7012.c: 192: (2) |
  6248                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  6249                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  6250                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  6251                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  6252                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  6253                           ;adf7012.c: 198: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  6254                           
  6255                           ;incstack = 0
  6256                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6257  0CDF  0021               	movlb	1	; select bank1
  6258  0CE0  0838               	movf	(_adf_config^(0+128)+24),w
  6259  0CE1  3903               	andlw	3
  6260  0CE2  0020               	movlb	0	; select bank0
  6261  0CE3  00AB               	movwf	??_Adf_Write_Register_Two
  6262  0CE4  01AC               	clrf	??_Adf_Write_Register_Two+1
  6263  0CE5  01AD               	clrf	??_Adf_Write_Register_Two+2
  6264  0CE6  01AE               	clrf	??_Adf_Write_Register_Two+3
  6265  0CE7  3017               	movlw	23
  6266  0CE8                     u4105:	
  6267  0CE8  35AB               	lslf	??_Adf_Write_Register_Two,f
  6268  0CE9  0DAC               	rlf	??_Adf_Write_Register_Two+1,f
  6269  0CEA  0DAD               	rlf	??_Adf_Write_Register_Two+2,f
  6270  0CEB  0DAE               	rlf	??_Adf_Write_Register_Two+3,f
  6271  0CEC  0B89               	decfsz	9,f
  6272  0CED  2CE8               	goto	u4105
  6273  0CEE  0021               	movlb	1	; select bank1
  6274  0CEF  0837               	movf	(_adf_config^(0+128)+23),w
  6275  0CF0  3907               	andlw	7
  6276  0CF1  0020               	movlb	0	; select bank0
  6277  0CF2  00AF               	movwf	??_Adf_Write_Register_Two+4
  6278  0CF3  01B0               	clrf	??_Adf_Write_Register_Two+5
  6279  0CF4  01B1               	clrf	??_Adf_Write_Register_Two+6
  6280  0CF5  01B2               	clrf	??_Adf_Write_Register_Two+7
  6281  0CF6  3014               	movlw	20
  6282  0CF7                     u4115:	
  6283  0CF7  35AF               	lslf	??_Adf_Write_Register_Two+4,f
  6284  0CF8  0DB0               	rlf	??_Adf_Write_Register_Two+5,f
  6285  0CF9  0DB1               	rlf	??_Adf_Write_Register_Two+6,f
  6286  0CFA  0DB2               	rlf	??_Adf_Write_Register_Two+7,f
  6287  0CFB  0B89               	decfsz	9,f
  6288  0CFC  2CF7               	goto	u4115
  6289  0CFD  3013               	movlw	19
  6290  0CFE  3EA0               	addlw	_adf_config& (0+255)
  6291  0CFF  0086               	movwf	6
  6292  0D00  0187               	clrf	7
  6293  0D01  30FF               	movlw	255
  6294  0D02  0501               	andwf	1,w
  6295  0D03  00B3               	movwf	??_Adf_Write_Register_Two+8
  6296  0D04  3141               	addfsr 1,1
  6297  0D05  3001               	movlw	1
  6298  0D06  0501               	andwf	1,w
  6299  0D07  00B4               	movwf	??_Adf_Write_Register_Two+9
  6300  0D08  3141               	addfsr 1,1
  6301  0D09  3000               	movlw	0
  6302  0D0A  0501               	andwf	1,w
  6303  0D0B  00B5               	movwf	??_Adf_Write_Register_Two+10
  6304  0D0C  3141               	addfsr 1,1
  6305  0D0D  3000               	movlw	0
  6306  0D0E  0501               	andwf	1,w
  6307  0D0F  00B6               	movwf	??_Adf_Write_Register_Two+11
  6308  0D10  300B               	movlw	11
  6309  0D11                     u4125:	
  6310  0D11  35B3               	lslf	??_Adf_Write_Register_Two+8,f
  6311  0D12  0DB4               	rlf	??_Adf_Write_Register_Two+9,f
  6312  0D13  0DB5               	rlf	??_Adf_Write_Register_Two+10,f
  6313  0D14  0DB6               	rlf	??_Adf_Write_Register_Two+11,f
  6314  0D15  0B89               	decfsz	9,f
  6315  0D16  2D11               	goto	u4125
  6316  0D17  0021               	movlb	1	; select bank1
  6317  0D18  0832               	movf	(_adf_config^(0+128)+18),w
  6318  0D19  393F               	andlw	63
  6319  0D1A  0020               	movlb	0	; select bank0
  6320  0D1B  00B7               	movwf	??_Adf_Write_Register_Two+12
  6321  0D1C  01B8               	clrf	??_Adf_Write_Register_Two+13
  6322  0D1D  01B9               	clrf	??_Adf_Write_Register_Two+14
  6323  0D1E  01BA               	clrf	??_Adf_Write_Register_Two+15
  6324  0D1F  3005               	movlw	5
  6325  0D20                     u4135:	
  6326  0D20  35B7               	lslf	??_Adf_Write_Register_Two+12,f
  6327  0D21  0DB8               	rlf	??_Adf_Write_Register_Two+13,f
  6328  0D22  0DB9               	rlf	??_Adf_Write_Register_Two+14,f
  6329  0D23  0DBA               	rlf	??_Adf_Write_Register_Two+15,f
  6330  0D24  0B89               	decfsz	9,f
  6331  0D25  2D20               	goto	u4135
  6332  0D26  0021               	movlb	1	; select bank1
  6333  0D27  0831               	movf	(_adf_config^(0+128)+17),w
  6334  0D28  3901               	andlw	1
  6335  0D29  0020               	movlb	0	; select bank0
  6336  0D2A  00BB               	movwf	??_Adf_Write_Register_Two+16
  6337  0D2B  01BC               	clrf	??_Adf_Write_Register_Two+17
  6338  0D2C  01BD               	clrf	??_Adf_Write_Register_Two+18
  6339  0D2D  01BE               	clrf	??_Adf_Write_Register_Two+19
  6340  0D2E  3004               	movlw	4
  6341  0D2F                     u4145:	
  6342  0D2F  35BB               	lslf	??_Adf_Write_Register_Two+16,f
  6343  0D30  0DBC               	rlf	??_Adf_Write_Register_Two+17,f
  6344  0D31  0DBD               	rlf	??_Adf_Write_Register_Two+18,f
  6345  0D32  0DBE               	rlf	??_Adf_Write_Register_Two+19,f
  6346  0D33  0B89               	decfsz	9,f
  6347  0D34  2D2F               	goto	u4145
  6348  0D35  0021               	movlb	1	; select bank1
  6349  0D36  0830               	movf	(_adf_config^(0+128)+16),w
  6350  0D37  3903               	andlw	3
  6351  0D38  0020               	movlb	0	; select bank0
  6352  0D39  00BF               	movwf	??_Adf_Write_Register_Two+20
  6353  0D3A  01C0               	clrf	??_Adf_Write_Register_Two+21
  6354  0D3B  01C1               	clrf	??_Adf_Write_Register_Two+22
  6355  0D3C  01C2               	clrf	??_Adf_Write_Register_Two+23
  6356  0D3D  3002               	movlw	2
  6357  0D3E                     u4155:	
  6358  0D3E  35BF               	lslf	??_Adf_Write_Register_Two+20,f
  6359  0D3F  0DC0               	rlf	??_Adf_Write_Register_Two+21,f
  6360  0D40  0DC1               	rlf	??_Adf_Write_Register_Two+22,f
  6361  0D41  0DC2               	rlf	??_Adf_Write_Register_Two+23,f
  6362  0D42  0B89               	decfsz	9,f
  6363  0D43  2D3E               	goto	u4155
  6364  0D44  083F               	movf	??_Adf_Write_Register_Two+20,w
  6365  0D45  04BB               	iorwf	??_Adf_Write_Register_Two+16,f
  6366  0D46  0840               	movf	??_Adf_Write_Register_Two+21,w
  6367  0D47  04BC               	iorwf	??_Adf_Write_Register_Two+17,f
  6368  0D48  0841               	movf	??_Adf_Write_Register_Two+22,w
  6369  0D49  04BD               	iorwf	??_Adf_Write_Register_Two+18,f
  6370  0D4A  0842               	movf	??_Adf_Write_Register_Two+23,w
  6371  0D4B  04BE               	iorwf	??_Adf_Write_Register_Two+19,f
  6372  0D4C  083B               	movf	??_Adf_Write_Register_Two+16,w
  6373  0D4D  04B7               	iorwf	??_Adf_Write_Register_Two+12,f
  6374  0D4E  083C               	movf	??_Adf_Write_Register_Two+17,w
  6375  0D4F  04B8               	iorwf	??_Adf_Write_Register_Two+13,f
  6376  0D50  083D               	movf	??_Adf_Write_Register_Two+18,w
  6377  0D51  04B9               	iorwf	??_Adf_Write_Register_Two+14,f
  6378  0D52  083E               	movf	??_Adf_Write_Register_Two+19,w
  6379  0D53  04BA               	iorwf	??_Adf_Write_Register_Two+15,f
  6380  0D54  0837               	movf	??_Adf_Write_Register_Two+12,w
  6381  0D55  04B3               	iorwf	??_Adf_Write_Register_Two+8,f
  6382  0D56  0838               	movf	??_Adf_Write_Register_Two+13,w
  6383  0D57  04B4               	iorwf	??_Adf_Write_Register_Two+9,f
  6384  0D58  0839               	movf	??_Adf_Write_Register_Two+14,w
  6385  0D59  04B5               	iorwf	??_Adf_Write_Register_Two+10,f
  6386  0D5A  083A               	movf	??_Adf_Write_Register_Two+15,w
  6387  0D5B  04B6               	iorwf	??_Adf_Write_Register_Two+11,f
  6388  0D5C  0833               	movf	??_Adf_Write_Register_Two+8,w
  6389  0D5D  04AF               	iorwf	??_Adf_Write_Register_Two+4,f
  6390  0D5E  0834               	movf	??_Adf_Write_Register_Two+9,w
  6391  0D5F  04B0               	iorwf	??_Adf_Write_Register_Two+5,f
  6392  0D60  0835               	movf	??_Adf_Write_Register_Two+10,w
  6393  0D61  04B1               	iorwf	??_Adf_Write_Register_Two+6,f
  6394  0D62  0836               	movf	??_Adf_Write_Register_Two+11,w
  6395  0D63  04B2               	iorwf	??_Adf_Write_Register_Two+7,f
  6396  0D64  082F               	movf	??_Adf_Write_Register_Two+4,w
  6397  0D65  04AB               	iorwf	??_Adf_Write_Register_Two,f
  6398  0D66  0830               	movf	??_Adf_Write_Register_Two+5,w
  6399  0D67  04AC               	iorwf	??_Adf_Write_Register_Two+1,f
  6400  0D68  0831               	movf	??_Adf_Write_Register_Two+6,w
  6401  0D69  04AD               	iorwf	??_Adf_Write_Register_Two+2,f
  6402  0D6A  0832               	movf	??_Adf_Write_Register_Two+7,w
  6403  0D6B  04AE               	iorwf	??_Adf_Write_Register_Two+3,f
  6404  0D6C  3002               	movlw	2
  6405  0D6D  042B               	iorwf	??_Adf_Write_Register_Two,w
  6406  0D6E  00C7               	movwf	Adf_Write_Register_Two@reg
  6407  0D6F  3000               	movlw	0
  6408  0D70  042C               	iorwf	??_Adf_Write_Register_Two+1,w
  6409  0D71  00C8               	movwf	Adf_Write_Register_Two@reg+1
  6410  0D72  3000               	movlw	0
  6411  0D73  042D               	iorwf	??_Adf_Write_Register_Two+2,w
  6412  0D74  00C9               	movwf	Adf_Write_Register_Two@reg+2
  6413  0D75  3000               	movlw	0
  6414  0D76  042E               	iorwf	??_Adf_Write_Register_Two+3,w
  6415  0D77  00CA               	movwf	Adf_Write_Register_Two@reg+3
  6416                           
  6417                           ;adf7012.c: 201: uint8_t reg_ptr[4];
  6418                           ;adf7012.c: 202: memcpy(reg_ptr, &reg, 4);
  6419  0D78  3047               	movlw	Adf_Write_Register_Two@reg& (0+255)
  6420  0D79  00AB               	movwf	??_Adf_Write_Register_Two
  6421  0D7A  082B               	movf	??_Adf_Write_Register_Two,w
  6422  0D7B  00F2               	movwf	memcpy@s1
  6423  0D7C  3004               	movlw	4
  6424  0D7D  00F3               	movwf	memcpy@n
  6425  0D7E  3000               	movlw	0
  6426  0D7F  00F4               	movwf	memcpy@n+1
  6427  0D80  3043               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6428  0D81  3196  2690  318C   	fcall	_memcpy
  6429                           
  6430                           ;adf7012.c: 203: Reverse_Array(reg_ptr,4);
  6431  0D84  3004               	movlw	4
  6432  0D85  0020               	movlb	0	; select bank0
  6433  0D86  00AB               	movwf	??_Adf_Write_Register_Two
  6434  0D87  082B               	movf	??_Adf_Write_Register_Two,w
  6435  0D88  00F9               	movwf	Reverse_Array@length
  6436  0D89  3043               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6437  0D8A  3197  2796  318C   	fcall	_Reverse_Array
  6438                           
  6439                           ;adf7012.c: 204: Write_Adf7012_Reg(reg_ptr, 4);
  6440  0D8D  3004               	movlw	4
  6441  0D8E  0020               	movlb	0	; select bank0
  6442  0D8F  00AB               	movwf	??_Adf_Write_Register_Two
  6443  0D90  082B               	movf	??_Adf_Write_Register_Two,w
  6444  0D91  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  6445  0D92  3043               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  6446  0D93  3188  2026         	fcall	_Write_Adf7012_Reg
  6447  0D95  0008               	return
  6448  0D96                     __end_of_Adf_Write_Register_Two:	
  6449                           
  6450                           	psect	text32
  6451  030E                     __ptext32:	
  6452 ;; *************** function _Adf_Write_Register_Three *****************
  6453 ;; Defined at:
  6454 ;;		line 207 in file "adf7012.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;		None
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  reg_ptr         4   67[BANK0 ] unsigned char [4]
  6459 ;;  reg             4   71[BANK0 ] unsigned long 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;		None               void
  6462 ;; Registers used:
  6463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6470 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6471 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6472 ;;      Totals:         0      64       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6473 ;;Total ram usage:       64 bytes
  6474 ;; Hardware stack levels used:    1
  6475 ;; Hardware stack levels required when called:    5
  6476 ;; This function calls:
  6477 ;;		_Reverse_Array
  6478 ;;		_Write_Adf7012_Reg
  6479 ;;		_memcpy
  6480 ;; This function is called by:
  6481 ;;		_Adf_Write_Config
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           
  6486                           ;psect for function _Adf_Write_Register_Three
  6487  030E                     _Adf_Write_Register_Three:	
  6488                           
  6489                           ;adf7012.c: 208: uint32_t reg =
  6490                           ;adf7012.c: 209: (3) |
  6491                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  6492                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  6493                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  6494                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  6495                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  6496                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  6497                           ;adf7012.c: 216: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  6498                           
  6499                           ;incstack = 0
  6500                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  6501  030E  0021               	movlb	1	; select bank1
  6502  030F  0846               	movf	(_adf_config^(0+128)+38),w
  6503  0310  390F               	andlw	15
  6504  0311  0020               	movlb	0	; select bank0
  6505  0312  00AB               	movwf	??_Adf_Write_Register_Three
  6506  0313  01AC               	clrf	??_Adf_Write_Register_Three+1
  6507  0314  01AD               	clrf	??_Adf_Write_Register_Three+2
  6508  0315  01AE               	clrf	??_Adf_Write_Register_Three+3
  6509  0316  301C               	movlw	28
  6510  0317                     u4165:	
  6511  0317  35AB               	lslf	??_Adf_Write_Register_Three,f
  6512  0318  0DAC               	rlf	??_Adf_Write_Register_Three+1,f
  6513  0319  0DAD               	rlf	??_Adf_Write_Register_Three+2,f
  6514  031A  0DAE               	rlf	??_Adf_Write_Register_Three+3,f
  6515  031B  0B89               	decfsz	9,f
  6516  031C  2B17               	goto	u4165
  6517  031D  0021               	movlb	1	; select bank1
  6518  031E  0845               	movf	(_adf_config^(0+128)+37),w
  6519  031F  391F               	andlw	31
  6520  0320  0020               	movlb	0	; select bank0
  6521  0321  00AF               	movwf	??_Adf_Write_Register_Three+4
  6522  0322  01B0               	clrf	??_Adf_Write_Register_Three+5
  6523  0323  01B1               	clrf	??_Adf_Write_Register_Three+6
  6524  0324  01B2               	clrf	??_Adf_Write_Register_Three+7
  6525  0325  3017               	movlw	23
  6526  0326                     u4175:	
  6527  0326  35AF               	lslf	??_Adf_Write_Register_Three+4,f
  6528  0327  0DB0               	rlf	??_Adf_Write_Register_Three+5,f
  6529  0328  0DB1               	rlf	??_Adf_Write_Register_Three+6,f
  6530  0329  0DB2               	rlf	??_Adf_Write_Register_Three+7,f
  6531  032A  0B89               	decfsz	9,f
  6532  032B  2B26               	goto	u4175
  6533  032C  0021               	movlb	1	; select bank1
  6534  032D  0844               	movf	(_adf_config^(0+128)+36),w
  6535  032E  3907               	andlw	7
  6536  032F  0020               	movlb	0	; select bank0
  6537  0330  00B3               	movwf	??_Adf_Write_Register_Three+8
  6538  0331  01B4               	clrf	??_Adf_Write_Register_Three+9
  6539  0332  01B5               	clrf	??_Adf_Write_Register_Three+10
  6540  0333  01B6               	clrf	??_Adf_Write_Register_Three+11
  6541  0334  3014               	movlw	20
  6542  0335                     u4185:	
  6543  0335  35B3               	lslf	??_Adf_Write_Register_Three+8,f
  6544  0336  0DB4               	rlf	??_Adf_Write_Register_Three+9,f
  6545  0337  0DB5               	rlf	??_Adf_Write_Register_Three+10,f
  6546  0338  0DB6               	rlf	??_Adf_Write_Register_Three+11,f
  6547  0339  0B89               	decfsz	9,f
  6548  033A  2B35               	goto	u4185
  6549  033B  0021               	movlb	1	; select bank1
  6550  033C  0843               	movf	(_adf_config^(0+128)+35),w
  6551  033D  390F               	andlw	15
  6552  033E  0020               	movlb	0	; select bank0
  6553  033F  00B7               	movwf	??_Adf_Write_Register_Three+12
  6554  0340  01B8               	clrf	??_Adf_Write_Register_Three+13
  6555  0341  01B9               	clrf	??_Adf_Write_Register_Three+14
  6556  0342  01BA               	clrf	??_Adf_Write_Register_Three+15
  6557  0343  3010               	movlw	16
  6558  0344                     u4195:	
  6559  0344  35B7               	lslf	??_Adf_Write_Register_Three+12,f
  6560  0345  0DB8               	rlf	??_Adf_Write_Register_Three+13,f
  6561  0346  0DB9               	rlf	??_Adf_Write_Register_Three+14,f
  6562  0347  0DBA               	rlf	??_Adf_Write_Register_Three+15,f
  6563  0348  0B89               	decfsz	9,f
  6564  0349  2B44               	goto	u4195
  6565  034A  0021               	movlb	1	; select bank1
  6566  034B  0842               	movf	(_adf_config^(0+128)+34),w
  6567  034C  3901               	andlw	1
  6568  034D  0020               	movlb	0	; select bank0
  6569  034E  00BB               	movwf	??_Adf_Write_Register_Three+16
  6570  034F  01BC               	clrf	??_Adf_Write_Register_Three+17
  6571  0350  01BD               	clrf	??_Adf_Write_Register_Three+18
  6572  0351  01BE               	clrf	??_Adf_Write_Register_Three+19
  6573  0352  300F               	movlw	15
  6574  0353                     u4205:	
  6575  0353  35BB               	lslf	??_Adf_Write_Register_Three+16,f
  6576  0354  0DBC               	rlf	??_Adf_Write_Register_Three+17,f
  6577  0355  0DBD               	rlf	??_Adf_Write_Register_Three+18,f
  6578  0356  0DBE               	rlf	??_Adf_Write_Register_Three+19,f
  6579  0357  0B89               	decfsz	9,f
  6580  0358  2B53               	goto	u4205
  6581  0359  0021               	movlb	1	; select bank1
  6582  035A  0841               	movf	(_adf_config^(0+128)+33),w
  6583  035B  390F               	andlw	15
  6584  035C  0020               	movlb	0	; select bank0
  6585  035D  00BF               	movwf	??_Adf_Write_Register_Three+20
  6586  035E  01C0               	clrf	??_Adf_Write_Register_Three+21
  6587  035F  01C1               	clrf	??_Adf_Write_Register_Three+22
  6588  0360  01C2               	clrf	??_Adf_Write_Register_Three+23
  6589  0361  300B               	movlw	11
  6590  0362                     u4215:	
  6591  0362  35BF               	lslf	??_Adf_Write_Register_Three+20,f
  6592  0363  0DC0               	rlf	??_Adf_Write_Register_Three+21,f
  6593  0364  0DC1               	rlf	??_Adf_Write_Register_Three+22,f
  6594  0365  0DC2               	rlf	??_Adf_Write_Register_Three+23,f
  6595  0366  0B89               	decfsz	9,f
  6596  0367  2B62               	goto	u4215
  6597  0368  0021               	movlb	1	; select bank1
  6598  0369  0840               	movf	(_adf_config^(0+128)+32),w
  6599  036A  3901               	andlw	1
  6600  036B  0020               	movlb	0	; select bank0
  6601  036C  00C3               	movwf	??_Adf_Write_Register_Three+24
  6602  036D  01C4               	clrf	??_Adf_Write_Register_Three+25
  6603  036E  01C5               	clrf	??_Adf_Write_Register_Three+26
  6604  036F  01C6               	clrf	??_Adf_Write_Register_Three+27
  6605  0370  300A               	movlw	10
  6606  0371                     u4225:	
  6607  0371  35C3               	lslf	??_Adf_Write_Register_Three+24,f
  6608  0372  0DC4               	rlf	??_Adf_Write_Register_Three+25,f
  6609  0373  0DC5               	rlf	??_Adf_Write_Register_Three+26,f
  6610  0374  0DC6               	rlf	??_Adf_Write_Register_Three+27,f
  6611  0375  0B89               	decfsz	9,f
  6612  0376  2B71               	goto	u4225
  6613  0377  0021               	movlb	1	; select bank1
  6614  0378  083F               	movf	(_adf_config^(0+128)+31),w
  6615  0379  3901               	andlw	1
  6616  037A  0020               	movlb	0	; select bank0
  6617  037B  00C7               	movwf	??_Adf_Write_Register_Three+28
  6618  037C  01C8               	clrf	??_Adf_Write_Register_Three+29
  6619  037D  01C9               	clrf	??_Adf_Write_Register_Three+30
  6620  037E  01CA               	clrf	??_Adf_Write_Register_Three+31
  6621  037F  3009               	movlw	9
  6622  0380                     u4235:	
  6623  0380  35C7               	lslf	??_Adf_Write_Register_Three+28,f
  6624  0381  0DC8               	rlf	??_Adf_Write_Register_Three+29,f
  6625  0382  0DC9               	rlf	??_Adf_Write_Register_Three+30,f
  6626  0383  0DCA               	rlf	??_Adf_Write_Register_Three+31,f
  6627  0384  0B89               	decfsz	9,f
  6628  0385  2B80               	goto	u4235
  6629  0386  0021               	movlb	1	; select bank1
  6630  0387  083E               	movf	(_adf_config^(0+128)+30),w
  6631  0388  3901               	andlw	1
  6632  0389  0020               	movlb	0	; select bank0
  6633  038A  00CB               	movwf	??_Adf_Write_Register_Three+32
  6634  038B  01CC               	clrf	??_Adf_Write_Register_Three+33
  6635  038C  01CD               	clrf	??_Adf_Write_Register_Three+34
  6636  038D  01CE               	clrf	??_Adf_Write_Register_Three+35
  6637  038E  3008               	movlw	8
  6638  038F                     u4245:	
  6639  038F  35CB               	lslf	??_Adf_Write_Register_Three+32,f
  6640  0390  0DCC               	rlf	??_Adf_Write_Register_Three+33,f
  6641  0391  0DCD               	rlf	??_Adf_Write_Register_Three+34,f
  6642  0392  0DCE               	rlf	??_Adf_Write_Register_Three+35,f
  6643  0393  0B89               	decfsz	9,f
  6644  0394  2B8F               	goto	u4245
  6645  0395  0021               	movlb	1	; select bank1
  6646  0396  083D               	movf	(_adf_config^(0+128)+29),w
  6647  0397  3903               	andlw	3
  6648  0398  0020               	movlb	0	; select bank0
  6649  0399  00CF               	movwf	??_Adf_Write_Register_Three+36
  6650  039A  01D0               	clrf	??_Adf_Write_Register_Three+37
  6651  039B  01D1               	clrf	??_Adf_Write_Register_Three+38
  6652  039C  01D2               	clrf	??_Adf_Write_Register_Three+39
  6653  039D  3006               	movlw	6
  6654  039E                     u4255:	
  6655  039E  35CF               	lslf	??_Adf_Write_Register_Three+36,f
  6656  039F  0DD0               	rlf	??_Adf_Write_Register_Three+37,f
  6657  03A0  0DD1               	rlf	??_Adf_Write_Register_Three+38,f
  6658  03A1  0DD2               	rlf	??_Adf_Write_Register_Three+39,f
  6659  03A2  0B89               	decfsz	9,f
  6660  03A3  2B9E               	goto	u4255
  6661  03A4  0021               	movlb	1	; select bank1
  6662  03A5  083C               	movf	(_adf_config^(0+128)+28),w
  6663  03A6  3901               	andlw	1
  6664  03A7  0020               	movlb	0	; select bank0
  6665  03A8  00D3               	movwf	??_Adf_Write_Register_Three+40
  6666  03A9  01D4               	clrf	??_Adf_Write_Register_Three+41
  6667  03AA  01D5               	clrf	??_Adf_Write_Register_Three+42
  6668  03AB  01D6               	clrf	??_Adf_Write_Register_Three+43
  6669  03AC  3005               	movlw	5
  6670  03AD                     u4265:	
  6671  03AD  35D3               	lslf	??_Adf_Write_Register_Three+40,f
  6672  03AE  0DD4               	rlf	??_Adf_Write_Register_Three+41,f
  6673  03AF  0DD5               	rlf	??_Adf_Write_Register_Three+42,f
  6674  03B0  0DD6               	rlf	??_Adf_Write_Register_Three+43,f
  6675  03B1  0B89               	decfsz	9,f
  6676  03B2  2BAD               	goto	u4265
  6677  03B3  0021               	movlb	1	; select bank1
  6678  03B4  083B               	movf	(_adf_config^(0+128)+27),w
  6679  03B5  3901               	andlw	1
  6680  03B6  0020               	movlb	0	; select bank0
  6681  03B7  00D7               	movwf	??_Adf_Write_Register_Three+44
  6682  03B8  01D8               	clrf	??_Adf_Write_Register_Three+45
  6683  03B9  01D9               	clrf	??_Adf_Write_Register_Three+46
  6684  03BA  01DA               	clrf	??_Adf_Write_Register_Three+47
  6685  03BB  3004               	movlw	4
  6686  03BC                     u4275:	
  6687  03BC  35D7               	lslf	??_Adf_Write_Register_Three+44,f
  6688  03BD  0DD8               	rlf	??_Adf_Write_Register_Three+45,f
  6689  03BE  0DD9               	rlf	??_Adf_Write_Register_Three+46,f
  6690  03BF  0DDA               	rlf	??_Adf_Write_Register_Three+47,f
  6691  03C0  0B89               	decfsz	9,f
  6692  03C1  2BBC               	goto	u4275
  6693  03C2  0021               	movlb	1	; select bank1
  6694  03C3  083A               	movf	(_adf_config^(0+128)+26),w
  6695  03C4  3901               	andlw	1
  6696  03C5  0020               	movlb	0	; select bank0
  6697  03C6  00DB               	movwf	??_Adf_Write_Register_Three+48
  6698  03C7  01DC               	clrf	??_Adf_Write_Register_Three+49
  6699  03C8  01DD               	clrf	??_Adf_Write_Register_Three+50
  6700  03C9  01DE               	clrf	??_Adf_Write_Register_Three+51
  6701  03CA  3003               	movlw	3
  6702  03CB                     u4285:	
  6703  03CB  35DB               	lslf	??_Adf_Write_Register_Three+48,f
  6704  03CC  0DDC               	rlf	??_Adf_Write_Register_Three+49,f
  6705  03CD  0DDD               	rlf	??_Adf_Write_Register_Three+50,f
  6706  03CE  0DDE               	rlf	??_Adf_Write_Register_Three+51,f
  6707  03CF  0B89               	decfsz	9,f
  6708  03D0  2BCB               	goto	u4285
  6709  03D1  0021               	movlb	1	; select bank1
  6710  03D2  0839               	movf	(_adf_config^(0+128)+25),w
  6711  03D3  3901               	andlw	1
  6712  03D4  0020               	movlb	0	; select bank0
  6713  03D5  00DF               	movwf	??_Adf_Write_Register_Three+52
  6714  03D6  01E0               	clrf	??_Adf_Write_Register_Three+53
  6715  03D7  01E1               	clrf	??_Adf_Write_Register_Three+54
  6716  03D8  01E2               	clrf	??_Adf_Write_Register_Three+55
  6717  03D9  3002               	movlw	2
  6718  03DA                     u4295:	
  6719  03DA  35DF               	lslf	??_Adf_Write_Register_Three+52,f
  6720  03DB  0DE0               	rlf	??_Adf_Write_Register_Three+53,f
  6721  03DC  0DE1               	rlf	??_Adf_Write_Register_Three+54,f
  6722  03DD  0DE2               	rlf	??_Adf_Write_Register_Three+55,f
  6723  03DE  0B89               	decfsz	9,f
  6724  03DF  2BDA               	goto	u4295
  6725  03E0  085F               	movf	??_Adf_Write_Register_Three+52,w
  6726  03E1  04DB               	iorwf	??_Adf_Write_Register_Three+48,f
  6727  03E2  0860               	movf	??_Adf_Write_Register_Three+53,w
  6728  03E3  04DC               	iorwf	??_Adf_Write_Register_Three+49,f
  6729  03E4  0861               	movf	??_Adf_Write_Register_Three+54,w
  6730  03E5  04DD               	iorwf	??_Adf_Write_Register_Three+50,f
  6731  03E6  0862               	movf	??_Adf_Write_Register_Three+55,w
  6732  03E7  04DE               	iorwf	??_Adf_Write_Register_Three+51,f
  6733  03E8  085B               	movf	??_Adf_Write_Register_Three+48,w
  6734  03E9  04D7               	iorwf	??_Adf_Write_Register_Three+44,f
  6735  03EA  085C               	movf	??_Adf_Write_Register_Three+49,w
  6736  03EB  04D8               	iorwf	??_Adf_Write_Register_Three+45,f
  6737  03EC  085D               	movf	??_Adf_Write_Register_Three+50,w
  6738  03ED  04D9               	iorwf	??_Adf_Write_Register_Three+46,f
  6739  03EE  085E               	movf	??_Adf_Write_Register_Three+51,w
  6740  03EF  04DA               	iorwf	??_Adf_Write_Register_Three+47,f
  6741  03F0  0857               	movf	??_Adf_Write_Register_Three+44,w
  6742  03F1  04D3               	iorwf	??_Adf_Write_Register_Three+40,f
  6743  03F2  0858               	movf	??_Adf_Write_Register_Three+45,w
  6744  03F3  04D4               	iorwf	??_Adf_Write_Register_Three+41,f
  6745  03F4  0859               	movf	??_Adf_Write_Register_Three+46,w
  6746  03F5  04D5               	iorwf	??_Adf_Write_Register_Three+42,f
  6747  03F6  085A               	movf	??_Adf_Write_Register_Three+47,w
  6748  03F7  04D6               	iorwf	??_Adf_Write_Register_Three+43,f
  6749  03F8  0853               	movf	??_Adf_Write_Register_Three+40,w
  6750  03F9  04CF               	iorwf	??_Adf_Write_Register_Three+36,f
  6751  03FA  0854               	movf	??_Adf_Write_Register_Three+41,w
  6752  03FB  04D0               	iorwf	??_Adf_Write_Register_Three+37,f
  6753  03FC  0855               	movf	??_Adf_Write_Register_Three+42,w
  6754  03FD  04D1               	iorwf	??_Adf_Write_Register_Three+38,f
  6755  03FE  0856               	movf	??_Adf_Write_Register_Three+43,w
  6756  03FF  04D2               	iorwf	??_Adf_Write_Register_Three+39,f
  6757  0400  084F               	movf	??_Adf_Write_Register_Three+36,w
  6758  0401  04CB               	iorwf	??_Adf_Write_Register_Three+32,f
  6759  0402  0850               	movf	??_Adf_Write_Register_Three+37,w
  6760  0403  04CC               	iorwf	??_Adf_Write_Register_Three+33,f
  6761  0404  0851               	movf	??_Adf_Write_Register_Three+38,w
  6762  0405  04CD               	iorwf	??_Adf_Write_Register_Three+34,f
  6763  0406  0852               	movf	??_Adf_Write_Register_Three+39,w
  6764  0407  04CE               	iorwf	??_Adf_Write_Register_Three+35,f
  6765  0408  084B               	movf	??_Adf_Write_Register_Three+32,w
  6766  0409  04C7               	iorwf	??_Adf_Write_Register_Three+28,f
  6767  040A  084C               	movf	??_Adf_Write_Register_Three+33,w
  6768  040B  04C8               	iorwf	??_Adf_Write_Register_Three+29,f
  6769  040C  084D               	movf	??_Adf_Write_Register_Three+34,w
  6770  040D  04C9               	iorwf	??_Adf_Write_Register_Three+30,f
  6771  040E  084E               	movf	??_Adf_Write_Register_Three+35,w
  6772  040F  04CA               	iorwf	??_Adf_Write_Register_Three+31,f
  6773  0410  0847               	movf	??_Adf_Write_Register_Three+28,w
  6774  0411  04C3               	iorwf	??_Adf_Write_Register_Three+24,f
  6775  0412  0848               	movf	??_Adf_Write_Register_Three+29,w
  6776  0413  04C4               	iorwf	??_Adf_Write_Register_Three+25,f
  6777  0414  0849               	movf	??_Adf_Write_Register_Three+30,w
  6778  0415  04C5               	iorwf	??_Adf_Write_Register_Three+26,f
  6779  0416  084A               	movf	??_Adf_Write_Register_Three+31,w
  6780  0417  04C6               	iorwf	??_Adf_Write_Register_Three+27,f
  6781  0418  0843               	movf	??_Adf_Write_Register_Three+24,w
  6782  0419  04BF               	iorwf	??_Adf_Write_Register_Three+20,f
  6783  041A  0844               	movf	??_Adf_Write_Register_Three+25,w
  6784  041B  04C0               	iorwf	??_Adf_Write_Register_Three+21,f
  6785  041C  0845               	movf	??_Adf_Write_Register_Three+26,w
  6786  041D  04C1               	iorwf	??_Adf_Write_Register_Three+22,f
  6787  041E  0846               	movf	??_Adf_Write_Register_Three+27,w
  6788  041F  04C2               	iorwf	??_Adf_Write_Register_Three+23,f
  6789  0420  083F               	movf	??_Adf_Write_Register_Three+20,w
  6790  0421  04BB               	iorwf	??_Adf_Write_Register_Three+16,f
  6791  0422  0840               	movf	??_Adf_Write_Register_Three+21,w
  6792  0423  04BC               	iorwf	??_Adf_Write_Register_Three+17,f
  6793  0424  0841               	movf	??_Adf_Write_Register_Three+22,w
  6794  0425  04BD               	iorwf	??_Adf_Write_Register_Three+18,f
  6795  0426  0842               	movf	??_Adf_Write_Register_Three+23,w
  6796  0427  04BE               	iorwf	??_Adf_Write_Register_Three+19,f
  6797  0428  083B               	movf	??_Adf_Write_Register_Three+16,w
  6798  0429  04B7               	iorwf	??_Adf_Write_Register_Three+12,f
  6799  042A  083C               	movf	??_Adf_Write_Register_Three+17,w
  6800  042B  04B8               	iorwf	??_Adf_Write_Register_Three+13,f
  6801  042C  083D               	movf	??_Adf_Write_Register_Three+18,w
  6802  042D  04B9               	iorwf	??_Adf_Write_Register_Three+14,f
  6803  042E  083E               	movf	??_Adf_Write_Register_Three+19,w
  6804  042F  04BA               	iorwf	??_Adf_Write_Register_Three+15,f
  6805  0430  0837               	movf	??_Adf_Write_Register_Three+12,w
  6806  0431  04B3               	iorwf	??_Adf_Write_Register_Three+8,f
  6807  0432  0838               	movf	??_Adf_Write_Register_Three+13,w
  6808  0433  04B4               	iorwf	??_Adf_Write_Register_Three+9,f
  6809  0434  0839               	movf	??_Adf_Write_Register_Three+14,w
  6810  0435  04B5               	iorwf	??_Adf_Write_Register_Three+10,f
  6811  0436  083A               	movf	??_Adf_Write_Register_Three+15,w
  6812  0437  04B6               	iorwf	??_Adf_Write_Register_Three+11,f
  6813  0438  0833               	movf	??_Adf_Write_Register_Three+8,w
  6814  0439  04AF               	iorwf	??_Adf_Write_Register_Three+4,f
  6815  043A  0834               	movf	??_Adf_Write_Register_Three+9,w
  6816  043B  04B0               	iorwf	??_Adf_Write_Register_Three+5,f
  6817  043C  0835               	movf	??_Adf_Write_Register_Three+10,w
  6818  043D  04B1               	iorwf	??_Adf_Write_Register_Three+6,f
  6819  043E  0836               	movf	??_Adf_Write_Register_Three+11,w
  6820  043F  04B2               	iorwf	??_Adf_Write_Register_Three+7,f
  6821  0440  082F               	movf	??_Adf_Write_Register_Three+4,w
  6822  0441  04AB               	iorwf	??_Adf_Write_Register_Three,f
  6823  0442  0830               	movf	??_Adf_Write_Register_Three+5,w
  6824  0443  04AC               	iorwf	??_Adf_Write_Register_Three+1,f
  6825  0444  0831               	movf	??_Adf_Write_Register_Three+6,w
  6826  0445  04AD               	iorwf	??_Adf_Write_Register_Three+2,f
  6827  0446  0832               	movf	??_Adf_Write_Register_Three+7,w
  6828  0447  04AE               	iorwf	??_Adf_Write_Register_Three+3,f
  6829  0448  3003               	movlw	3
  6830  0449  042B               	iorwf	??_Adf_Write_Register_Three,w
  6831  044A  00E7               	movwf	Adf_Write_Register_Three@reg
  6832  044B  3000               	movlw	0
  6833  044C  042C               	iorwf	??_Adf_Write_Register_Three+1,w
  6834  044D  00E8               	movwf	Adf_Write_Register_Three@reg+1
  6835  044E  3000               	movlw	0
  6836  044F  042D               	iorwf	??_Adf_Write_Register_Three+2,w
  6837  0450  00E9               	movwf	Adf_Write_Register_Three@reg+2
  6838  0451  3000               	movlw	0
  6839  0452  042E               	iorwf	??_Adf_Write_Register_Three+3,w
  6840  0453  00EA               	movwf	Adf_Write_Register_Three@reg+3
  6841                           
  6842                           ;adf7012.c: 226: uint8_t reg_ptr[4];
  6843                           ;adf7012.c: 227: memcpy(reg_ptr, &reg, 4);
  6844  0454  3067               	movlw	Adf_Write_Register_Three@reg& (0+255)
  6845  0455  00AB               	movwf	??_Adf_Write_Register_Three
  6846  0456  082B               	movf	??_Adf_Write_Register_Three,w
  6847  0457  00F2               	movwf	memcpy@s1
  6848  0458  3004               	movlw	4
  6849  0459  00F3               	movwf	memcpy@n
  6850  045A  3000               	movlw	0
  6851  045B  00F4               	movwf	memcpy@n+1
  6852  045C  3063               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6853  045D  3196  2690  3183   	fcall	_memcpy
  6854                           
  6855                           ;adf7012.c: 228: Reverse_Array(reg_ptr,4);
  6856  0460  3004               	movlw	4
  6857  0461  0020               	movlb	0	; select bank0
  6858  0462  00AB               	movwf	??_Adf_Write_Register_Three
  6859  0463  082B               	movf	??_Adf_Write_Register_Three,w
  6860  0464  00F9               	movwf	Reverse_Array@length
  6861  0465  3063               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6862  0466  3197  2796  3183   	fcall	_Reverse_Array
  6863                           
  6864                           ;adf7012.c: 229: Write_Adf7012_Reg(reg_ptr, 4);
  6865  0469  3004               	movlw	4
  6866  046A  0020               	movlb	0	; select bank0
  6867  046B  00AB               	movwf	??_Adf_Write_Register_Three
  6868  046C  082B               	movf	??_Adf_Write_Register_Three,w
  6869  046D  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  6870  046E  3063               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  6871  046F  3188  2026         	fcall	_Write_Adf7012_Reg
  6872  0471  0008               	return
  6873  0472                     __end_of_Adf_Write_Register_Three:	
  6874                           
  6875                           	psect	text33
  6876  0912                     __ptext33:	
  6877 ;; *************** function _Adf_Write_Register_One *****************
  6878 ;; Defined at:
  6879 ;;		line 177 in file "adf7012.c"
  6880 ;; Parameters:    Size  Location     Type
  6881 ;;		None
  6882 ;; Auto vars:     Size  Location     Type
  6883 ;;  reg             4   26[BANK0 ] unsigned long 
  6884 ;;  reg_ptr         3   23[BANK0 ] unsigned char [3]
  6885 ;; Return value:  Size  Location     Type
  6886 ;;		None               void
  6887 ;; Registers used:
  6888 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6895 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6896 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6897 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6898 ;;Total ram usage:       19 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    5
  6901 ;; This function calls:
  6902 ;;		_Reverse_Array
  6903 ;;		_Write_Adf7012_Reg
  6904 ;;		_memcpy
  6905 ;; This function is called by:
  6906 ;;		_Adf_Write_Config
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           
  6911                           ;psect for function _Adf_Write_Register_One
  6912  0912                     _Adf_Write_Register_One:	
  6913                           
  6914                           ;adf7012.c: 178: uint32_t reg =
  6915                           ;adf7012.c: 179: (1) |
  6916                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  6917                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  6918                           ;adf7012.c: 182: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  6919                           
  6920                           ;incstack = 0
  6921                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  6922  0912  0021               	movlb	1	; select bank1
  6923  0913  082F               	movf	(_adf_config^(0+128)+15),w
  6924  0914  3901               	andlw	1
  6925  0915  0020               	movlb	0	; select bank0
  6926  0916  00AB               	movwf	??_Adf_Write_Register_One
  6927  0917  01AC               	clrf	??_Adf_Write_Register_One+1
  6928  0918  01AD               	clrf	??_Adf_Write_Register_One+2
  6929  0919  01AE               	clrf	??_Adf_Write_Register_One+3
  6930  091A  3016               	movlw	22
  6931  091B                     u4075:	
  6932  091B  35AB               	lslf	??_Adf_Write_Register_One,f
  6933  091C  0DAC               	rlf	??_Adf_Write_Register_One+1,f
  6934  091D  0DAD               	rlf	??_Adf_Write_Register_One+2,f
  6935  091E  0DAE               	rlf	??_Adf_Write_Register_One+3,f
  6936  091F  0B89               	decfsz	9,f
  6937  0920  291B               	goto	u4075
  6938  0921  0021               	movlb	1	; select bank1
  6939  0922  082E               	movf	(_adf_config^(0+128)+14),w
  6940  0923  0020               	movlb	0	; select bank0
  6941  0924  00AF               	movwf	??_Adf_Write_Register_One+4
  6942  0925  01B0               	clrf	??_Adf_Write_Register_One+5
  6943  0926  01B1               	clrf	??_Adf_Write_Register_One+6
  6944  0927  01B2               	clrf	??_Adf_Write_Register_One+7
  6945  0928  300E               	movlw	14
  6946  0929                     u4085:	
  6947  0929  35AF               	lslf	??_Adf_Write_Register_One+4,f
  6948  092A  0DB0               	rlf	??_Adf_Write_Register_One+5,f
  6949  092B  0DB1               	rlf	??_Adf_Write_Register_One+6,f
  6950  092C  0DB2               	rlf	??_Adf_Write_Register_One+7,f
  6951  092D  0B89               	decfsz	9,f
  6952  092E  2929               	goto	u4085
  6953  092F  300A               	movlw	10
  6954  0930  3EA0               	addlw	_adf_config& (0+255)
  6955  0931  0086               	movwf	6
  6956  0932  0187               	clrf	7
  6957  0933  30FF               	movlw	255
  6958  0934  0501               	andwf	1,w
  6959  0935  00B3               	movwf	??_Adf_Write_Register_One+8
  6960  0936  3141               	addfsr 1,1
  6961  0937  300F               	movlw	15
  6962  0938  0501               	andwf	1,w
  6963  0939  00B4               	movwf	??_Adf_Write_Register_One+9
  6964  093A  3141               	addfsr 1,1
  6965  093B  3000               	movlw	0
  6966  093C  0501               	andwf	1,w
  6967  093D  00B5               	movwf	??_Adf_Write_Register_One+10
  6968  093E  3141               	addfsr 1,1
  6969  093F  3000               	movlw	0
  6970  0940  0501               	andwf	1,w
  6971  0941  00B6               	movwf	??_Adf_Write_Register_One+11
  6972  0942  3002               	movlw	2
  6973  0943                     u4095:	
  6974  0943  35B3               	lslf	??_Adf_Write_Register_One+8,f
  6975  0944  0DB4               	rlf	??_Adf_Write_Register_One+9,f
  6976  0945  0DB5               	rlf	??_Adf_Write_Register_One+10,f
  6977  0946  0DB6               	rlf	??_Adf_Write_Register_One+11,f
  6978  0947  0B89               	decfsz	9,f
  6979  0948  2943               	goto	u4095
  6980  0949  0833               	movf	??_Adf_Write_Register_One+8,w
  6981  094A  04AF               	iorwf	??_Adf_Write_Register_One+4,f
  6982  094B  0834               	movf	??_Adf_Write_Register_One+9,w
  6983  094C  04B0               	iorwf	??_Adf_Write_Register_One+5,f
  6984  094D  0835               	movf	??_Adf_Write_Register_One+10,w
  6985  094E  04B1               	iorwf	??_Adf_Write_Register_One+6,f
  6986  094F  0836               	movf	??_Adf_Write_Register_One+11,w
  6987  0950  04B2               	iorwf	??_Adf_Write_Register_One+7,f
  6988  0951  082F               	movf	??_Adf_Write_Register_One+4,w
  6989  0952  04AB               	iorwf	??_Adf_Write_Register_One,f
  6990  0953  0830               	movf	??_Adf_Write_Register_One+5,w
  6991  0954  04AC               	iorwf	??_Adf_Write_Register_One+1,f
  6992  0955  0831               	movf	??_Adf_Write_Register_One+6,w
  6993  0956  04AD               	iorwf	??_Adf_Write_Register_One+2,f
  6994  0957  0832               	movf	??_Adf_Write_Register_One+7,w
  6995  0958  04AE               	iorwf	??_Adf_Write_Register_One+3,f
  6996  0959  3001               	movlw	1
  6997  095A  042B               	iorwf	??_Adf_Write_Register_One,w
  6998  095B  00BA               	movwf	Adf_Write_Register_One@reg
  6999  095C  3000               	movlw	0
  7000  095D  042C               	iorwf	??_Adf_Write_Register_One+1,w
  7001  095E  00BB               	movwf	Adf_Write_Register_One@reg+1
  7002  095F  3000               	movlw	0
  7003  0960  042D               	iorwf	??_Adf_Write_Register_One+2,w
  7004  0961  00BC               	movwf	Adf_Write_Register_One@reg+2
  7005  0962  3000               	movlw	0
  7006  0963  042E               	iorwf	??_Adf_Write_Register_One+3,w
  7007  0964  00BD               	movwf	Adf_Write_Register_One@reg+3
  7008                           
  7009                           ;adf7012.c: 184: uint8_t reg_ptr[3];
  7010                           ;adf7012.c: 185: memcpy(reg_ptr, &reg, 3);
  7011  0965  303A               	movlw	Adf_Write_Register_One@reg& (0+255)
  7012  0966  00AB               	movwf	??_Adf_Write_Register_One
  7013  0967  082B               	movf	??_Adf_Write_Register_One,w
  7014  0968  00F2               	movwf	memcpy@s1
  7015  0969  3003               	movlw	3
  7016  096A  00F3               	movwf	memcpy@n
  7017  096B  3000               	movlw	0
  7018  096C  00F4               	movwf	memcpy@n+1
  7019  096D  3037               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  7020  096E  3196  2690  3189   	fcall	_memcpy
  7021                           
  7022                           ;adf7012.c: 186: Reverse_Array(reg_ptr,3);
  7023  0971  3003               	movlw	3
  7024  0972  0020               	movlb	0	; select bank0
  7025  0973  00AB               	movwf	??_Adf_Write_Register_One
  7026  0974  082B               	movf	??_Adf_Write_Register_One,w
  7027  0975  00F9               	movwf	Reverse_Array@length
  7028  0976  3037               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  7029  0977  3197  2796  3189   	fcall	_Reverse_Array
  7030                           
  7031                           ;adf7012.c: 187: Write_Adf7012_Reg(reg_ptr, 3);
  7032  097A  3003               	movlw	3
  7033  097B  0020               	movlb	0	; select bank0
  7034  097C  00AB               	movwf	??_Adf_Write_Register_One
  7035  097D  082B               	movf	??_Adf_Write_Register_One,w
  7036  097E  00A3               	movwf	Write_Adf7012_Reg@size_of_reg
  7037  097F  3037               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  7038  0980  3188  2026         	fcall	_Write_Adf7012_Reg
  7039  0982  0008               	return
  7040  0983                     __end_of_Adf_Write_Register_One:	
  7041                           
  7042                           	psect	text34
  7043  0826                     __ptext34:	
  7044 ;; *************** function _Write_Adf7012_Reg *****************
  7045 ;; Defined at:
  7046 ;;		line 89 in file "utility.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;  reg_value       1    wreg     PTR unsigned char 
  7049 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7050 ;;  size_of_reg     1    3[BANK0 ] unsigned char 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  reg_value       1    5[BANK0 ] PTR unsigned char 
  7053 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7054 ;;  i               1    6[BANK0 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      unsigned char 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:        4 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    4
  7071 ;; This function calls:
  7072 ;;		_Delay_ms
  7073 ;;		_Spi_Byte_Send
  7074 ;; This function is called by:
  7075 ;;		_Adf_Write_Register_Zero
  7076 ;;		_Adf_Write_Register_One
  7077 ;;		_Adf_Write_Register_Two
  7078 ;;		_Adf_Write_Register_Three
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           
  7083                           ;psect for function _Write_Adf7012_Reg
  7084  0826                     _Write_Adf7012_Reg:	
  7085                           
  7086                           ;incstack = 0
  7087                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7088                           ;Write_Adf7012_Reg@reg_value stored from wreg
  7089  0826  0020               	movlb	0	; select bank0
  7090  0827  00A5               	movwf	Write_Adf7012_Reg@reg_value
  7091                           
  7092                           ;utility.c: 91: uint8_t i = 0;
  7093  0828  01A6               	clrf	Write_Adf7012_Reg@i
  7094                           
  7095                           ;utility.c: 92: Delay_ms(1);
  7096  0829  3001               	movlw	1
  7097  082A  00F7               	movwf	Delay_ms@time_to_delay
  7098  082B  3000               	movlw	0
  7099  082C  00F8               	movwf	Delay_ms@time_to_delay+1
  7100  082D  3195  255A  3188   	fcall	_Delay_ms
  7101                           
  7102                           ;utility.c: 93: PORTAbits.RA4 = 0;;
  7103  0830  0020               	movlb	0	; select bank0
  7104  0831  120C               	bcf	12,4	;volatile
  7105                           
  7106                           ;utility.c: 94: Delay_ms(1);
  7107  0832  3001               	movlw	1
  7108  0833  00F7               	movwf	Delay_ms@time_to_delay
  7109  0834  3000               	movlw	0
  7110  0835  00F8               	movwf	Delay_ms@time_to_delay+1
  7111  0836  3195  255A  3188   	fcall	_Delay_ms
  7112                           
  7113                           ;utility.c: 96: for (i = 0; i < size_of_reg; i++){
  7114  0839  0020               	movlb	0	; select bank0
  7115  083A  01A6               	clrf	Write_Adf7012_Reg@i
  7116  083B                     l3037:	
  7117  083B  0823               	movf	Write_Adf7012_Reg@size_of_reg,w
  7118  083C  0226               	subwf	Write_Adf7012_Reg@i,w
  7119  083D  1803               	btfsc	3,0
  7120  083E  284F               	goto	l3039
  7121                           
  7122                           ;utility.c: 97: Spi_Byte_Send(*(reg_value+i));
  7123  083F  0826               	movf	Write_Adf7012_Reg@i,w
  7124  0840  0725               	addwf	Write_Adf7012_Reg@reg_value,w
  7125  0841  00A4               	movwf	??_Write_Adf7012_Reg
  7126  0842  0824               	movf	??_Write_Adf7012_Reg,w
  7127  0843  0086               	movwf	6
  7128  0844  0187               	clrf	7
  7129  0845  0801               	movf	1,w
  7130  0846  3196  26B8  3188   	fcall	_Spi_Byte_Send
  7131  0849  3001               	movlw	1
  7132  084A  0020               	movlb	0	; select bank0
  7133  084B  00A4               	movwf	??_Write_Adf7012_Reg
  7134  084C  0824               	movf	??_Write_Adf7012_Reg,w
  7135  084D  07A6               	addwf	Write_Adf7012_Reg@i,f
  7136  084E  283B               	goto	l3037
  7137  084F                     l3039:	
  7138                           
  7139                           ;utility.c: 98: }
  7140                           ;utility.c: 100: Delay_ms(1);
  7141  084F  3001               	movlw	1
  7142  0850  00F7               	movwf	Delay_ms@time_to_delay
  7143  0851  3000               	movlw	0
  7144  0852  00F8               	movwf	Delay_ms@time_to_delay+1
  7145  0853  3195  255A  3188   	fcall	_Delay_ms
  7146                           
  7147                           ;utility.c: 101: PORTAbits.RA4 = 1;;
  7148  0856  0020               	movlb	0	; select bank0
  7149  0857  160C               	bsf	12,4	;volatile
  7150                           
  7151                           ;utility.c: 103: Delay_ms(1);
  7152  0858  3001               	movlw	1
  7153  0859  00F7               	movwf	Delay_ms@time_to_delay
  7154  085A  3000               	movlw	0
  7155  085B  00F8               	movwf	Delay_ms@time_to_delay+1
  7156  085C  3195  255A         	fcall	_Delay_ms
  7157  085E  0008               	return
  7158  085F                     __end_of_Write_Adf7012_Reg:	
  7159                           ;utility.c: 104: return 1;
  7160                           ;	Return value of _Write_Adf7012_Reg is never used
  7161                           
  7162                           
  7163                           	psect	text35
  7164  16B8                     __ptext35:	
  7165 ;; *************** function _Spi_Byte_Send *****************
  7166 ;; Defined at:
  7167 ;;		line 227 in file "utility.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  data            1    wreg     unsigned char 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  data            1    0[BANK0 ] unsigned char 
  7172 ;;  i               1    2[BANK0 ] unsigned char 
  7173 ;;  data_to_send    1    1[BANK0 ] unsigned char 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      unsigned char 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2, status,0, pclath, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7184 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7186 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7187 ;;Total ram usage:        4 bytes
  7188 ;; Hardware stack levels used:    1
  7189 ;; Hardware stack levels required when called:    3
  7190 ;; This function calls:
  7191 ;;		_Delay_ms
  7192 ;; This function is called by:
  7193 ;;		_Write_Adf7012_Reg
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           
  7198                           ;psect for function _Spi_Byte_Send
  7199  16B8                     _Spi_Byte_Send:	
  7200                           
  7201                           ;incstack = 0
  7202                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  7203                           ;Spi_Byte_Send@data stored from wreg
  7204  16B8  0020               	movlb	0	; select bank0
  7205  16B9  00A0               	movwf	Spi_Byte_Send@data
  7206                           
  7207                           ;utility.c: 229: PORTAbits.RA2 = 0;
  7208  16BA  110C               	bcf	12,2	;volatile
  7209                           
  7210                           ;utility.c: 230: uint8_t i;
  7211                           ;utility.c: 231: uint8_t data_to_send;
  7212                           ;utility.c: 232: data_to_send = data;
  7213  16BB  0820               	movf	Spi_Byte_Send@data,w
  7214  16BC  00F9               	movwf	??_Spi_Byte_Send
  7215  16BD  0879               	movf	??_Spi_Byte_Send,w
  7216  16BE  00A1               	movwf	Spi_Byte_Send@data_to_send
  7217                           
  7218                           ;utility.c: 233: for(i = 0; i <8; i++){
  7219  16BF  01A2               	clrf	Spi_Byte_Send@i
  7220  16C0                     L1:	
  7221  16C0  3008               	movlw	8
  7222  16C1  0222               	subwf	Spi_Byte_Send@i,w
  7223  16C2  1803               	btfsc	3,0
  7224  16C3  0008               	return
  7225                           
  7226                           ;utility.c: 235: if(data_to_send & 0x80)
  7227  16C4  1FA1               	btfss	Spi_Byte_Send@data_to_send,7
  7228  16C5  2EC8               	goto	l225
  7229                           
  7230                           ;utility.c: 236: PORTCbits.RC2 = 1;
  7231  16C6  150E               	bsf	14,2	;volatile
  7232  16C7  2EC9               	goto	l1993
  7233  16C8                     l225:	
  7234                           
  7235                           ;utility.c: 237: else
  7236                           ;utility.c: 238: PORTCbits.RC2 = 0;
  7237  16C8  110E               	bcf	14,2	;volatile
  7238  16C9                     l1993:	
  7239                           
  7240                           ;utility.c: 240: data_to_send <<= 1;
  7241  16C9  1003               	clrc
  7242  16CA  0DA1               	rlf	Spi_Byte_Send@data_to_send,f
  7243                           
  7244                           ;utility.c: 242: PORTAbits.RA2 = 1;
  7245  16CB  150C               	bsf	12,2	;volatile
  7246                           
  7247                           ;utility.c: 243: Delay_ms(1);
  7248  16CC  3001               	movlw	1
  7249  16CD  00F7               	movwf	Delay_ms@time_to_delay
  7250  16CE  3000               	movlw	0
  7251  16CF  00F8               	movwf	Delay_ms@time_to_delay+1
  7252  16D0  3195  255A  3196   	fcall	_Delay_ms
  7253                           
  7254                           ;utility.c: 244: PORTAbits.RA2 = 0;
  7255  16D3  0020               	movlb	0	; select bank0
  7256  16D4  110C               	bcf	12,2	;volatile
  7257                           
  7258                           ;utility.c: 245: Delay_ms(1);
  7259  16D5  3001               	movlw	1
  7260  16D6  00F7               	movwf	Delay_ms@time_to_delay
  7261  16D7  3000               	movlw	0
  7262  16D8  00F8               	movwf	Delay_ms@time_to_delay+1
  7263  16D9  3195  255A  3196   	fcall	_Delay_ms
  7264  16DC  3001               	movlw	1
  7265  16DD  00F9               	movwf	??_Spi_Byte_Send
  7266  16DE  0879               	movf	??_Spi_Byte_Send,w
  7267  16DF  0020               	movlb	0	; select bank0
  7268  16E0  07A2               	addwf	Spi_Byte_Send@i,f
  7269  16E1  2EC0               	goto	L1
  7270  16E2                     __end_of_Spi_Byte_Send:	
  7271                           ;utility.c: 247: }
  7272                           ;utility.c: 248: return 1;
  7273                           ;	Return value of _Spi_Byte_Send is never used
  7274                           
  7275                           
  7276                           	psect	text36
  7277  1796                     __ptext36:	
  7278 ;; *************** function _Reverse_Array *****************
  7279 ;; Defined at:
  7280 ;;		line 205 in file "utility.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;  input           1    wreg     PTR unsigned char 
  7283 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7284 ;;  length          1    9[COMMON] unsigned char 
  7285 ;; Auto vars:     Size  Location     Type
  7286 ;;  input           1    9[BANK0 ] PTR unsigned char 
  7287 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7288 ;;  buffer_array    4    5[BANK0 ] unsigned char [4]
  7289 ;;  i               1   10[BANK0 ] unsigned char 
  7290 ;; Return value:  Size  Location     Type
  7291 ;;                  1    wreg      unsigned char 
  7292 ;; Registers used:
  7293 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7294 ;; Tracked objects:
  7295 ;;		On entry : 0/0
  7296 ;;		On exit  : 0/0
  7297 ;;		Unchanged: 0/0
  7298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7299 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7300 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7301 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7302 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7303 ;;Total ram usage:       12 bytes
  7304 ;; Hardware stack levels used:    1
  7305 ;; Hardware stack levels required when called:    2
  7306 ;; This function calls:
  7307 ;;		_memcpy
  7308 ;; This function is called by:
  7309 ;;		_Adf_Write_Register_Zero
  7310 ;;		_Adf_Write_Register_One
  7311 ;;		_Adf_Write_Register_Two
  7312 ;;		_Adf_Write_Register_Three
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           
  7317                           ;psect for function _Reverse_Array
  7318  1796                     _Reverse_Array:	
  7319                           
  7320                           ;incstack = 0
  7321                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7322                           ;Reverse_Array@input stored from wreg
  7323  1796  0020               	movlb	0	; select bank0
  7324  1797  00A9               	movwf	Reverse_Array@input
  7325                           
  7326                           ;utility.c: 206: uint8_t i = 0;
  7327  1798  01AA               	clrf	Reverse_Array@i
  7328                           
  7329                           ;utility.c: 207: uint8_t buffer_array[4];
  7330                           ;utility.c: 208: memcpy(buffer_array, input, length);
  7331  1799  0829               	movf	Reverse_Array@input,w
  7332  179A  00A0               	movwf	??_Reverse_Array
  7333  179B  0820               	movf	??_Reverse_Array,w
  7334  179C  00F2               	movwf	memcpy@s1
  7335  179D  0879               	movf	Reverse_Array@length,w
  7336  179E  00A1               	movwf	??_Reverse_Array+1
  7337  179F  01A2               	clrf	??_Reverse_Array+2
  7338  17A0  0821               	movf	??_Reverse_Array+1,w
  7339  17A1  00F3               	movwf	memcpy@n
  7340  17A2  0822               	movf	??_Reverse_Array+2,w
  7341  17A3  00F4               	movwf	memcpy@n+1
  7342  17A4  3025               	movlw	Reverse_Array@buffer_array& (0+255)
  7343  17A5  3196  2690  3197   	fcall	_memcpy
  7344                           
  7345                           ;utility.c: 210: for(i = 0; i<length; i++){
  7346  17A8  0020               	movlb	0	; select bank0
  7347  17A9  01AA               	clrf	Reverse_Array@i
  7348  17AA                     l2047:	
  7349  17AA  0879               	movf	Reverse_Array@length,w
  7350  17AB  022A               	subwf	Reverse_Array@i,w
  7351  17AC  1803               	btfsc	3,0
  7352  17AD  0008               	return
  7353                           
  7354                           ;utility.c: 211: *(input+i) = *(buffer_array+(length-1)-i);
  7355  17AE  30FF               	movlw	-1
  7356  17AF  0779               	addwf	Reverse_Array@length,w
  7357  17B0  00A0               	movwf	??_Reverse_Array
  7358  17B1  3025               	movlw	Reverse_Array@buffer_array& (0+255)
  7359  17B2  0720               	addwf	??_Reverse_Array,w
  7360  17B3  00A1               	movwf	??_Reverse_Array+1
  7361  17B4  032A               	decf	Reverse_Array@i,w
  7362  17B5  3AFF               	xorlw	255
  7363  17B6  0721               	addwf	??_Reverse_Array+1,w
  7364  17B7  00A2               	movwf	??_Reverse_Array+2
  7365  17B8  0822               	movf	??_Reverse_Array+2,w
  7366  17B9  0086               	movwf	6
  7367  17BA  0187               	clrf	7
  7368  17BB  0801               	movf	1,w
  7369  17BC  00A3               	movwf	??_Reverse_Array+3
  7370  17BD  082A               	movf	Reverse_Array@i,w
  7371  17BE  0729               	addwf	Reverse_Array@input,w
  7372  17BF  00A4               	movwf	??_Reverse_Array+4
  7373  17C0  0824               	movf	??_Reverse_Array+4,w
  7374  17C1  0086               	movwf	6
  7375  17C2  0187               	clrf	7
  7376  17C3  0823               	movf	??_Reverse_Array+3,w
  7377  17C4  0081               	movwf	1
  7378  17C5  3001               	movlw	1
  7379  17C6  00A0               	movwf	??_Reverse_Array
  7380  17C7  0820               	movf	??_Reverse_Array,w
  7381  17C8  07AA               	addwf	Reverse_Array@i,f
  7382  17C9  2FAA               	goto	l2047
  7383  17CA                     __end_of_Reverse_Array:	
  7384                           ;utility.c: 212: }
  7385                           ;utility.c: 216: return 1;
  7386                           ;	Return value of _Reverse_Array is never used
  7387                           
  7388                           
  7389                           	psect	text37
  7390  1690                     __ptext37:	
  7391 ;; *************** function _memcpy *****************
  7392 ;; Defined at:
  7393 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  d1              1    wreg     PTR void 
  7396 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7397 ;;		 -> Reverse_Array@buffer_array(4), 
  7398 ;;  s1              1    2[COMMON] PTR const void 
  7399 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  7400 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  7401 ;;  n               2    3[COMMON] unsigned int 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  d1              1    8[COMMON] PTR void 
  7404 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7405 ;;		 -> Reverse_Array@buffer_array(4), 
  7406 ;;  s               1    7[COMMON] PTR const unsigned char 
  7407 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  7408 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  7409 ;;  d               1    6[COMMON] PTR unsigned char 
  7410 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  7411 ;;		 -> Reverse_Array@buffer_array(4), 
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      PTR void 
  7414 ;; Registers used:
  7415 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7421 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;Total ram usage:        7 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    1
  7428 ;; This function calls:
  7429 ;;		Nothing
  7430 ;; This function is called by:
  7431 ;;		_Reverse_Array
  7432 ;;		_Adf_Write_Register_Zero
  7433 ;;		_Adf_Write_Register_One
  7434 ;;		_Adf_Write_Register_Two
  7435 ;;		_Adf_Write_Register_Three
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           
  7440                           ;psect for function _memcpy
  7441  1690                     _memcpy:	
  7442                           
  7443                           ;incstack = 0
  7444                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  7445                           ;memcpy@d1 stored from wreg
  7446  1690  00F8               	movwf	memcpy@d1
  7447  1691  0872               	movf	memcpy@s1,w
  7448  1692  00F5               	movwf	??_memcpy
  7449  1693  0875               	movf	??_memcpy,w
  7450  1694  00F7               	movwf	memcpy@s
  7451  1695  0878               	movf	memcpy@d1,w
  7452  1696  00F5               	movwf	??_memcpy
  7453  1697  0875               	movf	??_memcpy,w
  7454  1698  00F6               	movwf	memcpy@d
  7455  1699                     l2015:	
  7456  1699  3001               	movlw	1
  7457  169A  02F3               	subwf	memcpy@n,f
  7458  169B  3000               	movlw	0
  7459  169C  3BF4               	subwfb	memcpy@n+1,f
  7460  169D  30FF               	movlw	255
  7461  169E  0674               	xorwf	memcpy@n+1,w
  7462  169F  1D03               	skipz
  7463  16A0  2EA3               	goto	u1995
  7464  16A1  30FF               	movlw	255
  7465  16A2  0673               	xorwf	memcpy@n,w
  7466  16A3                     u1995:	
  7467  16A3  1903               	btfsc	3,2
  7468  16A4  0008               	return
  7469  16A5  0877               	movf	memcpy@s,w
  7470  16A6  0086               	movwf	6
  7471  16A7  0187               	clrf	7
  7472  16A8  0801               	movf	1,w
  7473  16A9  00F5               	movwf	??_memcpy
  7474  16AA  0876               	movf	memcpy@d,w
  7475  16AB  0086               	movwf	6
  7476  16AC  0187               	clrf	7
  7477  16AD  0875               	movf	??_memcpy,w
  7478  16AE  0081               	movwf	1
  7479  16AF  3001               	movlw	1
  7480  16B0  00F5               	movwf	??_memcpy
  7481  16B1  0875               	movf	??_memcpy,w
  7482  16B2  07F7               	addwf	memcpy@s,f
  7483  16B3  3001               	movlw	1
  7484  16B4  00F5               	movwf	??_memcpy
  7485  16B5  0875               	movf	??_memcpy,w
  7486  16B6  07F6               	addwf	memcpy@d,f
  7487  16B7  2E99               	goto	l2015
  7488  16B8                     __end_of_memcpy:	
  7489                           ;	Return value of _memcpy is never used
  7490                           
  7491                           
  7492                           	psect	text38
  7493  07FD                     __ptext38:	
  7494 ;; *************** function _Adf_Locked *****************
  7495 ;; Defined at:
  7496 ;;		line 272 in file "adf7012.c"
  7497 ;; Parameters:    Size  Location     Type
  7498 ;;		None
  7499 ;; Auto vars:     Size  Location     Type
  7500 ;;		None
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  1    wreg      unsigned char 
  7503 ;; Registers used:
  7504 ;;		wreg, status,2, status,0, pclath, cstack
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7514 ;;Total ram usage:        0 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    4
  7517 ;; This function calls:
  7518 ;;		_Read_Adf7012_Muxout
  7519 ;; This function is called by:
  7520 ;;		_Adf_Lock
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           
  7525                           ;psect for function _Adf_Locked
  7526  07FD                     _Adf_Locked:	
  7527                           
  7528                           ;adf7012.c: 274: return Read_Adf7012_Muxout();
  7529                           
  7530                           ;incstack = 0
  7531                           ; Regs used in _Adf_Locked: [wreg+status,2+status,0+pclath+cstack]
  7532  07FD  3195  25A3         	fcall	_Read_Adf7012_Muxout
  7533  07FF  0008               	return
  7534  0800                     __end_of_Adf_Locked:	
  7535                           
  7536                           	psect	text39
  7537  15A3                     __ptext39:	
  7538 ;; *************** function _Read_Adf7012_Muxout *****************
  7539 ;; Defined at:
  7540 ;;		line 69 in file "utility.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;		None
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;		None
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      unsigned char 
  7547 ;; Registers used:
  7548 ;;		wreg, status,2, status,0, pclath, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7558 ;;Total ram usage:        0 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    3
  7561 ;; This function calls:
  7562 ;;		_Delay_ms
  7563 ;; This function is called by:
  7564 ;;		_Adf_Locked
  7565 ;;		_Ptt_On
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           
  7570                           ;psect for function _Read_Adf7012_Muxout
  7571  15A3                     _Read_Adf7012_Muxout:	
  7572                           
  7573                           ;utility.c: 71: Delay_ms(1);
  7574                           
  7575                           ;incstack = 0
  7576                           ; Regs used in _Read_Adf7012_Muxout: [wreg+status,2+status,0+pclath+cstack]
  7577  15A3  3001               	movlw	1
  7578  15A4  00F7               	movwf	Delay_ms@time_to_delay
  7579  15A5  3000               	movlw	0
  7580  15A6  00F8               	movwf	Delay_ms@time_to_delay+1
  7581  15A7  3195  255A  3195   	fcall	_Delay_ms
  7582                           
  7583                           ;utility.c: 73: if(PORTCbits.RC5)
  7584  15AA  0020               	movlb	0	; select bank0
  7585  15AB  1E8E               	btfss	14,5	;volatile
  7586  15AC  2DAF               	goto	l2059
  7587                           
  7588                           ;utility.c: 74: return 1;
  7589  15AD  3001               	movlw	1
  7590  15AE  0008               	return
  7591  15AF                     l2059:	
  7592                           
  7593                           ;utility.c: 75: else
  7594                           ;utility.c: 76: return 0;
  7595  15AF  3000               	movlw	0
  7596  15B0  0008               	return
  7597  15B1                     __end_of_Read_Adf7012_Muxout:	
  7598                           
  7599                           	psect	text40
  7600  155A                     __ptext40:	
  7601 ;; *************** function _Delay_ms *****************
  7602 ;; Defined at:
  7603 ;;		line 53 in file "utility.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  time_to_dela    2    7[COMMON] unsigned int 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;		None
  7608 ;; Return value:  Size  Location     Type
  7609 ;;		None               void
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0, pclath, cstack
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;Total ram usage:        2 bytes
  7622 ;; Hardware stack levels used:    1
  7623 ;; Hardware stack levels required when called:    2
  7624 ;; This function calls:
  7625 ;;		_CheckDelay
  7626 ;; This function is called by:
  7627 ;;		_main
  7628 ;;		_Read_Adf7012_Muxout
  7629 ;;		_Write_Adf7012_Reg
  7630 ;;		_Spi_Byte_Send
  7631 ;;		_Adf_Reset
  7632 ;;		_Adf_Lock
  7633 ;;		_Radio_Setup
  7634 ;;		_Ptt_On
  7635 ;;		_Ptt_Off
  7636 ;;		_Modem_Flush_Frame
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           
  7641                           ;psect for function _Delay_ms
  7642  155A                     _Delay_ms:	
  7643                           
  7644                           ;utility.c: 55: Systick_Counter = 0;
  7645                           
  7646                           ;incstack = 0
  7647                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  7648  155A  0021               	movlb	1	; select bank1
  7649  155B  01CF               	clrf	_Systick_Counter^(0+128)
  7650  155C  01D0               	clrf	(_Systick_Counter+1)^(0+128)
  7651  155D                     l1979:	
  7652                           ;utility.c: 56: while (CheckDelay(time_to_delay));
  7653                           
  7654  155D  0877               	movf	Delay_ms@time_to_delay,w
  7655  155E  3195  25C1  3195   	fcall	_CheckDelay
  7656  1561  0873               	movf	?_CheckDelay+1,w
  7657  1562  0472               	iorwf	?_CheckDelay,w
  7658  1563  1903               	btfsc	3,2
  7659  1564  0008               	return
  7660  1565  2D5D               	goto	l1979
  7661  1566                     __end_of_Delay_ms:	
  7662                           
  7663                           	psect	text41
  7664  15C1                     __ptext41:	
  7665 ;; *************** function _CheckDelay *****************
  7666 ;; Defined at:
  7667 ;;		line 48 in file "utility.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  t               1    wreg     unsigned char 
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;  t               1    6[COMMON] unsigned char 
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  2    2[COMMON] int 
  7674 ;; Registers used:
  7675 ;;		wreg, status,2, status,0
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7684 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;Total ram usage:        5 bytes
  7686 ;; Hardware stack levels used:    1
  7687 ;; Hardware stack levels required when called:    1
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_Delay_ms
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           
  7695                           
  7696                           ;psect for function _CheckDelay
  7697  15C1                     _CheckDelay:	
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _CheckDelay: [wreg+status,2+status,0]
  7701                           ;CheckDelay@t stored from wreg
  7702  15C1  00F6               	movwf	CheckDelay@t
  7703                           
  7704                           ;utility.c: 50: return((t - Systick_Counter));
  7705  15C2  0021               	movlb	1	; select bank1
  7706  15C3  094F               	comf	_Systick_Counter^(0+128),w
  7707  15C4  00F4               	movwf	??_CheckDelay
  7708  15C5  0950               	comf	(_Systick_Counter+1)^(0+128),w
  7709  15C6  00F5               	movwf	??_CheckDelay+1
  7710  15C7  0AF4               	incf	??_CheckDelay,f
  7711  15C8  1903               	skipnz
  7712  15C9  0AF5               	incf	??_CheckDelay+1,f
  7713  15CA  0876               	movf	CheckDelay@t,w
  7714  15CB  0774               	addwf	??_CheckDelay,w
  7715  15CC  00F2               	movwf	?_CheckDelay
  7716  15CD  0875               	movf	??_CheckDelay+1,w
  7717  15CE  1803               	skipnc
  7718  15CF  0A75               	incf	??_CheckDelay+1,w
  7719  15D0  00F3               	movwf	?_CheckDelay+1
  7720  15D1  0008               	return
  7721  15D2                     __end_of_CheckDelay:	
  7722                           
  7723                           	psect	text42
  7724  1527                     __ptext42:	
  7725 ;; *************** function _Dac0_Start *****************
  7726 ;; Defined at:
  7727 ;;		line 285 in file "utility.c"
  7728 ;; Parameters:    Size  Location     Type
  7729 ;;		None
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;		None               void
  7734 ;; Registers used:
  7735 ;;		wreg
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;Total ram usage:        0 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    1
  7748 ;; This function calls:
  7749 ;;		Nothing
  7750 ;; This function is called by:
  7751 ;;		_main
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           
  7756                           ;psect for function _Dac0_Start
  7757  1527                     _Dac0_Start:	
  7758                           
  7759                           ;utility.c: 286: DACEN = 1;
  7760                           
  7761                           ;incstack = 0
  7762                           ; Regs used in _Dac0_Start: [wreg]
  7763  1527  0022               	movlb	2	; select bank2
  7764  1528  1798               	bsf	24,7	;volatile
  7765                           
  7766                           ;utility.c: 287: DACCON1 = 0x10;
  7767  1529  3010               	movlw	16
  7768  152A  0099               	movwf	25	;volatile
  7769  152B  0008               	return
  7770  152C                     __end_of_Dac0_Start:	
  7771                           
  7772                           	psect	text43
  7773  1637                     __ptext43:	
  7774 ;; *************** function _Ax25_Send_String *****************
  7775 ;; Defined at:
  7776 ;;		line 91 in file "ax25.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  string          2    8[BANK0 ] PTR const unsigned char 
  7779 ;;		 -> STR_1(6), 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  i               2   10[BANK0 ] int 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;		None               void
  7784 ;; Registers used:
  7785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7792 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7794 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7795 ;;Total ram usage:        4 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    4
  7798 ;; This function calls:
  7799 ;;		_Ax25_Send_Byte
  7800 ;; This function is called by:
  7801 ;;		_main
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           
  7805                           
  7806                           ;psect for function _Ax25_Send_String
  7807  1637                     _Ax25_Send_String:	
  7808                           
  7809                           ;ax25.c: 93: int i;
  7810                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  7811                           
  7812                           ;incstack = 0
  7813                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7814  1637  0020               	movlb	0	; select bank0
  7815  1638  01AA               	clrf	Ax25_Send_String@i
  7816  1639  01AB               	clrf	Ax25_Send_String@i+1
  7817  163A                     l3571:	
  7818  163A  0828               	movf	Ax25_Send_String@string,w
  7819  163B  072A               	addwf	Ax25_Send_String@i,w
  7820  163C  0084               	movwf	4
  7821  163D  0829               	movf	Ax25_Send_String@string+1,w
  7822  163E  3D2B               	addwfc	Ax25_Send_String@i+1,w
  7823  163F  0085               	movwf	5
  7824  1640  0800               	movf	0,w	;code access
  7825  1641  3800               	iorlw	0
  7826  1642  1903               	btfsc	3,2
  7827  1643  0008               	return
  7828                           
  7829                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  7830  1644  0828               	movf	Ax25_Send_String@string,w
  7831  1645  072A               	addwf	Ax25_Send_String@i,w
  7832  1646  0084               	movwf	4
  7833  1647  0829               	movf	Ax25_Send_String@string+1,w
  7834  1648  3D2B               	addwfc	Ax25_Send_String@i+1,w
  7835  1649  0085               	movwf	5
  7836  164A  0800               	movf	0,w	;code access
  7837  164B  3195  2522  3196   	fcall	_Ax25_Send_Byte
  7838  164E  3001               	movlw	1
  7839  164F  0020               	movlb	0	; select bank0
  7840  1650  07AA               	addwf	Ax25_Send_String@i,f
  7841  1651  3000               	movlw	0
  7842  1652  3DAB               	addwfc	Ax25_Send_String@i+1,f
  7843  1653  2E3A               	goto	l3571
  7844  1654                     __end_of_Ax25_Send_String:	
  7845                           
  7846                           	psect	text44
  7847  1522                     __ptext44:	
  7848 ;; *************** function _Ax25_Send_Byte *****************
  7849 ;; Defined at:
  7850 ;;		line 56 in file "ax25.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  byte            1    wreg     unsigned char 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  byte            1    8[COMMON] unsigned char 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;		None               void
  7857 ;; Registers used:
  7858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;Total ram usage:        1 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    3
  7871 ;; This function calls:
  7872 ;;		_Send_Byte
  7873 ;; This function is called by:
  7874 ;;		_Ax25_Send_String
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           
  7879                           ;psect for function _Ax25_Send_Byte
  7880  1522                     _Ax25_Send_Byte:	
  7881                           
  7882                           ;incstack = 0
  7883                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7884                           ;Ax25_Send_Byte@byte stored from wreg
  7885  1522  00F8               	movwf	Ax25_Send_Byte@byte
  7886                           
  7887                           ;ax25.c: 59: Send_Byte(byte);
  7888  1523  0878               	movf	Ax25_Send_Byte@byte,w
  7889  1524  318F  272A         	fcall	_Send_Byte
  7890  1526  0008               	return
  7891  1527                     __end_of_Ax25_Send_Byte:	
  7892                           
  7893                           	psect	text45
  7894  067A                     __ptext45:	
  7895 ;; *************** function _Ax25_Send_Header *****************
  7896 ;; Defined at:
  7897 ;;		line 99 in file "ax25.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  addresses       1    wreg     PTR struct .
  7900 ;;		 -> main@beacon_address(16), 
  7901 ;;  num_addresse    2    8[BANK0 ] int 
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;  addresses       1   13[BANK0 ] PTR struct .
  7904 ;;		 -> main@beacon_address(16), 
  7905 ;;  i               2   16[BANK0 ] int 
  7906 ;;  j               2   14[BANK0 ] int 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;		None               void
  7909 ;; Registers used:
  7910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7917 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7918 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7919 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7920 ;;Total ram usage:       10 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; Hardware stack levels required when called:    3
  7923 ;; This function calls:
  7924 ;;		_Ax25_Send_Flag
  7925 ;;		_Ax25_Send_Sync
  7926 ;;		_Send_Byte
  7927 ;; This function is called by:
  7928 ;;		_main
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           
  7933                           ;psect for function _Ax25_Send_Header
  7934  067A                     _Ax25_Send_Header:	
  7935                           
  7936                           ;incstack = 0
  7937                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7938                           ;Ax25_Send_Header@addresses stored from wreg
  7939  067A  0020               	movlb	0	; select bank0
  7940  067B  00AD               	movwf	Ax25_Send_Header@addresses
  7941                           
  7942                           ;ax25.c: 101: int i, j;
  7943                           ;ax25.c: 102: modem_packet_size = 0;
  7944  067C  3000               	movlw	0
  7945  067D  0021               	movlb	1	; select bank1
  7946  067E  00CA               	movwf	(_modem_packet_size+3)^(0+128)
  7947  067F  3000               	movlw	0
  7948  0680  00C9               	movwf	(_modem_packet_size+2)^(0+128)
  7949  0681  3000               	movlw	0
  7950  0682  00C8               	movwf	(_modem_packet_size+1)^(0+128)
  7951  0683  3000               	movlw	0
  7952  0684  00C7               	movwf	_modem_packet_size^(0+128)
  7953                           
  7954                           ;ax25.c: 103: ones_in_a_row = 0;
  7955  0685  0022               	movlb	2	; select bank2
  7956  0686  01BE               	clrf	_ones_in_a_row^(0+256)
  7957  0687  01BF               	clrf	(_ones_in_a_row+1)^(0+256)
  7958                           
  7959                           ;ax25.c: 104: crc = 0xffff;
  7960  0688  30FF               	movlw	255
  7961  0689  0021               	movlb	1	; select bank1
  7962  068A  00D1               	movwf	_crc^(0+128)
  7963  068B  30FF               	movlw	255
  7964  068C  00D2               	movwf	(_crc^(0+128)+1)
  7965                           
  7966                           ;ax25.c: 107: for (i = 0; i < 100; i++)
  7967  068D  0020               	movlb	0	; select bank0
  7968  068E  01B0               	clrf	Ax25_Send_Header@i
  7969  068F  01B1               	clrf	Ax25_Send_Header@i+1
  7970  0690  0831               	movf	Ax25_Send_Header@i+1,w
  7971  0691  3A80               	xorlw	128
  7972  0692  00AA               	movwf	??_Ax25_Send_Header
  7973  0693  3080               	movlw	128
  7974  0694  022A               	subwf	??_Ax25_Send_Header,w
  7975  0695  1D03               	skipz
  7976  0696  2E99               	goto	u5345
  7977  0697  3064               	movlw	100
  7978  0698  0230               	subwf	Ax25_Send_Header@i,w
  7979  0699                     u5345:	
  7980  0699  1803               	btfsc	3,0
  7981  069A  2EAE               	goto	l3527
  7982  069B                     l3521:	
  7983                           
  7984                           ;ax25.c: 108: {
  7985                           ;ax25.c: 109: Ax25_Send_Sync();
  7986  069B  318A  228C  3186   	fcall	_Ax25_Send_Sync
  7987  069E  3001               	movlw	1
  7988  069F  0020               	movlb	0	; select bank0
  7989  06A0  07B0               	addwf	Ax25_Send_Header@i,f
  7990  06A1  3000               	movlw	0
  7991  06A2  3DB1               	addwfc	Ax25_Send_Header@i+1,f
  7992  06A3  0831               	movf	Ax25_Send_Header@i+1,w
  7993  06A4  3A80               	xorlw	128
  7994  06A5  00AA               	movwf	??_Ax25_Send_Header
  7995  06A6  3080               	movlw	128
  7996  06A7  022A               	subwf	??_Ax25_Send_Header,w
  7997  06A8  1D03               	skipz
  7998  06A9  2EAC               	goto	u5355
  7999  06AA  3064               	movlw	100
  8000  06AB  0230               	subwf	Ax25_Send_Header@i,w
  8001  06AC                     u5355:	
  8002  06AC  1C03               	skipc
  8003  06AD  2E9B               	goto	l3521
  8004  06AE                     l3527:	
  8005                           
  8006                           ;ax25.c: 110: }
  8007                           ;ax25.c: 113: for (i = 0; i < 3; i++)
  8008  06AE  0020               	movlb	0	; select bank0
  8009  06AF  01B0               	clrf	Ax25_Send_Header@i
  8010  06B0  01B1               	clrf	Ax25_Send_Header@i+1
  8011  06B1  0831               	movf	Ax25_Send_Header@i+1,w
  8012  06B2  3A80               	xorlw	128
  8013  06B3  00AA               	movwf	??_Ax25_Send_Header
  8014  06B4  3080               	movlw	128
  8015  06B5  022A               	subwf	??_Ax25_Send_Header,w
  8016  06B6  1D03               	skipz
  8017  06B7  2EBA               	goto	u5365
  8018  06B8  3003               	movlw	3
  8019  06B9  0230               	subwf	Ax25_Send_Header@i,w
  8020  06BA                     u5365:	
  8021  06BA  1803               	btfsc	3,0
  8022  06BB  2ECF               	goto	l3539
  8023  06BC                     l3533:	
  8024                           
  8025                           ;ax25.c: 114: {
  8026                           ;ax25.c: 115: Ax25_Send_Flag();
  8027  06BC  318B  239F  3186   	fcall	_Ax25_Send_Flag
  8028  06BF  3001               	movlw	1
  8029  06C0  0020               	movlb	0	; select bank0
  8030  06C1  07B0               	addwf	Ax25_Send_Header@i,f
  8031  06C2  3000               	movlw	0
  8032  06C3  3DB1               	addwfc	Ax25_Send_Header@i+1,f
  8033  06C4  0831               	movf	Ax25_Send_Header@i+1,w
  8034  06C5  3A80               	xorlw	128
  8035  06C6  00AA               	movwf	??_Ax25_Send_Header
  8036  06C7  3080               	movlw	128
  8037  06C8  022A               	subwf	??_Ax25_Send_Header,w
  8038  06C9  1D03               	skipz
  8039  06CA  2ECD               	goto	u5375
  8040  06CB  3003               	movlw	3
  8041  06CC  0230               	subwf	Ax25_Send_Header@i,w
  8042  06CD                     u5375:	
  8043  06CD  1C03               	skipc
  8044  06CE  2EBC               	goto	l3533
  8045  06CF                     l3539:	
  8046                           
  8047                           ;ax25.c: 116: }
  8048                           ;ax25.c: 118: for (i = 0; i < num_addresses; i++) {
  8049  06CF  0020               	movlb	0	; select bank0
  8050  06D0  01B0               	clrf	Ax25_Send_Header@i
  8051  06D1  01B1               	clrf	Ax25_Send_Header@i+1
  8052  06D2                     l3561:	
  8053  06D2  0831               	movf	Ax25_Send_Header@i+1,w
  8054  06D3  3A80               	xorlw	128
  8055  06D4  00AA               	movwf	??_Ax25_Send_Header
  8056  06D5  0829               	movf	Ax25_Send_Header@num_addresses+1,w
  8057  06D6  3A80               	xorlw	128
  8058  06D7  022A               	subwf	??_Ax25_Send_Header,w
  8059  06D8  1D03               	skipz
  8060  06D9  2EDC               	goto	u5445
  8061  06DA  0828               	movf	Ax25_Send_Header@num_addresses,w
  8062  06DB  0230               	subwf	Ax25_Send_Header@i,w
  8063  06DC                     u5445:	
  8064  06DC  1803               	btfsc	3,0
  8065  06DD  2F4C               	goto	l3563
  8066                           
  8067                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  8068  06DE  0020               	movlb	0	; select bank0
  8069  06DF  01AE               	clrf	Ax25_Send_Header@j
  8070  06E0  01AF               	clrf	Ax25_Send_Header@j+1
  8071  06E1  082F               	movf	Ax25_Send_Header@j+1,w
  8072  06E2  3A80               	xorlw	128
  8073  06E3  00AA               	movwf	??_Ax25_Send_Header
  8074  06E4  3080               	movlw	128
  8075  06E5  022A               	subwf	??_Ax25_Send_Header,w
  8076  06E6  1D03               	skipz
  8077  06E7  2EEA               	goto	u5385
  8078  06E8  3006               	movlw	6
  8079  06E9  022E               	subwf	Ax25_Send_Header@j,w
  8080  06EA                     u5385:	
  8081  06EA  1803               	btfsc	3,0
  8082  06EB  2F11               	goto	l3553
  8083  06EC                     l3547:	
  8084                           
  8085                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  8086  06EC  0020               	movlb	0	; select bank0
  8087  06ED  0830               	movf	Ax25_Send_Header@i,w
  8088  06EE  00AA               	movwf	??_Ax25_Send_Header
  8089  06EF  3002               	movlw	2
  8090  06F0                     u5395:	
  8091  06F0  35AA               	lslf	??_Ax25_Send_Header,f
  8092  06F1  3EFF               	addlw	-1
  8093  06F2  1D03               	skipz
  8094  06F3  2EF0               	goto	u5395
  8095  06F4  352A               	lslf	??_Ax25_Send_Header,w
  8096  06F5  072D               	addwf	Ax25_Send_Header@addresses,w
  8097  06F6  00AB               	movwf	??_Ax25_Send_Header+1
  8098  06F7  082E               	movf	Ax25_Send_Header@j,w
  8099  06F8  072B               	addwf	??_Ax25_Send_Header+1,w
  8100  06F9  00AC               	movwf	??_Ax25_Send_Header+2
  8101  06FA  082C               	movf	??_Ax25_Send_Header+2,w
  8102  06FB  0086               	movwf	6
  8103  06FC  0187               	clrf	7
  8104  06FD  3501               	lslf	1,w
  8105  06FE  318F  272A  3186   	fcall	_Send_Byte
  8106  0701  3001               	movlw	1
  8107  0702  0020               	movlb	0	; select bank0
  8108  0703  07AE               	addwf	Ax25_Send_Header@j,f
  8109  0704  3000               	movlw	0
  8110  0705  3DAF               	addwfc	Ax25_Send_Header@j+1,f
  8111  0706  082F               	movf	Ax25_Send_Header@j+1,w
  8112  0707  3A80               	xorlw	128
  8113  0708  00AA               	movwf	??_Ax25_Send_Header
  8114  0709  3080               	movlw	128
  8115  070A  022A               	subwf	??_Ax25_Send_Header,w
  8116  070B  1D03               	skipz
  8117  070C  2F0F               	goto	u5405
  8118  070D  3006               	movlw	6
  8119  070E  022E               	subwf	Ax25_Send_Header@j,w
  8120  070F                     u5405:	
  8121  070F  1C03               	skipc
  8122  0710  2EEC               	goto	l3547
  8123  0711                     l3553:	
  8124                           
  8125                           ;ax25.c: 127: if (i == num_addresses - 1)
  8126  0711  0020               	movlb	0	; select bank0
  8127  0712  0828               	movf	Ax25_Send_Header@num_addresses,w
  8128  0713  3EFF               	addlw	255
  8129  0714  00AA               	movwf	??_Ax25_Send_Header
  8130  0715  30FF               	movlw	255
  8131  0716  3D29               	addwfc	Ax25_Send_Header@num_addresses+1,w
  8132  0717  00AB               	movwf	??_Ax25_Send_Header+1
  8133  0718  0831               	movf	Ax25_Send_Header@i+1,w
  8134  0719  062B               	xorwf	??_Ax25_Send_Header+1,w
  8135  071A  1D03               	skipz
  8136  071B  2F1E               	goto	u5415
  8137  071C  0830               	movf	Ax25_Send_Header@i,w
  8138  071D  062A               	xorwf	??_Ax25_Send_Header,w
  8139  071E                     u5415:	
  8140  071E  1D03               	skipz
  8141  071F  2F32               	goto	l3557
  8142                           
  8143                           ;ax25.c: 128: Send_Byte(('0' + addresses[i].ssid) << 1 | 1);
  8144  0720  0830               	movf	Ax25_Send_Header@i,w
  8145  0721  00AA               	movwf	??_Ax25_Send_Header
  8146  0722  3002               	movlw	2
  8147  0723                     u5425:	
  8148  0723  35AA               	lslf	??_Ax25_Send_Header,f
  8149  0724  3EFF               	addlw	-1
  8150  0725  1D03               	skipz
  8151  0726  2F23               	goto	u5425
  8152  0727  352A               	lslf	??_Ax25_Send_Header,w
  8153  0728  072D               	addwf	Ax25_Send_Header@addresses,w
  8154  0729  00AB               	movwf	??_Ax25_Send_Header+1
  8155  072A  082B               	movf	??_Ax25_Send_Header+1,w
  8156  072B  3E07               	addlw	7
  8157  072C  0086               	movwf	6
  8158  072D  0187               	clrf	7
  8159  072E  3501               	lslf	1,w
  8160  072F  3E60               	addlw	96
  8161  0730  3801               	iorlw	1
  8162  0731  2F43               	goto	L2
  8163  0732                     l3557:	
  8164                           
  8165                           ;ax25.c: 130: else
  8166                           ;ax25.c: 131: Send_Byte(('0' + addresses[i].ssid) << 1);
  8167  0732  0020               	movlb	0	; select bank0
  8168  0733  0830               	movf	Ax25_Send_Header@i,w
  8169  0734  00AA               	movwf	??_Ax25_Send_Header
  8170  0735  3002               	movlw	2
  8171  0736                     u5435:	
  8172  0736  35AA               	lslf	??_Ax25_Send_Header,f
  8173  0737  3EFF               	addlw	-1
  8174  0738  1D03               	skipz
  8175  0739  2F36               	goto	u5435
  8176  073A  352A               	lslf	??_Ax25_Send_Header,w
  8177  073B  072D               	addwf	Ax25_Send_Header@addresses,w
  8178  073C  00AB               	movwf	??_Ax25_Send_Header+1
  8179  073D  082B               	movf	??_Ax25_Send_Header+1,w
  8180  073E  3E07               	addlw	7
  8181  073F  0086               	movwf	6
  8182  0740  0187               	clrf	7
  8183  0741  3501               	lslf	1,w
  8184  0742  3E60               	addlw	96
  8185  0743                     L2:	
  8186  0743  318F  272A  3186   	fcall	_Send_Byte
  8187  0746  3001               	movlw	1
  8188  0747  0020               	movlb	0	; select bank0
  8189  0748  07B0               	addwf	Ax25_Send_Header@i,f
  8190  0749  3000               	movlw	0
  8191  074A  3DB1               	addwfc	Ax25_Send_Header@i+1,f
  8192  074B  2ED2               	goto	l3561
  8193  074C                     l3563:	
  8194                           
  8195                           ;ax25.c: 132: }
  8196                           ;ax25.c: 135: Send_Byte(0x03);
  8197  074C  3003               	movlw	3
  8198  074D  318F  272A  3186   	fcall	_Send_Byte
  8199                           
  8200                           ;ax25.c: 138: Send_Byte(0xf0);
  8201  0750  30F0               	movlw	240
  8202  0751  318F  272A         	fcall	_Send_Byte
  8203  0753  0008               	return
  8204  0754                     __end_of_Ax25_Send_Header:	
  8205                           
  8206                           	psect	text46
  8207  0A8C                     __ptext46:	
  8208 ;; *************** function _Ax25_Send_Sync *****************
  8209 ;; Defined at:
  8210 ;;		line 63 in file "ax25.c"
  8211 ;; Parameters:    Size  Location     Type
  8212 ;;		None
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;  i               2    1[BANK0 ] int 
  8215 ;;  byte            1    0[BANK0 ] unsigned char 
  8216 ;; Return value:  Size  Location     Type
  8217 ;;		None               void
  8218 ;; Registers used:
  8219 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8220 ;; Tracked objects:
  8221 ;;		On entry : 0/0
  8222 ;;		On exit  : 0/0
  8223 ;;		Unchanged: 0/0
  8224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8226 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8227 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Totals:         8       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;Total ram usage:       11 bytes
  8230 ;; Hardware stack levels used:    1
  8231 ;; Hardware stack levels required when called:    1
  8232 ;; This function calls:
  8233 ;;		Nothing
  8234 ;; This function is called by:
  8235 ;;		_Ax25_Send_Header
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           
  8240                           ;psect for function _Ax25_Send_Sync
  8241  0A8C                     _Ax25_Send_Sync:	
  8242                           
  8243                           ;ax25.c: 65: uint8_t byte = 0x00;
  8244                           
  8245                           ;incstack = 0
  8246                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  8247  0A8C  0020               	movlb	0	; select bank0
  8248  0A8D  01A0               	clrf	Ax25_Send_Sync@byte
  8249                           
  8250                           ;ax25.c: 66: int i;
  8251                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  8252  0A8E  01A1               	clrf	Ax25_Send_Sync@i
  8253  0A8F  01A2               	clrf	Ax25_Send_Sync@i+1
  8254  0A90                     L3:	
  8255  0A90  0822               	movf	Ax25_Send_Sync@i+1,w
  8256  0A91  3A80               	xorlw	128
  8257  0A92  00F2               	movwf	??_Ax25_Send_Sync
  8258  0A93  3080               	movlw	128
  8259  0A94  0272               	subwf	??_Ax25_Send_Sync,w
  8260  0A95  3008               	movlw	8
  8261  0A96  1903               	btfsc	3,2
  8262  0A97  0221               	subwf	Ax25_Send_Sync@i,w
  8263  0A98  1803               	btfsc	3,0
  8264  0A99  0008               	return
  8265                           
  8266                           ;ax25.c: 68: if (modem_packet_size >= 512 * 8)
  8267  0A9A  3000               	movlw	0
  8268  0A9B  0021               	movlb	1	; select bank1
  8269  0A9C  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8270  0A9D  1D03               	skipz
  8271  0A9E  2AA9               	goto	u3445
  8272  0A9F  3000               	movlw	0
  8273  0AA0  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8274  0AA1  1D03               	skipz
  8275  0AA2  2AA9               	goto	u3445
  8276  0AA3  3010               	movlw	16
  8277  0AA4  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8278  0AA5  1D03               	skipz
  8279  0AA6  2AA9               	goto	u3445
  8280  0AA7  3000               	movlw	0
  8281  0AA8  0247               	subwf	_modem_packet_size^(0+128),w
  8282  0AA9                     u3445:	
  8283  0AA9  1803               	btfsc	3,0
  8284  0AAA  0008               	return
  8285                           
  8286                           ;ax25.c: 70: if ((byte >> i) & 1)
  8287                           
  8288                           ;ax25.c: 69: return;
  8289  0AAB  0020               	movlb	0	; select bank0
  8290  0AAC  0820               	movf	Ax25_Send_Sync@byte,w
  8291  0AAD  00F2               	movwf	??_Ax25_Send_Sync
  8292  0AAE  0A21               	incf	Ax25_Send_Sync@i,w
  8293  0AAF  2AB1               	goto	u3454
  8294  0AB0                     u3455:	
  8295  0AB0  36F2               	lsrf	??_Ax25_Send_Sync,f
  8296  0AB1                     u3454:	
  8297  0AB1  0B89               	decfsz	9,f
  8298  0AB2  2AB0               	goto	u3455
  8299  0AB3  1C72               	btfss	??_Ax25_Send_Sync,0
  8300  0AB4  2ADD               	goto	l2659
  8301                           
  8302                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8303  0AB5  3001               	movlw	1
  8304  0AB6  00F2               	movwf	??_Ax25_Send_Sync
  8305  0AB7  0021               	movlb	1	; select bank1
  8306  0AB8  0847               	movf	_modem_packet_size^(0+128),w
  8307  0AB9  3907               	andlw	7
  8308  0ABA  0A89               	incf	9,f
  8309  0ABB  2ABD               	goto	u3474
  8310  0ABC                     u3475:	
  8311  0ABC  35F2               	lslf	??_Ax25_Send_Sync,f
  8312  0ABD                     u3474:	
  8313  0ABD  0B89               	decfsz	9,f
  8314  0ABE  2ABC               	goto	u3475
  8315  0ABF  0872               	movf	??_Ax25_Send_Sync,w
  8316  0AC0  00F3               	movwf	??_Ax25_Send_Sync+1
  8317  0AC1  0847               	movf	_modem_packet_size^(0+128),w
  8318  0AC2  00F4               	movwf	??_Ax25_Send_Sync+2
  8319  0AC3  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8320  0AC4  00F5               	movwf	??_Ax25_Send_Sync+3
  8321  0AC5  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8322  0AC6  00F6               	movwf	??_Ax25_Send_Sync+4
  8323  0AC7  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8324  0AC8  00F7               	movwf	??_Ax25_Send_Sync+5
  8325  0AC9  3003               	movlw	3
  8326  0ACA                     u3485:	
  8327  0ACA  36F7               	lsrf	??_Ax25_Send_Sync+5,f
  8328  0ACB  0CF6               	rrf	??_Ax25_Send_Sync+4,f
  8329  0ACC  0CF5               	rrf	??_Ax25_Send_Sync+3,f
  8330  0ACD  0CF4               	rrf	??_Ax25_Send_Sync+2,f
  8331  0ACE  0B89               	decfsz	9,f
  8332  0ACF  2ACA               	goto	u3485
  8333  0AD0  30F0               	movlw	240
  8334  0AD1  00F8               	movwf	??_Ax25_Send_Sync+6
  8335  0AD2  3021               	movlw	33
  8336  0AD3  00F9               	movwf	??_Ax25_Send_Sync+7
  8337  0AD4  0874               	movf	??_Ax25_Send_Sync+2,w
  8338  0AD5  0778               	addwf	??_Ax25_Send_Sync+6,w
  8339  0AD6  0086               	movwf	6
  8340  0AD7  0875               	movf	??_Ax25_Send_Sync+3,w
  8341  0AD8  3D79               	addwfc	??_Ax25_Send_Sync+7,w
  8342  0AD9  0087               	movwf	7
  8343  0ADA  0873               	movf	??_Ax25_Send_Sync+1,w
  8344  0ADB  0481               	iorwf	1,f
  8345  0ADC  2B05               	goto	l2661
  8346  0ADD                     l2659:	
  8347                           
  8348                           ;ax25.c: 72: else
  8349                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8350  0ADD  3001               	movlw	1
  8351  0ADE  00F2               	movwf	??_Ax25_Send_Sync
  8352  0ADF  0021               	movlb	1	; select bank1
  8353  0AE0  0847               	movf	_modem_packet_size^(0+128),w
  8354  0AE1  3907               	andlw	7
  8355  0AE2  0A89               	incf	9,f
  8356  0AE3  2AE5               	goto	u3494
  8357  0AE4                     u3495:	
  8358  0AE4  35F2               	lslf	??_Ax25_Send_Sync,f
  8359  0AE5                     u3494:	
  8360  0AE5  0B89               	decfsz	9,f
  8361  0AE6  2AE4               	goto	u3495
  8362  0AE7  0872               	movf	??_Ax25_Send_Sync,w
  8363  0AE8  3AFF               	xorlw	255
  8364  0AE9  00F3               	movwf	??_Ax25_Send_Sync+1
  8365  0AEA  0847               	movf	_modem_packet_size^(0+128),w
  8366  0AEB  00F4               	movwf	??_Ax25_Send_Sync+2
  8367  0AEC  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8368  0AED  00F5               	movwf	??_Ax25_Send_Sync+3
  8369  0AEE  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8370  0AEF  00F6               	movwf	??_Ax25_Send_Sync+4
  8371  0AF0  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8372  0AF1  00F7               	movwf	??_Ax25_Send_Sync+5
  8373  0AF2  3003               	movlw	3
  8374  0AF3                     u3505:	
  8375  0AF3  36F7               	lsrf	??_Ax25_Send_Sync+5,f
  8376  0AF4  0CF6               	rrf	??_Ax25_Send_Sync+4,f
  8377  0AF5  0CF5               	rrf	??_Ax25_Send_Sync+3,f
  8378  0AF6  0CF4               	rrf	??_Ax25_Send_Sync+2,f
  8379  0AF7  0B89               	decfsz	9,f
  8380  0AF8  2AF3               	goto	u3505
  8381  0AF9  30F0               	movlw	240
  8382  0AFA  00F8               	movwf	??_Ax25_Send_Sync+6
  8383  0AFB  3021               	movlw	33
  8384  0AFC  00F9               	movwf	??_Ax25_Send_Sync+7
  8385  0AFD  0874               	movf	??_Ax25_Send_Sync+2,w
  8386  0AFE  0778               	addwf	??_Ax25_Send_Sync+6,w
  8387  0AFF  0086               	movwf	6
  8388  0B00  0875               	movf	??_Ax25_Send_Sync+3,w
  8389  0B01  3D79               	addwfc	??_Ax25_Send_Sync+7,w
  8390  0B02  0087               	movwf	7
  8391  0B03  0873               	movf	??_Ax25_Send_Sync+1,w
  8392  0B04  0581               	andwf	1,f
  8393  0B05                     l2661:	
  8394  0B05  3001               	movlw	1
  8395  0B06  0020               	movlb	0	; select bank0
  8396  0B07  07A1               	addwf	Ax25_Send_Sync@i,f
  8397  0B08  3000               	movlw	0
  8398  0B09  3DA2               	addwfc	Ax25_Send_Sync@i+1,f
  8399  0B0A  3001               	movlw	1
  8400  0B0B  0021               	movlb	1	; select bank1
  8401  0B0C  07C7               	addwf	_modem_packet_size^(0+128),f
  8402  0B0D  3000               	movlw	0
  8403  0B0E  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8404  0B0F  3000               	movlw	0
  8405  0B10  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8406  0B11  3000               	movlw	0
  8407  0B12  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8408  0B13  0020               	movlb	0	; select bank0
  8409  0B14  2A90               	goto	L3
  8410  0B15                     __end_of_Ax25_Send_Sync:	
  8411                           
  8412                           	psect	text47
  8413  1600                     __ptext47:	
  8414 ;; *************** function _Ax25_Send_Footer *****************
  8415 ;; Defined at:
  8416 ;;		line 141 in file "ax25.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;		None
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  final_crc       2    8[BANK0 ] unsigned int 
  8421 ;; Return value:  Size  Location     Type
  8422 ;;		None               void
  8423 ;; Registers used:
  8424 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8431 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;Total ram usage:        2 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    3
  8437 ;; This function calls:
  8438 ;;		_Ax25_Send_Flag
  8439 ;;		_Send_Byte
  8440 ;; This function is called by:
  8441 ;;		_main
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           
  8446                           ;psect for function _Ax25_Send_Footer
  8447  1600                     _Ax25_Send_Footer:	
  8448                           
  8449                           ;ax25.c: 144: uint16_t final_crc = crc;
  8450                           
  8451                           ;incstack = 0
  8452                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8453  1600  0021               	movlb	1	; select bank1
  8454  1601  0852               	movf	(_crc+1)^(0+128),w
  8455  1602  0020               	movlb	0	; select bank0
  8456  1603  01A9               	clrf	Ax25_Send_Footer@final_crc+1
  8457  1604  07A9               	addwf	Ax25_Send_Footer@final_crc+1,f
  8458  1605  0021               	movlb	1	; select bank1
  8459  1606  0851               	movf	_crc^(0+128),w
  8460  1607  0020               	movlb	0	; select bank0
  8461  1608  01A8               	clrf	Ax25_Send_Footer@final_crc
  8462  1609  07A8               	addwf	Ax25_Send_Footer@final_crc,f
  8463                           
  8464                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  8465  160A  0928               	comf	Ax25_Send_Footer@final_crc,w
  8466  160B  318F  272A  3196   	fcall	_Send_Byte
  8467                           
  8468                           ;ax25.c: 148: final_crc >>= 8;
  8469  160E  3008               	movlw	8
  8470  160F  0020               	movlb	0	; select bank0
  8471  1610                     u5465:	
  8472  1610  36A9               	lsrf	Ax25_Send_Footer@final_crc+1,f
  8473  1611  0CA8               	rrf	Ax25_Send_Footer@final_crc,f
  8474  1612  0B89               	decfsz	9,f
  8475  1613  2E10               	goto	u5465
  8476                           
  8477                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  8478  1614  0928               	comf	Ax25_Send_Footer@final_crc,w
  8479  1615  318F  272A  3196   	fcall	_Send_Byte
  8480                           
  8481                           ;ax25.c: 152: Ax25_Send_Flag();
  8482  1618  318B  239F         	fcall	_Ax25_Send_Flag
  8483  161A  0008               	return
  8484  161B                     __end_of_Ax25_Send_Footer:	
  8485                           
  8486                           	psect	text48
  8487  0F2A                     __ptext48:	
  8488 ;; *************** function _Send_Byte *****************
  8489 ;; Defined at:
  8490 ;;		line 33 in file "ax25.c"
  8491 ;; Parameters:    Size  Location     Type
  8492 ;;  byte            1    wreg     unsigned char 
  8493 ;; Auto vars:     Size  Location     Type
  8494 ;;  byte            1    5[COMMON] unsigned char 
  8495 ;;  i               2    6[COMMON] int 
  8496 ;; Return value:  Size  Location     Type
  8497 ;;		None               void
  8498 ;; Registers used:
  8499 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8506 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8507 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8508 ;;      Totals:         3       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8509 ;;Total ram usage:       11 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; Hardware stack levels required when called:    2
  8512 ;; This function calls:
  8513 ;;		_Update_Crc
  8514 ;; This function is called by:
  8515 ;;		_Ax25_Send_Byte
  8516 ;;		_Ax25_Send_Header
  8517 ;;		_Ax25_Send_Footer
  8518 ;; This function uses a non-reentrant model
  8519 ;;
  8520                           
  8521                           
  8522                           ;psect for function _Send_Byte
  8523  0F2A                     _Send_Byte:	
  8524                           
  8525                           ;incstack = 0
  8526                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8527                           ;Send_Byte@byte stored from wreg
  8528  0F2A  00F5               	movwf	Send_Byte@byte
  8529                           
  8530                           ;ax25.c: 35: int i;
  8531                           ;ax25.c: 36: for (i = 0; i < 8; i++) {
  8532  0F2B  01F6               	clrf	Send_Byte@i
  8533  0F2C  01F7               	clrf	Send_Byte@i+1
  8534  0F2D                     L4:	
  8535  0F2D  0877               	movf	Send_Byte@i+1,w
  8536  0F2E  3A80               	xorlw	128
  8537  0F2F  0020               	movlb	0	; select bank0
  8538  0F30  00A0               	movwf	??_Send_Byte
  8539  0F31  3080               	movlw	128
  8540  0F32  0220               	subwf	??_Send_Byte,w
  8541  0F33  3008               	movlw	8
  8542  0F34  1903               	btfsc	3,2
  8543  0F35  0276               	subwf	Send_Byte@i,w
  8544  0F36  1803               	btfsc	3,0
  8545  0F37  0008               	return
  8546                           
  8547                           ;ax25.c: 37: Update_Crc((byte >> i) & 1);
  8548  0F38  0875               	movf	Send_Byte@byte,w
  8549  0F39  0020               	movlb	0	; select bank0
  8550  0F3A  00A0               	movwf	??_Send_Byte
  8551  0F3B  0A76               	incf	Send_Byte@i,w
  8552  0F3C  2F3E               	goto	u5114
  8553  0F3D                     u5115:	
  8554  0F3D  36A0               	lsrf	??_Send_Byte,f
  8555  0F3E                     u5114:	
  8556  0F3E  0B89               	decfsz	9,f
  8557  0F3F  2F3D               	goto	u5115
  8558  0F40  0820               	movf	??_Send_Byte,w
  8559  0F41  3901               	andlw	1
  8560  0F42  3188  2003  318F   	fcall	_Update_Crc
  8561                           
  8562                           ;ax25.c: 38: if ((byte >> i) & 1) {
  8563  0F45  0875               	movf	Send_Byte@byte,w
  8564  0F46  0020               	movlb	0	; select bank0
  8565  0F47  00A0               	movwf	??_Send_Byte
  8566  0F48  0A76               	incf	Send_Byte@i,w
  8567  0F49  2F4B               	goto	u5124
  8568  0F4A                     u5125:	
  8569  0F4A  36A0               	lsrf	??_Send_Byte,f
  8570  0F4B                     u5124:	
  8571  0F4B  0B89               	decfsz	9,f
  8572  0F4C  2F4A               	goto	u5125
  8573  0F4D  1C20               	btfss	??_Send_Byte,0
  8574  0F4E  2FAC               	goto	l3435
  8575                           
  8576                           ;ax25.c: 40: if (modem_packet_size >= 512 * 8)
  8577  0F4F  3000               	movlw	0
  8578  0F50  0021               	movlb	1	; select bank1
  8579  0F51  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8580  0F52  1D03               	skipz
  8581  0F53  2F5E               	goto	u5145
  8582  0F54  3000               	movlw	0
  8583  0F55  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8584  0F56  1D03               	skipz
  8585  0F57  2F5E               	goto	u5145
  8586  0F58  3010               	movlw	16
  8587  0F59  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8588  0F5A  1D03               	skipz
  8589  0F5B  2F5E               	goto	u5145
  8590  0F5C  3000               	movlw	0
  8591  0F5D  0247               	subwf	_modem_packet_size^(0+128),w
  8592  0F5E                     u5145:	
  8593  0F5E  1803               	btfsc	3,0
  8594  0F5F  0008               	return
  8595                           
  8596                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8597                           
  8598                           ;ax25.c: 41: return;
  8599  0F60  3001               	movlw	1
  8600  0F61  0020               	movlb	0	; select bank0
  8601  0F62  00A0               	movwf	??_Send_Byte
  8602  0F63  0021               	movlb	1	; select bank1
  8603  0F64  0847               	movf	_modem_packet_size^(0+128),w
  8604  0F65  3907               	andlw	7
  8605  0F66  0A89               	incf	9,f
  8606  0F67  0020               	movlb	0	; select bank0
  8607  0F68  2F6A               	goto	u5154
  8608  0F69                     u5155:	
  8609  0F69  35A0               	lslf	??_Send_Byte,f
  8610  0F6A                     u5154:	
  8611  0F6A  0B89               	decfsz	9,f
  8612  0F6B  2F69               	goto	u5155
  8613  0F6C  0820               	movf	??_Send_Byte,w
  8614  0F6D  00A1               	movwf	??_Send_Byte+1
  8615  0F6E  0021               	movlb	1	; select bank1
  8616  0F6F  0847               	movf	_modem_packet_size^(0+128),w
  8617  0F70  0020               	movlb	0	; select bank0
  8618  0F71  00A2               	movwf	??_Send_Byte+2
  8619  0F72  0021               	movlb	1	; select bank1
  8620  0F73  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8621  0F74  0020               	movlb	0	; select bank0
  8622  0F75  00A3               	movwf	??_Send_Byte+3
  8623  0F76  0021               	movlb	1	; select bank1
  8624  0F77  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8625  0F78  0020               	movlb	0	; select bank0
  8626  0F79  00A4               	movwf	??_Send_Byte+4
  8627  0F7A  0021               	movlb	1	; select bank1
  8628  0F7B  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8629  0F7C  0020               	movlb	0	; select bank0
  8630  0F7D  00A5               	movwf	??_Send_Byte+5
  8631  0F7E  3003               	movlw	3
  8632  0F7F                     u5165:	
  8633  0F7F  36A5               	lsrf	??_Send_Byte+5,f
  8634  0F80  0CA4               	rrf	??_Send_Byte+4,f
  8635  0F81  0CA3               	rrf	??_Send_Byte+3,f
  8636  0F82  0CA2               	rrf	??_Send_Byte+2,f
  8637  0F83  0B89               	decfsz	9,f
  8638  0F84  2F7F               	goto	u5165
  8639  0F85  30F0               	movlw	240
  8640  0F86  00A6               	movwf	??_Send_Byte+6
  8641  0F87  3021               	movlw	33
  8642  0F88  00A7               	movwf	??_Send_Byte+7
  8643  0F89  0822               	movf	??_Send_Byte+2,w
  8644  0F8A  0726               	addwf	??_Send_Byte+6,w
  8645  0F8B  0086               	movwf	6
  8646  0F8C  0823               	movf	??_Send_Byte+3,w
  8647  0F8D  3D27               	addwfc	??_Send_Byte+7,w
  8648  0F8E  0087               	movwf	7
  8649  0F8F  0821               	movf	??_Send_Byte+1,w
  8650  0F90  0481               	iorwf	1,f
  8651                           
  8652                           ;ax25.c: 43: modem_packet_size++;
  8653  0F91  3001               	movlw	1
  8654  0F92  0021               	movlb	1	; select bank1
  8655  0F93  07C7               	addwf	_modem_packet_size^(0+128),f
  8656  0F94  3000               	movlw	0
  8657  0F95  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8658  0F96  3000               	movlw	0
  8659  0F97  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8660  0F98  3000               	movlw	0
  8661  0F99  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8662                           
  8663                           ;ax25.c: 44: if (++ones_in_a_row < 5) continue;
  8664  0F9A  3001               	movlw	1
  8665  0F9B  0022               	movlb	2	; select bank2
  8666  0F9C  07BE               	addwf	_ones_in_a_row^(0+256),f
  8667  0F9D  3000               	movlw	0
  8668  0F9E  3DBF               	addwfc	(_ones_in_a_row+1)^(0+256),f
  8669  0F9F  083F               	movf	(_ones_in_a_row+1)^(0+256),w
  8670  0FA0  3A80               	xorlw	128
  8671  0FA1  0020               	movlb	0	; select bank0
  8672  0FA2  00A0               	movwf	??_Send_Byte
  8673  0FA3  3080               	movlw	128
  8674  0FA4  0220               	subwf	??_Send_Byte,w
  8675  0FA5  1D03               	skipz
  8676  0FA6  2FAA               	goto	u5175
  8677  0FA7  3005               	movlw	5
  8678  0FA8  0022               	movlb	2	; select bank2
  8679  0FA9  023E               	subwf	_ones_in_a_row^(0+256),w
  8680  0FAA                     u5175:	
  8681  0FAA  1C03               	btfss	3,0
  8682  0FAB  2FFB               	goto	l3445
  8683  0FAC                     l3435:	
  8684                           
  8685                           ;ax25.c: 45: }
  8686                           ;ax25.c: 47: if (modem_packet_size >= 512 * 8)
  8687  0FAC  3000               	movlw	0
  8688  0FAD  0021               	movlb	1	; select bank1
  8689  0FAE  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8690  0FAF  1D03               	skipz
  8691  0FB0  2FBB               	goto	u5185
  8692  0FB1  3000               	movlw	0
  8693  0FB2  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8694  0FB3  1D03               	skipz
  8695  0FB4  2FBB               	goto	u5185
  8696  0FB5  3010               	movlw	16
  8697  0FB6  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8698  0FB7  1D03               	skipz
  8699  0FB8  2FBB               	goto	u5185
  8700  0FB9  3000               	movlw	0
  8701  0FBA  0247               	subwf	_modem_packet_size^(0+128),w
  8702  0FBB                     u5185:	
  8703  0FBB  1803               	btfsc	3,0
  8704  0FBC  0008               	return
  8705                           
  8706                           ;ax25.c: 49: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  8707                           
  8708                           ;ax25.c: 48: return;
  8709  0FBD  3001               	movlw	1
  8710  0FBE  0020               	movlb	0	; select bank0
  8711  0FBF  00A0               	movwf	??_Send_Byte
  8712  0FC0  0021               	movlb	1	; select bank1
  8713  0FC1  0847               	movf	_modem_packet_size^(0+128),w
  8714  0FC2  3907               	andlw	7
  8715  0FC3  0A89               	incf	9,f
  8716  0FC4  0020               	movlb	0	; select bank0
  8717  0FC5  2FC7               	goto	u5194
  8718  0FC6                     u5195:	
  8719  0FC6  35A0               	lslf	??_Send_Byte,f
  8720  0FC7                     u5194:	
  8721  0FC7  0B89               	decfsz	9,f
  8722  0FC8  2FC6               	goto	u5195
  8723  0FC9  0820               	movf	??_Send_Byte,w
  8724  0FCA  3AFF               	xorlw	255
  8725  0FCB  00A1               	movwf	??_Send_Byte+1
  8726  0FCC  0021               	movlb	1	; select bank1
  8727  0FCD  0847               	movf	_modem_packet_size^(0+128),w
  8728  0FCE  0020               	movlb	0	; select bank0
  8729  0FCF  00A2               	movwf	??_Send_Byte+2
  8730  0FD0  0021               	movlb	1	; select bank1
  8731  0FD1  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8732  0FD2  0020               	movlb	0	; select bank0
  8733  0FD3  00A3               	movwf	??_Send_Byte+3
  8734  0FD4  0021               	movlb	1	; select bank1
  8735  0FD5  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8736  0FD6  0020               	movlb	0	; select bank0
  8737  0FD7  00A4               	movwf	??_Send_Byte+4
  8738  0FD8  0021               	movlb	1	; select bank1
  8739  0FD9  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8740  0FDA  0020               	movlb	0	; select bank0
  8741  0FDB  00A5               	movwf	??_Send_Byte+5
  8742  0FDC  3003               	movlw	3
  8743  0FDD                     u5205:	
  8744  0FDD  36A5               	lsrf	??_Send_Byte+5,f
  8745  0FDE  0CA4               	rrf	??_Send_Byte+4,f
  8746  0FDF  0CA3               	rrf	??_Send_Byte+3,f
  8747  0FE0  0CA2               	rrf	??_Send_Byte+2,f
  8748  0FE1  0B89               	decfsz	9,f
  8749  0FE2  2FDD               	goto	u5205
  8750  0FE3  30F0               	movlw	240
  8751  0FE4  00A6               	movwf	??_Send_Byte+6
  8752  0FE5  3021               	movlw	33
  8753  0FE6  00A7               	movwf	??_Send_Byte+7
  8754  0FE7  0822               	movf	??_Send_Byte+2,w
  8755  0FE8  0726               	addwf	??_Send_Byte+6,w
  8756  0FE9  0086               	movwf	6
  8757  0FEA  0823               	movf	??_Send_Byte+3,w
  8758  0FEB  3D27               	addwfc	??_Send_Byte+7,w
  8759  0FEC  0087               	movwf	7
  8760  0FED  0821               	movf	??_Send_Byte+1,w
  8761  0FEE  0581               	andwf	1,f
  8762                           
  8763                           ;ax25.c: 50: modem_packet_size++;
  8764  0FEF  3001               	movlw	1
  8765  0FF0  0021               	movlb	1	; select bank1
  8766  0FF1  07C7               	addwf	_modem_packet_size^(0+128),f
  8767  0FF2  3000               	movlw	0
  8768  0FF3  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  8769  0FF4  3000               	movlw	0
  8770  0FF5  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  8771  0FF6  3000               	movlw	0
  8772  0FF7  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  8773                           
  8774                           ;ax25.c: 51: ones_in_a_row = 0;
  8775  0FF8  0022               	movlb	2	; select bank2
  8776  0FF9  01BE               	clrf	_ones_in_a_row^(0+256)
  8777  0FFA  01BF               	clrf	(_ones_in_a_row+1)^(0+256)
  8778  0FFB                     l3445:	
  8779  0FFB  3001               	movlw	1
  8780  0FFC  07F6               	addwf	Send_Byte@i,f
  8781  0FFD  3000               	movlw	0
  8782  0FFE  3DF7               	addwfc	Send_Byte@i+1,f
  8783  0FFF  2F2D               	goto	L4
  8784  1000                     __end_of_Send_Byte:	
  8785                           
  8786                           	psect	text49
  8787  0803                     __ptext49:	
  8788 ;; *************** function _Update_Crc *****************
  8789 ;; Defined at:
  8790 ;;		line 24 in file "ax25.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  input_bit       1    wreg     unsigned char 
  8793 ;; Auto vars:     Size  Location     Type
  8794 ;;  input_bit       1    4[COMMON] unsigned char 
  8795 ;; Return value:  Size  Location     Type
  8796 ;;		None               void
  8797 ;; Registers used:
  8798 ;;		wreg, status,2, status,0
  8799 ;; Tracked objects:
  8800 ;;		On entry : 0/0
  8801 ;;		On exit  : 0/0
  8802 ;;		Unchanged: 0/0
  8803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8807 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8808 ;;Total ram usage:        3 bytes
  8809 ;; Hardware stack levels used:    1
  8810 ;; Hardware stack levels required when called:    1
  8811 ;; This function calls:
  8812 ;;		Nothing
  8813 ;; This function is called by:
  8814 ;;		_Send_Byte
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           
  8819                           ;psect for function _Update_Crc
  8820  0803                     _Update_Crc:	
  8821                           
  8822                           ;incstack = 0
  8823                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  8824                           ;Update_Crc@input_bit stored from wreg
  8825  0803  00F4               	movwf	Update_Crc@input_bit
  8826                           
  8827                           ;ax25.c: 26: crc ^= input_bit;
  8828  0804  0874               	movf	Update_Crc@input_bit,w
  8829  0805  00F2               	movwf	??_Update_Crc
  8830  0806  01F3               	clrf	??_Update_Crc+1
  8831  0807  0872               	movf	??_Update_Crc,w
  8832  0808  0021               	movlb	1	; select bank1
  8833  0809  06D1               	xorwf	_crc^(0+128),f
  8834  080A  0873               	movf	??_Update_Crc+1,w
  8835  080B  06D2               	xorwf	(_crc+1)^(0+128),f
  8836                           
  8837                           ;ax25.c: 27: if (crc & 1)
  8838  080C  1C51               	btfss	_crc^(0+128),0
  8839  080D  281B               	goto	l3115
  8840                           
  8841                           ;ax25.c: 28: crc = (crc >> 1) ^ 0x8408;
  8842  080E  0852               	movf	(_crc+1)^(0+128),w
  8843  080F  00F3               	movwf	??_Update_Crc+1
  8844  0810  0851               	movf	_crc^(0+128),w
  8845  0811  00F2               	movwf	??_Update_Crc
  8846  0812  36F3               	lsrf	??_Update_Crc+1,f
  8847  0813  0CF2               	rrf	??_Update_Crc,f
  8848  0814  3008               	movlw	8
  8849  0815  0672               	xorwf	??_Update_Crc,w
  8850  0816  00D1               	movwf	_crc^(0+128)
  8851  0817  3084               	movlw	132
  8852  0818  0673               	xorwf	??_Update_Crc+1,w
  8853  0819  00D2               	movwf	(_crc+1)^(0+128)
  8854  081A  0008               	return
  8855  081B                     l3115:	
  8856                           
  8857                           ;ax25.c: 29: else
  8858                           ;ax25.c: 30: crc = crc >> 1;
  8859  081B  0852               	movf	(_crc+1)^(0+128),w
  8860  081C  00F3               	movwf	??_Update_Crc+1
  8861  081D  0851               	movf	_crc^(0+128),w
  8862  081E  00F2               	movwf	??_Update_Crc
  8863  081F  36F3               	lsrf	??_Update_Crc+1,f
  8864  0820  0CF2               	rrf	??_Update_Crc,f
  8865  0821  0872               	movf	??_Update_Crc,w
  8866  0822  00D1               	movwf	_crc^(0+128)
  8867  0823  0873               	movf	??_Update_Crc+1,w
  8868  0824  00D2               	movwf	(_crc+1)^(0+128)
  8869  0825  0008               	return
  8870  0826                     __end_of_Update_Crc:	
  8871                           
  8872                           	psect	text50
  8873  0B9F                     __ptext50:	
  8874 ;; *************** function _Ax25_Send_Flag *****************
  8875 ;; Defined at:
  8876 ;;		line 77 in file "ax25.c"
  8877 ;; Parameters:    Size  Location     Type
  8878 ;;		None
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;  i               2    1[BANK0 ] int 
  8881 ;;  byte            1    0[BANK0 ] unsigned char 
  8882 ;; Return value:  Size  Location     Type
  8883 ;;		None               void
  8884 ;; Registers used:
  8885 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8892 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8893 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8894 ;;      Totals:         8       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8895 ;;Total ram usage:       11 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    1
  8898 ;; This function calls:
  8899 ;;		Nothing
  8900 ;; This function is called by:
  8901 ;;		_Ax25_Send_Header
  8902 ;;		_Ax25_Send_Footer
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           
  8907                           ;psect for function _Ax25_Send_Flag
  8908  0B9F                     _Ax25_Send_Flag:	
  8909                           
  8910                           ;ax25.c: 79: uint8_t byte = 0x7e;
  8911                           
  8912                           ;incstack = 0
  8913                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  8914  0B9F  307E               	movlw	126
  8915  0BA0  00F2               	movwf	??_Ax25_Send_Flag
  8916  0BA1  0872               	movf	??_Ax25_Send_Flag,w
  8917  0BA2  0020               	movlb	0	; select bank0
  8918  0BA3  00A0               	movwf	Ax25_Send_Flag@byte
  8919                           
  8920                           ;ax25.c: 80: int i;
  8921                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  8922  0BA4  01A1               	clrf	Ax25_Send_Flag@i
  8923  0BA5  01A2               	clrf	Ax25_Send_Flag@i+1
  8924  0BA6                     L5:	
  8925  0BA6  0822               	movf	Ax25_Send_Flag@i+1,w
  8926  0BA7  3A80               	xorlw	128
  8927  0BA8  00F2               	movwf	??_Ax25_Send_Flag
  8928  0BA9  3080               	movlw	128
  8929  0BAA  0272               	subwf	??_Ax25_Send_Flag,w
  8930  0BAB  3008               	movlw	8
  8931  0BAC  1903               	btfsc	3,2
  8932  0BAD  0221               	subwf	Ax25_Send_Flag@i,w
  8933  0BAE  1803               	btfsc	3,0
  8934  0BAF  0008               	return
  8935                           
  8936                           ;ax25.c: 82: if (modem_packet_size >= 512 * 8)
  8937  0BB0  3000               	movlw	0
  8938  0BB1  0021               	movlb	1	; select bank1
  8939  0BB2  024A               	subwf	(_modem_packet_size+3)^(0+128),w
  8940  0BB3  1D03               	skipz
  8941  0BB4  2BBF               	goto	u5265
  8942  0BB5  3000               	movlw	0
  8943  0BB6  0249               	subwf	(_modem_packet_size+2)^(0+128),w
  8944  0BB7  1D03               	skipz
  8945  0BB8  2BBF               	goto	u5265
  8946  0BB9  3010               	movlw	16
  8947  0BBA  0248               	subwf	(_modem_packet_size+1)^(0+128),w
  8948  0BBB  1D03               	skipz
  8949  0BBC  2BBF               	goto	u5265
  8950  0BBD  3000               	movlw	0
  8951  0BBE  0247               	subwf	_modem_packet_size^(0+128),w
  8952  0BBF                     u5265:	
  8953  0BBF  1803               	btfsc	3,0
  8954  0BC0  0008               	return
  8955                           
  8956                           ;ax25.c: 84: if ((byte >> i) & 1)
  8957                           
  8958                           ;ax25.c: 83: return;
  8959  0BC1  0020               	movlb	0	; select bank0
  8960  0BC2  0820               	movf	Ax25_Send_Flag@byte,w
  8961  0BC3  00F2               	movwf	??_Ax25_Send_Flag
  8962  0BC4  0A21               	incf	Ax25_Send_Flag@i,w
  8963  0BC5  2BC7               	goto	u5274
  8964  0BC6                     u5275:	
  8965  0BC6  36F2               	lsrf	??_Ax25_Send_Flag,f
  8966  0BC7                     u5274:	
  8967  0BC7  0B89               	decfsz	9,f
  8968  0BC8  2BC6               	goto	u5275
  8969  0BC9  1C72               	btfss	??_Ax25_Send_Flag,0
  8970  0BCA  2BF3               	goto	l3503
  8971                           
  8972                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  8973  0BCB  3001               	movlw	1
  8974  0BCC  00F2               	movwf	??_Ax25_Send_Flag
  8975  0BCD  0021               	movlb	1	; select bank1
  8976  0BCE  0847               	movf	_modem_packet_size^(0+128),w
  8977  0BCF  3907               	andlw	7
  8978  0BD0  0A89               	incf	9,f
  8979  0BD1  2BD3               	goto	u5294
  8980  0BD2                     u5295:	
  8981  0BD2  35F2               	lslf	??_Ax25_Send_Flag,f
  8982  0BD3                     u5294:	
  8983  0BD3  0B89               	decfsz	9,f
  8984  0BD4  2BD2               	goto	u5295
  8985  0BD5  0872               	movf	??_Ax25_Send_Flag,w
  8986  0BD6  00F3               	movwf	??_Ax25_Send_Flag+1
  8987  0BD7  0847               	movf	_modem_packet_size^(0+128),w
  8988  0BD8  00F4               	movwf	??_Ax25_Send_Flag+2
  8989  0BD9  0848               	movf	(_modem_packet_size+1)^(0+128),w
  8990  0BDA  00F5               	movwf	??_Ax25_Send_Flag+3
  8991  0BDB  0849               	movf	(_modem_packet_size+2)^(0+128),w
  8992  0BDC  00F6               	movwf	??_Ax25_Send_Flag+4
  8993  0BDD  084A               	movf	(_modem_packet_size+3)^(0+128),w
  8994  0BDE  00F7               	movwf	??_Ax25_Send_Flag+5
  8995  0BDF  3003               	movlw	3
  8996  0BE0                     u5305:	
  8997  0BE0  36F7               	lsrf	??_Ax25_Send_Flag+5,f
  8998  0BE1  0CF6               	rrf	??_Ax25_Send_Flag+4,f
  8999  0BE2  0CF5               	rrf	??_Ax25_Send_Flag+3,f
  9000  0BE3  0CF4               	rrf	??_Ax25_Send_Flag+2,f
  9001  0BE4  0B89               	decfsz	9,f
  9002  0BE5  2BE0               	goto	u5305
  9003  0BE6  30F0               	movlw	240
  9004  0BE7  00F8               	movwf	??_Ax25_Send_Flag+6
  9005  0BE8  3021               	movlw	33
  9006  0BE9  00F9               	movwf	??_Ax25_Send_Flag+7
  9007  0BEA  0874               	movf	??_Ax25_Send_Flag+2,w
  9008  0BEB  0778               	addwf	??_Ax25_Send_Flag+6,w
  9009  0BEC  0086               	movwf	6
  9010  0BED  0875               	movf	??_Ax25_Send_Flag+3,w
  9011  0BEE  3D79               	addwfc	??_Ax25_Send_Flag+7,w
  9012  0BEF  0087               	movwf	7
  9013  0BF0  0873               	movf	??_Ax25_Send_Flag+1,w
  9014  0BF1  0481               	iorwf	1,f
  9015  0BF2  2C1B               	goto	l3505
  9016  0BF3                     l3503:	
  9017                           
  9018                           ;ax25.c: 86: else
  9019                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  9020  0BF3  3001               	movlw	1
  9021  0BF4  00F2               	movwf	??_Ax25_Send_Flag
  9022  0BF5  0021               	movlb	1	; select bank1
  9023  0BF6  0847               	movf	_modem_packet_size^(0+128),w
  9024  0BF7  3907               	andlw	7
  9025  0BF8  0A89               	incf	9,f
  9026  0BF9  2BFB               	goto	u5314
  9027  0BFA                     u5315:	
  9028  0BFA  35F2               	lslf	??_Ax25_Send_Flag,f
  9029  0BFB                     u5314:	
  9030  0BFB  0B89               	decfsz	9,f
  9031  0BFC  2BFA               	goto	u5315
  9032  0BFD  0872               	movf	??_Ax25_Send_Flag,w
  9033  0BFE  3AFF               	xorlw	255
  9034  0BFF  00F3               	movwf	??_Ax25_Send_Flag+1
  9035  0C00  0847               	movf	_modem_packet_size^(0+128),w
  9036  0C01  00F4               	movwf	??_Ax25_Send_Flag+2
  9037  0C02  0848               	movf	(_modem_packet_size+1)^(0+128),w
  9038  0C03  00F5               	movwf	??_Ax25_Send_Flag+3
  9039  0C04  0849               	movf	(_modem_packet_size+2)^(0+128),w
  9040  0C05  00F6               	movwf	??_Ax25_Send_Flag+4
  9041  0C06  084A               	movf	(_modem_packet_size+3)^(0+128),w
  9042  0C07  00F7               	movwf	??_Ax25_Send_Flag+5
  9043  0C08  3003               	movlw	3
  9044  0C09                     u5325:	
  9045  0C09  36F7               	lsrf	??_Ax25_Send_Flag+5,f
  9046  0C0A  0CF6               	rrf	??_Ax25_Send_Flag+4,f
  9047  0C0B  0CF5               	rrf	??_Ax25_Send_Flag+3,f
  9048  0C0C  0CF4               	rrf	??_Ax25_Send_Flag+2,f
  9049  0C0D  0B89               	decfsz	9,f
  9050  0C0E  2C09               	goto	u5325
  9051  0C0F  30F0               	movlw	240
  9052  0C10  00F8               	movwf	??_Ax25_Send_Flag+6
  9053  0C11  3021               	movlw	33
  9054  0C12  00F9               	movwf	??_Ax25_Send_Flag+7
  9055  0C13  0874               	movf	??_Ax25_Send_Flag+2,w
  9056  0C14  0778               	addwf	??_Ax25_Send_Flag+6,w
  9057  0C15  0086               	movwf	6
  9058  0C16  0875               	movf	??_Ax25_Send_Flag+3,w
  9059  0C17  3D79               	addwfc	??_Ax25_Send_Flag+7,w
  9060  0C18  0087               	movwf	7
  9061  0C19  0873               	movf	??_Ax25_Send_Flag+1,w
  9062  0C1A  0581               	andwf	1,f
  9063  0C1B                     l3505:	
  9064  0C1B  3001               	movlw	1
  9065  0C1C  0020               	movlb	0	; select bank0
  9066  0C1D  07A1               	addwf	Ax25_Send_Flag@i,f
  9067  0C1E  3000               	movlw	0
  9068  0C1F  3DA2               	addwfc	Ax25_Send_Flag@i+1,f
  9069  0C20  3001               	movlw	1
  9070  0C21  0021               	movlb	1	; select bank1
  9071  0C22  07C7               	addwf	_modem_packet_size^(0+128),f
  9072  0C23  3000               	movlw	0
  9073  0C24  3DC8               	addwfc	(_modem_packet_size+1)^(0+128),f
  9074  0C25  3000               	movlw	0
  9075  0C26  3DC9               	addwfc	(_modem_packet_size+2)^(0+128),f
  9076  0C27  3000               	movlw	0
  9077  0C28  3DCA               	addwfc	(_modem_packet_size+3)^(0+128),f
  9078  0C29  0020               	movlb	0	; select bank0
  9079  0C2A  2BA6               	goto	L5
  9080  0C2B                     __end_of_Ax25_Send_Flag:	
  9081                           
  9082                           	psect	text51
  9083  1531                     __ptext51:	
  9084 ;; *************** function _Adc1_Start *****************
  9085 ;; Defined at:
  9086 ;;		line 294 in file "utility.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;		None
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;		None
  9091 ;; Return value:  Size  Location     Type
  9092 ;;		None               void
  9093 ;; Registers used:
  9094 ;;		None
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9104 ;;Total ram usage:        0 bytes
  9105 ;; Hardware stack levels used:    1
  9106 ;; Hardware stack levels required when called:    1
  9107 ;; This function calls:
  9108 ;;		Nothing
  9109 ;; This function is called by:
  9110 ;;		_main
  9111 ;; This function uses a non-reentrant model
  9112 ;;
  9113                           
  9114                           
  9115                           ;psect for function _Adc1_Start
  9116  1531                     _Adc1_Start:	
  9117                           
  9118                           ;utility.c: 295: ADIF = 0;
  9119                           
  9120                           ;incstack = 0
  9121                           ; Regs used in _Adc1_Start: []
  9122  1531  0020               	movlb	0	; select bank0
  9123  1532  1311               	bcf	17,6	;volatile
  9124                           
  9125                           ;utility.c: 296: ADON = 1;
  9126  1533  0021               	movlb	1	; select bank1
  9127  1534  141D               	bsf	29,0	;volatile
  9128                           
  9129                           ;utility.c: 297: ADIE = 1;
  9130  1535  1711               	bsf	17,6	;volatile
  9131  1536  0008               	return
  9132  1537                     __end_of_Adc1_Start:	
  9133                           
  9134                           	psect	intentry
  9135  0004                     __pintentry:	
  9136 ;; *************** function _global_interrupt *****************
  9137 ;; Defined at:
  9138 ;;		line 41 in file "main.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;		None
  9141 ;; Auto vars:     Size  Location     Type
  9142 ;;		None
  9143 ;; Return value:  Size  Location     Type
  9144 ;;		None               void
  9145 ;; Registers used:
  9146 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9154 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9156 ;;Total ram usage:        2 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		Interrupt level 1
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165  0004                     _global_interrupt:	
  9166                           
  9167                           ;incstack = 0
  9168                           ; Regs used in _global_interrupt: [wreg-fsr0h+status,2+status,0+pclath]
  9169  0004  147E               	bsf	126,0	;set compiler interrupt flag
  9170  0005  3180               	pagesel	$
  9171  0006  0020               	movlb	0	; select bank0
  9172  0007  087F               	movf	127,w
  9173  0008  00F1               	movwf	??_global_interrupt+1
  9174                           
  9175                           ;main.c: 43: INTCON &= ~0x80;
  9176  0009  307F               	movlw	127
  9177  000A  00F0               	movwf	??_global_interrupt
  9178  000B  0870               	movf	??_global_interrupt,w
  9179  000C  058B               	andwf	11,f	;volatile
  9180                           
  9181                           ;main.c: 46: if(ADIF){
  9182  000D  1F11               	btfss	17,6	;volatile
  9183  000E  281A               	goto	i1l2867
  9184                           
  9185                           ;main.c: 47: adc_sonuc_high = ADRESH;
  9186  000F  0021               	movlb	1	; select bank1
  9187  0010  081C               	movf	28,w	;volatile
  9188  0011  00F0               	movwf	??_global_interrupt
  9189  0012  0870               	movf	??_global_interrupt,w
  9190  0013  00D5               	movwf	_adc_sonuc_high^(0+128)
  9191                           
  9192                           ;main.c: 48: adc_sonuc_low = ADRESL;
  9193  0014  081B               	movf	27,w	;volatile
  9194  0015  00F0               	movwf	??_global_interrupt
  9195  0016  0870               	movf	??_global_interrupt,w
  9196  0017  00D6               	movwf	_adc_sonuc_low^(0+128)
  9197                           
  9198                           ;main.c: 50: ADIF = 0;
  9199  0018  0020               	movlb	0	; select bank0
  9200  0019  1311               	bcf	17,6	;volatile
  9201  001A                     i1l2867:	
  9202                           
  9203                           ;main.c: 51: }
  9204                           ;main.c: 55: if(PIR1 & 0x04){
  9205  001A  1D11               	btfss	17,2	;volatile
  9206  001B  282A               	goto	i1l2879
  9207                           
  9208                           ;main.c: 57: Systick_Counter += 1;
  9209  001C  3001               	movlw	1
  9210  001D  0021               	movlb	1	; select bank1
  9211  001E  07CF               	addwf	_Systick_Counter^(0+128),f
  9212  001F  3000               	movlw	0
  9213  0020  3DD0               	addwfc	(_Systick_Counter+1)^(0+128),f
  9214                           
  9215                           ;main.c: 61: TMR1H = 0x00;
  9216  0021  0020               	movlb	0	; select bank0
  9217  0022  0197               	clrf	23	;volatile
  9218                           
  9219                           ;main.c: 62: TMR1L = 0x00;
  9220  0023  0196               	clrf	22	;volatile
  9221                           
  9222                           ;main.c: 64: PIR1 &= ~0x04;
  9223  0024  30FB               	movlw	251
  9224  0025  00F0               	movwf	??_global_interrupt
  9225  0026  0870               	movf	??_global_interrupt,w
  9226  0027  0591               	andwf	17,f	;volatile
  9227                           
  9228                           ;main.c: 66: ADCON0 |= 0b00000010;
  9229  0028  0021               	movlb	1	; select bank1
  9230  0029  149D               	bsf	29,1	;volatile
  9231  002A                     i1l2879:	
  9232                           
  9233                           ;main.c: 68: }
  9234                           ;main.c: 72: if(INTCON & 0x04){
  9235  002A  1D0B               	btfss	11,2	;volatile
  9236  002B  2842               	goto	i1l2891
  9237                           
  9238                           ;main.c: 74: DACCON1 = sine_table[i++];
  9239  002C  087B               	movf	_i,w
  9240  002D  3E00               	addlw	low (_sine_table| (0+32768))
  9241  002E  0084               	movwf	4
  9242  002F  3081               	movlw	high (_sine_table| (0+32768))
  9243  0030  1803               	skipnc
  9244  0031  3E01               	addlw	1
  9245  0032  0085               	movwf	5
  9246  0033  0800               	movf	0,w	;code access
  9247  0034  0022               	movlb	2	; select bank2
  9248  0035  0099               	movwf	25	;volatile
  9249  0036  3001               	movlw	1
  9250  0037  00F0               	movwf	??_global_interrupt
  9251  0038  0870               	movf	??_global_interrupt,w
  9252  0039  07FB               	addwf	_i,f
  9253                           
  9254                           ;main.c: 75: if (i==25)
  9255  003A  087B               	movf	_i,w
  9256  003B  3A19               	xorlw	25
  9257  003C  1903               	btfsc	3,2
  9258                           
  9259                           ;main.c: 76: i=0;
  9260  003D  01FB               	clrf	_i
  9261                           
  9262                           ;main.c: 80: INTCON &= ~0x04;
  9263  003E  30FB               	movlw	251
  9264  003F  00F0               	movwf	??_global_interrupt
  9265  0040  0870               	movf	??_global_interrupt,w
  9266  0041  058B               	andwf	11,f	;volatile
  9267  0042                     i1l2891:	
  9268                           
  9269                           ;main.c: 81: }
  9270                           ;main.c: 86: INTCON |= 0x80;
  9271  0042  178B               	bsf	11,7	;volatile
  9272  0043  0871               	movf	??_global_interrupt+1,w
  9273  0044  0020               	movlb	0	; select bank0
  9274  0045  00FF               	movwf	127
  9275  0046  107E               	bcf	126,0	;clear compiler interrupt flag
  9276  0047  0009               	retfie
  9277  0048                     __end_of_global_interrupt:	
  9278  007E                     btemp	set	126	;btemp
  9279  007E                     pic14e$flags	set	126
  9280  007E                     wtemp	set	126
  9281  007E                     wtemp0	set	126
  9282  0080                     wtemp1	set	128
  9283  0082                     wtemp2	set	130
  9284  0084                     wtemp3	set	132
  9285  0086                     wtemp4	set	134
  9286  0088                     wtemp5	set	136
  9287  007F                     wtemp6	set	127
  9288  007E                     ttemp	set	126
  9289  007E                     ttemp0	set	126
  9290  0081                     ttemp1	set	129
  9291  0084                     ttemp2	set	132
  9292  0087                     ttemp3	set	135
  9293  007F                     ttemp4	set	127
  9294  007E                     ltemp	set	126
  9295  007E                     ltemp0	set	126
  9296  0082                     ltemp1	set	130
  9297  0086                     ltemp2	set	134
  9298  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    520
    Data        30
    BSS         94
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     79      80
    BANK1            80     20      79
    BANK2            80      0      62
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0
    BANK7             0      0       0
    BANK8             0      0       0
    BANK9             0      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Three@reg(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Three@reg(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    _Set_Freq->___aldiv
    ___lltoft->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___ftadd->___ftpack
    _Adf_Reset->_Delay_ms
    _Modem_Init->___lmul
    ___lldiv->___lmul
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy
    _Read_Adf7012_Muxout->_Delay_ms
    _Delay_ms->_CheckDelay
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Ax25_Send_Flag
    _Ax25_Send_Header->_Ax25_Send_Sync
    _Ax25_Send_Footer->_Ax25_Send_Flag
    _Send_Byte->_Update_Crc

Critical Paths under _global_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Ptt_On
    _Set_Freq->___fttol
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftdiv->___lltoft
    ___ftadd->___ftneg
    _Modem_Init->___lldiv
    ___lldiv->___lmul
    _Modem_Flush_Frame->_Ptt_On
    _Ptt_On->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _Ptt_On->_Adf_Lock

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  169019
                                             78 BANK0      1     1      0
                                              4 BANK1     16    16      0
                         _Adc1_Start
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                         _Dac0_Start
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                             _Ptt_On
                       _System_Start
                       _Timer0_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   23797
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   39545
                         _Modem_Init
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   38480
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
                        _Gpio_Config
                           _Set_Freq
 ---------------------------------------------------------------------------------
 (3) _Set_Freq                                            26    22      4   13314
                                             30 BANK0     26    22      4
                            ___aldiv
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                            ___lldiv
                           ___lltoft
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             6     2      4    2334
                                              0 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     305
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      98
                                              6 BANK0      3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    2655
                                              0 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2587
                                              6 BANK0     16    10      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3482
                                              9 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2037
                                              2 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     575
                                              2 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) _Gpio_Config                                          1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1369
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1369
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Modem_Init                                           6     6      0    1065
                                             18 BANK0      6     6      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     304
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     761
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    0     0      0   51834
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (1) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ptt_On                                               1     1      0   50465
                                             77 BANK0      1     1      0
                           _Adf_Lock
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Adf_Lock                                             6     6      0   25299
                                             75 BANK0      2     2      0
                                              0 BANK1      4     4      0
                         _Adf_Locked
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   22428
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    5607
                                             11 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    5607
                                             11 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    5607
                                             11 BANK0     64    64      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    5607
                                             11 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    3343
                                              3 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1461
                                              9 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1331
                                              9 COMMON     1     0      1
                                              0 BANK0     11    11      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              2 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (3) _Adf_Locked                                           0     0      0    1369
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Read_Adf7012_Muxout                                  0     0      0    1369
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             2     0      2    1369
                                              7 COMMON     2     0      2
                         _CheckDelay
 ---------------------------------------------------------------------------------
 (4) _CheckDelay                                           5     3      2      22
                                              2 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Dac0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     449
                                              8 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     254
                                              8 COMMON     1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2    1093
                                              8 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                      11    11      0      91
                                              2 COMMON     8     8      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     424
                                              8 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                           11    11      0     223
                                              5 COMMON     3     3      0
                                              0 BANK0      8     8      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                      11    11      0     133
                                              2 COMMON     8     8      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _global_interrupt                                    2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start
   _Delay_ms
     _CheckDelay
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _CheckDelay
     _Ptt_On
       _Adf_Lock
         _Adf_Locked
           _Read_Adf7012_Muxout
             _Delay_ms
               _CheckDelay
         _Adf_Write_Config
           _Adf_Write_Register_One
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _CheckDelay
               _Spi_Byte_Send
                 _Delay_ms
                   _CheckDelay
             _memcpy
           _Adf_Write_Register_Three
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _CheckDelay
               _Spi_Byte_Send
                 _Delay_ms
                   _CheckDelay
             _memcpy
           _Adf_Write_Register_Two
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _CheckDelay
               _Spi_Byte_Send
                 _Delay_ms
                   _CheckDelay
             _memcpy
           _Adf_Write_Register_Zero
             _Reverse_Array
               _memcpy
             _Write_Adf7012_Reg
               _Delay_ms
                 _CheckDelay
               _Spi_Byte_Send
                 _Delay_ms
                   _CheckDelay
             _memcpy
         _Delay_ms
           _CheckDelay
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
       _Delay_ms
         _CheckDelay
       _Read_Adf7012_Muxout
         _Delay_ms
           _CheckDelay
     _Timer0_Start
   _Modem_Setup
     _Modem_Init
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _CheckDelay
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
       _Delay_ms
         _CheckDelay
       _Gpio_Config
       _Set_Freq
         ___aldiv
         ___ftadd
           ___ftneg (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftdiv
           ___ftpack
           ___lltoft (ARG)
             ___ftpack
         ___ftmul
           ___ftpack
         ___ftneg
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
         ___lldiv
           ___lmul (ARG)
         ___lltoft
           ___ftpack
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
     _Delay_ms
       _CheckDelay
   _Ptt_On
     _Adf_Lock
       _Adf_Locked
         _Read_Adf7012_Muxout
           _Delay_ms
             _CheckDelay
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _CheckDelay
             _Spi_Byte_Send
               _Delay_ms
                 _CheckDelay
           _memcpy
       _Delay_ms
         _CheckDelay
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _CheckDelay
           _Spi_Byte_Send
             _Delay_ms
               _CheckDelay
         _memcpy
     _Delay_ms
       _CheckDelay
     _Read_Adf7012_Muxout
       _Delay_ms
         _CheckDelay
   _System_Start
   _Timer0_Start
   _Timer1_Start

 _global_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     14      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3E       9       77.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Sep 22 17:56:15 2014

                                _i 007B                        __CFG_CP$OFF 0000  
          _Adf_Reset_Register_Zero 15E7                     Reverse_Array@i 002A  
                   Spi_Byte_Send@i 0022           __end_of_Adf_Reset_Config 0100  
                     ___ftadd@exp1 0035                       ___ftadd@exp2 0034  
                      __CFG_LVP$ON 0000                       ___ftadd@sign 0033  
         _Adf_Reset_Register_Three 1654                                l133 0B18  
                              l225 16C8                                l337 049E  
                              l631 0994                                l743 08FB  
                              l737 08E4                                l766 0623  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00D1                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 002D  
                     __CFG_IESO$ON 0000                         _CheckDelay 15C1  
                    ??_Gpio_Config 0072             _Adf_Write_Register_One 0912  
           _Adf_Write_Register_Two 0CDF                       ___ftdiv@cntr 0030  
                     ___ftdiv@sign 0035                               l2015 1699  
                             l2047 17AA                               l3115 081B  
                             l2059 15AF                               l3211 0635  
                             l2411 0A1E                               l3037 083B  
                             l3205 0615                               l3039 084F  
                             l3135 09B5                               l3127 09A5  
                             l3215 0647                               l3207 061F  
                             l3311 0CB7                               l2431 0A5C  
                             l3153 09FC                               l3145 09E3  
                             l3137 09C3                               l3081 08BA  
                             l3225 0662                               l3241 0781  
                             l2441 0A75                               l3235 076B  
                             l3307 0CAF                               l3341 08A9  
                             l3149 09EE                               l3085 08C1  
                             l3165 05AC                               l2445 0A83  
                             l2437 0A69                               l2429 0A4E  
                             l3503 0BF3                               l3327 0870  
                             l3095 08E9                               l3087 08CB  
                             l3175 05C2                               l3263 07DB  
                             l3255 07C2                               l2439 0A72  
                             l3351 1721                               l3505 0C1B  
                             l3521 069B                               l3337 089E  
                             l3329 087E                               l3097 08F1  
                             l3089 08D0                               l3193 05EF  
                             l3169 05B3                               l3435 0FAC  
                             l3195 05F9                               l3187 05DC  
                             l3283 0C58                               l3445 0FFB  
                             l2661 0B05                               l3533 06BC  
                             l3197 05FE                               l3277 0C42  
                             l3349 1711                               l3527 06AE  
                             l3199 0602                               l3295 0C93  
                             l3553 0711                               l3561 06D2  
                             l3385 00AF                               l2593 1778  
                             l3393 0488                               l2659 0ADD  
                             l3563 074C                               l3547 06EC  
                             l3539 06CF                               l3571 163A  
                             l3299 0C9B                               l3643 0B8D  
                             l3557 0732                               l2589 176D  
                             l3637 0B84                               l3399 04B4  
                             l1993 16C9                               l1979 155D  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _ADON 04E8  
                             STR_1 0308                               u3005 0A25  
                             u3035 0A4F                               u4005 0D9F  
                             u4015 0DAE                               u4105 0CE8  
                             u4025 0DBD                               u3065 0A6A  
                             u4115 0CF7                               u4035 0DCC  
                             u4205 0353                               u4125 0D11  
                             u4045 0DDB                               u5005 089F  
                             u4215 0362                               u4135 0D20  
                             u4055 0DEA                               u3505 0AF3  
                             u4225 0371                               u4145 0D2F  
                             u4065 0E05                               u5025 1716  
                             u5114 0F3E                               u5115 0F3D  
                             u4075 091B                               u4235 0380  
                             u4155 0D3E                               u5124 0F4B  
                             u5205 0FDD                               u5125 0F4A  
                             u3445 0AA9                               u4085 0929  
                             u4245 038F                               u4165 0317  
                             u4325 08C6                               u3454 0AB1  
                             u3455 0AB0                               u4095 0943  
                             u4255 039E                               u4175 0326  
                             u3375 1779                               u5305 0BE0  
                             u5145 0F5E                               u4265 03AD  
                             u4185 0335                               u3385 1780  
                             u4345 08DF                               u5314 0BFB  
                             u5154 0F6A                               u3474 0ABD  
                             u5315 0BFA                               u5155 0F69  
                             u3475 0ABC                               u4275 03BC  
                             u4195 0344                               u5235 0EB5  
                             u5075 0483                               u5325 0C09  
                             u5165 0F7F                               u3485 0ACA  
                             u5405 070F                               u4285 03CB  
                             u5245 0F09                               u4365 08EC  
                             u5085 0497                               u3494 0AE5  
                             u5175 0FAA                               u3495 0AE4  
                             u5415 071E                               u4295 03DA  
                             u4455 09B8                               u4615 05DD  
                             u5095 04AD                               u5265 0BBF  
                             u5185 0FBB                               u5425 0723  
                             u5345 0699                               u4705 0616  
                             u5274 0BC7                               u5194 0FC7  
                             u5275 0BC6                               u5195 0FC6  
                             u5435 0736                               u5355 06AC  
                             u1995 16A3                               u4475 09C4  
                             u4395 0902                               u5445 06DC  
                             u5365 06BA                               u4485 09D8  
                             u4645 05F0                               u4805 07D2  
                             u5294 0BD3                               u5295 0BD2  
                             u5375 06CD                               u4495 09E4  
                             u4815 07DC                               u5480 0B57  
                             u5465 1610                               u5385 06EA  
                             _PIR1 0011                               u5395 06F0  
                             u4675 0603                               u4925 0CB8  
                             u4775 0793                               u4935 0CBE  
                             u4855 0C64                               u4785 07A3  
                             u4865 0C74                               u4795 07C3  
                             u4965 0873                               u4885 0C9C  
                             u4895 0CA2                               u4985 087F  
                             u4995 0893                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 0B15                       ___ftpack@arg 0072  
                     ___ftpack@exp 0075                               _test 00D8  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      Send_Byte@byte 0075  
                    __CFG_BOREN$ON 0000                               ltemp 007E  
                             start 0048                               ttemp 007E  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
                     ___ftmul@cntr 002E                       ___ftmul@sign 002F  
          _Adf_Write_Register_Zero 0D96                       ___fttol@exp1 003D  
                     ___fttol@lval 0039                        ?_Adc1_Start 0070  
                     Adf_Lock@bias 00DD                 main@beacon_address 00DF  
                    __CFG_PLLEN$ON 0000                    __end_of_Ptt_Off 15A3  
                  __end_of___aldiv 0A05                      ??_Radio_Setup 007A  
                            _ADCS0 04F4                              _ADCS1 04F5  
                            _ADCS2 04F6                              ?_main 0070  
                            _DACEN 08C7                              _DACOE 08C5  
                  __end_of___ftadd 067A                      __CFG_WDTE$OFF 0000  
                            _ANSA1 0C61                    __end_of___ftdiv 07FD  
                  __end_of___ftneg 154F                    __end_of___lldiv 08B2  
                      ?_Dac0_Start 0070                    __end_of___ftmul 0CDF  
                  __end_of___fttol 0A8C                              _TMR1H 0017  
                            _TMR1L 0016                              _TRISA 008C  
                            _TRISC 008E         Write_Adf7012_Reg@reg_value 0025  
              ___lmul@multiplicand 0076                       ___lltoft@exp 0025  
                            _phase 012C                              _test2 00D9  
                    ___ftpack@sign 0076                   __end_of_Adf_Lock 00F1  
                    ??_Modem_Setup 007A                      Set_Freq@f_pfd 0050  
                __end_of_BAUD_RATE 0306                      Set_Freq@ratio 004A  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
               __size_of_Adf_Reset 0009                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 1566  
                            wtemp6 007F                __end_of_Gpio_Config 157E  
                 __end_of_Delay_ms 1566                        ?_Adf_Locked 0070  
           _current_sample_in_baud 00D7                  Spi_Byte_Send@data 0020  
                       Send_Byte@i 0076                    __initialization 004A  
        ??_Adf_Reset_Register_Zero 0072          __size_of_Ax25_Send_Header 00DA  
            __size_of_System_Start 002E                       __end_of_main 0B9F  
        __size_of_Ax25_Send_Footer 001B          __size_of_Ax25_Send_String 001D  
            __end_of_Reverse_Array 17CA           _Adf_Write_Register_Three 030E  
            __end_of_Spi_Byte_Send 16E2                             ??_main 006E  
                    ___fttol@sign1 0038                         _Modem_Init 0E5D  
                 __end_of_Set_Freq 0584                        ?_CheckDelay 0072  
              __end_of_Radio_Setup 1637       __size_of_Read_Adf7012_Muxout 000E  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _DACNSS 08C0  
                           _ADNREF 04F2                             _ADRESH 009C  
                           _ADRESL 009B                             _CCPR1H 0292  
                           _CCPR1L 0291                   __end_of___ftpack 0912  
    Adf_Write_Register_One@reg_ptr 0037                   __end_of___lltoft 1736  
                           i1l2891 0042                             i1l2867 001A  
                           i1l2879 002A                             _INTCON 000B  
              __size_of_Adc1_Start 0006                             _OSCCON 0099  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1ON 00C0                       _System_Start 1736  
              __size_of_Dac0_Start 0005                __end_of_Modem_Setup 153D  
                   __CFG_PWRTE$OFF 0000          ??_Adf_Write_Register_Zero 002B  
                           _Ptt_On 17CA                          ??_Ptt_Off 007A  
                           ___lmul 1764                          ??___aldiv 0020  
               __size_of_Send_Byte 00D6                 Reverse_Array@input 0029  
                        ??___ftadd 002F                     __CFG_STVREN$ON 0000  
                        ??___ftdiv 002C                          ??___ftneg 007A  
                        ??___lldiv 002C                          ??___ftmul 0026  
                        ??___fttol 0034                   ??_Ax25_Send_Flag 0072  
                 ??_Ax25_Send_Byte 0078                             _memcpy 1690  
                 ??_Ax25_Send_Sync 0072                  __end_of_Adf_Reset 1546  
            ___ftmul@f3_as_product 002B                         _Update_Crc 0803  
              __size_of_Adf_Locked 0003                        _Gpio_Config 1572  
          __end_of__initialization 007B                      _adc_sonuc_low 00D6  
                       ___ftadd@f1 0029                         ___ftadd@f2 002C  
                       ___ftdiv@f1 0029                         ___ftdiv@f2 0026  
                       ___ftdiv@f3 0031                         ___ftneg@f1 0026  
        __size_of_global_interrupt 0044                 Write_Adf7012_Reg@i 0026  
                       ___ftmul@f1 0020                         ___ftmul@f2 0023  
       ??_Adf_Reset_Register_Three 0072                         ___fttol@f1 0030  
                   __pcstackCOMMON 0070           ??_Adf_Reset_Register_One 0072  
                     __pidataBANK2 1672           ??_Adf_Reset_Register_Two 0072  
              __size_of_CheckDelay 0011                         ___lltoft@c 0020  
                       _adf_config 00A0                      _PLAYBACK_RATE 0300  
                        ?_Adf_Lock 0070                        ?_Modem_Init 0070  
                ?_Adf_Reset_Config 0070                        _Radio_Setup 161B  
          ?_Adf_Write_Register_One 0070            ?_Adf_Write_Register_Two 0070  
        Spi_Byte_Send@data_to_send 0021                 ??_Adf_Reset_Config 0079  
                        ?_Delay_ms 0077                  __end_of_Send_Byte 1000  
                 _PHASE_DELTA_1200 0124                   _PHASE_DELTA_2200 0128  
                      _Modem_Setup 1537                         __pbssBANK0 006F  
                       __pbssBANK1 00A0                         __pbssBANK2 0120  
               Ax25_Send_Flag@byte 0020                          ?_Set_Freq 003E  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 0067  
                    ?_Timer1_Start 0070                         __pmaintext 0B15  
                 _Ax25_Send_Header 067A                            ?_Ptt_On 0070  
                          ?___lmul 0072                 __end_of_TABLE_SIZE 0308  
                 _Ax25_Send_Footer 1600                         __pintentry 0004  
                     ??_Adc1_Start 0072                            _DACCON1 0119  
               Ax25_Send_Byte@byte 0078                            _DACPSS0 08C2  
                          _DACPSS1 08C3                            ?_memcpy 0072  
                 _Ax25_Send_String 1637                            _ADPREF0 04F0  
                          _ADPREF1 04F1                     ___lmul@product 0020  
                       ??_Adf_Lock 006B                          ?___ftpack 0072  
                        ?___lltoft 0020     __end_of_Adf_Write_Register_One 0983  
   __end_of_Adf_Write_Register_Two 0D96                            _T1CKPS0 00C4  
                          _T1CKPS1 00C5                       ??_Dac0_Start 0072  
         __end_of_Adf_Write_Config 1572                        ?_Update_Crc 0070  
                       ??_Delay_ms 0079                            _OSCSTAT 009A  
                          _OSCTUNE 0098                            _TMR1CS0 00C6  
                          _TMR1CS1 00C7                            _PTT_OFF 00D4  
              Update_Crc@input_bit 0074      Adf_Write_Register_Two@reg_ptr 0043  
   Adf_Write_Register_Zero@reg_ptr 0047                 __end_of_Adc1_Start 1537  
                   ??_Timer0_Start 0072                __size_of_Modem_Init 00CD  
                   ??_Timer1_Start 0072                          _BAUD_RATE 0304  
                     ??_Adf_Locked 0079                         ??_Set_Freq 0042  
       ??_Adf_Write_Register_Three 002B                 __end_of_Dac0_Start 152C  
                       _packet_pos 00CB                            _Ptt_Off 1596  
                  __size_of_Ptt_On 0036                _Read_Adf7012_Muxout 15A3  
                          ___aldiv 0983                    __size_of___lmul 0032  
                          ___ftadd 0584    __size_of_Adf_Reset_Register_One 0010  
                          ___ftdiv 0754                            ___ftneg 1546  
                          ___lldiv 085F    __size_of_Adf_Reset_Register_Two 0015  
                          ___ftmul 0C2B                            ___fttol 0A05  
               Ax25_Send_Sync@byte 0020                Reverse_Array@length 0079  
                  Ax25_Send_Flag@i 0021                    __size_of_memcpy 0028  
                       ??___ftpack 0077                         ??___lltoft 0024  
                          __ptext1 154F                            __ptext2 1736  
                          __ptext3 1596                            __ptext4 1537  
                          __ptext5 161B                            __ptext6 0472  
                          __ptext7 170C                            __ptext8 0A05  
                          __ptext9 1546              Delay_ms@time_to_delay 0077  
        Adf_Write_Register_One@reg 003A                    Ax25_Send_Sync@i 0021  
                 ___aldiv@dividend 0076                       ??_CheckDelay 0074  
               __end_of_Adf_Locked 0800               ?_Read_Adf7012_Muxout 0070  
        Adf_Write_Register_Two@reg 0047                      _Delay_Counter 0120  
                          clrloop0 158B    Adf_Write_Register_Three@reg_ptr 0063  
             end_of_initialization 007B                            memcpy@d 0076  
                          memcpy@n 0073                            memcpy@s 0077  
                          init_ram 157E                            initloop 157F  
                 _global_interrupt 0004                    ___lldiv@divisor 0024  
                  ___lldiv@counter 0031                __size_of_Update_Crc 0023  
                 ___aldiv@quotient 0023                         _sine_table 0100  
                     __pstringtext 0100                 __end_of_CheckDelay 15D2  
                        _PORTAbits 000C                          _PORTCbits 000E  
                 __CFG_FOSC$INTOSC 0000                    _Systick_Counter 00CF  
                        _Adf_Reset 153D                     _adc_sonuc_high 00D5  
            ??_Read_Adf7012_Muxout 0079                         _powerlevel 0134  
                 _SAMPLES_PER_BAUD 006F                       ?_Gpio_Config 0070  
           _Adf_Reset_Register_One 15B1       Write_Adf7012_Reg@size_of_reg 0023  
           _Adf_Reset_Register_Two 15D2             __size_of_Reverse_Array 0034  
           __size_of_Spi_Byte_Send 002A                        ___ftdiv@exp 0034  
         ?_Adf_Reset_Register_Zero 0070                        ___ftmul@exp 002A  
                      Adf_Lock@adj 00DB                     __end_of_Ptt_On 1800  
                   __end_of___lmul 1796                     __end_of_memcpy 16B8  
                     ??_Modem_Init 0032                       ?_Radio_Setup 0070  
                     Set_Freq@freq 003E                       Set_Freq@rest 004D  
                __size_of_Adf_Lock 0072               __end_of_Timer0_Start 1531  
             __end_of_Timer1_Start 155A                start_initialization 004A  
                       ?_Adf_Reset 0070           __end_of_Ax25_Send_Header 0754  
                        Set_Freq@m 0046                          Set_Freq@n 0054  
         __end_of_Ax25_Send_Footer 161B                  __size_of_Delay_ms 000C  
                     ?_Modem_Setup 0070           __end_of_Ax25_Send_String 1654  
        __size_of_Adf_Reset_Config 000F           ?_Adf_Write_Register_Zero 0070  
                        _Send_Byte 0F2A                 __end_of_Modem_Init 0F2A  
                         ??_Ptt_On 006D                  __size_of_Set_Freq 0112  
                         ??___lmul 007A                        __pdataBANK2 0140  
                         ??_memcpy 0075                      _Reverse_Array 1796  
                    _Spi_Byte_Send 16B8                  ?_Adf_Write_Config 0070  
                __size_of___ftpack 0060                        __pbssBIGRAM 21F0  
                     ??_Update_Crc 0072                  __size_of___lltoft 002A  
                      __pbssCOMMON 007A                          ___latbits 0002  
__size_of_Adf_Reset_Register_Three 001E                      _ones_in_a_row 013E  
                    __pcstackBANK0 0020                      __pcstackBANK1 00DB  
               ??_Adf_Write_Config 007A          ?_Adf_Reset_Register_Three 0070  
              __end_of__stringdata 030E            __size_of_Ax25_Send_Flag 008C  
          __size_of_Ax25_Send_Byte 0005            __size_of_Ax25_Send_Sync 0089  
  __end_of_Adf_Reset_Register_Zero 1600      Ax25_Send_Header@num_addresses 0028  
                       ?_Send_Byte 0070                  _Write_Adf7012_Reg 0826  
                     _current_byte 007A                  Ax25_Send_Header@i 0030  
                Ax25_Send_Header@j 002E                 ?_Write_Adf7012_Reg 0023  
        Ax25_Send_Footer@final_crc 0028             Ax25_Send_String@string 0028  
                         ?_Ptt_Off 0070                 __end_of_Update_Crc 0826  
                         ?___aldiv 0072                           ?___ftadd 0029  
                         ?___ftdiv 0026                           ?___ftneg 0026  
                         ?___lldiv 0024                           ?___ftmul 0020  
                         ?___fttol 0030                ??_Write_Adf7012_Reg 0024  
                   ?_Reverse_Array 0079                     ?_Spi_Byte_Send 0070  
         __end_of_global_interrupt 0048                        ??_Adf_Reset 0079  
  __end_of_Adf_Write_Register_Zero 0E5D                  Ax25_Send_String@i 002A  
                      CheckDelay@t 0076          __end_of_Write_Adf7012_Reg 085F  
             __size_of_Gpio_Config 000C                    ___aldiv@divisor 0072  
                    ?_System_Start 0070                       _modem_packet 21F0  
                  ___aldiv@counter 0021                          clear_ram0 158A  
                        main@F3178 0140              __size_of_Timer0_Start 0005  
                         _Adf_Lock 007F              __size_of_Timer1_Start 000B  
        Reverse_Array@buffer_array 0025                        __stringdata 0308  
__size_of_Adf_Write_Register_Three 0164            ?_Adf_Reset_Register_One 0070  
        ?_Adf_Write_Register_Three 0070            ?_Adf_Reset_Register_Two 0070  
             __size_of_Radio_Setup 001C                           _Delay_ms 155A  
                ___lmul@multiplier 0072                     ??_System_Start 0072  
                 _Adf_Reset_Config 00F1                        ??_Send_Byte 0020  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 16E2  
                         _Set_Freq 0472                 ?_Modem_Flush_Frame 0070  
                     _Timer0_Start 152C                       _Timer1_Start 154F  
         ??_Adf_Write_Register_One 002B           ??_Adf_Write_Register_Two 002B  
                 __size_of_Ptt_Off 000D                    ??_Reverse_Array 0020  
                  ??_Spi_Byte_Send 0079                   __size_of___aldiv 0082  
            __end_of_PLAYBACK_RATE 0304                   __size_of___ftadd 00F6  
              ??_Modem_Flush_Frame 007A                   __size_of___ftdiv 00A9  
                 __size_of___ftneg 0009                   __size_of___lldiv 0053  
                 __size_of___ftmul 00B4                   __size_of___fttol 0087  
                         ___ftpack 08B2   __size_of_Adf_Reset_Register_Zero 0019  
                         ___lltoft 170C        __end_of_Read_Adf7012_Muxout 15B1  
   __end_of_Adf_Reset_Register_One 15C1                           _dac_flag 013C  
   __end_of_Adf_Reset_Register_Two 15E7                     _Ax25_Send_Flag 0B9F  
                   _Ax25_Send_Byte 1522                     _Ax25_Send_Sync 0A8C  
                         __ptext10 0C2B                           __ptext11 0754  
                         __ptext20 15B1                           __ptext12 0584  
                         __ptext21 153D                           __ptext13 08B2  
                         __ptext30 0D96                           __ptext22 0E5D  
                         __ptext14 0983                           __ptext31 0CDF  
                         __ptext23 1764                           __ptext15 1572  
                         __ptext40 155A                           __ptext32 030E  
                         __ptext24 085F                           __ptext16 00F1  
                         __ptext41 15C1                           __ptext33 0912  
                         __ptext25 16E2                           __ptext17 15E7  
                         __ptext50 0B9F                           __ptext42 1527  
                         __ptext34 0826                           __ptext26 152C  
                         __ptext18 15D2                           __ptext51 1531  
                         __ptext43 1637                           __ptext35 16B8  
                         __ptext27 17CA                           __ptext19 1654  
                         __ptext44 1522                           __ptext36 1796  
                         __ptext28 007F                           __ptext45 067A  
                         __ptext37 1690                           __ptext29 1566  
                         __ptext46 0A8C                           __ptext38 07FD  
                         __ptext47 1600                           __ptext39 15A3  
                         __ptext48 0F2A                           __ptext49 0803  
                ?_Ax25_Send_Header 0028                  ?_Ax25_Send_Footer 0070  
               ??_Ax25_Send_Header 002A          __end_of_Modem_Flush_Frame 170C  
       __size_of_Write_Adf7012_Reg 0039                  ?_Ax25_Send_String 0028  
               ??_Ax25_Send_Footer 007A                      __size_of_main 008A  
                      _phase_delta 0130                 ??_Ax25_Send_String 0079  
 __end_of_Adf_Reset_Register_Three 1672         Adf_Write_Register_Zero@reg 004B  
 __size_of_Adf_Write_Register_Zero 00C7             __end_of_Ax25_Send_Flag 0C2B  
           __end_of_Ax25_Send_Byte 1527             __end_of_Ax25_Send_Sync 0B15  
                       _TABLE_SIZE 0306                           memcpy@d1 0078  
                         memcpy@s1 0072                        pic14e$flags 007E  
                         intlevel1 0000                 __end_of_sine_table 0300  
                    _timeout_check 0138                   ___lldiv@dividend 0028  
        __size_of_Adf_Write_Config 000C                  __CFG_CLKOUTEN$OFF 0000  
               _MODEM_TRANSMITTING 00D3    __size_of_Adf_Write_Register_One 0071  
  __size_of_Adf_Write_Register_Two 00B7                         _Adc1_Start 1531  
                      _sine_table2 0150               __end_of_System_Start 1764  
                       _Dac0_Start 1527                       _timeout_flag 00DA  
                  ?_Ax25_Send_Flag 0070                   ___lldiv@quotient 002D  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070                       ___aldiv@sign 0022  
               ??_global_interrupt 0070         __size_of_Modem_Flush_Frame 002A  
                       _Adf_Locked 07FD                  _modem_packet_size 00C7  
 __end_of_Adf_Write_Register_Three 0472  
