

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Sep 23 22:01:52 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000E                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  018C                     	;# 
   123  018E                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  020E                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  038C                     	;# 
   183  038E                     	;# 
   184  0391                     	;# 
   185  0392                     	;# 
   186  0393                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000E                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  010C                     	;# 
   254  010E                     	;# 
   255  0111                     	;# 
   256  0112                     	;# 
   257  0113                     	;# 
   258  0114                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011A                     	;# 
   265  011B                     	;# 
   266  011D                     	;# 
   267  011E                     	;# 
   268  018C                     	;# 
   269  018E                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0194                     	;# 
   277  0195                     	;# 
   278  0196                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020E                     	;# 
   289  0211                     	;# 
   290  0211                     	;# 
   291  0212                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0298                     	;# 
   313  0298                     	;# 
   314  0299                     	;# 
   315  029A                     	;# 
   316  029B                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  0311                     	;# 
   321  0311                     	;# 
   322  0312                     	;# 
   323  0313                     	;# 
   324  0318                     	;# 
   325  0318                     	;# 
   326  0319                     	;# 
   327  031A                     	;# 
   328  038C                     	;# 
   329  038E                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  039A                     	;# 
   334  039C                     	;# 
   335  039D                     	;# 
   336  039E                     	;# 
   337  039F                     	;# 
   338  0415                     	;# 
   339  0416                     	;# 
   340  0417                     	;# 
   341  041C                     	;# 
   342  041D                     	;# 
   343  041E                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000E                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  008C                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  010C                     	;# 
   400  010E                     	;# 
   401  0111                     	;# 
   402  0112                     	;# 
   403  0113                     	;# 
   404  0114                     	;# 
   405  0115                     	;# 
   406  0116                     	;# 
   407  0117                     	;# 
   408  0118                     	;# 
   409  0119                     	;# 
   410  011A                     	;# 
   411  011B                     	;# 
   412  011D                     	;# 
   413  011E                     	;# 
   414  018C                     	;# 
   415  018E                     	;# 
   416  0191                     	;# 
   417  0191                     	;# 
   418  0192                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0194                     	;# 
   423  0195                     	;# 
   424  0196                     	;# 
   425  0199                     	;# 
   426  019A                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019C                     	;# 
   430  019D                     	;# 
   431  019E                     	;# 
   432  019F                     	;# 
   433  020C                     	;# 
   434  020E                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  0212                     	;# 
   438  0212                     	;# 
   439  0213                     	;# 
   440  0213                     	;# 
   441  0214                     	;# 
   442  0214                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0216                     	;# 
   447  0216                     	;# 
   448  0217                     	;# 
   449  0217                     	;# 
   450  0291                     	;# 
   451  0291                     	;# 
   452  0292                     	;# 
   453  0293                     	;# 
   454  0294                     	;# 
   455  0295                     	;# 
   456  0295                     	;# 
   457  0296                     	;# 
   458  0298                     	;# 
   459  0298                     	;# 
   460  0299                     	;# 
   461  029A                     	;# 
   462  029B                     	;# 
   463  029C                     	;# 
   464  029D                     	;# 
   465  029E                     	;# 
   466  0311                     	;# 
   467  0311                     	;# 
   468  0312                     	;# 
   469  0313                     	;# 
   470  0318                     	;# 
   471  0318                     	;# 
   472  0319                     	;# 
   473  031A                     	;# 
   474  038C                     	;# 
   475  038E                     	;# 
   476  0391                     	;# 
   477  0392                     	;# 
   478  0393                     	;# 
   479  039A                     	;# 
   480  039C                     	;# 
   481  039D                     	;# 
   482  039E                     	;# 
   483  039F                     	;# 
   484  0415                     	;# 
   485  0416                     	;# 
   486  0417                     	;# 
   487  041C                     	;# 
   488  041D                     	;# 
   489  041E                     	;# 
   490  0FE4                     	;# 
   491  0FE5                     	;# 
   492  0FE6                     	;# 
   493  0FE7                     	;# 
   494  0FE8                     	;# 
   495  0FE9                     	;# 
   496  0FEA                     	;# 
   497  0FEB                     	;# 
   498  0FED                     	;# 
   499  0FEE                     	;# 
   500  0FEF                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  0008                     	;# 
   510  0009                     	;# 
   511  000A                     	;# 
   512  000B                     	;# 
   513  000C                     	;# 
   514  000E                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  008C                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  010C                     	;# 
   546  010E                     	;# 
   547  0111                     	;# 
   548  0112                     	;# 
   549  0113                     	;# 
   550  0114                     	;# 
   551  0115                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  0118                     	;# 
   555  0119                     	;# 
   556  011A                     	;# 
   557  011B                     	;# 
   558  011D                     	;# 
   559  011E                     	;# 
   560  018C                     	;# 
   561  018E                     	;# 
   562  0191                     	;# 
   563  0191                     	;# 
   564  0192                     	;# 
   565  0193                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0199                     	;# 
   572  019A                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019D                     	;# 
   577  019E                     	;# 
   578  019F                     	;# 
   579  020C                     	;# 
   580  020E                     	;# 
   581  0211                     	;# 
   582  0211                     	;# 
   583  0212                     	;# 
   584  0212                     	;# 
   585  0213                     	;# 
   586  0213                     	;# 
   587  0214                     	;# 
   588  0214                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0216                     	;# 
   593  0216                     	;# 
   594  0217                     	;# 
   595  0217                     	;# 
   596  0291                     	;# 
   597  0291                     	;# 
   598  0292                     	;# 
   599  0293                     	;# 
   600  0294                     	;# 
   601  0295                     	;# 
   602  0295                     	;# 
   603  0296                     	;# 
   604  0298                     	;# 
   605  0298                     	;# 
   606  0299                     	;# 
   607  029A                     	;# 
   608  029B                     	;# 
   609  029C                     	;# 
   610  029D                     	;# 
   611  029E                     	;# 
   612  0311                     	;# 
   613  0311                     	;# 
   614  0312                     	;# 
   615  0313                     	;# 
   616  0318                     	;# 
   617  0318                     	;# 
   618  0319                     	;# 
   619  031A                     	;# 
   620  038C                     	;# 
   621  038E                     	;# 
   622  0391                     	;# 
   623  0392                     	;# 
   624  0393                     	;# 
   625  039A                     	;# 
   626  039C                     	;# 
   627  039D                     	;# 
   628  039E                     	;# 
   629  039F                     	;# 
   630  0415                     	;# 
   631  0416                     	;# 
   632  0417                     	;# 
   633  041C                     	;# 
   634  041D                     	;# 
   635  041E                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000E                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008E                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009A                     	;# 
   686  009B                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  010C                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011A                     	;# 
   703  011B                     	;# 
   704  011D                     	;# 
   705  011E                     	;# 
   706  018C                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0193                     	;# 
   714  0194                     	;# 
   715  0195                     	;# 
   716  0196                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  020E                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0213                     	;# 
   733  0214                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  0291                     	;# 
   743  0291                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0294                     	;# 
   747  0295                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0298                     	;# 
   751  0298                     	;# 
   752  0299                     	;# 
   753  029A                     	;# 
   754  029B                     	;# 
   755  029C                     	;# 
   756  029D                     	;# 
   757  029E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  0318                     	;# 
   763  0318                     	;# 
   764  0319                     	;# 
   765  031A                     	;# 
   766  038C                     	;# 
   767  038E                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  0393                     	;# 
   771  039A                     	;# 
   772  039C                     	;# 
   773  039D                     	;# 
   774  039E                     	;# 
   775  039F                     	;# 
   776  0415                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  041C                     	;# 
   780  041D                     	;# 
   781  041E                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793                           
   794                           	psect	idataBANK2
   795  0C8C                     __pidataBANK2:	
   796                           
   797                           ;initializer for main@F3176
   798  0C8C  3443               	retlw	67
   799  0C8D  3455               	retlw	85
   800  0C8E  3442               	retlw	66
   801  0C8F  3445               	retlw	69
   802  0C90  3459               	retlw	89
   803  0C91  3459               	retlw	89
   804  0C92  3400               	retlw	0
   805  0C93  3405               	retlw	5
   806  0C94  3443               	retlw	67
   807  0C95  3455               	retlw	85
   808  0C96  3442               	retlw	66
   809  0C97  3445               	retlw	69
   810  0C98  3458               	retlw	88
   811  0C99  3458               	retlw	88
   812  0C9A  3400               	retlw	0
   813  0C9B  3406               	retlw	6
   814                           
   815                           	psect	stringtext
   816  0400                     __pstringtext:	
   817  0400                     _sine_table2:	
   818  0400  3410               	retlw	16
   819  0401  3410               	retlw	16
   820  0402  3411               	retlw	17
   821  0403  3411               	retlw	17
   822  0404  3412               	retlw	18
   823  0405  3412               	retlw	18
   824  0406  3413               	retlw	19
   825  0407  3413               	retlw	19
   826  0408  3414               	retlw	20
   827  0409  3414               	retlw	20
   828  040A  3415               	retlw	21
   829  040B  3415               	retlw	21
   830  040C  3416               	retlw	22
   831  040D  3416               	retlw	22
   832  040E  3417               	retlw	23
   833  040F  3417               	retlw	23
   834  0410  3418               	retlw	24
   835  0411  3418               	retlw	24
   836  0412  3419               	retlw	25
   837  0413  3419               	retlw	25
   838  0414  3419               	retlw	25
   839  0415  341A               	retlw	26
   840  0416  341A               	retlw	26
   841  0417  341B               	retlw	27
   842  0418  341B               	retlw	27
   843  0419  341B               	retlw	27
   844  041A  341C               	retlw	28
   845  041B  341C               	retlw	28
   846  041C  341C               	retlw	28
   847  041D  341D               	retlw	29
   848  041E  341D               	retlw	29
   849  041F  341D               	retlw	29
   850  0420  341D               	retlw	29
   851  0421  341E               	retlw	30
   852  0422  341E               	retlw	30
   853  0423  341E               	retlw	30
   854  0424  341E               	retlw	30
   855  0425  341E               	retlw	30
   856  0426  341E               	retlw	30
   857  0427  341F               	retlw	31
   858  0428  341F               	retlw	31
   859  0429  341F               	retlw	31
   860  042A  341F               	retlw	31
   861  042B  341F               	retlw	31
   862  042C  341F               	retlw	31
   863  042D  341F               	retlw	31
   864  042E  341F               	retlw	31
   865  042F  341F               	retlw	31
   866  0430  341F               	retlw	31
   867  0431  341F               	retlw	31
   868  0432  341F               	retlw	31
   869  0433  341F               	retlw	31
   870  0434  341F               	retlw	31
   871  0435  341E               	retlw	30
   872  0436  341E               	retlw	30
   873  0437  341E               	retlw	30
   874  0438  341E               	retlw	30
   875  0439  341E               	retlw	30
   876  043A  341E               	retlw	30
   877  043B  341D               	retlw	29
   878  043C  341D               	retlw	29
   879  043D  341D               	retlw	29
   880  043E  341D               	retlw	29
   881  043F  341C               	retlw	28
   882  0440  341C               	retlw	28
   883  0441  341C               	retlw	28
   884  0442  341B               	retlw	27
   885  0443  341B               	retlw	27
   886  0444  341B               	retlw	27
   887  0445  341A               	retlw	26
   888  0446  341A               	retlw	26
   889  0447  3419               	retlw	25
   890  0448  3419               	retlw	25
   891  0449  3419               	retlw	25
   892  044A  3418               	retlw	24
   893  044B  3418               	retlw	24
   894  044C  3417               	retlw	23
   895  044D  3417               	retlw	23
   896  044E  3416               	retlw	22
   897  044F  3416               	retlw	22
   898  0450  3415               	retlw	21
   899  0451  3415               	retlw	21
   900  0452  3414               	retlw	20
   901  0453  3414               	retlw	20
   902  0454  3413               	retlw	19
   903  0455  3413               	retlw	19
   904  0456  3412               	retlw	18
   905  0457  3412               	retlw	18
   906  0458  3411               	retlw	17
   907  0459  3411               	retlw	17
   908  045A  3410               	retlw	16
   909  045B  3410               	retlw	16
   910  045C  340F               	retlw	15
   911  045D  340E               	retlw	14
   912  045E  340E               	retlw	14
   913  045F  340D               	retlw	13
   914  0460  340D               	retlw	13
   915  0461  340C               	retlw	12
   916  0462  340C               	retlw	12
   917  0463  340B               	retlw	11
   918  0464  340B               	retlw	11
   919  0465  340A               	retlw	10
   920  0466  340A               	retlw	10
   921  0467  3409               	retlw	9
   922  0468  3409               	retlw	9
   923  0469  3408               	retlw	8
   924  046A  3408               	retlw	8
   925  046B  3407               	retlw	7
   926  046C  3407               	retlw	7
   927  046D  3406               	retlw	6
   928  046E  3406               	retlw	6
   929  046F  3406               	retlw	6
   930  0470  3405               	retlw	5
   931  0471  3405               	retlw	5
   932  0472  3404               	retlw	4
   933  0473  3404               	retlw	4
   934  0474  3404               	retlw	4
   935  0475  3403               	retlw	3
   936  0476  3403               	retlw	3
   937  0477  3403               	retlw	3
   938  0478  3402               	retlw	2
   939  0479  3402               	retlw	2
   940  047A  3402               	retlw	2
   941  047B  3402               	retlw	2
   942  047C  3401               	retlw	1
   943  047D  3401               	retlw	1
   944  047E  3401               	retlw	1
   945  047F  3401               	retlw	1
   946  0480  3401               	retlw	1
   947  0481  3401               	retlw	1
   948  0482  3400               	retlw	0
   949  0483  3400               	retlw	0
   950  0484  3400               	retlw	0
   951  0485  3400               	retlw	0
   952  0486  3400               	retlw	0
   953  0487  3400               	retlw	0
   954  0488  3400               	retlw	0
   955  0489  3400               	retlw	0
   956  048A  3400               	retlw	0
   957  048B  3400               	retlw	0
   958  048C  3400               	retlw	0
   959  048D  3400               	retlw	0
   960  048E  3400               	retlw	0
   961  048F  3400               	retlw	0
   962  0490  3401               	retlw	1
   963  0491  3401               	retlw	1
   964  0492  3401               	retlw	1
   965  0493  3401               	retlw	1
   966  0494  3401               	retlw	1
   967  0495  3401               	retlw	1
   968  0496  3402               	retlw	2
   969  0497  3402               	retlw	2
   970  0498  3402               	retlw	2
   971  0499  3402               	retlw	2
   972  049A  3403               	retlw	3
   973  049B  3403               	retlw	3
   974  049C  3403               	retlw	3
   975  049D  3404               	retlw	4
   976  049E  3404               	retlw	4
   977  049F  3404               	retlw	4
   978  04A0  3405               	retlw	5
   979  04A1  3405               	retlw	5
   980  04A2  3406               	retlw	6
   981  04A3  3406               	retlw	6
   982  04A4  3406               	retlw	6
   983  04A5  3407               	retlw	7
   984  04A6  3407               	retlw	7
   985  04A7  3408               	retlw	8
   986  04A8  3408               	retlw	8
   987  04A9  3409               	retlw	9
   988  04AA  3409               	retlw	9
   989  04AB  340A               	retlw	10
   990  04AC  340A               	retlw	10
   991  04AD  340B               	retlw	11
   992  04AE  340B               	retlw	11
   993  04AF  340C               	retlw	12
   994  04B0  340C               	retlw	12
   995  04B1  340D               	retlw	13
   996  04B2  340D               	retlw	13
   997  04B3  340E               	retlw	14
   998  04B4  340E               	retlw	14
   999  04B5  340F               	retlw	15
  1000  04B6                     __end_of_sine_table2:	
  1001  04B6                     _PLAYBACK_RATE:	
  1002  04B6  3412               	retlw	18
  1003  04B7  347A               	retlw	122
  1004  04B8  3400               	retlw	0
  1005  04B9  3400               	retlw	0
  1006  04BA                     __end_of_PLAYBACK_RATE:	
  1007  04BA                     _BAUD_RATE:	
  1008  04BA  34B0               	retlw	176
  1009  04BB  3404               	retlw	4
  1010  04BC                     __end_of_BAUD_RATE:	
  1011  04BC                     _TABLE_SIZE:	
  1012  04BC  34B6               	retlw	182
  1013  04BD  3400               	retlw	0
  1014  04BE                     __end_of_TABLE_SIZE:	
  1015  000B                     _INTCON	set	11
  1016  0011                     _PIR1	set	17
  1017  000C                     _PORTAbits	set	12
  1018  000E                     _PORTCbits	set	14
  1019  0015                     _TMR0	set	21
  1020  0017                     _TMR1H	set	23
  1021  0016                     _TMR1L	set	22
  1022  008E                     _ADIF	set	142
  1023  008A                     _CCP1IF	set	138
  1024  00C4                     _T1CKPS0	set	196
  1025  00C5                     _T1CKPS1	set	197
  1026  005D                     _TMR0IE	set	93
  1027  005A                     _TMR0IF	set	90
  1028  00C6                     _TMR1CS0	set	198
  1029  00C7                     _TMR1CS1	set	199
  1030  00CF                     _TMR1GE	set	207
  1031  0088                     _TMR1IF	set	136
  1032  00C0                     _TMR1ON	set	192
  1033  009D                     _ADCON0	set	157
  1034  009C                     _ADRESH	set	156
  1035  009B                     _ADRESL	set	155
  1036  0099                     _OSCCON	set	153
  1037  009A                     _OSCSTAT	set	154
  1038  0098                     _OSCTUNE	set	152
  1039  008C                     _TRISA	set	140
  1040  008E                     _TRISC	set	142
  1041  04F4                     _ADCS0	set	1268
  1042  04F5                     _ADCS1	set	1269
  1043  04F6                     _ADCS2	set	1270
  1044  04F7                     _ADFM	set	1271
  1045  048E                     _ADIE	set	1166
  1046  04F2                     _ADNREF	set	1266
  1047  04E8                     _ADON	set	1256
  1048  04F0                     _ADPREF0	set	1264
  1049  04F1                     _ADPREF1	set	1265
  1050  048A                     _CCP1IE	set	1162
  1051  04AB                     _PSA	set	1195
  1052  04AD                     _TMR0CS	set	1197
  1053  0488                     _TMR1IE	set	1160
  1054  0119                     _DACCON1	set	281
  1055  08C7                     _DACEN	set	2247
  1056  08C0                     _DACNSS	set	2240
  1057  08C5                     _DACOE	set	2245
  1058  08C2                     _DACPSS0	set	2242
  1059  08C3                     _DACPSS1	set	2243
  1060  0C61                     _ANSA1	set	3169
  1061  0292                     _CCPR1H	set	658
  1062  0291                     _CCPR1L	set	657
  1063  1499                     _CCP1M1	set	5273
  1064  149A                     _CCP1M2	set	5274
  1065  149B                     _CCP1M3	set	5275
  1066  04BE                     __stringdata:	
  1067  04BE                     STR_1:	
  1068  04BE  3448               	retlw	72	;'H'
  1069  04BF  3445               	retlw	69	;'E'
  1070  04C0  344C               	retlw	76	;'L'
  1071  04C1  344C               	retlw	76	;'L'
  1072  04C2  344F               	retlw	79	;'O'
  1073  04C3  3400               	retlw	0
  1074  04C4                     __end_of__stringdata:	
  1075                           
  1076                           ; #config settings
  1077  0000                     
  1078                           	psect	cinit
  1079  005B                     start_initialization:	
  1080  005B                     __initialization:	
  1081                           
  1082                           ; Clear objects allocated to COMMON
  1083  005B  01F9               	clrf	__pbssCOMMON& (0+127)
  1084  005C  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1085  005D  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1086  005E  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1087  005F  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1088                           
  1089                           ; Clear objects allocated to BANK0
  1090  0060  01EE               	clrf	__pbssBANK0& (0+127)
  1091  0061  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1092                           
  1093                           ; Clear objects allocated to BANK1
  1094  0062  30A0               	movlw	low __pbssBANK1
  1095  0063  0084               	movwf	4
  1096  0064  3000               	movlw	high __pbssBANK1
  1097  0065  0085               	movwf	5
  1098  0066  3033               	movlw	51
  1099  0067  318C  2421  3180   	fcall	clear_ram0
  1100                           
  1101                           ; Clear objects allocated to BANK2
  1102  006A  3020               	movlw	low __pbssBANK2
  1103  006B  0084               	movwf	4
  1104  006C  3001               	movlw	high __pbssBANK2
  1105  006D  0085               	movwf	5
  1106  006E  3018               	movlw	24
  1107  006F  318C  2421  3180   	fcall	clear_ram0
  1108                           
  1109                           ; Clear objects allocated to BANK3
  1110  0072  30A0               	movlw	low __pbssBANK3
  1111  0073  0084               	movwf	4
  1112  0074  3001               	movlw	high __pbssBANK3
  1113  0075  0085               	movwf	5
  1114  0076  3040               	movlw	64
  1115  0077  318C  2421  3180   	fcall	clear_ram0
  1116                           
  1117                           ; Initialize objects allocated to BANK2
  1118  007A  308C               	movlw	low __pidataBANK2
  1119  007B  0084               	movwf	4
  1120  007C  308C               	movlw	(high __pidataBANK2)| (0+128)
  1121  007D  0085               	movwf	5
  1122  007E  3038               	movlw	low __pdataBANK2
  1123  007F  0086               	movwf	6
  1124  0080  3001               	movlw	high __pdataBANK2
  1125  0081  0087               	movwf	7
  1126  0082  3010               	movlw	16
  1127  0083  318C  241B         	fcall	init_ram
  1128  0085                     end_of_initialization:	
  1129                           ;End of C runtime variable initialization code
  1130                           
  1131  0085                     __end_of__initialization:	
  1132  0085  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1133  0086  0020               	movlb	0
  1134  0087  3186  2EE4         	ljmp	_main	;jump to C main() function
  1135                           
  1136                           	psect	bssCOMMON
  1137  0079                     __pbssCOMMON:	
  1138  0079                     _modem_packet_size:	
  1139  0079                     	ds	4
  1140  007D                     _phase:	
  1141  007D                     	ds	1
  1142                           
  1143                           	psect	bssBANK0
  1144  006E                     __pbssBANK0:	
  1145  006E                     _Change_to_New_Baud:	
  1146  006E                     	ds	1
  1147  006F                     _current_byte:	
  1148  006F                     	ds	1
  1149                           
  1150                           	psect	bssBANK1
  1151  00A0                     __pbssBANK1:	
  1152  00A0                     _adf_config:	
  1153  00A0                     	ds	39
  1154  00C7                     _crc:	
  1155  00C7                     	ds	2
  1156  00C9                     _ones_in_a_row:	
  1157  00C9                     	ds	2
  1158  00CB                     Sinus_Generator@tone_index:	
  1159  00CB                     	ds	1
  1160  00CC                     _MODEM_TRANSMITTING:	
  1161  00CC                     	ds	1
  1162  00CD                     _PTT_OFF:	
  1163  00CD                     	ds	1
  1164  00CE                     _SAMPLES_PER_BAUD:	
  1165  00CE                     	ds	1
  1166  00CF                     _adc_sonuc_high:	
  1167  00CF                     	ds	1
  1168  00D0                     _adc_sonuc_low:	
  1169  00D0                     	ds	1
  1170  00D1                     _current_sample_in_baud:	
  1171  00D1                     	ds	1
  1172  00D2                     _phase_delta:	
  1173  00D2                     	ds	1
  1174                           
  1175                           	psect	bssBANK2
  1176  0120                     __pbssBANK2:	
  1177  0120                     Reverse_Array@F3148:	
  1178  0120                     	ds	4
  1179  0124                     _PHASE_DELTA_1200:	
  1180  0124                     	ds	4
  1181  0128                     _PHASE_DELTA_2200:	
  1182  0128                     	ds	4
  1183  012C                     _Systick_Counter:	
  1184  012C                     	ds	4
  1185  0130                     _packet_pos:	
  1186  0130                     	ds	4
  1187  0134                     _powerlevel:	
  1188  0134                     	ds	4
  1189                           
  1190                           	psect	dataBANK2
  1191  0138                     __pdataBANK2:	
  1192  0138                     main@F3176:	
  1193  0138                     	ds	16
  1194                           
  1195                           	psect	bssBANK3
  1196  01A0                     __pbssBANK3:	
  1197  01A0                     _modem_packet:	
  1198  01A0                     	ds	64
  1199                           
  1200                           	psect	clrtext
  1201  0C21                     clear_ram0:	
  1202                           ;	Called with FSR0 containing the base address, and
  1203                           ;	WREG with the size to clear
  1204                           
  1205  0C21  0064               	clrwdt	;clear the watchdog before getting into this loop
  1206  0C22                     clrloop0:	
  1207  0C22  0180               	clrf	0	;clear RAM location pointed to by FSR
  1208  0C23  3101               	addfsr 0,1
  1209  0C24  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1210  0C25  2C22               	goto	clrloop0	;have we reached the end yet?
  1211  0C26  3400               	retlw	0	;all done for this memory range, return
  1212                           
  1213                           	psect	inittext
  1214  0C1B                     init_ram:	
  1215  0C1B  00FE               	movwf	126
  1216  0C1C                     initloop:	
  1217  0C1C  0012               	moviw fsr0++
  1218  0C1D  001E               	movwi fsr1++
  1219  0C1E  0BFE               	decfsz	126,f
  1220  0C1F  2C1C               	goto	initloop
  1221  0C20  3400               	retlw	0
  1222                           
  1223                           	psect	cstackBANK1
  1224  00D3                     __pcstackBANK1:	
  1225  00D3                     Adf_Write_Register_Three@reg_ptr:	
  1226                           
  1227                           ; 4 bytes @ 0x0
  1228  00D3                     	ds	4
  1229  00D7                     Adf_Write_Register_Three@reg:	
  1230                           
  1231                           ; 4 bytes @ 0x4
  1232  00D7                     	ds	4
  1233  00DB                     Adf_Lock@adj:	
  1234                           
  1235                           ; 2 bytes @ 0x8
  1236  00DB                     	ds	2
  1237  00DD                     Adf_Lock@bias:	
  1238                           
  1239                           ; 2 bytes @ 0xA
  1240  00DD                     	ds	2
  1241  00DF                     main@beacon_address:	
  1242                           
  1243                           ; 16 bytes @ 0xC
  1244  00DF                     	ds	16
  1245                           
  1246                           	psect	cstackCOMMON
  1247  0070                     __pcstackCOMMON:	
  1248  0070                     ?_Sinus_Generator:	
  1249  0070                     ?_Timer1_Start:	
  1250                           ; 0 bytes @ 0x0
  1251                           
  1252  0070                     ?_Dac0_Start_Hold:	
  1253                           ; 0 bytes @ 0x0
  1254                           
  1255  0070                     ?_Adc1_Start:	
  1256                           ; 0 bytes @ 0x0
  1257                           
  1258  0070                     ?_Ax25_Send_Footer:	
  1259                           ; 0 bytes @ 0x0
  1260                           
  1261  0070                     ?_Modem_Setup:	
  1262                           ; 0 bytes @ 0x0
  1263                           
  1264  0070                     ?_Ptt_Off:	
  1265                           ; 0 bytes @ 0x0
  1266                           
  1267  0070                     ?_Modem_Flush_Frame:	
  1268                           ; 0 bytes @ 0x0
  1269                           
  1270  0070                     ?_Adf_Reset_Register_Zero:	
  1271                           ; 0 bytes @ 0x0
  1272                           
  1273  0070                     ?_Adf_Reset_Register_One:	
  1274                           ; 0 bytes @ 0x0
  1275                           
  1276  0070                     ?_Adf_Reset_Register_Two:	
  1277                           ; 0 bytes @ 0x0
  1278                           
  1279  0070                     ?_Adf_Reset_Register_Three:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0070                     ?_Adf_Reset:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0070                     ?_Adf_Write_Register_Zero:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0070                     ?_Adf_Write_Register_One:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0070                     ?_Adf_Write_Register_Two:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0070                     ?_Adf_Write_Register_Three:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0070                     ?_global_interrupt:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0070                     ?_System_Start:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0070                     ??_Send_Vcxo_Signal:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0070                     ?_Timer0_Start:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0070                     ?_Timer0_Stop:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0070                     ??_Timer0_Stop:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0070                     ?_Adf_Reset_Config:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0070                     ?_Adf_Write_Config:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0070                     ?_Radio_Setup:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0070                     ?_Modem_Init:	
  1325                           ; 0 bytes @ 0x0
  1326                           
  1327  0070                     ?_Update_Crc:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0070                     ?_Send_Byte:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0070                     ?_Ax25_Send_Byte:	
  1334                           ; 0 bytes @ 0x0
  1335                           
  1336  0070                     ?_Ax25_Send_Sync:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0070                     ?_Ax25_Send_Flag:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0070                     ?_Gpio_Config:	
  1343                           ; 0 bytes @ 0x0
  1344                           
  1345  0070                     ?_Adf_Lock:	
  1346                           ; 1 bytes @ 0x0
  1347                           
  1348  0070                     ?_Ptt_On:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_Spi_Byte_Send:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_Adf_Locked:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_Read_Adf7012_Muxout:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_Send_Vcxo_Signal:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_main:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     Send_Vcxo_Signal@value:	
  1367                           ; 2 bytes @ 0x0
  1368                           
  1369                           
  1370                           ; 1 bytes @ 0x0
  1371  0070                     	ds	1
  1372  0071                     ??_Sinus_Generator:	
  1373                           
  1374                           ; 0 bytes @ 0x1
  1375  0071                     	ds	5
  1376  0076                     Sinus_Generator@Audio_Signal:	
  1377                           
  1378                           ; 1 bytes @ 0x6
  1379  0076                     	ds	1
  1380  0077                     ??_global_interrupt:	
  1381                           
  1382                           ; 0 bytes @ 0x7
  1383  0077                     	ds	2
  1384                           
  1385                           	psect	cstackBANK0
  1386  0020                     __pcstackBANK0:	
  1387  0020                     ??_Gpio_Config:	
  1388  0020                     ??_Timer1_Start:	
  1389                           ; 0 bytes @ 0x0
  1390                           
  1391  0020                     ??_Dac0_Start_Hold:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0020                     ??_Adc1_Start:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0020                     ?_Delay_ms:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0020                     ??_Adf_Reset_Register_Zero:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403  0020                     ??_Adf_Reset_Register_One:	
  1404                           ; 0 bytes @ 0x0
  1405                           
  1406  0020                     ??_Adf_Reset_Register_Two:	
  1407                           ; 0 bytes @ 0x0
  1408                           
  1409  0020                     ??_Adf_Reset_Register_Three:	
  1410                           ; 0 bytes @ 0x0
  1411                           
  1412  0020                     ??_System_Start:	
  1413                           ; 0 bytes @ 0x0
  1414                           
  1415  0020                     ??_Timer0_Start:	
  1416                           ; 0 bytes @ 0x0
  1417                           
  1418  0020                     ??_Modem_Init:	
  1419                           ; 0 bytes @ 0x0
  1420                           
  1421  0020                     ??_Update_Crc:	
  1422                           ; 0 bytes @ 0x0
  1423                           
  1424  0020                     ??_Ax25_Send_Sync:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0020                     ??_Ax25_Send_Flag:	
  1428                           ; 0 bytes @ 0x0
  1429                           
  1430  0020                     ?_memcpy:	
  1431                           ; 0 bytes @ 0x0
  1432                           
  1433  0020                     memcpy@s1:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0020                     Delay_ms@time_to_delay:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439                           
  1440                           ; 2 bytes @ 0x0
  1441  0020                     	ds	1
  1442  0021                     memcpy@n:	
  1443                           
  1444                           ; 2 bytes @ 0x1
  1445  0021                     	ds	1
  1446  0022                     ??_Delay_ms:	
  1447  0022                     Update_Crc@input_bit:	
  1448                           ; 0 bytes @ 0x2
  1449                           
  1450                           
  1451                           ; 1 bytes @ 0x2
  1452  0022                     	ds	1
  1453  0023                     ??_memcpy:	
  1454  0023                     ??_Send_Byte:	
  1455                           ; 0 bytes @ 0x3
  1456                           
  1457                           
  1458                           ; 0 bytes @ 0x3
  1459  0023                     	ds	1
  1460  0024                     memcpy@d:	
  1461  0024                     Delay_ms@i:	
  1462                           ; 1 bytes @ 0x4
  1463                           
  1464                           
  1465                           ; 2 bytes @ 0x4
  1466  0024                     	ds	1
  1467  0025                     memcpy@s:	
  1468                           
  1469                           ; 1 bytes @ 0x5
  1470  0025                     	ds	1
  1471  0026                     ??_Spi_Byte_Send:	
  1472  0026                     ??_Adf_Reset:	
  1473                           ; 0 bytes @ 0x6
  1474                           
  1475  0026                     ??_Adf_Locked:	
  1476                           ; 0 bytes @ 0x6
  1477                           
  1478  0026                     ??_Read_Adf7012_Muxout:	
  1479                           ; 0 bytes @ 0x6
  1480                           
  1481  0026                     ??_Adf_Reset_Config:	
  1482                           ; 0 bytes @ 0x6
  1483                           
  1484  0026                     Ax25_Send_Sync@byte:	
  1485                           ; 0 bytes @ 0x6
  1486                           
  1487  0026                     Ax25_Send_Flag@byte:	
  1488                           ; 1 bytes @ 0x6
  1489                           
  1490  0026                     memcpy@d1:	
  1491                           ; 1 bytes @ 0x6
  1492                           
  1493                           
  1494                           ; 1 bytes @ 0x6
  1495  0026                     	ds	1
  1496  0027                     ?_Reverse_Array:	
  1497  0027                     Reverse_Array@length:	
  1498                           ; 1 bytes @ 0x7
  1499                           
  1500  0027                     Spi_Byte_Send@data:	
  1501                           ; 1 bytes @ 0x7
  1502                           
  1503  0027                     Ax25_Send_Sync@i:	
  1504                           ; 1 bytes @ 0x7
  1505                           
  1506  0027                     Ax25_Send_Flag@i:	
  1507                           ; 2 bytes @ 0x7
  1508                           
  1509                           
  1510                           ; 2 bytes @ 0x7
  1511  0027                     	ds	1
  1512  0028                     ??_Reverse_Array:	
  1513  0028                     Spi_Byte_Send@data_to_send:	
  1514                           ; 0 bytes @ 0x8
  1515                           
  1516                           
  1517                           ; 1 bytes @ 0x8
  1518  0028                     	ds	1
  1519  0029                     Spi_Byte_Send@i:	
  1520  0029                     Send_Byte@byte:	
  1521                           ; 1 bytes @ 0x9
  1522                           
  1523                           
  1524                           ; 1 bytes @ 0x9
  1525  0029                     	ds	1
  1526  002A                     ?_Write_Adf7012_Reg:	
  1527  002A                     Write_Adf7012_Reg@size_of_reg:	
  1528                           ; 1 bytes @ 0xA
  1529                           
  1530  002A                     Send_Byte@i:	
  1531                           ; 1 bytes @ 0xA
  1532                           
  1533                           
  1534                           ; 2 bytes @ 0xA
  1535  002A                     	ds	1
  1536  002B                     ??_Write_Adf7012_Reg:	
  1537                           
  1538                           ; 0 bytes @ 0xB
  1539  002B                     	ds	1
  1540  002C                     ?_Ax25_Send_Header:	
  1541  002C                     ??_Ax25_Send_Footer:	
  1542                           ; 0 bytes @ 0xC
  1543                           
  1544  002C                     ??_Ax25_Send_Byte:	
  1545                           ; 0 bytes @ 0xC
  1546                           
  1547  002C                     Write_Adf7012_Reg@reg_value:	
  1548                           ; 0 bytes @ 0xC
  1549                           
  1550  002C                     Ax25_Send_Byte@byte:	
  1551                           ; 1 bytes @ 0xC
  1552                           
  1553  002C                     Ax25_Send_Header@num_addresses:	
  1554                           ; 1 bytes @ 0xC
  1555                           
  1556  002C                     Ax25_Send_Footer@final_crc:	
  1557                           ; 2 bytes @ 0xC
  1558                           
  1559                           
  1560                           ; 2 bytes @ 0xC
  1561  002C                     	ds	1
  1562  002D                     ?_Ax25_Send_String:	
  1563  002D                     Write_Adf7012_Reg@i:	
  1564                           ; 0 bytes @ 0xD
  1565                           
  1566  002D                     Ax25_Send_String@string:	
  1567                           ; 1 bytes @ 0xD
  1568                           
  1569  002D                     Reverse_Array@buffer_array:	
  1570                           ; 2 bytes @ 0xD
  1571                           
  1572                           
  1573                           ; 4 bytes @ 0xD
  1574  002D                     	ds	1
  1575  002E                     ??_Ax25_Send_Header:	
  1576                           
  1577                           ; 0 bytes @ 0xE
  1578  002E                     	ds	1
  1579  002F                     ??_Ax25_Send_String:	
  1580  002F                     Ax25_Send_String@i:	
  1581                           ; 0 bytes @ 0xF
  1582                           
  1583                           
  1584                           ; 2 bytes @ 0xF
  1585  002F                     	ds	2
  1586  0031                     Reverse_Array@input:	
  1587  0031                     Ax25_Send_Header@j:	
  1588                           ; 1 bytes @ 0x11
  1589                           
  1590                           
  1591                           ; 2 bytes @ 0x11
  1592  0031                     	ds	1
  1593  0032                     Reverse_Array@i:	
  1594                           
  1595                           ; 1 bytes @ 0x12
  1596  0032                     	ds	1
  1597  0033                     ??_Adf_Write_Register_Zero:	
  1598  0033                     ??_Adf_Write_Register_One:	
  1599                           ; 0 bytes @ 0x13
  1600                           
  1601  0033                     ??_Adf_Write_Register_Two:	
  1602                           ; 0 bytes @ 0x13
  1603                           
  1604  0033                     ??_Adf_Write_Register_Three:	
  1605                           ; 0 bytes @ 0x13
  1606                           
  1607  0033                     Ax25_Send_Header@addresses:	
  1608                           ; 0 bytes @ 0x13
  1609                           
  1610                           
  1611                           ; 1 bytes @ 0x13
  1612  0033                     	ds	1
  1613  0034                     Ax25_Send_Header@i:	
  1614                           
  1615                           ; 2 bytes @ 0x14
  1616  0034                     	ds	11
  1617  003F                     Adf_Write_Register_One@reg:	
  1618                           
  1619                           ; 4 bytes @ 0x1F
  1620  003F                     	ds	4
  1621  0043                     Adf_Write_Register_One@reg_ptr:	
  1622                           
  1623                           ; 3 bytes @ 0x23
  1624  0043                     	ds	8
  1625  004B                     Adf_Write_Register_Two@reg_ptr:	
  1626                           
  1627                           ; 4 bytes @ 0x2B
  1628  004B                     	ds	4
  1629  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1630  004F                     Adf_Write_Register_Two@reg:	
  1631                           ; 4 bytes @ 0x2F
  1632                           
  1633                           
  1634                           ; 4 bytes @ 0x2F
  1635  004F                     	ds	4
  1636  0053                     Adf_Write_Register_Zero@reg:	
  1637                           
  1638                           ; 4 bytes @ 0x33
  1639  0053                     	ds	24
  1640  006B                     ??_Modem_Setup:	
  1641  006B                     ??_Adf_Lock:	
  1642                           ; 0 bytes @ 0x4B
  1643                           
  1644  006B                     ??_Ptt_On:	
  1645                           ; 0 bytes @ 0x4B
  1646                           
  1647  006B                     ??_Ptt_Off:	
  1648                           ; 0 bytes @ 0x4B
  1649                           
  1650  006B                     ??_Adf_Write_Config:	
  1651                           ; 0 bytes @ 0x4B
  1652                           
  1653  006B                     ??_Radio_Setup:	
  1654                           ; 0 bytes @ 0x4B
  1655                           
  1656                           
  1657                           ; 0 bytes @ 0x4B
  1658  006B                     	ds	1
  1659  006C                     ??_Modem_Flush_Frame:	
  1660                           
  1661                           ; 0 bytes @ 0x4C
  1662  006C                     	ds	1
  1663  006D                     ??_main:	
  1664                           
  1665                           ; 0 bytes @ 0x4D
  1666  006D                     	ds	1
  1667                           
  1668                           	psect	maintext
  1669  06E4                     __pmaintext:	
  1670 ;;
  1671 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1672 ;;
  1673 ;; *************** function _main *****************
  1674 ;; Defined at:
  1675 ;;		line 166 in file "main.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1680 ;;  adc_sonuc       2    0        unsigned int 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  2  128[COMMON] int 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 17F/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1691 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1692 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1694 ;;Total ram usage:       17 bytes
  1695 ;; Hardware stack levels required when called:   11
  1696 ;; This function calls:
  1697 ;;		_Adc1_Start
  1698 ;;		_Adf_Lock
  1699 ;;		_Ax25_Send_Footer
  1700 ;;		_Ax25_Send_Header
  1701 ;;		_Ax25_Send_String
  1702 ;;		_Dac0_Start_Hold
  1703 ;;		_Delay_ms
  1704 ;;		_Gpio_Config
  1705 ;;		_Modem_Flush_Frame
  1706 ;;		_Modem_Setup
  1707 ;;		_Ptt_Off
  1708 ;;		_Ptt_On
  1709 ;;		_System_Start
  1710 ;;		_Timer1_Start
  1711 ;; This function is called by:
  1712 ;;		Startup code after reset
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _main
  1718  06E4                     _main:	
  1719                           
  1720                           ;main.c: 167: unsigned int adc_sonuc;
  1721                           ;main.c: 168: System_Start();
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1725  06E4  318E  2632  3186   	fcall	_System_Start
  1726  06E7                     l129:	
  1727                           ;main.c: 169: while (!(OSCSTAT & (0x01))){}
  1728                           
  1729  06E7  0021               	movlb	1	; select bank1
  1730  06E8  1C1A               	btfss	26,0	;volatile
  1731  06E9  2EE7               	goto	l129
  1732                           
  1733                           ;main.c: 172: Gpio_Config();
  1734  06EA  318C  247C  3186   	fcall	_Gpio_Config
  1735                           
  1736                           ;main.c: 174: Timer1_Start();
  1737  06ED  318C  246D  3186   	fcall	_Timer1_Start
  1738                           
  1739                           ;main.c: 176: Dac0_Start_Hold();
  1740  06F0  318C  2404  3186   	fcall	_Dac0_Start_Hold
  1741                           
  1742                           ;main.c: 178: Adc1_Start();
  1743  06F3  318C  2409  3186   	fcall	_Adc1_Start
  1744                           
  1745                           ;main.c: 180: PORTAbits.RA5 = 0;;
  1746  06F6  0020               	movlb	0	; select bank0
  1747  06F7  128C               	bcf	12,5	;volatile
  1748                           
  1749                           ;main.c: 181: Delay_ms(10);
  1750  06F8  300A               	movlw	10
  1751  06F9  00A0               	movwf	Delay_ms@time_to_delay
  1752  06FA  3000               	movlw	0
  1753  06FB  00A1               	movwf	Delay_ms@time_to_delay+1
  1754  06FC  318D  2534  3186   	fcall	_Delay_ms
  1755                           
  1756                           ;main.c: 182: PORTAbits.RA4 = 1;;
  1757  06FF  0020               	movlb	0	; select bank0
  1758  0700  160C               	bsf	12,4	;volatile
  1759                           
  1760                           ;main.c: 183: Delay_ms(10);
  1761  0701  300A               	movlw	10
  1762  0702  00A0               	movwf	Delay_ms@time_to_delay
  1763  0703  3000               	movlw	0
  1764  0704  00A1               	movwf	Delay_ms@time_to_delay+1
  1765  0705  318D  2534  3186   	fcall	_Delay_ms
  1766                           
  1767                           ;main.c: 184: PORTAbits.RA5 = 1;;
  1768  0708  0020               	movlb	0	; select bank0
  1769  0709  168C               	bsf	12,5	;volatile
  1770                           
  1771                           ;main.c: 185: Delay_ms(10);
  1772  070A  300A               	movlw	10
  1773  070B  00A0               	movwf	Delay_ms@time_to_delay
  1774  070C  3000               	movlw	0
  1775  070D  00A1               	movwf	Delay_ms@time_to_delay+1
  1776  070E  318D  2534  3186   	fcall	_Delay_ms
  1777                           
  1778                           ;main.c: 187: Delay_ms(200);
  1779  0711  30C8               	movlw	200
  1780  0712  0020               	movlb	0	; select bank0
  1781  0713  00A0               	movwf	Delay_ms@time_to_delay
  1782  0714  3000               	movlw	0
  1783  0715  00A1               	movwf	Delay_ms@time_to_delay+1
  1784  0716  318D  2534  3186   	fcall	_Delay_ms
  1785                           
  1786                           ;main.c: 190: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1787  0719  3038               	movlw	low main@F3176
  1788  071A  0086               	movwf	6
  1789  071B  3001               	movlw	high main@F3176
  1790  071C  0087               	movwf	7
  1791  071D  30DF               	movlw	low main@beacon_address
  1792  071E  0084               	movwf	4
  1793  071F  3000               	movlw	high main@beacon_address
  1794  0720  0085               	movwf	5
  1795  0721  3010               	movlw	16
  1796  0722  0020               	movlb	0	; select bank0
  1797  0723  00ED               	movwf	??_main
  1798  0724                     u2440:	
  1799  0724  0016               	moviw fsr1++
  1800  0725  001A               	movwi fsr0++
  1801  0726  0BED               	decfsz	??_main,f
  1802  0727  2F24               	goto	u2440
  1803                           
  1804                           ;main.c: 192: Ax25_Send_Header(beacon_address,2);
  1805  0728  3002               	movlw	2
  1806  0729  00AC               	movwf	Ax25_Send_Header@num_addresses
  1807  072A  3000               	movlw	0
  1808  072B  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  1809  072C  30DF               	movlw	main@beacon_address& (0+255)
  1810  072D  3181  21F5  3186   	fcall	_Ax25_Send_Header
  1811                           
  1812                           ;main.c: 193: Ax25_Send_String("HELLO");
  1813  0730  30BE               	movlw	low (STR_1| (0+32768))
  1814  0731  0020               	movlb	0	; select bank0
  1815  0732  00AD               	movwf	Ax25_Send_String@string
  1816  0733  3084               	movlw	high (STR_1| (0+32768))
  1817  0734  00AE               	movwf	Ax25_Send_String@string+1
  1818  0735  318C  24F8  3186   	fcall	_Ax25_Send_String
  1819                           
  1820                           ;main.c: 194: Ax25_Send_Footer();
  1821  0738  318C  24DD  3186   	fcall	_Ax25_Send_Footer
  1822                           
  1823                           ;main.c: 198: Modem_Setup();
  1824  073B  318C  2415  3186   	fcall	_Modem_Setup
  1825                           
  1826                           ;main.c: 199: Delay_ms(100);
  1827  073E  3064               	movlw	100
  1828  073F  0020               	movlb	0	; select bank0
  1829  0740  00A0               	movwf	Delay_ms@time_to_delay
  1830  0741  3000               	movlw	0
  1831  0742  00A1               	movwf	Delay_ms@time_to_delay+1
  1832  0743  318D  2534  3186   	fcall	_Delay_ms
  1833                           
  1834                           ;main.c: 200: Adf_Lock();
  1835  0746  318F  2712  3186   	fcall	_Adf_Lock
  1836                           
  1837                           ;main.c: 202: Delay_ms(100);
  1838  0749  3064               	movlw	100
  1839  074A  0020               	movlb	0	; select bank0
  1840  074B  00A0               	movwf	Delay_ms@time_to_delay
  1841  074C  3000               	movlw	0
  1842  074D  00A1               	movwf	Delay_ms@time_to_delay+1
  1843  074E  318D  2534  3186   	fcall	_Delay_ms
  1844                           
  1845                           ;main.c: 211: Ptt_On();
  1846  0751  318D  25FC  3186   	fcall	_Ptt_On
  1847  0754                     l2468:	
  1848                           ;main.c: 214: while(1){
  1849                           
  1850                           
  1851                           ;main.c: 216: if(PTT_OFF){
  1852  0754  0021               	movlb	1	; select bank1
  1853  0755  084D               	movf	_PTT_OFF^(0+128),w
  1854  0756  1903               	btfsc	3,2
  1855  0757  2F5D               	goto	l2474
  1856                           
  1857                           ;main.c: 217: Ptt_Off();
  1858  0758  318C  2441  3186   	fcall	_Ptt_Off
  1859                           
  1860                           ;main.c: 218: PTT_OFF = 0;
  1861  075B  0021               	movlb	1	; select bank1
  1862  075C  01CD               	clrf	_PTT_OFF^(0+128)
  1863  075D                     l2474:	
  1864                           
  1865                           ;main.c: 219: }
  1866                           ;main.c: 222: Modem_Flush_Frame();
  1867  075D  318D  2554  3186   	fcall	_Modem_Flush_Frame
  1868  0760                     l2476:	
  1869                           ;main.c: 223: while(MODEM_TRANSMITTING);
  1870                           
  1871  0760  0021               	movlb	1	; select bank1
  1872  0761  08CC               	movf	_MODEM_TRANSMITTING^(0+128),f
  1873  0762  1D03               	skipz
  1874  0763  2F60               	goto	l2476
  1875                           
  1876                           ;main.c: 224: Delay_ms(2000);
  1877  0764  30D0               	movlw	208
  1878  0765  0020               	movlb	0	; select bank0
  1879  0766  00A0               	movwf	Delay_ms@time_to_delay
  1880  0767  3007               	movlw	7
  1881  0768  00A1               	movwf	Delay_ms@time_to_delay+1
  1882  0769  318D  2534  3186   	fcall	_Delay_ms
  1883  076C  2F54               	goto	l2468
  1884  076D                     __end_of_main:	
  1885                           ;main.c: 235: }
  1886                           ;main.c: 236: return (0);
  1887                           ;	Return value of _main is never used
  1888                           
  1889                           
  1890                           	psect	text1
  1891  0C6D                     __ptext1:	
  1892 ;; *************** function _Timer1_Start *****************
  1893 ;; Defined at:
  1894 ;;		line 263 in file "utility.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;		None
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;		None               void
  1901 ;; Registers used:
  1902 ;;		wreg, status,2
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;Total ram usage:        0 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    3
  1915 ;; This function calls:
  1916 ;;		Nothing
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           
  1923                           ;psect for function _Timer1_Start
  1924  0C6D                     _Timer1_Start:	
  1925                           
  1926                           ;utility.c: 265: TMR1H = 0x00;
  1927                           
  1928                           ;incstack = 0
  1929                           ; Regs used in _Timer1_Start: [wreg+status,2]
  1930  0C6D  0020               	movlb	0	; select bank0
  1931  0C6E  0197               	clrf	23	;volatile
  1932                           
  1933                           ;utility.c: 266: TMR1L = 0x00;
  1934  0C6F  0196               	clrf	22	;volatile
  1935                           
  1936                           ;utility.c: 268: TMR1IE = 0;
  1937  0C70  0021               	movlb	1	; select bank1
  1938  0C71  1011               	bcf	17,0	;volatile
  1939                           
  1940                           ;utility.c: 271: CCPR1H = 0x03;
  1941  0C72  3003               	movlw	3
  1942  0C73  0025               	movlb	5	; select bank5
  1943  0C74  0092               	movwf	18	;volatile
  1944                           
  1945                           ;utility.c: 272: CCPR1L = 0x41;
  1946  0C75  3041               	movlw	65
  1947  0C76  0091               	movwf	17	;volatile
  1948                           
  1949                           ;utility.c: 274: CCP1IF = 0;
  1950  0C77  0020               	movlb	0	; select bank0
  1951  0C78  1111               	bcf	17,2	;volatile
  1952                           
  1953                           ;utility.c: 276: CCP1IE = 1;
  1954  0C79  0021               	movlb	1	; select bank1
  1955  0C7A  1511               	bsf	17,2	;volatile
  1956  0C7B  0008               	return
  1957  0C7C                     __end_of_Timer1_Start:	
  1958                           
  1959                           	psect	text2
  1960  0E32                     __ptext2:	
  1961 ;; *************** function _System_Start *****************
  1962 ;; Defined at:
  1963 ;;		line 95 in file "main.c"
  1964 ;; Parameters:    Size  Location     Type
  1965 ;;		None
  1966 ;; Auto vars:     Size  Location     Type
  1967 ;;		None
  1968 ;; Return value:  Size  Location     Type
  1969 ;;		None               void
  1970 ;; Registers used:
  1971 ;;		wreg, status,2, status,0
  1972 ;; Tracked objects:
  1973 ;;		On entry : 0/0
  1974 ;;		On exit  : 0/0
  1975 ;;		Unchanged: 0/0
  1976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;Total ram usage:        1 bytes
  1982 ;; Hardware stack levels used:    1
  1983 ;; Hardware stack levels required when called:    3
  1984 ;; This function calls:
  1985 ;;		Nothing
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           
  1992                           ;psect for function _System_Start
  1993  0E32                     _System_Start:	
  1994                           
  1995                           ;main.c: 98: OSCCON = 0x00;
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  1999  0E32  0021               	movlb	1	; select bank1
  2000  0E33  0199               	clrf	25	;volatile
  2001                           
  2002                           ;main.c: 99: OSCCON |= 0b11110000;
  2003  0E34  30F0               	movlw	240
  2004  0E35  0020               	movlb	0	; select bank0
  2005  0E36  00A0               	movwf	??_System_Start
  2006  0E37  0820               	movf	??_System_Start,w
  2007  0E38  0021               	movlb	1	; select bank1
  2008  0E39  0499               	iorwf	25,f	;volatile
  2009                           
  2010                           ;main.c: 100: OSCTUNE = 0x00;
  2011  0E3A  0198               	clrf	24	;volatile
  2012                           
  2013                           ;main.c: 104: TMR0CS = 0;
  2014  0E3B  1295               	bcf	21,5	;volatile
  2015                           
  2016                           ;main.c: 105: PSA = 1;
  2017  0E3C  1595               	bsf	21,3	;volatile
  2018                           
  2019                           ;main.c: 110: TMR1ON = 1;
  2020  0E3D  0020               	movlb	0	; select bank0
  2021  0E3E  1418               	bsf	24,0	;volatile
  2022                           
  2023                           ;main.c: 111: TMR1GE = 0;
  2024  0E3F  1399               	bcf	25,7	;volatile
  2025                           
  2026                           ;main.c: 114: TMR1CS1 = 0;
  2027  0E40  1398               	bcf	24,7	;volatile
  2028                           
  2029                           ;main.c: 115: TMR1CS0 = 0;
  2030  0E41  1318               	bcf	24,6	;volatile
  2031                           
  2032                           ;main.c: 118: T1CKPS1 = 1;
  2033  0E42  1698               	bsf	24,5	;volatile
  2034                           
  2035                           ;main.c: 119: T1CKPS0 = 1;
  2036  0E43  1618               	bsf	24,4	;volatile
  2037                           
  2038                           ;main.c: 122: CCP1M3 = 1;
  2039  0E44  0025               	movlb	5	; select bank5
  2040  0E45  1593               	bsf	19,3	;volatile
  2041                           
  2042                           ;main.c: 123: CCP1M2 = 0;
  2043  0E46  1113               	bcf	19,2	;volatile
  2044                           
  2045                           ;main.c: 124: CCP1M1 = 1;
  2046  0E47  1493               	bsf	19,1	;volatile
  2047                           
  2048                           ;main.c: 125: CCP1M1 = 0;
  2049  0E48  1093               	bcf	19,1	;volatile
  2050                           
  2051                           ;main.c: 130: DACOE = 1;
  2052  0E49  0022               	movlb	2	; select bank2
  2053  0E4A  1698               	bsf	24,5	;volatile
  2054                           
  2055                           ;main.c: 131: DACPSS1 = 0;
  2056  0E4B  1198               	bcf	24,3	;volatile
  2057                           
  2058                           ;main.c: 132: DACPSS0 = 0;
  2059  0E4C  1118               	bcf	24,2	;volatile
  2060                           
  2061                           ;main.c: 133: DACNSS = 0;
  2062  0E4D  1018               	bcf	24,0	;volatile
  2063                           
  2064                           ;main.c: 138: ANSA1 = 1;
  2065  0E4E  0023               	movlb	3	; select bank3
  2066  0E4F  148C               	bsf	12,1	;volatile
  2067                           
  2068                           ;main.c: 139: ADCON0 &= 0b10000011;
  2069  0E50  3083               	movlw	131
  2070  0E51  0020               	movlb	0	; select bank0
  2071  0E52  00A0               	movwf	??_System_Start
  2072  0E53  0820               	movf	??_System_Start,w
  2073  0E54  0021               	movlb	1	; select bank1
  2074  0E55  059D               	andwf	29,f	;volatile
  2075                           
  2076                           ;main.c: 140: ADCON0 |= 0b00000100;
  2077  0E56  151D               	bsf	29,2	;volatile
  2078                           
  2079                           ;main.c: 141: ADNREF = 0;
  2080  0E57  111E               	bcf	30,2	;volatile
  2081                           
  2082                           ;main.c: 142: ADPREF1 = 0;
  2083  0E58  109E               	bcf	30,1	;volatile
  2084                           
  2085                           ;main.c: 143: ADPREF0 = 0;
  2086  0E59  101E               	bcf	30,0	;volatile
  2087                           
  2088                           ;main.c: 144: ADCS2 = 1;
  2089  0E5A  171E               	bsf	30,6	;volatile
  2090                           
  2091                           ;main.c: 145: ADCS1 = 1;
  2092  0E5B  169E               	bsf	30,5	;volatile
  2093                           
  2094                           ;main.c: 146: ADCS0 = 0;
  2095  0E5C  121E               	bcf	30,4	;volatile
  2096                           
  2097                           ;main.c: 147: ADFM = 1;
  2098  0E5D  179E               	bsf	30,7	;volatile
  2099                           
  2100                           ;main.c: 152: TMR0IF = 0;
  2101  0E5E  110B               	bcf	11,2	;volatile
  2102                           
  2103                           ;main.c: 153: TMR1IF = 0;
  2104  0E5F  0020               	movlb	0	; select bank0
  2105  0E60  1011               	bcf	17,0	;volatile
  2106                           
  2107                           ;main.c: 154: CCP1IF = 0;
  2108  0E61  1111               	bcf	17,2	;volatile
  2109                           
  2110                           ;main.c: 155: ADIF = 0;
  2111  0E62  1311               	bcf	17,6	;volatile
  2112                           
  2113                           ;main.c: 159: INTCON |= 0xC0;
  2114  0E63  30C0               	movlw	192
  2115  0E64  00A0               	movwf	??_System_Start
  2116  0E65  0820               	movf	??_System_Start,w
  2117  0E66  048B               	iorwf	11,f	;volatile
  2118  0E67  0008               	return
  2119  0E68                     __end_of_System_Start:	
  2120                           
  2121                           	psect	text3
  2122  0C41                     __ptext3:	
  2123 ;; *************** function _Ptt_Off *****************
  2124 ;; Defined at:
  2125 ;;		line 349 in file "adf7012.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;		None
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;		None
  2130 ;; Return value:  Size  Location     Type
  2131 ;;		None               void
  2132 ;; Registers used:
  2133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2143 ;;Total ram usage:        0 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    9
  2146 ;; This function calls:
  2147 ;;		_Adf_Write_Config
  2148 ;;		_Delay_ms
  2149 ;; This function is called by:
  2150 ;;		_main
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           
  2155                           ;psect for function _Ptt_Off
  2156  0C41                     _Ptt_Off:	
  2157                           
  2158                           ;adf7012.c: 351: adf_config.r3.pa_enable = 0;
  2159                           
  2160                           ;incstack = 0
  2161                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2162  0C41  0021               	movlb	1	; select bank1
  2163  0C42  01BA               	clrf	(_adf_config^(0+128)+26)
  2164                           
  2165                           ;adf7012.c: 352: adf_config.r2.power_amplifier_level = 0;
  2166  0C43  01B2               	clrf	(_adf_config^(0+128)+18)
  2167                           
  2168                           ;adf7012.c: 353: Adf_Write_Config();
  2169  0C44  318C  2427  318C   	fcall	_Adf_Write_Config
  2170                           
  2171                           ;adf7012.c: 354: Delay_ms(10);
  2172  0C47  300A               	movlw	10
  2173  0C48  0020               	movlb	0	; select bank0
  2174  0C49  00A0               	movwf	Delay_ms@time_to_delay
  2175  0C4A  3000               	movlw	0
  2176  0C4B  00A1               	movwf	Delay_ms@time_to_delay+1
  2177  0C4C  318D  2534         	fcall	_Delay_ms
  2178  0C4E  0008               	return
  2179  0C4F                     __end_of_Ptt_Off:	
  2180                           
  2181                           	psect	text4
  2182  0C15                     __ptext4:	
  2183 ;; *************** function _Modem_Setup *****************
  2184 ;; Defined at:
  2185 ;;		line 49 in file "audio_tone.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;		None               void
  2192 ;; Registers used:
  2193 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:   10
  2206 ;; This function calls:
  2207 ;;		_Modem_Init
  2208 ;;		_Radio_Setup
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _Modem_Setup
  2216  0C15                     _Modem_Setup:	
  2217                           
  2218                           ;audio_tone.c: 51: Modem_Init();
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2222  0C15  318C  24AD  318C   	fcall	_Modem_Init
  2223                           
  2224                           ;audio_tone.c: 52: Radio_Setup();
  2225  0C18  318C  2433         	fcall	_Radio_Setup
  2226  0C1A  0008               	return
  2227  0C1B                     __end_of_Modem_Setup:	
  2228                           
  2229                           	psect	text5
  2230  0C33                     __ptext5:	
  2231 ;; *************** function _Radio_Setup *****************
  2232 ;; Defined at:
  2233 ;;		line 306 in file "adf7012.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;		None               void
  2240 ;; Registers used:
  2241 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    9
  2254 ;; This function calls:
  2255 ;;		_Adf_Reset_Config
  2256 ;;		_Adf_Write_Config
  2257 ;;		_Delay_ms
  2258 ;; This function is called by:
  2259 ;;		_Modem_Setup
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function _Radio_Setup
  2265  0C33                     _Radio_Setup:	
  2266                           
  2267                           ;adf7012.c: 309: Adf_Reset_Config();
  2268                           
  2269                           ;incstack = 0
  2270                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2271  0C33  318C  245E  318C   	fcall	_Adf_Reset_Config
  2272                           
  2273                           ;adf7012.c: 311: Adf_Write_Config();
  2274  0C36  318C  2427  318C   	fcall	_Adf_Write_Config
  2275                           
  2276                           ;adf7012.c: 313: Delay_ms(10);
  2277  0C39  300A               	movlw	10
  2278  0C3A  0020               	movlb	0	; select bank0
  2279  0C3B  00A0               	movwf	Delay_ms@time_to_delay
  2280  0C3C  3000               	movlw	0
  2281  0C3D  00A1               	movwf	Delay_ms@time_to_delay+1
  2282  0C3E  318D  2534         	fcall	_Delay_ms
  2283  0C40  0008               	return
  2284  0C41                     __end_of_Radio_Setup:	
  2285                           
  2286                           	psect	text6
  2287  0C5E                     __ptext6:	
  2288 ;; *************** function _Adf_Reset_Config *****************
  2289 ;; Defined at:
  2290 ;;		line 86 in file "adf7012.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, pclath, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;Total ram usage:        0 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    6
  2311 ;; This function calls:
  2312 ;;		_Adf_Reset
  2313 ;;		_Adf_Reset_Register_One
  2314 ;;		_Adf_Reset_Register_Three
  2315 ;;		_Adf_Reset_Register_Two
  2316 ;;		_Adf_Reset_Register_Zero
  2317 ;; This function is called by:
  2318 ;;		_Radio_Setup
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _Adf_Reset_Config
  2324  0C5E                     _Adf_Reset_Config:	
  2325                           
  2326                           ;adf7012.c: 89: Adf_Reset_Register_Zero();
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  2330  0C5E  318D  2515  318C   	fcall	_Adf_Reset_Register_Zero
  2331                           
  2332                           ;adf7012.c: 90: Adf_Reset_Register_One();
  2333  0C61  318C  249C  318C   	fcall	_Adf_Reset_Register_One
  2334                           
  2335                           ;adf7012.c: 91: Adf_Reset_Register_Two();
  2336  0C64  318C  24C5  318C   	fcall	_Adf_Reset_Register_Two
  2337                           
  2338                           ;adf7012.c: 92: Adf_Reset_Register_Three();
  2339  0C67  3183  23D8  318C   	fcall	_Adf_Reset_Register_Three
  2340                           
  2341                           ;adf7012.c: 94: Adf_Reset();
  2342  0C6A  3187  27E9         	fcall	_Adf_Reset
  2343  0C6C  0008               	return
  2344  0C6D                     __end_of_Adf_Reset_Config:	
  2345                           
  2346                           	psect	text7
  2347  0D15                     __ptext7:	
  2348 ;; *************** function _Adf_Reset_Register_Zero *****************
  2349 ;; Defined at:
  2350 ;;		line 98 in file "adf7012.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;		None
  2353 ;; Auto vars:     Size  Location     Type
  2354 ;;		None
  2355 ;; Return value:  Size  Location     Type
  2356 ;;		None               void
  2357 ;; Registers used:
  2358 ;;		wreg, status,2
  2359 ;; Tracked objects:
  2360 ;;		On entry : 0/0
  2361 ;;		On exit  : 0/0
  2362 ;;		Unchanged: 0/0
  2363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;Total ram usage:        1 bytes
  2369 ;; Hardware stack levels used:    1
  2370 ;; Hardware stack levels required when called:    3
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		_Adf_Reset_Config
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function _Adf_Reset_Register_Zero
  2380  0D15                     _Adf_Reset_Register_Zero:	
  2381                           
  2382                           ;adf7012.c: 99: adf_config.r0.frequency_error_correction = 0;
  2383                           
  2384                           ;incstack = 0
  2385                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  2386  0D15  3000               	movlw	0
  2387  0D16  0021               	movlb	1	; select bank1
  2388  0D17  00A3               	movwf	(_adf_config+3)^(0+128)
  2389  0D18  3000               	movlw	0
  2390  0D19  00A2               	movwf	(_adf_config+2)^(0+128)
  2391  0D1A  3000               	movlw	0
  2392  0D1B  00A1               	movwf	(_adf_config+1)^(0+128)
  2393  0D1C  3000               	movlw	0
  2394  0D1D  00A0               	movwf	_adf_config^(0+128)
  2395                           
  2396                           ;adf7012.c: 100: adf_config.r0.r_divider = 15;
  2397  0D1E  300F               	movlw	15
  2398  0D1F  0020               	movlb	0	; select bank0
  2399  0D20  00A0               	movwf	??_Adf_Reset_Register_Zero
  2400  0D21  0820               	movf	??_Adf_Reset_Register_Zero,w
  2401  0D22  0021               	movlb	1	; select bank1
  2402  0D23  00A4               	movwf	(_adf_config^(0+128)+4)
  2403                           
  2404                           ;adf7012.c: 101: adf_config.r0.crystal_doubler = 0;
  2405  0D24  01A5               	clrf	(_adf_config^(0+128)+5)
  2406                           
  2407                           ;adf7012.c: 102: adf_config.r0.crystal_oscillator_disable = 0;
  2408  0D25  01A6               	clrf	(_adf_config^(0+128)+6)
  2409                           
  2410                           ;adf7012.c: 103: adf_config.r0.clock_out_divider = 2;
  2411  0D26  3002               	movlw	2
  2412  0D27  0020               	movlb	0	; select bank0
  2413  0D28  00A0               	movwf	??_Adf_Reset_Register_Zero
  2414  0D29  0820               	movf	??_Adf_Reset_Register_Zero,w
  2415  0D2A  0021               	movlb	1	; select bank1
  2416  0D2B  00A7               	movwf	(_adf_config^(0+128)+7)
  2417                           
  2418                           ;adf7012.c: 104: adf_config.r0.vco_adjust = 0;
  2419  0D2C  01A8               	clrf	(_adf_config^(0+128)+8)
  2420                           
  2421                           ;adf7012.c: 105: adf_config.r0.output_divider = 2;
  2422  0D2D  3002               	movlw	2
  2423  0D2E  0020               	movlb	0	; select bank0
  2424  0D2F  00A0               	movwf	??_Adf_Reset_Register_Zero
  2425  0D30  0820               	movf	??_Adf_Reset_Register_Zero,w
  2426  0D31  0021               	movlb	1	; select bank1
  2427  0D32  00A9               	movwf	(_adf_config^(0+128)+9)
  2428  0D33  0008               	return
  2429  0D34                     __end_of_Adf_Reset_Register_Zero:	
  2430                           
  2431                           	psect	text8
  2432  0CC5                     __ptext8:	
  2433 ;; *************** function _Adf_Reset_Register_Two *****************
  2434 ;; Defined at:
  2435 ;;		line 114 in file "adf7012.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;		None
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;		None
  2440 ;; Return value:  Size  Location     Type
  2441 ;;		None               void
  2442 ;; Registers used:
  2443 ;;		wreg, status,2
  2444 ;; Tracked objects:
  2445 ;;		On entry : 0/0
  2446 ;;		On exit  : 0/0
  2447 ;;		Unchanged: 0/0
  2448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2451 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2452 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2453 ;;Total ram usage:        1 bytes
  2454 ;; Hardware stack levels used:    1
  2455 ;; Hardware stack levels required when called:    3
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_Adf_Reset_Config
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           
  2464                           ;psect for function _Adf_Reset_Register_Two
  2465  0CC5                     _Adf_Reset_Register_Two:	
  2466                           
  2467                           ;adf7012.c: 115: adf_config.r2.mod_control = 3;
  2468                           
  2469                           ;incstack = 0
  2470                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  2471  0CC5  3003               	movlw	3
  2472  0CC6  0020               	movlb	0	; select bank0
  2473  0CC7  00A0               	movwf	??_Adf_Reset_Register_Two
  2474  0CC8  0820               	movf	??_Adf_Reset_Register_Two,w
  2475  0CC9  0021               	movlb	1	; select bank1
  2476  0CCA  00B0               	movwf	(_adf_config^(0+128)+16)
  2477                           
  2478                           ;adf7012.c: 116: adf_config.r2.gook = 0;
  2479  0CCB  01B1               	clrf	(_adf_config^(0+128)+17)
  2480                           
  2481                           ;adf7012.c: 117: adf_config.r2.power_amplifier_level = 15;
  2482  0CCC  300F               	movlw	15
  2483  0CCD  0020               	movlb	0	; select bank0
  2484  0CCE  00A0               	movwf	??_Adf_Reset_Register_Two
  2485  0CCF  0820               	movf	??_Adf_Reset_Register_Two,w
  2486  0CD0  0021               	movlb	1	; select bank1
  2487  0CD1  00B2               	movwf	(_adf_config^(0+128)+18)
  2488                           
  2489                           ;adf7012.c: 118: adf_config.r2.modulation_deviation = 16;
  2490  0CD2  3000               	movlw	0
  2491  0CD3  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  2492  0CD4  3000               	movlw	0
  2493  0CD5  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  2494  0CD6  3000               	movlw	0
  2495  0CD7  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  2496  0CD8  3010               	movlw	16
  2497  0CD9  00B3               	movwf	(_adf_config^(0+128)+19)
  2498                           
  2499                           ;adf7012.c: 119: adf_config.r2.gfsk_modulation_control = 0;
  2500  0CDA  01B7               	clrf	(_adf_config^(0+128)+23)
  2501                           
  2502                           ;adf7012.c: 120: adf_config.r2.index_counter = 0;
  2503  0CDB  01B8               	clrf	(_adf_config^(0+128)+24)
  2504  0CDC  0008               	return
  2505  0CDD                     __end_of_Adf_Reset_Register_Two:	
  2506                           
  2507                           	psect	text9
  2508  03D8                     __ptext9:	
  2509 ;; *************** function _Adf_Reset_Register_Three *****************
  2510 ;; Defined at:
  2511 ;;		line 123 in file "adf7012.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;		None
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;		None
  2516 ;; Return value:  Size  Location     Type
  2517 ;;		None               void
  2518 ;; Registers used:
  2519 ;;		wreg, status,2
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2528 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2529 ;;Total ram usage:        1 bytes
  2530 ;; Hardware stack levels used:    1
  2531 ;; Hardware stack levels required when called:    3
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_Adf_Reset_Config
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           
  2540                           ;psect for function _Adf_Reset_Register_Three
  2541  03D8                     _Adf_Reset_Register_Three:	
  2542                           
  2543                           ;adf7012.c: 124: adf_config.r3.pll_enable = 0;
  2544                           
  2545                           ;incstack = 0
  2546                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  2547  03D8  0021               	movlb	1	; select bank1
  2548  03D9  01B9               	clrf	(_adf_config^(0+128)+25)
  2549                           
  2550                           ;adf7012.c: 125: adf_config.r3.pa_enable = 0;
  2551  03DA  01BA               	clrf	(_adf_config^(0+128)+26)
  2552                           
  2553                           ;adf7012.c: 126: adf_config.r3.clkout_enable = 1;
  2554  03DB  01BB               	clrf	(_adf_config^(0+128)+27)
  2555  03DC  0ABB               	incf	(_adf_config^(0+128)+27),f
  2556                           
  2557                           ;adf7012.c: 127: adf_config.r3.data_invert = 1;
  2558  03DD  01BC               	clrf	(_adf_config^(0+128)+28)
  2559  03DE  0ABC               	incf	(_adf_config^(0+128)+28),f
  2560                           
  2561                           ;adf7012.c: 128: adf_config.r3.charge_pump_current = 3;
  2562  03DF  3003               	movlw	3
  2563  03E0  0020               	movlb	0	; select bank0
  2564  03E1  00A0               	movwf	??_Adf_Reset_Register_Three
  2565  03E2  0820               	movf	??_Adf_Reset_Register_Three,w
  2566  03E3  0021               	movlb	1	; select bank1
  2567  03E4  00BD               	movwf	(_adf_config^(0+128)+29)
  2568                           
  2569                           ;adf7012.c: 129: adf_config.r3.bleed_up = 0;
  2570  03E5  01BE               	clrf	(_adf_config^(0+128)+30)
  2571                           
  2572                           ;adf7012.c: 130: adf_config.r3.bleed_down = 0;
  2573  03E6  01BF               	clrf	(_adf_config^(0+128)+31)
  2574                           
  2575                           ;adf7012.c: 131: adf_config.r3.vco_disable = 0;
  2576  03E7  01C0               	clrf	(_adf_config^(0+128)+32)
  2577                           
  2578                           ;adf7012.c: 133: adf_config.r3.muxout = 3;
  2579  03E8  3003               	movlw	3
  2580  03E9  0020               	movlb	0	; select bank0
  2581  03EA  00A0               	movwf	??_Adf_Reset_Register_Three
  2582  03EB  0820               	movf	??_Adf_Reset_Register_Three,w
  2583  03EC  0021               	movlb	1	; select bank1
  2584  03ED  00C1               	movwf	(_adf_config^(0+128)+33)
  2585                           
  2586                           ;adf7012.c: 135: adf_config.r3.ld_precision = 0;
  2587  03EE  01C2               	clrf	(_adf_config^(0+128)+34)
  2588                           
  2589                           ;adf7012.c: 136: adf_config.r3.vco_bias = 6;
  2590  03EF  3006               	movlw	6
  2591  03F0  0020               	movlb	0	; select bank0
  2592  03F1  00A0               	movwf	??_Adf_Reset_Register_Three
  2593  03F2  0820               	movf	??_Adf_Reset_Register_Three,w
  2594  03F3  0021               	movlb	1	; select bank1
  2595  03F4  00C3               	movwf	(_adf_config^(0+128)+35)
  2596                           
  2597                           ;adf7012.c: 137: adf_config.r3.pa_bias = 4;
  2598  03F5  3004               	movlw	4
  2599  03F6  0020               	movlb	0	; select bank0
  2600  03F7  00A0               	movwf	??_Adf_Reset_Register_Three
  2601  03F8  0820               	movf	??_Adf_Reset_Register_Three,w
  2602  03F9  0021               	movlb	1	; select bank1
  2603  03FA  00C4               	movwf	(_adf_config^(0+128)+36)
  2604                           
  2605                           ;adf7012.c: 138: adf_config.r3.pll_test_mode = 0;
  2606  03FB  01C5               	clrf	(_adf_config^(0+128)+37)
  2607                           
  2608                           ;adf7012.c: 139: adf_config.r3.sd_test_mode = 0;
  2609  03FC  01C6               	clrf	(_adf_config^(0+128)+38)
  2610  03FD  0008               	return
  2611  03FE                     __end_of_Adf_Reset_Register_Three:	
  2612                           
  2613                           	psect	text10
  2614  0C9C                     __ptext10:	
  2615 ;; *************** function _Adf_Reset_Register_One *****************
  2616 ;; Defined at:
  2617 ;;		line 108 in file "adf7012.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;		None
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;		None
  2622 ;; Return value:  Size  Location     Type
  2623 ;;		None               void
  2624 ;; Registers used:
  2625 ;;		wreg
  2626 ;; Tracked objects:
  2627 ;;		On entry : 0/0
  2628 ;;		On exit  : 0/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2633 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2634 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2635 ;;Total ram usage:        1 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    3
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_Adf_Reset_Config
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645                           
  2646                           ;psect for function _Adf_Reset_Register_One
  2647  0C9C                     _Adf_Reset_Register_One:	
  2648                           
  2649                           ;adf7012.c: 109: adf_config.r1.integer_n = 109;
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  2653  0C9C  306D               	movlw	109
  2654  0C9D  0020               	movlb	0	; select bank0
  2655  0C9E  00A0               	movwf	??_Adf_Reset_Register_One
  2656  0C9F  0820               	movf	??_Adf_Reset_Register_One,w
  2657  0CA0  0021               	movlb	1	; select bank1
  2658  0CA1  00AE               	movwf	(_adf_config^(0+128)+14)
  2659                           
  2660                           ;adf7012.c: 110: adf_config.r1.fractional_n = 0;
  2661  0CA2  3000               	movlw	0
  2662  0CA3  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  2663  0CA4  3000               	movlw	0
  2664  0CA5  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  2665  0CA6  3000               	movlw	0
  2666  0CA7  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  2667  0CA8  3000               	movlw	0
  2668  0CA9  00AA               	movwf	(_adf_config^(0+128)+10)
  2669                           
  2670                           ;adf7012.c: 111: adf_config.r1.prescaler = 1;
  2671  0CAA  01AF               	clrf	(_adf_config^(0+128)+15)
  2672  0CAB  0AAF               	incf	(_adf_config^(0+128)+15),f
  2673  0CAC  0008               	return
  2674  0CAD                     __end_of_Adf_Reset_Register_One:	
  2675                           
  2676                           	psect	text11
  2677  07E9                     __ptext11:	
  2678 ;; *************** function _Adf_Reset *****************
  2679 ;; Defined at:
  2680 ;;		line 142 in file "adf7012.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;		None
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;		None
  2685 ;; Return value:  Size  Location     Type
  2686 ;;		None               void
  2687 ;; Registers used:
  2688 ;;		wreg, status,2, status,0, pclath, cstack
  2689 ;; Tracked objects:
  2690 ;;		On entry : 0/0
  2691 ;;		On exit  : 0/0
  2692 ;;		Unchanged: 0/0
  2693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;Total ram usage:        0 bytes
  2699 ;; Hardware stack levels used:    1
  2700 ;; Hardware stack levels required when called:    5
  2701 ;; This function calls:
  2702 ;;		_Delay_ms
  2703 ;; This function is called by:
  2704 ;;		_Adf_Reset_Config
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           
  2709                           ;psect for function _Adf_Reset
  2710  07E9                     _Adf_Reset:	
  2711                           
  2712                           ;adf7012.c: 144: PORTAbits.RA5 = 0;;
  2713                           
  2714                           ;incstack = 0
  2715                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  2716  07E9  0020               	movlb	0	; select bank0
  2717  07EA  128C               	bcf	12,5	;volatile
  2718                           
  2719                           ;adf7012.c: 145: Delay_ms(10);
  2720  07EB  300A               	movlw	10
  2721  07EC  00A0               	movwf	Delay_ms@time_to_delay
  2722  07ED  3000               	movlw	0
  2723  07EE  00A1               	movwf	Delay_ms@time_to_delay+1
  2724  07EF  318D  2534  3187   	fcall	_Delay_ms
  2725                           
  2726                           ;adf7012.c: 146: PORTAbits.RA5 = 1;;
  2727  07F2  0020               	movlb	0	; select bank0
  2728  07F3  168C               	bsf	12,5	;volatile
  2729                           
  2730                           ;adf7012.c: 147: Delay_ms(10);
  2731  07F4  300A               	movlw	10
  2732  07F5  00A0               	movwf	Delay_ms@time_to_delay
  2733  07F6  3000               	movlw	0
  2734  07F7  00A1               	movwf	Delay_ms@time_to_delay+1
  2735  07F8  318D  2534         	fcall	_Delay_ms
  2736  07FA  0008               	return
  2737  07FB                     __end_of_Adf_Reset:	
  2738                           
  2739                           	psect	text12
  2740  0CAD                     __ptext12:	
  2741 ;; *************** function _Modem_Init *****************
  2742 ;; Defined at:
  2743 ;;		line 43 in file "audio_tone.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;		None
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;		None
  2748 ;; Return value:  Size  Location     Type
  2749 ;;		None               void
  2750 ;; Registers used:
  2751 ;;		wreg
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2760 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2761 ;;Total ram usage:        1 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    3
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_Modem_Setup
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function _Modem_Init
  2773  0CAD                     _Modem_Init:	
  2774                           
  2775                           ;audio_tone.c: 44: SAMPLES_PER_BAUD = 26;
  2776                           
  2777                           ;incstack = 0
  2778                           ; Regs used in _Modem_Init: [wreg]
  2779  0CAD  301A               	movlw	26
  2780  0CAE  0020               	movlb	0	; select bank0
  2781  0CAF  00A0               	movwf	??_Modem_Init
  2782  0CB0  0820               	movf	??_Modem_Init,w
  2783  0CB1  0021               	movlb	1	; select bank1
  2784  0CB2  00CE               	movwf	_SAMPLES_PER_BAUD^(0+128)
  2785                           
  2786                           ;audio_tone.c: 45: PHASE_DELTA_1200 = 7;
  2787  0CB3  3000               	movlw	0
  2788  0CB4  0022               	movlb	2	; select bank2
  2789  0CB5  00A7               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  2790  0CB6  3000               	movlw	0
  2791  0CB7  00A6               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  2792  0CB8  3000               	movlw	0
  2793  0CB9  00A5               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  2794  0CBA  3007               	movlw	7
  2795  0CBB  00A4               	movwf	_PHASE_DELTA_1200^(0+256)
  2796                           
  2797                           ;audio_tone.c: 46: PHASE_DELTA_2200 = 13;
  2798  0CBC  3000               	movlw	0
  2799  0CBD  00AB               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  2800  0CBE  3000               	movlw	0
  2801  0CBF  00AA               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  2802  0CC0  3000               	movlw	0
  2803  0CC1  00A9               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  2804  0CC2  300D               	movlw	13
  2805  0CC3  00A8               	movwf	_PHASE_DELTA_2200^(0+256)
  2806  0CC4  0008               	return
  2807  0CC5                     __end_of_Modem_Init:	
  2808                           
  2809                           	psect	text13
  2810  0D54                     __ptext13:	
  2811 ;; *************** function _Modem_Flush_Frame *****************
  2812 ;; Defined at:
  2813 ;;		line 66 in file "audio_tone.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;		None               void
  2820 ;; Registers used:
  2821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2830 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;Total ram usage:        1 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:   10
  2834 ;; This function calls:
  2835 ;;		_Delay_ms
  2836 ;;		_Ptt_On
  2837 ;;		_Timer0_Start
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;;		_Ax25_Flush_Frame
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           
  2845                           ;psect for function _Modem_Flush_Frame
  2846  0D54                     _Modem_Flush_Frame:	
  2847                           
  2848                           ;audio_tone.c: 68: phase_delta = PHASE_DELTA_1200;
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2852  0D54  0022               	movlb	2	; select bank2
  2853  0D55  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  2854  0D56  0020               	movlb	0	; select bank0
  2855  0D57  00EC               	movwf	??_Modem_Flush_Frame
  2856  0D58  086C               	movf	??_Modem_Flush_Frame,w
  2857  0D59  0021               	movlb	1	; select bank1
  2858  0D5A  00D2               	movwf	_phase_delta^(0+128)
  2859                           
  2860                           ;audio_tone.c: 69: phase = 0;
  2861  0D5B  01FD               	clrf	_phase
  2862                           
  2863                           ;audio_tone.c: 70: packet_pos = 0;
  2864  0D5C  3000               	movlw	0
  2865  0D5D  0022               	movlb	2	; select bank2
  2866  0D5E  00B3               	movwf	(_packet_pos+3)^(0+256)
  2867  0D5F  3000               	movlw	0
  2868  0D60  00B2               	movwf	(_packet_pos+2)^(0+256)
  2869  0D61  3000               	movlw	0
  2870  0D62  00B1               	movwf	(_packet_pos+1)^(0+256)
  2871  0D63  3000               	movlw	0
  2872  0D64  00B0               	movwf	_packet_pos^(0+256)
  2873                           
  2874                           ;audio_tone.c: 71: current_sample_in_baud = 0;
  2875  0D65  0021               	movlb	1	; select bank1
  2876  0D66  01D1               	clrf	_current_sample_in_baud^(0+128)
  2877                           
  2878                           ;audio_tone.c: 72: MODEM_TRANSMITTING = 1;
  2879  0D67  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  2880  0D68  0ACC               	incf	_MODEM_TRANSMITTING^(0+128),f
  2881                           
  2882                           ;audio_tone.c: 82: Ptt_On();
  2883  0D69  318D  25FC  318D   	fcall	_Ptt_On
  2884                           
  2885                           ;audio_tone.c: 84: Delay_ms(100);
  2886  0D6C  3064               	movlw	100
  2887  0D6D  0020               	movlb	0	; select bank0
  2888  0D6E  00A0               	movwf	Delay_ms@time_to_delay
  2889  0D6F  3000               	movlw	0
  2890  0D70  00A1               	movwf	Delay_ms@time_to_delay+1
  2891  0D71  318D  2534  318D   	fcall	_Delay_ms
  2892                           
  2893                           ;audio_tone.c: 85: Timer0_Start();
  2894  0D74  3187  27FB         	fcall	_Timer0_Start
  2895  0D76  0008               	return
  2896  0D77                     __end_of_Modem_Flush_Frame:	
  2897                           
  2898                           	psect	text14
  2899  07FB                     __ptext14:	
  2900 ;; *************** function _Timer0_Start *****************
  2901 ;; Defined at:
  2902 ;;		line 253 in file "utility.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;		None
  2907 ;; Return value:  Size  Location     Type
  2908 ;;		None               void
  2909 ;; Registers used:
  2910 ;;		status,2
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2920 ;;Total ram usage:        0 bytes
  2921 ;; Hardware stack levels used:    1
  2922 ;; Hardware stack levels required when called:    3
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_Modem_Flush_Frame
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           
  2931                           ;psect for function _Timer0_Start
  2932  07FB                     _Timer0_Start:	
  2933                           
  2934                           ;utility.c: 254: TMR0 = 0x00;
  2935                           
  2936                           ;incstack = 0
  2937                           ; Regs used in _Timer0_Start: [status,2]
  2938  07FB  0020               	movlb	0	; select bank0
  2939  07FC  0195               	clrf	21	;volatile
  2940                           
  2941                           ;utility.c: 255: TMR0IF = 0;
  2942  07FD  110B               	bcf	11,2	;volatile
  2943                           
  2944                           ;utility.c: 256: TMR0IE = 1;
  2945  07FE  168B               	bsf	11,5	;volatile
  2946  07FF  0008               	return
  2947  0800                     __end_of_Timer0_Start:	
  2948                           
  2949                           	psect	text15
  2950  0DFC                     __ptext15:	
  2951 ;; *************** function _Ptt_On *****************
  2952 ;; Defined at:
  2953 ;;		line 317 in file "adf7012.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      unsigned char 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;Total ram usage:        1 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    9
  2974 ;; This function calls:
  2975 ;;		_Adf_Write_Config
  2976 ;;		_Delay_ms
  2977 ;;		_Read_Adf7012_Muxout
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;;		_Modem_Flush_Frame
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           
  2985                           ;psect for function _Ptt_On
  2986  0DFC                     _Ptt_On:	
  2987                           
  2988                           ;adf7012.c: 322: adf_config.r3.pa_enable = 0;
  2989                           
  2990                           ;incstack = 0
  2991                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2992  0DFC  0021               	movlb	1	; select bank1
  2993  0DFD  01BA               	clrf	(_adf_config^(0+128)+26)
  2994                           
  2995                           ;adf7012.c: 323: adf_config.r2.power_amplifier_level = 0;
  2996  0DFE  01B2               	clrf	(_adf_config^(0+128)+18)
  2997                           
  2998                           ;adf7012.c: 324: adf_config.r3.muxout = 3;
  2999  0DFF  3003               	movlw	3
  3000  0E00  0020               	movlb	0	; select bank0
  3001  0E01  00EB               	movwf	??_Ptt_On
  3002  0E02  086B               	movf	??_Ptt_On,w
  3003  0E03  0021               	movlb	1	; select bank1
  3004  0E04  00C1               	movwf	(_adf_config^(0+128)+33)
  3005                           
  3006                           ;adf7012.c: 326: Adf_Write_Config();
  3007  0E05  318C  2427  318D   	fcall	_Adf_Write_Config
  3008                           
  3009                           ;adf7012.c: 327: Delay_ms(10);
  3010  0E08  300A               	movlw	10
  3011  0E09  0020               	movlb	0	; select bank0
  3012  0E0A  00A0               	movwf	Delay_ms@time_to_delay
  3013  0E0B  3000               	movlw	0
  3014  0E0C  00A1               	movwf	Delay_ms@time_to_delay+1
  3015  0E0D  318D  2534  318D   	fcall	_Delay_ms
  3016                           
  3017                           ;adf7012.c: 331: if (!Read_Adf7012_Muxout())
  3018  0E10  318C  244F  318D   	fcall	_Read_Adf7012_Muxout
  3019  0E13  3800               	iorlw	0
  3020  0E14  1903               	btfsc	3,2
  3021  0E15  0008               	return
  3022                           
  3023                           ;adf7012.c: 335: else
  3024                           ;adf7012.c: 336: {
  3025                           ;adf7012.c: 338: adf_config.r3.pa_enable = 1;
  3026                           
  3027                           ;adf7012.c: 334: }
  3028                           
  3029                           ;adf7012.c: 332: {
  3030                           ;adf7012.c: 333: return 0;
  3031                           ;	Return value of _Ptt_On is never used
  3032  0E16  0021               	movlb	1	; select bank1
  3033  0E17  01BA               	clrf	(_adf_config^(0+128)+26)
  3034  0E18  0ABA               	incf	(_adf_config^(0+128)+26),f
  3035                           
  3036                           ;adf7012.c: 339: adf_config.r2.power_amplifier_level = 63;
  3037  0E19  303F               	movlw	63
  3038  0E1A  0020               	movlb	0	; select bank0
  3039  0E1B  00EB               	movwf	??_Ptt_On
  3040  0E1C  086B               	movf	??_Ptt_On,w
  3041  0E1D  0021               	movlb	1	; select bank1
  3042  0E1E  00B2               	movwf	(_adf_config^(0+128)+18)
  3043                           
  3044                           ;adf7012.c: 341: Delay_ms(10);
  3045  0E1F  300A               	movlw	10
  3046  0E20  0020               	movlb	0	; select bank0
  3047  0E21  00A0               	movwf	Delay_ms@time_to_delay
  3048  0E22  3000               	movlw	0
  3049  0E23  00A1               	movwf	Delay_ms@time_to_delay+1
  3050  0E24  318D  2534  318D   	fcall	_Delay_ms
  3051                           
  3052                           ;adf7012.c: 342: Adf_Write_Config();
  3053  0E27  318C  2427  318D   	fcall	_Adf_Write_Config
  3054                           
  3055                           ;adf7012.c: 343: Delay_ms(1);
  3056  0E2A  3001               	movlw	1
  3057  0E2B  0020               	movlb	0	; select bank0
  3058  0E2C  00A0               	movwf	Delay_ms@time_to_delay
  3059  0E2D  3000               	movlw	0
  3060  0E2E  00A1               	movwf	Delay_ms@time_to_delay+1
  3061  0E2F  318D  2534         	fcall	_Delay_ms
  3062                           
  3063                           ;adf7012.c: 345: return 1;
  3064                           ;	Return value of _Ptt_On is never used
  3065  0E31  0008               	return
  3066  0E32                     __end_of_Ptt_On:	
  3067                           
  3068                           	psect	text16
  3069  0C7C                     __ptext16:	
  3070 ;; *************** function _Gpio_Config *****************
  3071 ;; Defined at:
  3072 ;;		line 33 in file "utility.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;		None
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  1    wreg      unsigned char 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;Total ram usage:        1 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    3
  3093 ;; This function calls:
  3094 ;;		Nothing
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _Gpio_Config
  3102  0C7C                     _Gpio_Config:	
  3103                           
  3104                           ;utility.c: 36: TRISA |= 0b00000010;
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  3108  0C7C  0021               	movlb	1	; select bank1
  3109  0C7D  148C               	bsf	12,1	;volatile
  3110                           
  3111                           ;utility.c: 37: TRISA &= 0b11001011;
  3112  0C7E  30CB               	movlw	203
  3113  0C7F  0020               	movlb	0	; select bank0
  3114  0C80  00A0               	movwf	??_Gpio_Config
  3115  0C81  0820               	movf	??_Gpio_Config,w
  3116  0C82  0021               	movlb	1	; select bank1
  3117  0C83  058C               	andwf	12,f	;volatile
  3118                           
  3119                           ;utility.c: 38: TRISC |= 0b00100000;
  3120  0C84  168E               	bsf	14,5	;volatile
  3121                           
  3122                           ;utility.c: 39: TRISC &= 0b11100000;
  3123  0C85  30E0               	movlw	224
  3124  0C86  0020               	movlb	0	; select bank0
  3125  0C87  00A0               	movwf	??_Gpio_Config
  3126  0C88  0820               	movf	??_Gpio_Config,w
  3127  0C89  0021               	movlb	1	; select bank1
  3128  0C8A  058E               	andwf	14,f	;volatile
  3129  0C8B  0008               	return
  3130  0C8C                     __end_of_Gpio_Config:	
  3131                           ;utility.c: 41: return 1;
  3132                           ;	Return value of _Gpio_Config is never used
  3133                           
  3134                           
  3135                           	psect	text17
  3136  0CF8                     __ptext17:	
  3137 ;; *************** function _Ax25_Send_String *****************
  3138 ;; Defined at:
  3139 ;;		line 94 in file "ax25.c"
  3140 ;; Parameters:    Size  Location     Type
  3141 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  3142 ;;		 -> STR_1(6), 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  i               2   15[BANK0 ] int 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;		None               void
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3154 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3157 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3158 ;;Total ram usage:        4 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    6
  3161 ;; This function calls:
  3162 ;;		_Ax25_Send_Byte
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _Ax25_Send_String
  3170  0CF8                     _Ax25_Send_String:	
  3171                           
  3172                           ;ax25.c: 96: int i;
  3173                           ;ax25.c: 97: for (i = 0; string[i]; i++) {
  3174                           
  3175                           ;incstack = 0
  3176                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3177  0CF8  0020               	movlb	0	; select bank0
  3178  0CF9  01AF               	clrf	Ax25_Send_String@i
  3179  0CFA  01B0               	clrf	Ax25_Send_String@i+1
  3180  0CFB                     l2206:	
  3181  0CFB  082D               	movf	Ax25_Send_String@string,w
  3182  0CFC  072F               	addwf	Ax25_Send_String@i,w
  3183  0CFD  0084               	movwf	4
  3184  0CFE  082E               	movf	Ax25_Send_String@string+1,w
  3185  0CFF  3D30               	addwfc	Ax25_Send_String@i+1,w
  3186  0D00  0085               	movwf	5
  3187  0D01  0800               	movf	0,w	;code access
  3188  0D02  3800               	iorlw	0
  3189  0D03  1903               	btfsc	3,2
  3190  0D04  0008               	return
  3191                           
  3192                           ;ax25.c: 98: Ax25_Send_Byte(string[i]);
  3193  0D05  082D               	movf	Ax25_Send_String@string,w
  3194  0D06  072F               	addwf	Ax25_Send_String@i,w
  3195  0D07  0084               	movwf	4
  3196  0D08  082E               	movf	Ax25_Send_String@string+1,w
  3197  0D09  3D30               	addwfc	Ax25_Send_String@i+1,w
  3198  0D0A  0085               	movwf	5
  3199  0D0B  0800               	movf	0,w	;code access
  3200  0D0C  318C  240F  318C   	fcall	_Ax25_Send_Byte
  3201  0D0F  3001               	movlw	1
  3202  0D10  0020               	movlb	0	; select bank0
  3203  0D11  07AF               	addwf	Ax25_Send_String@i,f
  3204  0D12  3000               	movlw	0
  3205  0D13  3DB0               	addwfc	Ax25_Send_String@i+1,f
  3206  0D14  2CFB               	goto	l2206
  3207  0D15                     __end_of_Ax25_Send_String:	
  3208                           
  3209                           	psect	text18
  3210  0C0F                     __ptext18:	
  3211 ;; *************** function _Ax25_Send_Byte *****************
  3212 ;; Defined at:
  3213 ;;		line 59 in file "ax25.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  byte            1    wreg     unsigned char 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  byte            1   12[BANK0 ] unsigned char 
  3218 ;; Return value:  Size  Location     Type
  3219 ;;		None               void
  3220 ;; Registers used:
  3221 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3230 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;Total ram usage:        1 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    5
  3234 ;; This function calls:
  3235 ;;		_Send_Byte
  3236 ;; This function is called by:
  3237 ;;		_Ax25_Send_String
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           
  3242                           ;psect for function _Ax25_Send_Byte
  3243  0C0F                     _Ax25_Send_Byte:	
  3244                           
  3245                           ;incstack = 0
  3246                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3247                           ;Ax25_Send_Byte@byte stored from wreg
  3248  0C0F  0020               	movlb	0	; select bank0
  3249  0C10  00AC               	movwf	Ax25_Send_Byte@byte
  3250                           
  3251                           ;ax25.c: 62: Send_Byte(byte);
  3252  0C11  082C               	movf	Ax25_Send_Byte@byte,w
  3253  0C12  3186  2630         	fcall	_Send_Byte
  3254  0C14  0008               	return
  3255  0C15                     __end_of_Ax25_Send_Byte:	
  3256                           
  3257                           	psect	text19
  3258  01F5                     __ptext19:	
  3259 ;; *************** function _Ax25_Send_Header *****************
  3260 ;; Defined at:
  3261 ;;		line 102 in file "ax25.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  addresses       1    wreg     PTR struct .
  3264 ;;		 -> main@beacon_address(16), 
  3265 ;;  num_addresse    2   12[BANK0 ] int 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  addresses       1   19[BANK0 ] PTR struct .
  3268 ;;		 -> main@beacon_address(16), 
  3269 ;;  i               2   20[BANK0 ] int 
  3270 ;;  j               2   17[BANK0 ] int 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;		None               void
  3273 ;; Registers used:
  3274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3280 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3281 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3282 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3283 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;Total ram usage:       10 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    5
  3287 ;; This function calls:
  3288 ;;		_Ax25_Send_Flag
  3289 ;;		_Ax25_Send_Sync
  3290 ;;		_Send_Byte
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           
  3297                           ;psect for function _Ax25_Send_Header
  3298  01F5                     _Ax25_Send_Header:	
  3299                           
  3300                           ;incstack = 0
  3301                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3302                           ;Ax25_Send_Header@addresses stored from wreg
  3303  01F5  0020               	movlb	0	; select bank0
  3304  01F6  00B3               	movwf	Ax25_Send_Header@addresses
  3305                           
  3306                           ;ax25.c: 105: int i, j;
  3307                           ;ax25.c: 106: modem_packet_size = 0;
  3308  01F7  3000               	movlw	0
  3309  01F8  00FC               	movwf	_modem_packet_size+3
  3310  01F9  3000               	movlw	0
  3311  01FA  00FB               	movwf	_modem_packet_size+2
  3312  01FB  3000               	movlw	0
  3313  01FC  00FA               	movwf	_modem_packet_size+1
  3314  01FD  3000               	movlw	0
  3315  01FE  00F9               	movwf	_modem_packet_size
  3316                           
  3317                           ;ax25.c: 107: ones_in_a_row = 0;
  3318  01FF  0021               	movlb	1	; select bank1
  3319  0200  01C9               	clrf	_ones_in_a_row^(0+128)
  3320  0201  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  3321                           
  3322                           ;ax25.c: 108: crc = 0xffff;
  3323  0202  30FF               	movlw	255
  3324  0203  00C7               	movwf	_crc^(0+128)
  3325  0204  30FF               	movlw	255
  3326  0205  00C8               	movwf	(_crc^(0+128)+1)
  3327                           
  3328                           ;ax25.c: 111: for (i = 0; i < 10; i++)
  3329  0206  0020               	movlb	0	; select bank0
  3330  0207  01B4               	clrf	Ax25_Send_Header@i
  3331  0208  01B5               	clrf	Ax25_Send_Header@i+1
  3332  0209  0835               	movf	Ax25_Send_Header@i+1,w
  3333  020A  3A80               	xorlw	128
  3334  020B  00AE               	movwf	??_Ax25_Send_Header
  3335  020C  3080               	movlw	128
  3336  020D  022E               	subwf	??_Ax25_Send_Header,w
  3337  020E  1D03               	skipz
  3338  020F  2A12               	goto	u1865
  3339  0210  300A               	movlw	10
  3340  0211  0234               	subwf	Ax25_Send_Header@i,w
  3341  0212                     u1865:	
  3342  0212  1803               	btfsc	3,0
  3343  0213  2A27               	goto	l2162
  3344  0214                     l2156:	
  3345                           
  3346                           ;ax25.c: 112: {
  3347                           ;ax25.c: 113: Ax25_Send_Sync();
  3348  0214  318F  2787  3181   	fcall	_Ax25_Send_Sync
  3349  0217  3001               	movlw	1
  3350  0218  0020               	movlb	0	; select bank0
  3351  0219  07B4               	addwf	Ax25_Send_Header@i,f
  3352  021A  3000               	movlw	0
  3353  021B  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3354  021C  0835               	movf	Ax25_Send_Header@i+1,w
  3355  021D  3A80               	xorlw	128
  3356  021E  00AE               	movwf	??_Ax25_Send_Header
  3357  021F  3080               	movlw	128
  3358  0220  022E               	subwf	??_Ax25_Send_Header,w
  3359  0221  1D03               	skipz
  3360  0222  2A25               	goto	u1875
  3361  0223  300A               	movlw	10
  3362  0224  0234               	subwf	Ax25_Send_Header@i,w
  3363  0225                     u1875:	
  3364  0225  1C03               	skipc
  3365  0226  2A14               	goto	l2156
  3366  0227                     l2162:	
  3367                           
  3368                           ;ax25.c: 114: }
  3369                           ;ax25.c: 117: for (i = 0; i < 3; i++)
  3370  0227  0020               	movlb	0	; select bank0
  3371  0228  01B4               	clrf	Ax25_Send_Header@i
  3372  0229  01B5               	clrf	Ax25_Send_Header@i+1
  3373  022A  0835               	movf	Ax25_Send_Header@i+1,w
  3374  022B  3A80               	xorlw	128
  3375  022C  00AE               	movwf	??_Ax25_Send_Header
  3376  022D  3080               	movlw	128
  3377  022E  022E               	subwf	??_Ax25_Send_Header,w
  3378  022F  1D03               	skipz
  3379  0230  2A33               	goto	u1885
  3380  0231  3003               	movlw	3
  3381  0232  0234               	subwf	Ax25_Send_Header@i,w
  3382  0233                     u1885:	
  3383  0233  1803               	btfsc	3,0
  3384  0234  2A48               	goto	l2174
  3385  0235                     l2168:	
  3386                           
  3387                           ;ax25.c: 118: {
  3388                           ;ax25.c: 119: Ax25_Send_Flag();
  3389  0235  3187  276D  3181   	fcall	_Ax25_Send_Flag
  3390  0238  3001               	movlw	1
  3391  0239  0020               	movlb	0	; select bank0
  3392  023A  07B4               	addwf	Ax25_Send_Header@i,f
  3393  023B  3000               	movlw	0
  3394  023C  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3395  023D  0835               	movf	Ax25_Send_Header@i+1,w
  3396  023E  3A80               	xorlw	128
  3397  023F  00AE               	movwf	??_Ax25_Send_Header
  3398  0240  3080               	movlw	128
  3399  0241  022E               	subwf	??_Ax25_Send_Header,w
  3400  0242  1D03               	skipz
  3401  0243  2A46               	goto	u1895
  3402  0244  3003               	movlw	3
  3403  0245  0234               	subwf	Ax25_Send_Header@i,w
  3404  0246                     u1895:	
  3405  0246  1C03               	skipc
  3406  0247  2A35               	goto	l2168
  3407  0248                     l2174:	
  3408                           
  3409                           ;ax25.c: 120: }
  3410                           ;ax25.c: 122: for (i = 0; i < num_addresses; i++) {
  3411  0248  0020               	movlb	0	; select bank0
  3412  0249  01B4               	clrf	Ax25_Send_Header@i
  3413  024A  01B5               	clrf	Ax25_Send_Header@i+1
  3414  024B                     l2196:	
  3415  024B  0835               	movf	Ax25_Send_Header@i+1,w
  3416  024C  3A80               	xorlw	128
  3417  024D  00AE               	movwf	??_Ax25_Send_Header
  3418  024E  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  3419  024F  3A80               	xorlw	128
  3420  0250  022E               	subwf	??_Ax25_Send_Header,w
  3421  0251  1D03               	skipz
  3422  0252  2A55               	goto	u1965
  3423  0253  082C               	movf	Ax25_Send_Header@num_addresses,w
  3424  0254  0234               	subwf	Ax25_Send_Header@i,w
  3425  0255                     u1965:	
  3426  0255  1803               	btfsc	3,0
  3427  0256  2AC5               	goto	l2198
  3428                           
  3429                           ;ax25.c: 124: for (j = 0; j < 6; j++)
  3430  0257  0020               	movlb	0	; select bank0
  3431  0258  01B1               	clrf	Ax25_Send_Header@j
  3432  0259  01B2               	clrf	Ax25_Send_Header@j+1
  3433  025A  0832               	movf	Ax25_Send_Header@j+1,w
  3434  025B  3A80               	xorlw	128
  3435  025C  00AE               	movwf	??_Ax25_Send_Header
  3436  025D  3080               	movlw	128
  3437  025E  022E               	subwf	??_Ax25_Send_Header,w
  3438  025F  1D03               	skipz
  3439  0260  2A63               	goto	u1905
  3440  0261  3006               	movlw	6
  3441  0262  0231               	subwf	Ax25_Send_Header@j,w
  3442  0263                     u1905:	
  3443  0263  1803               	btfsc	3,0
  3444  0264  2A8A               	goto	l2188
  3445  0265                     l2182:	
  3446                           
  3447                           ;ax25.c: 125: Send_Byte(addresses[i].callsign[j] << 1);
  3448  0265  0020               	movlb	0	; select bank0
  3449  0266  0834               	movf	Ax25_Send_Header@i,w
  3450  0267  00AE               	movwf	??_Ax25_Send_Header
  3451  0268  3002               	movlw	2
  3452  0269                     u1915:	
  3453  0269  35AE               	lslf	??_Ax25_Send_Header,f
  3454  026A  3EFF               	addlw	-1
  3455  026B  1D03               	skipz
  3456  026C  2A69               	goto	u1915
  3457  026D  352E               	lslf	??_Ax25_Send_Header,w
  3458  026E  0733               	addwf	Ax25_Send_Header@addresses,w
  3459  026F  00AF               	movwf	??_Ax25_Send_Header+1
  3460  0270  0831               	movf	Ax25_Send_Header@j,w
  3461  0271  072F               	addwf	??_Ax25_Send_Header+1,w
  3462  0272  00B0               	movwf	??_Ax25_Send_Header+2
  3463  0273  0830               	movf	??_Ax25_Send_Header+2,w
  3464  0274  0086               	movwf	6
  3465  0275  0187               	clrf	7
  3466  0276  3501               	lslf	1,w
  3467  0277  3186  2630  3181   	fcall	_Send_Byte
  3468  027A  3001               	movlw	1
  3469  027B  0020               	movlb	0	; select bank0
  3470  027C  07B1               	addwf	Ax25_Send_Header@j,f
  3471  027D  3000               	movlw	0
  3472  027E  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  3473  027F  0832               	movf	Ax25_Send_Header@j+1,w
  3474  0280  3A80               	xorlw	128
  3475  0281  00AE               	movwf	??_Ax25_Send_Header
  3476  0282  3080               	movlw	128
  3477  0283  022E               	subwf	??_Ax25_Send_Header,w
  3478  0284  1D03               	skipz
  3479  0285  2A88               	goto	u1925
  3480  0286  3006               	movlw	6
  3481  0287  0231               	subwf	Ax25_Send_Header@j,w
  3482  0288                     u1925:	
  3483  0288  1C03               	skipc
  3484  0289  2A65               	goto	l2182
  3485  028A                     l2188:	
  3486                           
  3487                           ;ax25.c: 128: if (i == num_addresses - 1){
  3488  028A  0020               	movlb	0	; select bank0
  3489  028B  082C               	movf	Ax25_Send_Header@num_addresses,w
  3490  028C  3EFF               	addlw	255
  3491  028D  00AE               	movwf	??_Ax25_Send_Header
  3492  028E  30FF               	movlw	255
  3493  028F  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  3494  0290  00AF               	movwf	??_Ax25_Send_Header+1
  3495  0291  0835               	movf	Ax25_Send_Header@i+1,w
  3496  0292  062F               	xorwf	??_Ax25_Send_Header+1,w
  3497  0293  1D03               	skipz
  3498  0294  2A97               	goto	u1935
  3499  0295  0834               	movf	Ax25_Send_Header@i,w
  3500  0296  062E               	xorwf	??_Ax25_Send_Header,w
  3501  0297                     u1935:	
  3502  0297  1D03               	skipz
  3503  0298  2AAB               	goto	l2192
  3504                           
  3505                           ;ax25.c: 129: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  3506  0299  0834               	movf	Ax25_Send_Header@i,w
  3507  029A  00AE               	movwf	??_Ax25_Send_Header
  3508  029B  3002               	movlw	2
  3509  029C                     u1945:	
  3510  029C  35AE               	lslf	??_Ax25_Send_Header,f
  3511  029D  3EFF               	addlw	-1
  3512  029E  1D03               	skipz
  3513  029F  2A9C               	goto	u1945
  3514  02A0  352E               	lslf	??_Ax25_Send_Header,w
  3515  02A1  0733               	addwf	Ax25_Send_Header@addresses,w
  3516  02A2  00AF               	movwf	??_Ax25_Send_Header+1
  3517  02A3  082F               	movf	??_Ax25_Send_Header+1,w
  3518  02A4  3E07               	addlw	7
  3519  02A5  0086               	movwf	6
  3520  02A6  0187               	clrf	7
  3521  02A7  3501               	lslf	1,w
  3522  02A8  3E60               	addlw	96
  3523  02A9  3801               	iorlw	1
  3524  02AA  2ABC               	goto	L1
  3525  02AB                     l2192:	
  3526                           ;ax25.c: 131: }
  3527                           
  3528                           
  3529                           ;ax25.c: 132: else
  3530                           ;ax25.c: 133: Send_Byte(('0' + addresses[i].ssid) << 1);
  3531  02AB  0020               	movlb	0	; select bank0
  3532  02AC  0834               	movf	Ax25_Send_Header@i,w
  3533  02AD  00AE               	movwf	??_Ax25_Send_Header
  3534  02AE  3002               	movlw	2
  3535  02AF                     u1955:	
  3536  02AF  35AE               	lslf	??_Ax25_Send_Header,f
  3537  02B0  3EFF               	addlw	-1
  3538  02B1  1D03               	skipz
  3539  02B2  2AAF               	goto	u1955
  3540  02B3  352E               	lslf	??_Ax25_Send_Header,w
  3541  02B4  0733               	addwf	Ax25_Send_Header@addresses,w
  3542  02B5  00AF               	movwf	??_Ax25_Send_Header+1
  3543  02B6  082F               	movf	??_Ax25_Send_Header+1,w
  3544  02B7  3E07               	addlw	7
  3545  02B8  0086               	movwf	6
  3546  02B9  0187               	clrf	7
  3547  02BA  3501               	lslf	1,w
  3548  02BB  3E60               	addlw	96
  3549  02BC                     L1:	
  3550  02BC  3186  2630  3181   	fcall	_Send_Byte
  3551  02BF  3001               	movlw	1
  3552  02C0  0020               	movlb	0	; select bank0
  3553  02C1  07B4               	addwf	Ax25_Send_Header@i,f
  3554  02C2  3000               	movlw	0
  3555  02C3  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3556  02C4  2A4B               	goto	l2196
  3557  02C5                     l2198:	
  3558                           
  3559                           ;ax25.c: 134: }
  3560                           ;ax25.c: 137: Send_Byte(0x03);
  3561  02C5  3003               	movlw	3
  3562  02C6  3186  2630  3181   	fcall	_Send_Byte
  3563                           
  3564                           ;ax25.c: 140: Send_Byte(0xf0);
  3565  02C9  30F0               	movlw	240
  3566  02CA  3186  2630         	fcall	_Send_Byte
  3567  02CC  0008               	return
  3568  02CD                     __end_of_Ax25_Send_Header:	
  3569                           
  3570                           	psect	text20
  3571  0F87                     __ptext20:	
  3572 ;; *************** function _Ax25_Send_Sync *****************
  3573 ;; Defined at:
  3574 ;;		line 66 in file "ax25.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;		None
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  i               2    7[BANK0 ] int 
  3579 ;;  byte            1    6[BANK0 ] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;		None               void
  3582 ;; Registers used:
  3583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3590 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3591 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;Total ram usage:        9 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; Hardware stack levels required when called:    3
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_Ax25_Send_Header
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           
  3604                           ;psect for function _Ax25_Send_Sync
  3605  0F87                     _Ax25_Send_Sync:	
  3606                           
  3607                           ;ax25.c: 68: uint8_t byte = 0x00;
  3608                           
  3609                           ;incstack = 0
  3610                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  3611  0F87  0020               	movlb	0	; select bank0
  3612  0F88  01A6               	clrf	Ax25_Send_Sync@byte
  3613                           
  3614                           ;ax25.c: 69: int i;
  3615                           ;ax25.c: 70: for (i = 0; i < 8; i++, modem_packet_size++) {
  3616  0F89  01A7               	clrf	Ax25_Send_Sync@i
  3617  0F8A  01A8               	clrf	Ax25_Send_Sync@i+1
  3618  0F8B                     L2:	
  3619  0F8B  0828               	movf	Ax25_Send_Sync@i+1,w
  3620  0F8C  3A80               	xorlw	128
  3621  0F8D  00A0               	movwf	??_Ax25_Send_Sync
  3622  0F8E  3080               	movlw	128
  3623  0F8F  0220               	subwf	??_Ax25_Send_Sync,w
  3624  0F90  3008               	movlw	8
  3625  0F91  1903               	btfsc	3,2
  3626  0F92  0227               	subwf	Ax25_Send_Sync@i,w
  3627  0F93  1803               	btfsc	3,0
  3628  0F94  0008               	return
  3629                           
  3630                           ;ax25.c: 71: if (modem_packet_size >= 64 * 8)
  3631  0F95  3000               	movlw	0
  3632  0F96  027C               	subwf	_modem_packet_size+3,w
  3633  0F97  1D03               	skipz
  3634  0F98  2FA3               	goto	u1605
  3635  0F99  3000               	movlw	0
  3636  0F9A  027B               	subwf	_modem_packet_size+2,w
  3637  0F9B  1D03               	skipz
  3638  0F9C  2FA3               	goto	u1605
  3639  0F9D  3002               	movlw	2
  3640  0F9E  027A               	subwf	_modem_packet_size+1,w
  3641  0F9F  1D03               	skipz
  3642  0FA0  2FA3               	goto	u1605
  3643  0FA1  3000               	movlw	0
  3644  0FA2  0279               	subwf	_modem_packet_size,w
  3645  0FA3                     u1605:	
  3646  0FA3  1803               	btfsc	3,0
  3647  0FA4  0008               	return
  3648                           
  3649                           ;ax25.c: 73: if ((byte >> i) & 1)
  3650                           
  3651                           ;ax25.c: 72: return;
  3652  0FA5  0020               	movlb	0	; select bank0
  3653  0FA6  0826               	movf	Ax25_Send_Sync@byte,w
  3654  0FA7  00A0               	movwf	??_Ax25_Send_Sync
  3655  0FA8  0A27               	incf	Ax25_Send_Sync@i,w
  3656  0FA9  2FAB               	goto	u1614
  3657  0FAA                     u1615:	
  3658  0FAA  36A0               	lsrf	??_Ax25_Send_Sync,f
  3659  0FAB                     u1614:	
  3660  0FAB  0B89               	decfsz	9,f
  3661  0FAC  2FAA               	goto	u1615
  3662  0FAD  1C20               	btfss	??_Ax25_Send_Sync,0
  3663  0FAE  2FD1               	goto	l1974
  3664                           
  3665                           ;ax25.c: 74: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  3666  0FAF  3001               	movlw	1
  3667  0FB0  00A0               	movwf	??_Ax25_Send_Sync
  3668  0FB1  0879               	movf	_modem_packet_size,w
  3669  0FB2  3907               	andlw	7
  3670  0FB3  0A89               	incf	9,f
  3671  0FB4  2FB6               	goto	u1634
  3672  0FB5                     u1635:	
  3673  0FB5  35A0               	lslf	??_Ax25_Send_Sync,f
  3674  0FB6                     u1634:	
  3675  0FB6  0B89               	decfsz	9,f
  3676  0FB7  2FB5               	goto	u1635
  3677  0FB8  0820               	movf	??_Ax25_Send_Sync,w
  3678  0FB9  00A1               	movwf	??_Ax25_Send_Sync+1
  3679  0FBA  0879               	movf	_modem_packet_size,w
  3680  0FBB  00A2               	movwf	??_Ax25_Send_Sync+2
  3681  0FBC  087A               	movf	_modem_packet_size+1,w
  3682  0FBD  00A3               	movwf	??_Ax25_Send_Sync+3
  3683  0FBE  087B               	movf	_modem_packet_size+2,w
  3684  0FBF  00A4               	movwf	??_Ax25_Send_Sync+4
  3685  0FC0  087C               	movf	_modem_packet_size+3,w
  3686  0FC1  00A5               	movwf	??_Ax25_Send_Sync+5
  3687  0FC2  3003               	movlw	3
  3688  0FC3                     u1645:	
  3689  0FC3  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  3690  0FC4  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  3691  0FC5  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  3692  0FC6  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  3693  0FC7  0B89               	decfsz	9,f
  3694  0FC8  2FC3               	goto	u1645
  3695  0FC9  0822               	movf	??_Ax25_Send_Sync+2,w
  3696  0FCA  3EA0               	addlw	_modem_packet& (0+255)
  3697  0FCB  0086               	movwf	6
  3698  0FCC  3001               	movlw	1	; select bank3/4
  3699  0FCD  0087               	movwf	7
  3700  0FCE  0821               	movf	??_Ax25_Send_Sync+1,w
  3701  0FCF  0481               	iorwf	1,f
  3702  0FD0  2FF3               	goto	l1976
  3703  0FD1                     l1974:	
  3704                           
  3705                           ;ax25.c: 75: else
  3706                           ;ax25.c: 76: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  3707  0FD1  3001               	movlw	1
  3708  0FD2  00A0               	movwf	??_Ax25_Send_Sync
  3709  0FD3  0879               	movf	_modem_packet_size,w
  3710  0FD4  3907               	andlw	7
  3711  0FD5  0A89               	incf	9,f
  3712  0FD6  2FD8               	goto	u1654
  3713  0FD7                     u1655:	
  3714  0FD7  35A0               	lslf	??_Ax25_Send_Sync,f
  3715  0FD8                     u1654:	
  3716  0FD8  0B89               	decfsz	9,f
  3717  0FD9  2FD7               	goto	u1655
  3718  0FDA  0820               	movf	??_Ax25_Send_Sync,w
  3719  0FDB  3AFF               	xorlw	255
  3720  0FDC  00A1               	movwf	??_Ax25_Send_Sync+1
  3721  0FDD  0879               	movf	_modem_packet_size,w
  3722  0FDE  00A2               	movwf	??_Ax25_Send_Sync+2
  3723  0FDF  087A               	movf	_modem_packet_size+1,w
  3724  0FE0  00A3               	movwf	??_Ax25_Send_Sync+3
  3725  0FE1  087B               	movf	_modem_packet_size+2,w
  3726  0FE2  00A4               	movwf	??_Ax25_Send_Sync+4
  3727  0FE3  087C               	movf	_modem_packet_size+3,w
  3728  0FE4  00A5               	movwf	??_Ax25_Send_Sync+5
  3729  0FE5  3003               	movlw	3
  3730  0FE6                     u1665:	
  3731  0FE6  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  3732  0FE7  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  3733  0FE8  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  3734  0FE9  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  3735  0FEA  0B89               	decfsz	9,f
  3736  0FEB  2FE6               	goto	u1665
  3737  0FEC  0822               	movf	??_Ax25_Send_Sync+2,w
  3738  0FED  3EA0               	addlw	_modem_packet& (0+255)
  3739  0FEE  0086               	movwf	6
  3740  0FEF  3001               	movlw	1	; select bank3/4
  3741  0FF0  0087               	movwf	7
  3742  0FF1  0821               	movf	??_Ax25_Send_Sync+1,w
  3743  0FF2  0581               	andwf	1,f
  3744  0FF3                     l1976:	
  3745  0FF3  3001               	movlw	1
  3746  0FF4  07A7               	addwf	Ax25_Send_Sync@i,f
  3747  0FF5  3000               	movlw	0
  3748  0FF6  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  3749  0FF7  3001               	movlw	1
  3750  0FF8  07F9               	addwf	_modem_packet_size,f
  3751  0FF9  3000               	movlw	0
  3752  0FFA  3DFA               	addwfc	_modem_packet_size+1,f
  3753  0FFB  3000               	movlw	0
  3754  0FFC  3DFB               	addwfc	_modem_packet_size+2,f
  3755  0FFD  3000               	movlw	0
  3756  0FFE  3DFC               	addwfc	_modem_packet_size+3,f
  3757  0FFF  2F8B               	goto	L2
  3758  1000                     __end_of_Ax25_Send_Sync:	
  3759                           
  3760                           	psect	text21
  3761  0CDD                     __ptext21:	
  3762 ;; *************** function _Ax25_Send_Footer *****************
  3763 ;; Defined at:
  3764 ;;		line 144 in file "ax25.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  final_crc       2   12[BANK0 ] unsigned int 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;		None               void
  3771 ;; Registers used:
  3772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3779 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;Total ram usage:        2 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    5
  3785 ;; This function calls:
  3786 ;;		_Ax25_Send_Flag
  3787 ;;		_Send_Byte
  3788 ;; This function is called by:
  3789 ;;		_main
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _Ax25_Send_Footer
  3795  0CDD                     _Ax25_Send_Footer:	
  3796                           
  3797                           ;ax25.c: 147: uint16_t final_crc = crc;
  3798                           
  3799                           ;incstack = 0
  3800                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3801  0CDD  0021               	movlb	1	; select bank1
  3802  0CDE  0848               	movf	(_crc+1)^(0+128),w
  3803  0CDF  0020               	movlb	0	; select bank0
  3804  0CE0  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  3805  0CE1  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  3806  0CE2  0021               	movlb	1	; select bank1
  3807  0CE3  0847               	movf	_crc^(0+128),w
  3808  0CE4  0020               	movlb	0	; select bank0
  3809  0CE5  01AC               	clrf	Ax25_Send_Footer@final_crc
  3810  0CE6  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  3811                           
  3812                           ;ax25.c: 150: Send_Byte(~(final_crc & 0xff));
  3813  0CE7  092C               	comf	Ax25_Send_Footer@final_crc,w
  3814  0CE8  3186  2630  318C   	fcall	_Send_Byte
  3815                           
  3816                           ;ax25.c: 151: final_crc >>= 8;
  3817  0CEB  3008               	movlw	8
  3818  0CEC  0020               	movlb	0	; select bank0
  3819  0CED                     u1985:	
  3820  0CED  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  3821  0CEE  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  3822  0CEF  0B89               	decfsz	9,f
  3823  0CF0  2CED               	goto	u1985
  3824                           
  3825                           ;ax25.c: 152: Send_Byte(~(final_crc & 0xff));
  3826  0CF1  092C               	comf	Ax25_Send_Footer@final_crc,w
  3827  0CF2  3186  2630  318C   	fcall	_Send_Byte
  3828                           
  3829                           ;ax25.c: 155: Ax25_Send_Flag();
  3830  0CF5  3187  276D         	fcall	_Ax25_Send_Flag
  3831  0CF7  0008               	return
  3832  0CF8                     __end_of_Ax25_Send_Footer:	
  3833                           
  3834                           	psect	text22
  3835  0630                     __ptext22:	
  3836 ;; *************** function _Send_Byte *****************
  3837 ;; Defined at:
  3838 ;;		line 33 in file "ax25.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;  byte            1    wreg     unsigned char 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  byte            1    9[BANK0 ] unsigned char 
  3843 ;;  i               2   10[BANK0 ] int 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;		None               void
  3846 ;; Registers used:
  3847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;Total ram usage:        9 bytes
  3858 ;; Hardware stack levels used:    1
  3859 ;; Hardware stack levels required when called:    4
  3860 ;; This function calls:
  3861 ;;		_Update_Crc
  3862 ;; This function is called by:
  3863 ;;		_Ax25_Send_Byte
  3864 ;;		_Ax25_Send_Header
  3865 ;;		_Ax25_Send_Footer
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           
  3870                           ;psect for function _Send_Byte
  3871  0630                     _Send_Byte:	
  3872                           
  3873                           ;incstack = 0
  3874                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3875                           ;Send_Byte@byte stored from wreg
  3876  0630  0020               	movlb	0	; select bank0
  3877  0631  00A9               	movwf	Send_Byte@byte
  3878                           
  3879                           ;ax25.c: 35: int i;
  3880                           ;ax25.c: 36: for (i = 0; i < 8; i++) {
  3881  0632  01AA               	clrf	Send_Byte@i
  3882  0633  01AB               	clrf	Send_Byte@i+1
  3883  0634                     L3:	
  3884  0634  082B               	movf	Send_Byte@i+1,w
  3885  0635  3A80               	xorlw	128
  3886  0636  00A3               	movwf	??_Send_Byte
  3887  0637  3080               	movlw	128
  3888  0638  0223               	subwf	??_Send_Byte,w
  3889  0639  3008               	movlw	8
  3890  063A  1903               	btfsc	3,2
  3891  063B  022A               	subwf	Send_Byte@i,w
  3892  063C  1803               	btfsc	3,0
  3893  063D  0008               	return
  3894                           
  3895                           ;ax25.c: 37: Update_Crc((byte >> i) & 1);
  3896  063E  0020               	movlb	0	; select bank0
  3897  063F  0829               	movf	Send_Byte@byte,w
  3898  0640  00A3               	movwf	??_Send_Byte
  3899  0641  0A2A               	incf	Send_Byte@i,w
  3900  0642  2E44               	goto	u1474
  3901  0643                     u1475:	
  3902  0643  36A3               	lsrf	??_Send_Byte,f
  3903  0644                     u1474:	
  3904  0644  0B89               	decfsz	9,f
  3905  0645  2E43               	goto	u1475
  3906  0646  0823               	movf	??_Send_Byte,w
  3907  0647  3901               	andlw	1
  3908  0648  318D  25CA  3186   	fcall	_Update_Crc
  3909                           
  3910                           ;ax25.c: 38: if ((byte >> i) & 1) {
  3911  064B  0020               	movlb	0	; select bank0
  3912  064C  0829               	movf	Send_Byte@byte,w
  3913  064D  00A3               	movwf	??_Send_Byte
  3914  064E  0A2A               	incf	Send_Byte@i,w
  3915  064F  2E51               	goto	u1484
  3916  0650                     u1485:	
  3917  0650  36A3               	lsrf	??_Send_Byte,f
  3918  0651                     u1484:	
  3919  0651  0B89               	decfsz	9,f
  3920  0652  2E50               	goto	u1485
  3921  0653  1C23               	btfss	??_Send_Byte,0
  3922  0654  2EA0               	goto	l1894
  3923                           
  3924                           ;ax25.c: 40: if (modem_packet_size >= (64 * 8))
  3925  0655  3000               	movlw	0
  3926  0656  027C               	subwf	_modem_packet_size+3,w
  3927  0657  1D03               	skipz
  3928  0658  2E63               	goto	u1505
  3929  0659  3000               	movlw	0
  3930  065A  027B               	subwf	_modem_packet_size+2,w
  3931  065B  1D03               	skipz
  3932  065C  2E63               	goto	u1505
  3933  065D  3002               	movlw	2
  3934  065E  027A               	subwf	_modem_packet_size+1,w
  3935  065F  1D03               	skipz
  3936  0660  2E63               	goto	u1505
  3937  0661  3000               	movlw	0
  3938  0662  0279               	subwf	_modem_packet_size,w
  3939  0663                     u1505:	
  3940  0663  1803               	btfsc	3,0
  3941  0664  0008               	return
  3942                           
  3943                           ;ax25.c: 43: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  3944                           
  3945                           ;ax25.c: 41: return;
  3946  0665  3001               	movlw	1
  3947  0666  00A3               	movwf	??_Send_Byte
  3948  0667  0879               	movf	_modem_packet_size,w
  3949  0668  3907               	andlw	7
  3950  0669  0A89               	incf	9,f
  3951  066A  2E6C               	goto	u1514
  3952  066B                     u1515:	
  3953  066B  35A3               	lslf	??_Send_Byte,f
  3954  066C                     u1514:	
  3955  066C  0B89               	decfsz	9,f
  3956  066D  2E6B               	goto	u1515
  3957  066E  0823               	movf	??_Send_Byte,w
  3958  066F  00A4               	movwf	??_Send_Byte+1
  3959  0670  0879               	movf	_modem_packet_size,w
  3960  0671  00A5               	movwf	??_Send_Byte+2
  3961  0672  087A               	movf	_modem_packet_size+1,w
  3962  0673  00A6               	movwf	??_Send_Byte+3
  3963  0674  087B               	movf	_modem_packet_size+2,w
  3964  0675  00A7               	movwf	??_Send_Byte+4
  3965  0676  087C               	movf	_modem_packet_size+3,w
  3966  0677  00A8               	movwf	??_Send_Byte+5
  3967  0678  3003               	movlw	3
  3968  0679                     u1525:	
  3969  0679  36A8               	lsrf	??_Send_Byte+5,f
  3970  067A  0CA7               	rrf	??_Send_Byte+4,f
  3971  067B  0CA6               	rrf	??_Send_Byte+3,f
  3972  067C  0CA5               	rrf	??_Send_Byte+2,f
  3973  067D  0B89               	decfsz	9,f
  3974  067E  2E79               	goto	u1525
  3975  067F  0825               	movf	??_Send_Byte+2,w
  3976  0680  3EA0               	addlw	_modem_packet& (0+255)
  3977  0681  0086               	movwf	6
  3978  0682  3001               	movlw	1	; select bank3/4
  3979  0683  0087               	movwf	7
  3980  0684  0824               	movf	??_Send_Byte+1,w
  3981  0685  0481               	iorwf	1,f
  3982                           
  3983                           ;ax25.c: 45: modem_packet_size++;
  3984  0686  3001               	movlw	1
  3985  0687  07F9               	addwf	_modem_packet_size,f
  3986  0688  3000               	movlw	0
  3987  0689  3DFA               	addwfc	_modem_packet_size+1,f
  3988  068A  3000               	movlw	0
  3989  068B  3DFB               	addwfc	_modem_packet_size+2,f
  3990  068C  3000               	movlw	0
  3991  068D  3DFC               	addwfc	_modem_packet_size+3,f
  3992                           
  3993                           ;ax25.c: 46: if (++ones_in_a_row < 5) continue;
  3994  068E  3001               	movlw	1
  3995  068F  0021               	movlb	1	; select bank1
  3996  0690  07C9               	addwf	_ones_in_a_row^(0+128),f
  3997  0691  3000               	movlw	0
  3998  0692  3DCA               	addwfc	(_ones_in_a_row+1)^(0+128),f
  3999  0693  084A               	movf	(_ones_in_a_row+1)^(0+128),w
  4000  0694  3A80               	xorlw	128
  4001  0695  0020               	movlb	0	; select bank0
  4002  0696  00A3               	movwf	??_Send_Byte
  4003  0697  3080               	movlw	128
  4004  0698  0223               	subwf	??_Send_Byte,w
  4005  0699  1D03               	skipz
  4006  069A  2E9E               	goto	u1535
  4007  069B  3005               	movlw	5
  4008  069C  0021               	movlb	1	; select bank1
  4009  069D  0249               	subwf	_ones_in_a_row^(0+128),w
  4010  069E                     u1535:	
  4011  069E  1C03               	btfss	3,0
  4012  069F  2EDE               	goto	l1904
  4013  06A0                     l1894:	
  4014                           
  4015                           ;ax25.c: 47: }
  4016                           ;ax25.c: 49: if (modem_packet_size >= (64 * 8))
  4017  06A0  3000               	movlw	0
  4018  06A1  027C               	subwf	_modem_packet_size+3,w
  4019  06A2  1D03               	skipz
  4020  06A3  2EAE               	goto	u1545
  4021  06A4  3000               	movlw	0
  4022  06A5  027B               	subwf	_modem_packet_size+2,w
  4023  06A6  1D03               	skipz
  4024  06A7  2EAE               	goto	u1545
  4025  06A8  3002               	movlw	2
  4026  06A9  027A               	subwf	_modem_packet_size+1,w
  4027  06AA  1D03               	skipz
  4028  06AB  2EAE               	goto	u1545
  4029  06AC  3000               	movlw	0
  4030  06AD  0279               	subwf	_modem_packet_size,w
  4031  06AE                     u1545:	
  4032  06AE  1803               	btfsc	3,0
  4033  06AF  0008               	return
  4034                           
  4035                           ;ax25.c: 51: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4036                           
  4037                           ;ax25.c: 50: return;
  4038  06B0  3001               	movlw	1
  4039  06B1  0020               	movlb	0	; select bank0
  4040  06B2  00A3               	movwf	??_Send_Byte
  4041  06B3  0879               	movf	_modem_packet_size,w
  4042  06B4  3907               	andlw	7
  4043  06B5  0A89               	incf	9,f
  4044  06B6  2EB8               	goto	u1554
  4045  06B7                     u1555:	
  4046  06B7  35A3               	lslf	??_Send_Byte,f
  4047  06B8                     u1554:	
  4048  06B8  0B89               	decfsz	9,f
  4049  06B9  2EB7               	goto	u1555
  4050  06BA  0823               	movf	??_Send_Byte,w
  4051  06BB  3AFF               	xorlw	255
  4052  06BC  00A4               	movwf	??_Send_Byte+1
  4053  06BD  0879               	movf	_modem_packet_size,w
  4054  06BE  00A5               	movwf	??_Send_Byte+2
  4055  06BF  087A               	movf	_modem_packet_size+1,w
  4056  06C0  00A6               	movwf	??_Send_Byte+3
  4057  06C1  087B               	movf	_modem_packet_size+2,w
  4058  06C2  00A7               	movwf	??_Send_Byte+4
  4059  06C3  087C               	movf	_modem_packet_size+3,w
  4060  06C4  00A8               	movwf	??_Send_Byte+5
  4061  06C5  3003               	movlw	3
  4062  06C6                     u1565:	
  4063  06C6  36A8               	lsrf	??_Send_Byte+5,f
  4064  06C7  0CA7               	rrf	??_Send_Byte+4,f
  4065  06C8  0CA6               	rrf	??_Send_Byte+3,f
  4066  06C9  0CA5               	rrf	??_Send_Byte+2,f
  4067  06CA  0B89               	decfsz	9,f
  4068  06CB  2EC6               	goto	u1565
  4069  06CC  0825               	movf	??_Send_Byte+2,w
  4070  06CD  3EA0               	addlw	_modem_packet& (0+255)
  4071  06CE  0086               	movwf	6
  4072  06CF  3001               	movlw	1	; select bank3/4
  4073  06D0  0087               	movwf	7
  4074  06D1  0824               	movf	??_Send_Byte+1,w
  4075  06D2  0581               	andwf	1,f
  4076                           
  4077                           ;ax25.c: 53: modem_packet_size++;
  4078  06D3  3001               	movlw	1
  4079  06D4  07F9               	addwf	_modem_packet_size,f
  4080  06D5  3000               	movlw	0
  4081  06D6  3DFA               	addwfc	_modem_packet_size+1,f
  4082  06D7  3000               	movlw	0
  4083  06D8  3DFB               	addwfc	_modem_packet_size+2,f
  4084  06D9  3000               	movlw	0
  4085  06DA  3DFC               	addwfc	_modem_packet_size+3,f
  4086                           
  4087                           ;ax25.c: 54: ones_in_a_row = 0;
  4088  06DB  0021               	movlb	1	; select bank1
  4089  06DC  01C9               	clrf	_ones_in_a_row^(0+128)
  4090  06DD  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  4091  06DE                     l1904:	
  4092  06DE  3001               	movlw	1
  4093  06DF  0020               	movlb	0	; select bank0
  4094  06E0  07AA               	addwf	Send_Byte@i,f
  4095  06E1  3000               	movlw	0
  4096  06E2  3DAB               	addwfc	Send_Byte@i+1,f
  4097  06E3  2E34               	goto	L3
  4098  06E4                     __end_of_Send_Byte:	
  4099                           
  4100                           	psect	text23
  4101  0DCA                     __ptext23:	
  4102 ;; *************** function _Update_Crc *****************
  4103 ;; Defined at:
  4104 ;;		line 24 in file "ax25.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  input_bit       1    wreg     unsigned char 
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  input_bit       1    2[BANK0 ] unsigned char 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;		None               void
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4120 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;Total ram usage:        3 bytes
  4123 ;; Hardware stack levels used:    1
  4124 ;; Hardware stack levels required when called:    3
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_Send_Byte
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           
  4133                           ;psect for function _Update_Crc
  4134  0DCA                     _Update_Crc:	
  4135                           
  4136                           ;incstack = 0
  4137                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  4138                           ;Update_Crc@input_bit stored from wreg
  4139  0DCA  0020               	movlb	0	; select bank0
  4140  0DCB  00A2               	movwf	Update_Crc@input_bit
  4141                           
  4142                           ;ax25.c: 26: crc ^= input_bit;
  4143  0DCC  0822               	movf	Update_Crc@input_bit,w
  4144  0DCD  00A0               	movwf	??_Update_Crc
  4145  0DCE  01A1               	clrf	??_Update_Crc+1
  4146  0DCF  0820               	movf	??_Update_Crc,w
  4147  0DD0  0021               	movlb	1	; select bank1
  4148  0DD1  06C7               	xorwf	_crc^(0+128),f
  4149  0DD2  0020               	movlb	0	; select bank0
  4150  0DD3  0821               	movf	??_Update_Crc+1,w
  4151  0DD4  0021               	movlb	1	; select bank1
  4152  0DD5  06C8               	xorwf	(_crc+1)^(0+128),f
  4153                           
  4154                           ;ax25.c: 27: if (crc & 1)
  4155  0DD6  1C47               	btfss	_crc^(0+128),0
  4156  0DD7  2DEB               	goto	l1852
  4157                           
  4158                           ;ax25.c: 28: crc = (crc >> 1) ^ 0x8408;
  4159  0DD8  0848               	movf	(_crc+1)^(0+128),w
  4160  0DD9  0020               	movlb	0	; select bank0
  4161  0DDA  00A1               	movwf	??_Update_Crc+1
  4162  0DDB  0021               	movlb	1	; select bank1
  4163  0DDC  0847               	movf	_crc^(0+128),w
  4164  0DDD  0020               	movlb	0	; select bank0
  4165  0DDE  00A0               	movwf	??_Update_Crc
  4166  0DDF  36A1               	lsrf	??_Update_Crc+1,f
  4167  0DE0  0CA0               	rrf	??_Update_Crc,f
  4168  0DE1  3008               	movlw	8
  4169  0DE2  0620               	xorwf	??_Update_Crc,w
  4170  0DE3  0021               	movlb	1	; select bank1
  4171  0DE4  00C7               	movwf	_crc^(0+128)
  4172  0DE5  3084               	movlw	132
  4173  0DE6  0020               	movlb	0	; select bank0
  4174  0DE7  0621               	xorwf	??_Update_Crc+1,w
  4175  0DE8  0021               	movlb	1	; select bank1
  4176  0DE9  00C8               	movwf	(_crc+1)^(0+128)
  4177  0DEA  0008               	return
  4178  0DEB                     l1852:	
  4179                           
  4180                           ;ax25.c: 29: else
  4181                           ;ax25.c: 30: crc = crc >> 1;
  4182  0DEB  0848               	movf	(_crc+1)^(0+128),w
  4183  0DEC  0020               	movlb	0	; select bank0
  4184  0DED  00A1               	movwf	??_Update_Crc+1
  4185  0DEE  0021               	movlb	1	; select bank1
  4186  0DEF  0847               	movf	_crc^(0+128),w
  4187  0DF0  0020               	movlb	0	; select bank0
  4188  0DF1  00A0               	movwf	??_Update_Crc
  4189  0DF2  36A1               	lsrf	??_Update_Crc+1,f
  4190  0DF3  0CA0               	rrf	??_Update_Crc,f
  4191  0DF4  0820               	movf	??_Update_Crc,w
  4192  0DF5  0021               	movlb	1	; select bank1
  4193  0DF6  00C7               	movwf	_crc^(0+128)
  4194  0DF7  0020               	movlb	0	; select bank0
  4195  0DF8  0821               	movf	??_Update_Crc+1,w
  4196  0DF9  0021               	movlb	1	; select bank1
  4197  0DFA  00C8               	movwf	(_crc+1)^(0+128)
  4198  0DFB  0008               	return
  4199  0DFC                     __end_of_Update_Crc:	
  4200                           
  4201                           	psect	text24
  4202  076D                     __ptext24:	
  4203 ;; *************** function _Ax25_Send_Flag *****************
  4204 ;; Defined at:
  4205 ;;		line 80 in file "ax25.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  i               2    7[BANK0 ] int 
  4210 ;;  byte            1    6[BANK0 ] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;		None               void
  4213 ;; Registers used:
  4214 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4221 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4222 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;Total ram usage:        9 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    3
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_Ax25_Send_Header
  4231 ;;		_Ax25_Send_Footer
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           
  4236                           ;psect for function _Ax25_Send_Flag
  4237  076D                     _Ax25_Send_Flag:	
  4238                           
  4239                           ;ax25.c: 82: uint8_t byte = 0x7e;
  4240                           
  4241                           ;incstack = 0
  4242                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  4243  076D  307E               	movlw	126
  4244  076E  0020               	movlb	0	; select bank0
  4245  076F  00A0               	movwf	??_Ax25_Send_Flag
  4246  0770  0820               	movf	??_Ax25_Send_Flag,w
  4247  0771  00A6               	movwf	Ax25_Send_Flag@byte
  4248                           
  4249                           ;ax25.c: 83: int i;
  4250                           ;ax25.c: 84: for (i = 0; i < 8; i++, modem_packet_size++) {
  4251  0772  01A7               	clrf	Ax25_Send_Flag@i
  4252  0773  01A8               	clrf	Ax25_Send_Flag@i+1
  4253  0774                     L4:	
  4254  0774  0828               	movf	Ax25_Send_Flag@i+1,w
  4255  0775  3A80               	xorlw	128
  4256  0776  00A0               	movwf	??_Ax25_Send_Flag
  4257  0777  3080               	movlw	128
  4258  0778  0220               	subwf	??_Ax25_Send_Flag,w
  4259  0779  3008               	movlw	8
  4260  077A  1903               	btfsc	3,2
  4261  077B  0227               	subwf	Ax25_Send_Flag@i,w
  4262  077C  1803               	btfsc	3,0
  4263  077D  0008               	return
  4264                           
  4265                           ;ax25.c: 85: if (modem_packet_size >= 64 * 8)
  4266  077E  3000               	movlw	0
  4267  077F  027C               	subwf	_modem_packet_size+3,w
  4268  0780  1D03               	skipz
  4269  0781  2F8C               	goto	u1695
  4270  0782  3000               	movlw	0
  4271  0783  027B               	subwf	_modem_packet_size+2,w
  4272  0784  1D03               	skipz
  4273  0785  2F8C               	goto	u1695
  4274  0786  3002               	movlw	2
  4275  0787  027A               	subwf	_modem_packet_size+1,w
  4276  0788  1D03               	skipz
  4277  0789  2F8C               	goto	u1695
  4278  078A  3000               	movlw	0
  4279  078B  0279               	subwf	_modem_packet_size,w
  4280  078C                     u1695:	
  4281  078C  1803               	btfsc	3,0
  4282  078D  0008               	return
  4283                           
  4284                           ;ax25.c: 87: if ((byte >> i) & 1)
  4285                           
  4286                           ;ax25.c: 86: return;
  4287  078E  0020               	movlb	0	; select bank0
  4288  078F  0826               	movf	Ax25_Send_Flag@byte,w
  4289  0790  00A0               	movwf	??_Ax25_Send_Flag
  4290  0791  0A27               	incf	Ax25_Send_Flag@i,w
  4291  0792  2F94               	goto	u1704
  4292  0793                     u1705:	
  4293  0793  36A0               	lsrf	??_Ax25_Send_Flag,f
  4294  0794                     u1704:	
  4295  0794  0B89               	decfsz	9,f
  4296  0795  2F93               	goto	u1705
  4297  0796  1C20               	btfss	??_Ax25_Send_Flag,0
  4298  0797  2FBA               	goto	l1998
  4299                           
  4300                           ;ax25.c: 88: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4301  0798  3001               	movlw	1
  4302  0799  00A0               	movwf	??_Ax25_Send_Flag
  4303  079A  0879               	movf	_modem_packet_size,w
  4304  079B  3907               	andlw	7
  4305  079C  0A89               	incf	9,f
  4306  079D  2F9F               	goto	u1724
  4307  079E                     u1725:	
  4308  079E  35A0               	lslf	??_Ax25_Send_Flag,f
  4309  079F                     u1724:	
  4310  079F  0B89               	decfsz	9,f
  4311  07A0  2F9E               	goto	u1725
  4312  07A1  0820               	movf	??_Ax25_Send_Flag,w
  4313  07A2  00A1               	movwf	??_Ax25_Send_Flag+1
  4314  07A3  0879               	movf	_modem_packet_size,w
  4315  07A4  00A2               	movwf	??_Ax25_Send_Flag+2
  4316  07A5  087A               	movf	_modem_packet_size+1,w
  4317  07A6  00A3               	movwf	??_Ax25_Send_Flag+3
  4318  07A7  087B               	movf	_modem_packet_size+2,w
  4319  07A8  00A4               	movwf	??_Ax25_Send_Flag+4
  4320  07A9  087C               	movf	_modem_packet_size+3,w
  4321  07AA  00A5               	movwf	??_Ax25_Send_Flag+5
  4322  07AB  3003               	movlw	3
  4323  07AC                     u1735:	
  4324  07AC  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4325  07AD  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4326  07AE  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4327  07AF  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4328  07B0  0B89               	decfsz	9,f
  4329  07B1  2FAC               	goto	u1735
  4330  07B2  0822               	movf	??_Ax25_Send_Flag+2,w
  4331  07B3  3EA0               	addlw	_modem_packet& (0+255)
  4332  07B4  0086               	movwf	6
  4333  07B5  3001               	movlw	1	; select bank3/4
  4334  07B6  0087               	movwf	7
  4335  07B7  0821               	movf	??_Ax25_Send_Flag+1,w
  4336  07B8  0481               	iorwf	1,f
  4337  07B9  2FDC               	goto	l2000
  4338  07BA                     l1998:	
  4339                           
  4340                           ;ax25.c: 89: else
  4341                           ;ax25.c: 90: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4342  07BA  3001               	movlw	1
  4343  07BB  00A0               	movwf	??_Ax25_Send_Flag
  4344  07BC  0879               	movf	_modem_packet_size,w
  4345  07BD  3907               	andlw	7
  4346  07BE  0A89               	incf	9,f
  4347  07BF  2FC1               	goto	u1744
  4348  07C0                     u1745:	
  4349  07C0  35A0               	lslf	??_Ax25_Send_Flag,f
  4350  07C1                     u1744:	
  4351  07C1  0B89               	decfsz	9,f
  4352  07C2  2FC0               	goto	u1745
  4353  07C3  0820               	movf	??_Ax25_Send_Flag,w
  4354  07C4  3AFF               	xorlw	255
  4355  07C5  00A1               	movwf	??_Ax25_Send_Flag+1
  4356  07C6  0879               	movf	_modem_packet_size,w
  4357  07C7  00A2               	movwf	??_Ax25_Send_Flag+2
  4358  07C8  087A               	movf	_modem_packet_size+1,w
  4359  07C9  00A3               	movwf	??_Ax25_Send_Flag+3
  4360  07CA  087B               	movf	_modem_packet_size+2,w
  4361  07CB  00A4               	movwf	??_Ax25_Send_Flag+4
  4362  07CC  087C               	movf	_modem_packet_size+3,w
  4363  07CD  00A5               	movwf	??_Ax25_Send_Flag+5
  4364  07CE  3003               	movlw	3
  4365  07CF                     u1755:	
  4366  07CF  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4367  07D0  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4368  07D1  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4369  07D2  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4370  07D3  0B89               	decfsz	9,f
  4371  07D4  2FCF               	goto	u1755
  4372  07D5  0822               	movf	??_Ax25_Send_Flag+2,w
  4373  07D6  3EA0               	addlw	_modem_packet& (0+255)
  4374  07D7  0086               	movwf	6
  4375  07D8  3001               	movlw	1	; select bank3/4
  4376  07D9  0087               	movwf	7
  4377  07DA  0821               	movf	??_Ax25_Send_Flag+1,w
  4378  07DB  0581               	andwf	1,f
  4379  07DC                     l2000:	
  4380  07DC  3001               	movlw	1
  4381  07DD  07A7               	addwf	Ax25_Send_Flag@i,f
  4382  07DE  3000               	movlw	0
  4383  07DF  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  4384  07E0  3001               	movlw	1
  4385  07E1  07F9               	addwf	_modem_packet_size,f
  4386  07E2  3000               	movlw	0
  4387  07E3  3DFA               	addwfc	_modem_packet_size+1,f
  4388  07E4  3000               	movlw	0
  4389  07E5  3DFB               	addwfc	_modem_packet_size+2,f
  4390  07E6  3000               	movlw	0
  4391  07E7  3DFC               	addwfc	_modem_packet_size+3,f
  4392  07E8  2F74               	goto	L4
  4393  07E9                     __end_of_Ax25_Send_Flag:	
  4394                           
  4395                           	psect	text25
  4396  0F12                     __ptext25:	
  4397 ;; *************** function _Adf_Lock *****************
  4398 ;; Defined at:
  4399 ;;		line 233 in file "adf7012.c"
  4400 ;; Parameters:    Size  Location     Type
  4401 ;;		None
  4402 ;; Auto vars:     Size  Location     Type
  4403 ;;  bias            2   10[BANK1 ] int 
  4404 ;;  adj             2    8[BANK1 ] int 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      unsigned char 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4415 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;Total ram usage:        6 bytes
  4419 ;; Hardware stack levels used:    1
  4420 ;; Hardware stack levels required when called:    9
  4421 ;; This function calls:
  4422 ;;		_Adf_Locked
  4423 ;;		_Adf_Write_Config
  4424 ;;		_Delay_ms
  4425 ;; This function is called by:
  4426 ;;		_main
  4427 ;; This function uses a non-reentrant model
  4428 ;;
  4429                           
  4430                           
  4431                           ;psect for function _Adf_Lock
  4432  0F12                     _Adf_Lock:	
  4433                           
  4434                           ;adf7012.c: 236: Delay_ms(200);
  4435                           
  4436                           ;incstack = 0
  4437                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4438  0F12  30C8               	movlw	200
  4439  0F13  0020               	movlb	0	; select bank0
  4440  0F14  00A0               	movwf	Delay_ms@time_to_delay
  4441  0F15  3000               	movlw	0
  4442  0F16  00A1               	movwf	Delay_ms@time_to_delay+1
  4443  0F17  318D  2534  318F   	fcall	_Delay_ms
  4444                           
  4445                           ;adf7012.c: 237: int adj = adf_config.r0.vco_adjust;
  4446  0F1A  0021               	movlb	1	; select bank1
  4447  0F1B  0828               	movf	(_adf_config^(0+128)+8),w
  4448  0F1C  0020               	movlb	0	; select bank0
  4449  0F1D  00EB               	movwf	??_Adf_Lock
  4450  0F1E  01EC               	clrf	??_Adf_Lock+1
  4451  0F1F  086B               	movf	??_Adf_Lock,w
  4452  0F20  0021               	movlb	1	; select bank1
  4453  0F21  00DB               	movwf	Adf_Lock@adj^(0+128)
  4454  0F22  0020               	movlb	0	; select bank0
  4455  0F23  086C               	movf	??_Adf_Lock+1,w
  4456  0F24  0021               	movlb	1	; select bank1
  4457  0F25  00DC               	movwf	(Adf_Lock@adj+1)^(0+128)
  4458                           
  4459                           ;adf7012.c: 238: int bias = adf_config.r3.vco_bias;
  4460  0F26  0843               	movf	(_adf_config^(0+128)+35),w
  4461  0F27  0020               	movlb	0	; select bank0
  4462  0F28  00EB               	movwf	??_Adf_Lock
  4463  0F29  01EC               	clrf	??_Adf_Lock+1
  4464  0F2A  086B               	movf	??_Adf_Lock,w
  4465  0F2B  0021               	movlb	1	; select bank1
  4466  0F2C  00DD               	movwf	Adf_Lock@bias^(0+128)
  4467  0F2D  0020               	movlb	0	; select bank0
  4468  0F2E  086C               	movf	??_Adf_Lock+1,w
  4469  0F2F  0021               	movlb	1	; select bank1
  4470  0F30  00DE               	movwf	(Adf_Lock@bias+1)^(0+128)
  4471                           
  4472                           ;adf7012.c: 240: adf_config.r3.pll_enable = 1;
  4473  0F31  01B9               	clrf	(_adf_config^(0+128)+25)
  4474  0F32  0AB9               	incf	(_adf_config^(0+128)+25),f
  4475                           
  4476                           ;adf7012.c: 242: adf_config.r3.muxout = 5;
  4477  0F33  3005               	movlw	5
  4478  0F34  0020               	movlb	0	; select bank0
  4479  0F35  00EB               	movwf	??_Adf_Lock
  4480  0F36  086B               	movf	??_Adf_Lock,w
  4481  0F37  0021               	movlb	1	; select bank1
  4482  0F38  00C1               	movwf	(_adf_config^(0+128)+33)
  4483                           
  4484                           ;adf7012.c: 244: Adf_Write_Config();
  4485  0F39  318C  2427  318F   	fcall	_Adf_Write_Config
  4486                           
  4487                           ;adf7012.c: 245: Delay_ms(5);
  4488  0F3C  3005               	movlw	5
  4489  0F3D  0020               	movlb	0	; select bank0
  4490  0F3E  00A0               	movwf	Delay_ms@time_to_delay
  4491  0F3F  3000               	movlw	0
  4492  0F40  00A1               	movwf	Delay_ms@time_to_delay+1
  4493  0F41  318D  2534  318F   	fcall	_Delay_ms
  4494  0F44                     l2248:	
  4495                           ;adf7012.c: 247: while(!Adf_Locked()) {
  4496                           
  4497  0F44  318B  23F8  318F   	fcall	_Adf_Locked
  4498  0F47  3A00               	xorlw	0
  4499  0F48  1D03               	btfss	3,2
  4500  0F49  0008               	return
  4501                           
  4502                           ;adf7012.c: 249: adf_config.r0.vco_adjust = adj;
  4503  0F4A  0021               	movlb	1	; select bank1
  4504  0F4B  085B               	movf	Adf_Lock@adj^(0+128),w
  4505  0F4C  0020               	movlb	0	; select bank0
  4506  0F4D  00EB               	movwf	??_Adf_Lock
  4507  0F4E  086B               	movf	??_Adf_Lock,w
  4508  0F4F  0021               	movlb	1	; select bank1
  4509  0F50  00A8               	movwf	(_adf_config^(0+128)+8)
  4510                           
  4511                           ;adf7012.c: 250: adf_config.r3.vco_bias = bias;
  4512  0F51  085D               	movf	Adf_Lock@bias^(0+128),w
  4513  0F52  0020               	movlb	0	; select bank0
  4514  0F53  00EB               	movwf	??_Adf_Lock
  4515  0F54  086B               	movf	??_Adf_Lock,w
  4516  0F55  0021               	movlb	1	; select bank1
  4517  0F56  00C3               	movwf	(_adf_config^(0+128)+35)
  4518                           
  4519                           ;adf7012.c: 252: adf_config.r3.muxout = 5;
  4520  0F57  3005               	movlw	5
  4521  0F58  0020               	movlb	0	; select bank0
  4522  0F59  00EB               	movwf	??_Adf_Lock
  4523  0F5A  086B               	movf	??_Adf_Lock,w
  4524  0F5B  0021               	movlb	1	; select bank1
  4525  0F5C  00C1               	movwf	(_adf_config^(0+128)+33)
  4526                           
  4527                           ;adf7012.c: 253: Adf_Write_Config();
  4528  0F5D  318C  2427  318F   	fcall	_Adf_Write_Config
  4529                           
  4530                           ;adf7012.c: 254: Delay_ms(5);
  4531  0F60  3005               	movlw	5
  4532  0F61  0020               	movlb	0	; select bank0
  4533  0F62  00A0               	movwf	Delay_ms@time_to_delay
  4534  0F63  3000               	movlw	0
  4535  0F64  00A1               	movwf	Delay_ms@time_to_delay+1
  4536  0F65  318D  2534  318F   	fcall	_Delay_ms
  4537                           
  4538                           ;adf7012.c: 255: if(++bias == 14) {
  4539  0F68  3001               	movlw	1
  4540  0F69  0021               	movlb	1	; select bank1
  4541  0F6A  07DD               	addwf	Adf_Lock@bias^(0+128),f
  4542  0F6B  3000               	movlw	0
  4543  0F6C  3DDE               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  4544  0F6D  300E               	movlw	14
  4545  0F6E  065D               	xorwf	Adf_Lock@bias^(0+128),w
  4546  0F6F  045E               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  4547  0F70  1D03               	skipz
  4548  0F71  2F44               	goto	l2248
  4549                           
  4550                           ;adf7012.c: 256: bias = 1;
  4551  0F72  3001               	movlw	1
  4552  0F73  00DD               	movwf	Adf_Lock@bias^(0+128)
  4553  0F74  3000               	movlw	0
  4554  0F75  00DE               	movwf	(Adf_Lock@bias^(0+128)+1)
  4555                           
  4556                           ;adf7012.c: 257: if(++adj == 4) {
  4557  0F76  3001               	movlw	1
  4558  0F77  07DB               	addwf	Adf_Lock@adj^(0+128),f
  4559  0F78  3000               	movlw	0
  4560  0F79  3DDC               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  4561  0F7A  3004               	movlw	4
  4562  0F7B  065B               	xorwf	Adf_Lock@adj^(0+128),w
  4563  0F7C  045C               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  4564  0F7D  1D03               	skipz
  4565  0F7E  2F44               	goto	l2248
  4566                           
  4567                           ;adf7012.c: 260: adf_config.r0.vco_adjust = 0;
  4568  0F7F  01A8               	clrf	(_adf_config^(0+128)+8)
  4569                           
  4570                           ;adf7012.c: 261: adf_config.r3.vco_bias = 5;
  4571  0F80  3005               	movlw	5
  4572  0F81  0020               	movlb	0	; select bank0
  4573  0F82  00EB               	movwf	??_Adf_Lock
  4574  0F83  086B               	movf	??_Adf_Lock,w
  4575  0F84  0021               	movlb	1	; select bank1
  4576  0F85  00C3               	movwf	(_adf_config^(0+128)+35)
  4577                           
  4578                           ;adf7012.c: 263: return 0;
  4579                           ;	Return value of _Adf_Lock is never used
  4580  0F86  0008               	return
  4581  0F87                     __end_of_Adf_Lock:	
  4582                           ;adf7012.c: 264: }
  4583                           ;adf7012.c: 265: }
  4584                           ;adf7012.c: 266: }
  4585                           ;adf7012.c: 270: return 1;
  4586                           ;	Return value of _Adf_Lock is never used
  4587                           
  4588                           
  4589                           	psect	text26
  4590  0C27                     __ptext26:	
  4591 ;; *************** function _Adf_Write_Config *****************
  4592 ;; Defined at:
  4593 ;;		line 152 in file "adf7012.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;		None
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;		None
  4598 ;; Return value:  Size  Location     Type
  4599 ;;		None               void
  4600 ;; Registers used:
  4601 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;Total ram usage:        0 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; Hardware stack levels required when called:    8
  4614 ;; This function calls:
  4615 ;;		_Adf_Write_Register_One
  4616 ;;		_Adf_Write_Register_Three
  4617 ;;		_Adf_Write_Register_Two
  4618 ;;		_Adf_Write_Register_Zero
  4619 ;; This function is called by:
  4620 ;;		_Adf_Lock
  4621 ;;		_Radio_Setup
  4622 ;;		_Ptt_On
  4623 ;;		_Ptt_Off
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           
  4628                           ;psect for function _Adf_Write_Config
  4629  0C27                     _Adf_Write_Config:	
  4630                           
  4631                           ;adf7012.c: 153: Adf_Write_Register_Zero();
  4632                           
  4633                           ;incstack = 0
  4634                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4635  0C27  3182  22CD  318C   	fcall	_Adf_Write_Register_Zero
  4636                           
  4637                           ;adf7012.c: 154: Adf_Write_Register_One();
  4638  0C2A  318E  26A1  318C   	fcall	_Adf_Write_Register_One
  4639                           
  4640                           ;adf7012.c: 155: Adf_Write_Register_Two();
  4641  0C2D  3184  24C4  318C   	fcall	_Adf_Write_Register_Two
  4642                           
  4643                           ;adf7012.c: 156: Adf_Write_Register_Three();
  4644  0C30  3180  2089         	fcall	_Adf_Write_Register_Three
  4645  0C32  0008               	return
  4646  0C33                     __end_of_Adf_Write_Config:	
  4647                           
  4648                           	psect	text27
  4649  02CD                     __ptext27:	
  4650 ;; *************** function _Adf_Write_Register_Zero *****************
  4651 ;; Defined at:
  4652 ;;		line 159 in file "adf7012.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  4657 ;;  reg             4   51[BANK0 ] unsigned long 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;		None               void
  4660 ;; Registers used:
  4661 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4669 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4670 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4671 ;;Total ram usage:       36 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    7
  4674 ;; This function calls:
  4675 ;;		_Reverse_Array
  4676 ;;		_Write_Adf7012_Reg
  4677 ;;		_memcpy
  4678 ;; This function is called by:
  4679 ;;		_Adf_Write_Config
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           
  4684                           ;psect for function _Adf_Write_Register_Zero
  4685  02CD                     _Adf_Write_Register_Zero:	
  4686                           
  4687                           ;adf7012.c: 161: uint32_t reg =
  4688                           ;adf7012.c: 162: (0) |
  4689                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  4690                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  4691                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  4692                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  4693                           ;adf7012.c: 167: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  4694                           ;adf7012.c: 168: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  4695                           
  4696                           ;incstack = 0
  4697                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4698  02CD  0021               	movlb	1	; select bank1
  4699  02CE  0829               	movf	(_adf_config^(0+128)+9),w
  4700  02CF  3903               	andlw	3
  4701  02D0  0020               	movlb	0	; select bank0
  4702  02D1  00B3               	movwf	??_Adf_Write_Register_Zero
  4703  02D2  01B4               	clrf	??_Adf_Write_Register_Zero+1
  4704  02D3  01B5               	clrf	??_Adf_Write_Register_Zero+2
  4705  02D4  01B6               	clrf	??_Adf_Write_Register_Zero+3
  4706  02D5  3019               	movlw	25
  4707  02D6                     u1145:	
  4708  02D6  35B3               	lslf	??_Adf_Write_Register_Zero,f
  4709  02D7  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  4710  02D8  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  4711  02D9  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  4712  02DA  0B89               	decfsz	9,f
  4713  02DB  2AD6               	goto	u1145
  4714  02DC  0021               	movlb	1	; select bank1
  4715  02DD  0828               	movf	(_adf_config^(0+128)+8),w
  4716  02DE  3903               	andlw	3
  4717  02DF  0020               	movlb	0	; select bank0
  4718  02E0  00B7               	movwf	??_Adf_Write_Register_Zero+4
  4719  02E1  01B8               	clrf	??_Adf_Write_Register_Zero+5
  4720  02E2  01B9               	clrf	??_Adf_Write_Register_Zero+6
  4721  02E3  01BA               	clrf	??_Adf_Write_Register_Zero+7
  4722  02E4  3017               	movlw	23
  4723  02E5                     u1155:	
  4724  02E5  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  4725  02E6  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  4726  02E7  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  4727  02E8  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  4728  02E9  0B89               	decfsz	9,f
  4729  02EA  2AE5               	goto	u1155
  4730  02EB  0021               	movlb	1	; select bank1
  4731  02EC  0827               	movf	(_adf_config^(0+128)+7),w
  4732  02ED  390F               	andlw	15
  4733  02EE  0020               	movlb	0	; select bank0
  4734  02EF  00BB               	movwf	??_Adf_Write_Register_Zero+8
  4735  02F0  01BC               	clrf	??_Adf_Write_Register_Zero+9
  4736  02F1  01BD               	clrf	??_Adf_Write_Register_Zero+10
  4737  02F2  01BE               	clrf	??_Adf_Write_Register_Zero+11
  4738  02F3  3013               	movlw	19
  4739  02F4                     u1165:	
  4740  02F4  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  4741  02F5  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  4742  02F6  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  4743  02F7  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  4744  02F8  0B89               	decfsz	9,f
  4745  02F9  2AF4               	goto	u1165
  4746  02FA  0021               	movlb	1	; select bank1
  4747  02FB  0826               	movf	(_adf_config^(0+128)+6),w
  4748  02FC  3901               	andlw	1
  4749  02FD  0020               	movlb	0	; select bank0
  4750  02FE  00BF               	movwf	??_Adf_Write_Register_Zero+12
  4751  02FF  01C0               	clrf	??_Adf_Write_Register_Zero+13
  4752  0300  01C1               	clrf	??_Adf_Write_Register_Zero+14
  4753  0301  01C2               	clrf	??_Adf_Write_Register_Zero+15
  4754  0302  3012               	movlw	18
  4755  0303                     u1175:	
  4756  0303  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  4757  0304  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  4758  0305  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  4759  0306  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  4760  0307  0B89               	decfsz	9,f
  4761  0308  2B03               	goto	u1175
  4762  0309  0021               	movlb	1	; select bank1
  4763  030A  0825               	movf	(_adf_config^(0+128)+5),w
  4764  030B  3901               	andlw	1
  4765  030C  0020               	movlb	0	; select bank0
  4766  030D  00C3               	movwf	??_Adf_Write_Register_Zero+16
  4767  030E  01C4               	clrf	??_Adf_Write_Register_Zero+17
  4768  030F  01C5               	clrf	??_Adf_Write_Register_Zero+18
  4769  0310  01C6               	clrf	??_Adf_Write_Register_Zero+19
  4770  0311  3011               	movlw	17
  4771  0312                     u1185:	
  4772  0312  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  4773  0313  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  4774  0314  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  4775  0315  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  4776  0316  0B89               	decfsz	9,f
  4777  0317  2B12               	goto	u1185
  4778  0318  0021               	movlb	1	; select bank1
  4779  0319  0824               	movf	(_adf_config^(0+128)+4),w
  4780  031A  390F               	andlw	15
  4781  031B  0020               	movlb	0	; select bank0
  4782  031C  00C7               	movwf	??_Adf_Write_Register_Zero+20
  4783  031D  01C8               	clrf	??_Adf_Write_Register_Zero+21
  4784  031E  01C9               	clrf	??_Adf_Write_Register_Zero+22
  4785  031F  01CA               	clrf	??_Adf_Write_Register_Zero+23
  4786  0320  300D               	movlw	13
  4787  0321                     u1195:	
  4788  0321  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  4789  0322  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  4790  0323  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  4791  0324  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  4792  0325  0B89               	decfsz	9,f
  4793  0326  2B21               	goto	u1195
  4794  0327  30FF               	movlw	255
  4795  0328  0021               	movlb	1	; select bank1
  4796  0329  0520               	andwf	_adf_config^(0+128),w
  4797  032A  0020               	movlb	0	; select bank0
  4798  032B  00CB               	movwf	??_Adf_Write_Register_Zero+24
  4799  032C  3007               	movlw	7
  4800  032D  0021               	movlb	1	; select bank1
  4801  032E  0521               	andwf	(_adf_config+1)^(0+128),w
  4802  032F  0020               	movlb	0	; select bank0
  4803  0330  00CC               	movwf	??_Adf_Write_Register_Zero+25
  4804  0331  3000               	movlw	0
  4805  0332  0021               	movlb	1	; select bank1
  4806  0333  0522               	andwf	(_adf_config+2)^(0+128),w
  4807  0334  0020               	movlb	0	; select bank0
  4808  0335  00CD               	movwf	??_Adf_Write_Register_Zero+26
  4809  0336  3000               	movlw	0
  4810  0337  0021               	movlb	1	; select bank1
  4811  0338  0523               	andwf	(_adf_config+3)^(0+128),w
  4812  0339  0020               	movlb	0	; select bank0
  4813  033A  00CE               	movwf	??_Adf_Write_Register_Zero+27
  4814  033B  3002               	movlw	2
  4815  033C                     u1205:	
  4816  033C  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  4817  033D  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  4818  033E  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  4819  033F  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  4820  0340  0B89               	decfsz	9,f
  4821  0341  2B3C               	goto	u1205
  4822  0342  084B               	movf	??_Adf_Write_Register_Zero+24,w
  4823  0343  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  4824  0344  084C               	movf	??_Adf_Write_Register_Zero+25,w
  4825  0345  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  4826  0346  084D               	movf	??_Adf_Write_Register_Zero+26,w
  4827  0347  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  4828  0348  084E               	movf	??_Adf_Write_Register_Zero+27,w
  4829  0349  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  4830  034A  0847               	movf	??_Adf_Write_Register_Zero+20,w
  4831  034B  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  4832  034C  0848               	movf	??_Adf_Write_Register_Zero+21,w
  4833  034D  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  4834  034E  0849               	movf	??_Adf_Write_Register_Zero+22,w
  4835  034F  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  4836  0350  084A               	movf	??_Adf_Write_Register_Zero+23,w
  4837  0351  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  4838  0352  0843               	movf	??_Adf_Write_Register_Zero+16,w
  4839  0353  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  4840  0354  0844               	movf	??_Adf_Write_Register_Zero+17,w
  4841  0355  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  4842  0356  0845               	movf	??_Adf_Write_Register_Zero+18,w
  4843  0357  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  4844  0358  0846               	movf	??_Adf_Write_Register_Zero+19,w
  4845  0359  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  4846  035A  083F               	movf	??_Adf_Write_Register_Zero+12,w
  4847  035B  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  4848  035C  0840               	movf	??_Adf_Write_Register_Zero+13,w
  4849  035D  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  4850  035E  0841               	movf	??_Adf_Write_Register_Zero+14,w
  4851  035F  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  4852  0360  0842               	movf	??_Adf_Write_Register_Zero+15,w
  4853  0361  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  4854  0362  083B               	movf	??_Adf_Write_Register_Zero+8,w
  4855  0363  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  4856  0364  083C               	movf	??_Adf_Write_Register_Zero+9,w
  4857  0365  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  4858  0366  083D               	movf	??_Adf_Write_Register_Zero+10,w
  4859  0367  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  4860  0368  083E               	movf	??_Adf_Write_Register_Zero+11,w
  4861  0369  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  4862  036A  0833               	movf	??_Adf_Write_Register_Zero,w
  4863  036B  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  4864  036C  00D3               	movwf	Adf_Write_Register_Zero@reg
  4865  036D  0834               	movf	??_Adf_Write_Register_Zero+1,w
  4866  036E  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  4867  036F  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  4868  0370  0835               	movf	??_Adf_Write_Register_Zero+2,w
  4869  0371  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  4870  0372  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  4871  0373  0836               	movf	??_Adf_Write_Register_Zero+3,w
  4872  0374  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  4873  0375  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  4874                           
  4875                           ;adf7012.c: 172: uint8_t reg_ptr[4];
  4876                           ;adf7012.c: 173: memcpy(reg_ptr, &reg, 4);
  4877  0376  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  4878  0377  00B3               	movwf	??_Adf_Write_Register_Zero
  4879  0378  0833               	movf	??_Adf_Write_Register_Zero,w
  4880  0379  00A0               	movwf	memcpy@s1
  4881  037A  3004               	movlw	4
  4882  037B  00A1               	movwf	memcpy@n
  4883  037C  3000               	movlw	0
  4884  037D  00A2               	movwf	memcpy@n+1
  4885  037E  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4886  037F  318D  2577  3182   	fcall	_memcpy
  4887                           
  4888                           ;adf7012.c: 174: Reverse_Array(reg_ptr,4);
  4889  0382  3004               	movlw	4
  4890  0383  0020               	movlb	0	; select bank0
  4891  0384  00B3               	movwf	??_Adf_Write_Register_Zero
  4892  0385  0833               	movf	??_Adf_Write_Register_Zero,w
  4893  0386  00A7               	movwf	Reverse_Array@length
  4894  0387  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4895  0388  3183  2394  3182   	fcall	_Reverse_Array
  4896                           
  4897                           ;adf7012.c: 175: Write_Adf7012_Reg(reg_ptr, 4);
  4898  038B  3004               	movlw	4
  4899  038C  0020               	movlb	0	; select bank0
  4900  038D  00B3               	movwf	??_Adf_Write_Register_Zero
  4901  038E  0833               	movf	??_Adf_Write_Register_Zero,w
  4902  038F  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  4903  0390  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4904  0391  318E  2668         	fcall	_Write_Adf7012_Reg
  4905  0393  0008               	return
  4906  0394                     __end_of_Adf_Write_Register_Zero:	
  4907                           
  4908                           	psect	text28
  4909  04C4                     __ptext28:	
  4910 ;; *************** function _Adf_Write_Register_Two *****************
  4911 ;; Defined at:
  4912 ;;		line 191 in file "adf7012.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;		None
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  4917 ;;  reg             4   47[BANK0 ] unsigned long 
  4918 ;; Return value:  Size  Location     Type
  4919 ;;		None               void
  4920 ;; Registers used:
  4921 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4928 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4929 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4930 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4931 ;;Total ram usage:       32 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    7
  4934 ;; This function calls:
  4935 ;;		_Reverse_Array
  4936 ;;		_Write_Adf7012_Reg
  4937 ;;		_memcpy
  4938 ;; This function is called by:
  4939 ;;		_Adf_Write_Config
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           
  4944                           ;psect for function _Adf_Write_Register_Two
  4945  04C4                     _Adf_Write_Register_Two:	
  4946                           
  4947                           ;adf7012.c: 192: uint32_t reg =
  4948                           ;adf7012.c: 193: (2) |
  4949                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  4950                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  4951                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  4952                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  4953                           ;adf7012.c: 198: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  4954                           ;adf7012.c: 199: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  4955                           
  4956                           ;incstack = 0
  4957                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4958  04C4  0021               	movlb	1	; select bank1
  4959  04C5  0838               	movf	(_adf_config^(0+128)+24),w
  4960  04C6  3903               	andlw	3
  4961  04C7  0020               	movlb	0	; select bank0
  4962  04C8  00B3               	movwf	??_Adf_Write_Register_Two
  4963  04C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  4964  04CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  4965  04CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  4966  04CC  3017               	movlw	23
  4967  04CD                     u1245:	
  4968  04CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  4969  04CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  4970  04CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  4971  04D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  4972  04D1  0B89               	decfsz	9,f
  4973  04D2  2CCD               	goto	u1245
  4974  04D3  0021               	movlb	1	; select bank1
  4975  04D4  0837               	movf	(_adf_config^(0+128)+23),w
  4976  04D5  3907               	andlw	7
  4977  04D6  0020               	movlb	0	; select bank0
  4978  04D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  4979  04D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  4980  04D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  4981  04DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  4982  04DB  3014               	movlw	20
  4983  04DC                     u1255:	
  4984  04DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  4985  04DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  4986  04DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  4987  04DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  4988  04E0  0B89               	decfsz	9,f
  4989  04E1  2CDC               	goto	u1255
  4990  04E2  3013               	movlw	19
  4991  04E3  3EA0               	addlw	_adf_config& (0+255)
  4992  04E4  0086               	movwf	6
  4993  04E5  0187               	clrf	7
  4994  04E6  30FF               	movlw	255
  4995  04E7  0501               	andwf	1,w
  4996  04E8  00BB               	movwf	??_Adf_Write_Register_Two+8
  4997  04E9  3141               	addfsr 1,1
  4998  04EA  3001               	movlw	1
  4999  04EB  0501               	andwf	1,w
  5000  04EC  00BC               	movwf	??_Adf_Write_Register_Two+9
  5001  04ED  3141               	addfsr 1,1
  5002  04EE  3000               	movlw	0
  5003  04EF  0501               	andwf	1,w
  5004  04F0  00BD               	movwf	??_Adf_Write_Register_Two+10
  5005  04F1  3141               	addfsr 1,1
  5006  04F2  3000               	movlw	0
  5007  04F3  0501               	andwf	1,w
  5008  04F4  00BE               	movwf	??_Adf_Write_Register_Two+11
  5009  04F5  300B               	movlw	11
  5010  04F6                     u1265:	
  5011  04F6  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  5012  04F7  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  5013  04F8  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  5014  04F9  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  5015  04FA  0B89               	decfsz	9,f
  5016  04FB  2CF6               	goto	u1265
  5017  04FC  0021               	movlb	1	; select bank1
  5018  04FD  0832               	movf	(_adf_config^(0+128)+18),w
  5019  04FE  393F               	andlw	63
  5020  04FF  0020               	movlb	0	; select bank0
  5021  0500  00BF               	movwf	??_Adf_Write_Register_Two+12
  5022  0501  01C0               	clrf	??_Adf_Write_Register_Two+13
  5023  0502  01C1               	clrf	??_Adf_Write_Register_Two+14
  5024  0503  01C2               	clrf	??_Adf_Write_Register_Two+15
  5025  0504  3005               	movlw	5
  5026  0505                     u1275:	
  5027  0505  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  5028  0506  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  5029  0507  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  5030  0508  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  5031  0509  0B89               	decfsz	9,f
  5032  050A  2D05               	goto	u1275
  5033  050B  0021               	movlb	1	; select bank1
  5034  050C  0831               	movf	(_adf_config^(0+128)+17),w
  5035  050D  3901               	andlw	1
  5036  050E  0020               	movlb	0	; select bank0
  5037  050F  00C3               	movwf	??_Adf_Write_Register_Two+16
  5038  0510  01C4               	clrf	??_Adf_Write_Register_Two+17
  5039  0511  01C5               	clrf	??_Adf_Write_Register_Two+18
  5040  0512  01C6               	clrf	??_Adf_Write_Register_Two+19
  5041  0513  3004               	movlw	4
  5042  0514                     u1285:	
  5043  0514  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  5044  0515  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  5045  0516  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  5046  0517  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  5047  0518  0B89               	decfsz	9,f
  5048  0519  2D14               	goto	u1285
  5049  051A  0021               	movlb	1	; select bank1
  5050  051B  0830               	movf	(_adf_config^(0+128)+16),w
  5051  051C  3903               	andlw	3
  5052  051D  0020               	movlb	0	; select bank0
  5053  051E  00C7               	movwf	??_Adf_Write_Register_Two+20
  5054  051F  01C8               	clrf	??_Adf_Write_Register_Two+21
  5055  0520  01C9               	clrf	??_Adf_Write_Register_Two+22
  5056  0521  01CA               	clrf	??_Adf_Write_Register_Two+23
  5057  0522  3002               	movlw	2
  5058  0523                     u1295:	
  5059  0523  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  5060  0524  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  5061  0525  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  5062  0526  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  5063  0527  0B89               	decfsz	9,f
  5064  0528  2D23               	goto	u1295
  5065  0529  0847               	movf	??_Adf_Write_Register_Two+20,w
  5066  052A  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  5067  052B  0848               	movf	??_Adf_Write_Register_Two+21,w
  5068  052C  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  5069  052D  0849               	movf	??_Adf_Write_Register_Two+22,w
  5070  052E  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  5071  052F  084A               	movf	??_Adf_Write_Register_Two+23,w
  5072  0530  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  5073  0531  0843               	movf	??_Adf_Write_Register_Two+16,w
  5074  0532  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  5075  0533  0844               	movf	??_Adf_Write_Register_Two+17,w
  5076  0534  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  5077  0535  0845               	movf	??_Adf_Write_Register_Two+18,w
  5078  0536  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  5079  0537  0846               	movf	??_Adf_Write_Register_Two+19,w
  5080  0538  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  5081  0539  083F               	movf	??_Adf_Write_Register_Two+12,w
  5082  053A  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  5083  053B  0840               	movf	??_Adf_Write_Register_Two+13,w
  5084  053C  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  5085  053D  0841               	movf	??_Adf_Write_Register_Two+14,w
  5086  053E  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  5087  053F  0842               	movf	??_Adf_Write_Register_Two+15,w
  5088  0540  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  5089  0541  083B               	movf	??_Adf_Write_Register_Two+8,w
  5090  0542  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  5091  0543  083C               	movf	??_Adf_Write_Register_Two+9,w
  5092  0544  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  5093  0545  083D               	movf	??_Adf_Write_Register_Two+10,w
  5094  0546  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  5095  0547  083E               	movf	??_Adf_Write_Register_Two+11,w
  5096  0548  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  5097  0549  0837               	movf	??_Adf_Write_Register_Two+4,w
  5098  054A  04B3               	iorwf	??_Adf_Write_Register_Two,f
  5099  054B  0838               	movf	??_Adf_Write_Register_Two+5,w
  5100  054C  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  5101  054D  0839               	movf	??_Adf_Write_Register_Two+6,w
  5102  054E  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  5103  054F  083A               	movf	??_Adf_Write_Register_Two+7,w
  5104  0550  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  5105  0551  3002               	movlw	2
  5106  0552  0433               	iorwf	??_Adf_Write_Register_Two,w
  5107  0553  00CF               	movwf	Adf_Write_Register_Two@reg
  5108  0554  3000               	movlw	0
  5109  0555  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  5110  0556  00D0               	movwf	Adf_Write_Register_Two@reg+1
  5111  0557  3000               	movlw	0
  5112  0558  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  5113  0559  00D1               	movwf	Adf_Write_Register_Two@reg+2
  5114  055A  3000               	movlw	0
  5115  055B  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  5116  055C  00D2               	movwf	Adf_Write_Register_Two@reg+3
  5117                           
  5118                           ;adf7012.c: 202: uint8_t reg_ptr[4];
  5119                           ;adf7012.c: 203: memcpy(reg_ptr, &reg, 4);
  5120  055D  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  5121  055E  00B3               	movwf	??_Adf_Write_Register_Two
  5122  055F  0833               	movf	??_Adf_Write_Register_Two,w
  5123  0560  00A0               	movwf	memcpy@s1
  5124  0561  3004               	movlw	4
  5125  0562  00A1               	movwf	memcpy@n
  5126  0563  3000               	movlw	0
  5127  0564  00A2               	movwf	memcpy@n+1
  5128  0565  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5129  0566  318D  2577  3184   	fcall	_memcpy
  5130                           
  5131                           ;adf7012.c: 204: Reverse_Array(reg_ptr,4);
  5132  0569  3004               	movlw	4
  5133  056A  0020               	movlb	0	; select bank0
  5134  056B  00B3               	movwf	??_Adf_Write_Register_Two
  5135  056C  0833               	movf	??_Adf_Write_Register_Two,w
  5136  056D  00A7               	movwf	Reverse_Array@length
  5137  056E  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5138  056F  3183  2394  3184   	fcall	_Reverse_Array
  5139                           
  5140                           ;adf7012.c: 205: Write_Adf7012_Reg(reg_ptr, 4);
  5141  0572  3004               	movlw	4
  5142  0573  0020               	movlb	0	; select bank0
  5143  0574  00B3               	movwf	??_Adf_Write_Register_Two
  5144  0575  0833               	movf	??_Adf_Write_Register_Two,w
  5145  0576  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5146  0577  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5147  0578  318E  2668         	fcall	_Write_Adf7012_Reg
  5148  057A  0008               	return
  5149  057B                     __end_of_Adf_Write_Register_Two:	
  5150                           
  5151                           	psect	text29
  5152  0089                     __ptext29:	
  5153 ;; *************** function _Adf_Write_Register_Three *****************
  5154 ;; Defined at:
  5155 ;;		line 208 in file "adf7012.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;		None
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  5160 ;;  reg             4    4[BANK1 ] unsigned long 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;		None               void
  5163 ;; Registers used:
  5164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5173 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;Total ram usage:       64 bytes
  5175 ;; Hardware stack levels used:    1
  5176 ;; Hardware stack levels required when called:    7
  5177 ;; This function calls:
  5178 ;;		_Reverse_Array
  5179 ;;		_Write_Adf7012_Reg
  5180 ;;		_memcpy
  5181 ;; This function is called by:
  5182 ;;		_Adf_Write_Config
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           
  5187                           ;psect for function _Adf_Write_Register_Three
  5188  0089                     _Adf_Write_Register_Three:	
  5189                           
  5190                           ;adf7012.c: 209: uint32_t reg =
  5191                           ;adf7012.c: 210: (3) |
  5192                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  5193                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  5194                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  5195                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  5196                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  5197                           ;adf7012.c: 216: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  5198                           ;adf7012.c: 217: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  5199                           
  5200                           ;incstack = 0
  5201                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5202  0089  0021               	movlb	1	; select bank1
  5203  008A  0846               	movf	(_adf_config^(0+128)+38),w
  5204  008B  390F               	andlw	15
  5205  008C  0020               	movlb	0	; select bank0
  5206  008D  00B3               	movwf	??_Adf_Write_Register_Three
  5207  008E  01B4               	clrf	??_Adf_Write_Register_Three+1
  5208  008F  01B5               	clrf	??_Adf_Write_Register_Three+2
  5209  0090  01B6               	clrf	??_Adf_Write_Register_Three+3
  5210  0091  301C               	movlw	28
  5211  0092                     u1305:	
  5212  0092  35B3               	lslf	??_Adf_Write_Register_Three,f
  5213  0093  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  5214  0094  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  5215  0095  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  5216  0096  0B89               	decfsz	9,f
  5217  0097  2892               	goto	u1305
  5218  0098  0021               	movlb	1	; select bank1
  5219  0099  0845               	movf	(_adf_config^(0+128)+37),w
  5220  009A  391F               	andlw	31
  5221  009B  0020               	movlb	0	; select bank0
  5222  009C  00B7               	movwf	??_Adf_Write_Register_Three+4
  5223  009D  01B8               	clrf	??_Adf_Write_Register_Three+5
  5224  009E  01B9               	clrf	??_Adf_Write_Register_Three+6
  5225  009F  01BA               	clrf	??_Adf_Write_Register_Three+7
  5226  00A0  3017               	movlw	23
  5227  00A1                     u1315:	
  5228  00A1  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  5229  00A2  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  5230  00A3  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  5231  00A4  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  5232  00A5  0B89               	decfsz	9,f
  5233  00A6  28A1               	goto	u1315
  5234  00A7  0021               	movlb	1	; select bank1
  5235  00A8  0844               	movf	(_adf_config^(0+128)+36),w
  5236  00A9  3907               	andlw	7
  5237  00AA  0020               	movlb	0	; select bank0
  5238  00AB  00BB               	movwf	??_Adf_Write_Register_Three+8
  5239  00AC  01BC               	clrf	??_Adf_Write_Register_Three+9
  5240  00AD  01BD               	clrf	??_Adf_Write_Register_Three+10
  5241  00AE  01BE               	clrf	??_Adf_Write_Register_Three+11
  5242  00AF  3014               	movlw	20
  5243  00B0                     u1325:	
  5244  00B0  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  5245  00B1  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  5246  00B2  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  5247  00B3  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  5248  00B4  0B89               	decfsz	9,f
  5249  00B5  28B0               	goto	u1325
  5250  00B6  0021               	movlb	1	; select bank1
  5251  00B7  0843               	movf	(_adf_config^(0+128)+35),w
  5252  00B8  390F               	andlw	15
  5253  00B9  0020               	movlb	0	; select bank0
  5254  00BA  00BF               	movwf	??_Adf_Write_Register_Three+12
  5255  00BB  01C0               	clrf	??_Adf_Write_Register_Three+13
  5256  00BC  01C1               	clrf	??_Adf_Write_Register_Three+14
  5257  00BD  01C2               	clrf	??_Adf_Write_Register_Three+15
  5258  00BE  3010               	movlw	16
  5259  00BF                     u1335:	
  5260  00BF  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  5261  00C0  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  5262  00C1  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  5263  00C2  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  5264  00C3  0B89               	decfsz	9,f
  5265  00C4  28BF               	goto	u1335
  5266  00C5  0021               	movlb	1	; select bank1
  5267  00C6  0842               	movf	(_adf_config^(0+128)+34),w
  5268  00C7  3901               	andlw	1
  5269  00C8  0020               	movlb	0	; select bank0
  5270  00C9  00C3               	movwf	??_Adf_Write_Register_Three+16
  5271  00CA  01C4               	clrf	??_Adf_Write_Register_Three+17
  5272  00CB  01C5               	clrf	??_Adf_Write_Register_Three+18
  5273  00CC  01C6               	clrf	??_Adf_Write_Register_Three+19
  5274  00CD  300F               	movlw	15
  5275  00CE                     u1345:	
  5276  00CE  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  5277  00CF  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  5278  00D0  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  5279  00D1  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  5280  00D2  0B89               	decfsz	9,f
  5281  00D3  28CE               	goto	u1345
  5282  00D4  0021               	movlb	1	; select bank1
  5283  00D5  0841               	movf	(_adf_config^(0+128)+33),w
  5284  00D6  390F               	andlw	15
  5285  00D7  0020               	movlb	0	; select bank0
  5286  00D8  00C7               	movwf	??_Adf_Write_Register_Three+20
  5287  00D9  01C8               	clrf	??_Adf_Write_Register_Three+21
  5288  00DA  01C9               	clrf	??_Adf_Write_Register_Three+22
  5289  00DB  01CA               	clrf	??_Adf_Write_Register_Three+23
  5290  00DC  300B               	movlw	11
  5291  00DD                     u1355:	
  5292  00DD  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  5293  00DE  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  5294  00DF  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  5295  00E0  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  5296  00E1  0B89               	decfsz	9,f
  5297  00E2  28DD               	goto	u1355
  5298  00E3  0021               	movlb	1	; select bank1
  5299  00E4  0840               	movf	(_adf_config^(0+128)+32),w
  5300  00E5  3901               	andlw	1
  5301  00E6  0020               	movlb	0	; select bank0
  5302  00E7  00CB               	movwf	??_Adf_Write_Register_Three+24
  5303  00E8  01CC               	clrf	??_Adf_Write_Register_Three+25
  5304  00E9  01CD               	clrf	??_Adf_Write_Register_Three+26
  5305  00EA  01CE               	clrf	??_Adf_Write_Register_Three+27
  5306  00EB  300A               	movlw	10
  5307  00EC                     u1365:	
  5308  00EC  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  5309  00ED  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  5310  00EE  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  5311  00EF  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  5312  00F0  0B89               	decfsz	9,f
  5313  00F1  28EC               	goto	u1365
  5314  00F2  0021               	movlb	1	; select bank1
  5315  00F3  083F               	movf	(_adf_config^(0+128)+31),w
  5316  00F4  3901               	andlw	1
  5317  00F5  0020               	movlb	0	; select bank0
  5318  00F6  00CF               	movwf	??_Adf_Write_Register_Three+28
  5319  00F7  01D0               	clrf	??_Adf_Write_Register_Three+29
  5320  00F8  01D1               	clrf	??_Adf_Write_Register_Three+30
  5321  00F9  01D2               	clrf	??_Adf_Write_Register_Three+31
  5322  00FA  3009               	movlw	9
  5323  00FB                     u1375:	
  5324  00FB  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  5325  00FC  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  5326  00FD  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  5327  00FE  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  5328  00FF  0B89               	decfsz	9,f
  5329  0100  28FB               	goto	u1375
  5330  0101  0021               	movlb	1	; select bank1
  5331  0102  083E               	movf	(_adf_config^(0+128)+30),w
  5332  0103  3901               	andlw	1
  5333  0104  0020               	movlb	0	; select bank0
  5334  0105  00D3               	movwf	??_Adf_Write_Register_Three+32
  5335  0106  01D4               	clrf	??_Adf_Write_Register_Three+33
  5336  0107  01D5               	clrf	??_Adf_Write_Register_Three+34
  5337  0108  01D6               	clrf	??_Adf_Write_Register_Three+35
  5338  0109  3008               	movlw	8
  5339  010A                     u1385:	
  5340  010A  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  5341  010B  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  5342  010C  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  5343  010D  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  5344  010E  0B89               	decfsz	9,f
  5345  010F  290A               	goto	u1385
  5346  0110  0021               	movlb	1	; select bank1
  5347  0111  083D               	movf	(_adf_config^(0+128)+29),w
  5348  0112  3903               	andlw	3
  5349  0113  0020               	movlb	0	; select bank0
  5350  0114  00D7               	movwf	??_Adf_Write_Register_Three+36
  5351  0115  01D8               	clrf	??_Adf_Write_Register_Three+37
  5352  0116  01D9               	clrf	??_Adf_Write_Register_Three+38
  5353  0117  01DA               	clrf	??_Adf_Write_Register_Three+39
  5354  0118  3006               	movlw	6
  5355  0119                     u1395:	
  5356  0119  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  5357  011A  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  5358  011B  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  5359  011C  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  5360  011D  0B89               	decfsz	9,f
  5361  011E  2919               	goto	u1395
  5362  011F  0021               	movlb	1	; select bank1
  5363  0120  083C               	movf	(_adf_config^(0+128)+28),w
  5364  0121  3901               	andlw	1
  5365  0122  0020               	movlb	0	; select bank0
  5366  0123  00DB               	movwf	??_Adf_Write_Register_Three+40
  5367  0124  01DC               	clrf	??_Adf_Write_Register_Three+41
  5368  0125  01DD               	clrf	??_Adf_Write_Register_Three+42
  5369  0126  01DE               	clrf	??_Adf_Write_Register_Three+43
  5370  0127  3005               	movlw	5
  5371  0128                     u1405:	
  5372  0128  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  5373  0129  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  5374  012A  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  5375  012B  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  5376  012C  0B89               	decfsz	9,f
  5377  012D  2928               	goto	u1405
  5378  012E  0021               	movlb	1	; select bank1
  5379  012F  083B               	movf	(_adf_config^(0+128)+27),w
  5380  0130  3901               	andlw	1
  5381  0131  0020               	movlb	0	; select bank0
  5382  0132  00DF               	movwf	??_Adf_Write_Register_Three+44
  5383  0133  01E0               	clrf	??_Adf_Write_Register_Three+45
  5384  0134  01E1               	clrf	??_Adf_Write_Register_Three+46
  5385  0135  01E2               	clrf	??_Adf_Write_Register_Three+47
  5386  0136  3004               	movlw	4
  5387  0137                     u1415:	
  5388  0137  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  5389  0138  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  5390  0139  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  5391  013A  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  5392  013B  0B89               	decfsz	9,f
  5393  013C  2937               	goto	u1415
  5394  013D  0021               	movlb	1	; select bank1
  5395  013E  083A               	movf	(_adf_config^(0+128)+26),w
  5396  013F  3901               	andlw	1
  5397  0140  0020               	movlb	0	; select bank0
  5398  0141  00E3               	movwf	??_Adf_Write_Register_Three+48
  5399  0142  01E4               	clrf	??_Adf_Write_Register_Three+49
  5400  0143  01E5               	clrf	??_Adf_Write_Register_Three+50
  5401  0144  01E6               	clrf	??_Adf_Write_Register_Three+51
  5402  0145  3003               	movlw	3
  5403  0146                     u1425:	
  5404  0146  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  5405  0147  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  5406  0148  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  5407  0149  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  5408  014A  0B89               	decfsz	9,f
  5409  014B  2946               	goto	u1425
  5410  014C  0021               	movlb	1	; select bank1
  5411  014D  0839               	movf	(_adf_config^(0+128)+25),w
  5412  014E  3901               	andlw	1
  5413  014F  0020               	movlb	0	; select bank0
  5414  0150  00E7               	movwf	??_Adf_Write_Register_Three+52
  5415  0151  01E8               	clrf	??_Adf_Write_Register_Three+53
  5416  0152  01E9               	clrf	??_Adf_Write_Register_Three+54
  5417  0153  01EA               	clrf	??_Adf_Write_Register_Three+55
  5418  0154  3002               	movlw	2
  5419  0155                     u1435:	
  5420  0155  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  5421  0156  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  5422  0157  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  5423  0158  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  5424  0159  0B89               	decfsz	9,f
  5425  015A  2955               	goto	u1435
  5426  015B  0867               	movf	??_Adf_Write_Register_Three+52,w
  5427  015C  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  5428  015D  0868               	movf	??_Adf_Write_Register_Three+53,w
  5429  015E  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  5430  015F  0869               	movf	??_Adf_Write_Register_Three+54,w
  5431  0160  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  5432  0161  086A               	movf	??_Adf_Write_Register_Three+55,w
  5433  0162  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  5434  0163  0863               	movf	??_Adf_Write_Register_Three+48,w
  5435  0164  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  5436  0165  0864               	movf	??_Adf_Write_Register_Three+49,w
  5437  0166  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  5438  0167  0865               	movf	??_Adf_Write_Register_Three+50,w
  5439  0168  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  5440  0169  0866               	movf	??_Adf_Write_Register_Three+51,w
  5441  016A  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  5442  016B  085F               	movf	??_Adf_Write_Register_Three+44,w
  5443  016C  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  5444  016D  0860               	movf	??_Adf_Write_Register_Three+45,w
  5445  016E  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  5446  016F  0861               	movf	??_Adf_Write_Register_Three+46,w
  5447  0170  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  5448  0171  0862               	movf	??_Adf_Write_Register_Three+47,w
  5449  0172  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  5450  0173  085B               	movf	??_Adf_Write_Register_Three+40,w
  5451  0174  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  5452  0175  085C               	movf	??_Adf_Write_Register_Three+41,w
  5453  0176  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  5454  0177  085D               	movf	??_Adf_Write_Register_Three+42,w
  5455  0178  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  5456  0179  085E               	movf	??_Adf_Write_Register_Three+43,w
  5457  017A  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  5458  017B  0857               	movf	??_Adf_Write_Register_Three+36,w
  5459  017C  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  5460  017D  0858               	movf	??_Adf_Write_Register_Three+37,w
  5461  017E  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  5462  017F  0859               	movf	??_Adf_Write_Register_Three+38,w
  5463  0180  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  5464  0181  085A               	movf	??_Adf_Write_Register_Three+39,w
  5465  0182  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  5466  0183  0853               	movf	??_Adf_Write_Register_Three+32,w
  5467  0184  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  5468  0185  0854               	movf	??_Adf_Write_Register_Three+33,w
  5469  0186  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  5470  0187  0855               	movf	??_Adf_Write_Register_Three+34,w
  5471  0188  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  5472  0189  0856               	movf	??_Adf_Write_Register_Three+35,w
  5473  018A  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  5474  018B  084F               	movf	??_Adf_Write_Register_Three+28,w
  5475  018C  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  5476  018D  0850               	movf	??_Adf_Write_Register_Three+29,w
  5477  018E  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  5478  018F  0851               	movf	??_Adf_Write_Register_Three+30,w
  5479  0190  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  5480  0191  0852               	movf	??_Adf_Write_Register_Three+31,w
  5481  0192  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  5482  0193  084B               	movf	??_Adf_Write_Register_Three+24,w
  5483  0194  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  5484  0195  084C               	movf	??_Adf_Write_Register_Three+25,w
  5485  0196  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  5486  0197  084D               	movf	??_Adf_Write_Register_Three+26,w
  5487  0198  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  5488  0199  084E               	movf	??_Adf_Write_Register_Three+27,w
  5489  019A  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  5490  019B  0847               	movf	??_Adf_Write_Register_Three+20,w
  5491  019C  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  5492  019D  0848               	movf	??_Adf_Write_Register_Three+21,w
  5493  019E  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  5494  019F  0849               	movf	??_Adf_Write_Register_Three+22,w
  5495  01A0  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  5496  01A1  084A               	movf	??_Adf_Write_Register_Three+23,w
  5497  01A2  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  5498  01A3  0843               	movf	??_Adf_Write_Register_Three+16,w
  5499  01A4  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  5500  01A5  0844               	movf	??_Adf_Write_Register_Three+17,w
  5501  01A6  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  5502  01A7  0845               	movf	??_Adf_Write_Register_Three+18,w
  5503  01A8  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  5504  01A9  0846               	movf	??_Adf_Write_Register_Three+19,w
  5505  01AA  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  5506  01AB  083F               	movf	??_Adf_Write_Register_Three+12,w
  5507  01AC  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  5508  01AD  0840               	movf	??_Adf_Write_Register_Three+13,w
  5509  01AE  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  5510  01AF  0841               	movf	??_Adf_Write_Register_Three+14,w
  5511  01B0  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  5512  01B1  0842               	movf	??_Adf_Write_Register_Three+15,w
  5513  01B2  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  5514  01B3  083B               	movf	??_Adf_Write_Register_Three+8,w
  5515  01B4  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  5516  01B5  083C               	movf	??_Adf_Write_Register_Three+9,w
  5517  01B6  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  5518  01B7  083D               	movf	??_Adf_Write_Register_Three+10,w
  5519  01B8  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  5520  01B9  083E               	movf	??_Adf_Write_Register_Three+11,w
  5521  01BA  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  5522  01BB  0837               	movf	??_Adf_Write_Register_Three+4,w
  5523  01BC  04B3               	iorwf	??_Adf_Write_Register_Three,f
  5524  01BD  0838               	movf	??_Adf_Write_Register_Three+5,w
  5525  01BE  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  5526  01BF  0839               	movf	??_Adf_Write_Register_Three+6,w
  5527  01C0  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  5528  01C1  083A               	movf	??_Adf_Write_Register_Three+7,w
  5529  01C2  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  5530  01C3  3003               	movlw	3
  5531  01C4  0433               	iorwf	??_Adf_Write_Register_Three,w
  5532  01C5  0021               	movlb	1	; select bank1
  5533  01C6  00D7               	movwf	Adf_Write_Register_Three@reg^(0+128)
  5534  01C7  3000               	movlw	0
  5535  01C8  0020               	movlb	0	; select bank0
  5536  01C9  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  5537  01CA  0021               	movlb	1	; select bank1
  5538  01CB  00D8               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  5539  01CC  3000               	movlw	0
  5540  01CD  0020               	movlb	0	; select bank0
  5541  01CE  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  5542  01CF  0021               	movlb	1	; select bank1
  5543  01D0  00D9               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  5544  01D1  3000               	movlw	0
  5545  01D2  0020               	movlb	0	; select bank0
  5546  01D3  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  5547  01D4  0021               	movlb	1	; select bank1
  5548  01D5  00DA               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  5549                           
  5550                           ;adf7012.c: 227: uint8_t reg_ptr[4];
  5551                           ;adf7012.c: 228: memcpy(reg_ptr, &reg, 4);
  5552  01D6  30D7               	movlw	Adf_Write_Register_Three@reg& (0+255)
  5553  01D7  0020               	movlb	0	; select bank0
  5554  01D8  00B3               	movwf	??_Adf_Write_Register_Three
  5555  01D9  0833               	movf	??_Adf_Write_Register_Three,w
  5556  01DA  00A0               	movwf	memcpy@s1
  5557  01DB  3004               	movlw	4
  5558  01DC  00A1               	movwf	memcpy@n
  5559  01DD  3000               	movlw	0
  5560  01DE  00A2               	movwf	memcpy@n+1
  5561  01DF  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5562  01E0  318D  2577  3180   	fcall	_memcpy
  5563                           
  5564                           ;adf7012.c: 229: Reverse_Array(reg_ptr,4);
  5565  01E3  3004               	movlw	4
  5566  01E4  0020               	movlb	0	; select bank0
  5567  01E5  00B3               	movwf	??_Adf_Write_Register_Three
  5568  01E6  0833               	movf	??_Adf_Write_Register_Three,w
  5569  01E7  00A7               	movwf	Reverse_Array@length
  5570  01E8  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5571  01E9  3183  2394  3180   	fcall	_Reverse_Array
  5572                           
  5573                           ;adf7012.c: 230: Write_Adf7012_Reg(reg_ptr, 4);
  5574  01EC  3004               	movlw	4
  5575  01ED  0020               	movlb	0	; select bank0
  5576  01EE  00B3               	movwf	??_Adf_Write_Register_Three
  5577  01EF  0833               	movf	??_Adf_Write_Register_Three,w
  5578  01F0  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5579  01F1  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5580  01F2  318E  2668         	fcall	_Write_Adf7012_Reg
  5581  01F4  0008               	return
  5582  01F5                     __end_of_Adf_Write_Register_Three:	
  5583                           
  5584                           	psect	text30
  5585  0EA1                     __ptext30:	
  5586 ;; *************** function _Adf_Write_Register_One *****************
  5587 ;; Defined at:
  5588 ;;		line 178 in file "adf7012.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;		None
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;  reg             4   31[BANK0 ] unsigned long 
  5593 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  5594 ;; Return value:  Size  Location     Type
  5595 ;;		None               void
  5596 ;; Registers used:
  5597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5607 ;;Total ram usage:       19 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    7
  5610 ;; This function calls:
  5611 ;;		_Reverse_Array
  5612 ;;		_Write_Adf7012_Reg
  5613 ;;		_memcpy
  5614 ;; This function is called by:
  5615 ;;		_Adf_Write_Config
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           
  5620                           ;psect for function _Adf_Write_Register_One
  5621  0EA1                     _Adf_Write_Register_One:	
  5622                           
  5623                           ;adf7012.c: 179: uint32_t reg =
  5624                           ;adf7012.c: 180: (1) |
  5625                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  5626                           ;adf7012.c: 182: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  5627                           ;adf7012.c: 183: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  5628                           
  5629                           ;incstack = 0
  5630                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5631  0EA1  0021               	movlb	1	; select bank1
  5632  0EA2  082F               	movf	(_adf_config^(0+128)+15),w
  5633  0EA3  3901               	andlw	1
  5634  0EA4  0020               	movlb	0	; select bank0
  5635  0EA5  00B3               	movwf	??_Adf_Write_Register_One
  5636  0EA6  01B4               	clrf	??_Adf_Write_Register_One+1
  5637  0EA7  01B5               	clrf	??_Adf_Write_Register_One+2
  5638  0EA8  01B6               	clrf	??_Adf_Write_Register_One+3
  5639  0EA9  3016               	movlw	22
  5640  0EAA                     u1215:	
  5641  0EAA  35B3               	lslf	??_Adf_Write_Register_One,f
  5642  0EAB  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  5643  0EAC  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  5644  0EAD  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  5645  0EAE  0B89               	decfsz	9,f
  5646  0EAF  2EAA               	goto	u1215
  5647  0EB0  0021               	movlb	1	; select bank1
  5648  0EB1  082E               	movf	(_adf_config^(0+128)+14),w
  5649  0EB2  0020               	movlb	0	; select bank0
  5650  0EB3  00B7               	movwf	??_Adf_Write_Register_One+4
  5651  0EB4  01B8               	clrf	??_Adf_Write_Register_One+5
  5652  0EB5  01B9               	clrf	??_Adf_Write_Register_One+6
  5653  0EB6  01BA               	clrf	??_Adf_Write_Register_One+7
  5654  0EB7  300E               	movlw	14
  5655  0EB8                     u1225:	
  5656  0EB8  35B7               	lslf	??_Adf_Write_Register_One+4,f
  5657  0EB9  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  5658  0EBA  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  5659  0EBB  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  5660  0EBC  0B89               	decfsz	9,f
  5661  0EBD  2EB8               	goto	u1225
  5662  0EBE  300A               	movlw	10
  5663  0EBF  3EA0               	addlw	_adf_config& (0+255)
  5664  0EC0  0086               	movwf	6
  5665  0EC1  0187               	clrf	7
  5666  0EC2  30FF               	movlw	255
  5667  0EC3  0501               	andwf	1,w
  5668  0EC4  00BB               	movwf	??_Adf_Write_Register_One+8
  5669  0EC5  3141               	addfsr 1,1
  5670  0EC6  300F               	movlw	15
  5671  0EC7  0501               	andwf	1,w
  5672  0EC8  00BC               	movwf	??_Adf_Write_Register_One+9
  5673  0EC9  3141               	addfsr 1,1
  5674  0ECA  3000               	movlw	0
  5675  0ECB  0501               	andwf	1,w
  5676  0ECC  00BD               	movwf	??_Adf_Write_Register_One+10
  5677  0ECD  3141               	addfsr 1,1
  5678  0ECE  3000               	movlw	0
  5679  0ECF  0501               	andwf	1,w
  5680  0ED0  00BE               	movwf	??_Adf_Write_Register_One+11
  5681  0ED1  3002               	movlw	2
  5682  0ED2                     u1235:	
  5683  0ED2  35BB               	lslf	??_Adf_Write_Register_One+8,f
  5684  0ED3  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  5685  0ED4  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  5686  0ED5  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  5687  0ED6  0B89               	decfsz	9,f
  5688  0ED7  2ED2               	goto	u1235
  5689  0ED8  083B               	movf	??_Adf_Write_Register_One+8,w
  5690  0ED9  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  5691  0EDA  083C               	movf	??_Adf_Write_Register_One+9,w
  5692  0EDB  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  5693  0EDC  083D               	movf	??_Adf_Write_Register_One+10,w
  5694  0EDD  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  5695  0EDE  083E               	movf	??_Adf_Write_Register_One+11,w
  5696  0EDF  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  5697  0EE0  0837               	movf	??_Adf_Write_Register_One+4,w
  5698  0EE1  04B3               	iorwf	??_Adf_Write_Register_One,f
  5699  0EE2  0838               	movf	??_Adf_Write_Register_One+5,w
  5700  0EE3  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  5701  0EE4  0839               	movf	??_Adf_Write_Register_One+6,w
  5702  0EE5  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  5703  0EE6  083A               	movf	??_Adf_Write_Register_One+7,w
  5704  0EE7  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  5705  0EE8  3001               	movlw	1
  5706  0EE9  0433               	iorwf	??_Adf_Write_Register_One,w
  5707  0EEA  00BF               	movwf	Adf_Write_Register_One@reg
  5708  0EEB  3000               	movlw	0
  5709  0EEC  0434               	iorwf	??_Adf_Write_Register_One+1,w
  5710  0EED  00C0               	movwf	Adf_Write_Register_One@reg+1
  5711  0EEE  3000               	movlw	0
  5712  0EEF  0435               	iorwf	??_Adf_Write_Register_One+2,w
  5713  0EF0  00C1               	movwf	Adf_Write_Register_One@reg+2
  5714  0EF1  3000               	movlw	0
  5715  0EF2  0436               	iorwf	??_Adf_Write_Register_One+3,w
  5716  0EF3  00C2               	movwf	Adf_Write_Register_One@reg+3
  5717                           
  5718                           ;adf7012.c: 185: uint8_t reg_ptr[3];
  5719                           ;adf7012.c: 186: memcpy(reg_ptr, &reg, 3);
  5720  0EF4  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  5721  0EF5  00B3               	movwf	??_Adf_Write_Register_One
  5722  0EF6  0833               	movf	??_Adf_Write_Register_One,w
  5723  0EF7  00A0               	movwf	memcpy@s1
  5724  0EF8  3003               	movlw	3
  5725  0EF9  00A1               	movwf	memcpy@n
  5726  0EFA  3000               	movlw	0
  5727  0EFB  00A2               	movwf	memcpy@n+1
  5728  0EFC  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5729  0EFD  318D  2577  318E   	fcall	_memcpy
  5730                           
  5731                           ;adf7012.c: 187: Reverse_Array(reg_ptr,3);
  5732  0F00  3003               	movlw	3
  5733  0F01  0020               	movlb	0	; select bank0
  5734  0F02  00B3               	movwf	??_Adf_Write_Register_One
  5735  0F03  0833               	movf	??_Adf_Write_Register_One,w
  5736  0F04  00A7               	movwf	Reverse_Array@length
  5737  0F05  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5738  0F06  3183  2394  318E   	fcall	_Reverse_Array
  5739                           
  5740                           ;adf7012.c: 188: Write_Adf7012_Reg(reg_ptr, 3);
  5741  0F09  3003               	movlw	3
  5742  0F0A  0020               	movlb	0	; select bank0
  5743  0F0B  00B3               	movwf	??_Adf_Write_Register_One
  5744  0F0C  0833               	movf	??_Adf_Write_Register_One,w
  5745  0F0D  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5746  0F0E  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5747  0F0F  318E  2668         	fcall	_Write_Adf7012_Reg
  5748  0F11  0008               	return
  5749  0F12                     __end_of_Adf_Write_Register_One:	
  5750                           
  5751                           	psect	text31
  5752  0E68                     __ptext31:	
  5753 ;; *************** function _Write_Adf7012_Reg *****************
  5754 ;; Defined at:
  5755 ;;		line 88 in file "utility.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  reg_value       1    wreg     PTR unsigned char 
  5758 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5759 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  5762 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5763 ;;  i               1   13[BANK0 ] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  1    wreg      unsigned char 
  5766 ;; Registers used:
  5767 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5773 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5774 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5775 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5776 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5777 ;;Total ram usage:        4 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    6
  5780 ;; This function calls:
  5781 ;;		_Delay_ms
  5782 ;;		_Spi_Byte_Send
  5783 ;; This function is called by:
  5784 ;;		_Adf_Write_Register_Zero
  5785 ;;		_Adf_Write_Register_One
  5786 ;;		_Adf_Write_Register_Two
  5787 ;;		_Adf_Write_Register_Three
  5788 ;; This function uses a non-reentrant model
  5789 ;;
  5790                           
  5791                           
  5792                           ;psect for function _Write_Adf7012_Reg
  5793  0E68                     _Write_Adf7012_Reg:	
  5794                           
  5795                           ;incstack = 0
  5796                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5797                           ;Write_Adf7012_Reg@reg_value stored from wreg
  5798  0E68  0020               	movlb	0	; select bank0
  5799  0E69  00AC               	movwf	Write_Adf7012_Reg@reg_value
  5800                           
  5801                           ;utility.c: 90: uint8_t i = 0;
  5802  0E6A  01AD               	clrf	Write_Adf7012_Reg@i
  5803                           
  5804                           ;utility.c: 91: Delay_ms(1);
  5805  0E6B  3001               	movlw	1
  5806  0E6C  00A0               	movwf	Delay_ms@time_to_delay
  5807  0E6D  3000               	movlw	0
  5808  0E6E  00A1               	movwf	Delay_ms@time_to_delay+1
  5809  0E6F  318D  2534  318E   	fcall	_Delay_ms
  5810                           
  5811                           ;utility.c: 92: PORTAbits.RA4 = 0;;
  5812  0E72  0020               	movlb	0	; select bank0
  5813  0E73  120C               	bcf	12,4	;volatile
  5814                           
  5815                           ;utility.c: 93: Delay_ms(1);
  5816  0E74  3001               	movlw	1
  5817  0E75  00A0               	movwf	Delay_ms@time_to_delay
  5818  0E76  3000               	movlw	0
  5819  0E77  00A1               	movwf	Delay_ms@time_to_delay+1
  5820  0E78  318D  2534  318E   	fcall	_Delay_ms
  5821                           
  5822                           ;utility.c: 95: for (i = 0; i < size_of_reg; i++){
  5823  0E7B  0020               	movlb	0	; select bank0
  5824  0E7C  01AD               	clrf	Write_Adf7012_Reg@i
  5825  0E7D                     l1736:	
  5826  0E7D  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  5827  0E7E  022D               	subwf	Write_Adf7012_Reg@i,w
  5828  0E7F  1803               	btfsc	3,0
  5829  0E80  2E91               	goto	l1738
  5830                           
  5831                           ;utility.c: 96: Spi_Byte_Send(*(reg_value+i));
  5832  0E81  082D               	movf	Write_Adf7012_Reg@i,w
  5833  0E82  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  5834  0E83  00AB               	movwf	??_Write_Adf7012_Reg
  5835  0E84  082B               	movf	??_Write_Adf7012_Reg,w
  5836  0E85  0086               	movwf	6
  5837  0E86  0187               	clrf	7
  5838  0E87  0801               	movf	1,w
  5839  0E88  318D  25A0  318E   	fcall	_Spi_Byte_Send
  5840  0E8B  3001               	movlw	1
  5841  0E8C  0020               	movlb	0	; select bank0
  5842  0E8D  00AB               	movwf	??_Write_Adf7012_Reg
  5843  0E8E  082B               	movf	??_Write_Adf7012_Reg,w
  5844  0E8F  07AD               	addwf	Write_Adf7012_Reg@i,f
  5845  0E90  2E7D               	goto	l1736
  5846  0E91                     l1738:	
  5847                           
  5848                           ;utility.c: 97: }
  5849                           ;utility.c: 99: Delay_ms(1);
  5850  0E91  3001               	movlw	1
  5851  0E92  00A0               	movwf	Delay_ms@time_to_delay
  5852  0E93  3000               	movlw	0
  5853  0E94  00A1               	movwf	Delay_ms@time_to_delay+1
  5854  0E95  318D  2534  318E   	fcall	_Delay_ms
  5855                           
  5856                           ;utility.c: 100: PORTAbits.RA4 = 1;;
  5857  0E98  0020               	movlb	0	; select bank0
  5858  0E99  160C               	bsf	12,4	;volatile
  5859                           
  5860                           ;utility.c: 102: Delay_ms(1);
  5861  0E9A  3001               	movlw	1
  5862  0E9B  00A0               	movwf	Delay_ms@time_to_delay
  5863  0E9C  3000               	movlw	0
  5864  0E9D  00A1               	movwf	Delay_ms@time_to_delay+1
  5865  0E9E  318D  2534         	fcall	_Delay_ms
  5866  0EA0  0008               	return
  5867  0EA1                     __end_of_Write_Adf7012_Reg:	
  5868                           ;utility.c: 103: return 1;
  5869                           ;	Return value of _Write_Adf7012_Reg is never used
  5870                           
  5871                           
  5872                           	psect	text32
  5873  0DA0                     __ptext32:	
  5874 ;; *************** function _Spi_Byte_Send *****************
  5875 ;; Defined at:
  5876 ;;		line 226 in file "utility.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  data            1    wreg     unsigned char 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  data            1    7[BANK0 ] unsigned char 
  5881 ;;  i               1    9[BANK0 ] unsigned char 
  5882 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  1    wreg      unsigned char 
  5885 ;; Registers used:
  5886 ;;		wreg, status,2, status,0, pclath, cstack
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5893 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5895 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5896 ;;Total ram usage:        4 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    5
  5899 ;; This function calls:
  5900 ;;		_Delay_ms
  5901 ;; This function is called by:
  5902 ;;		_Write_Adf7012_Reg
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           
  5907                           ;psect for function _Spi_Byte_Send
  5908  0DA0                     _Spi_Byte_Send:	
  5909                           
  5910                           ;incstack = 0
  5911                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  5912                           ;Spi_Byte_Send@data stored from wreg
  5913  0DA0  0020               	movlb	0	; select bank0
  5914  0DA1  00A7               	movwf	Spi_Byte_Send@data
  5915                           
  5916                           ;utility.c: 228: PORTAbits.RA2 = 0;
  5917  0DA2  110C               	bcf	12,2	;volatile
  5918                           
  5919                           ;utility.c: 229: uint8_t i;
  5920                           ;utility.c: 230: uint8_t data_to_send;
  5921                           ;utility.c: 231: data_to_send = data;
  5922  0DA3  0827               	movf	Spi_Byte_Send@data,w
  5923  0DA4  00A6               	movwf	??_Spi_Byte_Send
  5924  0DA5  0826               	movf	??_Spi_Byte_Send,w
  5925  0DA6  00A8               	movwf	Spi_Byte_Send@data_to_send
  5926                           
  5927                           ;utility.c: 232: for(i = 0; i <8; i++){
  5928  0DA7  01A9               	clrf	Spi_Byte_Send@i
  5929  0DA8                     L5:	
  5930  0DA8  3008               	movlw	8
  5931  0DA9  0229               	subwf	Spi_Byte_Send@i,w
  5932  0DAA  1803               	btfsc	3,0
  5933  0DAB  0008               	return
  5934                           
  5935                           ;utility.c: 234: if(data_to_send & 0x80)
  5936  0DAC  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  5937  0DAD  2DB0               	goto	l223
  5938                           
  5939                           ;utility.c: 235: PORTCbits.RC2 = 1;
  5940  0DAE  150E               	bsf	14,2	;volatile
  5941  0DAF  2DB1               	goto	l1700
  5942  0DB0                     l223:	
  5943                           
  5944                           ;utility.c: 236: else
  5945                           ;utility.c: 237: PORTCbits.RC2 = 0;
  5946  0DB0  110E               	bcf	14,2	;volatile
  5947  0DB1                     l1700:	
  5948                           
  5949                           ;utility.c: 239: data_to_send <<= 1;
  5950  0DB1  1003               	clrc
  5951  0DB2  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  5952                           
  5953                           ;utility.c: 241: PORTAbits.RA2 = 1;
  5954  0DB3  150C               	bsf	12,2	;volatile
  5955                           
  5956                           ;utility.c: 242: Delay_ms(1);
  5957  0DB4  3001               	movlw	1
  5958  0DB5  00A0               	movwf	Delay_ms@time_to_delay
  5959  0DB6  3000               	movlw	0
  5960  0DB7  00A1               	movwf	Delay_ms@time_to_delay+1
  5961  0DB8  318D  2534  318D   	fcall	_Delay_ms
  5962                           
  5963                           ;utility.c: 243: PORTAbits.RA2 = 0;
  5964  0DBB  0020               	movlb	0	; select bank0
  5965  0DBC  110C               	bcf	12,2	;volatile
  5966                           
  5967                           ;utility.c: 244: Delay_ms(1);
  5968  0DBD  3001               	movlw	1
  5969  0DBE  00A0               	movwf	Delay_ms@time_to_delay
  5970  0DBF  3000               	movlw	0
  5971  0DC0  00A1               	movwf	Delay_ms@time_to_delay+1
  5972  0DC1  318D  2534  318D   	fcall	_Delay_ms
  5973  0DC4  3001               	movlw	1
  5974  0DC5  0020               	movlb	0	; select bank0
  5975  0DC6  00A6               	movwf	??_Spi_Byte_Send
  5976  0DC7  0826               	movf	??_Spi_Byte_Send,w
  5977  0DC8  07A9               	addwf	Spi_Byte_Send@i,f
  5978  0DC9  2DA8               	goto	L5
  5979  0DCA                     __end_of_Spi_Byte_Send:	
  5980                           ;utility.c: 246: }
  5981                           ;utility.c: 247: return 1;
  5982                           ;	Return value of _Spi_Byte_Send is never used
  5983                           
  5984                           
  5985                           	psect	text33
  5986  0394                     __ptext33:	
  5987 ;; *************** function _Reverse_Array *****************
  5988 ;; Defined at:
  5989 ;;		line 204 in file "utility.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  input           1    wreg     PTR unsigned char 
  5992 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5993 ;;  length          1    7[BANK0 ] unsigned char 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  input           1   17[BANK0 ] PTR unsigned char 
  5996 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5997 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  5998 ;;  i               1   18[BANK0 ] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      unsigned char 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6008 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6010 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6011 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6012 ;;Total ram usage:       12 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    4
  6015 ;; This function calls:
  6016 ;;		_memcpy
  6017 ;; This function is called by:
  6018 ;;		_Adf_Write_Register_Zero
  6019 ;;		_Adf_Write_Register_One
  6020 ;;		_Adf_Write_Register_Two
  6021 ;;		_Adf_Write_Register_Three
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           
  6026                           ;psect for function _Reverse_Array
  6027  0394                     _Reverse_Array:	
  6028                           
  6029                           ;incstack = 0
  6030                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6031                           ;Reverse_Array@input stored from wreg
  6032  0394  0020               	movlb	0	; select bank0
  6033  0395  00B1               	movwf	Reverse_Array@input
  6034                           
  6035                           ;utility.c: 205: uint8_t i = 0;
  6036  0396  01B2               	clrf	Reverse_Array@i
  6037                           
  6038                           ;utility.c: 206: uint8_t buffer_array[4] = {0};
  6039  0397  0022               	movlb	2	; select bank2
  6040  0398  0823               	movf	(Reverse_Array@F3148+3)^(0+256),w
  6041  0399  0020               	movlb	0	; select bank0
  6042  039A  00B0               	movwf	Reverse_Array@buffer_array+3
  6043  039B  0022               	movlb	2	; select bank2
  6044  039C  0822               	movf	(Reverse_Array@F3148+2)^(0+256),w
  6045  039D  0020               	movlb	0	; select bank0
  6046  039E  00AF               	movwf	Reverse_Array@buffer_array+2
  6047  039F  0022               	movlb	2	; select bank2
  6048  03A0  0821               	movf	(Reverse_Array@F3148+1)^(0+256),w
  6049  03A1  0020               	movlb	0	; select bank0
  6050  03A2  00AE               	movwf	Reverse_Array@buffer_array+1
  6051  03A3  0022               	movlb	2	; select bank2
  6052  03A4  0820               	movf	Reverse_Array@F3148^(0+256),w
  6053  03A5  0020               	movlb	0	; select bank0
  6054  03A6  00AD               	movwf	Reverse_Array@buffer_array
  6055                           
  6056                           ;utility.c: 207: memcpy(buffer_array, input, length);
  6057  03A7  0831               	movf	Reverse_Array@input,w
  6058  03A8  00A8               	movwf	??_Reverse_Array
  6059  03A9  0828               	movf	??_Reverse_Array,w
  6060  03AA  00A0               	movwf	memcpy@s1
  6061  03AB  0827               	movf	Reverse_Array@length,w
  6062  03AC  00A9               	movwf	??_Reverse_Array+1
  6063  03AD  01AA               	clrf	??_Reverse_Array+2
  6064  03AE  0829               	movf	??_Reverse_Array+1,w
  6065  03AF  00A1               	movwf	memcpy@n
  6066  03B0  082A               	movf	??_Reverse_Array+2,w
  6067  03B1  00A2               	movwf	memcpy@n+1
  6068  03B2  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6069  03B3  318D  2577  3183   	fcall	_memcpy
  6070                           
  6071                           ;utility.c: 209: for(i = 0; i<length; i++){
  6072  03B6  0020               	movlb	0	; select bank0
  6073  03B7  01B2               	clrf	Reverse_Array@i
  6074  03B8                     l1756:	
  6075  03B8  0827               	movf	Reverse_Array@length,w
  6076  03B9  0232               	subwf	Reverse_Array@i,w
  6077  03BA  1803               	btfsc	3,0
  6078  03BB  0008               	return
  6079                           
  6080                           ;utility.c: 210: *(input+i) = *(buffer_array+(length-1)-i);
  6081  03BC  30FF               	movlw	-1
  6082  03BD  0727               	addwf	Reverse_Array@length,w
  6083  03BE  00A8               	movwf	??_Reverse_Array
  6084  03BF  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6085  03C0  0728               	addwf	??_Reverse_Array,w
  6086  03C1  00A9               	movwf	??_Reverse_Array+1
  6087  03C2  0332               	decf	Reverse_Array@i,w
  6088  03C3  3AFF               	xorlw	255
  6089  03C4  0729               	addwf	??_Reverse_Array+1,w
  6090  03C5  00AA               	movwf	??_Reverse_Array+2
  6091  03C6  082A               	movf	??_Reverse_Array+2,w
  6092  03C7  0086               	movwf	6
  6093  03C8  0187               	clrf	7
  6094  03C9  0801               	movf	1,w
  6095  03CA  00AB               	movwf	??_Reverse_Array+3
  6096  03CB  0832               	movf	Reverse_Array@i,w
  6097  03CC  0731               	addwf	Reverse_Array@input,w
  6098  03CD  00AC               	movwf	??_Reverse_Array+4
  6099  03CE  082C               	movf	??_Reverse_Array+4,w
  6100  03CF  0086               	movwf	6
  6101  03D0  0187               	clrf	7
  6102  03D1  082B               	movf	??_Reverse_Array+3,w
  6103  03D2  0081               	movwf	1
  6104  03D3  3001               	movlw	1
  6105  03D4  00A8               	movwf	??_Reverse_Array
  6106  03D5  0828               	movf	??_Reverse_Array,w
  6107  03D6  07B2               	addwf	Reverse_Array@i,f
  6108  03D7  2BB8               	goto	l1756
  6109  03D8                     __end_of_Reverse_Array:	
  6110                           ;utility.c: 211: }
  6111                           ;utility.c: 215: return 1;
  6112                           ;	Return value of _Reverse_Array is never used
  6113                           
  6114                           
  6115                           	psect	text34
  6116  0D77                     __ptext34:	
  6117 ;; *************** function _memcpy *****************
  6118 ;; Defined at:
  6119 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6120 ;; Parameters:    Size  Location     Type
  6121 ;;  d1              1    wreg     PTR void 
  6122 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6123 ;;		 -> Reverse_Array@buffer_array(4), 
  6124 ;;  s1              1    0[BANK0 ] PTR const void 
  6125 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6126 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6127 ;;  n               2    1[BANK0 ] unsigned int 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  d1              1    6[BANK0 ] PTR void 
  6130 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6131 ;;		 -> Reverse_Array@buffer_array(4), 
  6132 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6133 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6134 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6135 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6136 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6137 ;;		 -> Reverse_Array@buffer_array(4), 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      PTR void 
  6140 ;; Registers used:
  6141 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6147 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;Total ram usage:        7 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    3
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_Reverse_Array
  6158 ;;		_Adf_Write_Register_Zero
  6159 ;;		_Adf_Write_Register_One
  6160 ;;		_Adf_Write_Register_Two
  6161 ;;		_Adf_Write_Register_Three
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           
  6166                           ;psect for function _memcpy
  6167  0D77                     _memcpy:	
  6168                           
  6169                           ;incstack = 0
  6170                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6171                           ;memcpy@d1 stored from wreg
  6172  0D77  0020               	movlb	0	; select bank0
  6173  0D78  00A6               	movwf	memcpy@d1
  6174  0D79  0820               	movf	memcpy@s1,w
  6175  0D7A  00A3               	movwf	??_memcpy
  6176  0D7B  0823               	movf	??_memcpy,w
  6177  0D7C  00A5               	movwf	memcpy@s
  6178  0D7D  0826               	movf	memcpy@d1,w
  6179  0D7E  00A3               	movwf	??_memcpy
  6180  0D7F  0823               	movf	??_memcpy,w
  6181  0D80  00A4               	movwf	memcpy@d
  6182  0D81                     l1722:	
  6183  0D81  3001               	movlw	1
  6184  0D82  02A1               	subwf	memcpy@n,f
  6185  0D83  3000               	movlw	0
  6186  0D84  3BA2               	subwfb	memcpy@n+1,f
  6187  0D85  30FF               	movlw	255
  6188  0D86  0622               	xorwf	memcpy@n+1,w
  6189  0D87  1D03               	skipz
  6190  0D88  2D8B               	goto	u1115
  6191  0D89  30FF               	movlw	255
  6192  0D8A  0621               	xorwf	memcpy@n,w
  6193  0D8B                     u1115:	
  6194  0D8B  1903               	btfsc	3,2
  6195  0D8C  0008               	return
  6196  0D8D  0825               	movf	memcpy@s,w
  6197  0D8E  0086               	movwf	6
  6198  0D8F  0187               	clrf	7
  6199  0D90  0801               	movf	1,w
  6200  0D91  00A3               	movwf	??_memcpy
  6201  0D92  0824               	movf	memcpy@d,w
  6202  0D93  0086               	movwf	6
  6203  0D94  0187               	clrf	7
  6204  0D95  0823               	movf	??_memcpy,w
  6205  0D96  0081               	movwf	1
  6206  0D97  3001               	movlw	1
  6207  0D98  00A3               	movwf	??_memcpy
  6208  0D99  0823               	movf	??_memcpy,w
  6209  0D9A  07A5               	addwf	memcpy@s,f
  6210  0D9B  3001               	movlw	1
  6211  0D9C  00A3               	movwf	??_memcpy
  6212  0D9D  0823               	movf	??_memcpy,w
  6213  0D9E  07A4               	addwf	memcpy@d,f
  6214  0D9F  2D81               	goto	l1722
  6215  0DA0                     __end_of_memcpy:	
  6216                           ;	Return value of _memcpy is never used
  6217                           
  6218                           
  6219                           	psect	text35
  6220  0BF8                     __ptext35:	
  6221 ;; *************** function _Adf_Locked *****************
  6222 ;; Defined at:
  6223 ;;		line 273 in file "adf7012.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;		None
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;		None
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      unsigned char 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0, pclath, cstack
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6241 ;;Total ram usage:        0 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; Hardware stack levels required when called:    6
  6244 ;; This function calls:
  6245 ;;		_Read_Adf7012_Muxout
  6246 ;; This function is called by:
  6247 ;;		_Adf_Lock
  6248 ;; This function uses a non-reentrant model
  6249 ;;
  6250                           
  6251                           
  6252                           ;psect for function _Adf_Locked
  6253  0BF8                     _Adf_Locked:	
  6254                           
  6255                           ;adf7012.c: 275: return Read_Adf7012_Muxout();
  6256                           
  6257                           ;incstack = 0
  6258                           ; Regs used in _Adf_Locked: [wreg+status,2+status,0+pclath+cstack]
  6259  0BF8  318C  244F         	fcall	_Read_Adf7012_Muxout
  6260  0BFA  0008               	return
  6261  0BFB                     __end_of_Adf_Locked:	
  6262                           
  6263                           	psect	text36
  6264  0C4F                     __ptext36:	
  6265 ;; *************** function _Read_Adf7012_Muxout *****************
  6266 ;; Defined at:
  6267 ;;		line 68 in file "utility.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  1    wreg      unsigned char 
  6274 ;; Registers used:
  6275 ;;		wreg, status,2, status,0, pclath, cstack
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6285 ;;Total ram usage:        0 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    5
  6288 ;; This function calls:
  6289 ;;		_Delay_ms
  6290 ;; This function is called by:
  6291 ;;		_Adf_Locked
  6292 ;;		_Ptt_On
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           
  6297                           ;psect for function _Read_Adf7012_Muxout
  6298  0C4F                     _Read_Adf7012_Muxout:	
  6299                           
  6300                           ;utility.c: 70: Delay_ms(1);
  6301                           
  6302                           ;incstack = 0
  6303                           ; Regs used in _Read_Adf7012_Muxout: [wreg+status,2+status,0+pclath+cstack]
  6304  0C4F  3001               	movlw	1
  6305  0C50  0020               	movlb	0	; select bank0
  6306  0C51  00A0               	movwf	Delay_ms@time_to_delay
  6307  0C52  3000               	movlw	0
  6308  0C53  00A1               	movwf	Delay_ms@time_to_delay+1
  6309  0C54  318D  2534  318C   	fcall	_Delay_ms
  6310                           
  6311                           ;utility.c: 72: if(PORTCbits.RC5)
  6312  0C57  0020               	movlb	0	; select bank0
  6313  0C58  1E8E               	btfss	14,5	;volatile
  6314  0C59  2C5C               	goto	l1864
  6315                           
  6316                           ;utility.c: 73: return 1;
  6317  0C5A  3001               	movlw	1
  6318  0C5B  0008               	return
  6319  0C5C                     l1864:	
  6320                           
  6321                           ;utility.c: 74: else
  6322                           ;utility.c: 75: return 0;
  6323  0C5C  3000               	movlw	0
  6324  0C5D  0008               	return
  6325  0C5E                     __end_of_Read_Adf7012_Muxout:	
  6326                           
  6327                           	psect	text37
  6328  0D34                     __ptext37:	
  6329 ;; *************** function _Delay_ms *****************
  6330 ;; Defined at:
  6331 ;;		line 46 in file "utility.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;  i               2    4[BANK0 ] unsigned int 
  6336 ;; Return value:  Size  Location     Type
  6337 ;;		None               void
  6338 ;; Registers used:
  6339 ;;		wreg, status,2, status,0, pclath, cstack
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6345 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6346 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6347 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6349 ;;Total ram usage:        6 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; Hardware stack levels required when called:    4
  6352 ;; This function calls:
  6353 ;;		_Dac0_Start_Hold
  6354 ;; This function is called by:
  6355 ;;		_main
  6356 ;;		_Read_Adf7012_Muxout
  6357 ;;		_Write_Adf7012_Reg
  6358 ;;		_Spi_Byte_Send
  6359 ;;		_Adf_Reset
  6360 ;;		_Adf_Lock
  6361 ;;		_Radio_Setup
  6362 ;;		_Ptt_On
  6363 ;;		_Ptt_Off
  6364 ;;		_Modem_Flush_Frame
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           
  6369                           ;psect for function _Delay_ms
  6370  0D34                     _Delay_ms:	
  6371                           
  6372                           ;utility.c: 48: uint16_t i=0;
  6373                           
  6374                           ;incstack = 0
  6375                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  6376  0D34  0020               	movlb	0	; select bank0
  6377  0D35  01A4               	clrf	Delay_ms@i
  6378  0D36  01A5               	clrf	Delay_ms@i+1
  6379                           
  6380                           ;utility.c: 51: Dac0_Start_Hold();
  6381  0D37  318C  2404  318D   	fcall	_Dac0_Start_Hold
  6382                           
  6383                           ;utility.c: 52: for(i=0; i<time_to_delay; i++){
  6384  0D3A  0020               	movlb	0	; select bank0
  6385  0D3B  01A4               	clrf	Delay_ms@i
  6386  0D3C  01A5               	clrf	Delay_ms@i+1
  6387  0D3D                     l193:	
  6388  0D3D  0821               	movf	Delay_ms@time_to_delay+1,w
  6389  0D3E  0225               	subwf	Delay_ms@i+1,w
  6390  0D3F  1D03               	skipz
  6391  0D40  2D43               	goto	u1075
  6392  0D41  0820               	movf	Delay_ms@time_to_delay,w
  6393  0D42  0224               	subwf	Delay_ms@i,w
  6394  0D43                     u1075:	
  6395  0D43  1803               	btfsc	3,0
  6396  0D44  0008               	return
  6397                           
  6398                           ;utility.c: 53: _delay((unsigned long)((1)*(32000000/4000.0)));
  6399  0D45  300B               	movlw	11
  6400  0D46  00A3               	movwf	??_Delay_ms+1
  6401  0D47  3062               	movlw	98
  6402  0D48  00A2               	movwf	??_Delay_ms
  6403  0D49                     u2977:	
  6404  0D49  0BA2               	decfsz	??_Delay_ms,f
  6405  0D4A  2D49               	goto	u2977
  6406  0D4B  0BA3               	decfsz	??_Delay_ms+1,f
  6407  0D4C  2D49               	goto	u2977
  6408  0D4D  0000               	nop
  6409  0D4E  3001               	movlw	1
  6410  0D4F  0020               	movlb	0	; select bank0
  6411  0D50  07A4               	addwf	Delay_ms@i,f
  6412  0D51  3000               	movlw	0
  6413  0D52  3DA5               	addwfc	Delay_ms@i+1,f
  6414  0D53  2D3D               	goto	l193
  6415  0D54                     __end_of_Delay_ms:	
  6416                           
  6417                           	psect	text38
  6418  0C04                     __ptext38:	
  6419 ;; *************** function _Dac0_Start_Hold *****************
  6420 ;; Defined at:
  6421 ;;		line 287 in file "utility.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;		None
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;		None               void
  6428 ;; Registers used:
  6429 ;;		wreg
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;Total ram usage:        0 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; Hardware stack levels required when called:    3
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_main
  6446 ;;		_Delay_ms
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           
  6451                           ;psect for function _Dac0_Start_Hold
  6452  0C04                     _Dac0_Start_Hold:	
  6453                           
  6454                           ;utility.c: 288: DACEN = 1;
  6455                           
  6456                           ;incstack = 0
  6457                           ; Regs used in _Dac0_Start_Hold: [wreg]
  6458  0C04  0022               	movlb	2	; select bank2
  6459  0C05  1798               	bsf	24,7	;volatile
  6460                           
  6461                           ;utility.c: 289: DACCON1 = 0x10;
  6462  0C06  3010               	movlw	16
  6463  0C07  0099               	movwf	25	;volatile
  6464  0C08  0008               	return
  6465  0C09                     __end_of_Dac0_Start_Hold:	
  6466                           
  6467                           	psect	text39
  6468  0C09                     __ptext39:	
  6469 ;; *************** function _Adc1_Start *****************
  6470 ;; Defined at:
  6471 ;;		line 298 in file "utility.c"
  6472 ;; Parameters:    Size  Location     Type
  6473 ;;		None
  6474 ;; Auto vars:     Size  Location     Type
  6475 ;;		None
  6476 ;; Return value:  Size  Location     Type
  6477 ;;		None               void
  6478 ;; Registers used:
  6479 ;;		None
  6480 ;; Tracked objects:
  6481 ;;		On entry : 0/0
  6482 ;;		On exit  : 0/0
  6483 ;;		Unchanged: 0/0
  6484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6489 ;;Total ram usage:        0 bytes
  6490 ;; Hardware stack levels used:    1
  6491 ;; Hardware stack levels required when called:    3
  6492 ;; This function calls:
  6493 ;;		Nothing
  6494 ;; This function is called by:
  6495 ;;		_main
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           
  6500                           ;psect for function _Adc1_Start
  6501  0C09                     _Adc1_Start:	
  6502                           
  6503                           ;utility.c: 299: ADIF = 0;
  6504                           
  6505                           ;incstack = 0
  6506                           ; Regs used in _Adc1_Start: []
  6507  0C09  0020               	movlb	0	; select bank0
  6508  0C0A  1311               	bcf	17,6	;volatile
  6509                           
  6510                           ;utility.c: 300: ADON = 1;
  6511  0C0B  0021               	movlb	1	; select bank1
  6512  0C0C  141D               	bsf	29,0	;volatile
  6513                           
  6514                           ;utility.c: 301: ADIE = 1;
  6515  0C0D  1711               	bsf	17,6	;volatile
  6516  0C0E  0008               	return
  6517  0C0F                     __end_of_Adc1_Start:	
  6518                           
  6519                           	psect	intentry
  6520  0004                     __pintentry:	
  6521 ;; *************** function _global_interrupt *****************
  6522 ;; Defined at:
  6523 ;;		line 42 in file "main.c"
  6524 ;; Parameters:    Size  Location     Type
  6525 ;;		None
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;		None
  6528 ;; Return value:  Size  Location     Type
  6529 ;;		None               void
  6530 ;; Registers used:
  6531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6539 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;Total ram usage:        2 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    2
  6544 ;; This function calls:
  6545 ;;		_Sinus_Generator
  6546 ;; This function is called by:
  6547 ;;		Interrupt level 1
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551  0004                     _global_interrupt:	
  6552                           
  6553                           ;incstack = 0
  6554                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6555  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6556  0005  3180               	pagesel	$
  6557  0006  0020               	movlb	0	; select bank0
  6558  0007  087F               	movf	127,w
  6559  0008  00F8               	movwf	??_global_interrupt+1
  6560                           
  6561                           ;main.c: 44: INTCON &= ~0x80;
  6562  0009  307F               	movlw	127
  6563  000A  00F7               	movwf	??_global_interrupt
  6564  000B  0877               	movf	??_global_interrupt,w
  6565  000C  058B               	andwf	11,f	;volatile
  6566                           
  6567                           ;main.c: 47: if(ADIF){
  6568  000D  1F11               	btfss	17,6	;volatile
  6569  000E  281B               	goto	i1l119
  6570                           
  6571                           ;main.c: 49: adc_sonuc_high = ADRESH;
  6572  000F  0021               	movlb	1	; select bank1
  6573  0010  081C               	movf	28,w	;volatile
  6574  0011  00F7               	movwf	??_global_interrupt
  6575  0012  0877               	movf	??_global_interrupt,w
  6576  0013  00CF               	movwf	_adc_sonuc_high^(0+128)
  6577                           
  6578                           ;main.c: 50: adc_sonuc_low = ADRESL;
  6579  0014  081B               	movf	27,w	;volatile
  6580  0015  00F7               	movwf	??_global_interrupt
  6581  0016  0877               	movf	??_global_interrupt,w
  6582  0017  00D0               	movwf	_adc_sonuc_low^(0+128)
  6583                           
  6584                           ;main.c: 52: ADIF = 0;
  6585  0018  0020               	movlb	0	; select bank0
  6586  0019  1311               	bcf	17,6	;volatile
  6587                           
  6588                           ;main.c: 54: return;
  6589  001A  2854               	goto	i1l120
  6590  001B                     i1l119:	
  6591                           
  6592                           ;main.c: 55: }
  6593                           ;main.c: 58: if(PIR1 & 0x04){
  6594  001B  1D11               	btfss	17,2	;volatile
  6595  001C  2849               	goto	i1l121
  6596                           
  6597                           ;main.c: 60: Change_to_New_Baud = 1;
  6598  001D  01EE               	clrf	_Change_to_New_Baud
  6599  001E  0AEE               	incf	_Change_to_New_Baud,f
  6600                           
  6601                           ;main.c: 64: TMR1H = 0x00;
  6602  001F  0197               	clrf	23	;volatile
  6603                           
  6604                           ;main.c: 65: TMR1L = 0x00;
  6605  0020  0196               	clrf	22	;volatile
  6606                           
  6607                           ;main.c: 67: PIR1 &= ~0x04;
  6608  0021  30FB               	movlw	251
  6609  0022  00F7               	movwf	??_global_interrupt
  6610  0023  0877               	movf	??_global_interrupt,w
  6611  0024  0591               	andwf	17,f	;volatile
  6612                           
  6613                           ;main.c: 69: Systick_Counter += 1;
  6614  0025  3001               	movlw	1
  6615  0026  0022               	movlb	2	; select bank2
  6616  0027  07AC               	addwf	_Systick_Counter^(0+256),f
  6617  0028  3000               	movlw	0
  6618  0029  3DAD               	addwfc	(_Systick_Counter+1)^(0+256),f
  6619  002A  3000               	movlw	0
  6620  002B  3DAE               	addwfc	(_Systick_Counter+2)^(0+256),f
  6621  002C  3000               	movlw	0
  6622  002D  3DAF               	addwfc	(_Systick_Counter+3)^(0+256),f
  6623                           
  6624                           ;main.c: 70: if(Systick_Counter > 10000){
  6625  002E  3000               	movlw	0
  6626  002F  022F               	subwf	(_Systick_Counter+3)^(0+256),w
  6627  0030  1D03               	skipz
  6628  0031  283C               	goto	u241_25
  6629  0032  3000               	movlw	0
  6630  0033  022E               	subwf	(_Systick_Counter+2)^(0+256),w
  6631  0034  1D03               	skipz
  6632  0035  283C               	goto	u241_25
  6633  0036  3027               	movlw	39
  6634  0037  022D               	subwf	(_Systick_Counter+1)^(0+256),w
  6635  0038  1D03               	skipz
  6636  0039  283C               	goto	u241_25
  6637  003A  3011               	movlw	17
  6638  003B  022C               	subwf	_Systick_Counter^(0+256),w
  6639  003C                     u241_25:	
  6640  003C  1C03               	skipc
  6641  003D  2854               	goto	i1l120
  6642                           
  6643                           ;main.c: 71: Systick_Counter = 0;
  6644  003E  3000               	movlw	0
  6645  003F  00AF               	movwf	(_Systick_Counter+3)^(0+256)
  6646  0040  3000               	movlw	0
  6647  0041  00AE               	movwf	(_Systick_Counter+2)^(0+256)
  6648  0042  3000               	movlw	0
  6649  0043  00AD               	movwf	(_Systick_Counter+1)^(0+256)
  6650  0044  3000               	movlw	0
  6651  0045  00AC               	movwf	_Systick_Counter^(0+256)
  6652                           
  6653                           ;main.c: 72: ADCON0 |= 0b00000010;
  6654  0046  0021               	movlb	1	; select bank1
  6655  0047  149D               	bsf	29,1	;volatile
  6656                           
  6657                           ;main.c: 73: }
  6658                           ;main.c: 75: return;
  6659  0048  2854               	goto	i1l120
  6660  0049                     i1l121:	
  6661                           
  6662                           ;main.c: 76: }
  6663                           ;main.c: 80: if(INTCON & 0x04){
  6664  0049  1D0B               	btfss	11,2	;volatile
  6665  004A  2853               	goto	i1l123
  6666                           
  6667                           ;main.c: 82: Sinus_Generator();
  6668  004B  3185  257B  3180   	fcall	_Sinus_Generator
  6669                           
  6670                           ;main.c: 84: INTCON &= ~0x04;
  6671  004E  30FB               	movlw	251
  6672  004F  00F7               	movwf	??_global_interrupt
  6673  0050  0877               	movf	??_global_interrupt,w
  6674  0051  058B               	andwf	11,f	;volatile
  6675                           
  6676                           ;main.c: 86: return;
  6677  0052  2854               	goto	i1l120
  6678  0053                     i1l123:	
  6679                           
  6680                           ;main.c: 87: }
  6681                           ;main.c: 92: INTCON |= 0x80;
  6682  0053  178B               	bsf	11,7	;volatile
  6683  0054                     i1l120:	
  6684  0054  0878               	movf	??_global_interrupt+1,w
  6685  0055  0020               	movlb	0	; select bank0
  6686  0056  00FF               	movwf	127
  6687  0057  107E               	bcf	126,0	;clear compiler interrupt flag
  6688  0058  0009               	retfie
  6689  0059                     __end_of_global_interrupt:	
  6690                           
  6691                           	psect	text41
  6692  057B                     __ptext41:	
  6693 ;; *************** function _Sinus_Generator *****************
  6694 ;; Defined at:
  6695 ;;		line 89 in file "audio_tone.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;		None
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;		None               void
  6702 ;; Registers used:
  6703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;Total ram usage:        6 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    1
  6716 ;; This function calls:
  6717 ;;		_Send_Vcxo_Signal
  6718 ;;		_Timer0_Stop
  6719 ;; This function is called by:
  6720 ;;		_global_interrupt
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           
  6725                           ;psect for function _Sinus_Generator
  6726  057B                     _Sinus_Generator:	
  6727                           
  6728                           ;audio_tone.c: 91: uint8_t Audio_Signal;
  6729                           ;audio_tone.c: 92: static uint8_t tone_index = 0;
  6730                           ;audio_tone.c: 93: if (MODEM_TRANSMITTING == 1) {
  6731                           
  6732                           ;incstack = 0
  6733                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6734  057B  0021               	movlb	1	; select bank1
  6735  057C  084C               	movf	_MODEM_TRANSMITTING^(0+128),w
  6736  057D  3A01               	xorlw	1
  6737  057E  1D03               	skipz
  6738  057F  0008               	return
  6739                           
  6740                           ;audio_tone.c: 96: if (packet_pos == modem_packet_size) {
  6741  0580  087C               	movf	_modem_packet_size+3,w
  6742  0581  0022               	movlb	2	; select bank2
  6743  0582  0633               	xorwf	(_packet_pos+3)^(0+256),w
  6744  0583  1D03               	skipz
  6745  0584  2D8F               	goto	u178_25
  6746  0585  087B               	movf	_modem_packet_size+2,w
  6747  0586  0632               	xorwf	(_packet_pos+2)^(0+256),w
  6748  0587  1D03               	skipz
  6749  0588  2D8F               	goto	u178_25
  6750  0589  087A               	movf	_modem_packet_size+1,w
  6751  058A  0631               	xorwf	(_packet_pos+1)^(0+256),w
  6752  058B  1D03               	skipz
  6753  058C  2D8F               	goto	u178_25
  6754  058D  0879               	movf	_modem_packet_size,w
  6755  058E  0630               	xorwf	_packet_pos^(0+256),w
  6756  058F                     u178_25:	
  6757  058F  1D03               	skipz
  6758  0590  2D9D               	goto	i1l2018
  6759                           
  6760                           ;audio_tone.c: 97: MODEM_TRANSMITTING = 0;
  6761  0591  0021               	movlb	1	; select bank1
  6762  0592  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  6763                           
  6764                           ;audio_tone.c: 98: Timer0_Stop();
  6765  0593  318B  23FB  3185   	fcall	_Timer0_Stop
  6766                           
  6767                           ;audio_tone.c: 100: Send_Vcxo_Signal(0x10);
  6768  0596  3010               	movlw	16
  6769  0597  318B  23FF         	fcall	_Send_Vcxo_Signal
  6770                           
  6771                           ;audio_tone.c: 102: PTT_OFF = 1;
  6772  0599  0021               	movlb	1	; select bank1
  6773  059A  01CD               	clrf	_PTT_OFF^(0+128)
  6774  059B  0ACD               	incf	_PTT_OFF^(0+128),f
  6775                           
  6776                           ;audio_tone.c: 104: goto end_generator;
  6777  059C  0008               	return
  6778  059D                     i1l2018:	
  6779                           
  6780                           ;audio_tone.c: 105: }
  6781                           ;audio_tone.c: 108: if (current_sample_in_baud == 0) {
  6782  059D  0021               	movlb	1	; select bank1
  6783  059E  08D1               	movf	_current_sample_in_baud^(0+128),f
  6784  059F  1D03               	skipz
  6785  05A0  2DE8               	goto	i1l2038
  6786                           
  6787                           ;audio_tone.c: 109: if ((packet_pos & 7) == 0)
  6788  05A1  3007               	movlw	7
  6789  05A2  0022               	movlb	2	; select bank2
  6790  05A3  0530               	andwf	_packet_pos^(0+256),w
  6791  05A4  00F1               	movwf	??_Sinus_Generator
  6792  05A5  3000               	movlw	0
  6793  05A6  0531               	andwf	(_packet_pos+1)^(0+256),w
  6794  05A7  00F2               	movwf	??_Sinus_Generator+1
  6795  05A8  3000               	movlw	0
  6796  05A9  0532               	andwf	(_packet_pos+2)^(0+256),w
  6797  05AA  00F3               	movwf	??_Sinus_Generator+2
  6798  05AB  3000               	movlw	0
  6799  05AC  0533               	andwf	(_packet_pos+3)^(0+256),w
  6800  05AD  00F4               	movwf	??_Sinus_Generator+3
  6801  05AE  0874               	movf	??_Sinus_Generator+3,w
  6802  05AF  0473               	iorwf	??_Sinus_Generator+2,w
  6803  05B0  0472               	iorwf	??_Sinus_Generator+1,w
  6804  05B1  0471               	iorwf	??_Sinus_Generator,w
  6805  05B2  1D03               	skipz
  6806  05B3  2DCD               	goto	i1l2024
  6807                           
  6808                           ;audio_tone.c: 110: current_byte = modem_packet[packet_pos >> 3];
  6809  05B4  0830               	movf	_packet_pos^(0+256),w
  6810  05B5  00F1               	movwf	??_Sinus_Generator
  6811  05B6  0831               	movf	(_packet_pos+1)^(0+256),w
  6812  05B7  00F2               	movwf	??_Sinus_Generator+1
  6813  05B8  0832               	movf	(_packet_pos+2)^(0+256),w
  6814  05B9  00F3               	movwf	??_Sinus_Generator+2
  6815  05BA  0833               	movf	(_packet_pos+3)^(0+256),w
  6816  05BB  00F4               	movwf	??_Sinus_Generator+3
  6817  05BC  3003               	movlw	3
  6818  05BD                     u181_25:	
  6819  05BD  36F4               	lsrf	??_Sinus_Generator+3,f
  6820  05BE  0CF3               	rrf	??_Sinus_Generator+2,f
  6821  05BF  0CF2               	rrf	??_Sinus_Generator+1,f
  6822  05C0  0CF1               	rrf	??_Sinus_Generator,f
  6823  05C1  0B89               	decfsz	9,f
  6824  05C2  2DBD               	goto	u181_25
  6825  05C3  0871               	movf	??_Sinus_Generator,w
  6826  05C4  3EA0               	addlw	_modem_packet& (0+255)
  6827  05C5  0086               	movwf	6
  6828  05C6  3001               	movlw	1	; select bank3/4
  6829  05C7  0087               	movwf	7
  6830  05C8  0801               	movf	1,w
  6831  05C9  00F5               	movwf	??_Sinus_Generator+4
  6832  05CA  0875               	movf	??_Sinus_Generator+4,w
  6833  05CB  0020               	movlb	0	; select bank0
  6834  05CC  2DD1               	goto	L6
  6835  05CD                     i1l2024:	
  6836                           
  6837                           ;audio_tone.c: 111: else
  6838                           ;audio_tone.c: 112: current_byte = current_byte >> 1 ;
  6839  05CD  0020               	movlb	0	; select bank0
  6840  05CE  366F               	lsrf	_current_byte,w
  6841  05CF  00F1               	movwf	??_Sinus_Generator
  6842  05D0  0871               	movf	??_Sinus_Generator,w
  6843  05D1                     L6:	
  6844  05D1  00EF               	movwf	_current_byte
  6845                           
  6846                           ;audio_tone.c: 113: if ((current_byte & 0x01) == 0) {
  6847  05D2  186F               	btfsc	_current_byte,0
  6848  05D3  2DE8               	goto	i1l2038
  6849                           
  6850                           ;audio_tone.c: 115: if(tone_index){
  6851  05D4  0021               	movlb	1	; select bank1
  6852  05D5  084B               	movf	Sinus_Generator@tone_index^(0+128),w
  6853  05D6  1903               	btfsc	3,2
  6854  05D7  2DE0               	goto	i1l2034
  6855                           
  6856                           ;audio_tone.c: 116: phase_delta = PHASE_DELTA_1200;
  6857  05D8  0022               	movlb	2	; select bank2
  6858  05D9  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  6859  05DA  00F1               	movwf	??_Sinus_Generator
  6860  05DB  0871               	movf	??_Sinus_Generator,w
  6861  05DC  0021               	movlb	1	; select bank1
  6862  05DD  00D2               	movwf	_phase_delta^(0+128)
  6863                           
  6864                           ;audio_tone.c: 117: tone_index = 0;
  6865  05DE  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6866                           
  6867                           ;audio_tone.c: 118: }
  6868  05DF  2DE8               	goto	i1l2038
  6869  05E0                     i1l2034:	
  6870                           
  6871                           ;audio_tone.c: 119: else{
  6872                           ;audio_tone.c: 120: phase_delta = PHASE_DELTA_2200;
  6873  05E0  0022               	movlb	2	; select bank2
  6874  05E1  0828               	movf	_PHASE_DELTA_2200^(0+256),w
  6875  05E2  00F1               	movwf	??_Sinus_Generator
  6876  05E3  0871               	movf	??_Sinus_Generator,w
  6877  05E4  0021               	movlb	1	; select bank1
  6878  05E5  00D2               	movwf	_phase_delta^(0+128)
  6879                           
  6880                           ;audio_tone.c: 121: tone_index = 1;
  6881  05E6  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6882  05E7  0ACB               	incf	Sinus_Generator@tone_index^(0+128),f
  6883  05E8                     i1l2038:	
  6884                           
  6885                           ;audio_tone.c: 122: }
  6886                           ;audio_tone.c: 123: }
  6887                           ;audio_tone.c: 124: }
  6888                           ;audio_tone.c: 126: phase += phase_delta;
  6889  05E8  0021               	movlb	1	; select bank1
  6890  05E9  0852               	movf	_phase_delta^(0+128),w
  6891  05EA  00F1               	movwf	??_Sinus_Generator
  6892  05EB  0871               	movf	??_Sinus_Generator,w
  6893  05EC  07FD               	addwf	_phase,f
  6894                           
  6895                           ;audio_tone.c: 127: if(phase >= TABLE_SIZE)
  6896  05ED  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6897  05EE  0084               	movwf	4
  6898  05EF  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6899  05F0  0085               	movwf	5
  6900  05F1  3F00               	moviw [0]fsr0
  6901  05F2  00F1               	movwf	??_Sinus_Generator
  6902  05F3  3F01               	moviw [1]fsr0
  6903  05F4  00F2               	movwf	??_Sinus_Generator+1
  6904  05F5  0872               	movf	??_Sinus_Generator+1,w
  6905  05F6  3A80               	xorlw	128
  6906  05F7  3C80               	sublw	128
  6907  05F8  1D03               	skipz
  6908  05F9  2DFC               	goto	u184_25
  6909  05FA  0871               	movf	??_Sinus_Generator,w
  6910  05FB  027D               	subwf	_phase,w
  6911  05FC                     u184_25:	
  6912  05FC  1C03               	skipc
  6913  05FD  2E09               	goto	i1l2044
  6914                           
  6915                           ;audio_tone.c: 128: phase = phase - TABLE_SIZE;
  6916  05FE  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6917  05FF  0084               	movwf	4
  6918  0600  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6919  0601  0085               	movwf	5
  6920  0602  0800               	movf	0,w	;code access
  6921  0603  3AFF               	xorlw	255
  6922  0604  3E01               	addlw	1
  6923  0605  077D               	addwf	_phase,w
  6924  0606  00F1               	movwf	??_Sinus_Generator
  6925  0607  0871               	movf	??_Sinus_Generator,w
  6926  0608  00FD               	movwf	_phase
  6927  0609                     i1l2044:	
  6928                           
  6929                           ;audio_tone.c: 131: Audio_Signal = *(sine_table2 + phase);
  6930  0609  087D               	movf	_phase,w
  6931  060A  3E00               	addlw	low (_sine_table2| (0+32768))
  6932  060B  0084               	movwf	4
  6933  060C  3084               	movlw	high (_sine_table2| (0+32768))
  6934  060D  1803               	skipnc
  6935  060E  3E01               	addlw	1
  6936  060F  0085               	movwf	5
  6937  0610  0800               	movf	0,w	;code access
  6938  0611  00F1               	movwf	??_Sinus_Generator
  6939  0612  0871               	movf	??_Sinus_Generator,w
  6940  0613  00F6               	movwf	Sinus_Generator@Audio_Signal
  6941                           
  6942                           ;audio_tone.c: 132: Send_Vcxo_Signal(Audio_Signal);
  6943  0614  0876               	movf	Sinus_Generator@Audio_Signal,w
  6944  0615  318B  23FF  3185   	fcall	_Send_Vcxo_Signal
  6945                           
  6946                           ;audio_tone.c: 134: current_sample_in_baud++;
  6947  0618  3001               	movlw	1
  6948  0619  00F1               	movwf	??_Sinus_Generator
  6949  061A  0871               	movf	??_Sinus_Generator,w
  6950  061B  0021               	movlb	1	; select bank1
  6951  061C  07D1               	addwf	_current_sample_in_baud^(0+128),f
  6952                           
  6953                           ;audio_tone.c: 136: if(Change_to_New_Baud == 1) {
  6954  061D  0020               	movlb	0	; select bank0
  6955  061E  086E               	movf	_Change_to_New_Baud,w
  6956  061F  3A01               	xorlw	1
  6957  0620  1D03               	skipz
  6958  0621  0008               	return
  6959                           
  6960                           ;audio_tone.c: 137: current_sample_in_baud = 0;
  6961  0622  0021               	movlb	1	; select bank1
  6962  0623  01D1               	clrf	_current_sample_in_baud^(0+128)
  6963                           
  6964                           ;audio_tone.c: 138: packet_pos++;
  6965  0624  3001               	movlw	1
  6966  0625  0022               	movlb	2	; select bank2
  6967  0626  07B0               	addwf	_packet_pos^(0+256),f
  6968  0627  3000               	movlw	0
  6969  0628  3DB1               	addwfc	(_packet_pos+1)^(0+256),f
  6970  0629  3000               	movlw	0
  6971  062A  3DB2               	addwfc	(_packet_pos+2)^(0+256),f
  6972  062B  3000               	movlw	0
  6973  062C  3DB3               	addwfc	(_packet_pos+3)^(0+256),f
  6974                           
  6975                           ;audio_tone.c: 139: Change_to_New_Baud = 0;
  6976  062D  0020               	movlb	0	; select bank0
  6977  062E  01EE               	clrf	_Change_to_New_Baud
  6978                           
  6979                           ;audio_tone.c: 140: }
  6980                           ;audio_tone.c: 142: }
  6981                           ;audio_tone.c: 144: end_generator:
  6982  062F  0008               	return
  6983  0630                     __end_of_Sinus_Generator:	
  6984                           ;audio_tone.c: 146: return;
  6985                           
  6986                           
  6987                           	psect	text42
  6988  0BFB                     __ptext42:	
  6989 ;; *************** function _Timer0_Stop *****************
  6990 ;; Defined at:
  6991 ;;		line 258 in file "utility.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;		None
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;		None
  6996 ;; Return value:  Size  Location     Type
  6997 ;;		None               void
  6998 ;; Registers used:
  6999 ;;		status,2
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;Total ram usage:        0 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		_Sinus_Generator
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _Timer0_Stop
  7020  0BFB                     _Timer0_Stop:	
  7021                           
  7022                           ;utility.c: 259: TMR0IE = 0;
  7023                           
  7024                           ;incstack = 0
  7025                           ; Regs used in _Timer0_Stop: [status,2]
  7026  0BFB  128B               	bcf	11,5	;volatile
  7027                           
  7028                           ;utility.c: 260: TMR0 = 0x00;
  7029  0BFC  0020               	movlb	0	; select bank0
  7030  0BFD  0195               	clrf	21	;volatile
  7031  0BFE  0008               	return
  7032  0BFF                     __end_of_Timer0_Stop:	
  7033                           
  7034                           	psect	text43
  7035  0BFF                     __ptext43:	
  7036 ;; *************** function _Send_Vcxo_Signal *****************
  7037 ;; Defined at:
  7038 ;;		line 114 in file "utility.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  value           1    wreg     unsigned char 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  value           1    0[COMMON] unsigned char 
  7043 ;; Return value:  Size  Location     Type
  7044 ;;                  1    wreg      unsigned char 
  7045 ;; Registers used:
  7046 ;;		wreg
  7047 ;; Tracked objects:
  7048 ;;		On entry : 0/0
  7049 ;;		On exit  : 0/0
  7050 ;;		Unchanged: 0/0
  7051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;Total ram usage:        1 bytes
  7057 ;; Hardware stack levels used:    1
  7058 ;; This function calls:
  7059 ;;		Nothing
  7060 ;; This function is called by:
  7061 ;;		_Sinus_Generator
  7062 ;; This function uses a non-reentrant model
  7063 ;;
  7064                           
  7065                           
  7066                           ;psect for function _Send_Vcxo_Signal
  7067  0BFF                     _Send_Vcxo_Signal:	
  7068                           
  7069                           ;incstack = 0
  7070                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  7071                           ;Send_Vcxo_Signal@value stored from wreg
  7072  0BFF  00F0               	movwf	Send_Vcxo_Signal@value
  7073                           
  7074                           ;utility.c: 116: DACCON1 = value;
  7075  0C00  0870               	movf	Send_Vcxo_Signal@value,w
  7076  0C01  0022               	movlb	2	; select bank2
  7077  0C02  0099               	movwf	25	;volatile
  7078  0C03  0008               	return
  7079  0C04                     __end_of_Send_Vcxo_Signal:	
  7080                           ;utility.c: 117: return 1;
  7081                           ;	Return value of _Send_Vcxo_Signal is never used
  7082                           
  7083  007E                     btemp	set	126	;btemp
  7084  007E                     pic14e$flags	set	126
  7085  007E                     wtemp	set	126
  7086  007E                     wtemp0	set	126
  7087  0080                     wtemp1	set	128
  7088  0082                     wtemp2	set	130
  7089  0084                     wtemp3	set	132
  7090  0086                     wtemp4	set	134
  7091  0088                     wtemp5	set	136
  7092  007F                     wtemp6	set	127
  7093  007E                     ttemp	set	126
  7094  007E                     ttemp0	set	126
  7095  0081                     ttemp1	set	129
  7096  0084                     ttemp2	set	132
  7097  0087                     ttemp3	set	135
  7098  007F                     ttemp4	set	127
  7099  007E                     ltemp	set	126
  7100  007E                     ltemp0	set	126
  7101  0082                     ltemp1	set	130
  7102  0086                     ltemp2	set	134
  7103  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         146
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     78      80
    BANK1            80     28      79
    BANK2            80      0      40
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Adf_Lock
    _main->_Modem_Flush_Frame
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy
    _Read_Adf7012_Muxout->_Delay_ms

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  125823
                                             77 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                           _Adf_Lock
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                             _Ptt_On
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   23212
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   24584
                         _Modem_Init
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   24584
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1372
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1372
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Modem_Init                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   25956
                                             76 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ptt_On                                               1     1      0   24584
                                             75 BANK0      1     1      0
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (1) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adf_Lock                                             6     6      0   24675
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   21840
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    5460
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    5460
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    5460
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    5460
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    3247
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1464
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1332
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _Adf_Locked                                           0     0      0    1372
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Read_Adf7012_Muxout                                  0     0      0    1372
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             6     4      2    1372
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (4) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _global_interrupt                                     2     2      0      45
                                              7 COMMON     2     2      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (10) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (11) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Adf_Lock
     _Adf_Locked
       _Read_Adf7012_Muxout
         _Delay_ms
           _Dac0_Start_Hold
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
         _Delay_ms
           _Dac0_Start_Hold
     _Timer0_Start
   _Modem_Setup
     _Modem_Init
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ptt_On
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
     _Read_Adf7012_Muxout
       _Delay_ms
         _Dac0_Start_Hold
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _Sinus_Generator
     _Send_Vcxo_Signal
     _Timer0_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      28       9       50.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     115      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     115      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Sep 23 22:01:52 2014

                      __CFG_CP$OFF 0000            _Adf_Reset_Register_Zero 0D15  
                   Reverse_Array@i 0032                     Spi_Byte_Send@i 0029  
         __end_of_Adf_Reset_Config 0C6D                        __CFG_LVP$ON 0000  
         _Adf_Reset_Register_Three 03D8                                l223 0DB0  
                              l129 06E7                                l193 0D3D  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00C7                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 0033  
                     __CFG_IESO$ON 0000                      ??_Gpio_Config 0020  
           _Adf_Write_Register_One 0EA1             _Adf_Write_Register_Two 04C4  
                             l2000 07DC                               l2206 0CFB  
                             l2162 0227                               l1700 0DB1  
                             l2156 0214                               l2182 0265  
                             l2174 0248                               l2248 0F44  
                             l2192 02AB                               l2168 0235  
                             l1722 0D81                               l2188 028A  
                             l2196 024B                               l2198 02C5  
                             l1736 0E7D                               l1904 06DE  
                             l1738 0E91                               l2474 075D  
                             l1756 03B8                               l1852 0DEB  
                             l2476 0760                               l2468 0754  
                             l1864 0C5C                               l1894 06A0  
                             l1974 0FD1                               l1976 0FF3  
                             l1998 07BA                               _ADIE 048E  
                             _ADIF 008E                               _ADFM 04F7  
                             _ADON 04E8                               STR_1 04BE  
                             u1115 0D8B                               u1205 033C  
                             u1215 0EAA                               u1225 0EB8  
                             u1305 0092                               u1145 02D6  
                             u1075 0D43                               u1235 0ED2  
                             u1315 00A1                               u1155 02E5  
                             u1405 0128                               u1325 00B0  
                             u1245 04CD                               u1165 02F4  
                             u1415 0137                               u1335 00BF  
                             u1255 04DC                               u1175 0303  
                             u1425 0146                               u1345 00CE  
                             u1265 04F6                               u1185 0312  
                             u1505 0663                               u1514 066C  
                             u1435 0155                               u1355 00DD  
                             u1275 0505                               u1195 0321  
                             u1515 066B                               u1365 00EC  
                             u1285 0514                               u1525 0679  
                             u1605 0FA3                               u1614 0FAB  
                             u1375 00FB                               u1295 0523  
                             u1535 069E                               u1615 0FAA  
                             u1704 0794                               u2440 0724  
                             u1385 010A                               u1705 0793  
                             u1545 06AE                               u1554 06B8  
                             u1474 0644                               u1634 0FB6  
                             u1395 0119                               u1555 06B7  
                             u1475 0643                               u1635 0FB5  
                             u1724 079F                               u1484 0651  
                             u1725 079E                               u1565 06C6  
                             u1485 0650                               u1645 0FC3  
                             u1654 0FD8                               u1735 07AC  
                             u1655 0FD7                               u1744 07C1  
                             u1745 07C0                               u1665 0FE6  
                             u1905 0263                               u1755 07CF  
                             u1915 0269                               u1925 0288  
                             u1695 078C                               u1935 0297  
                             u1945 029C                               u1865 0212  
                             u1955 02AF                               u1875 0225  
                             u1965 0255                               u1885 0233  
                             u1895 0246                               u1985 0CED  
                             u2977 0D49                               _PIR1 0011  
                             _TMR0 0015                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                               _main 06E4  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      Send_Byte@byte 0029  
                    __CFG_BOREN$ON 0000                               ltemp 007E  
                             start 0059                               ttemp 007E  
                  _Sinus_Generator 057B                               wtemp 007E  
                    __CFG_MCLRE$ON 0000            _Adf_Write_Register_Zero 02CD  
                      ?_Adc1_Start 0070                       Adf_Lock@bias 00DD  
               main@beacon_address 00DF                      __CFG_PLLEN$ON 0000  
                  __end_of_Ptt_Off 0C4F                      ??_Radio_Setup 006B  
                            _ADCS0 04F4                              _ADCS1 04F5  
                            _ADCS2 04F6                              ?_main 0070  
                            _DACEN 08C7                              _DACOE 08C5  
                    __CFG_WDTE$OFF 0000                              _ANSA1 0C61  
                            i1l120 0054                              i1l121 0049  
                            i1l123 0053                              i1l119 001B  
                            _TMR1H 0017                              _TMR1L 0016  
                            _TRISA 008C                              _TRISC 008E  
       Write_Adf7012_Reg@reg_value 002C                              _phase 007D  
                 __end_of_Adf_Lock 0F87                      ??_Modem_Setup 006B  
                __end_of_BAUD_RATE 04BC                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                 __size_of_Adf_Reset 0012  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 0C27  
                            wtemp6 007F                __end_of_Gpio_Config 0C8C  
                 __end_of_Delay_ms 0D54                        ?_Adf_Locked 0070  
           _current_sample_in_baud 00D1                  Spi_Byte_Send@data 0027  
                       Send_Byte@i 002A                    __initialization 005B  
        ??_Adf_Reset_Register_Zero 0020          __size_of_Ax25_Send_Header 00D8  
            __size_of_System_Start 0036                       __end_of_main 076D  
        __size_of_Ax25_Send_Footer 001B          __size_of_Ax25_Send_String 001D  
            __end_of_Reverse_Array 03D8           _Adf_Write_Register_Three 0089  
            __end_of_Spi_Byte_Send 0DCA                             ??_main 006D  
        __size_of_Send_Vcxo_Signal 0005                         _Modem_Init 0CAD  
              __end_of_Radio_Setup 0C41       __size_of_Read_Adf7012_Muxout 000F  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _CCP1IF 008A  
                           _DACNSS 08C0                             _ADNREF 04F2  
                           _ADRESH 009C                             _ADRESL 009B  
                           _CCPR1H 0292                             _CCPR1L 0291  
          __end_of_Sinus_Generator 0630      Adf_Write_Register_One@reg_ptr 0043  
                           i1l2024 05CD                             i1l2034 05E0  
                           i1l2018 059D                             i1l2044 0609  
                           i1l2038 05E8                             _INTCON 000B  
                           u241_25 003C                             u181_25 05BD  
              __size_of_Adc1_Start 0006                             u184_25 05FC  
                           u178_25 058F                 Reverse_Array@F3148 0120  
                           _OSCCON 0099           __size_of_Dac0_Start_Hold 0005  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1IE 0488                             _TMR1IF 0088  
                           _TMR1ON 00C0                       _System_Start 0E32  
              __end_of_Modem_Setup 0C1B                     __CFG_PWRTE$OFF 0000  
                    ??_Timer0_Stop 0070          ??_Adf_Write_Register_Zero 0033  
                           _Ptt_On 0DFC                          ??_Ptt_Off 006B  
               __size_of_Send_Byte 00B4                 Reverse_Array@input 0031  
                   __CFG_STVREN$ON 0000                   ??_Ax25_Send_Flag 0020  
                 ??_Ax25_Send_Byte 002C                             _memcpy 0D77  
                 ??_Ax25_Send_Sync 0020                  __end_of_Adf_Reset 07FB  
                       _Update_Crc 0DCA                __size_of_Adf_Locked 0003  
                      _Gpio_Config 0C7C            __end_of__initialization 0085  
                    _adc_sonuc_low 00D0          __size_of_global_interrupt 0055  
               Write_Adf7012_Reg@i 002D         ??_Adf_Reset_Register_Three 0020  
                   __pcstackCOMMON 0070           ??_Adf_Reset_Register_One 0020  
                     __pidataBANK2 0C8C           ??_Adf_Reset_Register_Two 0020  
                       _adf_config 00A0                __end_of_Timer0_Stop 0BFF  
                    _PLAYBACK_RATE 04B6                          ?_Adf_Lock 0070  
                      ?_Modem_Init 0070                  ?_Adf_Reset_Config 0070  
                      _Radio_Setup 0C33            ?_Adf_Write_Register_One 0070  
          ?_Adf_Write_Register_Two 0070          Spi_Byte_Send@data_to_send 0028  
               ??_Adf_Reset_Config 0026                          ?_Delay_ms 0020  
                __end_of_Send_Byte 06E4                   _PHASE_DELTA_1200 0124  
                 _PHASE_DELTA_2200 0128                        _Modem_Setup 0C15  
                       __pbssBANK0 006E                         __pbssBANK1 00A0  
                       __pbssBANK2 0120                         __pbssBANK3 01A0  
                 ?_Sinus_Generator 0070                 Ax25_Send_Flag@byte 0026  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 00D7  
                    ?_Timer1_Start 0070                         __pmaintext 06E4  
                 _Ax25_Send_Header 01F5                            ?_Ptt_On 0070  
                ??_Dac0_Start_Hold 0020                 __end_of_TABLE_SIZE 04BE  
                 _Ax25_Send_Footer 0CDD                         __pintentry 0004  
                     ??_Adc1_Start 0020                            _DACCON1 0119  
               Ax25_Send_Byte@byte 002C                            _DACPSS0 08C2  
                          _DACPSS1 08C3                            ?_memcpy 0020  
                 _Ax25_Send_String 0CF8                            _ADPREF0 04F0  
                          _ADPREF1 04F1                         ??_Adf_Lock 006B  
   __end_of_Adf_Write_Register_One 0F12     __end_of_Adf_Write_Register_Two 057B  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                 _Send_Vcxo_Signal 0BFF           __end_of_Adf_Write_Config 0C33  
                      ?_Update_Crc 0070                         ??_Delay_ms 0022  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _PTT_OFF 00CD                Update_Crc@input_bit 0022  
    Adf_Write_Register_Two@reg_ptr 004B     Adf_Write_Register_Zero@reg_ptr 004F  
               __end_of_Adc1_Start 0C0F                     ??_Timer0_Start 0020  
              __size_of_Modem_Init 0018                     ??_Timer1_Start 0020  
                        _BAUD_RATE 04BA                       ??_Adf_Locked 0026  
       ??_Adf_Write_Register_Three 0033                        _Timer0_Stop 0BFB  
                       _packet_pos 0130                            _Ptt_Off 0C41  
                  __size_of_Ptt_On 0036                _Read_Adf7012_Muxout 0C4F  
  __size_of_Adf_Reset_Register_One 0011    __size_of_Adf_Reset_Register_Two 0018  
               Ax25_Send_Sync@byte 0026                Reverse_Array@length 0027  
                  Ax25_Send_Flag@i 0027                    __size_of_memcpy 0029  
                          __ptext1 0C6D                            __ptext2 0E32  
                          __ptext3 0C41                            __ptext4 0C15  
                          __ptext5 0C33                            __ptext6 0C5E  
                          __ptext7 0D15                            __ptext8 0CC5  
                          __ptext9 03D8              Delay_ms@time_to_delay 0020  
        Adf_Write_Register_One@reg 003F                    Ax25_Send_Sync@i 0027  
               __end_of_Adf_Locked 0BFB               ?_Read_Adf7012_Muxout 0070  
        Adf_Write_Register_Two@reg 004F                            clrloop0 0C22  
  Adf_Write_Register_Three@reg_ptr 00D3               end_of_initialization 0085  
                          memcpy@d 0024                            memcpy@n 0021  
                          memcpy@s 0025                          Delay_ms@i 0024  
                          init_ram 0C1B                            initloop 0C1C  
                 _global_interrupt 0004                __size_of_Update_Crc 0032  
                     __pstringtext 0400                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 012C                          _Adf_Reset 07E9  
                   _adc_sonuc_high 00CF              ??_Read_Adf7012_Muxout 0026  
                       _powerlevel 0134                   _SAMPLES_PER_BAUD 00CE  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 0C9C  
     Write_Adf7012_Reg@size_of_reg 002A             _Adf_Reset_Register_Two 0CC5  
        Sinus_Generator@tone_index 00CB             __size_of_Reverse_Array 0044  
           __size_of_Spi_Byte_Send 002A           ?_Adf_Reset_Register_Zero 0070  
                      Adf_Lock@adj 00DB                     __end_of_Ptt_On 0E32  
               _Change_to_New_Baud 006E                     __end_of_memcpy 0DA0  
                     ??_Modem_Init 0020                       ?_Radio_Setup 0070  
                __size_of_Adf_Lock 0075               __end_of_Timer0_Start 0800  
             __end_of_Timer1_Start 0C7C                start_initialization 005B  
                       ?_Adf_Reset 0070           __end_of_Ax25_Send_Header 02CD  
         __end_of_Ax25_Send_Footer 0CF8                  __size_of_Delay_ms 0020  
                     ?_Modem_Setup 0070                    _Dac0_Start_Hold 0C04  
         __end_of_Ax25_Send_String 0D15          __size_of_Adf_Reset_Config 000F  
         ?_Adf_Write_Register_Zero 0070                          _Send_Byte 0630  
         __end_of_Send_Vcxo_Signal 0C04                 __end_of_Modem_Init 0CC5  
                         ??_Ptt_On 006B                        __pdataBANK2 0138  
                         ??_memcpy 0023                      _Reverse_Array 0394  
                    _Spi_Byte_Send 0DA0                  ?_Adf_Write_Config 0070  
                     ??_Update_Crc 0020                        __pbssCOMMON 0079  
                        ___latbits 0002  __size_of_Adf_Reset_Register_Three 0026  
                    _ones_in_a_row 00C9                      __pcstackBANK0 0020  
                    __pcstackBANK1 00D3                 ??_Adf_Write_Config 006B  
        ?_Adf_Reset_Register_Three 0070                __end_of__stringdata 04C4  
          __size_of_Ax25_Send_Flag 007C            __size_of_Ax25_Send_Byte 0006  
          __size_of_Ax25_Send_Sync 0079    __end_of_Adf_Reset_Register_Zero 0D34  
    Ax25_Send_Header@num_addresses 002C                         ?_Send_Byte 0070  
                _Write_Adf7012_Reg 0E68                       _current_byte 006F  
                Ax25_Send_Header@i 0034                  Ax25_Send_Header@j 0031  
               ?_Write_Adf7012_Reg 002A                       ?_Timer0_Stop 0070  
         __size_of_Sinus_Generator 00B5          Ax25_Send_Footer@final_crc 002C  
           Ax25_Send_String@string 002D                           ?_Ptt_Off 0070  
               __end_of_Update_Crc 0DFC                ??_Write_Adf7012_Reg 002B  
                   ?_Reverse_Array 0027                     ?_Spi_Byte_Send 0070  
         __end_of_global_interrupt 0059            __end_of_Dac0_Start_Hold 0C09  
                      ??_Adf_Reset 0026    __end_of_Adf_Write_Register_Zero 0394  
                Ax25_Send_String@i 002F          __end_of_Write_Adf7012_Reg 0EA1  
             __size_of_Gpio_Config 0010                      ?_System_Start 0070  
                     _modem_packet 01A0                          clear_ram0 0C21  
                        main@F3176 0138              __size_of_Timer0_Start 0005  
                         _Adf_Lock 0F12              __size_of_Timer1_Start 000F  
        Reverse_Array@buffer_array 002D                        __stringdata 04BE  
__size_of_Adf_Write_Register_Three 016C            ?_Adf_Reset_Register_One 0070  
        ?_Adf_Write_Register_Three 0070            ?_Adf_Reset_Register_Two 0070  
             __size_of_Radio_Setup 000E                           _Delay_ms 0D34  
            Send_Vcxo_Signal@value 0070                     ??_System_Start 0020  
                 _Adf_Reset_Config 0C5E                        ??_Send_Byte 0023  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 0D54  
               ?_Modem_Flush_Frame 0070                       _Timer0_Start 07FB  
                     _Timer1_Start 0C6D           ??_Adf_Write_Register_One 0033  
         ??_Adf_Write_Register_Two 0033                   __size_of_Ptt_Off 000E  
                  ??_Reverse_Array 0028                    ??_Spi_Byte_Send 0026  
            __end_of_PLAYBACK_RATE 04BA                ??_Modem_Flush_Frame 006C  
                ??_Sinus_Generator 0071   __size_of_Adf_Reset_Register_Zero 001F  
      __end_of_Read_Adf7012_Muxout 0C5E     __end_of_Adf_Reset_Register_One 0CAD  
   __end_of_Adf_Reset_Register_Two 0CDD                __end_of_sine_table2 04B6  
                 ?_Dac0_Start_Hold 0070                     _Ax25_Send_Flag 076D  
                   _Ax25_Send_Byte 0C0F                     _Ax25_Send_Sync 0F87  
                         __ptext10 0C9C                           __ptext11 07E9  
                         __ptext20 0F87                           __ptext12 0CAD  
                         __ptext21 0CDD                           __ptext13 0D54  
                         __ptext30 0EA1                           __ptext22 0630  
                         __ptext14 07FB                           __ptext31 0E68  
                         __ptext23 0DCA                           __ptext15 0DFC  
                         __ptext32 0DA0                           __ptext24 076D  
                         __ptext16 0C7C                           __ptext41 057B  
                         __ptext33 0394                           __ptext25 0F12  
                         __ptext17 0CF8                           __ptext42 0BFB  
                         __ptext34 0D77                           __ptext26 0C27  
                         __ptext18 0C0F                           __ptext43 0BFF  
                         __ptext35 0BF8                           __ptext27 02CD  
                         __ptext19 01F5                           __ptext36 0C4F  
                         __ptext28 04C4                           __ptext37 0D34  
                         __ptext29 0089                           __ptext38 0C04  
                         __ptext39 0C09                  ?_Ax25_Send_Header 002C  
                ?_Ax25_Send_Footer 0070                 ??_Ax25_Send_Header 002E  
        __end_of_Modem_Flush_Frame 0D77         __size_of_Write_Adf7012_Reg 0039  
                ?_Ax25_Send_String 002D                 ??_Ax25_Send_Footer 002C  
                    __size_of_main 0089                        _phase_delta 00D2  
                ?_Send_Vcxo_Signal 0070                 ??_Ax25_Send_String 002F  
               ??_Send_Vcxo_Signal 0070   __end_of_Adf_Reset_Register_Three 03FE  
             __size_of_Timer0_Stop 0004         Adf_Write_Register_Zero@reg 0053  
 __size_of_Adf_Write_Register_Zero 00C7             __end_of_Ax25_Send_Flag 07E9  
           __end_of_Ax25_Send_Byte 0C15             __end_of_Ax25_Send_Sync 1000  
                       _TABLE_SIZE 04BC                           memcpy@d1 0026  
                         memcpy@s1 0020                        pic14e$flags 007E  
                         intlevel1 0000          __size_of_Adf_Write_Config 000C  
                __CFG_CLKOUTEN$OFF 0000                 _MODEM_TRANSMITTING 00CC  
  __size_of_Adf_Write_Register_One 0071    __size_of_Adf_Write_Register_Two 00B7  
                       _Adc1_Start 0C09                        _sine_table2 0400  
             __end_of_System_Start 0E68                    ?_Ax25_Send_Flag 0070  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070        Sinus_Generator@Audio_Signal 0076  
               ??_global_interrupt 0077         __size_of_Modem_Flush_Frame 0023  
                       _Adf_Locked 0BF8                  _modem_packet_size 0079  
 __end_of_Adf_Write_Register_Three 01F5  
