

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Sep 29 20:45:37 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000E                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  018C                     	;# 
   123  018E                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  020E                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  038C                     	;# 
   183  038E                     	;# 
   184  0391                     	;# 
   185  0392                     	;# 
   186  0393                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000E                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  010C                     	;# 
   254  010E                     	;# 
   255  0111                     	;# 
   256  0112                     	;# 
   257  0113                     	;# 
   258  0114                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011A                     	;# 
   265  011B                     	;# 
   266  011D                     	;# 
   267  011E                     	;# 
   268  018C                     	;# 
   269  018E                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0194                     	;# 
   277  0195                     	;# 
   278  0196                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020E                     	;# 
   289  0211                     	;# 
   290  0211                     	;# 
   291  0212                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0298                     	;# 
   313  0298                     	;# 
   314  0299                     	;# 
   315  029A                     	;# 
   316  029B                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  0311                     	;# 
   321  0311                     	;# 
   322  0312                     	;# 
   323  0313                     	;# 
   324  0318                     	;# 
   325  0318                     	;# 
   326  0319                     	;# 
   327  031A                     	;# 
   328  038C                     	;# 
   329  038E                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  039A                     	;# 
   334  039C                     	;# 
   335  039D                     	;# 
   336  039E                     	;# 
   337  039F                     	;# 
   338  0415                     	;# 
   339  0416                     	;# 
   340  0417                     	;# 
   341  041C                     	;# 
   342  041D                     	;# 
   343  041E                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000E                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  008C                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  010C                     	;# 
   400  010E                     	;# 
   401  0111                     	;# 
   402  0112                     	;# 
   403  0113                     	;# 
   404  0114                     	;# 
   405  0115                     	;# 
   406  0116                     	;# 
   407  0117                     	;# 
   408  0118                     	;# 
   409  0119                     	;# 
   410  011A                     	;# 
   411  011B                     	;# 
   412  011D                     	;# 
   413  011E                     	;# 
   414  018C                     	;# 
   415  018E                     	;# 
   416  0191                     	;# 
   417  0191                     	;# 
   418  0192                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0194                     	;# 
   423  0195                     	;# 
   424  0196                     	;# 
   425  0199                     	;# 
   426  019A                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019C                     	;# 
   430  019D                     	;# 
   431  019E                     	;# 
   432  019F                     	;# 
   433  020C                     	;# 
   434  020E                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  0212                     	;# 
   438  0212                     	;# 
   439  0213                     	;# 
   440  0213                     	;# 
   441  0214                     	;# 
   442  0214                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0216                     	;# 
   447  0216                     	;# 
   448  0217                     	;# 
   449  0217                     	;# 
   450  0291                     	;# 
   451  0291                     	;# 
   452  0292                     	;# 
   453  0293                     	;# 
   454  0294                     	;# 
   455  0295                     	;# 
   456  0295                     	;# 
   457  0296                     	;# 
   458  0298                     	;# 
   459  0298                     	;# 
   460  0299                     	;# 
   461  029A                     	;# 
   462  029B                     	;# 
   463  029C                     	;# 
   464  029D                     	;# 
   465  029E                     	;# 
   466  0311                     	;# 
   467  0311                     	;# 
   468  0312                     	;# 
   469  0313                     	;# 
   470  0318                     	;# 
   471  0318                     	;# 
   472  0319                     	;# 
   473  031A                     	;# 
   474  038C                     	;# 
   475  038E                     	;# 
   476  0391                     	;# 
   477  0392                     	;# 
   478  0393                     	;# 
   479  039A                     	;# 
   480  039C                     	;# 
   481  039D                     	;# 
   482  039E                     	;# 
   483  039F                     	;# 
   484  0415                     	;# 
   485  0416                     	;# 
   486  0417                     	;# 
   487  041C                     	;# 
   488  041D                     	;# 
   489  041E                     	;# 
   490  0FE4                     	;# 
   491  0FE5                     	;# 
   492  0FE6                     	;# 
   493  0FE7                     	;# 
   494  0FE8                     	;# 
   495  0FE9                     	;# 
   496  0FEA                     	;# 
   497  0FEB                     	;# 
   498  0FED                     	;# 
   499  0FEE                     	;# 
   500  0FEF                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  0008                     	;# 
   510  0009                     	;# 
   511  000A                     	;# 
   512  000B                     	;# 
   513  000C                     	;# 
   514  000E                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  008C                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  010C                     	;# 
   546  010E                     	;# 
   547  0111                     	;# 
   548  0112                     	;# 
   549  0113                     	;# 
   550  0114                     	;# 
   551  0115                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  0118                     	;# 
   555  0119                     	;# 
   556  011A                     	;# 
   557  011B                     	;# 
   558  011D                     	;# 
   559  011E                     	;# 
   560  018C                     	;# 
   561  018E                     	;# 
   562  0191                     	;# 
   563  0191                     	;# 
   564  0192                     	;# 
   565  0193                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0199                     	;# 
   572  019A                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019D                     	;# 
   577  019E                     	;# 
   578  019F                     	;# 
   579  020C                     	;# 
   580  020E                     	;# 
   581  0211                     	;# 
   582  0211                     	;# 
   583  0212                     	;# 
   584  0212                     	;# 
   585  0213                     	;# 
   586  0213                     	;# 
   587  0214                     	;# 
   588  0214                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0216                     	;# 
   593  0216                     	;# 
   594  0217                     	;# 
   595  0217                     	;# 
   596  0291                     	;# 
   597  0291                     	;# 
   598  0292                     	;# 
   599  0293                     	;# 
   600  0294                     	;# 
   601  0295                     	;# 
   602  0295                     	;# 
   603  0296                     	;# 
   604  0298                     	;# 
   605  0298                     	;# 
   606  0299                     	;# 
   607  029A                     	;# 
   608  029B                     	;# 
   609  029C                     	;# 
   610  029D                     	;# 
   611  029E                     	;# 
   612  0311                     	;# 
   613  0311                     	;# 
   614  0312                     	;# 
   615  0313                     	;# 
   616  0318                     	;# 
   617  0318                     	;# 
   618  0319                     	;# 
   619  031A                     	;# 
   620  038C                     	;# 
   621  038E                     	;# 
   622  0391                     	;# 
   623  0392                     	;# 
   624  0393                     	;# 
   625  039A                     	;# 
   626  039C                     	;# 
   627  039D                     	;# 
   628  039E                     	;# 
   629  039F                     	;# 
   630  0415                     	;# 
   631  0416                     	;# 
   632  0417                     	;# 
   633  041C                     	;# 
   634  041D                     	;# 
   635  041E                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000E                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008E                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009A                     	;# 
   686  009B                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  010C                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011A                     	;# 
   703  011B                     	;# 
   704  011D                     	;# 
   705  011E                     	;# 
   706  018C                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0193                     	;# 
   714  0194                     	;# 
   715  0195                     	;# 
   716  0196                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  020E                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0213                     	;# 
   733  0214                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  0291                     	;# 
   743  0291                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0294                     	;# 
   747  0295                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0298                     	;# 
   751  0298                     	;# 
   752  0299                     	;# 
   753  029A                     	;# 
   754  029B                     	;# 
   755  029C                     	;# 
   756  029D                     	;# 
   757  029E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  0318                     	;# 
   763  0318                     	;# 
   764  0319                     	;# 
   765  031A                     	;# 
   766  038C                     	;# 
   767  038E                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  0393                     	;# 
   771  039A                     	;# 
   772  039C                     	;# 
   773  039D                     	;# 
   774  039E                     	;# 
   775  039F                     	;# 
   776  0415                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  041C                     	;# 
   780  041D                     	;# 
   781  041E                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793                           
   794                           	psect	idataBANK2
   795  0C87                     __pidataBANK2:	
   796                           
   797                           ;initializer for main@F3169
   798  0C87  3443               	retlw	67
   799  0C88  3455               	retlw	85
   800  0C89  3442               	retlw	66
   801  0C8A  3445               	retlw	69
   802  0C8B  3459               	retlw	89
   803  0C8C  3459               	retlw	89
   804  0C8D  3400               	retlw	0
   805  0C8E  3405               	retlw	5
   806  0C8F  3443               	retlw	67
   807  0C90  3455               	retlw	85
   808  0C91  3442               	retlw	66
   809  0C92  3445               	retlw	69
   810  0C93  3458               	retlw	88
   811  0C94  3458               	retlw	88
   812  0C95  3400               	retlw	0
   813  0C96  3406               	retlw	6
   814                           
   815                           	psect	stringtext
   816  0400                     __pstringtext:	
   817  0400                     _sine_table2:	
   818  0400  3410               	retlw	16
   819  0401  3410               	retlw	16
   820  0402  3411               	retlw	17
   821  0403  3411               	retlw	17
   822  0404  3412               	retlw	18
   823  0405  3412               	retlw	18
   824  0406  3413               	retlw	19
   825  0407  3413               	retlw	19
   826  0408  3414               	retlw	20
   827  0409  3414               	retlw	20
   828  040A  3415               	retlw	21
   829  040B  3415               	retlw	21
   830  040C  3416               	retlw	22
   831  040D  3416               	retlw	22
   832  040E  3417               	retlw	23
   833  040F  3417               	retlw	23
   834  0410  3418               	retlw	24
   835  0411  3418               	retlw	24
   836  0412  3419               	retlw	25
   837  0413  3419               	retlw	25
   838  0414  3419               	retlw	25
   839  0415  341A               	retlw	26
   840  0416  341A               	retlw	26
   841  0417  341B               	retlw	27
   842  0418  341B               	retlw	27
   843  0419  341B               	retlw	27
   844  041A  341C               	retlw	28
   845  041B  341C               	retlw	28
   846  041C  341C               	retlw	28
   847  041D  341D               	retlw	29
   848  041E  341D               	retlw	29
   849  041F  341D               	retlw	29
   850  0420  341D               	retlw	29
   851  0421  341E               	retlw	30
   852  0422  341E               	retlw	30
   853  0423  341E               	retlw	30
   854  0424  341E               	retlw	30
   855  0425  341E               	retlw	30
   856  0426  341E               	retlw	30
   857  0427  341F               	retlw	31
   858  0428  341F               	retlw	31
   859  0429  341F               	retlw	31
   860  042A  341F               	retlw	31
   861  042B  341F               	retlw	31
   862  042C  341F               	retlw	31
   863  042D  341F               	retlw	31
   864  042E  341F               	retlw	31
   865  042F  341F               	retlw	31
   866  0430  341F               	retlw	31
   867  0431  341F               	retlw	31
   868  0432  341F               	retlw	31
   869  0433  341F               	retlw	31
   870  0434  341F               	retlw	31
   871  0435  341E               	retlw	30
   872  0436  341E               	retlw	30
   873  0437  341E               	retlw	30
   874  0438  341E               	retlw	30
   875  0439  341E               	retlw	30
   876  043A  341E               	retlw	30
   877  043B  341D               	retlw	29
   878  043C  341D               	retlw	29
   879  043D  341D               	retlw	29
   880  043E  341D               	retlw	29
   881  043F  341C               	retlw	28
   882  0440  341C               	retlw	28
   883  0441  341C               	retlw	28
   884  0442  341B               	retlw	27
   885  0443  341B               	retlw	27
   886  0444  341B               	retlw	27
   887  0445  341A               	retlw	26
   888  0446  341A               	retlw	26
   889  0447  3419               	retlw	25
   890  0448  3419               	retlw	25
   891  0449  3419               	retlw	25
   892  044A  3418               	retlw	24
   893  044B  3418               	retlw	24
   894  044C  3417               	retlw	23
   895  044D  3417               	retlw	23
   896  044E  3416               	retlw	22
   897  044F  3416               	retlw	22
   898  0450  3415               	retlw	21
   899  0451  3415               	retlw	21
   900  0452  3414               	retlw	20
   901  0453  3414               	retlw	20
   902  0454  3413               	retlw	19
   903  0455  3413               	retlw	19
   904  0456  3412               	retlw	18
   905  0457  3412               	retlw	18
   906  0458  3411               	retlw	17
   907  0459  3411               	retlw	17
   908  045A  3410               	retlw	16
   909  045B  3410               	retlw	16
   910  045C  340F               	retlw	15
   911  045D  340E               	retlw	14
   912  045E  340E               	retlw	14
   913  045F  340D               	retlw	13
   914  0460  340D               	retlw	13
   915  0461  340C               	retlw	12
   916  0462  340C               	retlw	12
   917  0463  340B               	retlw	11
   918  0464  340B               	retlw	11
   919  0465  340A               	retlw	10
   920  0466  340A               	retlw	10
   921  0467  3409               	retlw	9
   922  0468  3409               	retlw	9
   923  0469  3408               	retlw	8
   924  046A  3408               	retlw	8
   925  046B  3407               	retlw	7
   926  046C  3407               	retlw	7
   927  046D  3406               	retlw	6
   928  046E  3406               	retlw	6
   929  046F  3406               	retlw	6
   930  0470  3405               	retlw	5
   931  0471  3405               	retlw	5
   932  0472  3404               	retlw	4
   933  0473  3404               	retlw	4
   934  0474  3404               	retlw	4
   935  0475  3403               	retlw	3
   936  0476  3403               	retlw	3
   937  0477  3403               	retlw	3
   938  0478  3402               	retlw	2
   939  0479  3402               	retlw	2
   940  047A  3402               	retlw	2
   941  047B  3402               	retlw	2
   942  047C  3401               	retlw	1
   943  047D  3401               	retlw	1
   944  047E  3401               	retlw	1
   945  047F  3401               	retlw	1
   946  0480  3401               	retlw	1
   947  0481  3401               	retlw	1
   948  0482  3400               	retlw	0
   949  0483  3400               	retlw	0
   950  0484  3400               	retlw	0
   951  0485  3400               	retlw	0
   952  0486  3400               	retlw	0
   953  0487  3400               	retlw	0
   954  0488  3400               	retlw	0
   955  0489  3400               	retlw	0
   956  048A  3400               	retlw	0
   957  048B  3400               	retlw	0
   958  048C  3400               	retlw	0
   959  048D  3400               	retlw	0
   960  048E  3400               	retlw	0
   961  048F  3400               	retlw	0
   962  0490  3401               	retlw	1
   963  0491  3401               	retlw	1
   964  0492  3401               	retlw	1
   965  0493  3401               	retlw	1
   966  0494  3401               	retlw	1
   967  0495  3401               	retlw	1
   968  0496  3402               	retlw	2
   969  0497  3402               	retlw	2
   970  0498  3402               	retlw	2
   971  0499  3402               	retlw	2
   972  049A  3403               	retlw	3
   973  049B  3403               	retlw	3
   974  049C  3403               	retlw	3
   975  049D  3404               	retlw	4
   976  049E  3404               	retlw	4
   977  049F  3404               	retlw	4
   978  04A0  3405               	retlw	5
   979  04A1  3405               	retlw	5
   980  04A2  3406               	retlw	6
   981  04A3  3406               	retlw	6
   982  04A4  3406               	retlw	6
   983  04A5  3407               	retlw	7
   984  04A6  3407               	retlw	7
   985  04A7  3408               	retlw	8
   986  04A8  3408               	retlw	8
   987  04A9  3409               	retlw	9
   988  04AA  3409               	retlw	9
   989  04AB  340A               	retlw	10
   990  04AC  340A               	retlw	10
   991  04AD  340B               	retlw	11
   992  04AE  340B               	retlw	11
   993  04AF  340C               	retlw	12
   994  04B0  340C               	retlw	12
   995  04B1  340D               	retlw	13
   996  04B2  340D               	retlw	13
   997  04B3  340E               	retlw	14
   998  04B4  340E               	retlw	14
   999  04B5  340F               	retlw	15
  1000  04B6                     __end_of_sine_table2:	
  1001  04B6                     _PLAYBACK_RATE:	
  1002  04B6  3412               	retlw	18
  1003  04B7  347A               	retlw	122
  1004  04B8  3400               	retlw	0
  1005  04B9  3400               	retlw	0
  1006  04BA                     __end_of_PLAYBACK_RATE:	
  1007  04BA                     _BAUD_RATE:	
  1008  04BA  34B0               	retlw	176
  1009  04BB  3404               	retlw	4
  1010  04BC                     __end_of_BAUD_RATE:	
  1011  04BC                     _TABLE_SIZE:	
  1012  04BC  34B6               	retlw	182
  1013  04BD  3400               	retlw	0
  1014  04BE                     __end_of_TABLE_SIZE:	
  1015  000B                     _INTCON	set	11
  1016  0011                     _PIR1	set	17
  1017  000C                     _PORTAbits	set	12
  1018  000E                     _PORTCbits	set	14
  1019  0015                     _TMR0	set	21
  1020  0017                     _TMR1H	set	23
  1021  0016                     _TMR1L	set	22
  1022  008E                     _ADIF	set	142
  1023  008A                     _CCP1IF	set	138
  1024  00C4                     _T1CKPS0	set	196
  1025  00C5                     _T1CKPS1	set	197
  1026  005D                     _TMR0IE	set	93
  1027  005A                     _TMR0IF	set	90
  1028  00C6                     _TMR1CS0	set	198
  1029  00C7                     _TMR1CS1	set	199
  1030  00CF                     _TMR1GE	set	207
  1031  0088                     _TMR1IF	set	136
  1032  00C0                     _TMR1ON	set	192
  1033  009D                     _ADCON0	set	157
  1034  009C                     _ADRESH	set	156
  1035  009B                     _ADRESL	set	155
  1036  0099                     _OSCCON	set	153
  1037  009A                     _OSCSTAT	set	154
  1038  0098                     _OSCTUNE	set	152
  1039  008C                     _TRISA	set	140
  1040  008E                     _TRISC	set	142
  1041  04F4                     _ADCS0	set	1268
  1042  04F5                     _ADCS1	set	1269
  1043  04F6                     _ADCS2	set	1270
  1044  04F7                     _ADFM	set	1271
  1045  048E                     _ADIE	set	1166
  1046  04F2                     _ADNREF	set	1266
  1047  04E8                     _ADON	set	1256
  1048  04F0                     _ADPREF0	set	1264
  1049  04F1                     _ADPREF1	set	1265
  1050  048A                     _CCP1IE	set	1162
  1051  04AB                     _PSA	set	1195
  1052  04AD                     _TMR0CS	set	1197
  1053  0488                     _TMR1IE	set	1160
  1054  04B9                     _WDTPS0	set	1209
  1055  04BA                     _WDTPS1	set	1210
  1056  04BB                     _WDTPS2	set	1211
  1057  04BC                     _WDTPS3	set	1212
  1058  04BD                     _WDTPS4	set	1213
  1059  0119                     _DACCON1	set	281
  1060  08C7                     _DACEN	set	2247
  1061  08C0                     _DACNSS	set	2240
  1062  08C5                     _DACOE	set	2245
  1063  08C2                     _DACPSS0	set	2242
  1064  08C3                     _DACPSS1	set	2243
  1065  0C61                     _ANSA1	set	3169
  1066  0292                     _CCPR1H	set	658
  1067  0291                     _CCPR1L	set	657
  1068  1499                     _CCP1M1	set	5273
  1069  149A                     _CCP1M2	set	5274
  1070  149B                     _CCP1M3	set	5275
  1071  04BE                     __stringdata:	
  1072  04BE                     STR_1:	
  1073  04BE  3448               	retlw	72	;'H'
  1074  04BF  3445               	retlw	69	;'E'
  1075  04C0  344C               	retlw	76	;'L'
  1076  04C1  344C               	retlw	76	;'L'
  1077  04C2  344F               	retlw	79	;'O'
  1078  04C3  3400               	retlw	0
  1079  04C4                     __end_of__stringdata:	
  1080                           
  1081                           ; #config settings
  1082  0000                     
  1083                           	psect	cinit
  1084  005B                     start_initialization:	
  1085  005B                     __initialization:	
  1086                           
  1087                           ; Clear objects allocated to COMMON
  1088  005B  01F9               	clrf	__pbssCOMMON& (0+127)
  1089  005C  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1090  005D  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1091  005E  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1092  005F  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1093                           
  1094                           ; Clear objects allocated to BANK0
  1095  0060  01EE               	clrf	__pbssBANK0& (0+127)
  1096  0061  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1097                           
  1098                           ; Clear objects allocated to BANK1
  1099  0062  30A0               	movlw	low __pbssBANK1
  1100  0063  0084               	movwf	4
  1101  0064  3000               	movlw	high __pbssBANK1
  1102  0065  0085               	movwf	5
  1103  0066  3033               	movlw	51
  1104  0067  318C  2424  3180   	fcall	clear_ram0
  1105                           
  1106                           ; Clear objects allocated to BANK2
  1107  006A  3020               	movlw	low __pbssBANK2
  1108  006B  0084               	movwf	4
  1109  006C  3001               	movlw	high __pbssBANK2
  1110  006D  0085               	movwf	5
  1111  006E  3014               	movlw	20
  1112  006F  318C  2424  3180   	fcall	clear_ram0
  1113                           
  1114                           ; Clear objects allocated to BANK3
  1115  0072  30A0               	movlw	low __pbssBANK3
  1116  0073  0084               	movwf	4
  1117  0074  3001               	movlw	high __pbssBANK3
  1118  0075  0085               	movwf	5
  1119  0076  3040               	movlw	64
  1120  0077  318C  2424  3180   	fcall	clear_ram0
  1121                           
  1122                           ; Initialize objects allocated to BANK2
  1123  007A  3087               	movlw	low __pidataBANK2
  1124  007B  0084               	movwf	4
  1125  007C  308C               	movlw	(high __pidataBANK2)| (0+128)
  1126  007D  0085               	movwf	5
  1127  007E  3034               	movlw	low __pdataBANK2
  1128  007F  0086               	movwf	6
  1129  0080  3001               	movlw	high __pdataBANK2
  1130  0081  0087               	movwf	7
  1131  0082  3010               	movlw	16
  1132  0083  318C  241E         	fcall	init_ram
  1133  0085                     end_of_initialization:	
  1134                           ;End of C runtime variable initialization code
  1135                           
  1136  0085                     __end_of__initialization:	
  1137  0085  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1138  0086  0020               	movlb	0
  1139  0087  3186  2EE4         	ljmp	_main	;jump to C main() function
  1140                           
  1141                           	psect	bssCOMMON
  1142  0079                     __pbssCOMMON:	
  1143  0079                     _modem_packet_size:	
  1144  0079                     	ds	4
  1145  007D                     _phase:	
  1146  007D                     	ds	1
  1147                           
  1148                           	psect	bssBANK0
  1149  006E                     __pbssBANK0:	
  1150  006E                     _Change_to_New_Baud:	
  1151  006E                     	ds	1
  1152  006F                     _current_byte:	
  1153  006F                     	ds	1
  1154                           
  1155                           	psect	bssBANK1
  1156  00A0                     __pbssBANK1:	
  1157  00A0                     _adf_config:	
  1158  00A0                     	ds	39
  1159  00C7                     _crc:	
  1160  00C7                     	ds	2
  1161  00C9                     _ones_in_a_row:	
  1162  00C9                     	ds	2
  1163  00CB                     Sinus_Generator@tone_index:	
  1164  00CB                     	ds	1
  1165  00CC                     _MODEM_TRANSMITTING:	
  1166  00CC                     	ds	1
  1167  00CD                     _PTT_OFF:	
  1168  00CD                     	ds	1
  1169  00CE                     _SAMPLES_PER_BAUD:	
  1170  00CE                     	ds	1
  1171  00CF                     _adc__high:	
  1172  00CF                     	ds	1
  1173  00D0                     _adc__low:	
  1174  00D0                     	ds	1
  1175  00D1                     _current_sample_in_baud:	
  1176  00D1                     	ds	1
  1177  00D2                     _phase_delta:	
  1178  00D2                     	ds	1
  1179                           
  1180                           	psect	bssBANK2
  1181  0120                     __pbssBANK2:	
  1182  0120                     Reverse_Array@F3148:	
  1183  0120                     	ds	4
  1184  0124                     _PHASE_DELTA_1200:	
  1185  0124                     	ds	4
  1186  0128                     _PHASE_DELTA_2200:	
  1187  0128                     	ds	4
  1188  012C                     _Systick_Counter:	
  1189  012C                     	ds	4
  1190  0130                     _packet_pos:	
  1191  0130                     	ds	4
  1192                           
  1193                           	psect	dataBANK2
  1194  0134                     __pdataBANK2:	
  1195  0134                     main@F3169:	
  1196  0134                     	ds	16
  1197                           
  1198                           	psect	bssBANK3
  1199  01A0                     __pbssBANK3:	
  1200  01A0                     _modem_packet:	
  1201  01A0                     	ds	64
  1202                           
  1203                           	psect	clrtext
  1204  0C24                     clear_ram0:	
  1205                           ;	Called with FSR0 containing the base address, and
  1206                           ;	WREG with the size to clear
  1207                           
  1208  0C24  0064               	clrwdt	;clear the watchdog before getting into this loop
  1209  0C25                     clrloop0:	
  1210  0C25  0180               	clrf	0	;clear RAM location pointed to by FSR
  1211  0C26  3101               	addfsr 0,1
  1212  0C27  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1213  0C28  2C25               	goto	clrloop0	;have we reached the end yet?
  1214  0C29  3400               	retlw	0	;all done for this memory range, return
  1215                           
  1216                           	psect	inittext
  1217  0C1E                     init_ram:	
  1218  0C1E  00FE               	movwf	126
  1219  0C1F                     initloop:	
  1220  0C1F  0012               	moviw fsr0++
  1221  0C20  001E               	movwi fsr1++
  1222  0C21  0BFE               	decfsz	126,f
  1223  0C22  2C1F               	goto	initloop
  1224  0C23  3400               	retlw	0
  1225                           
  1226                           	psect	cstackBANK1
  1227  00D3                     __pcstackBANK1:	
  1228  00D3                     Adf_Write_Register_Three@reg_ptr:	
  1229                           
  1230                           ; 4 bytes @ 0x0
  1231  00D3                     	ds	4
  1232  00D7                     Adf_Write_Register_Three@reg:	
  1233                           
  1234                           ; 4 bytes @ 0x4
  1235  00D7                     	ds	4
  1236  00DB                     Adf_Lock@adj:	
  1237                           
  1238                           ; 2 bytes @ 0x8
  1239  00DB                     	ds	2
  1240  00DD                     Adf_Lock@bias:	
  1241                           
  1242                           ; 2 bytes @ 0xA
  1243  00DD                     	ds	2
  1244  00DF                     main@beacon_address:	
  1245                           
  1246                           ; 16 bytes @ 0xC
  1247  00DF                     	ds	16
  1248                           
  1249                           	psect	cstackCOMMON
  1250  0070                     __pcstackCOMMON:	
  1251  0070                     ?_Sinus_Generator:	
  1252  0070                     ?_Timer1_Start:	
  1253                           ; 0 bytes @ 0x0
  1254                           
  1255  0070                     ?_Dac0_Start_Hold:	
  1256                           ; 0 bytes @ 0x0
  1257                           
  1258  0070                     ?_Adc1_Start:	
  1259                           ; 0 bytes @ 0x0
  1260                           
  1261  0070                     ?_Ax25_Send_Footer:	
  1262                           ; 0 bytes @ 0x0
  1263                           
  1264  0070                     ?_Modem_Setup:	
  1265                           ; 0 bytes @ 0x0
  1266                           
  1267  0070                     ?_Ptt_Off:	
  1268                           ; 0 bytes @ 0x0
  1269                           
  1270  0070                     ?_Modem_Flush_Frame:	
  1271                           ; 0 bytes @ 0x0
  1272                           
  1273  0070                     ?_Adf_Reset_Register_Zero:	
  1274                           ; 0 bytes @ 0x0
  1275                           
  1276  0070                     ?_Adf_Reset_Register_One:	
  1277                           ; 0 bytes @ 0x0
  1278                           
  1279  0070                     ?_Adf_Reset_Register_Two:	
  1280                           ; 0 bytes @ 0x0
  1281                           
  1282  0070                     ?_Adf_Reset_Register_Three:	
  1283                           ; 0 bytes @ 0x0
  1284                           
  1285  0070                     ?_Adf_Reset:	
  1286                           ; 0 bytes @ 0x0
  1287                           
  1288  0070                     ?_Adf_Write_Register_Zero:	
  1289                           ; 0 bytes @ 0x0
  1290                           
  1291  0070                     ?_Adf_Write_Register_One:	
  1292                           ; 0 bytes @ 0x0
  1293                           
  1294  0070                     ?_Adf_Write_Register_Two:	
  1295                           ; 0 bytes @ 0x0
  1296                           
  1297  0070                     ?_Adf_Write_Register_Three:	
  1298                           ; 0 bytes @ 0x0
  1299                           
  1300  0070                     ?_global_interrupt:	
  1301                           ; 0 bytes @ 0x0
  1302                           
  1303  0070                     ?_System_Start:	
  1304                           ; 0 bytes @ 0x0
  1305                           
  1306  0070                     ??_Send_Vcxo_Signal:	
  1307                           ; 0 bytes @ 0x0
  1308                           
  1309  0070                     ?_Timer0_Start:	
  1310                           ; 0 bytes @ 0x0
  1311                           
  1312  0070                     ?_Timer0_Stop:	
  1313                           ; 0 bytes @ 0x0
  1314                           
  1315  0070                     ??_Timer0_Stop:	
  1316                           ; 0 bytes @ 0x0
  1317                           
  1318  0070                     ?_Adf_Reset_Config:	
  1319                           ; 0 bytes @ 0x0
  1320                           
  1321  0070                     ?_Adf_Write_Config:	
  1322                           ; 0 bytes @ 0x0
  1323                           
  1324  0070                     ?_Radio_Setup:	
  1325                           ; 0 bytes @ 0x0
  1326                           
  1327  0070                     ?_Configure_Audio:	
  1328                           ; 0 bytes @ 0x0
  1329                           
  1330  0070                     ?_Update_Crc:	
  1331                           ; 0 bytes @ 0x0
  1332                           
  1333  0070                     ?_Send_Byte:	
  1334                           ; 0 bytes @ 0x0
  1335                           
  1336  0070                     ?_Ax25_Send_Byte:	
  1337                           ; 0 bytes @ 0x0
  1338                           
  1339  0070                     ?_Ax25_Send_Sync:	
  1340                           ; 0 bytes @ 0x0
  1341                           
  1342  0070                     ?_Ax25_Send_Flag:	
  1343                           ; 0 bytes @ 0x0
  1344                           
  1345  0070                     ?_Gpio_Config:	
  1346                           ; 0 bytes @ 0x0
  1347                           
  1348  0070                     ?_Adf_Lock:	
  1349                           ; 1 bytes @ 0x0
  1350                           
  1351  0070                     ?_Ptt_On:	
  1352                           ; 1 bytes @ 0x0
  1353                           
  1354  0070                     ?_Spi_Byte_Send:	
  1355                           ; 1 bytes @ 0x0
  1356                           
  1357  0070                     ?_Adf_Locked:	
  1358                           ; 1 bytes @ 0x0
  1359                           
  1360  0070                     ?_Read_Adf7012_Muxout:	
  1361                           ; 1 bytes @ 0x0
  1362                           
  1363  0070                     ?_Send_Vcxo_Signal:	
  1364                           ; 1 bytes @ 0x0
  1365                           
  1366  0070                     ?_main:	
  1367                           ; 1 bytes @ 0x0
  1368                           
  1369  0070                     Send_Vcxo_Signal@value:	
  1370                           ; 2 bytes @ 0x0
  1371                           
  1372                           
  1373                           ; 1 bytes @ 0x0
  1374  0070                     	ds	1
  1375  0071                     ??_Sinus_Generator:	
  1376                           
  1377                           ; 0 bytes @ 0x1
  1378  0071                     	ds	5
  1379  0076                     Sinus_Generator@Audio_Signal:	
  1380                           
  1381                           ; 1 bytes @ 0x6
  1382  0076                     	ds	1
  1383  0077                     ??_global_interrupt:	
  1384                           
  1385                           ; 0 bytes @ 0x7
  1386  0077                     	ds	2
  1387                           
  1388                           	psect	cstackBANK0
  1389  0020                     __pcstackBANK0:	
  1390  0020                     ??_Gpio_Config:	
  1391  0020                     ??_Timer1_Start:	
  1392                           ; 0 bytes @ 0x0
  1393                           
  1394  0020                     ??_Dac0_Start_Hold:	
  1395                           ; 0 bytes @ 0x0
  1396                           
  1397  0020                     ??_Adc1_Start:	
  1398                           ; 0 bytes @ 0x0
  1399                           
  1400  0020                     ?_Delay_ms:	
  1401                           ; 0 bytes @ 0x0
  1402                           
  1403  0020                     ??_Adf_Reset_Register_Zero:	
  1404                           ; 0 bytes @ 0x0
  1405                           
  1406  0020                     ??_Adf_Reset_Register_One:	
  1407                           ; 0 bytes @ 0x0
  1408                           
  1409  0020                     ??_Adf_Reset_Register_Two:	
  1410                           ; 0 bytes @ 0x0
  1411                           
  1412  0020                     ??_Adf_Reset_Register_Three:	
  1413                           ; 0 bytes @ 0x0
  1414                           
  1415  0020                     ??_Adf_Locked:	
  1416                           ; 0 bytes @ 0x0
  1417                           
  1418  0020                     ??_System_Start:	
  1419                           ; 0 bytes @ 0x0
  1420                           
  1421  0020                     ??_Read_Adf7012_Muxout:	
  1422                           ; 0 bytes @ 0x0
  1423                           
  1424  0020                     ??_Timer0_Start:	
  1425                           ; 0 bytes @ 0x0
  1426                           
  1427  0020                     ??_Configure_Audio:	
  1428                           ; 0 bytes @ 0x0
  1429                           
  1430  0020                     ??_Update_Crc:	
  1431                           ; 0 bytes @ 0x0
  1432                           
  1433  0020                     ??_Ax25_Send_Sync:	
  1434                           ; 0 bytes @ 0x0
  1435                           
  1436  0020                     ??_Ax25_Send_Flag:	
  1437                           ; 0 bytes @ 0x0
  1438                           
  1439  0020                     ?_memcpy:	
  1440                           ; 0 bytes @ 0x0
  1441                           
  1442  0020                     memcpy@s1:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0020                     Delay_ms@time_to_delay:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448                           
  1449                           ; 2 bytes @ 0x0
  1450  0020                     	ds	1
  1451  0021                     memcpy@n:	
  1452                           
  1453                           ; 2 bytes @ 0x1
  1454  0021                     	ds	1
  1455  0022                     ??_Delay_ms:	
  1456  0022                     Update_Crc@input_bit:	
  1457                           ; 0 bytes @ 0x2
  1458                           
  1459                           
  1460                           ; 1 bytes @ 0x2
  1461  0022                     	ds	1
  1462  0023                     ??_memcpy:	
  1463  0023                     ??_Send_Byte:	
  1464                           ; 0 bytes @ 0x3
  1465                           
  1466                           
  1467                           ; 0 bytes @ 0x3
  1468  0023                     	ds	1
  1469  0024                     memcpy@d:	
  1470  0024                     Delay_ms@i:	
  1471                           ; 1 bytes @ 0x4
  1472                           
  1473                           
  1474                           ; 2 bytes @ 0x4
  1475  0024                     	ds	1
  1476  0025                     memcpy@s:	
  1477                           
  1478                           ; 1 bytes @ 0x5
  1479  0025                     	ds	1
  1480  0026                     ??_Spi_Byte_Send:	
  1481  0026                     ??_Adf_Reset:	
  1482                           ; 0 bytes @ 0x6
  1483                           
  1484  0026                     ??_Adf_Reset_Config:	
  1485                           ; 0 bytes @ 0x6
  1486                           
  1487  0026                     Ax25_Send_Sync@byte:	
  1488                           ; 0 bytes @ 0x6
  1489                           
  1490  0026                     Ax25_Send_Flag@byte:	
  1491                           ; 1 bytes @ 0x6
  1492                           
  1493  0026                     memcpy@d1:	
  1494                           ; 1 bytes @ 0x6
  1495                           
  1496                           
  1497                           ; 1 bytes @ 0x6
  1498  0026                     	ds	1
  1499  0027                     ?_Reverse_Array:	
  1500  0027                     Reverse_Array@length:	
  1501                           ; 1 bytes @ 0x7
  1502                           
  1503  0027                     Spi_Byte_Send@data:	
  1504                           ; 1 bytes @ 0x7
  1505                           
  1506  0027                     Ax25_Send_Sync@i:	
  1507                           ; 1 bytes @ 0x7
  1508                           
  1509  0027                     Ax25_Send_Flag@i:	
  1510                           ; 2 bytes @ 0x7
  1511                           
  1512                           
  1513                           ; 2 bytes @ 0x7
  1514  0027                     	ds	1
  1515  0028                     ??_Reverse_Array:	
  1516  0028                     Spi_Byte_Send@data_to_send:	
  1517                           ; 0 bytes @ 0x8
  1518                           
  1519                           
  1520                           ; 1 bytes @ 0x8
  1521  0028                     	ds	1
  1522  0029                     Spi_Byte_Send@i:	
  1523  0029                     Send_Byte@byte:	
  1524                           ; 1 bytes @ 0x9
  1525                           
  1526                           
  1527                           ; 1 bytes @ 0x9
  1528  0029                     	ds	1
  1529  002A                     ?_Write_Adf7012_Reg:	
  1530  002A                     Write_Adf7012_Reg@size_of_reg:	
  1531                           ; 1 bytes @ 0xA
  1532                           
  1533  002A                     Send_Byte@i:	
  1534                           ; 1 bytes @ 0xA
  1535                           
  1536                           
  1537                           ; 2 bytes @ 0xA
  1538  002A                     	ds	1
  1539  002B                     ??_Write_Adf7012_Reg:	
  1540                           
  1541                           ; 0 bytes @ 0xB
  1542  002B                     	ds	1
  1543  002C                     ?_Ax25_Send_Header:	
  1544  002C                     ??_Ax25_Send_Footer:	
  1545                           ; 0 bytes @ 0xC
  1546                           
  1547  002C                     ??_Ax25_Send_Byte:	
  1548                           ; 0 bytes @ 0xC
  1549                           
  1550  002C                     Write_Adf7012_Reg@reg_value:	
  1551                           ; 0 bytes @ 0xC
  1552                           
  1553  002C                     Ax25_Send_Byte@byte:	
  1554                           ; 1 bytes @ 0xC
  1555                           
  1556  002C                     Ax25_Send_Header@num_addresses:	
  1557                           ; 1 bytes @ 0xC
  1558                           
  1559  002C                     Ax25_Send_Footer@final_crc:	
  1560                           ; 2 bytes @ 0xC
  1561                           
  1562                           
  1563                           ; 2 bytes @ 0xC
  1564  002C                     	ds	1
  1565  002D                     ?_Ax25_Send_String:	
  1566  002D                     Write_Adf7012_Reg@i:	
  1567                           ; 0 bytes @ 0xD
  1568                           
  1569  002D                     Ax25_Send_String@string:	
  1570                           ; 1 bytes @ 0xD
  1571                           
  1572  002D                     Reverse_Array@buffer_array:	
  1573                           ; 2 bytes @ 0xD
  1574                           
  1575                           
  1576                           ; 4 bytes @ 0xD
  1577  002D                     	ds	1
  1578  002E                     ??_Ax25_Send_Header:	
  1579                           
  1580                           ; 0 bytes @ 0xE
  1581  002E                     	ds	1
  1582  002F                     ??_Ax25_Send_String:	
  1583  002F                     Ax25_Send_String@i:	
  1584                           ; 0 bytes @ 0xF
  1585                           
  1586                           
  1587                           ; 2 bytes @ 0xF
  1588  002F                     	ds	2
  1589  0031                     Reverse_Array@input:	
  1590  0031                     Ax25_Send_Header@j:	
  1591                           ; 1 bytes @ 0x11
  1592                           
  1593                           
  1594                           ; 2 bytes @ 0x11
  1595  0031                     	ds	1
  1596  0032                     Reverse_Array@i:	
  1597                           
  1598                           ; 1 bytes @ 0x12
  1599  0032                     	ds	1
  1600  0033                     ??_Adf_Write_Register_Zero:	
  1601  0033                     ??_Adf_Write_Register_One:	
  1602                           ; 0 bytes @ 0x13
  1603                           
  1604  0033                     ??_Adf_Write_Register_Two:	
  1605                           ; 0 bytes @ 0x13
  1606                           
  1607  0033                     ??_Adf_Write_Register_Three:	
  1608                           ; 0 bytes @ 0x13
  1609                           
  1610  0033                     Ax25_Send_Header@addresses:	
  1611                           ; 0 bytes @ 0x13
  1612                           
  1613                           
  1614                           ; 1 bytes @ 0x13
  1615  0033                     	ds	1
  1616  0034                     Ax25_Send_Header@i:	
  1617                           
  1618                           ; 2 bytes @ 0x14
  1619  0034                     	ds	11
  1620  003F                     Adf_Write_Register_One@reg:	
  1621                           
  1622                           ; 4 bytes @ 0x1F
  1623  003F                     	ds	4
  1624  0043                     Adf_Write_Register_One@reg_ptr:	
  1625                           
  1626                           ; 3 bytes @ 0x23
  1627  0043                     	ds	8
  1628  004B                     Adf_Write_Register_Two@reg_ptr:	
  1629                           
  1630                           ; 4 bytes @ 0x2B
  1631  004B                     	ds	4
  1632  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1633  004F                     Adf_Write_Register_Two@reg:	
  1634                           ; 4 bytes @ 0x2F
  1635                           
  1636                           
  1637                           ; 4 bytes @ 0x2F
  1638  004F                     	ds	4
  1639  0053                     Adf_Write_Register_Zero@reg:	
  1640                           
  1641                           ; 4 bytes @ 0x33
  1642  0053                     	ds	24
  1643  006B                     ??_Modem_Setup:	
  1644  006B                     ??_Adf_Lock:	
  1645                           ; 0 bytes @ 0x4B
  1646                           
  1647  006B                     ??_Ptt_On:	
  1648                           ; 0 bytes @ 0x4B
  1649                           
  1650  006B                     ??_Ptt_Off:	
  1651                           ; 0 bytes @ 0x4B
  1652                           
  1653  006B                     ??_Adf_Write_Config:	
  1654                           ; 0 bytes @ 0x4B
  1655                           
  1656  006B                     ??_Radio_Setup:	
  1657                           ; 0 bytes @ 0x4B
  1658                           
  1659                           
  1660                           ; 0 bytes @ 0x4B
  1661  006B                     	ds	1
  1662  006C                     ??_Modem_Flush_Frame:	
  1663                           
  1664                           ; 0 bytes @ 0x4C
  1665  006C                     	ds	1
  1666  006D                     ??_main:	
  1667                           
  1668                           ; 0 bytes @ 0x4D
  1669  006D                     	ds	1
  1670                           
  1671                           	psect	maintext
  1672  06E4                     __pmaintext:	
  1673 ;;
  1674 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1675 ;;
  1676 ;; *************** function _main *****************
  1677 ;; Defined at:
  1678 ;;		line 168 in file "main.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  2  138[COMMON] int 
  1685 ;; Registers used:
  1686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 17F/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1693 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1694 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;Total ram usage:       17 bytes
  1697 ;; Hardware stack levels required when called:   11
  1698 ;; This function calls:
  1699 ;;		_Adc1_Start
  1700 ;;		_Adf_Lock
  1701 ;;		_Ax25_Send_Footer
  1702 ;;		_Ax25_Send_Header
  1703 ;;		_Ax25_Send_String
  1704 ;;		_Dac0_Start_Hold
  1705 ;;		_Delay_ms
  1706 ;;		_Gpio_Config
  1707 ;;		_Modem_Flush_Frame
  1708 ;;		_Modem_Setup
  1709 ;;		_Ptt_Off
  1710 ;;		_Ptt_On
  1711 ;;		_System_Start
  1712 ;;		_Timer1_Start
  1713 ;; This function is called by:
  1714 ;;		Startup code after reset
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _main
  1720  06E4                     _main:	
  1721                           
  1722                           ;main.c: 169: System_Start();
  1723                           
  1724                           ;incstack = 0
  1725                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1726  06E4  318E  2666  3186   	fcall	_System_Start
  1727  06E7                     l139:	
  1728                           ;main.c: 170: while (!(OSCSTAT & (0x01))){}
  1729                           
  1730  06E7  0021               	movlb	1	; select bank1
  1731  06E8  1C1A               	btfss	26,0	;volatile
  1732  06E9  2EE7               	goto	l139
  1733                           
  1734                           ;main.c: 173: Gpio_Config();
  1735  06EA  318C  2477  3186   	fcall	_Gpio_Config
  1736                           
  1737                           ;main.c: 175: Timer1_Start();
  1738  06ED  318C  2468  3186   	fcall	_Timer1_Start
  1739                           
  1740                           ;main.c: 177: Dac0_Start_Hold();
  1741  06F0  318C  2402  3186   	fcall	_Dac0_Start_Hold
  1742                           
  1743                           ;main.c: 179: Adc1_Start();
  1744  06F3  318C  240C  3186   	fcall	_Adc1_Start
  1745                           
  1746                           ;main.c: 181: PORTAbits.RA5 = 0;;
  1747  06F6  0020               	movlb	0	; select bank0
  1748  06F7  128C               	bcf	12,5	;volatile
  1749                           
  1750                           ;main.c: 182: Delay_ms(10);
  1751  06F8  300A               	movlw	10
  1752  06F9  00A0               	movwf	Delay_ms@time_to_delay
  1753  06FA  3000               	movlw	0
  1754  06FB  00A1               	movwf	Delay_ms@time_to_delay+1
  1755  06FC  318D  252F  3186   	fcall	_Delay_ms
  1756                           
  1757                           ;main.c: 183: PORTAbits.RA4 = 1;;
  1758  06FF  0020               	movlb	0	; select bank0
  1759  0700  160C               	bsf	12,4	;volatile
  1760                           
  1761                           ;main.c: 184: Delay_ms(10);
  1762  0701  300A               	movlw	10
  1763  0702  00A0               	movwf	Delay_ms@time_to_delay
  1764  0703  3000               	movlw	0
  1765  0704  00A1               	movwf	Delay_ms@time_to_delay+1
  1766  0705  318D  252F  3186   	fcall	_Delay_ms
  1767                           
  1768                           ;main.c: 185: PORTAbits.RA5 = 1;;
  1769  0708  0020               	movlb	0	; select bank0
  1770  0709  168C               	bsf	12,5	;volatile
  1771                           
  1772                           ;main.c: 186: Delay_ms(10);
  1773  070A  300A               	movlw	10
  1774  070B  00A0               	movwf	Delay_ms@time_to_delay
  1775  070C  3000               	movlw	0
  1776  070D  00A1               	movwf	Delay_ms@time_to_delay+1
  1777  070E  318D  252F  3186   	fcall	_Delay_ms
  1778                           
  1779                           ;main.c: 188: Delay_ms(200);
  1780  0711  30C8               	movlw	200
  1781  0712  0020               	movlb	0	; select bank0
  1782  0713  00A0               	movwf	Delay_ms@time_to_delay
  1783  0714  3000               	movlw	0
  1784  0715  00A1               	movwf	Delay_ms@time_to_delay+1
  1785  0716  318D  252F  3186   	fcall	_Delay_ms
  1786                           
  1787                           ;main.c: 191: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1788  0719  3034               	movlw	low main@F3169
  1789  071A  0086               	movwf	6
  1790  071B  3001               	movlw	high main@F3169
  1791  071C  0087               	movwf	7
  1792  071D  30DF               	movlw	low main@beacon_address
  1793  071E  0084               	movwf	4
  1794  071F  3000               	movlw	high main@beacon_address
  1795  0720  0085               	movwf	5
  1796  0721  3010               	movlw	16
  1797  0722  0020               	movlb	0	; select bank0
  1798  0723  00ED               	movwf	??_main
  1799  0724                     u2410:	
  1800  0724  0016               	moviw fsr1++
  1801  0725  001A               	movwi fsr0++
  1802  0726  0BED               	decfsz	??_main,f
  1803  0727  2F24               	goto	u2410
  1804                           
  1805                           ;main.c: 193: Ax25_Send_Header(beacon_address,2);
  1806  0728  3002               	movlw	2
  1807  0729  00AC               	movwf	Ax25_Send_Header@num_addresses
  1808  072A  3000               	movlw	0
  1809  072B  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  1810  072C  30DF               	movlw	main@beacon_address& (0+255)
  1811  072D  3181  21F5  3186   	fcall	_Ax25_Send_Header
  1812                           
  1813                           ;main.c: 194: Ax25_Send_String("HELLO");
  1814  0730  30BE               	movlw	low (STR_1| (0+32768))
  1815  0731  0020               	movlb	0	; select bank0
  1816  0732  00AD               	movwf	Ax25_Send_String@string
  1817  0733  3084               	movlw	high (STR_1| (0+32768))
  1818  0734  00AE               	movwf	Ax25_Send_String@string+1
  1819  0735  318C  24F3  3186   	fcall	_Ax25_Send_String
  1820                           
  1821                           ;main.c: 195: Ax25_Send_Footer();
  1822  0738  318C  24D8  3186   	fcall	_Ax25_Send_Footer
  1823                           
  1824                           ;main.c: 199: Modem_Setup();
  1825  073B  318C  2418  3186   	fcall	_Modem_Setup
  1826                           
  1827                           ;main.c: 200: Delay_ms(100);
  1828  073E  3064               	movlw	100
  1829  073F  0020               	movlb	0	; select bank0
  1830  0740  00A0               	movwf	Delay_ms@time_to_delay
  1831  0741  3000               	movlw	0
  1832  0742  00A1               	movwf	Delay_ms@time_to_delay+1
  1833  0743  318D  252F  3186   	fcall	_Delay_ms
  1834                           
  1835                           ;main.c: 201: Adf_Lock();
  1836  0746  318F  2712  3186   	fcall	_Adf_Lock
  1837                           
  1838                           ;main.c: 202: Delay_ms(100);
  1839  0749  3064               	movlw	100
  1840  074A  0020               	movlb	0	; select bank0
  1841  074B  00A0               	movwf	Delay_ms@time_to_delay
  1842  074C  3000               	movlw	0
  1843  074D  00A1               	movwf	Delay_ms@time_to_delay+1
  1844  074E  318D  252F  3186   	fcall	_Delay_ms
  1845                           
  1846                           ;main.c: 211: Ptt_On();
  1847  0751  318D  25F7  3186   	fcall	_Ptt_On
  1848  0754                     l2431:	
  1849                           ;main.c: 214: while(1){
  1850                           
  1851                           
  1852                           ;main.c: 215: if(PTT_OFF){
  1853  0754  0021               	movlb	1	; select bank1
  1854  0755  084D               	movf	_PTT_OFF^(0+128),w
  1855  0756  1903               	btfsc	3,2
  1856  0757  2F5D               	goto	l2437
  1857                           
  1858                           ;main.c: 216: Ptt_Off();
  1859  0758  318C  244B  3186   	fcall	_Ptt_Off
  1860                           
  1861                           ;main.c: 217: PTT_OFF = 0;
  1862  075B  0021               	movlb	1	; select bank1
  1863  075C  01CD               	clrf	_PTT_OFF^(0+128)
  1864  075D                     l2437:	
  1865                           
  1866                           ;main.c: 218: }
  1867                           ;main.c: 221: Modem_Flush_Frame();
  1868  075D  318D  254F  3186   	fcall	_Modem_Flush_Frame
  1869  0760                     l2439:	
  1870                           ;main.c: 222: while(MODEM_TRANSMITTING);
  1871                           
  1872  0760  0021               	movlb	1	; select bank1
  1873  0761  08CC               	movf	_MODEM_TRANSMITTING^(0+128),f
  1874  0762  1D03               	skipz
  1875  0763  2F60               	goto	l2439
  1876                           
  1877                           ;main.c: 223: Delay_ms(2000);
  1878  0764  30D0               	movlw	208
  1879  0765  0020               	movlb	0	; select bank0
  1880  0766  00A0               	movwf	Delay_ms@time_to_delay
  1881  0767  3007               	movlw	7
  1882  0768  00A1               	movwf	Delay_ms@time_to_delay+1
  1883  0769  318D  252F  3186   	fcall	_Delay_ms
  1884  076C  0064               	clrwdt	;# 
  1885  076D  2F54               	goto	l2431
  1886  076E                     __end_of_main:	
  1887                           ;main.c: 236: }
  1888                           ;main.c: 237: return (0);
  1889                           ;	Return value of _main is never used
  1890                           
  1891                           
  1892                           	psect	text1
  1893  0C68                     __ptext1:	
  1894 ;; *************** function _Timer1_Start *****************
  1895 ;; Defined at:
  1896 ;;		line 254 in file "utility.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;		None               void
  1903 ;; Registers used:
  1904 ;;		wreg, status,2
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used:    1
  1916 ;; Hardware stack levels required when called:    3
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _Timer1_Start
  1926  0C68                     _Timer1_Start:	
  1927                           
  1928                           ;utility.c: 255: TMR1H = 0x00;
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _Timer1_Start: [wreg+status,2]
  1932  0C68  0020               	movlb	0	; select bank0
  1933  0C69  0197               	clrf	23	;volatile
  1934                           
  1935                           ;utility.c: 256: TMR1L = 0x00;
  1936  0C6A  0196               	clrf	22	;volatile
  1937                           
  1938                           ;utility.c: 258: TMR1IE = 0;
  1939  0C6B  0021               	movlb	1	; select bank1
  1940  0C6C  1011               	bcf	17,0	;volatile
  1941                           
  1942                           ;utility.c: 261: CCPR1H = 0x03;
  1943  0C6D  3003               	movlw	3
  1944  0C6E  0025               	movlb	5	; select bank5
  1945  0C6F  0092               	movwf	18	;volatile
  1946                           
  1947                           ;utility.c: 262: CCPR1L = 0x41;
  1948  0C70  3041               	movlw	65
  1949  0C71  0091               	movwf	17	;volatile
  1950                           
  1951                           ;utility.c: 264: CCP1IF = 0;
  1952  0C72  0020               	movlb	0	; select bank0
  1953  0C73  1111               	bcf	17,2	;volatile
  1954                           
  1955                           ;utility.c: 265: CCP1IE = 1;
  1956  0C74  0021               	movlb	1	; select bank1
  1957  0C75  1511               	bsf	17,2	;volatile
  1958  0C76  0008               	return
  1959  0C77                     __end_of_Timer1_Start:	
  1960                           
  1961                           	psect	text2
  1962  0E66                     __ptext2:	
  1963 ;; *************** function _System_Start *****************
  1964 ;; Defined at:
  1965 ;;		line 97 in file "main.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;		None               void
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;Total ram usage:        1 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    3
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _System_Start
  1995  0E66                     _System_Start:	
  1996                           
  1997                           ;main.c: 100: WDTPS4 = 1;
  1998                           
  1999                           ;incstack = 0
  2000                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2001  0E66  0021               	movlb	1	; select bank1
  2002  0E67  1697               	bsf	23,5	;volatile
  2003                           
  2004                           ;main.c: 101: WDTPS3 = 0;
  2005  0E68  1217               	bcf	23,4	;volatile
  2006                           
  2007                           ;main.c: 102: WDTPS2 = 0;
  2008  0E69  1197               	bcf	23,3	;volatile
  2009                           
  2010                           ;main.c: 103: WDTPS1 = 0;
  2011  0E6A  1117               	bcf	23,2	;volatile
  2012                           
  2013                           ;main.c: 104: WDTPS0 = 1;
  2014  0E6B  1497               	bsf	23,1	;volatile
  2015                           
  2016                           ;main.c: 108: OSCCON = 0x00;
  2017  0E6C  0199               	clrf	25	;volatile
  2018                           
  2019                           ;main.c: 109: OSCCON |= 0b11110000;
  2020  0E6D  30F0               	movlw	240
  2021  0E6E  0020               	movlb	0	; select bank0
  2022  0E6F  00A0               	movwf	??_System_Start
  2023  0E70  0820               	movf	??_System_Start,w
  2024  0E71  0021               	movlb	1	; select bank1
  2025  0E72  0499               	iorwf	25,f	;volatile
  2026                           
  2027                           ;main.c: 110: OSCTUNE = 0x00;
  2028  0E73  0198               	clrf	24	;volatile
  2029                           
  2030                           ;main.c: 114: TMR0CS = 0;
  2031  0E74  1295               	bcf	21,5	;volatile
  2032                           
  2033                           ;main.c: 115: PSA = 1;
  2034  0E75  1595               	bsf	21,3	;volatile
  2035                           
  2036                           ;main.c: 119: TMR1ON = 1;
  2037  0E76  0020               	movlb	0	; select bank0
  2038  0E77  1418               	bsf	24,0	;volatile
  2039                           
  2040                           ;main.c: 120: TMR1GE = 0;
  2041  0E78  1399               	bcf	25,7	;volatile
  2042                           
  2043                           ;main.c: 122: TMR1CS1 = 0;
  2044  0E79  1398               	bcf	24,7	;volatile
  2045                           
  2046                           ;main.c: 123: TMR1CS0 = 0;
  2047  0E7A  1318               	bcf	24,6	;volatile
  2048                           
  2049                           ;main.c: 125: T1CKPS1 = 1;
  2050  0E7B  1698               	bsf	24,5	;volatile
  2051                           
  2052                           ;main.c: 126: T1CKPS0 = 1;
  2053  0E7C  1618               	bsf	24,4	;volatile
  2054                           
  2055                           ;main.c: 128: CCP1M3 = 1;
  2056  0E7D  0025               	movlb	5	; select bank5
  2057  0E7E  1593               	bsf	19,3	;volatile
  2058                           
  2059                           ;main.c: 129: CCP1M2 = 0;
  2060  0E7F  1113               	bcf	19,2	;volatile
  2061                           
  2062                           ;main.c: 130: CCP1M1 = 1;
  2063  0E80  1493               	bsf	19,1	;volatile
  2064                           
  2065                           ;main.c: 131: CCP1M1 = 0;
  2066  0E81  1093               	bcf	19,1	;volatile
  2067                           
  2068                           ;main.c: 135: DACOE = 1;
  2069  0E82  0022               	movlb	2	; select bank2
  2070  0E83  1698               	bsf	24,5	;volatile
  2071                           
  2072                           ;main.c: 136: DACPSS1 = 0;
  2073  0E84  1198               	bcf	24,3	;volatile
  2074                           
  2075                           ;main.c: 137: DACPSS0 = 0;
  2076  0E85  1118               	bcf	24,2	;volatile
  2077                           
  2078                           ;main.c: 138: DACNSS = 0;
  2079  0E86  1018               	bcf	24,0	;volatile
  2080                           
  2081                           ;main.c: 143: ANSA1 = 1;
  2082  0E87  0023               	movlb	3	; select bank3
  2083  0E88  148C               	bsf	12,1	;volatile
  2084                           
  2085                           ;main.c: 144: ADCON0 &= 0b10000011;
  2086  0E89  3083               	movlw	131
  2087  0E8A  0020               	movlb	0	; select bank0
  2088  0E8B  00A0               	movwf	??_System_Start
  2089  0E8C  0820               	movf	??_System_Start,w
  2090  0E8D  0021               	movlb	1	; select bank1
  2091  0E8E  059D               	andwf	29,f	;volatile
  2092                           
  2093                           ;main.c: 145: ADCON0 |= 0b00000100;
  2094  0E8F  151D               	bsf	29,2	;volatile
  2095                           
  2096                           ;main.c: 146: ADNREF = 0;
  2097  0E90  111E               	bcf	30,2	;volatile
  2098                           
  2099                           ;main.c: 147: ADPREF1 = 0;
  2100  0E91  109E               	bcf	30,1	;volatile
  2101                           
  2102                           ;main.c: 148: ADPREF0 = 0;
  2103  0E92  101E               	bcf	30,0	;volatile
  2104                           
  2105                           ;main.c: 149: ADCS2 = 1;
  2106  0E93  171E               	bsf	30,6	;volatile
  2107                           
  2108                           ;main.c: 150: ADCS1 = 1;
  2109  0E94  169E               	bsf	30,5	;volatile
  2110                           
  2111                           ;main.c: 151: ADCS0 = 0;
  2112  0E95  121E               	bcf	30,4	;volatile
  2113                           
  2114                           ;main.c: 152: ADFM = 1;
  2115  0E96  179E               	bsf	30,7	;volatile
  2116                           
  2117                           ;main.c: 157: TMR0IF = 0;
  2118  0E97  110B               	bcf	11,2	;volatile
  2119                           
  2120                           ;main.c: 158: TMR1IF = 0;
  2121  0E98  0020               	movlb	0	; select bank0
  2122  0E99  1011               	bcf	17,0	;volatile
  2123                           
  2124                           ;main.c: 159: CCP1IF = 0;
  2125  0E9A  1111               	bcf	17,2	;volatile
  2126                           
  2127                           ;main.c: 160: ADIF = 0;
  2128  0E9B  1311               	bcf	17,6	;volatile
  2129                           
  2130                           ;main.c: 164: INTCON |= 0xC0;
  2131  0E9C  30C0               	movlw	192
  2132  0E9D  00A0               	movwf	??_System_Start
  2133  0E9E  0820               	movf	??_System_Start,w
  2134  0E9F  048B               	iorwf	11,f	;volatile
  2135  0EA0  0008               	return
  2136  0EA1                     __end_of_System_Start:	
  2137                           
  2138                           	psect	text3
  2139  0C4B                     __ptext3:	
  2140 ;; *************** function _Ptt_Off *****************
  2141 ;; Defined at:
  2142 ;;		line 339 in file "adf7012.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;		None
  2147 ;; Return value:  Size  Location     Type
  2148 ;;		None               void
  2149 ;; Registers used:
  2150 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2160 ;;Total ram usage:        0 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    9
  2163 ;; This function calls:
  2164 ;;		_Adf_Write_Config
  2165 ;;		_Delay_ms
  2166 ;; This function is called by:
  2167 ;;		_main
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function _Ptt_Off
  2173  0C4B                     _Ptt_Off:	
  2174                           
  2175                           ;adf7012.c: 341: adf_config.r3.pa_enable = 0;
  2176                           
  2177                           ;incstack = 0
  2178                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2179  0C4B  0021               	movlb	1	; select bank1
  2180  0C4C  01BA               	clrf	(_adf_config^(0+128)+26)
  2181                           
  2182                           ;adf7012.c: 342: adf_config.r2.power_amplifier_level = 0;
  2183  0C4D  01B2               	clrf	(_adf_config^(0+128)+18)
  2184                           
  2185                           ;adf7012.c: 343: Adf_Write_Config();
  2186  0C4E  318C  2431  318C   	fcall	_Adf_Write_Config
  2187                           
  2188                           ;adf7012.c: 344: Delay_ms(10);
  2189  0C51  300A               	movlw	10
  2190  0C52  0020               	movlb	0	; select bank0
  2191  0C53  00A0               	movwf	Delay_ms@time_to_delay
  2192  0C54  3000               	movlw	0
  2193  0C55  00A1               	movwf	Delay_ms@time_to_delay+1
  2194  0C56  318D  252F         	fcall	_Delay_ms
  2195  0C58  0008               	return
  2196  0C59                     __end_of_Ptt_Off:	
  2197                           
  2198                           	psect	text4
  2199  0C18                     __ptext4:	
  2200 ;; *************** function _Modem_Setup *****************
  2201 ;; Defined at:
  2202 ;;		line 53 in file "audio_tone.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;		None               void
  2209 ;; Registers used:
  2210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:   10
  2223 ;; This function calls:
  2224 ;;		_Configure_Audio
  2225 ;;		_Radio_Setup
  2226 ;; This function is called by:
  2227 ;;		_main
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           
  2232                           ;psect for function _Modem_Setup
  2233  0C18                     _Modem_Setup:	
  2234                           
  2235                           ;audio_tone.c: 55: Configure_Audio();
  2236                           
  2237                           ;incstack = 0
  2238                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2239  0C18  318C  24A8  318C   	fcall	_Configure_Audio
  2240                           
  2241                           ;audio_tone.c: 56: Radio_Setup();
  2242  0C1B  318C  243D         	fcall	_Radio_Setup
  2243  0C1D  0008               	return
  2244  0C1E                     __end_of_Modem_Setup:	
  2245                           
  2246                           	psect	text5
  2247  0C3D                     __ptext5:	
  2248 ;; *************** function _Radio_Setup *****************
  2249 ;; Defined at:
  2250 ;;		line 299 in file "adf7012.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;		None               void
  2257 ;; Registers used:
  2258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    9
  2271 ;; This function calls:
  2272 ;;		_Adf_Reset_Config
  2273 ;;		_Adf_Write_Config
  2274 ;;		_Delay_ms
  2275 ;; This function is called by:
  2276 ;;		_Modem_Setup
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function _Radio_Setup
  2282  0C3D                     _Radio_Setup:	
  2283                           
  2284                           ;adf7012.c: 302: Adf_Reset_Config();
  2285                           
  2286                           ;incstack = 0
  2287                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2288  0C3D  318C  2459  318C   	fcall	_Adf_Reset_Config
  2289                           
  2290                           ;adf7012.c: 304: Adf_Write_Config();
  2291  0C40  318C  2431  318C   	fcall	_Adf_Write_Config
  2292                           
  2293                           ;adf7012.c: 306: Delay_ms(10);
  2294  0C43  300A               	movlw	10
  2295  0C44  0020               	movlb	0	; select bank0
  2296  0C45  00A0               	movwf	Delay_ms@time_to_delay
  2297  0C46  3000               	movlw	0
  2298  0C47  00A1               	movwf	Delay_ms@time_to_delay+1
  2299  0C48  318D  252F         	fcall	_Delay_ms
  2300  0C4A  0008               	return
  2301  0C4B                     __end_of_Radio_Setup:	
  2302                           
  2303                           	psect	text6
  2304  0C59                     __ptext6:	
  2305 ;; *************** function _Adf_Reset_Config *****************
  2306 ;; Defined at:
  2307 ;;		line 84 in file "adf7012.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;		None
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;		None
  2312 ;; Return value:  Size  Location     Type
  2313 ;;		None               void
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0, pclath, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;Total ram usage:        0 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    6
  2328 ;; This function calls:
  2329 ;;		_Adf_Reset
  2330 ;;		_Adf_Reset_Register_One
  2331 ;;		_Adf_Reset_Register_Three
  2332 ;;		_Adf_Reset_Register_Two
  2333 ;;		_Adf_Reset_Register_Zero
  2334 ;; This function is called by:
  2335 ;;		_Radio_Setup
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           
  2340                           ;psect for function _Adf_Reset_Config
  2341  0C59                     _Adf_Reset_Config:	
  2342                           
  2343                           ;adf7012.c: 87: Adf_Reset_Register_Zero();
  2344                           
  2345                           ;incstack = 0
  2346                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  2347  0C59  318D  2510  318C   	fcall	_Adf_Reset_Register_Zero
  2348                           
  2349                           ;adf7012.c: 88: Adf_Reset_Register_One();
  2350  0C5C  318C  2497  318C   	fcall	_Adf_Reset_Register_One
  2351                           
  2352                           ;adf7012.c: 89: Adf_Reset_Register_Two();
  2353  0C5F  318C  24C0  318C   	fcall	_Adf_Reset_Register_Two
  2354                           
  2355                           ;adf7012.c: 90: Adf_Reset_Register_Three();
  2356  0C62  3183  23D8  318C   	fcall	_Adf_Reset_Register_Three
  2357                           
  2358                           ;adf7012.c: 92: Adf_Reset();
  2359  0C65  3187  27EA         	fcall	_Adf_Reset
  2360  0C67  0008               	return
  2361  0C68                     __end_of_Adf_Reset_Config:	
  2362                           
  2363                           	psect	text7
  2364  0D10                     __ptext7:	
  2365 ;; *************** function _Adf_Reset_Register_Zero *****************
  2366 ;; Defined at:
  2367 ;;		line 96 in file "adf7012.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;		None               void
  2374 ;; Registers used:
  2375 ;;		wreg, status,2
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2385 ;;Total ram usage:        1 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    3
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_Adf_Reset_Config
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _Adf_Reset_Register_Zero
  2397  0D10                     _Adf_Reset_Register_Zero:	
  2398                           
  2399                           ;adf7012.c: 97: adf_config.r0.frequency_error_correction = 0;
  2400                           
  2401                           ;incstack = 0
  2402                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  2403  0D10  3000               	movlw	0
  2404  0D11  0021               	movlb	1	; select bank1
  2405  0D12  00A3               	movwf	(_adf_config+3)^(0+128)
  2406  0D13  3000               	movlw	0
  2407  0D14  00A2               	movwf	(_adf_config+2)^(0+128)
  2408  0D15  3000               	movlw	0
  2409  0D16  00A1               	movwf	(_adf_config+1)^(0+128)
  2410  0D17  3000               	movlw	0
  2411  0D18  00A0               	movwf	_adf_config^(0+128)
  2412                           
  2413                           ;adf7012.c: 98: adf_config.r0.r_divider = 15;
  2414  0D19  300F               	movlw	15
  2415  0D1A  0020               	movlb	0	; select bank0
  2416  0D1B  00A0               	movwf	??_Adf_Reset_Register_Zero
  2417  0D1C  0820               	movf	??_Adf_Reset_Register_Zero,w
  2418  0D1D  0021               	movlb	1	; select bank1
  2419  0D1E  00A4               	movwf	(_adf_config^(0+128)+4)
  2420                           
  2421                           ;adf7012.c: 99: adf_config.r0.crystal_doubler = 0;
  2422  0D1F  01A5               	clrf	(_adf_config^(0+128)+5)
  2423                           
  2424                           ;adf7012.c: 100: adf_config.r0.crystal_oscillator_disable = 0;
  2425  0D20  01A6               	clrf	(_adf_config^(0+128)+6)
  2426                           
  2427                           ;adf7012.c: 101: adf_config.r0.clock_out_divider = 2;
  2428  0D21  3002               	movlw	2
  2429  0D22  0020               	movlb	0	; select bank0
  2430  0D23  00A0               	movwf	??_Adf_Reset_Register_Zero
  2431  0D24  0820               	movf	??_Adf_Reset_Register_Zero,w
  2432  0D25  0021               	movlb	1	; select bank1
  2433  0D26  00A7               	movwf	(_adf_config^(0+128)+7)
  2434                           
  2435                           ;adf7012.c: 102: adf_config.r0.vco_adjust = 0;
  2436  0D27  01A8               	clrf	(_adf_config^(0+128)+8)
  2437                           
  2438                           ;adf7012.c: 103: adf_config.r0.output_divider = 2;
  2439  0D28  3002               	movlw	2
  2440  0D29  0020               	movlb	0	; select bank0
  2441  0D2A  00A0               	movwf	??_Adf_Reset_Register_Zero
  2442  0D2B  0820               	movf	??_Adf_Reset_Register_Zero,w
  2443  0D2C  0021               	movlb	1	; select bank1
  2444  0D2D  00A9               	movwf	(_adf_config^(0+128)+9)
  2445  0D2E  0008               	return
  2446  0D2F                     __end_of_Adf_Reset_Register_Zero:	
  2447                           
  2448                           	psect	text8
  2449  0CC0                     __ptext8:	
  2450 ;; *************** function _Adf_Reset_Register_Two *****************
  2451 ;; Defined at:
  2452 ;;		line 112 in file "adf7012.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;		None
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;		None               void
  2459 ;; Registers used:
  2460 ;;		wreg, status,2
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;Total ram usage:        1 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    3
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_Adf_Reset_Config
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _Adf_Reset_Register_Two
  2482  0CC0                     _Adf_Reset_Register_Two:	
  2483                           
  2484                           ;adf7012.c: 113: adf_config.r2.mod_control = 3;
  2485                           
  2486                           ;incstack = 0
  2487                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  2488  0CC0  3003               	movlw	3
  2489  0CC1  0020               	movlb	0	; select bank0
  2490  0CC2  00A0               	movwf	??_Adf_Reset_Register_Two
  2491  0CC3  0820               	movf	??_Adf_Reset_Register_Two,w
  2492  0CC4  0021               	movlb	1	; select bank1
  2493  0CC5  00B0               	movwf	(_adf_config^(0+128)+16)
  2494                           
  2495                           ;adf7012.c: 114: adf_config.r2.gook = 0;
  2496  0CC6  01B1               	clrf	(_adf_config^(0+128)+17)
  2497                           
  2498                           ;adf7012.c: 115: adf_config.r2.power_amplifier_level = 15;
  2499  0CC7  300F               	movlw	15
  2500  0CC8  0020               	movlb	0	; select bank0
  2501  0CC9  00A0               	movwf	??_Adf_Reset_Register_Two
  2502  0CCA  0820               	movf	??_Adf_Reset_Register_Two,w
  2503  0CCB  0021               	movlb	1	; select bank1
  2504  0CCC  00B2               	movwf	(_adf_config^(0+128)+18)
  2505                           
  2506                           ;adf7012.c: 116: adf_config.r2.modulation_deviation = 16;
  2507  0CCD  3000               	movlw	0
  2508  0CCE  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  2509  0CCF  3000               	movlw	0
  2510  0CD0  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  2511  0CD1  3000               	movlw	0
  2512  0CD2  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  2513  0CD3  3010               	movlw	16
  2514  0CD4  00B3               	movwf	(_adf_config^(0+128)+19)
  2515                           
  2516                           ;adf7012.c: 117: adf_config.r2.gfsk_modulation_control = 0;
  2517  0CD5  01B7               	clrf	(_adf_config^(0+128)+23)
  2518                           
  2519                           ;adf7012.c: 118: adf_config.r2.index_counter = 0;
  2520  0CD6  01B8               	clrf	(_adf_config^(0+128)+24)
  2521  0CD7  0008               	return
  2522  0CD8                     __end_of_Adf_Reset_Register_Two:	
  2523                           
  2524                           	psect	text9
  2525  03D8                     __ptext9:	
  2526 ;; *************** function _Adf_Reset_Register_Three *****************
  2527 ;; Defined at:
  2528 ;;		line 121 in file "adf7012.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;		None               void
  2535 ;; Registers used:
  2536 ;;		wreg, status,2
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2545 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2546 ;;Total ram usage:        1 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; Hardware stack levels required when called:    3
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_Adf_Reset_Config
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           
  2557                           ;psect for function _Adf_Reset_Register_Three
  2558  03D8                     _Adf_Reset_Register_Three:	
  2559                           
  2560                           ;adf7012.c: 122: adf_config.r3.pll_enable = 0;
  2561                           
  2562                           ;incstack = 0
  2563                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  2564  03D8  0021               	movlb	1	; select bank1
  2565  03D9  01B9               	clrf	(_adf_config^(0+128)+25)
  2566                           
  2567                           ;adf7012.c: 123: adf_config.r3.pa_enable = 0;
  2568  03DA  01BA               	clrf	(_adf_config^(0+128)+26)
  2569                           
  2570                           ;adf7012.c: 124: adf_config.r3.clkout_enable = 1;
  2571  03DB  01BB               	clrf	(_adf_config^(0+128)+27)
  2572  03DC  0ABB               	incf	(_adf_config^(0+128)+27),f
  2573                           
  2574                           ;adf7012.c: 125: adf_config.r3.data_invert = 1;
  2575  03DD  01BC               	clrf	(_adf_config^(0+128)+28)
  2576  03DE  0ABC               	incf	(_adf_config^(0+128)+28),f
  2577                           
  2578                           ;adf7012.c: 126: adf_config.r3.charge_pump_current = 3;
  2579  03DF  3003               	movlw	3
  2580  03E0  0020               	movlb	0	; select bank0
  2581  03E1  00A0               	movwf	??_Adf_Reset_Register_Three
  2582  03E2  0820               	movf	??_Adf_Reset_Register_Three,w
  2583  03E3  0021               	movlb	1	; select bank1
  2584  03E4  00BD               	movwf	(_adf_config^(0+128)+29)
  2585                           
  2586                           ;adf7012.c: 127: adf_config.r3.bleed_up = 0;
  2587  03E5  01BE               	clrf	(_adf_config^(0+128)+30)
  2588                           
  2589                           ;adf7012.c: 128: adf_config.r3.bleed_down = 0;
  2590  03E6  01BF               	clrf	(_adf_config^(0+128)+31)
  2591                           
  2592                           ;adf7012.c: 129: adf_config.r3.vco_disable = 0;
  2593  03E7  01C0               	clrf	(_adf_config^(0+128)+32)
  2594                           
  2595                           ;adf7012.c: 131: adf_config.r3.muxout = 3;
  2596  03E8  3003               	movlw	3
  2597  03E9  0020               	movlb	0	; select bank0
  2598  03EA  00A0               	movwf	??_Adf_Reset_Register_Three
  2599  03EB  0820               	movf	??_Adf_Reset_Register_Three,w
  2600  03EC  0021               	movlb	1	; select bank1
  2601  03ED  00C1               	movwf	(_adf_config^(0+128)+33)
  2602                           
  2603                           ;adf7012.c: 133: adf_config.r3.ld_precision = 0;
  2604  03EE  01C2               	clrf	(_adf_config^(0+128)+34)
  2605                           
  2606                           ;adf7012.c: 134: adf_config.r3.vco_bias = 6;
  2607  03EF  3006               	movlw	6
  2608  03F0  0020               	movlb	0	; select bank0
  2609  03F1  00A0               	movwf	??_Adf_Reset_Register_Three
  2610  03F2  0820               	movf	??_Adf_Reset_Register_Three,w
  2611  03F3  0021               	movlb	1	; select bank1
  2612  03F4  00C3               	movwf	(_adf_config^(0+128)+35)
  2613                           
  2614                           ;adf7012.c: 135: adf_config.r3.pa_bias = 4;
  2615  03F5  3004               	movlw	4
  2616  03F6  0020               	movlb	0	; select bank0
  2617  03F7  00A0               	movwf	??_Adf_Reset_Register_Three
  2618  03F8  0820               	movf	??_Adf_Reset_Register_Three,w
  2619  03F9  0021               	movlb	1	; select bank1
  2620  03FA  00C4               	movwf	(_adf_config^(0+128)+36)
  2621                           
  2622                           ;adf7012.c: 136: adf_config.r3.pll_test_mode = 0;
  2623  03FB  01C5               	clrf	(_adf_config^(0+128)+37)
  2624                           
  2625                           ;adf7012.c: 137: adf_config.r3.sd_test_mode = 0;
  2626  03FC  01C6               	clrf	(_adf_config^(0+128)+38)
  2627  03FD  0008               	return
  2628  03FE                     __end_of_Adf_Reset_Register_Three:	
  2629                           
  2630                           	psect	text10
  2631  0C97                     __ptext10:	
  2632 ;; *************** function _Adf_Reset_Register_One *****************
  2633 ;; Defined at:
  2634 ;;		line 106 in file "adf7012.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;Total ram usage:        1 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    3
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		_Adf_Reset_Config
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           
  2663                           ;psect for function _Adf_Reset_Register_One
  2664  0C97                     _Adf_Reset_Register_One:	
  2665                           
  2666                           ;adf7012.c: 107: adf_config.r1.integer_n = 109;
  2667                           
  2668                           ;incstack = 0
  2669                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  2670  0C97  306D               	movlw	109
  2671  0C98  0020               	movlb	0	; select bank0
  2672  0C99  00A0               	movwf	??_Adf_Reset_Register_One
  2673  0C9A  0820               	movf	??_Adf_Reset_Register_One,w
  2674  0C9B  0021               	movlb	1	; select bank1
  2675  0C9C  00AE               	movwf	(_adf_config^(0+128)+14)
  2676                           
  2677                           ;adf7012.c: 108: adf_config.r1.fractional_n = 0;
  2678  0C9D  3000               	movlw	0
  2679  0C9E  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  2680  0C9F  3000               	movlw	0
  2681  0CA0  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  2682  0CA1  3000               	movlw	0
  2683  0CA2  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  2684  0CA3  3000               	movlw	0
  2685  0CA4  00AA               	movwf	(_adf_config^(0+128)+10)
  2686                           
  2687                           ;adf7012.c: 109: adf_config.r1.prescaler = 1;
  2688  0CA5  01AF               	clrf	(_adf_config^(0+128)+15)
  2689  0CA6  0AAF               	incf	(_adf_config^(0+128)+15),f
  2690  0CA7  0008               	return
  2691  0CA8                     __end_of_Adf_Reset_Register_One:	
  2692                           
  2693                           	psect	text11
  2694  07EA                     __ptext11:	
  2695 ;; *************** function _Adf_Reset *****************
  2696 ;; Defined at:
  2697 ;;		line 140 in file "adf7012.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;		None               void
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    5
  2718 ;; This function calls:
  2719 ;;		_Delay_ms
  2720 ;; This function is called by:
  2721 ;;		_Adf_Reset_Config
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _Adf_Reset
  2727  07EA                     _Adf_Reset:	
  2728                           
  2729                           ;adf7012.c: 142: PORTAbits.RA5 = 0;;
  2730                           
  2731                           ;incstack = 0
  2732                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  2733  07EA  0020               	movlb	0	; select bank0
  2734  07EB  128C               	bcf	12,5	;volatile
  2735                           
  2736                           ;adf7012.c: 143: Delay_ms(10);
  2737  07EC  300A               	movlw	10
  2738  07ED  00A0               	movwf	Delay_ms@time_to_delay
  2739  07EE  3000               	movlw	0
  2740  07EF  00A1               	movwf	Delay_ms@time_to_delay+1
  2741  07F0  318D  252F  3187   	fcall	_Delay_ms
  2742                           
  2743                           ;adf7012.c: 144: PORTAbits.RA5 = 1;;
  2744  07F3  0020               	movlb	0	; select bank0
  2745  07F4  168C               	bsf	12,5	;volatile
  2746                           
  2747                           ;adf7012.c: 145: Delay_ms(10);
  2748  07F5  300A               	movlw	10
  2749  07F6  00A0               	movwf	Delay_ms@time_to_delay
  2750  07F7  3000               	movlw	0
  2751  07F8  00A1               	movwf	Delay_ms@time_to_delay+1
  2752  07F9  318D  252F         	fcall	_Delay_ms
  2753  07FB  0008               	return
  2754  07FC                     __end_of_Adf_Reset:	
  2755                           
  2756                           	psect	text12
  2757  0CA8                     __ptext12:	
  2758 ;; *************** function _Configure_Audio *****************
  2759 ;; Defined at:
  2760 ;;		line 47 in file "audio_tone.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;		None               void
  2767 ;; Registers used:
  2768 ;;		wreg
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2776 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2777 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2778 ;;Total ram usage:        1 bytes
  2779 ;; Hardware stack levels used:    1
  2780 ;; Hardware stack levels required when called:    3
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_Modem_Setup
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           
  2789                           ;psect for function _Configure_Audio
  2790  0CA8                     _Configure_Audio:	
  2791                           
  2792                           ;audio_tone.c: 48: SAMPLES_PER_BAUD = 26;
  2793                           
  2794                           ;incstack = 0
  2795                           ; Regs used in _Configure_Audio: [wreg]
  2796  0CA8  301A               	movlw	26
  2797  0CA9  0020               	movlb	0	; select bank0
  2798  0CAA  00A0               	movwf	??_Configure_Audio
  2799  0CAB  0820               	movf	??_Configure_Audio,w
  2800  0CAC  0021               	movlb	1	; select bank1
  2801  0CAD  00CE               	movwf	_SAMPLES_PER_BAUD^(0+128)
  2802                           
  2803                           ;audio_tone.c: 49: PHASE_DELTA_1200 = 7;
  2804  0CAE  3000               	movlw	0
  2805  0CAF  0022               	movlb	2	; select bank2
  2806  0CB0  00A7               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  2807  0CB1  3000               	movlw	0
  2808  0CB2  00A6               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  2809  0CB3  3000               	movlw	0
  2810  0CB4  00A5               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  2811  0CB5  3007               	movlw	7
  2812  0CB6  00A4               	movwf	_PHASE_DELTA_1200^(0+256)
  2813                           
  2814                           ;audio_tone.c: 50: PHASE_DELTA_2200 = 13;
  2815  0CB7  3000               	movlw	0
  2816  0CB8  00AB               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  2817  0CB9  3000               	movlw	0
  2818  0CBA  00AA               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  2819  0CBB  3000               	movlw	0
  2820  0CBC  00A9               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  2821  0CBD  300D               	movlw	13
  2822  0CBE  00A8               	movwf	_PHASE_DELTA_2200^(0+256)
  2823  0CBF  0008               	return
  2824  0CC0                     __end_of_Configure_Audio:	
  2825                           
  2826                           	psect	text13
  2827  0D4F                     __ptext13:	
  2828 ;; *************** function _Modem_Flush_Frame *****************
  2829 ;; Defined at:
  2830 ;;		line 59 in file "audio_tone.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;		None               void
  2837 ;; Registers used:
  2838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2848 ;;Total ram usage:        1 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:   10
  2851 ;; This function calls:
  2852 ;;		_Delay_ms
  2853 ;;		_Ptt_On
  2854 ;;		_Timer0_Start
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _Modem_Flush_Frame
  2862  0D4F                     _Modem_Flush_Frame:	
  2863                           
  2864                           ;audio_tone.c: 61: phase_delta = PHASE_DELTA_1200;
  2865                           
  2866                           ;incstack = 0
  2867                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2868  0D4F  0022               	movlb	2	; select bank2
  2869  0D50  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  2870  0D51  0020               	movlb	0	; select bank0
  2871  0D52  00EC               	movwf	??_Modem_Flush_Frame
  2872  0D53  086C               	movf	??_Modem_Flush_Frame,w
  2873  0D54  0021               	movlb	1	; select bank1
  2874  0D55  00D2               	movwf	_phase_delta^(0+128)
  2875                           
  2876                           ;audio_tone.c: 62: phase = 0;
  2877  0D56  01FD               	clrf	_phase
  2878                           
  2879                           ;audio_tone.c: 63: packet_pos = 0;
  2880  0D57  3000               	movlw	0
  2881  0D58  0022               	movlb	2	; select bank2
  2882  0D59  00B3               	movwf	(_packet_pos+3)^(0+256)
  2883  0D5A  3000               	movlw	0
  2884  0D5B  00B2               	movwf	(_packet_pos+2)^(0+256)
  2885  0D5C  3000               	movlw	0
  2886  0D5D  00B1               	movwf	(_packet_pos+1)^(0+256)
  2887  0D5E  3000               	movlw	0
  2888  0D5F  00B0               	movwf	_packet_pos^(0+256)
  2889                           
  2890                           ;audio_tone.c: 64: current_sample_in_baud = 0;
  2891  0D60  0021               	movlb	1	; select bank1
  2892  0D61  01D1               	clrf	_current_sample_in_baud^(0+128)
  2893                           
  2894                           ;audio_tone.c: 65: MODEM_TRANSMITTING = 1;
  2895  0D62  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  2896  0D63  0ACC               	incf	_MODEM_TRANSMITTING^(0+128),f
  2897                           
  2898                           ;audio_tone.c: 75: Ptt_On();
  2899  0D64  318D  25F7  318D   	fcall	_Ptt_On
  2900                           
  2901                           ;audio_tone.c: 77: Delay_ms(100);
  2902  0D67  3064               	movlw	100
  2903  0D68  0020               	movlb	0	; select bank0
  2904  0D69  00A0               	movwf	Delay_ms@time_to_delay
  2905  0D6A  3000               	movlw	0
  2906  0D6B  00A1               	movwf	Delay_ms@time_to_delay+1
  2907  0D6C  318D  252F  318D   	fcall	_Delay_ms
  2908                           
  2909                           ;audio_tone.c: 78: Timer0_Start();
  2910  0D6F  318C  2407         	fcall	_Timer0_Start
  2911  0D71  0008               	return
  2912  0D72                     __end_of_Modem_Flush_Frame:	
  2913                           
  2914                           	psect	text14
  2915  0C07                     __ptext14:	
  2916 ;; *************** function _Timer0_Start *****************
  2917 ;; Defined at:
  2918 ;;		line 244 in file "utility.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;		None               void
  2925 ;; Registers used:
  2926 ;;		status,2
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    3
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_Modem_Flush_Frame
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           
  2947                           ;psect for function _Timer0_Start
  2948  0C07                     _Timer0_Start:	
  2949                           
  2950                           ;utility.c: 245: TMR0 = 0x00;
  2951                           
  2952                           ;incstack = 0
  2953                           ; Regs used in _Timer0_Start: [status,2]
  2954  0C07  0020               	movlb	0	; select bank0
  2955  0C08  0195               	clrf	21	;volatile
  2956                           
  2957                           ;utility.c: 246: TMR0IF = 0;
  2958  0C09  110B               	bcf	11,2	;volatile
  2959                           
  2960                           ;utility.c: 247: TMR0IE = 1;
  2961  0C0A  168B               	bsf	11,5	;volatile
  2962  0C0B  0008               	return
  2963  0C0C                     __end_of_Timer0_Start:	
  2964                           
  2965                           	psect	text15
  2966  0DF7                     __ptext15:	
  2967 ;; *************** function _Ptt_On *****************
  2968 ;; Defined at:
  2969 ;;		line 310 in file "adf7012.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      unsigned char 
  2976 ;; Registers used:
  2977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2985 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2986 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2987 ;;Total ram usage:        1 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    9
  2990 ;; This function calls:
  2991 ;;		_Adf_Write_Config
  2992 ;;		_Delay_ms
  2993 ;;		_Read_Adf7012_Muxout
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;;		_Modem_Flush_Frame
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           
  3001                           ;psect for function _Ptt_On
  3002  0DF7                     _Ptt_On:	
  3003                           
  3004                           ;adf7012.c: 312: adf_config.r3.pa_enable = 0;
  3005                           
  3006                           ;incstack = 0
  3007                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3008  0DF7  0021               	movlb	1	; select bank1
  3009  0DF8  01BA               	clrf	(_adf_config^(0+128)+26)
  3010                           
  3011                           ;adf7012.c: 313: adf_config.r2.power_amplifier_level = 0;
  3012  0DF9  01B2               	clrf	(_adf_config^(0+128)+18)
  3013                           
  3014                           ;adf7012.c: 314: adf_config.r3.muxout = 3;
  3015  0DFA  3003               	movlw	3
  3016  0DFB  0020               	movlb	0	; select bank0
  3017  0DFC  00EB               	movwf	??_Ptt_On
  3018  0DFD  086B               	movf	??_Ptt_On,w
  3019  0DFE  0021               	movlb	1	; select bank1
  3020  0DFF  00C1               	movwf	(_adf_config^(0+128)+33)
  3021                           
  3022                           ;adf7012.c: 316: Adf_Write_Config();
  3023  0E00  318C  2431  318D   	fcall	_Adf_Write_Config
  3024                           
  3025                           ;adf7012.c: 317: Delay_ms(10);
  3026  0E03  300A               	movlw	10
  3027  0E04  0020               	movlb	0	; select bank0
  3028  0E05  00A0               	movwf	Delay_ms@time_to_delay
  3029  0E06  3000               	movlw	0
  3030  0E07  00A1               	movwf	Delay_ms@time_to_delay+1
  3031  0E08  318D  252F  318D   	fcall	_Delay_ms
  3032                           
  3033                           ;adf7012.c: 321: if (!Read_Adf7012_Muxout())
  3034  0E0B  318C  242A  318D   	fcall	_Read_Adf7012_Muxout
  3035  0E0E  3800               	iorlw	0
  3036  0E0F  1903               	btfsc	3,2
  3037  0E10  0008               	return
  3038                           
  3039                           ;adf7012.c: 325: else
  3040                           ;adf7012.c: 326: {
  3041                           ;adf7012.c: 328: adf_config.r3.pa_enable = 1;
  3042                           
  3043                           ;adf7012.c: 324: }
  3044                           
  3045                           ;adf7012.c: 322: {
  3046                           ;adf7012.c: 323: return 0;
  3047                           ;	Return value of _Ptt_On is never used
  3048  0E11  0021               	movlb	1	; select bank1
  3049  0E12  01BA               	clrf	(_adf_config^(0+128)+26)
  3050  0E13  0ABA               	incf	(_adf_config^(0+128)+26),f
  3051                           
  3052                           ;adf7012.c: 329: adf_config.r2.power_amplifier_level = 63;
  3053  0E14  303F               	movlw	63
  3054  0E15  0020               	movlb	0	; select bank0
  3055  0E16  00EB               	movwf	??_Ptt_On
  3056  0E17  086B               	movf	??_Ptt_On,w
  3057  0E18  0021               	movlb	1	; select bank1
  3058  0E19  00B2               	movwf	(_adf_config^(0+128)+18)
  3059                           
  3060                           ;adf7012.c: 331: Delay_ms(10);
  3061  0E1A  300A               	movlw	10
  3062  0E1B  0020               	movlb	0	; select bank0
  3063  0E1C  00A0               	movwf	Delay_ms@time_to_delay
  3064  0E1D  3000               	movlw	0
  3065  0E1E  00A1               	movwf	Delay_ms@time_to_delay+1
  3066  0E1F  318D  252F  318D   	fcall	_Delay_ms
  3067                           
  3068                           ;adf7012.c: 332: Adf_Write_Config();
  3069  0E22  318C  2431  318D   	fcall	_Adf_Write_Config
  3070                           
  3071                           ;adf7012.c: 333: Delay_ms(1);
  3072  0E25  3001               	movlw	1
  3073  0E26  0020               	movlb	0	; select bank0
  3074  0E27  00A0               	movwf	Delay_ms@time_to_delay
  3075  0E28  3000               	movlw	0
  3076  0E29  00A1               	movwf	Delay_ms@time_to_delay+1
  3077  0E2A  318D  252F         	fcall	_Delay_ms
  3078                           
  3079                           ;adf7012.c: 335: return 1;
  3080                           ;	Return value of _Ptt_On is never used
  3081  0E2C  0008               	return
  3082  0E2D                     __end_of_Ptt_On:	
  3083                           
  3084                           	psect	text16
  3085  0C77                     __ptext16:	
  3086 ;; *************** function _Gpio_Config *****************
  3087 ;; Defined at:
  3088 ;;		line 31 in file "utility.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      unsigned char 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;Total ram usage:        1 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    3
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           
  3117                           ;psect for function _Gpio_Config
  3118  0C77                     _Gpio_Config:	
  3119                           
  3120                           ;utility.c: 34: TRISA |= 0b00000010;
  3121                           
  3122                           ;incstack = 0
  3123                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  3124  0C77  0021               	movlb	1	; select bank1
  3125  0C78  148C               	bsf	12,1	;volatile
  3126                           
  3127                           ;utility.c: 35: TRISA &= 0b11001011;
  3128  0C79  30CB               	movlw	203
  3129  0C7A  0020               	movlb	0	; select bank0
  3130  0C7B  00A0               	movwf	??_Gpio_Config
  3131  0C7C  0820               	movf	??_Gpio_Config,w
  3132  0C7D  0021               	movlb	1	; select bank1
  3133  0C7E  058C               	andwf	12,f	;volatile
  3134                           
  3135                           ;utility.c: 36: TRISC |= 0b00100000;
  3136  0C7F  168E               	bsf	14,5	;volatile
  3137                           
  3138                           ;utility.c: 37: TRISC &= 0b11100000;
  3139  0C80  30E0               	movlw	224
  3140  0C81  0020               	movlb	0	; select bank0
  3141  0C82  00A0               	movwf	??_Gpio_Config
  3142  0C83  0820               	movf	??_Gpio_Config,w
  3143  0C84  0021               	movlb	1	; select bank1
  3144  0C85  058E               	andwf	14,f	;volatile
  3145  0C86  0008               	return
  3146  0C87                     __end_of_Gpio_Config:	
  3147                           ;utility.c: 39: return 1;
  3148                           ;	Return value of _Gpio_Config is never used
  3149                           
  3150                           
  3151                           	psect	text17
  3152  0CF3                     __ptext17:	
  3153 ;; *************** function _Ax25_Send_String *****************
  3154 ;; Defined at:
  3155 ;;		line 91 in file "ax25.c"
  3156 ;; Parameters:    Size  Location     Type
  3157 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  3158 ;;		 -> STR_1(6), 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  i               2   15[BANK0 ] int 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;		None               void
  3163 ;; Registers used:
  3164 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3170 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;Total ram usage:        4 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    6
  3177 ;; This function calls:
  3178 ;;		_Ax25_Send_Byte
  3179 ;; This function is called by:
  3180 ;;		_main
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           
  3185                           ;psect for function _Ax25_Send_String
  3186  0CF3                     _Ax25_Send_String:	
  3187                           
  3188                           ;ax25.c: 93: int i;
  3189                           ;ax25.c: 94: for (i = 0; string[i]; i++) {
  3190                           
  3191                           ;incstack = 0
  3192                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3193  0CF3  0020               	movlb	0	; select bank0
  3194  0CF4  01AF               	clrf	Ax25_Send_String@i
  3195  0CF5  01B0               	clrf	Ax25_Send_String@i+1
  3196  0CF6                     l2195:	
  3197  0CF6  082D               	movf	Ax25_Send_String@string,w
  3198  0CF7  072F               	addwf	Ax25_Send_String@i,w
  3199  0CF8  0084               	movwf	4
  3200  0CF9  082E               	movf	Ax25_Send_String@string+1,w
  3201  0CFA  3D30               	addwfc	Ax25_Send_String@i+1,w
  3202  0CFB  0085               	movwf	5
  3203  0CFC  0800               	movf	0,w	;code access
  3204  0CFD  3800               	iorlw	0
  3205  0CFE  1903               	btfsc	3,2
  3206  0CFF  0008               	return
  3207                           
  3208                           ;ax25.c: 95: Ax25_Send_Byte(string[i]);
  3209  0D00  082D               	movf	Ax25_Send_String@string,w
  3210  0D01  072F               	addwf	Ax25_Send_String@i,w
  3211  0D02  0084               	movwf	4
  3212  0D03  082E               	movf	Ax25_Send_String@string+1,w
  3213  0D04  3D30               	addwfc	Ax25_Send_String@i+1,w
  3214  0D05  0085               	movwf	5
  3215  0D06  0800               	movf	0,w	;code access
  3216  0D07  318C  2412  318C   	fcall	_Ax25_Send_Byte
  3217  0D0A  3001               	movlw	1
  3218  0D0B  0020               	movlb	0	; select bank0
  3219  0D0C  07AF               	addwf	Ax25_Send_String@i,f
  3220  0D0D  3000               	movlw	0
  3221  0D0E  3DB0               	addwfc	Ax25_Send_String@i+1,f
  3222  0D0F  2CF6               	goto	l2195
  3223  0D10                     __end_of_Ax25_Send_String:	
  3224                           
  3225                           	psect	text18
  3226  0C12                     __ptext18:	
  3227 ;; *************** function _Ax25_Send_Byte *****************
  3228 ;; Defined at:
  3229 ;;		line 58 in file "ax25.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  byte            1    wreg     unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  byte            1   12[BANK0 ] unsigned char 
  3234 ;; Return value:  Size  Location     Type
  3235 ;;		None               void
  3236 ;; Registers used:
  3237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3247 ;;Total ram usage:        1 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; Hardware stack levels required when called:    5
  3250 ;; This function calls:
  3251 ;;		_Send_Byte
  3252 ;; This function is called by:
  3253 ;;		_Ax25_Send_String
  3254 ;; This function uses a non-reentrant model
  3255 ;;
  3256                           
  3257                           
  3258                           ;psect for function _Ax25_Send_Byte
  3259  0C12                     _Ax25_Send_Byte:	
  3260                           
  3261                           ;incstack = 0
  3262                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3263                           ;Ax25_Send_Byte@byte stored from wreg
  3264  0C12  0020               	movlb	0	; select bank0
  3265  0C13  00AC               	movwf	Ax25_Send_Byte@byte
  3266                           
  3267                           ;ax25.c: 60: Send_Byte(byte);
  3268  0C14  082C               	movf	Ax25_Send_Byte@byte,w
  3269  0C15  3186  2630         	fcall	_Send_Byte
  3270  0C17  0008               	return
  3271  0C18                     __end_of_Ax25_Send_Byte:	
  3272                           
  3273                           	psect	text19
  3274  01F5                     __ptext19:	
  3275 ;; *************** function _Ax25_Send_Header *****************
  3276 ;; Defined at:
  3277 ;;		line 99 in file "ax25.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  addresses       1    wreg     PTR struct .
  3280 ;;		 -> main@beacon_address(16), 
  3281 ;;  num_addresse    2   12[BANK0 ] int 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  addresses       1   19[BANK0 ] PTR struct .
  3284 ;;		 -> main@beacon_address(16), 
  3285 ;;  i               2   20[BANK0 ] int 
  3286 ;;  j               2   17[BANK0 ] int 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;		None               void
  3289 ;; Registers used:
  3290 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3296 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3297 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3298 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3299 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;Total ram usage:       10 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    5
  3303 ;; This function calls:
  3304 ;;		_Ax25_Send_Flag
  3305 ;;		_Ax25_Send_Sync
  3306 ;;		_Send_Byte
  3307 ;; This function is called by:
  3308 ;;		_main
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           
  3313                           ;psect for function _Ax25_Send_Header
  3314  01F5                     _Ax25_Send_Header:	
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3318                           ;Ax25_Send_Header@addresses stored from wreg
  3319  01F5  0020               	movlb	0	; select bank0
  3320  01F6  00B3               	movwf	Ax25_Send_Header@addresses
  3321                           
  3322                           ;ax25.c: 102: int i, j;
  3323                           ;ax25.c: 103: modem_packet_size = 0;
  3324  01F7  3000               	movlw	0
  3325  01F8  00FC               	movwf	_modem_packet_size+3
  3326  01F9  3000               	movlw	0
  3327  01FA  00FB               	movwf	_modem_packet_size+2
  3328  01FB  3000               	movlw	0
  3329  01FC  00FA               	movwf	_modem_packet_size+1
  3330  01FD  3000               	movlw	0
  3331  01FE  00F9               	movwf	_modem_packet_size
  3332                           
  3333                           ;ax25.c: 104: ones_in_a_row = 0;
  3334  01FF  0021               	movlb	1	; select bank1
  3335  0200  01C9               	clrf	_ones_in_a_row^(0+128)
  3336  0201  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  3337                           
  3338                           ;ax25.c: 105: crc = 0xffff;
  3339  0202  30FF               	movlw	255
  3340  0203  00C7               	movwf	_crc^(0+128)
  3341  0204  30FF               	movlw	255
  3342  0205  00C8               	movwf	(_crc^(0+128)+1)
  3343                           
  3344                           ;ax25.c: 108: for (i = 0; i < 10; i++)
  3345  0206  0020               	movlb	0	; select bank0
  3346  0207  01B4               	clrf	Ax25_Send_Header@i
  3347  0208  01B5               	clrf	Ax25_Send_Header@i+1
  3348  0209  0835               	movf	Ax25_Send_Header@i+1,w
  3349  020A  3A80               	xorlw	128
  3350  020B  00AE               	movwf	??_Ax25_Send_Header
  3351  020C  3080               	movlw	128
  3352  020D  022E               	subwf	??_Ax25_Send_Header,w
  3353  020E  1D03               	skipz
  3354  020F  2A12               	goto	u1865
  3355  0210  300A               	movlw	10
  3356  0211  0234               	subwf	Ax25_Send_Header@i,w
  3357  0212                     u1865:	
  3358  0212  1803               	btfsc	3,0
  3359  0213  2A27               	goto	l2151
  3360  0214                     l2145:	
  3361                           
  3362                           ;ax25.c: 109: {
  3363                           ;ax25.c: 110: Ax25_Send_Sync();
  3364  0214  318F  2787  3181   	fcall	_Ax25_Send_Sync
  3365  0217  3001               	movlw	1
  3366  0218  0020               	movlb	0	; select bank0
  3367  0219  07B4               	addwf	Ax25_Send_Header@i,f
  3368  021A  3000               	movlw	0
  3369  021B  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3370  021C  0835               	movf	Ax25_Send_Header@i+1,w
  3371  021D  3A80               	xorlw	128
  3372  021E  00AE               	movwf	??_Ax25_Send_Header
  3373  021F  3080               	movlw	128
  3374  0220  022E               	subwf	??_Ax25_Send_Header,w
  3375  0221  1D03               	skipz
  3376  0222  2A25               	goto	u1875
  3377  0223  300A               	movlw	10
  3378  0224  0234               	subwf	Ax25_Send_Header@i,w
  3379  0225                     u1875:	
  3380  0225  1C03               	skipc
  3381  0226  2A14               	goto	l2145
  3382  0227                     l2151:	
  3383                           
  3384                           ;ax25.c: 111: }
  3385                           ;ax25.c: 114: for (i = 0; i < 3; i++)
  3386  0227  0020               	movlb	0	; select bank0
  3387  0228  01B4               	clrf	Ax25_Send_Header@i
  3388  0229  01B5               	clrf	Ax25_Send_Header@i+1
  3389  022A  0835               	movf	Ax25_Send_Header@i+1,w
  3390  022B  3A80               	xorlw	128
  3391  022C  00AE               	movwf	??_Ax25_Send_Header
  3392  022D  3080               	movlw	128
  3393  022E  022E               	subwf	??_Ax25_Send_Header,w
  3394  022F  1D03               	skipz
  3395  0230  2A33               	goto	u1885
  3396  0231  3003               	movlw	3
  3397  0232  0234               	subwf	Ax25_Send_Header@i,w
  3398  0233                     u1885:	
  3399  0233  1803               	btfsc	3,0
  3400  0234  2A48               	goto	l2163
  3401  0235                     l2157:	
  3402                           
  3403                           ;ax25.c: 115: {
  3404                           ;ax25.c: 116: Ax25_Send_Flag();
  3405  0235  3187  276E  3181   	fcall	_Ax25_Send_Flag
  3406  0238  3001               	movlw	1
  3407  0239  0020               	movlb	0	; select bank0
  3408  023A  07B4               	addwf	Ax25_Send_Header@i,f
  3409  023B  3000               	movlw	0
  3410  023C  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3411  023D  0835               	movf	Ax25_Send_Header@i+1,w
  3412  023E  3A80               	xorlw	128
  3413  023F  00AE               	movwf	??_Ax25_Send_Header
  3414  0240  3080               	movlw	128
  3415  0241  022E               	subwf	??_Ax25_Send_Header,w
  3416  0242  1D03               	skipz
  3417  0243  2A46               	goto	u1895
  3418  0244  3003               	movlw	3
  3419  0245  0234               	subwf	Ax25_Send_Header@i,w
  3420  0246                     u1895:	
  3421  0246  1C03               	skipc
  3422  0247  2A35               	goto	l2157
  3423  0248                     l2163:	
  3424                           
  3425                           ;ax25.c: 117: }
  3426                           ;ax25.c: 119: for (i = 0; i < num_addresses; i++) {
  3427  0248  0020               	movlb	0	; select bank0
  3428  0249  01B4               	clrf	Ax25_Send_Header@i
  3429  024A  01B5               	clrf	Ax25_Send_Header@i+1
  3430  024B                     l2185:	
  3431  024B  0835               	movf	Ax25_Send_Header@i+1,w
  3432  024C  3A80               	xorlw	128
  3433  024D  00AE               	movwf	??_Ax25_Send_Header
  3434  024E  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  3435  024F  3A80               	xorlw	128
  3436  0250  022E               	subwf	??_Ax25_Send_Header,w
  3437  0251  1D03               	skipz
  3438  0252  2A55               	goto	u1965
  3439  0253  082C               	movf	Ax25_Send_Header@num_addresses,w
  3440  0254  0234               	subwf	Ax25_Send_Header@i,w
  3441  0255                     u1965:	
  3442  0255  1803               	btfsc	3,0
  3443  0256  2AC5               	goto	l2187
  3444                           
  3445                           ;ax25.c: 121: for (j = 0; j < 6; j++)
  3446  0257  0020               	movlb	0	; select bank0
  3447  0258  01B1               	clrf	Ax25_Send_Header@j
  3448  0259  01B2               	clrf	Ax25_Send_Header@j+1
  3449  025A  0832               	movf	Ax25_Send_Header@j+1,w
  3450  025B  3A80               	xorlw	128
  3451  025C  00AE               	movwf	??_Ax25_Send_Header
  3452  025D  3080               	movlw	128
  3453  025E  022E               	subwf	??_Ax25_Send_Header,w
  3454  025F  1D03               	skipz
  3455  0260  2A63               	goto	u1905
  3456  0261  3006               	movlw	6
  3457  0262  0231               	subwf	Ax25_Send_Header@j,w
  3458  0263                     u1905:	
  3459  0263  1803               	btfsc	3,0
  3460  0264  2A8A               	goto	l2177
  3461  0265                     l2171:	
  3462                           
  3463                           ;ax25.c: 122: Send_Byte(addresses[i].callsign[j] << 1);
  3464  0265  0020               	movlb	0	; select bank0
  3465  0266  0834               	movf	Ax25_Send_Header@i,w
  3466  0267  00AE               	movwf	??_Ax25_Send_Header
  3467  0268  3002               	movlw	2
  3468  0269                     u1915:	
  3469  0269  35AE               	lslf	??_Ax25_Send_Header,f
  3470  026A  3EFF               	addlw	-1
  3471  026B  1D03               	skipz
  3472  026C  2A69               	goto	u1915
  3473  026D  352E               	lslf	??_Ax25_Send_Header,w
  3474  026E  0733               	addwf	Ax25_Send_Header@addresses,w
  3475  026F  00AF               	movwf	??_Ax25_Send_Header+1
  3476  0270  0831               	movf	Ax25_Send_Header@j,w
  3477  0271  072F               	addwf	??_Ax25_Send_Header+1,w
  3478  0272  00B0               	movwf	??_Ax25_Send_Header+2
  3479  0273  0830               	movf	??_Ax25_Send_Header+2,w
  3480  0274  0086               	movwf	6
  3481  0275  0187               	clrf	7
  3482  0276  3501               	lslf	1,w
  3483  0277  3186  2630  3181   	fcall	_Send_Byte
  3484  027A  3001               	movlw	1
  3485  027B  0020               	movlb	0	; select bank0
  3486  027C  07B1               	addwf	Ax25_Send_Header@j,f
  3487  027D  3000               	movlw	0
  3488  027E  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  3489  027F  0832               	movf	Ax25_Send_Header@j+1,w
  3490  0280  3A80               	xorlw	128
  3491  0281  00AE               	movwf	??_Ax25_Send_Header
  3492  0282  3080               	movlw	128
  3493  0283  022E               	subwf	??_Ax25_Send_Header,w
  3494  0284  1D03               	skipz
  3495  0285  2A88               	goto	u1925
  3496  0286  3006               	movlw	6
  3497  0287  0231               	subwf	Ax25_Send_Header@j,w
  3498  0288                     u1925:	
  3499  0288  1C03               	skipc
  3500  0289  2A65               	goto	l2171
  3501  028A                     l2177:	
  3502                           
  3503                           ;ax25.c: 125: if (i == num_addresses - 1){
  3504  028A  0020               	movlb	0	; select bank0
  3505  028B  082C               	movf	Ax25_Send_Header@num_addresses,w
  3506  028C  3EFF               	addlw	255
  3507  028D  00AE               	movwf	??_Ax25_Send_Header
  3508  028E  30FF               	movlw	255
  3509  028F  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  3510  0290  00AF               	movwf	??_Ax25_Send_Header+1
  3511  0291  0835               	movf	Ax25_Send_Header@i+1,w
  3512  0292  062F               	xorwf	??_Ax25_Send_Header+1,w
  3513  0293  1D03               	skipz
  3514  0294  2A97               	goto	u1935
  3515  0295  0834               	movf	Ax25_Send_Header@i,w
  3516  0296  062E               	xorwf	??_Ax25_Send_Header,w
  3517  0297                     u1935:	
  3518  0297  1D03               	skipz
  3519  0298  2AAB               	goto	l2181
  3520                           
  3521                           ;ax25.c: 126: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  3522  0299  0834               	movf	Ax25_Send_Header@i,w
  3523  029A  00AE               	movwf	??_Ax25_Send_Header
  3524  029B  3002               	movlw	2
  3525  029C                     u1945:	
  3526  029C  35AE               	lslf	??_Ax25_Send_Header,f
  3527  029D  3EFF               	addlw	-1
  3528  029E  1D03               	skipz
  3529  029F  2A9C               	goto	u1945
  3530  02A0  352E               	lslf	??_Ax25_Send_Header,w
  3531  02A1  0733               	addwf	Ax25_Send_Header@addresses,w
  3532  02A2  00AF               	movwf	??_Ax25_Send_Header+1
  3533  02A3  082F               	movf	??_Ax25_Send_Header+1,w
  3534  02A4  3E07               	addlw	7
  3535  02A5  0086               	movwf	6
  3536  02A6  0187               	clrf	7
  3537  02A7  3501               	lslf	1,w
  3538  02A8  3E60               	addlw	96
  3539  02A9  3801               	iorlw	1
  3540  02AA  2ABC               	goto	L1
  3541  02AB                     l2181:	
  3542                           ;ax25.c: 128: }
  3543                           
  3544                           
  3545                           ;ax25.c: 129: else
  3546                           ;ax25.c: 130: Send_Byte(('0' + addresses[i].ssid) << 1);
  3547  02AB  0020               	movlb	0	; select bank0
  3548  02AC  0834               	movf	Ax25_Send_Header@i,w
  3549  02AD  00AE               	movwf	??_Ax25_Send_Header
  3550  02AE  3002               	movlw	2
  3551  02AF                     u1955:	
  3552  02AF  35AE               	lslf	??_Ax25_Send_Header,f
  3553  02B0  3EFF               	addlw	-1
  3554  02B1  1D03               	skipz
  3555  02B2  2AAF               	goto	u1955
  3556  02B3  352E               	lslf	??_Ax25_Send_Header,w
  3557  02B4  0733               	addwf	Ax25_Send_Header@addresses,w
  3558  02B5  00AF               	movwf	??_Ax25_Send_Header+1
  3559  02B6  082F               	movf	??_Ax25_Send_Header+1,w
  3560  02B7  3E07               	addlw	7
  3561  02B8  0086               	movwf	6
  3562  02B9  0187               	clrf	7
  3563  02BA  3501               	lslf	1,w
  3564  02BB  3E60               	addlw	96
  3565  02BC                     L1:	
  3566  02BC  3186  2630  3181   	fcall	_Send_Byte
  3567  02BF  3001               	movlw	1
  3568  02C0  0020               	movlb	0	; select bank0
  3569  02C1  07B4               	addwf	Ax25_Send_Header@i,f
  3570  02C2  3000               	movlw	0
  3571  02C3  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3572  02C4  2A4B               	goto	l2185
  3573  02C5                     l2187:	
  3574                           
  3575                           ;ax25.c: 131: }
  3576                           ;ax25.c: 134: Send_Byte(0x03);
  3577  02C5  3003               	movlw	3
  3578  02C6  3186  2630  3181   	fcall	_Send_Byte
  3579                           
  3580                           ;ax25.c: 137: Send_Byte(0xf0);
  3581  02C9  30F0               	movlw	240
  3582  02CA  3186  2630         	fcall	_Send_Byte
  3583  02CC  0008               	return
  3584  02CD                     __end_of_Ax25_Send_Header:	
  3585                           
  3586                           	psect	text20
  3587  0F87                     __ptext20:	
  3588 ;; *************** function _Ax25_Send_Sync *****************
  3589 ;; Defined at:
  3590 ;;		line 63 in file "ax25.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  i               2    7[BANK0 ] int 
  3595 ;;  byte            1    6[BANK0 ] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;		None               void
  3598 ;; Registers used:
  3599 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;Total ram usage:        9 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    3
  3612 ;; This function calls:
  3613 ;;		Nothing
  3614 ;; This function is called by:
  3615 ;;		_Ax25_Send_Header
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           
  3620                           ;psect for function _Ax25_Send_Sync
  3621  0F87                     _Ax25_Send_Sync:	
  3622                           
  3623                           ;ax25.c: 65: uint8_t byte = 0x00;
  3624                           
  3625                           ;incstack = 0
  3626                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  3627  0F87  0020               	movlb	0	; select bank0
  3628  0F88  01A6               	clrf	Ax25_Send_Sync@byte
  3629                           
  3630                           ;ax25.c: 66: int i;
  3631                           ;ax25.c: 67: for (i = 0; i < 8; i++, modem_packet_size++) {
  3632  0F89  01A7               	clrf	Ax25_Send_Sync@i
  3633  0F8A  01A8               	clrf	Ax25_Send_Sync@i+1
  3634  0F8B                     L2:	
  3635  0F8B  0828               	movf	Ax25_Send_Sync@i+1,w
  3636  0F8C  3A80               	xorlw	128
  3637  0F8D  00A0               	movwf	??_Ax25_Send_Sync
  3638  0F8E  3080               	movlw	128
  3639  0F8F  0220               	subwf	??_Ax25_Send_Sync,w
  3640  0F90  3008               	movlw	8
  3641  0F91  1903               	btfsc	3,2
  3642  0F92  0227               	subwf	Ax25_Send_Sync@i,w
  3643  0F93  1803               	btfsc	3,0
  3644  0F94  0008               	return
  3645                           
  3646                           ;ax25.c: 68: if (modem_packet_size >= 64 * 8)
  3647  0F95  3000               	movlw	0
  3648  0F96  027C               	subwf	_modem_packet_size+3,w
  3649  0F97  1D03               	skipz
  3650  0F98  2FA3               	goto	u1605
  3651  0F99  3000               	movlw	0
  3652  0F9A  027B               	subwf	_modem_packet_size+2,w
  3653  0F9B  1D03               	skipz
  3654  0F9C  2FA3               	goto	u1605
  3655  0F9D  3002               	movlw	2
  3656  0F9E  027A               	subwf	_modem_packet_size+1,w
  3657  0F9F  1D03               	skipz
  3658  0FA0  2FA3               	goto	u1605
  3659  0FA1  3000               	movlw	0
  3660  0FA2  0279               	subwf	_modem_packet_size,w
  3661  0FA3                     u1605:	
  3662  0FA3  1803               	btfsc	3,0
  3663  0FA4  0008               	return
  3664                           
  3665                           ;ax25.c: 70: if ((byte >> i) & 1)
  3666                           
  3667                           ;ax25.c: 69: return;
  3668  0FA5  0020               	movlb	0	; select bank0
  3669  0FA6  0826               	movf	Ax25_Send_Sync@byte,w
  3670  0FA7  00A0               	movwf	??_Ax25_Send_Sync
  3671  0FA8  0A27               	incf	Ax25_Send_Sync@i,w
  3672  0FA9  2FAB               	goto	u1614
  3673  0FAA                     u1615:	
  3674  0FAA  36A0               	lsrf	??_Ax25_Send_Sync,f
  3675  0FAB                     u1614:	
  3676  0FAB  0B89               	decfsz	9,f
  3677  0FAC  2FAA               	goto	u1615
  3678  0FAD  1C20               	btfss	??_Ax25_Send_Sync,0
  3679  0FAE  2FD1               	goto	l1961
  3680                           
  3681                           ;ax25.c: 71: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  3682  0FAF  3001               	movlw	1
  3683  0FB0  00A0               	movwf	??_Ax25_Send_Sync
  3684  0FB1  0879               	movf	_modem_packet_size,w
  3685  0FB2  3907               	andlw	7
  3686  0FB3  0A89               	incf	9,f
  3687  0FB4  2FB6               	goto	u1634
  3688  0FB5                     u1635:	
  3689  0FB5  35A0               	lslf	??_Ax25_Send_Sync,f
  3690  0FB6                     u1634:	
  3691  0FB6  0B89               	decfsz	9,f
  3692  0FB7  2FB5               	goto	u1635
  3693  0FB8  0820               	movf	??_Ax25_Send_Sync,w
  3694  0FB9  00A1               	movwf	??_Ax25_Send_Sync+1
  3695  0FBA  0879               	movf	_modem_packet_size,w
  3696  0FBB  00A2               	movwf	??_Ax25_Send_Sync+2
  3697  0FBC  087A               	movf	_modem_packet_size+1,w
  3698  0FBD  00A3               	movwf	??_Ax25_Send_Sync+3
  3699  0FBE  087B               	movf	_modem_packet_size+2,w
  3700  0FBF  00A4               	movwf	??_Ax25_Send_Sync+4
  3701  0FC0  087C               	movf	_modem_packet_size+3,w
  3702  0FC1  00A5               	movwf	??_Ax25_Send_Sync+5
  3703  0FC2  3003               	movlw	3
  3704  0FC3                     u1645:	
  3705  0FC3  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  3706  0FC4  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  3707  0FC5  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  3708  0FC6  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  3709  0FC7  0B89               	decfsz	9,f
  3710  0FC8  2FC3               	goto	u1645
  3711  0FC9  0822               	movf	??_Ax25_Send_Sync+2,w
  3712  0FCA  3EA0               	addlw	_modem_packet& (0+255)
  3713  0FCB  0086               	movwf	6
  3714  0FCC  3001               	movlw	1	; select bank3/4
  3715  0FCD  0087               	movwf	7
  3716  0FCE  0821               	movf	??_Ax25_Send_Sync+1,w
  3717  0FCF  0481               	iorwf	1,f
  3718  0FD0  2FF3               	goto	l1963
  3719  0FD1                     l1961:	
  3720                           
  3721                           ;ax25.c: 72: else
  3722                           ;ax25.c: 73: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  3723  0FD1  3001               	movlw	1
  3724  0FD2  00A0               	movwf	??_Ax25_Send_Sync
  3725  0FD3  0879               	movf	_modem_packet_size,w
  3726  0FD4  3907               	andlw	7
  3727  0FD5  0A89               	incf	9,f
  3728  0FD6  2FD8               	goto	u1654
  3729  0FD7                     u1655:	
  3730  0FD7  35A0               	lslf	??_Ax25_Send_Sync,f
  3731  0FD8                     u1654:	
  3732  0FD8  0B89               	decfsz	9,f
  3733  0FD9  2FD7               	goto	u1655
  3734  0FDA  0820               	movf	??_Ax25_Send_Sync,w
  3735  0FDB  3AFF               	xorlw	255
  3736  0FDC  00A1               	movwf	??_Ax25_Send_Sync+1
  3737  0FDD  0879               	movf	_modem_packet_size,w
  3738  0FDE  00A2               	movwf	??_Ax25_Send_Sync+2
  3739  0FDF  087A               	movf	_modem_packet_size+1,w
  3740  0FE0  00A3               	movwf	??_Ax25_Send_Sync+3
  3741  0FE1  087B               	movf	_modem_packet_size+2,w
  3742  0FE2  00A4               	movwf	??_Ax25_Send_Sync+4
  3743  0FE3  087C               	movf	_modem_packet_size+3,w
  3744  0FE4  00A5               	movwf	??_Ax25_Send_Sync+5
  3745  0FE5  3003               	movlw	3
  3746  0FE6                     u1665:	
  3747  0FE6  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  3748  0FE7  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  3749  0FE8  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  3750  0FE9  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  3751  0FEA  0B89               	decfsz	9,f
  3752  0FEB  2FE6               	goto	u1665
  3753  0FEC  0822               	movf	??_Ax25_Send_Sync+2,w
  3754  0FED  3EA0               	addlw	_modem_packet& (0+255)
  3755  0FEE  0086               	movwf	6
  3756  0FEF  3001               	movlw	1	; select bank3/4
  3757  0FF0  0087               	movwf	7
  3758  0FF1  0821               	movf	??_Ax25_Send_Sync+1,w
  3759  0FF2  0581               	andwf	1,f
  3760  0FF3                     l1963:	
  3761  0FF3  3001               	movlw	1
  3762  0FF4  07A7               	addwf	Ax25_Send_Sync@i,f
  3763  0FF5  3000               	movlw	0
  3764  0FF6  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  3765  0FF7  3001               	movlw	1
  3766  0FF8  07F9               	addwf	_modem_packet_size,f
  3767  0FF9  3000               	movlw	0
  3768  0FFA  3DFA               	addwfc	_modem_packet_size+1,f
  3769  0FFB  3000               	movlw	0
  3770  0FFC  3DFB               	addwfc	_modem_packet_size+2,f
  3771  0FFD  3000               	movlw	0
  3772  0FFE  3DFC               	addwfc	_modem_packet_size+3,f
  3773  0FFF  2F8B               	goto	L2
  3774  1000                     __end_of_Ax25_Send_Sync:	
  3775                           
  3776                           	psect	text21
  3777  0CD8                     __ptext21:	
  3778 ;; *************** function _Ax25_Send_Footer *****************
  3779 ;; Defined at:
  3780 ;;		line 141 in file "ax25.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;  final_crc       2   12[BANK0 ] unsigned int 
  3785 ;; Return value:  Size  Location     Type
  3786 ;;		None               void
  3787 ;; Registers used:
  3788 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3795 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3797 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3798 ;;Total ram usage:        2 bytes
  3799 ;; Hardware stack levels used:    1
  3800 ;; Hardware stack levels required when called:    5
  3801 ;; This function calls:
  3802 ;;		_Ax25_Send_Flag
  3803 ;;		_Send_Byte
  3804 ;; This function is called by:
  3805 ;;		_main
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _Ax25_Send_Footer
  3811  0CD8                     _Ax25_Send_Footer:	
  3812                           
  3813                           ;ax25.c: 144: uint16_t final_crc = crc;
  3814                           
  3815                           ;incstack = 0
  3816                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3817  0CD8  0021               	movlb	1	; select bank1
  3818  0CD9  0848               	movf	(_crc+1)^(0+128),w
  3819  0CDA  0020               	movlb	0	; select bank0
  3820  0CDB  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  3821  0CDC  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  3822  0CDD  0021               	movlb	1	; select bank1
  3823  0CDE  0847               	movf	_crc^(0+128),w
  3824  0CDF  0020               	movlb	0	; select bank0
  3825  0CE0  01AC               	clrf	Ax25_Send_Footer@final_crc
  3826  0CE1  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  3827                           
  3828                           ;ax25.c: 147: Send_Byte(~(final_crc & 0xff));
  3829  0CE2  092C               	comf	Ax25_Send_Footer@final_crc,w
  3830  0CE3  3186  2630  318C   	fcall	_Send_Byte
  3831                           
  3832                           ;ax25.c: 148: final_crc >>= 8;
  3833  0CE6  3008               	movlw	8
  3834  0CE7  0020               	movlb	0	; select bank0
  3835  0CE8                     u1985:	
  3836  0CE8  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  3837  0CE9  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  3838  0CEA  0B89               	decfsz	9,f
  3839  0CEB  2CE8               	goto	u1985
  3840                           
  3841                           ;ax25.c: 149: Send_Byte(~(final_crc & 0xff));
  3842  0CEC  092C               	comf	Ax25_Send_Footer@final_crc,w
  3843  0CED  3186  2630  318C   	fcall	_Send_Byte
  3844                           
  3845                           ;ax25.c: 152: Ax25_Send_Flag();
  3846  0CF0  3187  276E         	fcall	_Ax25_Send_Flag
  3847  0CF2  0008               	return
  3848  0CF3                     __end_of_Ax25_Send_Footer:	
  3849                           
  3850                           	psect	text22
  3851  0630                     __ptext22:	
  3852 ;; *************** function _Send_Byte *****************
  3853 ;; Defined at:
  3854 ;;		line 32 in file "ax25.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  byte            1    wreg     unsigned char 
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  byte            1    9[BANK0 ] unsigned char 
  3859 ;;  i               2   10[BANK0 ] int 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;		None               void
  3862 ;; Registers used:
  3863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3870 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3871 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3872 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3873 ;;Total ram usage:        9 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    4
  3876 ;; This function calls:
  3877 ;;		_Update_Crc
  3878 ;; This function is called by:
  3879 ;;		_Ax25_Send_Byte
  3880 ;;		_Ax25_Send_Header
  3881 ;;		_Ax25_Send_Footer
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function _Send_Byte
  3887  0630                     _Send_Byte:	
  3888                           
  3889                           ;incstack = 0
  3890                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3891                           ;Send_Byte@byte stored from wreg
  3892  0630  0020               	movlb	0	; select bank0
  3893  0631  00A9               	movwf	Send_Byte@byte
  3894                           
  3895                           ;ax25.c: 34: int i;
  3896                           ;ax25.c: 35: for (i = 0; i < 8; i++) {
  3897  0632  01AA               	clrf	Send_Byte@i
  3898  0633  01AB               	clrf	Send_Byte@i+1
  3899  0634                     L3:	
  3900  0634  082B               	movf	Send_Byte@i+1,w
  3901  0635  3A80               	xorlw	128
  3902  0636  00A3               	movwf	??_Send_Byte
  3903  0637  3080               	movlw	128
  3904  0638  0223               	subwf	??_Send_Byte,w
  3905  0639  3008               	movlw	8
  3906  063A  1903               	btfsc	3,2
  3907  063B  022A               	subwf	Send_Byte@i,w
  3908  063C  1803               	btfsc	3,0
  3909  063D  0008               	return
  3910                           
  3911                           ;ax25.c: 36: Update_Crc((byte >> i) & 1);
  3912  063E  0020               	movlb	0	; select bank0
  3913  063F  0829               	movf	Send_Byte@byte,w
  3914  0640  00A3               	movwf	??_Send_Byte
  3915  0641  0A2A               	incf	Send_Byte@i,w
  3916  0642  2E44               	goto	u1474
  3917  0643                     u1475:	
  3918  0643  36A3               	lsrf	??_Send_Byte,f
  3919  0644                     u1474:	
  3920  0644  0B89               	decfsz	9,f
  3921  0645  2E43               	goto	u1475
  3922  0646  0823               	movf	??_Send_Byte,w
  3923  0647  3901               	andlw	1
  3924  0648  318D  25C5  3186   	fcall	_Update_Crc
  3925                           
  3926                           ;ax25.c: 37: if ((byte >> i) & 1) {
  3927  064B  0020               	movlb	0	; select bank0
  3928  064C  0829               	movf	Send_Byte@byte,w
  3929  064D  00A3               	movwf	??_Send_Byte
  3930  064E  0A2A               	incf	Send_Byte@i,w
  3931  064F  2E51               	goto	u1484
  3932  0650                     u1485:	
  3933  0650  36A3               	lsrf	??_Send_Byte,f
  3934  0651                     u1484:	
  3935  0651  0B89               	decfsz	9,f
  3936  0652  2E50               	goto	u1485
  3937  0653  1C23               	btfss	??_Send_Byte,0
  3938  0654  2EA0               	goto	l1881
  3939                           
  3940                           ;ax25.c: 39: if (modem_packet_size >= (64 * 8))
  3941  0655  3000               	movlw	0
  3942  0656  027C               	subwf	_modem_packet_size+3,w
  3943  0657  1D03               	skipz
  3944  0658  2E63               	goto	u1505
  3945  0659  3000               	movlw	0
  3946  065A  027B               	subwf	_modem_packet_size+2,w
  3947  065B  1D03               	skipz
  3948  065C  2E63               	goto	u1505
  3949  065D  3002               	movlw	2
  3950  065E  027A               	subwf	_modem_packet_size+1,w
  3951  065F  1D03               	skipz
  3952  0660  2E63               	goto	u1505
  3953  0661  3000               	movlw	0
  3954  0662  0279               	subwf	_modem_packet_size,w
  3955  0663                     u1505:	
  3956  0663  1803               	btfsc	3,0
  3957  0664  0008               	return
  3958                           
  3959                           ;ax25.c: 42: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  3960                           
  3961                           ;ax25.c: 40: return;
  3962  0665  3001               	movlw	1
  3963  0666  00A3               	movwf	??_Send_Byte
  3964  0667  0879               	movf	_modem_packet_size,w
  3965  0668  3907               	andlw	7
  3966  0669  0A89               	incf	9,f
  3967  066A  2E6C               	goto	u1514
  3968  066B                     u1515:	
  3969  066B  35A3               	lslf	??_Send_Byte,f
  3970  066C                     u1514:	
  3971  066C  0B89               	decfsz	9,f
  3972  066D  2E6B               	goto	u1515
  3973  066E  0823               	movf	??_Send_Byte,w
  3974  066F  00A4               	movwf	??_Send_Byte+1
  3975  0670  0879               	movf	_modem_packet_size,w
  3976  0671  00A5               	movwf	??_Send_Byte+2
  3977  0672  087A               	movf	_modem_packet_size+1,w
  3978  0673  00A6               	movwf	??_Send_Byte+3
  3979  0674  087B               	movf	_modem_packet_size+2,w
  3980  0675  00A7               	movwf	??_Send_Byte+4
  3981  0676  087C               	movf	_modem_packet_size+3,w
  3982  0677  00A8               	movwf	??_Send_Byte+5
  3983  0678  3003               	movlw	3
  3984  0679                     u1525:	
  3985  0679  36A8               	lsrf	??_Send_Byte+5,f
  3986  067A  0CA7               	rrf	??_Send_Byte+4,f
  3987  067B  0CA6               	rrf	??_Send_Byte+3,f
  3988  067C  0CA5               	rrf	??_Send_Byte+2,f
  3989  067D  0B89               	decfsz	9,f
  3990  067E  2E79               	goto	u1525
  3991  067F  0825               	movf	??_Send_Byte+2,w
  3992  0680  3EA0               	addlw	_modem_packet& (0+255)
  3993  0681  0086               	movwf	6
  3994  0682  3001               	movlw	1	; select bank3/4
  3995  0683  0087               	movwf	7
  3996  0684  0824               	movf	??_Send_Byte+1,w
  3997  0685  0481               	iorwf	1,f
  3998                           
  3999                           ;ax25.c: 44: modem_packet_size++;
  4000  0686  3001               	movlw	1
  4001  0687  07F9               	addwf	_modem_packet_size,f
  4002  0688  3000               	movlw	0
  4003  0689  3DFA               	addwfc	_modem_packet_size+1,f
  4004  068A  3000               	movlw	0
  4005  068B  3DFB               	addwfc	_modem_packet_size+2,f
  4006  068C  3000               	movlw	0
  4007  068D  3DFC               	addwfc	_modem_packet_size+3,f
  4008                           
  4009                           ;ax25.c: 45: if (++ones_in_a_row < 5) continue;
  4010  068E  3001               	movlw	1
  4011  068F  0021               	movlb	1	; select bank1
  4012  0690  07C9               	addwf	_ones_in_a_row^(0+128),f
  4013  0691  3000               	movlw	0
  4014  0692  3DCA               	addwfc	(_ones_in_a_row+1)^(0+128),f
  4015  0693  084A               	movf	(_ones_in_a_row+1)^(0+128),w
  4016  0694  3A80               	xorlw	128
  4017  0695  0020               	movlb	0	; select bank0
  4018  0696  00A3               	movwf	??_Send_Byte
  4019  0697  3080               	movlw	128
  4020  0698  0223               	subwf	??_Send_Byte,w
  4021  0699  1D03               	skipz
  4022  069A  2E9E               	goto	u1535
  4023  069B  3005               	movlw	5
  4024  069C  0021               	movlb	1	; select bank1
  4025  069D  0249               	subwf	_ones_in_a_row^(0+128),w
  4026  069E                     u1535:	
  4027  069E  1C03               	btfss	3,0
  4028  069F  2EDE               	goto	l1891
  4029  06A0                     l1881:	
  4030                           
  4031                           ;ax25.c: 46: }
  4032                           ;ax25.c: 48: if (modem_packet_size >= (64 * 8))
  4033  06A0  3000               	movlw	0
  4034  06A1  027C               	subwf	_modem_packet_size+3,w
  4035  06A2  1D03               	skipz
  4036  06A3  2EAE               	goto	u1545
  4037  06A4  3000               	movlw	0
  4038  06A5  027B               	subwf	_modem_packet_size+2,w
  4039  06A6  1D03               	skipz
  4040  06A7  2EAE               	goto	u1545
  4041  06A8  3002               	movlw	2
  4042  06A9  027A               	subwf	_modem_packet_size+1,w
  4043  06AA  1D03               	skipz
  4044  06AB  2EAE               	goto	u1545
  4045  06AC  3000               	movlw	0
  4046  06AD  0279               	subwf	_modem_packet_size,w
  4047  06AE                     u1545:	
  4048  06AE  1803               	btfsc	3,0
  4049  06AF  0008               	return
  4050                           
  4051                           ;ax25.c: 50: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4052                           
  4053                           ;ax25.c: 49: return;
  4054  06B0  3001               	movlw	1
  4055  06B1  0020               	movlb	0	; select bank0
  4056  06B2  00A3               	movwf	??_Send_Byte
  4057  06B3  0879               	movf	_modem_packet_size,w
  4058  06B4  3907               	andlw	7
  4059  06B5  0A89               	incf	9,f
  4060  06B6  2EB8               	goto	u1554
  4061  06B7                     u1555:	
  4062  06B7  35A3               	lslf	??_Send_Byte,f
  4063  06B8                     u1554:	
  4064  06B8  0B89               	decfsz	9,f
  4065  06B9  2EB7               	goto	u1555
  4066  06BA  0823               	movf	??_Send_Byte,w
  4067  06BB  3AFF               	xorlw	255
  4068  06BC  00A4               	movwf	??_Send_Byte+1
  4069  06BD  0879               	movf	_modem_packet_size,w
  4070  06BE  00A5               	movwf	??_Send_Byte+2
  4071  06BF  087A               	movf	_modem_packet_size+1,w
  4072  06C0  00A6               	movwf	??_Send_Byte+3
  4073  06C1  087B               	movf	_modem_packet_size+2,w
  4074  06C2  00A7               	movwf	??_Send_Byte+4
  4075  06C3  087C               	movf	_modem_packet_size+3,w
  4076  06C4  00A8               	movwf	??_Send_Byte+5
  4077  06C5  3003               	movlw	3
  4078  06C6                     u1565:	
  4079  06C6  36A8               	lsrf	??_Send_Byte+5,f
  4080  06C7  0CA7               	rrf	??_Send_Byte+4,f
  4081  06C8  0CA6               	rrf	??_Send_Byte+3,f
  4082  06C9  0CA5               	rrf	??_Send_Byte+2,f
  4083  06CA  0B89               	decfsz	9,f
  4084  06CB  2EC6               	goto	u1565
  4085  06CC  0825               	movf	??_Send_Byte+2,w
  4086  06CD  3EA0               	addlw	_modem_packet& (0+255)
  4087  06CE  0086               	movwf	6
  4088  06CF  3001               	movlw	1	; select bank3/4
  4089  06D0  0087               	movwf	7
  4090  06D1  0824               	movf	??_Send_Byte+1,w
  4091  06D2  0581               	andwf	1,f
  4092                           
  4093                           ;ax25.c: 52: modem_packet_size++;
  4094  06D3  3001               	movlw	1
  4095  06D4  07F9               	addwf	_modem_packet_size,f
  4096  06D5  3000               	movlw	0
  4097  06D6  3DFA               	addwfc	_modem_packet_size+1,f
  4098  06D7  3000               	movlw	0
  4099  06D8  3DFB               	addwfc	_modem_packet_size+2,f
  4100  06D9  3000               	movlw	0
  4101  06DA  3DFC               	addwfc	_modem_packet_size+3,f
  4102                           
  4103                           ;ax25.c: 53: ones_in_a_row = 0;
  4104  06DB  0021               	movlb	1	; select bank1
  4105  06DC  01C9               	clrf	_ones_in_a_row^(0+128)
  4106  06DD  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  4107  06DE                     l1891:	
  4108  06DE  3001               	movlw	1
  4109  06DF  0020               	movlb	0	; select bank0
  4110  06E0  07AA               	addwf	Send_Byte@i,f
  4111  06E1  3000               	movlw	0
  4112  06E2  3DAB               	addwfc	Send_Byte@i+1,f
  4113  06E3  2E34               	goto	L3
  4114  06E4                     __end_of_Send_Byte:	
  4115                           
  4116                           	psect	text23
  4117  0DC5                     __ptext23:	
  4118 ;; *************** function _Update_Crc *****************
  4119 ;; Defined at:
  4120 ;;		line 23 in file "ax25.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  input_bit       1    wreg     unsigned char 
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  input_bit       1    2[BANK0 ] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;		None               void
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;Total ram usage:        3 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    3
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_Send_Byte
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           
  4149                           ;psect for function _Update_Crc
  4150  0DC5                     _Update_Crc:	
  4151                           
  4152                           ;incstack = 0
  4153                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  4154                           ;Update_Crc@input_bit stored from wreg
  4155  0DC5  0020               	movlb	0	; select bank0
  4156  0DC6  00A2               	movwf	Update_Crc@input_bit
  4157                           
  4158                           ;ax25.c: 25: crc ^= input_bit;
  4159  0DC7  0822               	movf	Update_Crc@input_bit,w
  4160  0DC8  00A0               	movwf	??_Update_Crc
  4161  0DC9  01A1               	clrf	??_Update_Crc+1
  4162  0DCA  0820               	movf	??_Update_Crc,w
  4163  0DCB  0021               	movlb	1	; select bank1
  4164  0DCC  06C7               	xorwf	_crc^(0+128),f
  4165  0DCD  0020               	movlb	0	; select bank0
  4166  0DCE  0821               	movf	??_Update_Crc+1,w
  4167  0DCF  0021               	movlb	1	; select bank1
  4168  0DD0  06C8               	xorwf	(_crc+1)^(0+128),f
  4169                           
  4170                           ;ax25.c: 26: if (crc & 1)
  4171  0DD1  1C47               	btfss	_crc^(0+128),0
  4172  0DD2  2DE6               	goto	l1841
  4173                           
  4174                           ;ax25.c: 27: crc = (crc >> 1) ^ 0x8408;
  4175  0DD3  0848               	movf	(_crc+1)^(0+128),w
  4176  0DD4  0020               	movlb	0	; select bank0
  4177  0DD5  00A1               	movwf	??_Update_Crc+1
  4178  0DD6  0021               	movlb	1	; select bank1
  4179  0DD7  0847               	movf	_crc^(0+128),w
  4180  0DD8  0020               	movlb	0	; select bank0
  4181  0DD9  00A0               	movwf	??_Update_Crc
  4182  0DDA  36A1               	lsrf	??_Update_Crc+1,f
  4183  0DDB  0CA0               	rrf	??_Update_Crc,f
  4184  0DDC  3008               	movlw	8
  4185  0DDD  0620               	xorwf	??_Update_Crc,w
  4186  0DDE  0021               	movlb	1	; select bank1
  4187  0DDF  00C7               	movwf	_crc^(0+128)
  4188  0DE0  3084               	movlw	132
  4189  0DE1  0020               	movlb	0	; select bank0
  4190  0DE2  0621               	xorwf	??_Update_Crc+1,w
  4191  0DE3  0021               	movlb	1	; select bank1
  4192  0DE4  00C8               	movwf	(_crc+1)^(0+128)
  4193  0DE5  0008               	return
  4194  0DE6                     l1841:	
  4195                           
  4196                           ;ax25.c: 28: else
  4197                           ;ax25.c: 29: crc = crc >> 1;
  4198  0DE6  0848               	movf	(_crc+1)^(0+128),w
  4199  0DE7  0020               	movlb	0	; select bank0
  4200  0DE8  00A1               	movwf	??_Update_Crc+1
  4201  0DE9  0021               	movlb	1	; select bank1
  4202  0DEA  0847               	movf	_crc^(0+128),w
  4203  0DEB  0020               	movlb	0	; select bank0
  4204  0DEC  00A0               	movwf	??_Update_Crc
  4205  0DED  36A1               	lsrf	??_Update_Crc+1,f
  4206  0DEE  0CA0               	rrf	??_Update_Crc,f
  4207  0DEF  0820               	movf	??_Update_Crc,w
  4208  0DF0  0021               	movlb	1	; select bank1
  4209  0DF1  00C7               	movwf	_crc^(0+128)
  4210  0DF2  0020               	movlb	0	; select bank0
  4211  0DF3  0821               	movf	??_Update_Crc+1,w
  4212  0DF4  0021               	movlb	1	; select bank1
  4213  0DF5  00C8               	movwf	(_crc+1)^(0+128)
  4214  0DF6  0008               	return
  4215  0DF7                     __end_of_Update_Crc:	
  4216                           
  4217                           	psect	text24
  4218  076E                     __ptext24:	
  4219 ;; *************** function _Ax25_Send_Flag *****************
  4220 ;; Defined at:
  4221 ;;		line 77 in file "ax25.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  i               2    7[BANK0 ] int 
  4226 ;;  byte            1    6[BANK0 ] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;		None               void
  4229 ;; Registers used:
  4230 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4240 ;;Total ram usage:        9 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    3
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_Ax25_Send_Header
  4247 ;;		_Ax25_Send_Footer
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function _Ax25_Send_Flag
  4253  076E                     _Ax25_Send_Flag:	
  4254                           
  4255                           ;ax25.c: 79: uint8_t byte = 0x7e;
  4256                           
  4257                           ;incstack = 0
  4258                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  4259  076E  307E               	movlw	126
  4260  076F  0020               	movlb	0	; select bank0
  4261  0770  00A0               	movwf	??_Ax25_Send_Flag
  4262  0771  0820               	movf	??_Ax25_Send_Flag,w
  4263  0772  00A6               	movwf	Ax25_Send_Flag@byte
  4264                           
  4265                           ;ax25.c: 80: int i;
  4266                           ;ax25.c: 81: for (i = 0; i < 8; i++, modem_packet_size++) {
  4267  0773  01A7               	clrf	Ax25_Send_Flag@i
  4268  0774  01A8               	clrf	Ax25_Send_Flag@i+1
  4269  0775                     L4:	
  4270  0775  0828               	movf	Ax25_Send_Flag@i+1,w
  4271  0776  3A80               	xorlw	128
  4272  0777  00A0               	movwf	??_Ax25_Send_Flag
  4273  0778  3080               	movlw	128
  4274  0779  0220               	subwf	??_Ax25_Send_Flag,w
  4275  077A  3008               	movlw	8
  4276  077B  1903               	btfsc	3,2
  4277  077C  0227               	subwf	Ax25_Send_Flag@i,w
  4278  077D  1803               	btfsc	3,0
  4279  077E  0008               	return
  4280                           
  4281                           ;ax25.c: 82: if (modem_packet_size >= 64 * 8)
  4282  077F  3000               	movlw	0
  4283  0780  027C               	subwf	_modem_packet_size+3,w
  4284  0781  1D03               	skipz
  4285  0782  2F8D               	goto	u1695
  4286  0783  3000               	movlw	0
  4287  0784  027B               	subwf	_modem_packet_size+2,w
  4288  0785  1D03               	skipz
  4289  0786  2F8D               	goto	u1695
  4290  0787  3002               	movlw	2
  4291  0788  027A               	subwf	_modem_packet_size+1,w
  4292  0789  1D03               	skipz
  4293  078A  2F8D               	goto	u1695
  4294  078B  3000               	movlw	0
  4295  078C  0279               	subwf	_modem_packet_size,w
  4296  078D                     u1695:	
  4297  078D  1803               	btfsc	3,0
  4298  078E  0008               	return
  4299                           
  4300                           ;ax25.c: 84: if ((byte >> i) & 1)
  4301                           
  4302                           ;ax25.c: 83: return;
  4303  078F  0020               	movlb	0	; select bank0
  4304  0790  0826               	movf	Ax25_Send_Flag@byte,w
  4305  0791  00A0               	movwf	??_Ax25_Send_Flag
  4306  0792  0A27               	incf	Ax25_Send_Flag@i,w
  4307  0793  2F95               	goto	u1704
  4308  0794                     u1705:	
  4309  0794  36A0               	lsrf	??_Ax25_Send_Flag,f
  4310  0795                     u1704:	
  4311  0795  0B89               	decfsz	9,f
  4312  0796  2F94               	goto	u1705
  4313  0797  1C20               	btfss	??_Ax25_Send_Flag,0
  4314  0798  2FBB               	goto	l1985
  4315                           
  4316                           ;ax25.c: 85: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4317  0799  3001               	movlw	1
  4318  079A  00A0               	movwf	??_Ax25_Send_Flag
  4319  079B  0879               	movf	_modem_packet_size,w
  4320  079C  3907               	andlw	7
  4321  079D  0A89               	incf	9,f
  4322  079E  2FA0               	goto	u1724
  4323  079F                     u1725:	
  4324  079F  35A0               	lslf	??_Ax25_Send_Flag,f
  4325  07A0                     u1724:	
  4326  07A0  0B89               	decfsz	9,f
  4327  07A1  2F9F               	goto	u1725
  4328  07A2  0820               	movf	??_Ax25_Send_Flag,w
  4329  07A3  00A1               	movwf	??_Ax25_Send_Flag+1
  4330  07A4  0879               	movf	_modem_packet_size,w
  4331  07A5  00A2               	movwf	??_Ax25_Send_Flag+2
  4332  07A6  087A               	movf	_modem_packet_size+1,w
  4333  07A7  00A3               	movwf	??_Ax25_Send_Flag+3
  4334  07A8  087B               	movf	_modem_packet_size+2,w
  4335  07A9  00A4               	movwf	??_Ax25_Send_Flag+4
  4336  07AA  087C               	movf	_modem_packet_size+3,w
  4337  07AB  00A5               	movwf	??_Ax25_Send_Flag+5
  4338  07AC  3003               	movlw	3
  4339  07AD                     u1735:	
  4340  07AD  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4341  07AE  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4342  07AF  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4343  07B0  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4344  07B1  0B89               	decfsz	9,f
  4345  07B2  2FAD               	goto	u1735
  4346  07B3  0822               	movf	??_Ax25_Send_Flag+2,w
  4347  07B4  3EA0               	addlw	_modem_packet& (0+255)
  4348  07B5  0086               	movwf	6
  4349  07B6  3001               	movlw	1	; select bank3/4
  4350  07B7  0087               	movwf	7
  4351  07B8  0821               	movf	??_Ax25_Send_Flag+1,w
  4352  07B9  0481               	iorwf	1,f
  4353  07BA  2FDD               	goto	l1987
  4354  07BB                     l1985:	
  4355                           
  4356                           ;ax25.c: 86: else
  4357                           ;ax25.c: 87: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4358  07BB  3001               	movlw	1
  4359  07BC  00A0               	movwf	??_Ax25_Send_Flag
  4360  07BD  0879               	movf	_modem_packet_size,w
  4361  07BE  3907               	andlw	7
  4362  07BF  0A89               	incf	9,f
  4363  07C0  2FC2               	goto	u1744
  4364  07C1                     u1745:	
  4365  07C1  35A0               	lslf	??_Ax25_Send_Flag,f
  4366  07C2                     u1744:	
  4367  07C2  0B89               	decfsz	9,f
  4368  07C3  2FC1               	goto	u1745
  4369  07C4  0820               	movf	??_Ax25_Send_Flag,w
  4370  07C5  3AFF               	xorlw	255
  4371  07C6  00A1               	movwf	??_Ax25_Send_Flag+1
  4372  07C7  0879               	movf	_modem_packet_size,w
  4373  07C8  00A2               	movwf	??_Ax25_Send_Flag+2
  4374  07C9  087A               	movf	_modem_packet_size+1,w
  4375  07CA  00A3               	movwf	??_Ax25_Send_Flag+3
  4376  07CB  087B               	movf	_modem_packet_size+2,w
  4377  07CC  00A4               	movwf	??_Ax25_Send_Flag+4
  4378  07CD  087C               	movf	_modem_packet_size+3,w
  4379  07CE  00A5               	movwf	??_Ax25_Send_Flag+5
  4380  07CF  3003               	movlw	3
  4381  07D0                     u1755:	
  4382  07D0  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4383  07D1  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4384  07D2  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4385  07D3  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4386  07D4  0B89               	decfsz	9,f
  4387  07D5  2FD0               	goto	u1755
  4388  07D6  0822               	movf	??_Ax25_Send_Flag+2,w
  4389  07D7  3EA0               	addlw	_modem_packet& (0+255)
  4390  07D8  0086               	movwf	6
  4391  07D9  3001               	movlw	1	; select bank3/4
  4392  07DA  0087               	movwf	7
  4393  07DB  0821               	movf	??_Ax25_Send_Flag+1,w
  4394  07DC  0581               	andwf	1,f
  4395  07DD                     l1987:	
  4396  07DD  3001               	movlw	1
  4397  07DE  07A7               	addwf	Ax25_Send_Flag@i,f
  4398  07DF  3000               	movlw	0
  4399  07E0  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  4400  07E1  3001               	movlw	1
  4401  07E2  07F9               	addwf	_modem_packet_size,f
  4402  07E3  3000               	movlw	0
  4403  07E4  3DFA               	addwfc	_modem_packet_size+1,f
  4404  07E5  3000               	movlw	0
  4405  07E6  3DFB               	addwfc	_modem_packet_size+2,f
  4406  07E7  3000               	movlw	0
  4407  07E8  3DFC               	addwfc	_modem_packet_size+3,f
  4408  07E9  2F75               	goto	L4
  4409  07EA                     __end_of_Ax25_Send_Flag:	
  4410                           
  4411                           	psect	text25
  4412  0F12                     __ptext25:	
  4413 ;; *************** function _Adf_Lock *****************
  4414 ;; Defined at:
  4415 ;;		line 231 in file "adf7012.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;		None
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  bias            2   10[BANK1 ] int 
  4420 ;;  adj             2    8[BANK1 ] int 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      unsigned char 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4431 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4432 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4433 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4434 ;;Total ram usage:        6 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:    9
  4437 ;; This function calls:
  4438 ;;		_Adf_Locked
  4439 ;;		_Adf_Write_Config
  4440 ;;		_Delay_ms
  4441 ;; This function is called by:
  4442 ;;		_main
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           
  4447                           ;psect for function _Adf_Lock
  4448  0F12                     _Adf_Lock:	
  4449                           
  4450                           ;adf7012.c: 234: Delay_ms(200);
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4454  0F12  30C8               	movlw	200
  4455  0F13  0020               	movlb	0	; select bank0
  4456  0F14  00A0               	movwf	Delay_ms@time_to_delay
  4457  0F15  3000               	movlw	0
  4458  0F16  00A1               	movwf	Delay_ms@time_to_delay+1
  4459  0F17  318D  252F  318F   	fcall	_Delay_ms
  4460                           
  4461                           ;adf7012.c: 235: int adj = adf_config.r0.vco_adjust;
  4462  0F1A  0021               	movlb	1	; select bank1
  4463  0F1B  0828               	movf	(_adf_config^(0+128)+8),w
  4464  0F1C  0020               	movlb	0	; select bank0
  4465  0F1D  00EB               	movwf	??_Adf_Lock
  4466  0F1E  01EC               	clrf	??_Adf_Lock+1
  4467  0F1F  086B               	movf	??_Adf_Lock,w
  4468  0F20  0021               	movlb	1	; select bank1
  4469  0F21  00DB               	movwf	Adf_Lock@adj^(0+128)
  4470  0F22  0020               	movlb	0	; select bank0
  4471  0F23  086C               	movf	??_Adf_Lock+1,w
  4472  0F24  0021               	movlb	1	; select bank1
  4473  0F25  00DC               	movwf	(Adf_Lock@adj+1)^(0+128)
  4474                           
  4475                           ;adf7012.c: 236: int bias = adf_config.r3.vco_bias;
  4476  0F26  0843               	movf	(_adf_config^(0+128)+35),w
  4477  0F27  0020               	movlb	0	; select bank0
  4478  0F28  00EB               	movwf	??_Adf_Lock
  4479  0F29  01EC               	clrf	??_Adf_Lock+1
  4480  0F2A  086B               	movf	??_Adf_Lock,w
  4481  0F2B  0021               	movlb	1	; select bank1
  4482  0F2C  00DD               	movwf	Adf_Lock@bias^(0+128)
  4483  0F2D  0020               	movlb	0	; select bank0
  4484  0F2E  086C               	movf	??_Adf_Lock+1,w
  4485  0F2F  0021               	movlb	1	; select bank1
  4486  0F30  00DE               	movwf	(Adf_Lock@bias+1)^(0+128)
  4487                           
  4488                           ;adf7012.c: 238: adf_config.r3.pll_enable = 1;
  4489  0F31  01B9               	clrf	(_adf_config^(0+128)+25)
  4490  0F32  0AB9               	incf	(_adf_config^(0+128)+25),f
  4491                           
  4492                           ;adf7012.c: 240: adf_config.r3.muxout = 5;
  4493  0F33  3005               	movlw	5
  4494  0F34  0020               	movlb	0	; select bank0
  4495  0F35  00EB               	movwf	??_Adf_Lock
  4496  0F36  086B               	movf	??_Adf_Lock,w
  4497  0F37  0021               	movlb	1	; select bank1
  4498  0F38  00C1               	movwf	(_adf_config^(0+128)+33)
  4499                           
  4500                           ;adf7012.c: 242: Adf_Write_Config();
  4501  0F39  318C  2431  318F   	fcall	_Adf_Write_Config
  4502                           
  4503                           ;adf7012.c: 243: Delay_ms(5);
  4504  0F3C  3005               	movlw	5
  4505  0F3D  0020               	movlb	0	; select bank0
  4506  0F3E  00A0               	movwf	Delay_ms@time_to_delay
  4507  0F3F  3000               	movlw	0
  4508  0F40  00A1               	movwf	Delay_ms@time_to_delay+1
  4509  0F41  318D  252F  318F   	fcall	_Delay_ms
  4510  0F44                     l2237:	
  4511                           ;adf7012.c: 245: while(!Adf_Locked()) {
  4512                           
  4513  0F44  318B  23FA  318F   	fcall	_Adf_Locked
  4514  0F47  3A00               	xorlw	0
  4515  0F48  1D03               	btfss	3,2
  4516  0F49  0008               	return
  4517                           
  4518                           ;adf7012.c: 247: adf_config.r0.vco_adjust = adj;
  4519  0F4A  0021               	movlb	1	; select bank1
  4520  0F4B  085B               	movf	Adf_Lock@adj^(0+128),w
  4521  0F4C  0020               	movlb	0	; select bank0
  4522  0F4D  00EB               	movwf	??_Adf_Lock
  4523  0F4E  086B               	movf	??_Adf_Lock,w
  4524  0F4F  0021               	movlb	1	; select bank1
  4525  0F50  00A8               	movwf	(_adf_config^(0+128)+8)
  4526                           
  4527                           ;adf7012.c: 248: adf_config.r3.vco_bias = bias;
  4528  0F51  085D               	movf	Adf_Lock@bias^(0+128),w
  4529  0F52  0020               	movlb	0	; select bank0
  4530  0F53  00EB               	movwf	??_Adf_Lock
  4531  0F54  086B               	movf	??_Adf_Lock,w
  4532  0F55  0021               	movlb	1	; select bank1
  4533  0F56  00C3               	movwf	(_adf_config^(0+128)+35)
  4534                           
  4535                           ;adf7012.c: 250: adf_config.r3.muxout = 5;
  4536  0F57  3005               	movlw	5
  4537  0F58  0020               	movlb	0	; select bank0
  4538  0F59  00EB               	movwf	??_Adf_Lock
  4539  0F5A  086B               	movf	??_Adf_Lock,w
  4540  0F5B  0021               	movlb	1	; select bank1
  4541  0F5C  00C1               	movwf	(_adf_config^(0+128)+33)
  4542                           
  4543                           ;adf7012.c: 251: Adf_Write_Config();
  4544  0F5D  318C  2431  318F   	fcall	_Adf_Write_Config
  4545                           
  4546                           ;adf7012.c: 252: Delay_ms(5);
  4547  0F60  3005               	movlw	5
  4548  0F61  0020               	movlb	0	; select bank0
  4549  0F62  00A0               	movwf	Delay_ms@time_to_delay
  4550  0F63  3000               	movlw	0
  4551  0F64  00A1               	movwf	Delay_ms@time_to_delay+1
  4552  0F65  318D  252F  318F   	fcall	_Delay_ms
  4553                           
  4554                           ;adf7012.c: 253: if(++bias == 14) {
  4555  0F68  3001               	movlw	1
  4556  0F69  0021               	movlb	1	; select bank1
  4557  0F6A  07DD               	addwf	Adf_Lock@bias^(0+128),f
  4558  0F6B  3000               	movlw	0
  4559  0F6C  3DDE               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  4560  0F6D  300E               	movlw	14
  4561  0F6E  065D               	xorwf	Adf_Lock@bias^(0+128),w
  4562  0F6F  045E               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  4563  0F70  1D03               	skipz
  4564  0F71  2F44               	goto	l2237
  4565                           
  4566                           ;adf7012.c: 254: bias = 1;
  4567  0F72  3001               	movlw	1
  4568  0F73  00DD               	movwf	Adf_Lock@bias^(0+128)
  4569  0F74  3000               	movlw	0
  4570  0F75  00DE               	movwf	(Adf_Lock@bias^(0+128)+1)
  4571                           
  4572                           ;adf7012.c: 255: if(++adj == 4) {
  4573  0F76  3001               	movlw	1
  4574  0F77  07DB               	addwf	Adf_Lock@adj^(0+128),f
  4575  0F78  3000               	movlw	0
  4576  0F79  3DDC               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  4577  0F7A  3004               	movlw	4
  4578  0F7B  065B               	xorwf	Adf_Lock@adj^(0+128),w
  4579  0F7C  045C               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  4580  0F7D  1D03               	skipz
  4581  0F7E  2F44               	goto	l2237
  4582                           
  4583                           ;adf7012.c: 257: adf_config.r0.vco_adjust = 0;
  4584  0F7F  01A8               	clrf	(_adf_config^(0+128)+8)
  4585                           
  4586                           ;adf7012.c: 258: adf_config.r3.vco_bias = 5;
  4587  0F80  3005               	movlw	5
  4588  0F81  0020               	movlb	0	; select bank0
  4589  0F82  00EB               	movwf	??_Adf_Lock
  4590  0F83  086B               	movf	??_Adf_Lock,w
  4591  0F84  0021               	movlb	1	; select bank1
  4592  0F85  00C3               	movwf	(_adf_config^(0+128)+35)
  4593                           
  4594                           ;adf7012.c: 260: return 0;
  4595                           ;	Return value of _Adf_Lock is never used
  4596  0F86  0008               	return
  4597  0F87                     __end_of_Adf_Lock:	
  4598                           ;adf7012.c: 261: }
  4599                           ;adf7012.c: 262: }
  4600                           ;adf7012.c: 263: }
  4601                           ;adf7012.c: 267: return 1;
  4602                           ;	Return value of _Adf_Lock is never used
  4603                           
  4604                           
  4605                           	psect	text26
  4606  0C31                     __ptext26:	
  4607 ;; *************** function _Adf_Write_Config *****************
  4608 ;; Defined at:
  4609 ;;		line 150 in file "adf7012.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;		None               void
  4616 ;; Registers used:
  4617 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4627 ;;Total ram usage:        0 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    8
  4630 ;; This function calls:
  4631 ;;		_Adf_Write_Register_One
  4632 ;;		_Adf_Write_Register_Three
  4633 ;;		_Adf_Write_Register_Two
  4634 ;;		_Adf_Write_Register_Zero
  4635 ;; This function is called by:
  4636 ;;		_Adf_Lock
  4637 ;;		_Radio_Setup
  4638 ;;		_Ptt_On
  4639 ;;		_Ptt_Off
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _Adf_Write_Config
  4645  0C31                     _Adf_Write_Config:	
  4646                           
  4647                           ;adf7012.c: 151: Adf_Write_Register_Zero();
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4651  0C31  3182  22CD  318C   	fcall	_Adf_Write_Register_Zero
  4652                           
  4653                           ;adf7012.c: 152: Adf_Write_Register_One();
  4654  0C34  318E  26A1  318C   	fcall	_Adf_Write_Register_One
  4655                           
  4656                           ;adf7012.c: 153: Adf_Write_Register_Two();
  4657  0C37  3184  24C4  318C   	fcall	_Adf_Write_Register_Two
  4658                           
  4659                           ;adf7012.c: 154: Adf_Write_Register_Three();
  4660  0C3A  3180  2089         	fcall	_Adf_Write_Register_Three
  4661  0C3C  0008               	return
  4662  0C3D                     __end_of_Adf_Write_Config:	
  4663                           
  4664                           	psect	text27
  4665  02CD                     __ptext27:	
  4666 ;; *************** function _Adf_Write_Register_Zero *****************
  4667 ;; Defined at:
  4668 ;;		line 157 in file "adf7012.c"
  4669 ;; Parameters:    Size  Location     Type
  4670 ;;		None
  4671 ;; Auto vars:     Size  Location     Type
  4672 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  4673 ;;  reg             4   51[BANK0 ] unsigned long 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;		None               void
  4676 ;; Registers used:
  4677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4684 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4685 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4686 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4687 ;;Total ram usage:       36 bytes
  4688 ;; Hardware stack levels used:    1
  4689 ;; Hardware stack levels required when called:    7
  4690 ;; This function calls:
  4691 ;;		_Reverse_Array
  4692 ;;		_Write_Adf7012_Reg
  4693 ;;		_memcpy
  4694 ;; This function is called by:
  4695 ;;		_Adf_Write_Config
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           
  4700                           ;psect for function _Adf_Write_Register_Zero
  4701  02CD                     _Adf_Write_Register_Zero:	
  4702                           
  4703                           ;adf7012.c: 159: uint32_t reg =
  4704                           ;adf7012.c: 160: (0) |
  4705                           ;adf7012.c: 161: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  4706                           ;adf7012.c: 162: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  4707                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  4708                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  4709                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  4710                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4714  02CD  0021               	movlb	1	; select bank1
  4715  02CE  0829               	movf	(_adf_config^(0+128)+9),w
  4716  02CF  3903               	andlw	3
  4717  02D0  0020               	movlb	0	; select bank0
  4718  02D1  00B3               	movwf	??_Adf_Write_Register_Zero
  4719  02D2  01B4               	clrf	??_Adf_Write_Register_Zero+1
  4720  02D3  01B5               	clrf	??_Adf_Write_Register_Zero+2
  4721  02D4  01B6               	clrf	??_Adf_Write_Register_Zero+3
  4722  02D5  3019               	movlw	25
  4723  02D6                     u1145:	
  4724  02D6  35B3               	lslf	??_Adf_Write_Register_Zero,f
  4725  02D7  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  4726  02D8  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  4727  02D9  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  4728  02DA  0B89               	decfsz	9,f
  4729  02DB  2AD6               	goto	u1145
  4730  02DC  0021               	movlb	1	; select bank1
  4731  02DD  0828               	movf	(_adf_config^(0+128)+8),w
  4732  02DE  3903               	andlw	3
  4733  02DF  0020               	movlb	0	; select bank0
  4734  02E0  00B7               	movwf	??_Adf_Write_Register_Zero+4
  4735  02E1  01B8               	clrf	??_Adf_Write_Register_Zero+5
  4736  02E2  01B9               	clrf	??_Adf_Write_Register_Zero+6
  4737  02E3  01BA               	clrf	??_Adf_Write_Register_Zero+7
  4738  02E4  3017               	movlw	23
  4739  02E5                     u1155:	
  4740  02E5  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  4741  02E6  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  4742  02E7  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  4743  02E8  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  4744  02E9  0B89               	decfsz	9,f
  4745  02EA  2AE5               	goto	u1155
  4746  02EB  0021               	movlb	1	; select bank1
  4747  02EC  0827               	movf	(_adf_config^(0+128)+7),w
  4748  02ED  390F               	andlw	15
  4749  02EE  0020               	movlb	0	; select bank0
  4750  02EF  00BB               	movwf	??_Adf_Write_Register_Zero+8
  4751  02F0  01BC               	clrf	??_Adf_Write_Register_Zero+9
  4752  02F1  01BD               	clrf	??_Adf_Write_Register_Zero+10
  4753  02F2  01BE               	clrf	??_Adf_Write_Register_Zero+11
  4754  02F3  3013               	movlw	19
  4755  02F4                     u1165:	
  4756  02F4  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  4757  02F5  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  4758  02F6  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  4759  02F7  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  4760  02F8  0B89               	decfsz	9,f
  4761  02F9  2AF4               	goto	u1165
  4762  02FA  0021               	movlb	1	; select bank1
  4763  02FB  0826               	movf	(_adf_config^(0+128)+6),w
  4764  02FC  3901               	andlw	1
  4765  02FD  0020               	movlb	0	; select bank0
  4766  02FE  00BF               	movwf	??_Adf_Write_Register_Zero+12
  4767  02FF  01C0               	clrf	??_Adf_Write_Register_Zero+13
  4768  0300  01C1               	clrf	??_Adf_Write_Register_Zero+14
  4769  0301  01C2               	clrf	??_Adf_Write_Register_Zero+15
  4770  0302  3012               	movlw	18
  4771  0303                     u1175:	
  4772  0303  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  4773  0304  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  4774  0305  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  4775  0306  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  4776  0307  0B89               	decfsz	9,f
  4777  0308  2B03               	goto	u1175
  4778  0309  0021               	movlb	1	; select bank1
  4779  030A  0825               	movf	(_adf_config^(0+128)+5),w
  4780  030B  3901               	andlw	1
  4781  030C  0020               	movlb	0	; select bank0
  4782  030D  00C3               	movwf	??_Adf_Write_Register_Zero+16
  4783  030E  01C4               	clrf	??_Adf_Write_Register_Zero+17
  4784  030F  01C5               	clrf	??_Adf_Write_Register_Zero+18
  4785  0310  01C6               	clrf	??_Adf_Write_Register_Zero+19
  4786  0311  3011               	movlw	17
  4787  0312                     u1185:	
  4788  0312  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  4789  0313  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  4790  0314  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  4791  0315  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  4792  0316  0B89               	decfsz	9,f
  4793  0317  2B12               	goto	u1185
  4794  0318  0021               	movlb	1	; select bank1
  4795  0319  0824               	movf	(_adf_config^(0+128)+4),w
  4796  031A  390F               	andlw	15
  4797  031B  0020               	movlb	0	; select bank0
  4798  031C  00C7               	movwf	??_Adf_Write_Register_Zero+20
  4799  031D  01C8               	clrf	??_Adf_Write_Register_Zero+21
  4800  031E  01C9               	clrf	??_Adf_Write_Register_Zero+22
  4801  031F  01CA               	clrf	??_Adf_Write_Register_Zero+23
  4802  0320  300D               	movlw	13
  4803  0321                     u1195:	
  4804  0321  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  4805  0322  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  4806  0323  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  4807  0324  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  4808  0325  0B89               	decfsz	9,f
  4809  0326  2B21               	goto	u1195
  4810  0327  30FF               	movlw	255
  4811  0328  0021               	movlb	1	; select bank1
  4812  0329  0520               	andwf	_adf_config^(0+128),w
  4813  032A  0020               	movlb	0	; select bank0
  4814  032B  00CB               	movwf	??_Adf_Write_Register_Zero+24
  4815  032C  3007               	movlw	7
  4816  032D  0021               	movlb	1	; select bank1
  4817  032E  0521               	andwf	(_adf_config+1)^(0+128),w
  4818  032F  0020               	movlb	0	; select bank0
  4819  0330  00CC               	movwf	??_Adf_Write_Register_Zero+25
  4820  0331  3000               	movlw	0
  4821  0332  0021               	movlb	1	; select bank1
  4822  0333  0522               	andwf	(_adf_config+2)^(0+128),w
  4823  0334  0020               	movlb	0	; select bank0
  4824  0335  00CD               	movwf	??_Adf_Write_Register_Zero+26
  4825  0336  3000               	movlw	0
  4826  0337  0021               	movlb	1	; select bank1
  4827  0338  0523               	andwf	(_adf_config+3)^(0+128),w
  4828  0339  0020               	movlb	0	; select bank0
  4829  033A  00CE               	movwf	??_Adf_Write_Register_Zero+27
  4830  033B  3002               	movlw	2
  4831  033C                     u1205:	
  4832  033C  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  4833  033D  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  4834  033E  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  4835  033F  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  4836  0340  0B89               	decfsz	9,f
  4837  0341  2B3C               	goto	u1205
  4838  0342  084B               	movf	??_Adf_Write_Register_Zero+24,w
  4839  0343  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  4840  0344  084C               	movf	??_Adf_Write_Register_Zero+25,w
  4841  0345  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  4842  0346  084D               	movf	??_Adf_Write_Register_Zero+26,w
  4843  0347  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  4844  0348  084E               	movf	??_Adf_Write_Register_Zero+27,w
  4845  0349  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  4846  034A  0847               	movf	??_Adf_Write_Register_Zero+20,w
  4847  034B  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  4848  034C  0848               	movf	??_Adf_Write_Register_Zero+21,w
  4849  034D  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  4850  034E  0849               	movf	??_Adf_Write_Register_Zero+22,w
  4851  034F  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  4852  0350  084A               	movf	??_Adf_Write_Register_Zero+23,w
  4853  0351  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  4854  0352  0843               	movf	??_Adf_Write_Register_Zero+16,w
  4855  0353  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  4856  0354  0844               	movf	??_Adf_Write_Register_Zero+17,w
  4857  0355  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  4858  0356  0845               	movf	??_Adf_Write_Register_Zero+18,w
  4859  0357  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  4860  0358  0846               	movf	??_Adf_Write_Register_Zero+19,w
  4861  0359  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  4862  035A  083F               	movf	??_Adf_Write_Register_Zero+12,w
  4863  035B  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  4864  035C  0840               	movf	??_Adf_Write_Register_Zero+13,w
  4865  035D  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  4866  035E  0841               	movf	??_Adf_Write_Register_Zero+14,w
  4867  035F  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  4868  0360  0842               	movf	??_Adf_Write_Register_Zero+15,w
  4869  0361  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  4870  0362  083B               	movf	??_Adf_Write_Register_Zero+8,w
  4871  0363  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  4872  0364  083C               	movf	??_Adf_Write_Register_Zero+9,w
  4873  0365  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  4874  0366  083D               	movf	??_Adf_Write_Register_Zero+10,w
  4875  0367  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  4876  0368  083E               	movf	??_Adf_Write_Register_Zero+11,w
  4877  0369  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  4878  036A  0833               	movf	??_Adf_Write_Register_Zero,w
  4879  036B  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  4880  036C  00D3               	movwf	Adf_Write_Register_Zero@reg
  4881  036D  0834               	movf	??_Adf_Write_Register_Zero+1,w
  4882  036E  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  4883  036F  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  4884  0370  0835               	movf	??_Adf_Write_Register_Zero+2,w
  4885  0371  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  4886  0372  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  4887  0373  0836               	movf	??_Adf_Write_Register_Zero+3,w
  4888  0374  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  4889  0375  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  4890                           
  4891                           ;adf7012.c: 170: uint8_t reg_ptr[4];
  4892                           ;adf7012.c: 171: memcpy(reg_ptr, &reg, 4);
  4893  0376  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  4894  0377  00B3               	movwf	??_Adf_Write_Register_Zero
  4895  0378  0833               	movf	??_Adf_Write_Register_Zero,w
  4896  0379  00A0               	movwf	memcpy@s1
  4897  037A  3004               	movlw	4
  4898  037B  00A1               	movwf	memcpy@n
  4899  037C  3000               	movlw	0
  4900  037D  00A2               	movwf	memcpy@n+1
  4901  037E  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4902  037F  318D  2572  3182   	fcall	_memcpy
  4903                           
  4904                           ;adf7012.c: 172: Reverse_Array(reg_ptr,4);
  4905  0382  3004               	movlw	4
  4906  0383  0020               	movlb	0	; select bank0
  4907  0384  00B3               	movwf	??_Adf_Write_Register_Zero
  4908  0385  0833               	movf	??_Adf_Write_Register_Zero,w
  4909  0386  00A7               	movwf	Reverse_Array@length
  4910  0387  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4911  0388  3183  2394  3182   	fcall	_Reverse_Array
  4912                           
  4913                           ;adf7012.c: 173: Write_Adf7012_Reg(reg_ptr, 4);
  4914  038B  3004               	movlw	4
  4915  038C  0020               	movlb	0	; select bank0
  4916  038D  00B3               	movwf	??_Adf_Write_Register_Zero
  4917  038E  0833               	movf	??_Adf_Write_Register_Zero,w
  4918  038F  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  4919  0390  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4920  0391  318E  262D         	fcall	_Write_Adf7012_Reg
  4921  0393  0008               	return
  4922  0394                     __end_of_Adf_Write_Register_Zero:	
  4923                           
  4924                           	psect	text28
  4925  04C4                     __ptext28:	
  4926 ;; *************** function _Adf_Write_Register_Two *****************
  4927 ;; Defined at:
  4928 ;;		line 189 in file "adf7012.c"
  4929 ;; Parameters:    Size  Location     Type
  4930 ;;		None
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  4933 ;;  reg             4   47[BANK0 ] unsigned long 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;		None               void
  4936 ;; Registers used:
  4937 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;Total ram usage:       32 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:    7
  4950 ;; This function calls:
  4951 ;;		_Reverse_Array
  4952 ;;		_Write_Adf7012_Reg
  4953 ;;		_memcpy
  4954 ;; This function is called by:
  4955 ;;		_Adf_Write_Config
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           
  4960                           ;psect for function _Adf_Write_Register_Two
  4961  04C4                     _Adf_Write_Register_Two:	
  4962                           
  4963                           ;adf7012.c: 190: uint32_t reg =
  4964                           ;adf7012.c: 191: (2) |
  4965                           ;adf7012.c: 192: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  4966                           ;adf7012.c: 193: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  4967                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  4968                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  4969                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  4970                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4974  04C4  0021               	movlb	1	; select bank1
  4975  04C5  0838               	movf	(_adf_config^(0+128)+24),w
  4976  04C6  3903               	andlw	3
  4977  04C7  0020               	movlb	0	; select bank0
  4978  04C8  00B3               	movwf	??_Adf_Write_Register_Two
  4979  04C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  4980  04CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  4981  04CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  4982  04CC  3017               	movlw	23
  4983  04CD                     u1245:	
  4984  04CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  4985  04CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  4986  04CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  4987  04D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  4988  04D1  0B89               	decfsz	9,f
  4989  04D2  2CCD               	goto	u1245
  4990  04D3  0021               	movlb	1	; select bank1
  4991  04D4  0837               	movf	(_adf_config^(0+128)+23),w
  4992  04D5  3907               	andlw	7
  4993  04D6  0020               	movlb	0	; select bank0
  4994  04D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  4995  04D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  4996  04D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  4997  04DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  4998  04DB  3014               	movlw	20
  4999  04DC                     u1255:	
  5000  04DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  5001  04DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  5002  04DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  5003  04DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  5004  04E0  0B89               	decfsz	9,f
  5005  04E1  2CDC               	goto	u1255
  5006  04E2  3013               	movlw	19
  5007  04E3  3EA0               	addlw	_adf_config& (0+255)
  5008  04E4  0086               	movwf	6
  5009  04E5  0187               	clrf	7
  5010  04E6  30FF               	movlw	255
  5011  04E7  0501               	andwf	1,w
  5012  04E8  00BB               	movwf	??_Adf_Write_Register_Two+8
  5013  04E9  3141               	addfsr 1,1
  5014  04EA  3001               	movlw	1
  5015  04EB  0501               	andwf	1,w
  5016  04EC  00BC               	movwf	??_Adf_Write_Register_Two+9
  5017  04ED  3141               	addfsr 1,1
  5018  04EE  3000               	movlw	0
  5019  04EF  0501               	andwf	1,w
  5020  04F0  00BD               	movwf	??_Adf_Write_Register_Two+10
  5021  04F1  3141               	addfsr 1,1
  5022  04F2  3000               	movlw	0
  5023  04F3  0501               	andwf	1,w
  5024  04F4  00BE               	movwf	??_Adf_Write_Register_Two+11
  5025  04F5  300B               	movlw	11
  5026  04F6                     u1265:	
  5027  04F6  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  5028  04F7  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  5029  04F8  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  5030  04F9  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  5031  04FA  0B89               	decfsz	9,f
  5032  04FB  2CF6               	goto	u1265
  5033  04FC  0021               	movlb	1	; select bank1
  5034  04FD  0832               	movf	(_adf_config^(0+128)+18),w
  5035  04FE  393F               	andlw	63
  5036  04FF  0020               	movlb	0	; select bank0
  5037  0500  00BF               	movwf	??_Adf_Write_Register_Two+12
  5038  0501  01C0               	clrf	??_Adf_Write_Register_Two+13
  5039  0502  01C1               	clrf	??_Adf_Write_Register_Two+14
  5040  0503  01C2               	clrf	??_Adf_Write_Register_Two+15
  5041  0504  3005               	movlw	5
  5042  0505                     u1275:	
  5043  0505  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  5044  0506  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  5045  0507  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  5046  0508  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  5047  0509  0B89               	decfsz	9,f
  5048  050A  2D05               	goto	u1275
  5049  050B  0021               	movlb	1	; select bank1
  5050  050C  0831               	movf	(_adf_config^(0+128)+17),w
  5051  050D  3901               	andlw	1
  5052  050E  0020               	movlb	0	; select bank0
  5053  050F  00C3               	movwf	??_Adf_Write_Register_Two+16
  5054  0510  01C4               	clrf	??_Adf_Write_Register_Two+17
  5055  0511  01C5               	clrf	??_Adf_Write_Register_Two+18
  5056  0512  01C6               	clrf	??_Adf_Write_Register_Two+19
  5057  0513  3004               	movlw	4
  5058  0514                     u1285:	
  5059  0514  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  5060  0515  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  5061  0516  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  5062  0517  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  5063  0518  0B89               	decfsz	9,f
  5064  0519  2D14               	goto	u1285
  5065  051A  0021               	movlb	1	; select bank1
  5066  051B  0830               	movf	(_adf_config^(0+128)+16),w
  5067  051C  3903               	andlw	3
  5068  051D  0020               	movlb	0	; select bank0
  5069  051E  00C7               	movwf	??_Adf_Write_Register_Two+20
  5070  051F  01C8               	clrf	??_Adf_Write_Register_Two+21
  5071  0520  01C9               	clrf	??_Adf_Write_Register_Two+22
  5072  0521  01CA               	clrf	??_Adf_Write_Register_Two+23
  5073  0522  3002               	movlw	2
  5074  0523                     u1295:	
  5075  0523  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  5076  0524  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  5077  0525  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  5078  0526  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  5079  0527  0B89               	decfsz	9,f
  5080  0528  2D23               	goto	u1295
  5081  0529  0847               	movf	??_Adf_Write_Register_Two+20,w
  5082  052A  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  5083  052B  0848               	movf	??_Adf_Write_Register_Two+21,w
  5084  052C  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  5085  052D  0849               	movf	??_Adf_Write_Register_Two+22,w
  5086  052E  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  5087  052F  084A               	movf	??_Adf_Write_Register_Two+23,w
  5088  0530  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  5089  0531  0843               	movf	??_Adf_Write_Register_Two+16,w
  5090  0532  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  5091  0533  0844               	movf	??_Adf_Write_Register_Two+17,w
  5092  0534  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  5093  0535  0845               	movf	??_Adf_Write_Register_Two+18,w
  5094  0536  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  5095  0537  0846               	movf	??_Adf_Write_Register_Two+19,w
  5096  0538  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  5097  0539  083F               	movf	??_Adf_Write_Register_Two+12,w
  5098  053A  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  5099  053B  0840               	movf	??_Adf_Write_Register_Two+13,w
  5100  053C  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  5101  053D  0841               	movf	??_Adf_Write_Register_Two+14,w
  5102  053E  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  5103  053F  0842               	movf	??_Adf_Write_Register_Two+15,w
  5104  0540  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  5105  0541  083B               	movf	??_Adf_Write_Register_Two+8,w
  5106  0542  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  5107  0543  083C               	movf	??_Adf_Write_Register_Two+9,w
  5108  0544  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  5109  0545  083D               	movf	??_Adf_Write_Register_Two+10,w
  5110  0546  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  5111  0547  083E               	movf	??_Adf_Write_Register_Two+11,w
  5112  0548  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  5113  0549  0837               	movf	??_Adf_Write_Register_Two+4,w
  5114  054A  04B3               	iorwf	??_Adf_Write_Register_Two,f
  5115  054B  0838               	movf	??_Adf_Write_Register_Two+5,w
  5116  054C  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  5117  054D  0839               	movf	??_Adf_Write_Register_Two+6,w
  5118  054E  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  5119  054F  083A               	movf	??_Adf_Write_Register_Two+7,w
  5120  0550  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  5121  0551  3002               	movlw	2
  5122  0552  0433               	iorwf	??_Adf_Write_Register_Two,w
  5123  0553  00CF               	movwf	Adf_Write_Register_Two@reg
  5124  0554  3000               	movlw	0
  5125  0555  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  5126  0556  00D0               	movwf	Adf_Write_Register_Two@reg+1
  5127  0557  3000               	movlw	0
  5128  0558  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  5129  0559  00D1               	movwf	Adf_Write_Register_Two@reg+2
  5130  055A  3000               	movlw	0
  5131  055B  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  5132  055C  00D2               	movwf	Adf_Write_Register_Two@reg+3
  5133                           
  5134                           ;adf7012.c: 200: uint8_t reg_ptr[4];
  5135                           ;adf7012.c: 201: memcpy(reg_ptr, &reg, 4);
  5136  055D  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  5137  055E  00B3               	movwf	??_Adf_Write_Register_Two
  5138  055F  0833               	movf	??_Adf_Write_Register_Two,w
  5139  0560  00A0               	movwf	memcpy@s1
  5140  0561  3004               	movlw	4
  5141  0562  00A1               	movwf	memcpy@n
  5142  0563  3000               	movlw	0
  5143  0564  00A2               	movwf	memcpy@n+1
  5144  0565  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5145  0566  318D  2572  3184   	fcall	_memcpy
  5146                           
  5147                           ;adf7012.c: 202: Reverse_Array(reg_ptr,4);
  5148  0569  3004               	movlw	4
  5149  056A  0020               	movlb	0	; select bank0
  5150  056B  00B3               	movwf	??_Adf_Write_Register_Two
  5151  056C  0833               	movf	??_Adf_Write_Register_Two,w
  5152  056D  00A7               	movwf	Reverse_Array@length
  5153  056E  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5154  056F  3183  2394  3184   	fcall	_Reverse_Array
  5155                           
  5156                           ;adf7012.c: 203: Write_Adf7012_Reg(reg_ptr, 4);
  5157  0572  3004               	movlw	4
  5158  0573  0020               	movlb	0	; select bank0
  5159  0574  00B3               	movwf	??_Adf_Write_Register_Two
  5160  0575  0833               	movf	??_Adf_Write_Register_Two,w
  5161  0576  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5162  0577  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5163  0578  318E  262D         	fcall	_Write_Adf7012_Reg
  5164  057A  0008               	return
  5165  057B                     __end_of_Adf_Write_Register_Two:	
  5166                           
  5167                           	psect	text29
  5168  0089                     __ptext29:	
  5169 ;; *************** function _Adf_Write_Register_Three *****************
  5170 ;; Defined at:
  5171 ;;		line 206 in file "adf7012.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;		None
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  5176 ;;  reg             4    4[BANK1 ] unsigned long 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;		None               void
  5179 ;; Registers used:
  5180 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;Total ram usage:       64 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    7
  5193 ;; This function calls:
  5194 ;;		_Reverse_Array
  5195 ;;		_Write_Adf7012_Reg
  5196 ;;		_memcpy
  5197 ;; This function is called by:
  5198 ;;		_Adf_Write_Config
  5199 ;; This function uses a non-reentrant model
  5200 ;;
  5201                           
  5202                           
  5203                           ;psect for function _Adf_Write_Register_Three
  5204  0089                     _Adf_Write_Register_Three:	
  5205                           
  5206                           ;adf7012.c: 207: uint32_t reg =
  5207                           ;adf7012.c: 208: (3) |
  5208                           ;adf7012.c: 209: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  5209                           ;adf7012.c: 210: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  5210                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  5211                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  5212                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  5213                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  5214                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  5215                           
  5216                           ;incstack = 0
  5217                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5218  0089  0021               	movlb	1	; select bank1
  5219  008A  0846               	movf	(_adf_config^(0+128)+38),w
  5220  008B  390F               	andlw	15
  5221  008C  0020               	movlb	0	; select bank0
  5222  008D  00B3               	movwf	??_Adf_Write_Register_Three
  5223  008E  01B4               	clrf	??_Adf_Write_Register_Three+1
  5224  008F  01B5               	clrf	??_Adf_Write_Register_Three+2
  5225  0090  01B6               	clrf	??_Adf_Write_Register_Three+3
  5226  0091  301C               	movlw	28
  5227  0092                     u1305:	
  5228  0092  35B3               	lslf	??_Adf_Write_Register_Three,f
  5229  0093  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  5230  0094  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  5231  0095  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  5232  0096  0B89               	decfsz	9,f
  5233  0097  2892               	goto	u1305
  5234  0098  0021               	movlb	1	; select bank1
  5235  0099  0845               	movf	(_adf_config^(0+128)+37),w
  5236  009A  391F               	andlw	31
  5237  009B  0020               	movlb	0	; select bank0
  5238  009C  00B7               	movwf	??_Adf_Write_Register_Three+4
  5239  009D  01B8               	clrf	??_Adf_Write_Register_Three+5
  5240  009E  01B9               	clrf	??_Adf_Write_Register_Three+6
  5241  009F  01BA               	clrf	??_Adf_Write_Register_Three+7
  5242  00A0  3017               	movlw	23
  5243  00A1                     u1315:	
  5244  00A1  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  5245  00A2  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  5246  00A3  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  5247  00A4  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  5248  00A5  0B89               	decfsz	9,f
  5249  00A6  28A1               	goto	u1315
  5250  00A7  0021               	movlb	1	; select bank1
  5251  00A8  0844               	movf	(_adf_config^(0+128)+36),w
  5252  00A9  3907               	andlw	7
  5253  00AA  0020               	movlb	0	; select bank0
  5254  00AB  00BB               	movwf	??_Adf_Write_Register_Three+8
  5255  00AC  01BC               	clrf	??_Adf_Write_Register_Three+9
  5256  00AD  01BD               	clrf	??_Adf_Write_Register_Three+10
  5257  00AE  01BE               	clrf	??_Adf_Write_Register_Three+11
  5258  00AF  3014               	movlw	20
  5259  00B0                     u1325:	
  5260  00B0  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  5261  00B1  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  5262  00B2  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  5263  00B3  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  5264  00B4  0B89               	decfsz	9,f
  5265  00B5  28B0               	goto	u1325
  5266  00B6  0021               	movlb	1	; select bank1
  5267  00B7  0843               	movf	(_adf_config^(0+128)+35),w
  5268  00B8  390F               	andlw	15
  5269  00B9  0020               	movlb	0	; select bank0
  5270  00BA  00BF               	movwf	??_Adf_Write_Register_Three+12
  5271  00BB  01C0               	clrf	??_Adf_Write_Register_Three+13
  5272  00BC  01C1               	clrf	??_Adf_Write_Register_Three+14
  5273  00BD  01C2               	clrf	??_Adf_Write_Register_Three+15
  5274  00BE  3010               	movlw	16
  5275  00BF                     u1335:	
  5276  00BF  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  5277  00C0  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  5278  00C1  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  5279  00C2  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  5280  00C3  0B89               	decfsz	9,f
  5281  00C4  28BF               	goto	u1335
  5282  00C5  0021               	movlb	1	; select bank1
  5283  00C6  0842               	movf	(_adf_config^(0+128)+34),w
  5284  00C7  3901               	andlw	1
  5285  00C8  0020               	movlb	0	; select bank0
  5286  00C9  00C3               	movwf	??_Adf_Write_Register_Three+16
  5287  00CA  01C4               	clrf	??_Adf_Write_Register_Three+17
  5288  00CB  01C5               	clrf	??_Adf_Write_Register_Three+18
  5289  00CC  01C6               	clrf	??_Adf_Write_Register_Three+19
  5290  00CD  300F               	movlw	15
  5291  00CE                     u1345:	
  5292  00CE  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  5293  00CF  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  5294  00D0  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  5295  00D1  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  5296  00D2  0B89               	decfsz	9,f
  5297  00D3  28CE               	goto	u1345
  5298  00D4  0021               	movlb	1	; select bank1
  5299  00D5  0841               	movf	(_adf_config^(0+128)+33),w
  5300  00D6  390F               	andlw	15
  5301  00D7  0020               	movlb	0	; select bank0
  5302  00D8  00C7               	movwf	??_Adf_Write_Register_Three+20
  5303  00D9  01C8               	clrf	??_Adf_Write_Register_Three+21
  5304  00DA  01C9               	clrf	??_Adf_Write_Register_Three+22
  5305  00DB  01CA               	clrf	??_Adf_Write_Register_Three+23
  5306  00DC  300B               	movlw	11
  5307  00DD                     u1355:	
  5308  00DD  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  5309  00DE  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  5310  00DF  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  5311  00E0  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  5312  00E1  0B89               	decfsz	9,f
  5313  00E2  28DD               	goto	u1355
  5314  00E3  0021               	movlb	1	; select bank1
  5315  00E4  0840               	movf	(_adf_config^(0+128)+32),w
  5316  00E5  3901               	andlw	1
  5317  00E6  0020               	movlb	0	; select bank0
  5318  00E7  00CB               	movwf	??_Adf_Write_Register_Three+24
  5319  00E8  01CC               	clrf	??_Adf_Write_Register_Three+25
  5320  00E9  01CD               	clrf	??_Adf_Write_Register_Three+26
  5321  00EA  01CE               	clrf	??_Adf_Write_Register_Three+27
  5322  00EB  300A               	movlw	10
  5323  00EC                     u1365:	
  5324  00EC  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  5325  00ED  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  5326  00EE  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  5327  00EF  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  5328  00F0  0B89               	decfsz	9,f
  5329  00F1  28EC               	goto	u1365
  5330  00F2  0021               	movlb	1	; select bank1
  5331  00F3  083F               	movf	(_adf_config^(0+128)+31),w
  5332  00F4  3901               	andlw	1
  5333  00F5  0020               	movlb	0	; select bank0
  5334  00F6  00CF               	movwf	??_Adf_Write_Register_Three+28
  5335  00F7  01D0               	clrf	??_Adf_Write_Register_Three+29
  5336  00F8  01D1               	clrf	??_Adf_Write_Register_Three+30
  5337  00F9  01D2               	clrf	??_Adf_Write_Register_Three+31
  5338  00FA  3009               	movlw	9
  5339  00FB                     u1375:	
  5340  00FB  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  5341  00FC  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  5342  00FD  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  5343  00FE  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  5344  00FF  0B89               	decfsz	9,f
  5345  0100  28FB               	goto	u1375
  5346  0101  0021               	movlb	1	; select bank1
  5347  0102  083E               	movf	(_adf_config^(0+128)+30),w
  5348  0103  3901               	andlw	1
  5349  0104  0020               	movlb	0	; select bank0
  5350  0105  00D3               	movwf	??_Adf_Write_Register_Three+32
  5351  0106  01D4               	clrf	??_Adf_Write_Register_Three+33
  5352  0107  01D5               	clrf	??_Adf_Write_Register_Three+34
  5353  0108  01D6               	clrf	??_Adf_Write_Register_Three+35
  5354  0109  3008               	movlw	8
  5355  010A                     u1385:	
  5356  010A  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  5357  010B  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  5358  010C  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  5359  010D  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  5360  010E  0B89               	decfsz	9,f
  5361  010F  290A               	goto	u1385
  5362  0110  0021               	movlb	1	; select bank1
  5363  0111  083D               	movf	(_adf_config^(0+128)+29),w
  5364  0112  3903               	andlw	3
  5365  0113  0020               	movlb	0	; select bank0
  5366  0114  00D7               	movwf	??_Adf_Write_Register_Three+36
  5367  0115  01D8               	clrf	??_Adf_Write_Register_Three+37
  5368  0116  01D9               	clrf	??_Adf_Write_Register_Three+38
  5369  0117  01DA               	clrf	??_Adf_Write_Register_Three+39
  5370  0118  3006               	movlw	6
  5371  0119                     u1395:	
  5372  0119  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  5373  011A  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  5374  011B  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  5375  011C  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  5376  011D  0B89               	decfsz	9,f
  5377  011E  2919               	goto	u1395
  5378  011F  0021               	movlb	1	; select bank1
  5379  0120  083C               	movf	(_adf_config^(0+128)+28),w
  5380  0121  3901               	andlw	1
  5381  0122  0020               	movlb	0	; select bank0
  5382  0123  00DB               	movwf	??_Adf_Write_Register_Three+40
  5383  0124  01DC               	clrf	??_Adf_Write_Register_Three+41
  5384  0125  01DD               	clrf	??_Adf_Write_Register_Three+42
  5385  0126  01DE               	clrf	??_Adf_Write_Register_Three+43
  5386  0127  3005               	movlw	5
  5387  0128                     u1405:	
  5388  0128  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  5389  0129  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  5390  012A  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  5391  012B  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  5392  012C  0B89               	decfsz	9,f
  5393  012D  2928               	goto	u1405
  5394  012E  0021               	movlb	1	; select bank1
  5395  012F  083B               	movf	(_adf_config^(0+128)+27),w
  5396  0130  3901               	andlw	1
  5397  0131  0020               	movlb	0	; select bank0
  5398  0132  00DF               	movwf	??_Adf_Write_Register_Three+44
  5399  0133  01E0               	clrf	??_Adf_Write_Register_Three+45
  5400  0134  01E1               	clrf	??_Adf_Write_Register_Three+46
  5401  0135  01E2               	clrf	??_Adf_Write_Register_Three+47
  5402  0136  3004               	movlw	4
  5403  0137                     u1415:	
  5404  0137  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  5405  0138  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  5406  0139  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  5407  013A  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  5408  013B  0B89               	decfsz	9,f
  5409  013C  2937               	goto	u1415
  5410  013D  0021               	movlb	1	; select bank1
  5411  013E  083A               	movf	(_adf_config^(0+128)+26),w
  5412  013F  3901               	andlw	1
  5413  0140  0020               	movlb	0	; select bank0
  5414  0141  00E3               	movwf	??_Adf_Write_Register_Three+48
  5415  0142  01E4               	clrf	??_Adf_Write_Register_Three+49
  5416  0143  01E5               	clrf	??_Adf_Write_Register_Three+50
  5417  0144  01E6               	clrf	??_Adf_Write_Register_Three+51
  5418  0145  3003               	movlw	3
  5419  0146                     u1425:	
  5420  0146  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  5421  0147  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  5422  0148  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  5423  0149  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  5424  014A  0B89               	decfsz	9,f
  5425  014B  2946               	goto	u1425
  5426  014C  0021               	movlb	1	; select bank1
  5427  014D  0839               	movf	(_adf_config^(0+128)+25),w
  5428  014E  3901               	andlw	1
  5429  014F  0020               	movlb	0	; select bank0
  5430  0150  00E7               	movwf	??_Adf_Write_Register_Three+52
  5431  0151  01E8               	clrf	??_Adf_Write_Register_Three+53
  5432  0152  01E9               	clrf	??_Adf_Write_Register_Three+54
  5433  0153  01EA               	clrf	??_Adf_Write_Register_Three+55
  5434  0154  3002               	movlw	2
  5435  0155                     u1435:	
  5436  0155  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  5437  0156  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  5438  0157  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  5439  0158  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  5440  0159  0B89               	decfsz	9,f
  5441  015A  2955               	goto	u1435
  5442  015B  0867               	movf	??_Adf_Write_Register_Three+52,w
  5443  015C  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  5444  015D  0868               	movf	??_Adf_Write_Register_Three+53,w
  5445  015E  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  5446  015F  0869               	movf	??_Adf_Write_Register_Three+54,w
  5447  0160  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  5448  0161  086A               	movf	??_Adf_Write_Register_Three+55,w
  5449  0162  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  5450  0163  0863               	movf	??_Adf_Write_Register_Three+48,w
  5451  0164  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  5452  0165  0864               	movf	??_Adf_Write_Register_Three+49,w
  5453  0166  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  5454  0167  0865               	movf	??_Adf_Write_Register_Three+50,w
  5455  0168  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  5456  0169  0866               	movf	??_Adf_Write_Register_Three+51,w
  5457  016A  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  5458  016B  085F               	movf	??_Adf_Write_Register_Three+44,w
  5459  016C  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  5460  016D  0860               	movf	??_Adf_Write_Register_Three+45,w
  5461  016E  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  5462  016F  0861               	movf	??_Adf_Write_Register_Three+46,w
  5463  0170  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  5464  0171  0862               	movf	??_Adf_Write_Register_Three+47,w
  5465  0172  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  5466  0173  085B               	movf	??_Adf_Write_Register_Three+40,w
  5467  0174  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  5468  0175  085C               	movf	??_Adf_Write_Register_Three+41,w
  5469  0176  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  5470  0177  085D               	movf	??_Adf_Write_Register_Three+42,w
  5471  0178  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  5472  0179  085E               	movf	??_Adf_Write_Register_Three+43,w
  5473  017A  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  5474  017B  0857               	movf	??_Adf_Write_Register_Three+36,w
  5475  017C  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  5476  017D  0858               	movf	??_Adf_Write_Register_Three+37,w
  5477  017E  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  5478  017F  0859               	movf	??_Adf_Write_Register_Three+38,w
  5479  0180  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  5480  0181  085A               	movf	??_Adf_Write_Register_Three+39,w
  5481  0182  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  5482  0183  0853               	movf	??_Adf_Write_Register_Three+32,w
  5483  0184  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  5484  0185  0854               	movf	??_Adf_Write_Register_Three+33,w
  5485  0186  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  5486  0187  0855               	movf	??_Adf_Write_Register_Three+34,w
  5487  0188  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  5488  0189  0856               	movf	??_Adf_Write_Register_Three+35,w
  5489  018A  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  5490  018B  084F               	movf	??_Adf_Write_Register_Three+28,w
  5491  018C  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  5492  018D  0850               	movf	??_Adf_Write_Register_Three+29,w
  5493  018E  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  5494  018F  0851               	movf	??_Adf_Write_Register_Three+30,w
  5495  0190  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  5496  0191  0852               	movf	??_Adf_Write_Register_Three+31,w
  5497  0192  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  5498  0193  084B               	movf	??_Adf_Write_Register_Three+24,w
  5499  0194  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  5500  0195  084C               	movf	??_Adf_Write_Register_Three+25,w
  5501  0196  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  5502  0197  084D               	movf	??_Adf_Write_Register_Three+26,w
  5503  0198  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  5504  0199  084E               	movf	??_Adf_Write_Register_Three+27,w
  5505  019A  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  5506  019B  0847               	movf	??_Adf_Write_Register_Three+20,w
  5507  019C  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  5508  019D  0848               	movf	??_Adf_Write_Register_Three+21,w
  5509  019E  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  5510  019F  0849               	movf	??_Adf_Write_Register_Three+22,w
  5511  01A0  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  5512  01A1  084A               	movf	??_Adf_Write_Register_Three+23,w
  5513  01A2  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  5514  01A3  0843               	movf	??_Adf_Write_Register_Three+16,w
  5515  01A4  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  5516  01A5  0844               	movf	??_Adf_Write_Register_Three+17,w
  5517  01A6  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  5518  01A7  0845               	movf	??_Adf_Write_Register_Three+18,w
  5519  01A8  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  5520  01A9  0846               	movf	??_Adf_Write_Register_Three+19,w
  5521  01AA  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  5522  01AB  083F               	movf	??_Adf_Write_Register_Three+12,w
  5523  01AC  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  5524  01AD  0840               	movf	??_Adf_Write_Register_Three+13,w
  5525  01AE  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  5526  01AF  0841               	movf	??_Adf_Write_Register_Three+14,w
  5527  01B0  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  5528  01B1  0842               	movf	??_Adf_Write_Register_Three+15,w
  5529  01B2  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  5530  01B3  083B               	movf	??_Adf_Write_Register_Three+8,w
  5531  01B4  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  5532  01B5  083C               	movf	??_Adf_Write_Register_Three+9,w
  5533  01B6  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  5534  01B7  083D               	movf	??_Adf_Write_Register_Three+10,w
  5535  01B8  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  5536  01B9  083E               	movf	??_Adf_Write_Register_Three+11,w
  5537  01BA  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  5538  01BB  0837               	movf	??_Adf_Write_Register_Three+4,w
  5539  01BC  04B3               	iorwf	??_Adf_Write_Register_Three,f
  5540  01BD  0838               	movf	??_Adf_Write_Register_Three+5,w
  5541  01BE  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  5542  01BF  0839               	movf	??_Adf_Write_Register_Three+6,w
  5543  01C0  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  5544  01C1  083A               	movf	??_Adf_Write_Register_Three+7,w
  5545  01C2  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  5546  01C3  3003               	movlw	3
  5547  01C4  0433               	iorwf	??_Adf_Write_Register_Three,w
  5548  01C5  0021               	movlb	1	; select bank1
  5549  01C6  00D7               	movwf	Adf_Write_Register_Three@reg^(0+128)
  5550  01C7  3000               	movlw	0
  5551  01C8  0020               	movlb	0	; select bank0
  5552  01C9  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  5553  01CA  0021               	movlb	1	; select bank1
  5554  01CB  00D8               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  5555  01CC  3000               	movlw	0
  5556  01CD  0020               	movlb	0	; select bank0
  5557  01CE  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  5558  01CF  0021               	movlb	1	; select bank1
  5559  01D0  00D9               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  5560  01D1  3000               	movlw	0
  5561  01D2  0020               	movlb	0	; select bank0
  5562  01D3  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  5563  01D4  0021               	movlb	1	; select bank1
  5564  01D5  00DA               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  5565                           
  5566                           ;adf7012.c: 225: uint8_t reg_ptr[4];
  5567                           ;adf7012.c: 226: memcpy(reg_ptr, &reg, 4);
  5568  01D6  30D7               	movlw	Adf_Write_Register_Three@reg& (0+255)
  5569  01D7  0020               	movlb	0	; select bank0
  5570  01D8  00B3               	movwf	??_Adf_Write_Register_Three
  5571  01D9  0833               	movf	??_Adf_Write_Register_Three,w
  5572  01DA  00A0               	movwf	memcpy@s1
  5573  01DB  3004               	movlw	4
  5574  01DC  00A1               	movwf	memcpy@n
  5575  01DD  3000               	movlw	0
  5576  01DE  00A2               	movwf	memcpy@n+1
  5577  01DF  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5578  01E0  318D  2572  3180   	fcall	_memcpy
  5579                           
  5580                           ;adf7012.c: 227: Reverse_Array(reg_ptr,4);
  5581  01E3  3004               	movlw	4
  5582  01E4  0020               	movlb	0	; select bank0
  5583  01E5  00B3               	movwf	??_Adf_Write_Register_Three
  5584  01E6  0833               	movf	??_Adf_Write_Register_Three,w
  5585  01E7  00A7               	movwf	Reverse_Array@length
  5586  01E8  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5587  01E9  3183  2394  3180   	fcall	_Reverse_Array
  5588                           
  5589                           ;adf7012.c: 228: Write_Adf7012_Reg(reg_ptr, 4);
  5590  01EC  3004               	movlw	4
  5591  01ED  0020               	movlb	0	; select bank0
  5592  01EE  00B3               	movwf	??_Adf_Write_Register_Three
  5593  01EF  0833               	movf	??_Adf_Write_Register_Three,w
  5594  01F0  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5595  01F1  30D3               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5596  01F2  318E  262D         	fcall	_Write_Adf7012_Reg
  5597  01F4  0008               	return
  5598  01F5                     __end_of_Adf_Write_Register_Three:	
  5599                           
  5600                           	psect	text30
  5601  0EA1                     __ptext30:	
  5602 ;; *************** function _Adf_Write_Register_One *****************
  5603 ;; Defined at:
  5604 ;;		line 176 in file "adf7012.c"
  5605 ;; Parameters:    Size  Location     Type
  5606 ;;		None
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;  reg             4   31[BANK0 ] unsigned long 
  5609 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  5610 ;; Return value:  Size  Location     Type
  5611 ;;		None               void
  5612 ;; Registers used:
  5613 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;Total ram usage:       19 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    7
  5626 ;; This function calls:
  5627 ;;		_Reverse_Array
  5628 ;;		_Write_Adf7012_Reg
  5629 ;;		_memcpy
  5630 ;; This function is called by:
  5631 ;;		_Adf_Write_Config
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           
  5636                           ;psect for function _Adf_Write_Register_One
  5637  0EA1                     _Adf_Write_Register_One:	
  5638                           
  5639                           ;adf7012.c: 177: uint32_t reg =
  5640                           ;adf7012.c: 178: (1) |
  5641                           ;adf7012.c: 179: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  5642                           ;adf7012.c: 180: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  5643                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  5644                           
  5645                           ;incstack = 0
  5646                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5647  0EA1  0021               	movlb	1	; select bank1
  5648  0EA2  082F               	movf	(_adf_config^(0+128)+15),w
  5649  0EA3  3901               	andlw	1
  5650  0EA4  0020               	movlb	0	; select bank0
  5651  0EA5  00B3               	movwf	??_Adf_Write_Register_One
  5652  0EA6  01B4               	clrf	??_Adf_Write_Register_One+1
  5653  0EA7  01B5               	clrf	??_Adf_Write_Register_One+2
  5654  0EA8  01B6               	clrf	??_Adf_Write_Register_One+3
  5655  0EA9  3016               	movlw	22
  5656  0EAA                     u1215:	
  5657  0EAA  35B3               	lslf	??_Adf_Write_Register_One,f
  5658  0EAB  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  5659  0EAC  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  5660  0EAD  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  5661  0EAE  0B89               	decfsz	9,f
  5662  0EAF  2EAA               	goto	u1215
  5663  0EB0  0021               	movlb	1	; select bank1
  5664  0EB1  082E               	movf	(_adf_config^(0+128)+14),w
  5665  0EB2  0020               	movlb	0	; select bank0
  5666  0EB3  00B7               	movwf	??_Adf_Write_Register_One+4
  5667  0EB4  01B8               	clrf	??_Adf_Write_Register_One+5
  5668  0EB5  01B9               	clrf	??_Adf_Write_Register_One+6
  5669  0EB6  01BA               	clrf	??_Adf_Write_Register_One+7
  5670  0EB7  300E               	movlw	14
  5671  0EB8                     u1225:	
  5672  0EB8  35B7               	lslf	??_Adf_Write_Register_One+4,f
  5673  0EB9  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  5674  0EBA  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  5675  0EBB  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  5676  0EBC  0B89               	decfsz	9,f
  5677  0EBD  2EB8               	goto	u1225
  5678  0EBE  300A               	movlw	10
  5679  0EBF  3EA0               	addlw	_adf_config& (0+255)
  5680  0EC0  0086               	movwf	6
  5681  0EC1  0187               	clrf	7
  5682  0EC2  30FF               	movlw	255
  5683  0EC3  0501               	andwf	1,w
  5684  0EC4  00BB               	movwf	??_Adf_Write_Register_One+8
  5685  0EC5  3141               	addfsr 1,1
  5686  0EC6  300F               	movlw	15
  5687  0EC7  0501               	andwf	1,w
  5688  0EC8  00BC               	movwf	??_Adf_Write_Register_One+9
  5689  0EC9  3141               	addfsr 1,1
  5690  0ECA  3000               	movlw	0
  5691  0ECB  0501               	andwf	1,w
  5692  0ECC  00BD               	movwf	??_Adf_Write_Register_One+10
  5693  0ECD  3141               	addfsr 1,1
  5694  0ECE  3000               	movlw	0
  5695  0ECF  0501               	andwf	1,w
  5696  0ED0  00BE               	movwf	??_Adf_Write_Register_One+11
  5697  0ED1  3002               	movlw	2
  5698  0ED2                     u1235:	
  5699  0ED2  35BB               	lslf	??_Adf_Write_Register_One+8,f
  5700  0ED3  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  5701  0ED4  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  5702  0ED5  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  5703  0ED6  0B89               	decfsz	9,f
  5704  0ED7  2ED2               	goto	u1235
  5705  0ED8  083B               	movf	??_Adf_Write_Register_One+8,w
  5706  0ED9  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  5707  0EDA  083C               	movf	??_Adf_Write_Register_One+9,w
  5708  0EDB  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  5709  0EDC  083D               	movf	??_Adf_Write_Register_One+10,w
  5710  0EDD  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  5711  0EDE  083E               	movf	??_Adf_Write_Register_One+11,w
  5712  0EDF  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  5713  0EE0  0837               	movf	??_Adf_Write_Register_One+4,w
  5714  0EE1  04B3               	iorwf	??_Adf_Write_Register_One,f
  5715  0EE2  0838               	movf	??_Adf_Write_Register_One+5,w
  5716  0EE3  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  5717  0EE4  0839               	movf	??_Adf_Write_Register_One+6,w
  5718  0EE5  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  5719  0EE6  083A               	movf	??_Adf_Write_Register_One+7,w
  5720  0EE7  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  5721  0EE8  3001               	movlw	1
  5722  0EE9  0433               	iorwf	??_Adf_Write_Register_One,w
  5723  0EEA  00BF               	movwf	Adf_Write_Register_One@reg
  5724  0EEB  3000               	movlw	0
  5725  0EEC  0434               	iorwf	??_Adf_Write_Register_One+1,w
  5726  0EED  00C0               	movwf	Adf_Write_Register_One@reg+1
  5727  0EEE  3000               	movlw	0
  5728  0EEF  0435               	iorwf	??_Adf_Write_Register_One+2,w
  5729  0EF0  00C1               	movwf	Adf_Write_Register_One@reg+2
  5730  0EF1  3000               	movlw	0
  5731  0EF2  0436               	iorwf	??_Adf_Write_Register_One+3,w
  5732  0EF3  00C2               	movwf	Adf_Write_Register_One@reg+3
  5733                           
  5734                           ;adf7012.c: 183: uint8_t reg_ptr[3];
  5735                           ;adf7012.c: 184: memcpy(reg_ptr, &reg, 3);
  5736  0EF4  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  5737  0EF5  00B3               	movwf	??_Adf_Write_Register_One
  5738  0EF6  0833               	movf	??_Adf_Write_Register_One,w
  5739  0EF7  00A0               	movwf	memcpy@s1
  5740  0EF8  3003               	movlw	3
  5741  0EF9  00A1               	movwf	memcpy@n
  5742  0EFA  3000               	movlw	0
  5743  0EFB  00A2               	movwf	memcpy@n+1
  5744  0EFC  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5745  0EFD  318D  2572  318E   	fcall	_memcpy
  5746                           
  5747                           ;adf7012.c: 185: Reverse_Array(reg_ptr,3);
  5748  0F00  3003               	movlw	3
  5749  0F01  0020               	movlb	0	; select bank0
  5750  0F02  00B3               	movwf	??_Adf_Write_Register_One
  5751  0F03  0833               	movf	??_Adf_Write_Register_One,w
  5752  0F04  00A7               	movwf	Reverse_Array@length
  5753  0F05  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5754  0F06  3183  2394  318E   	fcall	_Reverse_Array
  5755                           
  5756                           ;adf7012.c: 186: Write_Adf7012_Reg(reg_ptr, 3);
  5757  0F09  3003               	movlw	3
  5758  0F0A  0020               	movlb	0	; select bank0
  5759  0F0B  00B3               	movwf	??_Adf_Write_Register_One
  5760  0F0C  0833               	movf	??_Adf_Write_Register_One,w
  5761  0F0D  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5762  0F0E  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5763  0F0F  318E  262D         	fcall	_Write_Adf7012_Reg
  5764  0F11  0008               	return
  5765  0F12                     __end_of_Adf_Write_Register_One:	
  5766                           
  5767                           	psect	text31
  5768  0E2D                     __ptext31:	
  5769 ;; *************** function _Write_Adf7012_Reg *****************
  5770 ;; Defined at:
  5771 ;;		line 82 in file "utility.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  reg_value       1    wreg     PTR unsigned char 
  5774 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5775 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  5778 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5779 ;;  i               1   13[BANK0 ] unsigned char 
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      unsigned char 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5789 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;Total ram usage:        4 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; Hardware stack levels required when called:    6
  5796 ;; This function calls:
  5797 ;;		_Delay_ms
  5798 ;;		_Spi_Byte_Send
  5799 ;; This function is called by:
  5800 ;;		_Adf_Write_Register_Zero
  5801 ;;		_Adf_Write_Register_One
  5802 ;;		_Adf_Write_Register_Two
  5803 ;;		_Adf_Write_Register_Three
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           
  5808                           ;psect for function _Write_Adf7012_Reg
  5809  0E2D                     _Write_Adf7012_Reg:	
  5810                           
  5811                           ;incstack = 0
  5812                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5813                           ;Write_Adf7012_Reg@reg_value stored from wreg
  5814  0E2D  0020               	movlb	0	; select bank0
  5815  0E2E  00AC               	movwf	Write_Adf7012_Reg@reg_value
  5816                           
  5817                           ;utility.c: 84: uint8_t i = 0;
  5818  0E2F  01AD               	clrf	Write_Adf7012_Reg@i
  5819                           
  5820                           ;utility.c: 85: Delay_ms(1);
  5821  0E30  3001               	movlw	1
  5822  0E31  00A0               	movwf	Delay_ms@time_to_delay
  5823  0E32  3000               	movlw	0
  5824  0E33  00A1               	movwf	Delay_ms@time_to_delay+1
  5825  0E34  318D  252F  318E   	fcall	_Delay_ms
  5826                           
  5827                           ;utility.c: 86: PORTAbits.RA4 = 0;;
  5828  0E37  0020               	movlb	0	; select bank0
  5829  0E38  120C               	bcf	12,4	;volatile
  5830                           
  5831                           ;utility.c: 87: Delay_ms(1);
  5832  0E39  3001               	movlw	1
  5833  0E3A  00A0               	movwf	Delay_ms@time_to_delay
  5834  0E3B  3000               	movlw	0
  5835  0E3C  00A1               	movwf	Delay_ms@time_to_delay+1
  5836  0E3D  318D  252F  318E   	fcall	_Delay_ms
  5837                           
  5838                           ;utility.c: 89: for (i = 0; i < size_of_reg; i++){
  5839  0E40  0020               	movlb	0	; select bank0
  5840  0E41  01AD               	clrf	Write_Adf7012_Reg@i
  5841  0E42                     l1725:	
  5842  0E42  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  5843  0E43  022D               	subwf	Write_Adf7012_Reg@i,w
  5844  0E44  1803               	btfsc	3,0
  5845  0E45  2E56               	goto	l1727
  5846                           
  5847                           ;utility.c: 90: Spi_Byte_Send(*(reg_value+i));
  5848  0E46  082D               	movf	Write_Adf7012_Reg@i,w
  5849  0E47  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  5850  0E48  00AB               	movwf	??_Write_Adf7012_Reg
  5851  0E49  082B               	movf	??_Write_Adf7012_Reg,w
  5852  0E4A  0086               	movwf	6
  5853  0E4B  0187               	clrf	7
  5854  0E4C  0801               	movf	1,w
  5855  0E4D  318D  259B  318E   	fcall	_Spi_Byte_Send
  5856  0E50  3001               	movlw	1
  5857  0E51  0020               	movlb	0	; select bank0
  5858  0E52  00AB               	movwf	??_Write_Adf7012_Reg
  5859  0E53  082B               	movf	??_Write_Adf7012_Reg,w
  5860  0E54  07AD               	addwf	Write_Adf7012_Reg@i,f
  5861  0E55  2E42               	goto	l1725
  5862  0E56                     l1727:	
  5863                           
  5864                           ;utility.c: 91: }
  5865                           ;utility.c: 93: Delay_ms(1);
  5866  0E56  3001               	movlw	1
  5867  0E57  00A0               	movwf	Delay_ms@time_to_delay
  5868  0E58  3000               	movlw	0
  5869  0E59  00A1               	movwf	Delay_ms@time_to_delay+1
  5870  0E5A  318D  252F  318E   	fcall	_Delay_ms
  5871                           
  5872                           ;utility.c: 94: PORTAbits.RA4 = 1;;
  5873  0E5D  0020               	movlb	0	; select bank0
  5874  0E5E  160C               	bsf	12,4	;volatile
  5875                           
  5876                           ;utility.c: 96: Delay_ms(1);
  5877  0E5F  3001               	movlw	1
  5878  0E60  00A0               	movwf	Delay_ms@time_to_delay
  5879  0E61  3000               	movlw	0
  5880  0E62  00A1               	movwf	Delay_ms@time_to_delay+1
  5881  0E63  318D  252F         	fcall	_Delay_ms
  5882  0E65  0008               	return
  5883  0E66                     __end_of_Write_Adf7012_Reg:	
  5884                           ;utility.c: 97: return 1;
  5885                           ;	Return value of _Write_Adf7012_Reg is never used
  5886                           
  5887                           
  5888                           	psect	text32
  5889  0D9B                     __ptext32:	
  5890 ;; *************** function _Spi_Byte_Send *****************
  5891 ;; Defined at:
  5892 ;;		line 220 in file "utility.c"
  5893 ;; Parameters:    Size  Location     Type
  5894 ;;  data            1    wreg     unsigned char 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;  data            1    7[BANK0 ] unsigned char 
  5897 ;;  i               1    9[BANK0 ] unsigned char 
  5898 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  1    wreg      unsigned char 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0, pclath, cstack
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5909 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5910 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5911 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5912 ;;Total ram usage:        4 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; Hardware stack levels required when called:    5
  5915 ;; This function calls:
  5916 ;;		_Delay_ms
  5917 ;; This function is called by:
  5918 ;;		_Write_Adf7012_Reg
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           
  5923                           ;psect for function _Spi_Byte_Send
  5924  0D9B                     _Spi_Byte_Send:	
  5925                           
  5926                           ;incstack = 0
  5927                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  5928                           ;Spi_Byte_Send@data stored from wreg
  5929  0D9B  0020               	movlb	0	; select bank0
  5930  0D9C  00A7               	movwf	Spi_Byte_Send@data
  5931                           
  5932                           ;utility.c: 222: PORTAbits.RA2 = 0;
  5933  0D9D  110C               	bcf	12,2	;volatile
  5934                           
  5935                           ;utility.c: 223: uint8_t i;
  5936                           ;utility.c: 224: uint8_t data_to_send;
  5937                           ;utility.c: 225: data_to_send = data;
  5938  0D9E  0827               	movf	Spi_Byte_Send@data,w
  5939  0D9F  00A6               	movwf	??_Spi_Byte_Send
  5940  0DA0  0826               	movf	??_Spi_Byte_Send,w
  5941  0DA1  00A8               	movwf	Spi_Byte_Send@data_to_send
  5942                           
  5943                           ;utility.c: 226: for(i = 0; i <8; i++){
  5944  0DA2  01A9               	clrf	Spi_Byte_Send@i
  5945  0DA3                     L5:	
  5946  0DA3  3008               	movlw	8
  5947  0DA4  0229               	subwf	Spi_Byte_Send@i,w
  5948  0DA5  1803               	btfsc	3,0
  5949  0DA6  0008               	return
  5950                           
  5951                           ;utility.c: 228: if(data_to_send & 0x80)
  5952  0DA7  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  5953  0DA8  2DAB               	goto	l233
  5954                           
  5955                           ;utility.c: 229: PORTCbits.RC2 = 1;
  5956  0DA9  150E               	bsf	14,2	;volatile
  5957  0DAA  2DAC               	goto	l1689
  5958  0DAB                     l233:	
  5959                           
  5960                           ;utility.c: 230: else
  5961                           ;utility.c: 231: PORTCbits.RC2 = 0;
  5962  0DAB  110E               	bcf	14,2	;volatile
  5963  0DAC                     l1689:	
  5964                           
  5965                           ;utility.c: 233: data_to_send <<= 1;
  5966  0DAC  1003               	clrc
  5967  0DAD  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  5968                           
  5969                           ;utility.c: 235: PORTAbits.RA2 = 1;
  5970  0DAE  150C               	bsf	12,2	;volatile
  5971                           
  5972                           ;utility.c: 236: Delay_ms(1);
  5973  0DAF  3001               	movlw	1
  5974  0DB0  00A0               	movwf	Delay_ms@time_to_delay
  5975  0DB1  3000               	movlw	0
  5976  0DB2  00A1               	movwf	Delay_ms@time_to_delay+1
  5977  0DB3  318D  252F  318D   	fcall	_Delay_ms
  5978                           
  5979                           ;utility.c: 237: PORTAbits.RA2 = 0;
  5980  0DB6  0020               	movlb	0	; select bank0
  5981  0DB7  110C               	bcf	12,2	;volatile
  5982                           
  5983                           ;utility.c: 238: Delay_ms(1);
  5984  0DB8  3001               	movlw	1
  5985  0DB9  00A0               	movwf	Delay_ms@time_to_delay
  5986  0DBA  3000               	movlw	0
  5987  0DBB  00A1               	movwf	Delay_ms@time_to_delay+1
  5988  0DBC  318D  252F  318D   	fcall	_Delay_ms
  5989  0DBF  3001               	movlw	1
  5990  0DC0  0020               	movlb	0	; select bank0
  5991  0DC1  00A6               	movwf	??_Spi_Byte_Send
  5992  0DC2  0826               	movf	??_Spi_Byte_Send,w
  5993  0DC3  07A9               	addwf	Spi_Byte_Send@i,f
  5994  0DC4  2DA3               	goto	L5
  5995  0DC5                     __end_of_Spi_Byte_Send:	
  5996                           ;utility.c: 240: }
  5997                           ;utility.c: 241: return 1;
  5998                           ;	Return value of _Spi_Byte_Send is never used
  5999                           
  6000                           
  6001                           	psect	text33
  6002  0D2F                     __ptext33:	
  6003 ;; *************** function _Delay_ms *****************
  6004 ;; Defined at:
  6005 ;;		line 44 in file "utility.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;  i               2    4[BANK0 ] unsigned int 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;		None               void
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0, pclath, cstack
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6019 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6020 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6021 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6022 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6023 ;;Total ram usage:        6 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    4
  6026 ;; This function calls:
  6027 ;;		_Dac0_Start_Hold
  6028 ;; This function is called by:
  6029 ;;		_main
  6030 ;;		_Write_Adf7012_Reg
  6031 ;;		_Spi_Byte_Send
  6032 ;;		_Adf_Reset
  6033 ;;		_Adf_Lock
  6034 ;;		_Radio_Setup
  6035 ;;		_Ptt_On
  6036 ;;		_Ptt_Off
  6037 ;;		_Modem_Flush_Frame
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           
  6042                           ;psect for function _Delay_ms
  6043  0D2F                     _Delay_ms:	
  6044                           
  6045                           ;utility.c: 46: uint16_t i=0;
  6046                           
  6047                           ;incstack = 0
  6048                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  6049  0D2F  0020               	movlb	0	; select bank0
  6050  0D30  01A4               	clrf	Delay_ms@i
  6051  0D31  01A5               	clrf	Delay_ms@i+1
  6052                           
  6053                           ;utility.c: 48: Dac0_Start_Hold();
  6054  0D32  318C  2402  318D   	fcall	_Dac0_Start_Hold
  6055                           
  6056                           ;utility.c: 49: for(i=0; i<time_to_delay; i++){
  6057  0D35  0020               	movlb	0	; select bank0
  6058  0D36  01A4               	clrf	Delay_ms@i
  6059  0D37  01A5               	clrf	Delay_ms@i+1
  6060  0D38                     l203:	
  6061  0D38  0821               	movf	Delay_ms@time_to_delay+1,w
  6062  0D39  0225               	subwf	Delay_ms@i+1,w
  6063  0D3A  1D03               	skipz
  6064  0D3B  2D3E               	goto	u1075
  6065  0D3C  0820               	movf	Delay_ms@time_to_delay,w
  6066  0D3D  0224               	subwf	Delay_ms@i,w
  6067  0D3E                     u1075:	
  6068  0D3E  1803               	btfsc	3,0
  6069  0D3F  0008               	return
  6070                           
  6071                           ;utility.c: 50: _delay((unsigned long)((1)*(32000000/4000.0)));
  6072  0D40  300B               	movlw	11
  6073  0D41  00A3               	movwf	??_Delay_ms+1
  6074  0D42  3062               	movlw	98
  6075  0D43  00A2               	movwf	??_Delay_ms
  6076  0D44                     u2977:	
  6077  0D44  0BA2               	decfsz	??_Delay_ms,f
  6078  0D45  2D44               	goto	u2977
  6079  0D46  0BA3               	decfsz	??_Delay_ms+1,f
  6080  0D47  2D44               	goto	u2977
  6081  0D48  0000               	nop
  6082  0D49  3001               	movlw	1
  6083  0D4A  0020               	movlb	0	; select bank0
  6084  0D4B  07A4               	addwf	Delay_ms@i,f
  6085  0D4C  3000               	movlw	0
  6086  0D4D  3DA5               	addwfc	Delay_ms@i+1,f
  6087  0D4E  2D38               	goto	l203
  6088  0D4F                     __end_of_Delay_ms:	
  6089                           
  6090                           	psect	text34
  6091  0C02                     __ptext34:	
  6092 ;; *************** function _Dac0_Start_Hold *****************
  6093 ;; Defined at:
  6094 ;;		line 275 in file "utility.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;		None               void
  6101 ;; Registers used:
  6102 ;;		wreg
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    3
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_main
  6119 ;;		_Delay_ms
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           
  6124                           ;psect for function _Dac0_Start_Hold
  6125  0C02                     _Dac0_Start_Hold:	
  6126                           
  6127                           ;utility.c: 276: DACEN = 1;
  6128                           
  6129                           ;incstack = 0
  6130                           ; Regs used in _Dac0_Start_Hold: [wreg]
  6131  0C02  0022               	movlb	2	; select bank2
  6132  0C03  1798               	bsf	24,7	;volatile
  6133                           
  6134                           ;utility.c: 277: DACCON1 = 0x10;
  6135  0C04  3010               	movlw	16
  6136  0C05  0099               	movwf	25	;volatile
  6137  0C06  0008               	return
  6138  0C07                     __end_of_Dac0_Start_Hold:	
  6139                           
  6140                           	psect	text35
  6141  0394                     __ptext35:	
  6142 ;; *************** function _Reverse_Array *****************
  6143 ;; Defined at:
  6144 ;;		line 198 in file "utility.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  input           1    wreg     PTR unsigned char 
  6147 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6148 ;;  length          1    7[BANK0 ] unsigned char 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;  input           1   17[BANK0 ] PTR unsigned char 
  6151 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6152 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  6153 ;;  i               1   18[BANK0 ] unsigned char 
  6154 ;; Return value:  Size  Location     Type
  6155 ;;                  1    wreg      unsigned char 
  6156 ;; Registers used:
  6157 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6163 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6164 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;Total ram usage:       12 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    4
  6170 ;; This function calls:
  6171 ;;		_memcpy
  6172 ;; This function is called by:
  6173 ;;		_Adf_Write_Register_Zero
  6174 ;;		_Adf_Write_Register_One
  6175 ;;		_Adf_Write_Register_Two
  6176 ;;		_Adf_Write_Register_Three
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           
  6181                           ;psect for function _Reverse_Array
  6182  0394                     _Reverse_Array:	
  6183                           
  6184                           ;incstack = 0
  6185                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6186                           ;Reverse_Array@input stored from wreg
  6187  0394  0020               	movlb	0	; select bank0
  6188  0395  00B1               	movwf	Reverse_Array@input
  6189                           
  6190                           ;utility.c: 199: uint8_t i = 0;
  6191  0396  01B2               	clrf	Reverse_Array@i
  6192                           
  6193                           ;utility.c: 200: uint8_t buffer_array[4] = {0};
  6194  0397  0022               	movlb	2	; select bank2
  6195  0398  0823               	movf	(Reverse_Array@F3148+3)^(0+256),w
  6196  0399  0020               	movlb	0	; select bank0
  6197  039A  00B0               	movwf	Reverse_Array@buffer_array+3
  6198  039B  0022               	movlb	2	; select bank2
  6199  039C  0822               	movf	(Reverse_Array@F3148+2)^(0+256),w
  6200  039D  0020               	movlb	0	; select bank0
  6201  039E  00AF               	movwf	Reverse_Array@buffer_array+2
  6202  039F  0022               	movlb	2	; select bank2
  6203  03A0  0821               	movf	(Reverse_Array@F3148+1)^(0+256),w
  6204  03A1  0020               	movlb	0	; select bank0
  6205  03A2  00AE               	movwf	Reverse_Array@buffer_array+1
  6206  03A3  0022               	movlb	2	; select bank2
  6207  03A4  0820               	movf	Reverse_Array@F3148^(0+256),w
  6208  03A5  0020               	movlb	0	; select bank0
  6209  03A6  00AD               	movwf	Reverse_Array@buffer_array
  6210                           
  6211                           ;utility.c: 201: memcpy(buffer_array, input, length);
  6212  03A7  0831               	movf	Reverse_Array@input,w
  6213  03A8  00A8               	movwf	??_Reverse_Array
  6214  03A9  0828               	movf	??_Reverse_Array,w
  6215  03AA  00A0               	movwf	memcpy@s1
  6216  03AB  0827               	movf	Reverse_Array@length,w
  6217  03AC  00A9               	movwf	??_Reverse_Array+1
  6218  03AD  01AA               	clrf	??_Reverse_Array+2
  6219  03AE  0829               	movf	??_Reverse_Array+1,w
  6220  03AF  00A1               	movwf	memcpy@n
  6221  03B0  082A               	movf	??_Reverse_Array+2,w
  6222  03B1  00A2               	movwf	memcpy@n+1
  6223  03B2  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6224  03B3  318D  2572  3183   	fcall	_memcpy
  6225                           
  6226                           ;utility.c: 203: for(i = 0; i<length; i++){
  6227  03B6  0020               	movlb	0	; select bank0
  6228  03B7  01B2               	clrf	Reverse_Array@i
  6229  03B8                     l1745:	
  6230  03B8  0827               	movf	Reverse_Array@length,w
  6231  03B9  0232               	subwf	Reverse_Array@i,w
  6232  03BA  1803               	btfsc	3,0
  6233  03BB  0008               	return
  6234                           
  6235                           ;utility.c: 204: *(input+i) = *(buffer_array+(length-1)-i);
  6236  03BC  30FF               	movlw	-1
  6237  03BD  0727               	addwf	Reverse_Array@length,w
  6238  03BE  00A8               	movwf	??_Reverse_Array
  6239  03BF  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6240  03C0  0728               	addwf	??_Reverse_Array,w
  6241  03C1  00A9               	movwf	??_Reverse_Array+1
  6242  03C2  0332               	decf	Reverse_Array@i,w
  6243  03C3  3AFF               	xorlw	255
  6244  03C4  0729               	addwf	??_Reverse_Array+1,w
  6245  03C5  00AA               	movwf	??_Reverse_Array+2
  6246  03C6  082A               	movf	??_Reverse_Array+2,w
  6247  03C7  0086               	movwf	6
  6248  03C8  0187               	clrf	7
  6249  03C9  0801               	movf	1,w
  6250  03CA  00AB               	movwf	??_Reverse_Array+3
  6251  03CB  0832               	movf	Reverse_Array@i,w
  6252  03CC  0731               	addwf	Reverse_Array@input,w
  6253  03CD  00AC               	movwf	??_Reverse_Array+4
  6254  03CE  082C               	movf	??_Reverse_Array+4,w
  6255  03CF  0086               	movwf	6
  6256  03D0  0187               	clrf	7
  6257  03D1  082B               	movf	??_Reverse_Array+3,w
  6258  03D2  0081               	movwf	1
  6259  03D3  3001               	movlw	1
  6260  03D4  00A8               	movwf	??_Reverse_Array
  6261  03D5  0828               	movf	??_Reverse_Array,w
  6262  03D6  07B2               	addwf	Reverse_Array@i,f
  6263  03D7  2BB8               	goto	l1745
  6264  03D8                     __end_of_Reverse_Array:	
  6265                           ;utility.c: 205: }
  6266                           ;utility.c: 209: return 1;
  6267                           ;	Return value of _Reverse_Array is never used
  6268                           
  6269                           
  6270                           	psect	text36
  6271  0D72                     __ptext36:	
  6272 ;; *************** function _memcpy *****************
  6273 ;; Defined at:
  6274 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  d1              1    wreg     PTR void 
  6277 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6278 ;;		 -> Reverse_Array@buffer_array(4), 
  6279 ;;  s1              1    0[BANK0 ] PTR const void 
  6280 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6281 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6282 ;;  n               2    1[BANK0 ] unsigned int 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  d1              1    6[BANK0 ] PTR void 
  6285 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6286 ;;		 -> Reverse_Array@buffer_array(4), 
  6287 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6288 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6289 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6290 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6291 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6292 ;;		 -> Reverse_Array@buffer_array(4), 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;                  1    wreg      PTR void 
  6295 ;; Registers used:
  6296 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6302 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6303 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6305 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6306 ;;Total ram usage:        7 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    3
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_Reverse_Array
  6313 ;;		_Adf_Write_Register_Zero
  6314 ;;		_Adf_Write_Register_One
  6315 ;;		_Adf_Write_Register_Two
  6316 ;;		_Adf_Write_Register_Three
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           
  6321                           ;psect for function _memcpy
  6322  0D72                     _memcpy:	
  6323                           
  6324                           ;incstack = 0
  6325                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6326                           ;memcpy@d1 stored from wreg
  6327  0D72  0020               	movlb	0	; select bank0
  6328  0D73  00A6               	movwf	memcpy@d1
  6329  0D74  0820               	movf	memcpy@s1,w
  6330  0D75  00A3               	movwf	??_memcpy
  6331  0D76  0823               	movf	??_memcpy,w
  6332  0D77  00A5               	movwf	memcpy@s
  6333  0D78  0826               	movf	memcpy@d1,w
  6334  0D79  00A3               	movwf	??_memcpy
  6335  0D7A  0823               	movf	??_memcpy,w
  6336  0D7B  00A4               	movwf	memcpy@d
  6337  0D7C                     l1711:	
  6338  0D7C  3001               	movlw	1
  6339  0D7D  02A1               	subwf	memcpy@n,f
  6340  0D7E  3000               	movlw	0
  6341  0D7F  3BA2               	subwfb	memcpy@n+1,f
  6342  0D80  30FF               	movlw	255
  6343  0D81  0622               	xorwf	memcpy@n+1,w
  6344  0D82  1D03               	skipz
  6345  0D83  2D86               	goto	u1115
  6346  0D84  30FF               	movlw	255
  6347  0D85  0621               	xorwf	memcpy@n,w
  6348  0D86                     u1115:	
  6349  0D86  1903               	btfsc	3,2
  6350  0D87  0008               	return
  6351  0D88  0825               	movf	memcpy@s,w
  6352  0D89  0086               	movwf	6
  6353  0D8A  0187               	clrf	7
  6354  0D8B  0801               	movf	1,w
  6355  0D8C  00A3               	movwf	??_memcpy
  6356  0D8D  0824               	movf	memcpy@d,w
  6357  0D8E  0086               	movwf	6
  6358  0D8F  0187               	clrf	7
  6359  0D90  0823               	movf	??_memcpy,w
  6360  0D91  0081               	movwf	1
  6361  0D92  3001               	movlw	1
  6362  0D93  00A3               	movwf	??_memcpy
  6363  0D94  0823               	movf	??_memcpy,w
  6364  0D95  07A5               	addwf	memcpy@s,f
  6365  0D96  3001               	movlw	1
  6366  0D97  00A3               	movwf	??_memcpy
  6367  0D98  0823               	movf	??_memcpy,w
  6368  0D99  07A4               	addwf	memcpy@d,f
  6369  0D9A  2D7C               	goto	l1711
  6370  0D9B                     __end_of_memcpy:	
  6371                           ;	Return value of _memcpy is never used
  6372                           
  6373                           
  6374                           	psect	text37
  6375  0BFA                     __ptext37:	
  6376 ;; *************** function _Adf_Locked *****************
  6377 ;; Defined at:
  6378 ;;		line 270 in file "adf7012.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      unsigned char 
  6385 ;; Registers used:
  6386 ;;		wreg, pclath, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    4
  6399 ;; This function calls:
  6400 ;;		_Read_Adf7012_Muxout
  6401 ;; This function is called by:
  6402 ;;		_Adf_Lock
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           
  6407                           ;psect for function _Adf_Locked
  6408  0BFA                     _Adf_Locked:	
  6409                           
  6410                           ;adf7012.c: 272: return Read_Adf7012_Muxout();
  6411                           
  6412                           ;incstack = 0
  6413                           ; Regs used in _Adf_Locked: [wreg+pclath+cstack]
  6414  0BFA  318C  242A         	fcall	_Read_Adf7012_Muxout
  6415  0BFC  0008               	return
  6416  0BFD                     __end_of_Adf_Locked:	
  6417                           
  6418                           	psect	text38
  6419  0C2A                     __ptext38:	
  6420 ;; *************** function _Read_Adf7012_Muxout *****************
  6421 ;; Defined at:
  6422 ;;		line 64 in file "utility.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;		None
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  1    wreg      unsigned char 
  6429 ;; Registers used:
  6430 ;;		wreg
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6440 ;;Total ram usage:        0 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    3
  6443 ;; This function calls:
  6444 ;;		Nothing
  6445 ;; This function is called by:
  6446 ;;		_Adf_Locked
  6447 ;;		_Ptt_On
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           
  6452                           ;psect for function _Read_Adf7012_Muxout
  6453  0C2A                     _Read_Adf7012_Muxout:	
  6454                           
  6455                           ;utility.c: 66: if(PORTCbits.RC5)
  6456                           
  6457                           ;incstack = 0
  6458                           ; Regs used in _Read_Adf7012_Muxout: [wreg]
  6459  0C2A  0020               	movlb	0	; select bank0
  6460  0C2B  1E8E               	btfss	14,5	;volatile
  6461  0C2C  2C2F               	goto	l1851
  6462                           
  6463                           ;utility.c: 67: return 1;
  6464  0C2D  3001               	movlw	1
  6465  0C2E  0008               	return
  6466  0C2F                     l1851:	
  6467                           
  6468                           ;utility.c: 68: else
  6469                           ;utility.c: 69: return 0;
  6470  0C2F  3000               	movlw	0
  6471  0C30  0008               	return
  6472  0C31                     __end_of_Read_Adf7012_Muxout:	
  6473                           
  6474                           	psect	text39
  6475  0C0C                     __ptext39:	
  6476 ;; *************** function _Adc1_Start *****************
  6477 ;; Defined at:
  6478 ;;		line 286 in file "utility.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;		None
  6481 ;; Auto vars:     Size  Location     Type
  6482 ;;		None
  6483 ;; Return value:  Size  Location     Type
  6484 ;;		None               void
  6485 ;; Registers used:
  6486 ;;		None
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6496 ;;Total ram usage:        0 bytes
  6497 ;; Hardware stack levels used:    1
  6498 ;; Hardware stack levels required when called:    3
  6499 ;; This function calls:
  6500 ;;		Nothing
  6501 ;; This function is called by:
  6502 ;;		_main
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           
  6507                           ;psect for function _Adc1_Start
  6508  0C0C                     _Adc1_Start:	
  6509                           
  6510                           ;utility.c: 287: ADIF = 0;
  6511                           
  6512                           ;incstack = 0
  6513                           ; Regs used in _Adc1_Start: []
  6514  0C0C  0020               	movlb	0	; select bank0
  6515  0C0D  1311               	bcf	17,6	;volatile
  6516                           
  6517                           ;utility.c: 288: ADON = 1;
  6518  0C0E  0021               	movlb	1	; select bank1
  6519  0C0F  141D               	bsf	29,0	;volatile
  6520                           
  6521                           ;utility.c: 289: ADIE = 1;
  6522  0C10  1711               	bsf	17,6	;volatile
  6523  0C11  0008               	return
  6524  0C12                     __end_of_Adc1_Start:	
  6525                           
  6526                           	psect	intentry
  6527  0004                     __pintentry:	
  6528 ;; *************** function _global_interrupt *****************
  6529 ;; Defined at:
  6530 ;;		line 42 in file "main.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;		None               void
  6537 ;; Registers used:
  6538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6548 ;;Total ram usage:        2 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    2
  6551 ;; This function calls:
  6552 ;;		_Sinus_Generator
  6553 ;; This function is called by:
  6554 ;;		Interrupt level 1
  6555 ;; This function uses a non-reentrant model
  6556 ;;
  6557                           
  6558  0004                     _global_interrupt:	
  6559                           
  6560                           ;incstack = 0
  6561                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6562  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6563  0005  3180               	pagesel	$
  6564  0006  0020               	movlb	0	; select bank0
  6565  0007  087F               	movf	127,w
  6566  0008  00F8               	movwf	??_global_interrupt+1
  6567                           
  6568                           ;main.c: 44: INTCON &= ~0x80;
  6569  0009  307F               	movlw	127
  6570  000A  00F7               	movwf	??_global_interrupt
  6571  000B  0877               	movf	??_global_interrupt,w
  6572  000C  058B               	andwf	11,f	;volatile
  6573                           
  6574                           ;main.c: 47: if(ADIF){
  6575  000D  1F11               	btfss	17,6	;volatile
  6576  000E  281B               	goto	i1l129
  6577                           
  6578                           ;main.c: 49: adc__high = ADRESH;
  6579  000F  0021               	movlb	1	; select bank1
  6580  0010  081C               	movf	28,w	;volatile
  6581  0011  00F7               	movwf	??_global_interrupt
  6582  0012  0877               	movf	??_global_interrupt,w
  6583  0013  00CF               	movwf	_adc__high^(0+128)
  6584                           
  6585                           ;main.c: 50: adc__low = ADRESL;
  6586  0014  081B               	movf	27,w	;volatile
  6587  0015  00F7               	movwf	??_global_interrupt
  6588  0016  0877               	movf	??_global_interrupt,w
  6589  0017  00D0               	movwf	_adc__low^(0+128)
  6590                           
  6591                           ;main.c: 52: ADIF = 0;
  6592  0018  0020               	movlb	0	; select bank0
  6593  0019  1311               	bcf	17,6	;volatile
  6594                           
  6595                           ;main.c: 54: return;
  6596  001A  2854               	goto	i1l130
  6597  001B                     i1l129:	
  6598                           
  6599                           ;main.c: 55: }
  6600                           ;main.c: 60: if(PIR1 & 0x04){
  6601  001B  1D11               	btfss	17,2	;volatile
  6602  001C  2849               	goto	i1l131
  6603                           
  6604                           ;main.c: 62: Change_to_New_Baud = 1;
  6605  001D  01EE               	clrf	_Change_to_New_Baud
  6606  001E  0AEE               	incf	_Change_to_New_Baud,f
  6607                           
  6608                           ;main.c: 66: TMR1H = 0x00;
  6609  001F  0197               	clrf	23	;volatile
  6610                           
  6611                           ;main.c: 67: TMR1L = 0x00;
  6612  0020  0196               	clrf	22	;volatile
  6613                           
  6614                           ;main.c: 69: PIR1 &= ~0x04;
  6615  0021  30FB               	movlw	251
  6616  0022  00F7               	movwf	??_global_interrupt
  6617  0023  0877               	movf	??_global_interrupt,w
  6618  0024  0591               	andwf	17,f	;volatile
  6619                           
  6620                           ;main.c: 71: Systick_Counter += 1;
  6621  0025  3001               	movlw	1
  6622  0026  0022               	movlb	2	; select bank2
  6623  0027  07AC               	addwf	_Systick_Counter^(0+256),f
  6624  0028  3000               	movlw	0
  6625  0029  3DAD               	addwfc	(_Systick_Counter+1)^(0+256),f
  6626  002A  3000               	movlw	0
  6627  002B  3DAE               	addwfc	(_Systick_Counter+2)^(0+256),f
  6628  002C  3000               	movlw	0
  6629  002D  3DAF               	addwfc	(_Systick_Counter+3)^(0+256),f
  6630                           
  6631                           ;main.c: 72: if(Systick_Counter > 100000){
  6632  002E  3000               	movlw	0
  6633  002F  022F               	subwf	(_Systick_Counter+3)^(0+256),w
  6634  0030  1D03               	skipz
  6635  0031  283C               	goto	u238_25
  6636  0032  3001               	movlw	1
  6637  0033  022E               	subwf	(_Systick_Counter+2)^(0+256),w
  6638  0034  1D03               	skipz
  6639  0035  283C               	goto	u238_25
  6640  0036  3086               	movlw	134
  6641  0037  022D               	subwf	(_Systick_Counter+1)^(0+256),w
  6642  0038  1D03               	skipz
  6643  0039  283C               	goto	u238_25
  6644  003A  30A1               	movlw	161
  6645  003B  022C               	subwf	_Systick_Counter^(0+256),w
  6646  003C                     u238_25:	
  6647  003C  1C03               	skipc
  6648  003D  2854               	goto	i1l130
  6649                           
  6650                           ;main.c: 73: Systick_Counter = 0;
  6651  003E  3000               	movlw	0
  6652  003F  00AF               	movwf	(_Systick_Counter+3)^(0+256)
  6653  0040  3000               	movlw	0
  6654  0041  00AE               	movwf	(_Systick_Counter+2)^(0+256)
  6655  0042  3000               	movlw	0
  6656  0043  00AD               	movwf	(_Systick_Counter+1)^(0+256)
  6657  0044  3000               	movlw	0
  6658  0045  00AC               	movwf	_Systick_Counter^(0+256)
  6659                           
  6660                           ;main.c: 74: ADCON0 |= 0b00000010;
  6661  0046  0021               	movlb	1	; select bank1
  6662  0047  149D               	bsf	29,1	;volatile
  6663                           
  6664                           ;main.c: 75: }
  6665                           ;main.c: 77: return;
  6666  0048  2854               	goto	i1l130
  6667  0049                     i1l131:	
  6668                           
  6669                           ;main.c: 78: }
  6670                           ;main.c: 82: if(INTCON & 0x04){
  6671  0049  1D0B               	btfss	11,2	;volatile
  6672  004A  2853               	goto	i1l133
  6673                           
  6674                           ;main.c: 84: Sinus_Generator();
  6675  004B  3185  257B  3180   	fcall	_Sinus_Generator
  6676                           
  6677                           ;main.c: 86: INTCON &= ~0x04;
  6678  004E  30FB               	movlw	251
  6679  004F  00F7               	movwf	??_global_interrupt
  6680  0050  0877               	movf	??_global_interrupt,w
  6681  0051  058B               	andwf	11,f	;volatile
  6682                           
  6683                           ;main.c: 88: return;
  6684  0052  2854               	goto	i1l130
  6685  0053                     i1l133:	
  6686                           
  6687                           ;main.c: 89: }
  6688                           ;main.c: 94: INTCON |= 0x80;
  6689  0053  178B               	bsf	11,7	;volatile
  6690  0054                     i1l130:	
  6691  0054  0878               	movf	??_global_interrupt+1,w
  6692  0055  0020               	movlb	0	; select bank0
  6693  0056  00FF               	movwf	127
  6694  0057  107E               	bcf	126,0	;clear compiler interrupt flag
  6695  0058  0009               	retfie
  6696  0059                     __end_of_global_interrupt:	
  6697                           
  6698                           	psect	text41
  6699  057B                     __ptext41:	
  6700 ;; *************** function _Sinus_Generator *****************
  6701 ;; Defined at:
  6702 ;;		line 81 in file "audio_tone.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;		None
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;		None               void
  6709 ;; Registers used:
  6710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6718 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6719 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6720 ;;Total ram usage:        6 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:    1
  6723 ;; This function calls:
  6724 ;;		_Send_Vcxo_Signal
  6725 ;;		_Timer0_Stop
  6726 ;; This function is called by:
  6727 ;;		_global_interrupt
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           
  6732                           ;psect for function _Sinus_Generator
  6733  057B                     _Sinus_Generator:	
  6734                           
  6735                           ;audio_tone.c: 83: uint8_t Audio_Signal;
  6736                           ;audio_tone.c: 84: static uint8_t tone_index = 0;
  6737                           ;audio_tone.c: 85: if (MODEM_TRANSMITTING == 1) {
  6738                           
  6739                           ;incstack = 0
  6740                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6741  057B  0021               	movlb	1	; select bank1
  6742  057C  084C               	movf	_MODEM_TRANSMITTING^(0+128),w
  6743  057D  3A01               	xorlw	1
  6744  057E  1D03               	skipz
  6745  057F  0008               	return
  6746                           
  6747                           ;audio_tone.c: 87: if (packet_pos == modem_packet_size) {
  6748  0580  087C               	movf	_modem_packet_size+3,w
  6749  0581  0022               	movlb	2	; select bank2
  6750  0582  0633               	xorwf	(_packet_pos+3)^(0+256),w
  6751  0583  1D03               	skipz
  6752  0584  2D8F               	goto	u178_25
  6753  0585  087B               	movf	_modem_packet_size+2,w
  6754  0586  0632               	xorwf	(_packet_pos+2)^(0+256),w
  6755  0587  1D03               	skipz
  6756  0588  2D8F               	goto	u178_25
  6757  0589  087A               	movf	_modem_packet_size+1,w
  6758  058A  0631               	xorwf	(_packet_pos+1)^(0+256),w
  6759  058B  1D03               	skipz
  6760  058C  2D8F               	goto	u178_25
  6761  058D  0879               	movf	_modem_packet_size,w
  6762  058E  0630               	xorwf	_packet_pos^(0+256),w
  6763  058F                     u178_25:	
  6764  058F  1D03               	skipz
  6765  0590  2D9D               	goto	i1l2005
  6766                           
  6767                           ;audio_tone.c: 88: MODEM_TRANSMITTING = 0;
  6768  0591  0021               	movlb	1	; select bank1
  6769  0592  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  6770                           
  6771                           ;audio_tone.c: 89: Timer0_Stop();
  6772  0593  3187  27FC  3185   	fcall	_Timer0_Stop
  6773                           
  6774                           ;audio_tone.c: 91: Send_Vcxo_Signal(0x10);
  6775  0596  3010               	movlw	16
  6776  0597  318B  23FD         	fcall	_Send_Vcxo_Signal
  6777                           
  6778                           ;audio_tone.c: 93: PTT_OFF = 1;
  6779  0599  0021               	movlb	1	; select bank1
  6780  059A  01CD               	clrf	_PTT_OFF^(0+128)
  6781  059B  0ACD               	incf	_PTT_OFF^(0+128),f
  6782                           
  6783                           ;audio_tone.c: 95: goto end_generator;
  6784  059C  0008               	return
  6785  059D                     i1l2005:	
  6786                           
  6787                           ;audio_tone.c: 96: }
  6788                           ;audio_tone.c: 99: if (current_sample_in_baud == 0) {
  6789  059D  0021               	movlb	1	; select bank1
  6790  059E  08D1               	movf	_current_sample_in_baud^(0+128),f
  6791  059F  1D03               	skipz
  6792  05A0  2DE8               	goto	i1l2025
  6793                           
  6794                           ;audio_tone.c: 100: if ((packet_pos & 7) == 0)
  6795  05A1  3007               	movlw	7
  6796  05A2  0022               	movlb	2	; select bank2
  6797  05A3  0530               	andwf	_packet_pos^(0+256),w
  6798  05A4  00F1               	movwf	??_Sinus_Generator
  6799  05A5  3000               	movlw	0
  6800  05A6  0531               	andwf	(_packet_pos+1)^(0+256),w
  6801  05A7  00F2               	movwf	??_Sinus_Generator+1
  6802  05A8  3000               	movlw	0
  6803  05A9  0532               	andwf	(_packet_pos+2)^(0+256),w
  6804  05AA  00F3               	movwf	??_Sinus_Generator+2
  6805  05AB  3000               	movlw	0
  6806  05AC  0533               	andwf	(_packet_pos+3)^(0+256),w
  6807  05AD  00F4               	movwf	??_Sinus_Generator+3
  6808  05AE  0874               	movf	??_Sinus_Generator+3,w
  6809  05AF  0473               	iorwf	??_Sinus_Generator+2,w
  6810  05B0  0472               	iorwf	??_Sinus_Generator+1,w
  6811  05B1  0471               	iorwf	??_Sinus_Generator,w
  6812  05B2  1D03               	skipz
  6813  05B3  2DCD               	goto	i1l2011
  6814                           
  6815                           ;audio_tone.c: 101: current_byte = modem_packet[packet_pos >> 3];
  6816  05B4  0830               	movf	_packet_pos^(0+256),w
  6817  05B5  00F1               	movwf	??_Sinus_Generator
  6818  05B6  0831               	movf	(_packet_pos+1)^(0+256),w
  6819  05B7  00F2               	movwf	??_Sinus_Generator+1
  6820  05B8  0832               	movf	(_packet_pos+2)^(0+256),w
  6821  05B9  00F3               	movwf	??_Sinus_Generator+2
  6822  05BA  0833               	movf	(_packet_pos+3)^(0+256),w
  6823  05BB  00F4               	movwf	??_Sinus_Generator+3
  6824  05BC  3003               	movlw	3
  6825  05BD                     u181_25:	
  6826  05BD  36F4               	lsrf	??_Sinus_Generator+3,f
  6827  05BE  0CF3               	rrf	??_Sinus_Generator+2,f
  6828  05BF  0CF2               	rrf	??_Sinus_Generator+1,f
  6829  05C0  0CF1               	rrf	??_Sinus_Generator,f
  6830  05C1  0B89               	decfsz	9,f
  6831  05C2  2DBD               	goto	u181_25
  6832  05C3  0871               	movf	??_Sinus_Generator,w
  6833  05C4  3EA0               	addlw	_modem_packet& (0+255)
  6834  05C5  0086               	movwf	6
  6835  05C6  3001               	movlw	1	; select bank3/4
  6836  05C7  0087               	movwf	7
  6837  05C8  0801               	movf	1,w
  6838  05C9  00F5               	movwf	??_Sinus_Generator+4
  6839  05CA  0875               	movf	??_Sinus_Generator+4,w
  6840  05CB  0020               	movlb	0	; select bank0
  6841  05CC  2DD1               	goto	L6
  6842  05CD                     i1l2011:	
  6843                           
  6844                           ;audio_tone.c: 102: else
  6845                           ;audio_tone.c: 103: current_byte = current_byte >> 1 ;
  6846  05CD  0020               	movlb	0	; select bank0
  6847  05CE  366F               	lsrf	_current_byte,w
  6848  05CF  00F1               	movwf	??_Sinus_Generator
  6849  05D0  0871               	movf	??_Sinus_Generator,w
  6850  05D1                     L6:	
  6851  05D1  00EF               	movwf	_current_byte
  6852                           
  6853                           ;audio_tone.c: 104: if ((current_byte & 0x01) == 0) {
  6854  05D2  186F               	btfsc	_current_byte,0
  6855  05D3  2DE8               	goto	i1l2025
  6856                           
  6857                           ;audio_tone.c: 106: if(tone_index){
  6858  05D4  0021               	movlb	1	; select bank1
  6859  05D5  084B               	movf	Sinus_Generator@tone_index^(0+128),w
  6860  05D6  1903               	btfsc	3,2
  6861  05D7  2DE0               	goto	i1l2021
  6862                           
  6863                           ;audio_tone.c: 107: phase_delta = PHASE_DELTA_1200;
  6864  05D8  0022               	movlb	2	; select bank2
  6865  05D9  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  6866  05DA  00F1               	movwf	??_Sinus_Generator
  6867  05DB  0871               	movf	??_Sinus_Generator,w
  6868  05DC  0021               	movlb	1	; select bank1
  6869  05DD  00D2               	movwf	_phase_delta^(0+128)
  6870                           
  6871                           ;audio_tone.c: 108: tone_index = 0;
  6872  05DE  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6873                           
  6874                           ;audio_tone.c: 109: }
  6875  05DF  2DE8               	goto	i1l2025
  6876  05E0                     i1l2021:	
  6877                           
  6878                           ;audio_tone.c: 110: else{
  6879                           ;audio_tone.c: 111: phase_delta = PHASE_DELTA_2200;
  6880  05E0  0022               	movlb	2	; select bank2
  6881  05E1  0828               	movf	_PHASE_DELTA_2200^(0+256),w
  6882  05E2  00F1               	movwf	??_Sinus_Generator
  6883  05E3  0871               	movf	??_Sinus_Generator,w
  6884  05E4  0021               	movlb	1	; select bank1
  6885  05E5  00D2               	movwf	_phase_delta^(0+128)
  6886                           
  6887                           ;audio_tone.c: 112: tone_index = 1;
  6888  05E6  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6889  05E7  0ACB               	incf	Sinus_Generator@tone_index^(0+128),f
  6890  05E8                     i1l2025:	
  6891                           
  6892                           ;audio_tone.c: 113: }
  6893                           ;audio_tone.c: 114: }
  6894                           ;audio_tone.c: 115: }
  6895                           ;audio_tone.c: 117: phase += phase_delta;
  6896  05E8  0021               	movlb	1	; select bank1
  6897  05E9  0852               	movf	_phase_delta^(0+128),w
  6898  05EA  00F1               	movwf	??_Sinus_Generator
  6899  05EB  0871               	movf	??_Sinus_Generator,w
  6900  05EC  07FD               	addwf	_phase,f
  6901                           
  6902                           ;audio_tone.c: 118: if(phase >= TABLE_SIZE)
  6903  05ED  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6904  05EE  0084               	movwf	4
  6905  05EF  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6906  05F0  0085               	movwf	5
  6907  05F1  3F00               	moviw [0]fsr0
  6908  05F2  00F1               	movwf	??_Sinus_Generator
  6909  05F3  3F01               	moviw [1]fsr0
  6910  05F4  00F2               	movwf	??_Sinus_Generator+1
  6911  05F5  0872               	movf	??_Sinus_Generator+1,w
  6912  05F6  3A80               	xorlw	128
  6913  05F7  3C80               	sublw	128
  6914  05F8  1D03               	skipz
  6915  05F9  2DFC               	goto	u184_25
  6916  05FA  0871               	movf	??_Sinus_Generator,w
  6917  05FB  027D               	subwf	_phase,w
  6918  05FC                     u184_25:	
  6919  05FC  1C03               	skipc
  6920  05FD  2E09               	goto	i1l2031
  6921                           
  6922                           ;audio_tone.c: 119: phase = phase - TABLE_SIZE;
  6923  05FE  30BC               	movlw	low (_TABLE_SIZE| (0+32768))
  6924  05FF  0084               	movwf	4
  6925  0600  3084               	movlw	high (_TABLE_SIZE| (0+32768))
  6926  0601  0085               	movwf	5
  6927  0602  0800               	movf	0,w	;code access
  6928  0603  3AFF               	xorlw	255
  6929  0604  3E01               	addlw	1
  6930  0605  077D               	addwf	_phase,w
  6931  0606  00F1               	movwf	??_Sinus_Generator
  6932  0607  0871               	movf	??_Sinus_Generator,w
  6933  0608  00FD               	movwf	_phase
  6934  0609                     i1l2031:	
  6935                           
  6936                           ;audio_tone.c: 122: Audio_Signal = *(sine_table2 + phase);
  6937  0609  087D               	movf	_phase,w
  6938  060A  3E00               	addlw	low (_sine_table2| (0+32768))
  6939  060B  0084               	movwf	4
  6940  060C  3084               	movlw	high (_sine_table2| (0+32768))
  6941  060D  1803               	skipnc
  6942  060E  3E01               	addlw	1
  6943  060F  0085               	movwf	5
  6944  0610  0800               	movf	0,w	;code access
  6945  0611  00F1               	movwf	??_Sinus_Generator
  6946  0612  0871               	movf	??_Sinus_Generator,w
  6947  0613  00F6               	movwf	Sinus_Generator@Audio_Signal
  6948                           
  6949                           ;audio_tone.c: 123: Send_Vcxo_Signal(Audio_Signal);
  6950  0614  0876               	movf	Sinus_Generator@Audio_Signal,w
  6951  0615  318B  23FD  3185   	fcall	_Send_Vcxo_Signal
  6952                           
  6953                           ;audio_tone.c: 125: current_sample_in_baud++;
  6954  0618  3001               	movlw	1
  6955  0619  00F1               	movwf	??_Sinus_Generator
  6956  061A  0871               	movf	??_Sinus_Generator,w
  6957  061B  0021               	movlb	1	; select bank1
  6958  061C  07D1               	addwf	_current_sample_in_baud^(0+128),f
  6959                           
  6960                           ;audio_tone.c: 127: if(Change_to_New_Baud == 1) {
  6961  061D  0020               	movlb	0	; select bank0
  6962  061E  086E               	movf	_Change_to_New_Baud,w
  6963  061F  3A01               	xorlw	1
  6964  0620  1D03               	skipz
  6965  0621  0008               	return
  6966                           
  6967                           ;audio_tone.c: 128: current_sample_in_baud = 0;
  6968  0622  0021               	movlb	1	; select bank1
  6969  0623  01D1               	clrf	_current_sample_in_baud^(0+128)
  6970                           
  6971                           ;audio_tone.c: 129: packet_pos++;
  6972  0624  3001               	movlw	1
  6973  0625  0022               	movlb	2	; select bank2
  6974  0626  07B0               	addwf	_packet_pos^(0+256),f
  6975  0627  3000               	movlw	0
  6976  0628  3DB1               	addwfc	(_packet_pos+1)^(0+256),f
  6977  0629  3000               	movlw	0
  6978  062A  3DB2               	addwfc	(_packet_pos+2)^(0+256),f
  6979  062B  3000               	movlw	0
  6980  062C  3DB3               	addwfc	(_packet_pos+3)^(0+256),f
  6981                           
  6982                           ;audio_tone.c: 130: Change_to_New_Baud = 0;
  6983  062D  0020               	movlb	0	; select bank0
  6984  062E  01EE               	clrf	_Change_to_New_Baud
  6985                           
  6986                           ;audio_tone.c: 131: }
  6987                           ;audio_tone.c: 133: }
  6988                           ;audio_tone.c: 135: end_generator:
  6989  062F  0008               	return
  6990  0630                     __end_of_Sinus_Generator:	
  6991                           ;audio_tone.c: 137: return;
  6992                           
  6993                           
  6994                           	psect	text42
  6995  07FC                     __ptext42:	
  6996 ;; *************** function _Timer0_Stop *****************
  6997 ;; Defined at:
  6998 ;;		line 249 in file "utility.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;		None
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;		None
  7003 ;; Return value:  Size  Location     Type
  7004 ;;		None               void
  7005 ;; Registers used:
  7006 ;;		status,2
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;Total ram usage:        0 bytes
  7017 ;; Hardware stack levels used:    1
  7018 ;; This function calls:
  7019 ;;		Nothing
  7020 ;; This function is called by:
  7021 ;;		_Sinus_Generator
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           
  7026                           ;psect for function _Timer0_Stop
  7027  07FC                     _Timer0_Stop:	
  7028                           
  7029                           ;utility.c: 250: TMR0IE = 0;
  7030                           
  7031                           ;incstack = 0
  7032                           ; Regs used in _Timer0_Stop: [status,2]
  7033  07FC  128B               	bcf	11,5	;volatile
  7034                           
  7035                           ;utility.c: 251: TMR0 = 0x00;
  7036  07FD  0020               	movlb	0	; select bank0
  7037  07FE  0195               	clrf	21	;volatile
  7038  07FF  0008               	return
  7039  0800                     __end_of_Timer0_Stop:	
  7040                           
  7041                           	psect	text43
  7042  0BFD                     __ptext43:	
  7043 ;; *************** function _Send_Vcxo_Signal *****************
  7044 ;; Defined at:
  7045 ;;		line 108 in file "utility.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  value           1    wreg     unsigned char 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  value           1    0[COMMON] unsigned char 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      unsigned char 
  7052 ;; Registers used:
  7053 ;;		wreg
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7060 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7062 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7063 ;;Total ram usage:        1 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; This function calls:
  7066 ;;		Nothing
  7067 ;; This function is called by:
  7068 ;;		_Sinus_Generator
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           
  7073                           ;psect for function _Send_Vcxo_Signal
  7074  0BFD                     _Send_Vcxo_Signal:	
  7075                           
  7076                           ;incstack = 0
  7077                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  7078                           ;Send_Vcxo_Signal@value stored from wreg
  7079  0BFD  00F0               	movwf	Send_Vcxo_Signal@value
  7080                           
  7081                           ;utility.c: 110: DACCON1 = value;
  7082  0BFE  0870               	movf	Send_Vcxo_Signal@value,w
  7083  0BFF  0022               	movlb	2	; select bank2
  7084  0C00  0099               	movwf	25	;volatile
  7085  0C01  0008               	return
  7086  0C02                     __end_of_Send_Vcxo_Signal:	
  7087                           ;utility.c: 111: return 1;
  7088                           ;	Return value of _Send_Vcxo_Signal is never used
  7089                           
  7090  007E                     btemp	set	126	;btemp
  7091  007E                     pic14e$flags	set	126
  7092  007E                     wtemp	set	126
  7093  007E                     wtemp0	set	126
  7094  0080                     wtemp1	set	128
  7095  0082                     wtemp2	set	130
  7096  0084                     wtemp3	set	132
  7097  0086                     wtemp4	set	134
  7098  0088                     wtemp5	set	136
  7099  007F                     wtemp6	set	127
  7100  007E                     ttemp	set	126
  7101  007E                     ttemp0	set	126
  7102  0081                     ttemp1	set	129
  7103  0084                     ttemp2	set	132
  7104  0087                     ttemp3	set	135
  7105  007F                     ttemp4	set	127
  7106  007E                     ltemp	set	126
  7107  007E                     ltemp0	set	126
  7108  0082                     ltemp1	set	130
  7109  0086                     ltemp2	set	134
  7110  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         142
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     78      80
    BANK1            80     28      79
    BANK2            80      0      36
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Adf_Lock
    _main->_Modem_Flush_Frame
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  119163
                                             77 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                           _Adf_Lock
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                             _Ptt_On
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   22735
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   24054
                    _Configure_Audio
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   24054
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1319
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1319
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Configure_Audio                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   24054
                                             76 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ptt_On                                               1     1      0   22735
                                             75 BANK0      1     1      0
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (1) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adf_Lock                                             6     6      0   22826
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   21416
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    5354
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    5354
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    5354
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    5354
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    3141
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1411
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Delay_ms                                             6     4      2    1319
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (3) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1332
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _Adf_Locked                                           0     0      0       0
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Read_Adf7012_Muxout                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _global_interrupt                                     2     2      0      45
                                              7 COMMON     2     2      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (10) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (11) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Adf_Lock
     _Adf_Locked
       _Read_Adf7012_Muxout
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
     _Timer0_Start
   _Modem_Setup
     _Configure_Audio
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ptt_On
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
     _Read_Adf7012_Muxout
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _Sinus_Generator
     _Send_Vcxo_Signal
     _Timer0_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      24       9       45.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     111      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     111      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Sep 29 20:45:37 2014

                      __CFG_CP$OFF 0000            _Adf_Reset_Register_Zero 0D10  
                   Reverse_Array@i 0032                     Spi_Byte_Send@i 0029  
         __end_of_Adf_Reset_Config 0C68                        __CFG_LVP$ON 0000  
         _Adf_Reset_Register_Three 03D8                                l203 0D38  
                              l233 0DAB                                l139 06E7  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00C7                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 0033  
                     __CFG_IESO$ON 0000                      ??_Gpio_Config 0020  
           _Adf_Write_Register_One 0EA1             _Adf_Write_Register_Two 04C4  
                             l2151 0227                               l2145 0214  
                             l2171 0265                               l2163 0248  
                             l2237 0F44                               l2181 02AB  
                             l2157 0235                               l1711 0D7C  
                             l2431 0754                               l2177 028A  
                             l2185 024B                               l2187 02C5  
                             l2195 0CF6                               l1725 0E42  
                             l2437 075D                               l1727 0E56  
                             l2439 0760                               l1745 03B8  
                             l1841 0DE6                               l1851 0C2F  
                             l1689 0DAC                               l1881 06A0  
                             l1961 0FD1                               l1891 06DE  
                             l1963 0FF3                               l1985 07BB  
                             l1987 07DD                               _ADIE 048E  
                             _ADIF 008E                               _ADFM 04F7  
                             _ADON 04E8                               STR_1 04BE  
                     __CFG_WDTE$ON 0000                               u1115 0D86  
                             u1205 033C                               u1215 0EAA  
                             u1225 0EB8                               u1305 0092  
                             u1145 02D6                               u1075 0D3E  
                             u1235 0ED2                               u1315 00A1  
                             u1155 02E5                               u1405 0128  
                             u1325 00B0                               u1245 04CD  
                             u1165 02F4                               u1415 0137  
                             u1335 00BF                               u1255 04DC  
                             u1175 0303                               u1425 0146  
                             u1345 00CE                               u1265 04F6  
                             u1185 0312                               u1505 0663  
                             u1514 066C                               u2410 0724  
                             u1435 0155                               u1355 00DD  
                             u1275 0505                               u1195 0321  
                             u1515 066B                               u1365 00EC  
                             u1285 0514                               u1525 0679  
                             u1605 0FA3                               u1614 0FAB  
                             u1375 00FB                               u1295 0523  
                             u1535 069E                               u1615 0FAA  
                             u1704 0795                               u1385 010A  
                             u1705 0794                               u1545 06AE  
                             u1554 06B8                               u1474 0644  
                             u1634 0FB6                               u1395 0119  
                             u1555 06B7                               u1475 0643  
                             u1635 0FB5                               u1724 07A0  
                             u1484 0651                               u1725 079F  
                             u1565 06C6                               u1485 0650  
                             u1645 0FC3                               u1654 0FD8  
                             u1735 07AD                               u1655 0FD7  
                             u1744 07C2                               u1745 07C1  
                             u1665 0FE6                               u1905 0263  
                             u1755 07D0                               u1915 0269  
                             u1925 0288                               u1695 078D  
                             u1935 0297                               u1945 029C  
                             u1865 0212                               u1955 02AF  
                             u1875 0225                               u1965 0255  
                             u1885 0233                               u1895 0246  
                             u1985 0CE8                               u2977 0D44  
                             _PIR1 0011                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 06E4                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    Send_Byte@byte 0029                      __CFG_BOREN$ON 0000  
                             ltemp 007E                               start 0059  
                             ttemp 007E                    _Sinus_Generator 057B  
                             wtemp 007E                      __CFG_MCLRE$ON 0000  
          _Adf_Write_Register_Zero 02CD                        ?_Adc1_Start 0070  
                     Adf_Lock@bias 00DD                 main@beacon_address 00DF  
                    __CFG_PLLEN$ON 0000                    __end_of_Ptt_Off 0C59  
                    ??_Radio_Setup 006B                              _ADCS0 04F4  
                            _ADCS1 04F5                              _ADCS2 04F6  
                            ?_main 0070                              _DACEN 08C7  
                            _DACOE 08C5                              _ANSA1 0C61  
                            i1l130 0054                              i1l131 0049  
                            i1l133 0053                              i1l129 001B  
                            _TMR1H 0017                              _TMR1L 0016  
                            _TRISA 008C                              _TRISC 008E  
       Write_Adf7012_Reg@reg_value 002C                              _phase 007D  
                 __end_of_Adf_Lock 0F87                      ??_Modem_Setup 006B  
                __end_of_BAUD_RATE 04BC                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                 __size_of_Adf_Reset 0012  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                   _Adf_Write_Config 0C31  
                            wtemp6 007F                __end_of_Gpio_Config 0C87  
                 __end_of_Delay_ms 0D4F                        ?_Adf_Locked 0070  
                  _Configure_Audio 0CA8             _current_sample_in_baud 00D1  
                Spi_Byte_Send@data 0027                         Send_Byte@i 002A  
                  __initialization 005B          ??_Adf_Reset_Register_Zero 0020  
        __size_of_Ax25_Send_Header 00D8              __size_of_System_Start 003B  
                     __end_of_main 076E          __size_of_Ax25_Send_Footer 001B  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 03D8  
         _Adf_Write_Register_Three 0089              __end_of_Spi_Byte_Send 0DC5  
                           ??_main 006D          __size_of_Send_Vcxo_Signal 0005  
              __end_of_Radio_Setup 0C4B       __size_of_Read_Adf7012_Muxout 0007  
                           _ADCON0 009D                             _CCP1M1 1499  
                           _CCP1M2 149A                             _CCP1M3 149B  
                           _CCP1IE 048A                             _CCP1IF 008A  
                           _DACNSS 08C0                             _ADNREF 04F2  
                           _ADRESH 009C                             _ADRESL 009B  
                           _CCPR1H 0292                             _CCPR1L 0291  
          __end_of_Sinus_Generator 0630      Adf_Write_Register_One@reg_ptr 0043  
                           i1l2011 05CD                             i1l2021 05E0  
                           i1l2005 059D                             i1l2031 0609  
                           i1l2025 05E8                             _INTCON 000B  
                           u181_25 05BD                             u238_25 003C  
              __size_of_Adc1_Start 0006                             u184_25 05FC  
                           u178_25 058F                 Reverse_Array@F3148 0120  
                           _OSCCON 0099           __size_of_Dac0_Start_Hold 0005  
                           _TMR1GE 00CF                             _TMR0IE 005D  
                           _TMR0IF 005A                             _TMR0CS 04AD  
                           _TMR1IE 0488                             _TMR1IF 0088  
                           _TMR1ON 00C0                       _System_Start 0E66  
                           _WDTPS0 04B9                             _WDTPS1 04BA  
                           _WDTPS2 04BB                             _WDTPS3 04BC  
                           _WDTPS4 04BD                __end_of_Modem_Setup 0C1E  
                   __CFG_PWRTE$OFF 0000                      ??_Timer0_Stop 0070  
        ??_Adf_Write_Register_Zero 0033                             _Ptt_On 0DF7  
                        ??_Ptt_Off 006B                 __size_of_Send_Byte 00B4  
               Reverse_Array@input 0031                     __CFG_STVREN$ON 0000  
                 ??_Ax25_Send_Flag 0020                   ??_Ax25_Send_Byte 002C  
                           _memcpy 0D72                   ??_Ax25_Send_Sync 0020  
                __end_of_Adf_Reset 07FC                         _Update_Crc 0DC5  
              __size_of_Adf_Locked 0003                        _Gpio_Config 0C77  
          __end_of_Configure_Audio 0CC0            __end_of__initialization 0085  
        __size_of_global_interrupt 0055                 Write_Adf7012_Reg@i 002D  
       ??_Adf_Reset_Register_Three 0020                     __pcstackCOMMON 0070  
         ??_Adf_Reset_Register_One 0020                       __pidataBANK2 0C87  
         ??_Adf_Reset_Register_Two 0020                         _adf_config 00A0  
              __end_of_Timer0_Stop 0800                      _PLAYBACK_RATE 04B6  
                        ?_Adf_Lock 0070                  ?_Adf_Reset_Config 0070  
                      _Radio_Setup 0C3D            ?_Adf_Write_Register_One 0070  
          ?_Adf_Write_Register_Two 0070          Spi_Byte_Send@data_to_send 0028  
               ??_Adf_Reset_Config 0026                          ?_Delay_ms 0020  
                __end_of_Send_Byte 06E4                   _PHASE_DELTA_1200 0124  
                 _PHASE_DELTA_2200 0128                        _Modem_Setup 0C18  
                       __pbssBANK0 006E                         __pbssBANK1 00A0  
                       __pbssBANK2 0120                         __pbssBANK3 01A0  
                 ?_Sinus_Generator 0070                 Ax25_Send_Flag@byte 0026  
                    ?_Timer0_Start 0070        Adf_Write_Register_Three@reg 00D7  
                    ?_Timer1_Start 0070                         __pmaintext 06E4  
                 _Ax25_Send_Header 01F5                            ?_Ptt_On 0070  
                ??_Dac0_Start_Hold 0020                 __end_of_TABLE_SIZE 04BE  
                 _Ax25_Send_Footer 0CD8                         __pintentry 0004  
                     ??_Adc1_Start 0020                            _DACCON1 0119  
               Ax25_Send_Byte@byte 002C                            _DACPSS0 08C2  
                          _DACPSS1 08C3                            ?_memcpy 0020  
                 _Ax25_Send_String 0CF3                            _ADPREF0 04F0  
                          _ADPREF1 04F1                         ??_Adf_Lock 006B  
   __end_of_Adf_Write_Register_One 0F12     __end_of_Adf_Write_Register_Two 057B  
                          _T1CKPS0 00C4                            _T1CKPS1 00C5  
                 _Send_Vcxo_Signal 0BFD           __end_of_Adf_Write_Config 0C3D  
                      ?_Update_Crc 0070                         ??_Delay_ms 0022  
                          _OSCSTAT 009A                            _OSCTUNE 0098  
                          _TMR1CS0 00C6                            _TMR1CS1 00C7  
                          _PTT_OFF 00CD                Update_Crc@input_bit 0022  
                 ?_Configure_Audio 0070      Adf_Write_Register_Two@reg_ptr 004B  
   Adf_Write_Register_Zero@reg_ptr 004F                 __end_of_Adc1_Start 0C12  
                   ??_Timer0_Start 0020                     ??_Timer1_Start 0020  
                        _BAUD_RATE 04BA                       ??_Adf_Locked 0020  
       ??_Adf_Write_Register_Three 0033                        _Timer0_Stop 07FC  
                       _packet_pos 0130                            _Ptt_Off 0C4B  
                  __size_of_Ptt_On 0036                _Read_Adf7012_Muxout 0C2A  
  __size_of_Adf_Reset_Register_One 0011    __size_of_Adf_Reset_Register_Two 0018  
               Ax25_Send_Sync@byte 0026                Reverse_Array@length 0027  
                  Ax25_Send_Flag@i 0027                    __size_of_memcpy 0029  
                          __ptext1 0C68                            __ptext2 0E66  
                          __ptext3 0C4B                            __ptext4 0C18  
                          __ptext5 0C3D                            __ptext6 0C59  
                          __ptext7 0D10                            __ptext8 0CC0  
                          __ptext9 03D8              Delay_ms@time_to_delay 0020  
        Adf_Write_Register_One@reg 003F                    Ax25_Send_Sync@i 0027  
               __end_of_Adf_Locked 0BFD               ?_Read_Adf7012_Muxout 0070  
        Adf_Write_Register_Two@reg 004F                            clrloop0 0C25  
  Adf_Write_Register_Three@reg_ptr 00D3               end_of_initialization 0085  
                          memcpy@d 0024                            memcpy@n 0021  
                          memcpy@s 0025                          Delay_ms@i 0024  
                          init_ram 0C1E                            initloop 0C1F  
                 _global_interrupt 0004                __size_of_Update_Crc 0032  
                     __pstringtext 0400                          _PORTAbits 000C  
                        _PORTCbits 000E                   __CFG_FOSC$INTOSC 0000  
                  _Systick_Counter 012C                          _Adf_Reset 07EA  
            ??_Read_Adf7012_Muxout 0020                   _SAMPLES_PER_BAUD 00CE  
                     ?_Gpio_Config 0070             _Adf_Reset_Register_One 0C97  
     Write_Adf7012_Reg@size_of_reg 002A             _Adf_Reset_Register_Two 0CC0  
        Sinus_Generator@tone_index 00CB             __size_of_Reverse_Array 0044  
           __size_of_Spi_Byte_Send 002A           ?_Adf_Reset_Register_Zero 0070  
                      Adf_Lock@adj 00DB                     __end_of_Ptt_On 0E2D  
               _Change_to_New_Baud 006E                     __end_of_memcpy 0D9B  
                     ?_Radio_Setup 0070                  __size_of_Adf_Lock 0075  
             __end_of_Timer0_Start 0C0C               __end_of_Timer1_Start 0C77  
              start_initialization 005B                         ?_Adf_Reset 0070  
         __end_of_Ax25_Send_Header 02CD           __end_of_Ax25_Send_Footer 0CF3  
                __size_of_Delay_ms 0020                       ?_Modem_Setup 0070  
                  _Dac0_Start_Hold 0C02           __end_of_Ax25_Send_String 0D10  
        __size_of_Adf_Reset_Config 000F           ?_Adf_Write_Register_Zero 0070  
                        _Send_Byte 0630           __end_of_Send_Vcxo_Signal 0C02  
                         ??_Ptt_On 006B                        __pdataBANK2 0134  
                         ??_memcpy 0023                      _Reverse_Array 0394  
                    _Spi_Byte_Send 0D9B                  ?_Adf_Write_Config 0070  
                     ??_Update_Crc 0020                        __pbssCOMMON 0079  
                        ___latbits 0002  __size_of_Adf_Reset_Register_Three 0026  
                    _ones_in_a_row 00C9                      __pcstackBANK0 0020  
                    __pcstackBANK1 00D3                 ??_Adf_Write_Config 006B  
        ?_Adf_Reset_Register_Three 0070                          _adc__high 00CF  
              __end_of__stringdata 04C4            __size_of_Ax25_Send_Flag 007C  
          __size_of_Ax25_Send_Byte 0006            __size_of_Ax25_Send_Sync 0079  
  __end_of_Adf_Reset_Register_Zero 0D2F      Ax25_Send_Header@num_addresses 002C  
                       ?_Send_Byte 0070                  _Write_Adf7012_Reg 0E2D  
                     _current_byte 006F                  Ax25_Send_Header@i 0034  
                Ax25_Send_Header@j 0031                 ?_Write_Adf7012_Reg 002A  
                     ?_Timer0_Stop 0070           __size_of_Sinus_Generator 00B5  
        Ax25_Send_Footer@final_crc 002C             Ax25_Send_String@string 002D  
                         ?_Ptt_Off 0070                 __end_of_Update_Crc 0DF7  
              ??_Write_Adf7012_Reg 002B                     ?_Reverse_Array 0027  
                   ?_Spi_Byte_Send 0070           __end_of_global_interrupt 0059  
          __end_of_Dac0_Start_Hold 0C07                        ??_Adf_Reset 0026  
  __end_of_Adf_Write_Register_Zero 0394                  Ax25_Send_String@i 002F  
        __end_of_Write_Adf7012_Reg 0E66               __size_of_Gpio_Config 0010  
                    ?_System_Start 0070                       _modem_packet 01A0  
                        clear_ram0 0C24           __size_of_Configure_Audio 0018  
                        main@F3169 0134              __size_of_Timer0_Start 0005  
                         _Adf_Lock 0F12              __size_of_Timer1_Start 000F  
        Reverse_Array@buffer_array 002D                        __stringdata 04BE  
__size_of_Adf_Write_Register_Three 016C            ?_Adf_Reset_Register_One 0070  
        ?_Adf_Write_Register_Three 0070            ?_Adf_Reset_Register_Two 0070  
             __size_of_Radio_Setup 000E                           _Delay_ms 0D2F  
            Send_Vcxo_Signal@value 0070                     ??_System_Start 0020  
                 _Adf_Reset_Config 0C59                        ??_Send_Byte 0023  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 0D4F  
               ?_Modem_Flush_Frame 0070                       _Timer0_Start 0C07  
                     _Timer1_Start 0C68           ??_Adf_Write_Register_One 0033  
         ??_Adf_Write_Register_Two 0033                   __size_of_Ptt_Off 000E  
                  ??_Reverse_Array 0028                    ??_Spi_Byte_Send 0026  
            __end_of_PLAYBACK_RATE 04BA                ??_Modem_Flush_Frame 006C  
                ??_Sinus_Generator 0071   __size_of_Adf_Reset_Register_Zero 001F  
                         _adc__low 00D0        __end_of_Read_Adf7012_Muxout 0C31  
   __end_of_Adf_Reset_Register_One 0CA8     __end_of_Adf_Reset_Register_Two 0CD8  
              __end_of_sine_table2 04B6                   ?_Dac0_Start_Hold 0070  
                   _Ax25_Send_Flag 076E                     _Ax25_Send_Byte 0C12  
                   _Ax25_Send_Sync 0F87                           __ptext10 0C97  
                         __ptext11 07EA                           __ptext20 0F87  
                         __ptext12 0CA8                           __ptext21 0CD8  
                         __ptext13 0D4F                           __ptext30 0EA1  
                         __ptext22 0630                           __ptext14 0C07  
                         __ptext31 0E2D                           __ptext23 0DC5  
                         __ptext15 0DF7                           __ptext32 0D9B  
                         __ptext24 076E                           __ptext16 0C77  
                         __ptext41 057B                           __ptext33 0D2F  
                         __ptext25 0F12                           __ptext17 0CF3  
                         __ptext42 07FC                           __ptext34 0C02  
                         __ptext26 0C31                           __ptext18 0C12  
                         __ptext43 0BFD                           __ptext35 0394  
                         __ptext27 02CD                           __ptext19 01F5  
                         __ptext36 0D72                           __ptext28 04C4  
                         __ptext37 0BFA                           __ptext29 0089  
                         __ptext38 0C2A                           __ptext39 0C0C  
                ?_Ax25_Send_Header 002C                  ?_Ax25_Send_Footer 0070  
               ??_Ax25_Send_Header 002E          __end_of_Modem_Flush_Frame 0D72  
       __size_of_Write_Adf7012_Reg 0039                  ?_Ax25_Send_String 002D  
               ??_Ax25_Send_Footer 002C                      __size_of_main 008A  
                      _phase_delta 00D2                  ?_Send_Vcxo_Signal 0070  
               ??_Ax25_Send_String 002F                 ??_Send_Vcxo_Signal 0070  
 __end_of_Adf_Reset_Register_Three 03FE               __size_of_Timer0_Stop 0004  
       Adf_Write_Register_Zero@reg 0053   __size_of_Adf_Write_Register_Zero 00C7  
                ??_Configure_Audio 0020             __end_of_Ax25_Send_Flag 07EA  
           __end_of_Ax25_Send_Byte 0C18             __end_of_Ax25_Send_Sync 1000  
                       _TABLE_SIZE 04BC                           memcpy@d1 0026  
                         memcpy@s1 0020                        pic14e$flags 007E  
                         intlevel1 0000          __size_of_Adf_Write_Config 000C  
                __CFG_CLKOUTEN$OFF 0000                 _MODEM_TRANSMITTING 00CC  
  __size_of_Adf_Write_Register_One 0071    __size_of_Adf_Write_Register_Two 00B7  
                       _Adc1_Start 0C0C                        _sine_table2 0400  
             __end_of_System_Start 0EA1                    ?_Ax25_Send_Flag 0070  
                  ?_Ax25_Send_Byte 0070                    ?_Ax25_Send_Sync 0070  
                ?_global_interrupt 0070        Sinus_Generator@Audio_Signal 0076  
               ??_global_interrupt 0077         __size_of_Modem_Flush_Frame 0023  
                       _Adf_Locked 0BFA                  _modem_packet_size 0079  
 __end_of_Adf_Write_Register_Three 01F5  
