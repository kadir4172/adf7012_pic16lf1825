

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Sep 23 21:14:23 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16LF1825
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000E                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  008C                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0095                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009B                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  010C                     	;# 
   108  010E                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0113                     	;# 
   112  0114                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011E                     	;# 
   122  018C                     	;# 
   123  018E                     	;# 
   124  0191                     	;# 
   125  0191                     	;# 
   126  0192                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0193                     	;# 
   130  0194                     	;# 
   131  0195                     	;# 
   132  0196                     	;# 
   133  0199                     	;# 
   134  019A                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  020E                     	;# 
   143  0211                     	;# 
   144  0211                     	;# 
   145  0212                     	;# 
   146  0212                     	;# 
   147  0213                     	;# 
   148  0213                     	;# 
   149  0214                     	;# 
   150  0214                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0216                     	;# 
   155  0216                     	;# 
   156  0217                     	;# 
   157  0217                     	;# 
   158  0291                     	;# 
   159  0291                     	;# 
   160  0292                     	;# 
   161  0293                     	;# 
   162  0294                     	;# 
   163  0295                     	;# 
   164  0295                     	;# 
   165  0296                     	;# 
   166  0298                     	;# 
   167  0298                     	;# 
   168  0299                     	;# 
   169  029A                     	;# 
   170  029B                     	;# 
   171  029C                     	;# 
   172  029D                     	;# 
   173  029E                     	;# 
   174  0311                     	;# 
   175  0311                     	;# 
   176  0312                     	;# 
   177  0313                     	;# 
   178  0318                     	;# 
   179  0318                     	;# 
   180  0319                     	;# 
   181  031A                     	;# 
   182  038C                     	;# 
   183  038E                     	;# 
   184  0391                     	;# 
   185  0392                     	;# 
   186  0393                     	;# 
   187  039A                     	;# 
   188  039C                     	;# 
   189  039D                     	;# 
   190  039E                     	;# 
   191  039F                     	;# 
   192  0415                     	;# 
   193  0416                     	;# 
   194  0417                     	;# 
   195  041C                     	;# 
   196  041D                     	;# 
   197  041E                     	;# 
   198  0FE4                     	;# 
   199  0FE5                     	;# 
   200  0FE6                     	;# 
   201  0FE7                     	;# 
   202  0FE8                     	;# 
   203  0FE9                     	;# 
   204  0FEA                     	;# 
   205  0FEB                     	;# 
   206  0FED                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000E                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0095                     	;# 
   243  0096                     	;# 
   244  0097                     	;# 
   245  0098                     	;# 
   246  0099                     	;# 
   247  009A                     	;# 
   248  009B                     	;# 
   249  009B                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  010C                     	;# 
   254  010E                     	;# 
   255  0111                     	;# 
   256  0112                     	;# 
   257  0113                     	;# 
   258  0114                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011A                     	;# 
   265  011B                     	;# 
   266  011D                     	;# 
   267  011E                     	;# 
   268  018C                     	;# 
   269  018E                     	;# 
   270  0191                     	;# 
   271  0191                     	;# 
   272  0192                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0193                     	;# 
   276  0194                     	;# 
   277  0195                     	;# 
   278  0196                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020E                     	;# 
   289  0211                     	;# 
   290  0211                     	;# 
   291  0212                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0291                     	;# 
   305  0291                     	;# 
   306  0292                     	;# 
   307  0293                     	;# 
   308  0294                     	;# 
   309  0295                     	;# 
   310  0295                     	;# 
   311  0296                     	;# 
   312  0298                     	;# 
   313  0298                     	;# 
   314  0299                     	;# 
   315  029A                     	;# 
   316  029B                     	;# 
   317  029C                     	;# 
   318  029D                     	;# 
   319  029E                     	;# 
   320  0311                     	;# 
   321  0311                     	;# 
   322  0312                     	;# 
   323  0313                     	;# 
   324  0318                     	;# 
   325  0318                     	;# 
   326  0319                     	;# 
   327  031A                     	;# 
   328  038C                     	;# 
   329  038E                     	;# 
   330  0391                     	;# 
   331  0392                     	;# 
   332  0393                     	;# 
   333  039A                     	;# 
   334  039C                     	;# 
   335  039D                     	;# 
   336  039E                     	;# 
   337  039F                     	;# 
   338  0415                     	;# 
   339  0416                     	;# 
   340  0417                     	;# 
   341  041C                     	;# 
   342  041D                     	;# 
   343  041E                     	;# 
   344  0FE4                     	;# 
   345  0FE5                     	;# 
   346  0FE6                     	;# 
   347  0FE7                     	;# 
   348  0FE8                     	;# 
   349  0FE9                     	;# 
   350  0FEA                     	;# 
   351  0FEB                     	;# 
   352  0FED                     	;# 
   353  0FEE                     	;# 
   354  0FEF                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000E                     	;# 
   369  0011                     	;# 
   370  0012                     	;# 
   371  0013                     	;# 
   372  0015                     	;# 
   373  0016                     	;# 
   374  0016                     	;# 
   375  0017                     	;# 
   376  0018                     	;# 
   377  0019                     	;# 
   378  001A                     	;# 
   379  001B                     	;# 
   380  001C                     	;# 
   381  001E                     	;# 
   382  001F                     	;# 
   383  008C                     	;# 
   384  008E                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0095                     	;# 
   389  0096                     	;# 
   390  0097                     	;# 
   391  0098                     	;# 
   392  0099                     	;# 
   393  009A                     	;# 
   394  009B                     	;# 
   395  009B                     	;# 
   396  009C                     	;# 
   397  009D                     	;# 
   398  009E                     	;# 
   399  010C                     	;# 
   400  010E                     	;# 
   401  0111                     	;# 
   402  0112                     	;# 
   403  0113                     	;# 
   404  0114                     	;# 
   405  0115                     	;# 
   406  0116                     	;# 
   407  0117                     	;# 
   408  0118                     	;# 
   409  0119                     	;# 
   410  011A                     	;# 
   411  011B                     	;# 
   412  011D                     	;# 
   413  011E                     	;# 
   414  018C                     	;# 
   415  018E                     	;# 
   416  0191                     	;# 
   417  0191                     	;# 
   418  0192                     	;# 
   419  0193                     	;# 
   420  0193                     	;# 
   421  0193                     	;# 
   422  0194                     	;# 
   423  0195                     	;# 
   424  0196                     	;# 
   425  0199                     	;# 
   426  019A                     	;# 
   427  019B                     	;# 
   428  019B                     	;# 
   429  019C                     	;# 
   430  019D                     	;# 
   431  019E                     	;# 
   432  019F                     	;# 
   433  020C                     	;# 
   434  020E                     	;# 
   435  0211                     	;# 
   436  0211                     	;# 
   437  0212                     	;# 
   438  0212                     	;# 
   439  0213                     	;# 
   440  0213                     	;# 
   441  0214                     	;# 
   442  0214                     	;# 
   443  0215                     	;# 
   444  0215                     	;# 
   445  0215                     	;# 
   446  0216                     	;# 
   447  0216                     	;# 
   448  0217                     	;# 
   449  0217                     	;# 
   450  0291                     	;# 
   451  0291                     	;# 
   452  0292                     	;# 
   453  0293                     	;# 
   454  0294                     	;# 
   455  0295                     	;# 
   456  0295                     	;# 
   457  0296                     	;# 
   458  0298                     	;# 
   459  0298                     	;# 
   460  0299                     	;# 
   461  029A                     	;# 
   462  029B                     	;# 
   463  029C                     	;# 
   464  029D                     	;# 
   465  029E                     	;# 
   466  0311                     	;# 
   467  0311                     	;# 
   468  0312                     	;# 
   469  0313                     	;# 
   470  0318                     	;# 
   471  0318                     	;# 
   472  0319                     	;# 
   473  031A                     	;# 
   474  038C                     	;# 
   475  038E                     	;# 
   476  0391                     	;# 
   477  0392                     	;# 
   478  0393                     	;# 
   479  039A                     	;# 
   480  039C                     	;# 
   481  039D                     	;# 
   482  039E                     	;# 
   483  039F                     	;# 
   484  0415                     	;# 
   485  0416                     	;# 
   486  0417                     	;# 
   487  041C                     	;# 
   488  041D                     	;# 
   489  041E                     	;# 
   490  0FE4                     	;# 
   491  0FE5                     	;# 
   492  0FE6                     	;# 
   493  0FE7                     	;# 
   494  0FE8                     	;# 
   495  0FE9                     	;# 
   496  0FEA                     	;# 
   497  0FEB                     	;# 
   498  0FED                     	;# 
   499  0FEE                     	;# 
   500  0FEF                     	;# 
   501  0000                     	;# 
   502  0001                     	;# 
   503  0002                     	;# 
   504  0003                     	;# 
   505  0004                     	;# 
   506  0005                     	;# 
   507  0006                     	;# 
   508  0007                     	;# 
   509  0008                     	;# 
   510  0009                     	;# 
   511  000A                     	;# 
   512  000B                     	;# 
   513  000C                     	;# 
   514  000E                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0016                     	;# 
   521  0017                     	;# 
   522  0018                     	;# 
   523  0019                     	;# 
   524  001A                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  001E                     	;# 
   528  001F                     	;# 
   529  008C                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  010C                     	;# 
   546  010E                     	;# 
   547  0111                     	;# 
   548  0112                     	;# 
   549  0113                     	;# 
   550  0114                     	;# 
   551  0115                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  0118                     	;# 
   555  0119                     	;# 
   556  011A                     	;# 
   557  011B                     	;# 
   558  011D                     	;# 
   559  011E                     	;# 
   560  018C                     	;# 
   561  018E                     	;# 
   562  0191                     	;# 
   563  0191                     	;# 
   564  0192                     	;# 
   565  0193                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0199                     	;# 
   572  019A                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019C                     	;# 
   576  019D                     	;# 
   577  019E                     	;# 
   578  019F                     	;# 
   579  020C                     	;# 
   580  020E                     	;# 
   581  0211                     	;# 
   582  0211                     	;# 
   583  0212                     	;# 
   584  0212                     	;# 
   585  0213                     	;# 
   586  0213                     	;# 
   587  0214                     	;# 
   588  0214                     	;# 
   589  0215                     	;# 
   590  0215                     	;# 
   591  0215                     	;# 
   592  0216                     	;# 
   593  0216                     	;# 
   594  0217                     	;# 
   595  0217                     	;# 
   596  0291                     	;# 
   597  0291                     	;# 
   598  0292                     	;# 
   599  0293                     	;# 
   600  0294                     	;# 
   601  0295                     	;# 
   602  0295                     	;# 
   603  0296                     	;# 
   604  0298                     	;# 
   605  0298                     	;# 
   606  0299                     	;# 
   607  029A                     	;# 
   608  029B                     	;# 
   609  029C                     	;# 
   610  029D                     	;# 
   611  029E                     	;# 
   612  0311                     	;# 
   613  0311                     	;# 
   614  0312                     	;# 
   615  0313                     	;# 
   616  0318                     	;# 
   617  0318                     	;# 
   618  0319                     	;# 
   619  031A                     	;# 
   620  038C                     	;# 
   621  038E                     	;# 
   622  0391                     	;# 
   623  0392                     	;# 
   624  0393                     	;# 
   625  039A                     	;# 
   626  039C                     	;# 
   627  039D                     	;# 
   628  039E                     	;# 
   629  039F                     	;# 
   630  0415                     	;# 
   631  0416                     	;# 
   632  0417                     	;# 
   633  041C                     	;# 
   634  041D                     	;# 
   635  041E                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000E                     	;# 
   661  0011                     	;# 
   662  0012                     	;# 
   663  0013                     	;# 
   664  0015                     	;# 
   665  0016                     	;# 
   666  0016                     	;# 
   667  0017                     	;# 
   668  0018                     	;# 
   669  0019                     	;# 
   670  001A                     	;# 
   671  001B                     	;# 
   672  001C                     	;# 
   673  001E                     	;# 
   674  001F                     	;# 
   675  008C                     	;# 
   676  008E                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0095                     	;# 
   681  0096                     	;# 
   682  0097                     	;# 
   683  0098                     	;# 
   684  0099                     	;# 
   685  009A                     	;# 
   686  009B                     	;# 
   687  009B                     	;# 
   688  009C                     	;# 
   689  009D                     	;# 
   690  009E                     	;# 
   691  010C                     	;# 
   692  010E                     	;# 
   693  0111                     	;# 
   694  0112                     	;# 
   695  0113                     	;# 
   696  0114                     	;# 
   697  0115                     	;# 
   698  0116                     	;# 
   699  0117                     	;# 
   700  0118                     	;# 
   701  0119                     	;# 
   702  011A                     	;# 
   703  011B                     	;# 
   704  011D                     	;# 
   705  011E                     	;# 
   706  018C                     	;# 
   707  018E                     	;# 
   708  0191                     	;# 
   709  0191                     	;# 
   710  0192                     	;# 
   711  0193                     	;# 
   712  0193                     	;# 
   713  0193                     	;# 
   714  0194                     	;# 
   715  0195                     	;# 
   716  0196                     	;# 
   717  0199                     	;# 
   718  019A                     	;# 
   719  019B                     	;# 
   720  019B                     	;# 
   721  019C                     	;# 
   722  019D                     	;# 
   723  019E                     	;# 
   724  019F                     	;# 
   725  020C                     	;# 
   726  020E                     	;# 
   727  0211                     	;# 
   728  0211                     	;# 
   729  0212                     	;# 
   730  0212                     	;# 
   731  0213                     	;# 
   732  0213                     	;# 
   733  0214                     	;# 
   734  0214                     	;# 
   735  0215                     	;# 
   736  0215                     	;# 
   737  0215                     	;# 
   738  0216                     	;# 
   739  0216                     	;# 
   740  0217                     	;# 
   741  0217                     	;# 
   742  0291                     	;# 
   743  0291                     	;# 
   744  0292                     	;# 
   745  0293                     	;# 
   746  0294                     	;# 
   747  0295                     	;# 
   748  0295                     	;# 
   749  0296                     	;# 
   750  0298                     	;# 
   751  0298                     	;# 
   752  0299                     	;# 
   753  029A                     	;# 
   754  029B                     	;# 
   755  029C                     	;# 
   756  029D                     	;# 
   757  029E                     	;# 
   758  0311                     	;# 
   759  0311                     	;# 
   760  0312                     	;# 
   761  0313                     	;# 
   762  0318                     	;# 
   763  0318                     	;# 
   764  0319                     	;# 
   765  031A                     	;# 
   766  038C                     	;# 
   767  038E                     	;# 
   768  0391                     	;# 
   769  0392                     	;# 
   770  0393                     	;# 
   771  039A                     	;# 
   772  039C                     	;# 
   773  039D                     	;# 
   774  039E                     	;# 
   775  039F                     	;# 
   776  0415                     	;# 
   777  0416                     	;# 
   778  0417                     	;# 
   779  041C                     	;# 
   780  041D                     	;# 
   781  041E                     	;# 
   782  0FE4                     	;# 
   783  0FE5                     	;# 
   784  0FE6                     	;# 
   785  0FE7                     	;# 
   786  0FE8                     	;# 
   787  0FE9                     	;# 
   788  0FEA                     	;# 
   789  0FEB                     	;# 
   790  0FED                     	;# 
   791  0FEE                     	;# 
   792  0FEF                     	;# 
   793                           
   794                           	psect	idataBANK2
   795  0CBB                     __pidataBANK2:	
   796                           
   797                           ;initializer for main@F3178
   798  0CBB  3443               	retlw	67
   799  0CBC  3455               	retlw	85
   800  0CBD  3442               	retlw	66
   801  0CBE  3445               	retlw	69
   802  0CBF  3459               	retlw	89
   803  0CC0  3459               	retlw	89
   804  0CC1  3400               	retlw	0
   805  0CC2  3405               	retlw	5
   806  0CC3  3443               	retlw	67
   807  0CC4  3455               	retlw	85
   808  0CC5  3442               	retlw	66
   809  0CC6  3445               	retlw	69
   810  0CC7  3458               	retlw	88
   811  0CC8  3458               	retlw	88
   812  0CC9  3400               	retlw	0
   813  0CCA  3406               	retlw	6
   814                           
   815                           	psect	stringtext
   816  0400                     __pstringtext:	
   817  0400                     _sine_table2:	
   818  0400  3410               	retlw	16
   819  0401  3410               	retlw	16
   820  0402  3411               	retlw	17
   821  0403  3411               	retlw	17
   822  0404  3412               	retlw	18
   823  0405  3412               	retlw	18
   824  0406  3413               	retlw	19
   825  0407  3413               	retlw	19
   826  0408  3414               	retlw	20
   827  0409  3414               	retlw	20
   828  040A  3415               	retlw	21
   829  040B  3415               	retlw	21
   830  040C  3416               	retlw	22
   831  040D  3416               	retlw	22
   832  040E  3417               	retlw	23
   833  040F  3417               	retlw	23
   834  0410  3418               	retlw	24
   835  0411  3418               	retlw	24
   836  0412  3419               	retlw	25
   837  0413  3419               	retlw	25
   838  0414  3419               	retlw	25
   839  0415  341A               	retlw	26
   840  0416  341A               	retlw	26
   841  0417  341B               	retlw	27
   842  0418  341B               	retlw	27
   843  0419  341B               	retlw	27
   844  041A  341C               	retlw	28
   845  041B  341C               	retlw	28
   846  041C  341C               	retlw	28
   847  041D  341D               	retlw	29
   848  041E  341D               	retlw	29
   849  041F  341D               	retlw	29
   850  0420  341D               	retlw	29
   851  0421  341E               	retlw	30
   852  0422  341E               	retlw	30
   853  0423  341E               	retlw	30
   854  0424  341E               	retlw	30
   855  0425  341E               	retlw	30
   856  0426  341E               	retlw	30
   857  0427  341F               	retlw	31
   858  0428  341F               	retlw	31
   859  0429  341F               	retlw	31
   860  042A  341F               	retlw	31
   861  042B  341F               	retlw	31
   862  042C  341F               	retlw	31
   863  042D  341F               	retlw	31
   864  042E  341F               	retlw	31
   865  042F  341F               	retlw	31
   866  0430  341F               	retlw	31
   867  0431  341F               	retlw	31
   868  0432  341F               	retlw	31
   869  0433  341F               	retlw	31
   870  0434  341F               	retlw	31
   871  0435  341E               	retlw	30
   872  0436  341E               	retlw	30
   873  0437  341E               	retlw	30
   874  0438  341E               	retlw	30
   875  0439  341E               	retlw	30
   876  043A  341E               	retlw	30
   877  043B  341D               	retlw	29
   878  043C  341D               	retlw	29
   879  043D  341D               	retlw	29
   880  043E  341D               	retlw	29
   881  043F  341C               	retlw	28
   882  0440  341C               	retlw	28
   883  0441  341C               	retlw	28
   884  0442  341B               	retlw	27
   885  0443  341B               	retlw	27
   886  0444  341B               	retlw	27
   887  0445  341A               	retlw	26
   888  0446  341A               	retlw	26
   889  0447  3419               	retlw	25
   890  0448  3419               	retlw	25
   891  0449  3419               	retlw	25
   892  044A  3418               	retlw	24
   893  044B  3418               	retlw	24
   894  044C  3417               	retlw	23
   895  044D  3417               	retlw	23
   896  044E  3416               	retlw	22
   897  044F  3416               	retlw	22
   898  0450  3415               	retlw	21
   899  0451  3415               	retlw	21
   900  0452  3414               	retlw	20
   901  0453  3414               	retlw	20
   902  0454  3413               	retlw	19
   903  0455  3413               	retlw	19
   904  0456  3412               	retlw	18
   905  0457  3412               	retlw	18
   906  0458  3411               	retlw	17
   907  0459  3411               	retlw	17
   908  045A  3410               	retlw	16
   909  045B  3410               	retlw	16
   910  045C  340F               	retlw	15
   911  045D  340E               	retlw	14
   912  045E  340E               	retlw	14
   913  045F  340D               	retlw	13
   914  0460  340D               	retlw	13
   915  0461  340C               	retlw	12
   916  0462  340C               	retlw	12
   917  0463  340B               	retlw	11
   918  0464  340B               	retlw	11
   919  0465  340A               	retlw	10
   920  0466  340A               	retlw	10
   921  0467  3409               	retlw	9
   922  0468  3409               	retlw	9
   923  0469  3408               	retlw	8
   924  046A  3408               	retlw	8
   925  046B  3407               	retlw	7
   926  046C  3407               	retlw	7
   927  046D  3406               	retlw	6
   928  046E  3406               	retlw	6
   929  046F  3406               	retlw	6
   930  0470  3405               	retlw	5
   931  0471  3405               	retlw	5
   932  0472  3404               	retlw	4
   933  0473  3404               	retlw	4
   934  0474  3404               	retlw	4
   935  0475  3403               	retlw	3
   936  0476  3403               	retlw	3
   937  0477  3403               	retlw	3
   938  0478  3402               	retlw	2
   939  0479  3402               	retlw	2
   940  047A  3402               	retlw	2
   941  047B  3402               	retlw	2
   942  047C  3401               	retlw	1
   943  047D  3401               	retlw	1
   944  047E  3401               	retlw	1
   945  047F  3401               	retlw	1
   946  0480  3401               	retlw	1
   947  0481  3401               	retlw	1
   948  0482  3400               	retlw	0
   949  0483  3400               	retlw	0
   950  0484  3400               	retlw	0
   951  0485  3400               	retlw	0
   952  0486  3400               	retlw	0
   953  0487  3400               	retlw	0
   954  0488  3400               	retlw	0
   955  0489  3400               	retlw	0
   956  048A  3400               	retlw	0
   957  048B  3400               	retlw	0
   958  048C  3400               	retlw	0
   959  048D  3400               	retlw	0
   960  048E  3400               	retlw	0
   961  048F  3400               	retlw	0
   962  0490  3401               	retlw	1
   963  0491  3401               	retlw	1
   964  0492  3401               	retlw	1
   965  0493  3401               	retlw	1
   966  0494  3401               	retlw	1
   967  0495  3401               	retlw	1
   968  0496  3402               	retlw	2
   969  0497  3402               	retlw	2
   970  0498  3402               	retlw	2
   971  0499  3402               	retlw	2
   972  049A  3403               	retlw	3
   973  049B  3403               	retlw	3
   974  049C  3403               	retlw	3
   975  049D  3404               	retlw	4
   976  049E  3404               	retlw	4
   977  049F  3404               	retlw	4
   978  04A0  3405               	retlw	5
   979  04A1  3405               	retlw	5
   980  04A2  3406               	retlw	6
   981  04A3  3406               	retlw	6
   982  04A4  3406               	retlw	6
   983  04A5  3407               	retlw	7
   984  04A6  3407               	retlw	7
   985  04A7  3408               	retlw	8
   986  04A8  3408               	retlw	8
   987  04A9  3409               	retlw	9
   988  04AA  3409               	retlw	9
   989  04AB  340A               	retlw	10
   990  04AC  340A               	retlw	10
   991  04AD  340B               	retlw	11
   992  04AE  340B               	retlw	11
   993  04AF  340C               	retlw	12
   994  04B0  340C               	retlw	12
   995  04B1  340D               	retlw	13
   996  04B2  340D               	retlw	13
   997  04B3  340E               	retlw	14
   998  04B4  340E               	retlw	14
   999  04B5  340F               	retlw	15
  1000  04B6                     __end_of_sine_table2:	
  1001  04B6                     _PLAYBACK_RATE:	
  1002  04B6  3412               	retlw	18
  1003  04B7  347A               	retlw	122
  1004  04B8  3400               	retlw	0
  1005  04B9  3400               	retlw	0
  1006  04BA                     __end_of_PLAYBACK_RATE:	
  1007  04BA                     _BAUD_RATE:	
  1008  04BA  34B0               	retlw	176
  1009  04BB  3404               	retlw	4
  1010  04BC                     __end_of_BAUD_RATE:	
  1011  04BC                     _TABLE_SIZE:	
  1012  04BC  34B6               	retlw	182
  1013  04BD  3400               	retlw	0
  1014  04BE                     __end_of_TABLE_SIZE:	
  1015  000B                     _INTCON	set	11
  1016  0011                     _PIR1	set	17
  1017  000C                     _PORTAbits	set	12
  1018  000E                     _PORTCbits	set	14
  1019  0015                     _TMR0	set	21
  1020  0017                     _TMR1H	set	23
  1021  0016                     _TMR1L	set	22
  1022  008E                     _ADIF	set	142
  1023  008A                     _CCP1IF	set	138
  1024  00C4                     _T1CKPS0	set	196
  1025  00C5                     _T1CKPS1	set	197
  1026  005D                     _TMR0IE	set	93
  1027  005A                     _TMR0IF	set	90
  1028  00C6                     _TMR1CS0	set	198
  1029  00C7                     _TMR1CS1	set	199
  1030  00CF                     _TMR1GE	set	207
  1031  0088                     _TMR1IF	set	136
  1032  00C0                     _TMR1ON	set	192
  1033  009D                     _ADCON0	set	157
  1034  009C                     _ADRESH	set	156
  1035  009B                     _ADRESL	set	155
  1036  0099                     _OSCCON	set	153
  1037  009A                     _OSCSTAT	set	154
  1038  0098                     _OSCTUNE	set	152
  1039  008C                     _TRISA	set	140
  1040  008E                     _TRISC	set	142
  1041  04F4                     _ADCS0	set	1268
  1042  04F5                     _ADCS1	set	1269
  1043  04F6                     _ADCS2	set	1270
  1044  04F7                     _ADFM	set	1271
  1045  048E                     _ADIE	set	1166
  1046  04F2                     _ADNREF	set	1266
  1047  04E8                     _ADON	set	1256
  1048  04F0                     _ADPREF0	set	1264
  1049  04F1                     _ADPREF1	set	1265
  1050  048A                     _CCP1IE	set	1162
  1051  04AB                     _PSA	set	1195
  1052  04AD                     _TMR0CS	set	1197
  1053  0488                     _TMR1IE	set	1160
  1054  0119                     _DACCON1	set	281
  1055  08C7                     _DACEN	set	2247
  1056  08C0                     _DACNSS	set	2240
  1057  08C5                     _DACOE	set	2245
  1058  08C2                     _DACPSS0	set	2242
  1059  08C3                     _DACPSS1	set	2243
  1060  0C61                     _ANSA1	set	3169
  1061  0292                     _CCPR1H	set	658
  1062  0291                     _CCPR1L	set	657
  1063  1499                     _CCP1M1	set	5273
  1064  149A                     _CCP1M2	set	5274
  1065  149B                     _CCP1M3	set	5275
  1066  04BE                     __stringdata:	
  1067  04BE                     STR_1:	
  1068  04BE  3448               	retlw	72	;'H'
  1069  04BF  3445               	retlw	69	;'E'
  1070  04C0  344C               	retlw	76	;'L'
  1071  04C1  344C               	retlw	76	;'L'
  1072  04C2  344F               	retlw	79	;'O'
  1073  04C3  3400               	retlw	0
  1074  04C4                     __end_of__stringdata:	
  1075                           
  1076                           ; #config settings
  1077  0000                     
  1078                           	psect	cinit
  1079  003C                     start_initialization:	
  1080  003C                     __initialization:	
  1081                           
  1082                           ; Clear objects allocated to COMMON
  1083  003C  01F9               	clrf	__pbssCOMMON& (0+127)
  1084  003D  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1085  003E  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1086  003F  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1087  0040  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1088                           
  1089                           ; Clear objects allocated to BANK0
  1090  0041  01EE               	clrf	__pbssBANK0& (0+127)
  1091  0042  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1092                           
  1093                           ; Clear objects allocated to BANK1
  1094  0043  30A0               	movlw	low __pbssBANK1
  1095  0044  0084               	movwf	4
  1096  0045  3000               	movlw	high __pbssBANK1
  1097  0046  0085               	movwf	5
  1098  0047  3034               	movlw	52
  1099  0048  318C  2450  3180   	fcall	clear_ram0
  1100                           
  1101                           ; Clear objects allocated to BANK2
  1102  004B  3020               	movlw	low __pbssBANK2
  1103  004C  0084               	movwf	4
  1104  004D  3001               	movlw	high __pbssBANK2
  1105  004E  0085               	movwf	5
  1106  004F  3018               	movlw	24
  1107  0050  318C  2450  3180   	fcall	clear_ram0
  1108                           
  1109                           ; Clear objects allocated to BANK3
  1110  0053  30A0               	movlw	low __pbssBANK3
  1111  0054  0084               	movwf	4
  1112  0055  3001               	movlw	high __pbssBANK3
  1113  0056  0085               	movwf	5
  1114  0057  3040               	movlw	64
  1115  0058  318C  2450  3180   	fcall	clear_ram0
  1116                           
  1117                           ; Initialize objects allocated to BANK2
  1118  005B  30BB               	movlw	low __pidataBANK2
  1119  005C  0084               	movwf	4
  1120  005D  308C               	movlw	(high __pidataBANK2)| (0+128)
  1121  005E  0085               	movwf	5
  1122  005F  3038               	movlw	low __pdataBANK2
  1123  0060  0086               	movwf	6
  1124  0061  3001               	movlw	high __pdataBANK2
  1125  0062  0087               	movwf	7
  1126  0063  3010               	movlw	16
  1127  0064  318C  244A         	fcall	init_ram
  1128  0066                     end_of_initialization:	
  1129                           ;End of C runtime variable initialization code
  1130                           
  1131  0066                     __end_of__initialization:	
  1132  0066  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
  1133  0067  0020               	movlb	0
  1134  0068  3186  2ECF         	ljmp	_main	;jump to C main() function
  1135                           
  1136                           	psect	bssCOMMON
  1137  0079                     __pbssCOMMON:	
  1138  0079                     _modem_packet_size:	
  1139  0079                     	ds	4
  1140  007D                     _phase:	
  1141  007D                     	ds	1
  1142                           
  1143                           	psect	bssBANK0
  1144  006E                     __pbssBANK0:	
  1145  006E                     _current_byte:	
  1146  006E                     	ds	1
  1147  006F                     _current_sample_in_baud:	
  1148  006F                     	ds	1
  1149                           
  1150                           	psect	bssBANK1
  1151  00A0                     __pbssBANK1:	
  1152  00A0                     _adf_config:	
  1153  00A0                     	ds	39
  1154  00C7                     _crc:	
  1155  00C7                     	ds	2
  1156  00C9                     _ones_in_a_row:	
  1157  00C9                     	ds	2
  1158  00CB                     Sinus_Generator@tone_index:	
  1159  00CB                     	ds	1
  1160  00CC                     _MODEM_TRANSMITTING:	
  1161  00CC                     	ds	1
  1162  00CD                     _PTT_OFF:	
  1163  00CD                     	ds	1
  1164  00CE                     _SAMPLES_PER_BAUD:	
  1165  00CE                     	ds	1
  1166  00CF                     _adc_sonuc_high:	
  1167  00CF                     	ds	1
  1168  00D0                     _adc_sonuc_low:	
  1169  00D0                     	ds	1
  1170  00D1                     _phase_delta:	
  1171  00D1                     	ds	1
  1172  00D2                     _test:	
  1173  00D2                     	ds	1
  1174  00D3                     _test2:	
  1175  00D3                     	ds	1
  1176                           
  1177                           	psect	bssBANK2
  1178  0120                     __pbssBANK2:	
  1179  0120                     Reverse_Array@F3148:	
  1180  0120                     	ds	4
  1181  0124                     _PHASE_DELTA_1200:	
  1182  0124                     	ds	4
  1183  0128                     _PHASE_DELTA_2200:	
  1184  0128                     	ds	4
  1185  012C                     _packet_pos:	
  1186  012C                     	ds	4
  1187  0130                     _powerlevel:	
  1188  0130                     	ds	4
  1189  0134                     _Systick_Counter:	
  1190  0134                     	ds	2
  1191  0136                     _dac_flag:	
  1192  0136                     	ds	2
  1193                           
  1194                           	psect	dataBANK2
  1195  0138                     __pdataBANK2:	
  1196  0138                     main@F3178:	
  1197  0138                     	ds	16
  1198                           
  1199                           	psect	bssBANK3
  1200  01A0                     __pbssBANK3:	
  1201  01A0                     _modem_packet:	
  1202  01A0                     	ds	64
  1203                           
  1204                           	psect	clrtext
  1205  0C50                     clear_ram0:	
  1206                           ;	Called with FSR0 containing the base address, and
  1207                           ;	WREG with the size to clear
  1208                           
  1209  0C50  0064               	clrwdt	;clear the watchdog before getting into this loop
  1210  0C51                     clrloop0:	
  1211  0C51  0180               	clrf	0	;clear RAM location pointed to by FSR
  1212  0C52  3101               	addfsr 0,1
  1213  0C53  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1214  0C54  2C51               	goto	clrloop0	;have we reached the end yet?
  1215  0C55  3400               	retlw	0	;all done for this memory range, return
  1216                           
  1217                           	psect	inittext
  1218  0C4A                     init_ram:	
  1219  0C4A  00FE               	movwf	126
  1220  0C4B                     initloop:	
  1221  0C4B  0012               	moviw fsr0++
  1222  0C4C  001E               	movwi fsr1++
  1223  0C4D  0BFE               	decfsz	126,f
  1224  0C4E  2C4B               	goto	initloop
  1225  0C4F  3400               	retlw	0
  1226                           
  1227                           	psect	cstackBANK1
  1228  00D4                     __pcstackBANK1:	
  1229  00D4                     Adf_Write_Register_Three@reg_ptr:	
  1230                           
  1231                           ; 4 bytes @ 0x0
  1232  00D4                     	ds	4
  1233  00D8                     Adf_Write_Register_Three@reg:	
  1234                           
  1235                           ; 4 bytes @ 0x4
  1236  00D8                     	ds	4
  1237  00DC                     Adf_Lock@adj:	
  1238                           
  1239                           ; 2 bytes @ 0x8
  1240  00DC                     	ds	2
  1241  00DE                     Adf_Lock@bias:	
  1242                           
  1243                           ; 2 bytes @ 0xA
  1244  00DE                     	ds	2
  1245  00E0                     main@beacon_address:	
  1246                           
  1247                           ; 16 bytes @ 0xC
  1248  00E0                     	ds	16
  1249                           
  1250                           	psect	cstackCOMMON
  1251  0070                     __pcstackCOMMON:	
  1252  0070                     ?_Sinus_Generator:	
  1253  0070                     ?_Timer1_Start:	
  1254                           ; 0 bytes @ 0x0
  1255                           
  1256  0070                     ?_Dac0_Start_Hold:	
  1257                           ; 0 bytes @ 0x0
  1258                           
  1259  0070                     ?_Adc1_Start:	
  1260                           ; 0 bytes @ 0x0
  1261                           
  1262  0070                     ?_Ax25_Send_Footer:	
  1263                           ; 0 bytes @ 0x0
  1264                           
  1265  0070                     ?_Modem_Setup:	
  1266                           ; 0 bytes @ 0x0
  1267                           
  1268  0070                     ?_Ptt_Off:	
  1269                           ; 0 bytes @ 0x0
  1270                           
  1271  0070                     ?_Modem_Flush_Frame:	
  1272                           ; 0 bytes @ 0x0
  1273                           
  1274  0070                     ?_Adf_Reset_Register_Zero:	
  1275                           ; 0 bytes @ 0x0
  1276                           
  1277  0070                     ?_Adf_Reset_Register_One:	
  1278                           ; 0 bytes @ 0x0
  1279                           
  1280  0070                     ?_Adf_Reset_Register_Two:	
  1281                           ; 0 bytes @ 0x0
  1282                           
  1283  0070                     ?_Adf_Reset_Register_Three:	
  1284                           ; 0 bytes @ 0x0
  1285                           
  1286  0070                     ?_Adf_Reset:	
  1287                           ; 0 bytes @ 0x0
  1288                           
  1289  0070                     ?_Adf_Write_Register_Zero:	
  1290                           ; 0 bytes @ 0x0
  1291                           
  1292  0070                     ?_Adf_Write_Register_One:	
  1293                           ; 0 bytes @ 0x0
  1294                           
  1295  0070                     ?_Adf_Write_Register_Two:	
  1296                           ; 0 bytes @ 0x0
  1297                           
  1298  0070                     ?_Adf_Write_Register_Three:	
  1299                           ; 0 bytes @ 0x0
  1300                           
  1301  0070                     ?_global_interrupt:	
  1302                           ; 0 bytes @ 0x0
  1303                           
  1304  0070                     ?_System_Start:	
  1305                           ; 0 bytes @ 0x0
  1306                           
  1307  0070                     ??_Send_Vcxo_Signal:	
  1308                           ; 0 bytes @ 0x0
  1309                           
  1310  0070                     ?_Timer0_Start:	
  1311                           ; 0 bytes @ 0x0
  1312                           
  1313  0070                     ?_Timer0_Stop:	
  1314                           ; 0 bytes @ 0x0
  1315                           
  1316  0070                     ??_Timer0_Stop:	
  1317                           ; 0 bytes @ 0x0
  1318                           
  1319  0070                     ?_Adf_Reset_Config:	
  1320                           ; 0 bytes @ 0x0
  1321                           
  1322  0070                     ?_Adf_Write_Config:	
  1323                           ; 0 bytes @ 0x0
  1324                           
  1325  0070                     ?_Radio_Setup:	
  1326                           ; 0 bytes @ 0x0
  1327                           
  1328  0070                     ?_Modem_Init:	
  1329                           ; 0 bytes @ 0x0
  1330                           
  1331  0070                     ?_Update_Crc:	
  1332                           ; 0 bytes @ 0x0
  1333                           
  1334  0070                     ?_Send_Byte:	
  1335                           ; 0 bytes @ 0x0
  1336                           
  1337  0070                     ?_Ax25_Send_Byte:	
  1338                           ; 0 bytes @ 0x0
  1339                           
  1340  0070                     ?_Ax25_Send_Sync:	
  1341                           ; 0 bytes @ 0x0
  1342                           
  1343  0070                     ?_Ax25_Send_Flag:	
  1344                           ; 0 bytes @ 0x0
  1345                           
  1346  0070                     ?_Gpio_Config:	
  1347                           ; 0 bytes @ 0x0
  1348                           
  1349  0070                     ?_Adf_Lock:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_Ptt_On:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_Spi_Byte_Send:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ?_Adf_Locked:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_Read_Adf7012_Muxout:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_Send_Vcxo_Signal:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ?_main:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     Send_Vcxo_Signal@value:	
  1371                           ; 2 bytes @ 0x0
  1372                           
  1373                           
  1374                           ; 1 bytes @ 0x0
  1375  0070                     	ds	1
  1376  0071                     ??_Sinus_Generator:	
  1377                           
  1378                           ; 0 bytes @ 0x1
  1379  0071                     	ds	5
  1380  0076                     Sinus_Generator@Audio_Signal:	
  1381                           
  1382                           ; 1 bytes @ 0x6
  1383  0076                     	ds	1
  1384  0077                     ??_global_interrupt:	
  1385                           
  1386                           ; 0 bytes @ 0x7
  1387  0077                     	ds	2
  1388                           
  1389                           	psect	cstackBANK0
  1390  0020                     __pcstackBANK0:	
  1391  0020                     ??_Gpio_Config:	
  1392  0020                     ??_Timer1_Start:	
  1393                           ; 0 bytes @ 0x0
  1394                           
  1395  0020                     ??_Dac0_Start_Hold:	
  1396                           ; 0 bytes @ 0x0
  1397                           
  1398  0020                     ??_Adc1_Start:	
  1399                           ; 0 bytes @ 0x0
  1400                           
  1401  0020                     ?_Delay_ms:	
  1402                           ; 0 bytes @ 0x0
  1403                           
  1404  0020                     ??_Adf_Reset_Register_Zero:	
  1405                           ; 0 bytes @ 0x0
  1406                           
  1407  0020                     ??_Adf_Reset_Register_One:	
  1408                           ; 0 bytes @ 0x0
  1409                           
  1410  0020                     ??_Adf_Reset_Register_Two:	
  1411                           ; 0 bytes @ 0x0
  1412                           
  1413  0020                     ??_Adf_Reset_Register_Three:	
  1414                           ; 0 bytes @ 0x0
  1415                           
  1416  0020                     ??_System_Start:	
  1417                           ; 0 bytes @ 0x0
  1418                           
  1419  0020                     ??_Timer0_Start:	
  1420                           ; 0 bytes @ 0x0
  1421                           
  1422  0020                     ??_Modem_Init:	
  1423                           ; 0 bytes @ 0x0
  1424                           
  1425  0020                     ??_Update_Crc:	
  1426                           ; 0 bytes @ 0x0
  1427                           
  1428  0020                     ??_Ax25_Send_Sync:	
  1429                           ; 0 bytes @ 0x0
  1430                           
  1431  0020                     ??_Ax25_Send_Flag:	
  1432                           ; 0 bytes @ 0x0
  1433                           
  1434  0020                     ?_memcpy:	
  1435                           ; 0 bytes @ 0x0
  1436                           
  1437  0020                     memcpy@s1:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440  0020                     Delay_ms@time_to_delay:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443                           
  1444                           ; 2 bytes @ 0x0
  1445  0020                     	ds	1
  1446  0021                     memcpy@n:	
  1447                           
  1448                           ; 2 bytes @ 0x1
  1449  0021                     	ds	1
  1450  0022                     ??_Delay_ms:	
  1451  0022                     Update_Crc@input_bit:	
  1452                           ; 0 bytes @ 0x2
  1453                           
  1454                           
  1455                           ; 1 bytes @ 0x2
  1456  0022                     	ds	1
  1457  0023                     ??_memcpy:	
  1458  0023                     ??_Send_Byte:	
  1459                           ; 0 bytes @ 0x3
  1460                           
  1461                           
  1462                           ; 0 bytes @ 0x3
  1463  0023                     	ds	1
  1464  0024                     memcpy@d:	
  1465  0024                     Delay_ms@i:	
  1466                           ; 1 bytes @ 0x4
  1467                           
  1468                           
  1469                           ; 2 bytes @ 0x4
  1470  0024                     	ds	1
  1471  0025                     memcpy@s:	
  1472                           
  1473                           ; 1 bytes @ 0x5
  1474  0025                     	ds	1
  1475  0026                     ??_Spi_Byte_Send:	
  1476  0026                     ??_Adf_Reset:	
  1477                           ; 0 bytes @ 0x6
  1478                           
  1479  0026                     ??_Adf_Locked:	
  1480                           ; 0 bytes @ 0x6
  1481                           
  1482  0026                     ??_Read_Adf7012_Muxout:	
  1483                           ; 0 bytes @ 0x6
  1484                           
  1485  0026                     ??_Adf_Reset_Config:	
  1486                           ; 0 bytes @ 0x6
  1487                           
  1488  0026                     Ax25_Send_Sync@byte:	
  1489                           ; 0 bytes @ 0x6
  1490                           
  1491  0026                     Ax25_Send_Flag@byte:	
  1492                           ; 1 bytes @ 0x6
  1493                           
  1494  0026                     memcpy@d1:	
  1495                           ; 1 bytes @ 0x6
  1496                           
  1497                           
  1498                           ; 1 bytes @ 0x6
  1499  0026                     	ds	1
  1500  0027                     ?_Reverse_Array:	
  1501  0027                     Reverse_Array@length:	
  1502                           ; 1 bytes @ 0x7
  1503                           
  1504  0027                     Spi_Byte_Send@data:	
  1505                           ; 1 bytes @ 0x7
  1506                           
  1507  0027                     Ax25_Send_Sync@i:	
  1508                           ; 1 bytes @ 0x7
  1509                           
  1510  0027                     Ax25_Send_Flag@i:	
  1511                           ; 2 bytes @ 0x7
  1512                           
  1513                           
  1514                           ; 2 bytes @ 0x7
  1515  0027                     	ds	1
  1516  0028                     ??_Reverse_Array:	
  1517  0028                     Spi_Byte_Send@data_to_send:	
  1518                           ; 0 bytes @ 0x8
  1519                           
  1520                           
  1521                           ; 1 bytes @ 0x8
  1522  0028                     	ds	1
  1523  0029                     Spi_Byte_Send@i:	
  1524  0029                     Send_Byte@byte:	
  1525                           ; 1 bytes @ 0x9
  1526                           
  1527                           
  1528                           ; 1 bytes @ 0x9
  1529  0029                     	ds	1
  1530  002A                     ?_Write_Adf7012_Reg:	
  1531  002A                     Write_Adf7012_Reg@size_of_reg:	
  1532                           ; 1 bytes @ 0xA
  1533                           
  1534  002A                     Send_Byte@i:	
  1535                           ; 1 bytes @ 0xA
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0xA
  1539  002A                     	ds	1
  1540  002B                     ??_Write_Adf7012_Reg:	
  1541                           
  1542                           ; 0 bytes @ 0xB
  1543  002B                     	ds	1
  1544  002C                     ?_Ax25_Send_Header:	
  1545  002C                     ??_Ax25_Send_Footer:	
  1546                           ; 0 bytes @ 0xC
  1547                           
  1548  002C                     ??_Ax25_Send_Byte:	
  1549                           ; 0 bytes @ 0xC
  1550                           
  1551  002C                     Write_Adf7012_Reg@reg_value:	
  1552                           ; 0 bytes @ 0xC
  1553                           
  1554  002C                     Ax25_Send_Byte@byte:	
  1555                           ; 1 bytes @ 0xC
  1556                           
  1557  002C                     Ax25_Send_Header@num_addresses:	
  1558                           ; 1 bytes @ 0xC
  1559                           
  1560  002C                     Ax25_Send_Footer@final_crc:	
  1561                           ; 2 bytes @ 0xC
  1562                           
  1563                           
  1564                           ; 2 bytes @ 0xC
  1565  002C                     	ds	1
  1566  002D                     ?_Ax25_Send_String:	
  1567  002D                     Write_Adf7012_Reg@i:	
  1568                           ; 0 bytes @ 0xD
  1569                           
  1570  002D                     Ax25_Send_String@string:	
  1571                           ; 1 bytes @ 0xD
  1572                           
  1573  002D                     Reverse_Array@buffer_array:	
  1574                           ; 2 bytes @ 0xD
  1575                           
  1576                           
  1577                           ; 4 bytes @ 0xD
  1578  002D                     	ds	1
  1579  002E                     ??_Ax25_Send_Header:	
  1580                           
  1581                           ; 0 bytes @ 0xE
  1582  002E                     	ds	1
  1583  002F                     ??_Ax25_Send_String:	
  1584  002F                     Ax25_Send_String@i:	
  1585                           ; 0 bytes @ 0xF
  1586                           
  1587                           
  1588                           ; 2 bytes @ 0xF
  1589  002F                     	ds	2
  1590  0031                     Reverse_Array@input:	
  1591  0031                     Ax25_Send_Header@j:	
  1592                           ; 1 bytes @ 0x11
  1593                           
  1594                           
  1595                           ; 2 bytes @ 0x11
  1596  0031                     	ds	1
  1597  0032                     Reverse_Array@i:	
  1598                           
  1599                           ; 1 bytes @ 0x12
  1600  0032                     	ds	1
  1601  0033                     ??_Adf_Write_Register_Zero:	
  1602  0033                     ??_Adf_Write_Register_One:	
  1603                           ; 0 bytes @ 0x13
  1604                           
  1605  0033                     ??_Adf_Write_Register_Two:	
  1606                           ; 0 bytes @ 0x13
  1607                           
  1608  0033                     ??_Adf_Write_Register_Three:	
  1609                           ; 0 bytes @ 0x13
  1610                           
  1611  0033                     Ax25_Send_Header@addresses:	
  1612                           ; 0 bytes @ 0x13
  1613                           
  1614                           
  1615                           ; 1 bytes @ 0x13
  1616  0033                     	ds	1
  1617  0034                     Ax25_Send_Header@i:	
  1618                           
  1619                           ; 2 bytes @ 0x14
  1620  0034                     	ds	11
  1621  003F                     Adf_Write_Register_One@reg:	
  1622                           
  1623                           ; 4 bytes @ 0x1F
  1624  003F                     	ds	4
  1625  0043                     Adf_Write_Register_One@reg_ptr:	
  1626                           
  1627                           ; 3 bytes @ 0x23
  1628  0043                     	ds	8
  1629  004B                     Adf_Write_Register_Two@reg_ptr:	
  1630                           
  1631                           ; 4 bytes @ 0x2B
  1632  004B                     	ds	4
  1633  004F                     Adf_Write_Register_Zero@reg_ptr:	
  1634  004F                     Adf_Write_Register_Two@reg:	
  1635                           ; 4 bytes @ 0x2F
  1636                           
  1637                           
  1638                           ; 4 bytes @ 0x2F
  1639  004F                     	ds	4
  1640  0053                     Adf_Write_Register_Zero@reg:	
  1641                           
  1642                           ; 4 bytes @ 0x33
  1643  0053                     	ds	24
  1644  006B                     ??_Modem_Setup:	
  1645  006B                     ??_Adf_Lock:	
  1646                           ; 0 bytes @ 0x4B
  1647                           
  1648  006B                     ??_Ptt_On:	
  1649                           ; 0 bytes @ 0x4B
  1650                           
  1651  006B                     ??_Ptt_Off:	
  1652                           ; 0 bytes @ 0x4B
  1653                           
  1654  006B                     ??_Adf_Write_Config:	
  1655                           ; 0 bytes @ 0x4B
  1656                           
  1657  006B                     ??_Radio_Setup:	
  1658                           ; 0 bytes @ 0x4B
  1659                           
  1660                           
  1661                           ; 0 bytes @ 0x4B
  1662  006B                     	ds	1
  1663  006C                     ??_Modem_Flush_Frame:	
  1664                           
  1665                           ; 0 bytes @ 0x4C
  1666  006C                     	ds	1
  1667  006D                     ??_main:	
  1668                           
  1669                           ; 0 bytes @ 0x4D
  1670  006D                     	ds	1
  1671                           
  1672                           	psect	maintext
  1673  06CF                     __pmaintext:	
  1674 ;;
  1675 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1676 ;;
  1677 ;; *************** function _main *****************
  1678 ;; Defined at:
  1679 ;;		line 165 in file "main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  beacon_addre   16   12[BANK1 ] struct .[2]
  1684 ;;  adc_sonuc       2    0        unsigned int 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  2  131[COMMON] int 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 17F/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1695 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1697 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;Total ram usage:       17 bytes
  1699 ;; Hardware stack levels required when called:   11
  1700 ;; This function calls:
  1701 ;;		_Adc1_Start
  1702 ;;		_Adf_Lock
  1703 ;;		_Ax25_Send_Footer
  1704 ;;		_Ax25_Send_Header
  1705 ;;		_Ax25_Send_String
  1706 ;;		_Dac0_Start_Hold
  1707 ;;		_Delay_ms
  1708 ;;		_Gpio_Config
  1709 ;;		_Modem_Flush_Frame
  1710 ;;		_Modem_Setup
  1711 ;;		_Ptt_Off
  1712 ;;		_Ptt_On
  1713 ;;		_System_Start
  1714 ;;		_Timer1_Start
  1715 ;; This function is called by:
  1716 ;;		Startup code after reset
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           
  1721                           ;psect for function _main
  1722  06CF                     _main:	
  1723                           
  1724                           ;main.c: 166: unsigned int adc_sonuc;
  1725                           ;main.c: 167: System_Start();
  1726                           
  1727                           ;incstack = 0
  1728                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1729  06CF  318E  2667  3186   	fcall	_System_Start
  1730  06D2                     l132:	
  1731                           ;main.c: 168: while (!(OSCSTAT & (0x01))){}
  1732                           
  1733  06D2  0021               	movlb	1	; select bank1
  1734  06D3  1C1A               	btfss	26,0	;volatile
  1735  06D4  2ED2               	goto	l132
  1736                           
  1737                           ;main.c: 171: Gpio_Config();
  1738  06D5  318C  24AB  3186   	fcall	_Gpio_Config
  1739                           
  1740                           ;main.c: 173: Timer1_Start();
  1741  06D8  318C  249C  3186   	fcall	_Timer1_Start
  1742                           
  1743                           ;main.c: 175: Dac0_Start_Hold();
  1744  06DB  318C  242E  3186   	fcall	_Dac0_Start_Hold
  1745                           
  1746                           ;main.c: 177: Adc1_Start();
  1747  06DE  318C  2438  3186   	fcall	_Adc1_Start
  1748                           
  1749                           ;main.c: 179: PORTAbits.RA5 = 0;;
  1750  06E1  0020               	movlb	0	; select bank0
  1751  06E2  128C               	bcf	12,5	;volatile
  1752                           
  1753                           ;main.c: 180: Delay_ms(10);
  1754  06E3  300A               	movlw	10
  1755  06E4  00A0               	movwf	Delay_ms@time_to_delay
  1756  06E5  3000               	movlw	0
  1757  06E6  00A1               	movwf	Delay_ms@time_to_delay+1
  1758  06E7  318D  25AD  3186   	fcall	_Delay_ms
  1759                           
  1760                           ;main.c: 181: PORTAbits.RA4 = 1;;
  1761  06EA  0020               	movlb	0	; select bank0
  1762  06EB  160C               	bsf	12,4	;volatile
  1763                           
  1764                           ;main.c: 182: Delay_ms(10);
  1765  06EC  300A               	movlw	10
  1766  06ED  00A0               	movwf	Delay_ms@time_to_delay
  1767  06EE  3000               	movlw	0
  1768  06EF  00A1               	movwf	Delay_ms@time_to_delay+1
  1769  06F0  318D  25AD  3186   	fcall	_Delay_ms
  1770                           
  1771                           ;main.c: 183: PORTAbits.RA5 = 1;;
  1772  06F3  0020               	movlb	0	; select bank0
  1773  06F4  168C               	bsf	12,5	;volatile
  1774                           
  1775                           ;main.c: 184: Delay_ms(10);
  1776  06F5  300A               	movlw	10
  1777  06F6  00A0               	movwf	Delay_ms@time_to_delay
  1778  06F7  3000               	movlw	0
  1779  06F8  00A1               	movwf	Delay_ms@time_to_delay+1
  1780  06F9  318D  25AD  3186   	fcall	_Delay_ms
  1781                           
  1782                           ;main.c: 186: Delay_ms(200);
  1783  06FC  30C8               	movlw	200
  1784  06FD  0020               	movlb	0	; select bank0
  1785  06FE  00A0               	movwf	Delay_ms@time_to_delay
  1786  06FF  3000               	movlw	0
  1787  0700  00A1               	movwf	Delay_ms@time_to_delay+1
  1788  0701  318D  25AD  3186   	fcall	_Delay_ms
  1789                           
  1790                           ;main.c: 189: s_address beacon_address[2] = {{"CUBEYY", 5},{"CUBEXX", 6}};
  1791  0704  3038               	movlw	low main@F3178
  1792  0705  0086               	movwf	6
  1793  0706  3001               	movlw	high main@F3178
  1794  0707  0087               	movwf	7
  1795  0708  30E0               	movlw	low main@beacon_address
  1796  0709  0084               	movwf	4
  1797  070A  3000               	movlw	high main@beacon_address
  1798  070B  0085               	movwf	5
  1799  070C  3010               	movlw	16
  1800  070D  0020               	movlb	0	; select bank0
  1801  070E  00ED               	movwf	??_main
  1802  070F                     u2420:	
  1803  070F  0016               	moviw fsr1++
  1804  0710  001A               	movwi fsr0++
  1805  0711  0BED               	decfsz	??_main,f
  1806  0712  2F0F               	goto	u2420
  1807                           
  1808                           ;main.c: 191: Ax25_Send_Header(beacon_address,2);
  1809  0713  3002               	movlw	2
  1810  0714  00AC               	movwf	Ax25_Send_Header@num_addresses
  1811  0715  3000               	movlw	0
  1812  0716  00AD               	movwf	Ax25_Send_Header@num_addresses+1
  1813  0717  30E0               	movlw	main@beacon_address& (0+255)
  1814  0718  3181  21D6  3186   	fcall	_Ax25_Send_Header
  1815                           
  1816                           ;main.c: 192: Ax25_Send_String("HELLO");
  1817  071B  30BE               	movlw	low (STR_1| (0+32768))
  1818  071C  0020               	movlb	0	; select bank0
  1819  071D  00AD               	movwf	Ax25_Send_String@string
  1820  071E  3084               	movlw	high (STR_1| (0+32768))
  1821  071F  00AE               	movwf	Ax25_Send_String@string+1
  1822  0720  318D  2527  3186   	fcall	_Ax25_Send_String
  1823                           
  1824                           ;main.c: 193: Ax25_Send_Footer();
  1825  0723  318D  250C  3186   	fcall	_Ax25_Send_Footer
  1826                           
  1827                           ;main.c: 197: Modem_Setup();
  1828  0726  318C  2444  3186   	fcall	_Modem_Setup
  1829                           
  1830                           ;main.c: 198: Delay_ms(100);
  1831  0729  3064               	movlw	100
  1832  072A  0020               	movlb	0	; select bank0
  1833  072B  00A0               	movwf	Delay_ms@time_to_delay
  1834  072C  3000               	movlw	0
  1835  072D  00A1               	movwf	Delay_ms@time_to_delay+1
  1836  072E  318D  25AD  3186   	fcall	_Delay_ms
  1837                           
  1838                           ;main.c: 199: Adf_Lock();
  1839  0731  318F  278B  3186   	fcall	_Adf_Lock
  1840                           
  1841                           ;main.c: 201: Delay_ms(100);
  1842  0734  3064               	movlw	100
  1843  0735  0020               	movlb	0	; select bank0
  1844  0736  00A0               	movwf	Delay_ms@time_to_delay
  1845  0737  3000               	movlw	0
  1846  0738  00A1               	movwf	Delay_ms@time_to_delay+1
  1847  0739  318D  25AD  3186   	fcall	_Delay_ms
  1848                           
  1849                           ;main.c: 210: Ptt_On();
  1850  073C  318E  2631  3186   	fcall	_Ptt_On
  1851  073F                     l2459:	
  1852                           ;main.c: 213: while(1){
  1853                           
  1854                           
  1855                           ;main.c: 215: if(PTT_OFF){
  1856  073F  0021               	movlb	1	; select bank1
  1857  0740  084D               	movf	_PTT_OFF^(0+128),w
  1858  0741  1903               	btfsc	3,2
  1859  0742  2F48               	goto	l2465
  1860                           
  1861                           ;main.c: 216: Ptt_Off();
  1862  0743  318C  2470  3186   	fcall	_Ptt_Off
  1863                           
  1864                           ;main.c: 217: PTT_OFF = 0;
  1865  0746  0021               	movlb	1	; select bank1
  1866  0747  01CD               	clrf	_PTT_OFF^(0+128)
  1867  0748                     l2465:	
  1868                           
  1869                           ;main.c: 218: }
  1870                           ;main.c: 221: Modem_Flush_Frame();
  1871  0748  318D  2563  3186   	fcall	_Modem_Flush_Frame
  1872  074B                     l2467:	
  1873                           ;main.c: 222: while(MODEM_TRANSMITTING);
  1874                           
  1875  074B  0021               	movlb	1	; select bank1
  1876  074C  08CC               	movf	_MODEM_TRANSMITTING^(0+128),f
  1877  074D  1D03               	skipz
  1878  074E  2F4B               	goto	l2467
  1879                           
  1880                           ;main.c: 223: Delay_ms(2000);
  1881  074F  30D0               	movlw	208
  1882  0750  0020               	movlb	0	; select bank0
  1883  0751  00A0               	movwf	Delay_ms@time_to_delay
  1884  0752  3007               	movlw	7
  1885  0753  00A1               	movwf	Delay_ms@time_to_delay+1
  1886  0754  318D  25AD  3186   	fcall	_Delay_ms
  1887  0757  2F3F               	goto	l2459
  1888  0758                     __end_of_main:	
  1889                           ;main.c: 234: }
  1890                           ;main.c: 235: return (0);
  1891                           ;	Return value of _main is never used
  1892                           
  1893                           
  1894                           	psect	text1
  1895  0C9C                     __ptext1:	
  1896 ;; *************** function _Timer1_Start *****************
  1897 ;; Defined at:
  1898 ;;		line 263 in file "utility.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;		None               void
  1905 ;; Registers used:
  1906 ;;		wreg, status,2
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1916 ;;Total ram usage:        0 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    3
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _Timer1_Start
  1928  0C9C                     _Timer1_Start:	
  1929                           
  1930                           ;utility.c: 265: TMR1H = 0x00;
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in _Timer1_Start: [wreg+status,2]
  1934  0C9C  0020               	movlb	0	; select bank0
  1935  0C9D  0197               	clrf	23	;volatile
  1936                           
  1937                           ;utility.c: 266: TMR1L = 0x00;
  1938  0C9E  0196               	clrf	22	;volatile
  1939                           
  1940                           ;utility.c: 268: TMR1IE = 0;
  1941  0C9F  0021               	movlb	1	; select bank1
  1942  0CA0  1011               	bcf	17,0	;volatile
  1943                           
  1944                           ;utility.c: 271: CCPR1H = 0x03;
  1945  0CA1  3003               	movlw	3
  1946  0CA2  0025               	movlb	5	; select bank5
  1947  0CA3  0092               	movwf	18	;volatile
  1948                           
  1949                           ;utility.c: 272: CCPR1L = 0x41;
  1950  0CA4  3041               	movlw	65
  1951  0CA5  0091               	movwf	17	;volatile
  1952                           
  1953                           ;utility.c: 274: CCP1IF = 0;
  1954  0CA6  0020               	movlb	0	; select bank0
  1955  0CA7  1111               	bcf	17,2	;volatile
  1956                           
  1957                           ;utility.c: 276: CCP1IE = 1;
  1958  0CA8  0021               	movlb	1	; select bank1
  1959  0CA9  1511               	bsf	17,2	;volatile
  1960  0CAA  0008               	return
  1961  0CAB                     __end_of_Timer1_Start:	
  1962                           
  1963                           	psect	text2
  1964  0E67                     __ptext2:	
  1965 ;; *************** function _System_Start *****************
  1966 ;; Defined at:
  1967 ;;		line 94 in file "main.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;		None               void
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1984 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1985 ;;Total ram usage:        1 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    3
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           
  1996                           ;psect for function _System_Start
  1997  0E67                     _System_Start:	
  1998                           
  1999                           ;main.c: 97: OSCCON = 0x00;
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _System_Start: [wreg+status,2+status,0]
  2003  0E67  0021               	movlb	1	; select bank1
  2004  0E68  0199               	clrf	25	;volatile
  2005                           
  2006                           ;main.c: 98: OSCCON |= 0b11110000;
  2007  0E69  30F0               	movlw	240
  2008  0E6A  0020               	movlb	0	; select bank0
  2009  0E6B  00A0               	movwf	??_System_Start
  2010  0E6C  0820               	movf	??_System_Start,w
  2011  0E6D  0021               	movlb	1	; select bank1
  2012  0E6E  0499               	iorwf	25,f	;volatile
  2013                           
  2014                           ;main.c: 99: OSCTUNE = 0x00;
  2015  0E6F  0198               	clrf	24	;volatile
  2016                           
  2017                           ;main.c: 103: TMR0CS = 0;
  2018  0E70  1295               	bcf	21,5	;volatile
  2019                           
  2020                           ;main.c: 104: PSA = 1;
  2021  0E71  1595               	bsf	21,3	;volatile
  2022                           
  2023                           ;main.c: 109: TMR1ON = 1;
  2024  0E72  0020               	movlb	0	; select bank0
  2025  0E73  1418               	bsf	24,0	;volatile
  2026                           
  2027                           ;main.c: 110: TMR1GE = 0;
  2028  0E74  1399               	bcf	25,7	;volatile
  2029                           
  2030                           ;main.c: 113: TMR1CS1 = 0;
  2031  0E75  1398               	bcf	24,7	;volatile
  2032                           
  2033                           ;main.c: 114: TMR1CS0 = 0;
  2034  0E76  1318               	bcf	24,6	;volatile
  2035                           
  2036                           ;main.c: 117: T1CKPS1 = 1;
  2037  0E77  1698               	bsf	24,5	;volatile
  2038                           
  2039                           ;main.c: 118: T1CKPS0 = 1;
  2040  0E78  1618               	bsf	24,4	;volatile
  2041                           
  2042                           ;main.c: 121: CCP1M3 = 1;
  2043  0E79  0025               	movlb	5	; select bank5
  2044  0E7A  1593               	bsf	19,3	;volatile
  2045                           
  2046                           ;main.c: 122: CCP1M2 = 0;
  2047  0E7B  1113               	bcf	19,2	;volatile
  2048                           
  2049                           ;main.c: 123: CCP1M1 = 1;
  2050  0E7C  1493               	bsf	19,1	;volatile
  2051                           
  2052                           ;main.c: 124: CCP1M1 = 0;
  2053  0E7D  1093               	bcf	19,1	;volatile
  2054                           
  2055                           ;main.c: 129: DACOE = 1;
  2056  0E7E  0022               	movlb	2	; select bank2
  2057  0E7F  1698               	bsf	24,5	;volatile
  2058                           
  2059                           ;main.c: 130: DACPSS1 = 0;
  2060  0E80  1198               	bcf	24,3	;volatile
  2061                           
  2062                           ;main.c: 131: DACPSS0 = 0;
  2063  0E81  1118               	bcf	24,2	;volatile
  2064                           
  2065                           ;main.c: 132: DACNSS = 0;
  2066  0E82  1018               	bcf	24,0	;volatile
  2067                           
  2068                           ;main.c: 137: ANSA1 = 1;
  2069  0E83  0023               	movlb	3	; select bank3
  2070  0E84  148C               	bsf	12,1	;volatile
  2071                           
  2072                           ;main.c: 138: ADCON0 &= 0b10000011;
  2073  0E85  3083               	movlw	131
  2074  0E86  0020               	movlb	0	; select bank0
  2075  0E87  00A0               	movwf	??_System_Start
  2076  0E88  0820               	movf	??_System_Start,w
  2077  0E89  0021               	movlb	1	; select bank1
  2078  0E8A  059D               	andwf	29,f	;volatile
  2079                           
  2080                           ;main.c: 139: ADCON0 |= 0b00000100;
  2081  0E8B  151D               	bsf	29,2	;volatile
  2082                           
  2083                           ;main.c: 140: ADNREF = 0;
  2084  0E8C  111E               	bcf	30,2	;volatile
  2085                           
  2086                           ;main.c: 141: ADPREF1 = 0;
  2087  0E8D  109E               	bcf	30,1	;volatile
  2088                           
  2089                           ;main.c: 142: ADPREF0 = 0;
  2090  0E8E  101E               	bcf	30,0	;volatile
  2091                           
  2092                           ;main.c: 143: ADCS2 = 1;
  2093  0E8F  171E               	bsf	30,6	;volatile
  2094                           
  2095                           ;main.c: 144: ADCS1 = 1;
  2096  0E90  169E               	bsf	30,5	;volatile
  2097                           
  2098                           ;main.c: 145: ADCS0 = 0;
  2099  0E91  121E               	bcf	30,4	;volatile
  2100                           
  2101                           ;main.c: 146: ADFM = 1;
  2102  0E92  179E               	bsf	30,7	;volatile
  2103                           
  2104                           ;main.c: 151: TMR0IF = 0;
  2105  0E93  110B               	bcf	11,2	;volatile
  2106                           
  2107                           ;main.c: 152: TMR1IF = 0;
  2108  0E94  0020               	movlb	0	; select bank0
  2109  0E95  1011               	bcf	17,0	;volatile
  2110                           
  2111                           ;main.c: 153: CCP1IF = 0;
  2112  0E96  1111               	bcf	17,2	;volatile
  2113                           
  2114                           ;main.c: 154: ADIF = 0;
  2115  0E97  1311               	bcf	17,6	;volatile
  2116                           
  2117                           ;main.c: 158: INTCON |= 0xC0;
  2118  0E98  30C0               	movlw	192
  2119  0E99  00A0               	movwf	??_System_Start
  2120  0E9A  0820               	movf	??_System_Start,w
  2121  0E9B  048B               	iorwf	11,f	;volatile
  2122  0E9C  0008               	return
  2123  0E9D                     __end_of_System_Start:	
  2124                           
  2125                           	psect	text3
  2126  0C70                     __ptext3:	
  2127 ;; *************** function _Ptt_Off *****************
  2128 ;; Defined at:
  2129 ;;		line 349 in file "adf7012.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;		None               void
  2136 ;; Registers used:
  2137 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2147 ;;Total ram usage:        0 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    9
  2150 ;; This function calls:
  2151 ;;		_Adf_Write_Config
  2152 ;;		_Delay_ms
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _Ptt_Off
  2160  0C70                     _Ptt_Off:	
  2161                           
  2162                           ;adf7012.c: 351: adf_config.r3.pa_enable = 0;
  2163                           
  2164                           ;incstack = 0
  2165                           ; Regs used in _Ptt_Off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2166  0C70  0021               	movlb	1	; select bank1
  2167  0C71  01BA               	clrf	(_adf_config^(0+128)+26)
  2168                           
  2169                           ;adf7012.c: 352: adf_config.r2.power_amplifier_level = 0;
  2170  0C72  01B2               	clrf	(_adf_config^(0+128)+18)
  2171                           
  2172                           ;adf7012.c: 353: Adf_Write_Config();
  2173  0C73  318C  2456  318C   	fcall	_Adf_Write_Config
  2174                           
  2175                           ;adf7012.c: 354: Delay_ms(10);
  2176  0C76  300A               	movlw	10
  2177  0C77  0020               	movlb	0	; select bank0
  2178  0C78  00A0               	movwf	Delay_ms@time_to_delay
  2179  0C79  3000               	movlw	0
  2180  0C7A  00A1               	movwf	Delay_ms@time_to_delay+1
  2181  0C7B  318D  25AD         	fcall	_Delay_ms
  2182  0C7D  0008               	return
  2183  0C7E                     __end_of_Ptt_Off:	
  2184                           
  2185                           	psect	text4
  2186  0C44                     __ptext4:	
  2187 ;; *************** function _Modem_Setup *****************
  2188 ;; Defined at:
  2189 ;;		line 48 in file "audio_tone.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;		None
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;		None
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2207 ;;Total ram usage:        0 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:   10
  2210 ;; This function calls:
  2211 ;;		_Modem_Init
  2212 ;;		_Radio_Setup
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           
  2219                           ;psect for function _Modem_Setup
  2220  0C44                     _Modem_Setup:	
  2221                           
  2222                           ;audio_tone.c: 50: Modem_Init();
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _Modem_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2226  0C44  318C  24DC  318C   	fcall	_Modem_Init
  2227                           
  2228                           ;audio_tone.c: 51: Radio_Setup();
  2229  0C47  318C  2462         	fcall	_Radio_Setup
  2230  0C49  0008               	return
  2231  0C4A                     __end_of_Modem_Setup:	
  2232                           
  2233                           	psect	text5
  2234  0C62                     __ptext5:	
  2235 ;; *************** function _Radio_Setup *****************
  2236 ;; Defined at:
  2237 ;;		line 306 in file "adf7012.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;		None               void
  2244 ;; Registers used:
  2245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2255 ;;Total ram usage:        0 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    9
  2258 ;; This function calls:
  2259 ;;		_Adf_Reset_Config
  2260 ;;		_Adf_Write_Config
  2261 ;;		_Delay_ms
  2262 ;; This function is called by:
  2263 ;;		_Modem_Setup
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _Radio_Setup
  2269  0C62                     _Radio_Setup:	
  2270                           
  2271                           ;adf7012.c: 309: Adf_Reset_Config();
  2272                           
  2273                           ;incstack = 0
  2274                           ; Regs used in _Radio_Setup: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2275  0C62  318C  248D  318C   	fcall	_Adf_Reset_Config
  2276                           
  2277                           ;adf7012.c: 311: Adf_Write_Config();
  2278  0C65  318C  2456  318C   	fcall	_Adf_Write_Config
  2279                           
  2280                           ;adf7012.c: 313: Delay_ms(10);
  2281  0C68  300A               	movlw	10
  2282  0C69  0020               	movlb	0	; select bank0
  2283  0C6A  00A0               	movwf	Delay_ms@time_to_delay
  2284  0C6B  3000               	movlw	0
  2285  0C6C  00A1               	movwf	Delay_ms@time_to_delay+1
  2286  0C6D  318D  25AD         	fcall	_Delay_ms
  2287  0C6F  0008               	return
  2288  0C70                     __end_of_Radio_Setup:	
  2289                           
  2290                           	psect	text6
  2291  0C8D                     __ptext6:	
  2292 ;; *************** function _Adf_Reset_Config *****************
  2293 ;; Defined at:
  2294 ;;		line 86 in file "adf7012.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;		None               void
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0, pclath, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    6
  2315 ;; This function calls:
  2316 ;;		_Adf_Reset
  2317 ;;		_Adf_Reset_Register_One
  2318 ;;		_Adf_Reset_Register_Three
  2319 ;;		_Adf_Reset_Register_Two
  2320 ;;		_Adf_Reset_Register_Zero
  2321 ;; This function is called by:
  2322 ;;		_Radio_Setup
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           
  2327                           ;psect for function _Adf_Reset_Config
  2328  0C8D                     _Adf_Reset_Config:	
  2329                           
  2330                           ;adf7012.c: 89: Adf_Reset_Register_Zero();
  2331                           
  2332                           ;incstack = 0
  2333                           ; Regs used in _Adf_Reset_Config: [wreg+status,2+status,0+pclath+cstack]
  2334  0C8D  318D  2544  318C   	fcall	_Adf_Reset_Register_Zero
  2335                           
  2336                           ;adf7012.c: 90: Adf_Reset_Register_One();
  2337  0C90  318C  24CB  318C   	fcall	_Adf_Reset_Register_One
  2338                           
  2339                           ;adf7012.c: 91: Adf_Reset_Register_Two();
  2340  0C93  318C  24F4  318C   	fcall	_Adf_Reset_Register_Two
  2341                           
  2342                           ;adf7012.c: 92: Adf_Reset_Register_Three();
  2343  0C96  318D  2587  318C   	fcall	_Adf_Reset_Register_Three
  2344                           
  2345                           ;adf7012.c: 94: Adf_Reset();
  2346  0C99  3183  23EE         	fcall	_Adf_Reset
  2347  0C9B  0008               	return
  2348  0C9C                     __end_of_Adf_Reset_Config:	
  2349                           
  2350                           	psect	text7
  2351  0D44                     __ptext7:	
  2352 ;; *************** function _Adf_Reset_Register_Zero *****************
  2353 ;; Defined at:
  2354 ;;		line 98 in file "adf7012.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;		None
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;		None               void
  2361 ;; Registers used:
  2362 ;;		wreg, status,2
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2371 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2372 ;;Total ram usage:        1 bytes
  2373 ;; Hardware stack levels used:    1
  2374 ;; Hardware stack levels required when called:    3
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_Adf_Reset_Config
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _Adf_Reset_Register_Zero
  2384  0D44                     _Adf_Reset_Register_Zero:	
  2385                           
  2386                           ;adf7012.c: 99: adf_config.r0.frequency_error_correction = 0;
  2387                           
  2388                           ;incstack = 0
  2389                           ; Regs used in _Adf_Reset_Register_Zero: [wreg+status,2]
  2390  0D44  3000               	movlw	0
  2391  0D45  0021               	movlb	1	; select bank1
  2392  0D46  00A3               	movwf	(_adf_config+3)^(0+128)
  2393  0D47  3000               	movlw	0
  2394  0D48  00A2               	movwf	(_adf_config+2)^(0+128)
  2395  0D49  3000               	movlw	0
  2396  0D4A  00A1               	movwf	(_adf_config+1)^(0+128)
  2397  0D4B  3000               	movlw	0
  2398  0D4C  00A0               	movwf	_adf_config^(0+128)
  2399                           
  2400                           ;adf7012.c: 100: adf_config.r0.r_divider = 15;
  2401  0D4D  300F               	movlw	15
  2402  0D4E  0020               	movlb	0	; select bank0
  2403  0D4F  00A0               	movwf	??_Adf_Reset_Register_Zero
  2404  0D50  0820               	movf	??_Adf_Reset_Register_Zero,w
  2405  0D51  0021               	movlb	1	; select bank1
  2406  0D52  00A4               	movwf	(_adf_config^(0+128)+4)
  2407                           
  2408                           ;adf7012.c: 101: adf_config.r0.crystal_doubler = 0;
  2409  0D53  01A5               	clrf	(_adf_config^(0+128)+5)
  2410                           
  2411                           ;adf7012.c: 102: adf_config.r0.crystal_oscillator_disable = 0;
  2412  0D54  01A6               	clrf	(_adf_config^(0+128)+6)
  2413                           
  2414                           ;adf7012.c: 103: adf_config.r0.clock_out_divider = 2;
  2415  0D55  3002               	movlw	2
  2416  0D56  0020               	movlb	0	; select bank0
  2417  0D57  00A0               	movwf	??_Adf_Reset_Register_Zero
  2418  0D58  0820               	movf	??_Adf_Reset_Register_Zero,w
  2419  0D59  0021               	movlb	1	; select bank1
  2420  0D5A  00A7               	movwf	(_adf_config^(0+128)+7)
  2421                           
  2422                           ;adf7012.c: 104: adf_config.r0.vco_adjust = 0;
  2423  0D5B  01A8               	clrf	(_adf_config^(0+128)+8)
  2424                           
  2425                           ;adf7012.c: 105: adf_config.r0.output_divider = 2;
  2426  0D5C  3002               	movlw	2
  2427  0D5D  0020               	movlb	0	; select bank0
  2428  0D5E  00A0               	movwf	??_Adf_Reset_Register_Zero
  2429  0D5F  0820               	movf	??_Adf_Reset_Register_Zero,w
  2430  0D60  0021               	movlb	1	; select bank1
  2431  0D61  00A9               	movwf	(_adf_config^(0+128)+9)
  2432  0D62  0008               	return
  2433  0D63                     __end_of_Adf_Reset_Register_Zero:	
  2434                           
  2435                           	psect	text8
  2436  0CF4                     __ptext8:	
  2437 ;; *************** function _Adf_Reset_Register_Two *****************
  2438 ;; Defined at:
  2439 ;;		line 114 in file "adf7012.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;		None
  2442 ;; Auto vars:     Size  Location     Type
  2443 ;;		None
  2444 ;; Return value:  Size  Location     Type
  2445 ;;		None               void
  2446 ;; Registers used:
  2447 ;;		wreg, status,2
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2455 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2456 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2457 ;;Total ram usage:        1 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    3
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_Adf_Reset_Config
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _Adf_Reset_Register_Two
  2469  0CF4                     _Adf_Reset_Register_Two:	
  2470                           
  2471                           ;adf7012.c: 115: adf_config.r2.mod_control = 3;
  2472                           
  2473                           ;incstack = 0
  2474                           ; Regs used in _Adf_Reset_Register_Two: [wreg+status,2]
  2475  0CF4  3003               	movlw	3
  2476  0CF5  0020               	movlb	0	; select bank0
  2477  0CF6  00A0               	movwf	??_Adf_Reset_Register_Two
  2478  0CF7  0820               	movf	??_Adf_Reset_Register_Two,w
  2479  0CF8  0021               	movlb	1	; select bank1
  2480  0CF9  00B0               	movwf	(_adf_config^(0+128)+16)
  2481                           
  2482                           ;adf7012.c: 116: adf_config.r2.gook = 0;
  2483  0CFA  01B1               	clrf	(_adf_config^(0+128)+17)
  2484                           
  2485                           ;adf7012.c: 117: adf_config.r2.power_amplifier_level = 15;
  2486  0CFB  300F               	movlw	15
  2487  0CFC  0020               	movlb	0	; select bank0
  2488  0CFD  00A0               	movwf	??_Adf_Reset_Register_Two
  2489  0CFE  0820               	movf	??_Adf_Reset_Register_Two,w
  2490  0CFF  0021               	movlb	1	; select bank1
  2491  0D00  00B2               	movwf	(_adf_config^(0+128)+18)
  2492                           
  2493                           ;adf7012.c: 118: adf_config.r2.modulation_deviation = 16;
  2494  0D01  3000               	movlw	0
  2495  0D02  00B6               	movwf	((_adf_config+3)^(0+128)+19)
  2496  0D03  3000               	movlw	0
  2497  0D04  00B5               	movwf	((_adf_config+2)^(0+128)+19)
  2498  0D05  3000               	movlw	0
  2499  0D06  00B4               	movwf	((_adf_config+1)^(0+128)+19)
  2500  0D07  3010               	movlw	16
  2501  0D08  00B3               	movwf	(_adf_config^(0+128)+19)
  2502                           
  2503                           ;adf7012.c: 119: adf_config.r2.gfsk_modulation_control = 0;
  2504  0D09  01B7               	clrf	(_adf_config^(0+128)+23)
  2505                           
  2506                           ;adf7012.c: 120: adf_config.r2.index_counter = 0;
  2507  0D0A  01B8               	clrf	(_adf_config^(0+128)+24)
  2508  0D0B  0008               	return
  2509  0D0C                     __end_of_Adf_Reset_Register_Two:	
  2510                           
  2511                           	psect	text9
  2512  0D87                     __ptext9:	
  2513 ;; *************** function _Adf_Reset_Register_Three *****************
  2514 ;; Defined at:
  2515 ;;		line 123 in file "adf7012.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;		None
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;		None
  2520 ;; Return value:  Size  Location     Type
  2521 ;;		None               void
  2522 ;; Registers used:
  2523 ;;		wreg, status,2
  2524 ;; Tracked objects:
  2525 ;;		On entry : 0/0
  2526 ;;		On exit  : 0/0
  2527 ;;		Unchanged: 0/0
  2528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2531 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2532 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2533 ;;Total ram usage:        1 bytes
  2534 ;; Hardware stack levels used:    1
  2535 ;; Hardware stack levels required when called:    3
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_Adf_Reset_Config
  2540 ;; This function uses a non-reentrant model
  2541 ;;
  2542                           
  2543                           
  2544                           ;psect for function _Adf_Reset_Register_Three
  2545  0D87                     _Adf_Reset_Register_Three:	
  2546                           
  2547                           ;adf7012.c: 124: adf_config.r3.pll_enable = 0;
  2548                           
  2549                           ;incstack = 0
  2550                           ; Regs used in _Adf_Reset_Register_Three: [wreg+status,2]
  2551  0D87  0021               	movlb	1	; select bank1
  2552  0D88  01B9               	clrf	(_adf_config^(0+128)+25)
  2553                           
  2554                           ;adf7012.c: 125: adf_config.r3.pa_enable = 0;
  2555  0D89  01BA               	clrf	(_adf_config^(0+128)+26)
  2556                           
  2557                           ;adf7012.c: 126: adf_config.r3.clkout_enable = 1;
  2558  0D8A  01BB               	clrf	(_adf_config^(0+128)+27)
  2559  0D8B  0ABB               	incf	(_adf_config^(0+128)+27),f
  2560                           
  2561                           ;adf7012.c: 127: adf_config.r3.data_invert = 1;
  2562  0D8C  01BC               	clrf	(_adf_config^(0+128)+28)
  2563  0D8D  0ABC               	incf	(_adf_config^(0+128)+28),f
  2564                           
  2565                           ;adf7012.c: 128: adf_config.r3.charge_pump_current = 3;
  2566  0D8E  3003               	movlw	3
  2567  0D8F  0020               	movlb	0	; select bank0
  2568  0D90  00A0               	movwf	??_Adf_Reset_Register_Three
  2569  0D91  0820               	movf	??_Adf_Reset_Register_Three,w
  2570  0D92  0021               	movlb	1	; select bank1
  2571  0D93  00BD               	movwf	(_adf_config^(0+128)+29)
  2572                           
  2573                           ;adf7012.c: 129: adf_config.r3.bleed_up = 0;
  2574  0D94  01BE               	clrf	(_adf_config^(0+128)+30)
  2575                           
  2576                           ;adf7012.c: 130: adf_config.r3.bleed_down = 0;
  2577  0D95  01BF               	clrf	(_adf_config^(0+128)+31)
  2578                           
  2579                           ;adf7012.c: 131: adf_config.r3.vco_disable = 0;
  2580  0D96  01C0               	clrf	(_adf_config^(0+128)+32)
  2581                           
  2582                           ;adf7012.c: 133: adf_config.r3.muxout = 3;
  2583  0D97  3003               	movlw	3
  2584  0D98  0020               	movlb	0	; select bank0
  2585  0D99  00A0               	movwf	??_Adf_Reset_Register_Three
  2586  0D9A  0820               	movf	??_Adf_Reset_Register_Three,w
  2587  0D9B  0021               	movlb	1	; select bank1
  2588  0D9C  00C1               	movwf	(_adf_config^(0+128)+33)
  2589                           
  2590                           ;adf7012.c: 135: adf_config.r3.ld_precision = 0;
  2591  0D9D  01C2               	clrf	(_adf_config^(0+128)+34)
  2592                           
  2593                           ;adf7012.c: 136: adf_config.r3.vco_bias = 6;
  2594  0D9E  3006               	movlw	6
  2595  0D9F  0020               	movlb	0	; select bank0
  2596  0DA0  00A0               	movwf	??_Adf_Reset_Register_Three
  2597  0DA1  0820               	movf	??_Adf_Reset_Register_Three,w
  2598  0DA2  0021               	movlb	1	; select bank1
  2599  0DA3  00C3               	movwf	(_adf_config^(0+128)+35)
  2600                           
  2601                           ;adf7012.c: 137: adf_config.r3.pa_bias = 4;
  2602  0DA4  3004               	movlw	4
  2603  0DA5  0020               	movlb	0	; select bank0
  2604  0DA6  00A0               	movwf	??_Adf_Reset_Register_Three
  2605  0DA7  0820               	movf	??_Adf_Reset_Register_Three,w
  2606  0DA8  0021               	movlb	1	; select bank1
  2607  0DA9  00C4               	movwf	(_adf_config^(0+128)+36)
  2608                           
  2609                           ;adf7012.c: 138: adf_config.r3.pll_test_mode = 0;
  2610  0DAA  01C5               	clrf	(_adf_config^(0+128)+37)
  2611                           
  2612                           ;adf7012.c: 139: adf_config.r3.sd_test_mode = 0;
  2613  0DAB  01C6               	clrf	(_adf_config^(0+128)+38)
  2614  0DAC  0008               	return
  2615  0DAD                     __end_of_Adf_Reset_Register_Three:	
  2616                           
  2617                           	psect	text10
  2618  0CCB                     __ptext10:	
  2619 ;; *************** function _Adf_Reset_Register_One *****************
  2620 ;; Defined at:
  2621 ;;		line 108 in file "adf7012.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;		None               void
  2628 ;; Registers used:
  2629 ;;		wreg
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2639 ;;Total ram usage:        1 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    3
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_Adf_Reset_Config
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           
  2650                           ;psect for function _Adf_Reset_Register_One
  2651  0CCB                     _Adf_Reset_Register_One:	
  2652                           
  2653                           ;adf7012.c: 109: adf_config.r1.integer_n = 109;
  2654                           
  2655                           ;incstack = 0
  2656                           ; Regs used in _Adf_Reset_Register_One: [wreg]
  2657  0CCB  306D               	movlw	109
  2658  0CCC  0020               	movlb	0	; select bank0
  2659  0CCD  00A0               	movwf	??_Adf_Reset_Register_One
  2660  0CCE  0820               	movf	??_Adf_Reset_Register_One,w
  2661  0CCF  0021               	movlb	1	; select bank1
  2662  0CD0  00AE               	movwf	(_adf_config^(0+128)+14)
  2663                           
  2664                           ;adf7012.c: 110: adf_config.r1.fractional_n = 0;
  2665  0CD1  3000               	movlw	0
  2666  0CD2  00AD               	movwf	((_adf_config+3)^(0+128)+10)
  2667  0CD3  3000               	movlw	0
  2668  0CD4  00AC               	movwf	((_adf_config+2)^(0+128)+10)
  2669  0CD5  3000               	movlw	0
  2670  0CD6  00AB               	movwf	((_adf_config+1)^(0+128)+10)
  2671  0CD7  3000               	movlw	0
  2672  0CD8  00AA               	movwf	(_adf_config^(0+128)+10)
  2673                           
  2674                           ;adf7012.c: 111: adf_config.r1.prescaler = 1;
  2675  0CD9  01AF               	clrf	(_adf_config^(0+128)+15)
  2676  0CDA  0AAF               	incf	(_adf_config^(0+128)+15),f
  2677  0CDB  0008               	return
  2678  0CDC                     __end_of_Adf_Reset_Register_One:	
  2679                           
  2680                           	psect	text11
  2681  03EE                     __ptext11:	
  2682 ;; *************** function _Adf_Reset *****************
  2683 ;; Defined at:
  2684 ;;		line 142 in file "adf7012.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;		None               void
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, pclath, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    5
  2705 ;; This function calls:
  2706 ;;		_Delay_ms
  2707 ;; This function is called by:
  2708 ;;		_Adf_Reset_Config
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           
  2713                           ;psect for function _Adf_Reset
  2714  03EE                     _Adf_Reset:	
  2715                           
  2716                           ;adf7012.c: 144: PORTAbits.RA5 = 0;;
  2717                           
  2718                           ;incstack = 0
  2719                           ; Regs used in _Adf_Reset: [wreg+status,2+status,0+pclath+cstack]
  2720  03EE  0020               	movlb	0	; select bank0
  2721  03EF  128C               	bcf	12,5	;volatile
  2722                           
  2723                           ;adf7012.c: 145: Delay_ms(10);
  2724  03F0  300A               	movlw	10
  2725  03F1  00A0               	movwf	Delay_ms@time_to_delay
  2726  03F2  3000               	movlw	0
  2727  03F3  00A1               	movwf	Delay_ms@time_to_delay+1
  2728  03F4  318D  25AD  3183   	fcall	_Delay_ms
  2729                           
  2730                           ;adf7012.c: 146: PORTAbits.RA5 = 1;;
  2731  03F7  0020               	movlb	0	; select bank0
  2732  03F8  168C               	bsf	12,5	;volatile
  2733                           
  2734                           ;adf7012.c: 147: Delay_ms(10);
  2735  03F9  300A               	movlw	10
  2736  03FA  00A0               	movwf	Delay_ms@time_to_delay
  2737  03FB  3000               	movlw	0
  2738  03FC  00A1               	movwf	Delay_ms@time_to_delay+1
  2739  03FD  318D  25AD         	fcall	_Delay_ms
  2740  03FF  0008               	return
  2741  0400                     __end_of_Adf_Reset:	
  2742                           
  2743                           	psect	text12
  2744  0CDC                     __ptext12:	
  2745 ;; *************** function _Modem_Init *****************
  2746 ;; Defined at:
  2747 ;;		line 42 in file "audio_tone.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;		None
  2752 ;; Return value:  Size  Location     Type
  2753 ;;		None               void
  2754 ;; Registers used:
  2755 ;;		wreg
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2764 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2765 ;;Total ram usage:        1 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    3
  2768 ;; This function calls:
  2769 ;;		Nothing
  2770 ;; This function is called by:
  2771 ;;		_Modem_Setup
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _Modem_Init
  2777  0CDC                     _Modem_Init:	
  2778                           
  2779                           ;audio_tone.c: 43: SAMPLES_PER_BAUD = 26;
  2780                           
  2781                           ;incstack = 0
  2782                           ; Regs used in _Modem_Init: [wreg]
  2783  0CDC  301A               	movlw	26
  2784  0CDD  0020               	movlb	0	; select bank0
  2785  0CDE  00A0               	movwf	??_Modem_Init
  2786  0CDF  0820               	movf	??_Modem_Init,w
  2787  0CE0  0021               	movlb	1	; select bank1
  2788  0CE1  00CE               	movwf	_SAMPLES_PER_BAUD^(0+128)
  2789                           
  2790                           ;audio_tone.c: 44: PHASE_DELTA_1200 = 7;
  2791  0CE2  3000               	movlw	0
  2792  0CE3  0022               	movlb	2	; select bank2
  2793  0CE4  00A7               	movwf	(_PHASE_DELTA_1200+3)^(0+256)
  2794  0CE5  3000               	movlw	0
  2795  0CE6  00A6               	movwf	(_PHASE_DELTA_1200+2)^(0+256)
  2796  0CE7  3000               	movlw	0
  2797  0CE8  00A5               	movwf	(_PHASE_DELTA_1200+1)^(0+256)
  2798  0CE9  3007               	movlw	7
  2799  0CEA  00A4               	movwf	_PHASE_DELTA_1200^(0+256)
  2800                           
  2801                           ;audio_tone.c: 45: PHASE_DELTA_2200 = 13;
  2802  0CEB  3000               	movlw	0
  2803  0CEC  00AB               	movwf	(_PHASE_DELTA_2200+3)^(0+256)
  2804  0CED  3000               	movlw	0
  2805  0CEE  00AA               	movwf	(_PHASE_DELTA_2200+2)^(0+256)
  2806  0CEF  3000               	movlw	0
  2807  0CF0  00A9               	movwf	(_PHASE_DELTA_2200+1)^(0+256)
  2808  0CF1  300D               	movlw	13
  2809  0CF2  00A8               	movwf	_PHASE_DELTA_2200^(0+256)
  2810  0CF3  0008               	return
  2811  0CF4                     __end_of_Modem_Init:	
  2812                           
  2813                           	psect	text13
  2814  0D63                     __ptext13:	
  2815 ;; *************** function _Modem_Flush_Frame *****************
  2816 ;; Defined at:
  2817 ;;		line 65 in file "audio_tone.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;		None
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;		None               void
  2824 ;; Registers used:
  2825 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2835 ;;Total ram usage:        1 bytes
  2836 ;; Hardware stack levels used:    1
  2837 ;; Hardware stack levels required when called:   10
  2838 ;; This function calls:
  2839 ;;		_Delay_ms
  2840 ;;		_Ptt_On
  2841 ;;		_Timer0_Start
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;;		_Ax25_Flush_Frame
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848                           
  2849                           ;psect for function _Modem_Flush_Frame
  2850  0D63                     _Modem_Flush_Frame:	
  2851                           
  2852                           ;audio_tone.c: 67: phase_delta = PHASE_DELTA_1200;
  2853                           
  2854                           ;incstack = 0
  2855                           ; Regs used in _Modem_Flush_Frame: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2856  0D63  0022               	movlb	2	; select bank2
  2857  0D64  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  2858  0D65  0020               	movlb	0	; select bank0
  2859  0D66  00EC               	movwf	??_Modem_Flush_Frame
  2860  0D67  086C               	movf	??_Modem_Flush_Frame,w
  2861  0D68  0021               	movlb	1	; select bank1
  2862  0D69  00D1               	movwf	_phase_delta^(0+128)
  2863                           
  2864                           ;audio_tone.c: 68: phase = 0;
  2865  0D6A  01FD               	clrf	_phase
  2866                           
  2867                           ;audio_tone.c: 69: packet_pos = 0;
  2868  0D6B  3000               	movlw	0
  2869  0D6C  0022               	movlb	2	; select bank2
  2870  0D6D  00AF               	movwf	(_packet_pos+3)^(0+256)
  2871  0D6E  3000               	movlw	0
  2872  0D6F  00AE               	movwf	(_packet_pos+2)^(0+256)
  2873  0D70  3000               	movlw	0
  2874  0D71  00AD               	movwf	(_packet_pos+1)^(0+256)
  2875  0D72  3000               	movlw	0
  2876  0D73  00AC               	movwf	_packet_pos^(0+256)
  2877                           
  2878                           ;audio_tone.c: 70: current_sample_in_baud = 0;
  2879  0D74  0020               	movlb	0	; select bank0
  2880  0D75  01EF               	clrf	_current_sample_in_baud
  2881                           
  2882                           ;audio_tone.c: 71: MODEM_TRANSMITTING = 1;
  2883  0D76  0021               	movlb	1	; select bank1
  2884  0D77  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  2885  0D78  0ACC               	incf	_MODEM_TRANSMITTING^(0+128),f
  2886                           
  2887                           ;audio_tone.c: 81: Ptt_On();
  2888  0D79  318E  2631  318D   	fcall	_Ptt_On
  2889                           
  2890                           ;audio_tone.c: 83: Delay_ms(100);
  2891  0D7C  3064               	movlw	100
  2892  0D7D  0020               	movlb	0	; select bank0
  2893  0D7E  00A0               	movwf	Delay_ms@time_to_delay
  2894  0D7F  3000               	movlw	0
  2895  0D80  00A1               	movwf	Delay_ms@time_to_delay+1
  2896  0D81  318D  25AD  318D   	fcall	_Delay_ms
  2897                           
  2898                           ;audio_tone.c: 84: Timer0_Start();
  2899  0D84  318C  2433         	fcall	_Timer0_Start
  2900  0D86  0008               	return
  2901  0D87                     __end_of_Modem_Flush_Frame:	
  2902                           
  2903                           	psect	text14
  2904  0C33                     __ptext14:	
  2905 ;; *************** function _Timer0_Start *****************
  2906 ;; Defined at:
  2907 ;;		line 253 in file "utility.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;		None               void
  2914 ;; Registers used:
  2915 ;;		status,2
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    3
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_Modem_Flush_Frame
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _Timer0_Start
  2937  0C33                     _Timer0_Start:	
  2938                           
  2939                           ;utility.c: 254: TMR0 = 0x00;
  2940                           
  2941                           ;incstack = 0
  2942                           ; Regs used in _Timer0_Start: [status,2]
  2943  0C33  0020               	movlb	0	; select bank0
  2944  0C34  0195               	clrf	21	;volatile
  2945                           
  2946                           ;utility.c: 255: TMR0IF = 0;
  2947  0C35  110B               	bcf	11,2	;volatile
  2948                           
  2949                           ;utility.c: 256: TMR0IE = 1;
  2950  0C36  168B               	bsf	11,5	;volatile
  2951  0C37  0008               	return
  2952  0C38                     __end_of_Timer0_Start:	
  2953                           
  2954                           	psect	text15
  2955  0E31                     __ptext15:	
  2956 ;; *************** function _Ptt_On *****************
  2957 ;; Defined at:
  2958 ;;		line 317 in file "adf7012.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;		None
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      unsigned char 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2974 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;Total ram usage:        1 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    9
  2979 ;; This function calls:
  2980 ;;		_Adf_Write_Config
  2981 ;;		_Delay_ms
  2982 ;;		_Read_Adf7012_Muxout
  2983 ;; This function is called by:
  2984 ;;		_main
  2985 ;;		_Modem_Flush_Frame
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function _Ptt_On
  2991  0E31                     _Ptt_On:	
  2992                           
  2993                           ;adf7012.c: 322: adf_config.r3.pa_enable = 0;
  2994                           
  2995                           ;incstack = 0
  2996                           ; Regs used in _Ptt_On: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2997  0E31  0021               	movlb	1	; select bank1
  2998  0E32  01BA               	clrf	(_adf_config^(0+128)+26)
  2999                           
  3000                           ;adf7012.c: 323: adf_config.r2.power_amplifier_level = 0;
  3001  0E33  01B2               	clrf	(_adf_config^(0+128)+18)
  3002                           
  3003                           ;adf7012.c: 324: adf_config.r3.muxout = 3;
  3004  0E34  3003               	movlw	3
  3005  0E35  0020               	movlb	0	; select bank0
  3006  0E36  00EB               	movwf	??_Ptt_On
  3007  0E37  086B               	movf	??_Ptt_On,w
  3008  0E38  0021               	movlb	1	; select bank1
  3009  0E39  00C1               	movwf	(_adf_config^(0+128)+33)
  3010                           
  3011                           ;adf7012.c: 326: Adf_Write_Config();
  3012  0E3A  318C  2456  318E   	fcall	_Adf_Write_Config
  3013                           
  3014                           ;adf7012.c: 327: Delay_ms(10);
  3015  0E3D  300A               	movlw	10
  3016  0E3E  0020               	movlb	0	; select bank0
  3017  0E3F  00A0               	movwf	Delay_ms@time_to_delay
  3018  0E40  3000               	movlw	0
  3019  0E41  00A1               	movwf	Delay_ms@time_to_delay+1
  3020  0E42  318D  25AD  318E   	fcall	_Delay_ms
  3021                           
  3022                           ;adf7012.c: 331: if (!Read_Adf7012_Muxout())
  3023  0E45  318C  247E  318E   	fcall	_Read_Adf7012_Muxout
  3024  0E48  3800               	iorlw	0
  3025  0E49  1903               	btfsc	3,2
  3026  0E4A  0008               	return
  3027                           
  3028                           ;adf7012.c: 335: else
  3029                           ;adf7012.c: 336: {
  3030                           ;adf7012.c: 338: adf_config.r3.pa_enable = 1;
  3031                           
  3032                           ;adf7012.c: 334: }
  3033                           
  3034                           ;adf7012.c: 332: {
  3035                           ;adf7012.c: 333: return 0;
  3036                           ;	Return value of _Ptt_On is never used
  3037  0E4B  0021               	movlb	1	; select bank1
  3038  0E4C  01BA               	clrf	(_adf_config^(0+128)+26)
  3039  0E4D  0ABA               	incf	(_adf_config^(0+128)+26),f
  3040                           
  3041                           ;adf7012.c: 339: adf_config.r2.power_amplifier_level = 63;
  3042  0E4E  303F               	movlw	63
  3043  0E4F  0020               	movlb	0	; select bank0
  3044  0E50  00EB               	movwf	??_Ptt_On
  3045  0E51  086B               	movf	??_Ptt_On,w
  3046  0E52  0021               	movlb	1	; select bank1
  3047  0E53  00B2               	movwf	(_adf_config^(0+128)+18)
  3048                           
  3049                           ;adf7012.c: 341: Delay_ms(10);
  3050  0E54  300A               	movlw	10
  3051  0E55  0020               	movlb	0	; select bank0
  3052  0E56  00A0               	movwf	Delay_ms@time_to_delay
  3053  0E57  3000               	movlw	0
  3054  0E58  00A1               	movwf	Delay_ms@time_to_delay+1
  3055  0E59  318D  25AD  318E   	fcall	_Delay_ms
  3056                           
  3057                           ;adf7012.c: 342: Adf_Write_Config();
  3058  0E5C  318C  2456  318E   	fcall	_Adf_Write_Config
  3059                           
  3060                           ;adf7012.c: 343: Delay_ms(1);
  3061  0E5F  3001               	movlw	1
  3062  0E60  0020               	movlb	0	; select bank0
  3063  0E61  00A0               	movwf	Delay_ms@time_to_delay
  3064  0E62  3000               	movlw	0
  3065  0E63  00A1               	movwf	Delay_ms@time_to_delay+1
  3066  0E64  318D  25AD         	fcall	_Delay_ms
  3067                           
  3068                           ;adf7012.c: 345: return 1;
  3069                           ;	Return value of _Ptt_On is never used
  3070  0E66  0008               	return
  3071  0E67                     __end_of_Ptt_On:	
  3072                           
  3073                           	psect	text16
  3074  0CAB                     __ptext16:	
  3075 ;; *************** function _Gpio_Config *****************
  3076 ;; Defined at:
  3077 ;;		line 33 in file "utility.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      unsigned char 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;Total ram usage:        1 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    3
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_main
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _Gpio_Config
  3107  0CAB                     _Gpio_Config:	
  3108                           
  3109                           ;utility.c: 36: TRISA |= 0b00000010;
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in _Gpio_Config: [wreg+status,2+status,0]
  3113  0CAB  0021               	movlb	1	; select bank1
  3114  0CAC  148C               	bsf	12,1	;volatile
  3115                           
  3116                           ;utility.c: 37: TRISA &= 0b11001011;
  3117  0CAD  30CB               	movlw	203
  3118  0CAE  0020               	movlb	0	; select bank0
  3119  0CAF  00A0               	movwf	??_Gpio_Config
  3120  0CB0  0820               	movf	??_Gpio_Config,w
  3121  0CB1  0021               	movlb	1	; select bank1
  3122  0CB2  058C               	andwf	12,f	;volatile
  3123                           
  3124                           ;utility.c: 38: TRISC |= 0b00100000;
  3125  0CB3  168E               	bsf	14,5	;volatile
  3126                           
  3127                           ;utility.c: 39: TRISC &= 0b11100000;
  3128  0CB4  30E0               	movlw	224
  3129  0CB5  0020               	movlb	0	; select bank0
  3130  0CB6  00A0               	movwf	??_Gpio_Config
  3131  0CB7  0820               	movf	??_Gpio_Config,w
  3132  0CB8  0021               	movlb	1	; select bank1
  3133  0CB9  058E               	andwf	14,f	;volatile
  3134  0CBA  0008               	return
  3135  0CBB                     __end_of_Gpio_Config:	
  3136                           ;utility.c: 41: return 1;
  3137                           ;	Return value of _Gpio_Config is never used
  3138                           
  3139                           
  3140                           	psect	text17
  3141  0D27                     __ptext17:	
  3142 ;; *************** function _Ax25_Send_String *****************
  3143 ;; Defined at:
  3144 ;;		line 94 in file "ax25.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  string          2   13[BANK0 ] PTR const unsigned char 
  3147 ;;		 -> STR_1(6), 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  i               2   15[BANK0 ] int 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;		None               void
  3152 ;; Registers used:
  3153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;Total ram usage:        4 bytes
  3164 ;; Hardware stack levels used:    1
  3165 ;; Hardware stack levels required when called:    6
  3166 ;; This function calls:
  3167 ;;		_Ax25_Send_Byte
  3168 ;; This function is called by:
  3169 ;;		_main
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           
  3174                           ;psect for function _Ax25_Send_String
  3175  0D27                     _Ax25_Send_String:	
  3176                           
  3177                           ;ax25.c: 96: int i;
  3178                           ;ax25.c: 97: for (i = 0; string[i]; i++) {
  3179                           
  3180                           ;incstack = 0
  3181                           ; Regs used in _Ax25_Send_String: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3182  0D27  0020               	movlb	0	; select bank0
  3183  0D28  01AF               	clrf	Ax25_Send_String@i
  3184  0D29  01B0               	clrf	Ax25_Send_String@i+1
  3185  0D2A                     l2203:	
  3186  0D2A  082D               	movf	Ax25_Send_String@string,w
  3187  0D2B  072F               	addwf	Ax25_Send_String@i,w
  3188  0D2C  0084               	movwf	4
  3189  0D2D  082E               	movf	Ax25_Send_String@string+1,w
  3190  0D2E  3D30               	addwfc	Ax25_Send_String@i+1,w
  3191  0D2F  0085               	movwf	5
  3192  0D30  0800               	movf	0,w	;code access
  3193  0D31  3800               	iorlw	0
  3194  0D32  1903               	btfsc	3,2
  3195  0D33  0008               	return
  3196                           
  3197                           ;ax25.c: 98: Ax25_Send_Byte(string[i]);
  3198  0D34  082D               	movf	Ax25_Send_String@string,w
  3199  0D35  072F               	addwf	Ax25_Send_String@i,w
  3200  0D36  0084               	movwf	4
  3201  0D37  082E               	movf	Ax25_Send_String@string+1,w
  3202  0D38  3D30               	addwfc	Ax25_Send_String@i+1,w
  3203  0D39  0085               	movwf	5
  3204  0D3A  0800               	movf	0,w	;code access
  3205  0D3B  318C  243E  318D   	fcall	_Ax25_Send_Byte
  3206  0D3E  3001               	movlw	1
  3207  0D3F  0020               	movlb	0	; select bank0
  3208  0D40  07AF               	addwf	Ax25_Send_String@i,f
  3209  0D41  3000               	movlw	0
  3210  0D42  3DB0               	addwfc	Ax25_Send_String@i+1,f
  3211  0D43  2D2A               	goto	l2203
  3212  0D44                     __end_of_Ax25_Send_String:	
  3213                           
  3214                           	psect	text18
  3215  0C3E                     __ptext18:	
  3216 ;; *************** function _Ax25_Send_Byte *****************
  3217 ;; Defined at:
  3218 ;;		line 59 in file "ax25.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  byte            1    wreg     unsigned char 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;  byte            1   12[BANK0 ] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;		None               void
  3225 ;; Registers used:
  3226 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3233 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;Total ram usage:        1 bytes
  3237 ;; Hardware stack levels used:    1
  3238 ;; Hardware stack levels required when called:    5
  3239 ;; This function calls:
  3240 ;;		_Send_Byte
  3241 ;; This function is called by:
  3242 ;;		_Ax25_Send_String
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           
  3247                           ;psect for function _Ax25_Send_Byte
  3248  0C3E                     _Ax25_Send_Byte:	
  3249                           
  3250                           ;incstack = 0
  3251                           ; Regs used in _Ax25_Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3252                           ;Ax25_Send_Byte@byte stored from wreg
  3253  0C3E  0020               	movlb	0	; select bank0
  3254  0C3F  00AC               	movwf	Ax25_Send_Byte@byte
  3255                           
  3256                           ;ax25.c: 62: Send_Byte(byte);
  3257  0C40  082C               	movf	Ax25_Send_Byte@byte,w
  3258  0C41  3185  257B         	fcall	_Send_Byte
  3259  0C43  0008               	return
  3260  0C44                     __end_of_Ax25_Send_Byte:	
  3261                           
  3262                           	psect	text19
  3263  01D6                     __ptext19:	
  3264 ;; *************** function _Ax25_Send_Header *****************
  3265 ;; Defined at:
  3266 ;;		line 102 in file "ax25.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  addresses       1    wreg     PTR struct .
  3269 ;;		 -> main@beacon_address(16), 
  3270 ;;  num_addresse    2   12[BANK0 ] int 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  addresses       1   19[BANK0 ] PTR struct .
  3273 ;;		 -> main@beacon_address(16), 
  3274 ;;  i               2   20[BANK0 ] int 
  3275 ;;  j               2   17[BANK0 ] int 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;		None               void
  3278 ;; Registers used:
  3279 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3288 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;Total ram usage:       10 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    5
  3292 ;; This function calls:
  3293 ;;		_Ax25_Send_Flag
  3294 ;;		_Ax25_Send_Sync
  3295 ;;		_Send_Byte
  3296 ;; This function is called by:
  3297 ;;		_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           
  3302                           ;psect for function _Ax25_Send_Header
  3303  01D6                     _Ax25_Send_Header:	
  3304                           
  3305                           ;incstack = 0
  3306                           ; Regs used in _Ax25_Send_Header: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3307                           ;Ax25_Send_Header@addresses stored from wreg
  3308  01D6  0020               	movlb	0	; select bank0
  3309  01D7  00B3               	movwf	Ax25_Send_Header@addresses
  3310                           
  3311                           ;ax25.c: 105: int i, j;
  3312                           ;ax25.c: 106: modem_packet_size = 0;
  3313  01D8  3000               	movlw	0
  3314  01D9  00FC               	movwf	_modem_packet_size+3
  3315  01DA  3000               	movlw	0
  3316  01DB  00FB               	movwf	_modem_packet_size+2
  3317  01DC  3000               	movlw	0
  3318  01DD  00FA               	movwf	_modem_packet_size+1
  3319  01DE  3000               	movlw	0
  3320  01DF  00F9               	movwf	_modem_packet_size
  3321                           
  3322                           ;ax25.c: 107: ones_in_a_row = 0;
  3323  01E0  0021               	movlb	1	; select bank1
  3324  01E1  01C9               	clrf	_ones_in_a_row^(0+128)
  3325  01E2  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  3326                           
  3327                           ;ax25.c: 108: crc = 0xffff;
  3328  01E3  30FF               	movlw	255
  3329  01E4  00C7               	movwf	_crc^(0+128)
  3330  01E5  30FF               	movlw	255
  3331  01E6  00C8               	movwf	(_crc^(0+128)+1)
  3332                           
  3333                           ;ax25.c: 111: for (i = 0; i < 10; i++)
  3334  01E7  0020               	movlb	0	; select bank0
  3335  01E8  01B4               	clrf	Ax25_Send_Header@i
  3336  01E9  01B5               	clrf	Ax25_Send_Header@i+1
  3337  01EA  0835               	movf	Ax25_Send_Header@i+1,w
  3338  01EB  3A80               	xorlw	128
  3339  01EC  00AE               	movwf	??_Ax25_Send_Header
  3340  01ED  3080               	movlw	128
  3341  01EE  022E               	subwf	??_Ax25_Send_Header,w
  3342  01EF  1D03               	skipz
  3343  01F0  29F3               	goto	u1855
  3344  01F1  300A               	movlw	10
  3345  01F2  0234               	subwf	Ax25_Send_Header@i,w
  3346  01F3                     u1855:	
  3347  01F3  1803               	btfsc	3,0
  3348  01F4  2A08               	goto	l2159
  3349  01F5                     l2153:	
  3350                           
  3351                           ;ax25.c: 112: {
  3352                           ;ax25.c: 113: Ax25_Send_Sync();
  3353  01F5  3183  2375  3181   	fcall	_Ax25_Send_Sync
  3354  01F8  3001               	movlw	1
  3355  01F9  0020               	movlb	0	; select bank0
  3356  01FA  07B4               	addwf	Ax25_Send_Header@i,f
  3357  01FB  3000               	movlw	0
  3358  01FC  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3359  01FD  0835               	movf	Ax25_Send_Header@i+1,w
  3360  01FE  3A80               	xorlw	128
  3361  01FF  00AE               	movwf	??_Ax25_Send_Header
  3362  0200  3080               	movlw	128
  3363  0201  022E               	subwf	??_Ax25_Send_Header,w
  3364  0202  1D03               	skipz
  3365  0203  2A06               	goto	u1865
  3366  0204  300A               	movlw	10
  3367  0205  0234               	subwf	Ax25_Send_Header@i,w
  3368  0206                     u1865:	
  3369  0206  1C03               	skipc
  3370  0207  29F5               	goto	l2153
  3371  0208                     l2159:	
  3372                           
  3373                           ;ax25.c: 114: }
  3374                           ;ax25.c: 117: for (i = 0; i < 3; i++)
  3375  0208  0020               	movlb	0	; select bank0
  3376  0209  01B4               	clrf	Ax25_Send_Header@i
  3377  020A  01B5               	clrf	Ax25_Send_Header@i+1
  3378  020B  0835               	movf	Ax25_Send_Header@i+1,w
  3379  020C  3A80               	xorlw	128
  3380  020D  00AE               	movwf	??_Ax25_Send_Header
  3381  020E  3080               	movlw	128
  3382  020F  022E               	subwf	??_Ax25_Send_Header,w
  3383  0210  1D03               	skipz
  3384  0211  2A14               	goto	u1875
  3385  0212  3003               	movlw	3
  3386  0213  0234               	subwf	Ax25_Send_Header@i,w
  3387  0214                     u1875:	
  3388  0214  1803               	btfsc	3,0
  3389  0215  2A29               	goto	l2171
  3390  0216                     l2165:	
  3391                           
  3392                           ;ax25.c: 118: {
  3393                           ;ax25.c: 119: Ax25_Send_Flag();
  3394  0216  3187  2758  3181   	fcall	_Ax25_Send_Flag
  3395  0219  3001               	movlw	1
  3396  021A  0020               	movlb	0	; select bank0
  3397  021B  07B4               	addwf	Ax25_Send_Header@i,f
  3398  021C  3000               	movlw	0
  3399  021D  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3400  021E  0835               	movf	Ax25_Send_Header@i+1,w
  3401  021F  3A80               	xorlw	128
  3402  0220  00AE               	movwf	??_Ax25_Send_Header
  3403  0221  3080               	movlw	128
  3404  0222  022E               	subwf	??_Ax25_Send_Header,w
  3405  0223  1D03               	skipz
  3406  0224  2A27               	goto	u1885
  3407  0225  3003               	movlw	3
  3408  0226  0234               	subwf	Ax25_Send_Header@i,w
  3409  0227                     u1885:	
  3410  0227  1C03               	skipc
  3411  0228  2A16               	goto	l2165
  3412  0229                     l2171:	
  3413                           
  3414                           ;ax25.c: 120: }
  3415                           ;ax25.c: 122: for (i = 0; i < num_addresses; i++) {
  3416  0229  0020               	movlb	0	; select bank0
  3417  022A  01B4               	clrf	Ax25_Send_Header@i
  3418  022B  01B5               	clrf	Ax25_Send_Header@i+1
  3419  022C                     l2193:	
  3420  022C  0835               	movf	Ax25_Send_Header@i+1,w
  3421  022D  3A80               	xorlw	128
  3422  022E  00AE               	movwf	??_Ax25_Send_Header
  3423  022F  082D               	movf	Ax25_Send_Header@num_addresses+1,w
  3424  0230  3A80               	xorlw	128
  3425  0231  022E               	subwf	??_Ax25_Send_Header,w
  3426  0232  1D03               	skipz
  3427  0233  2A36               	goto	u1955
  3428  0234  082C               	movf	Ax25_Send_Header@num_addresses,w
  3429  0235  0234               	subwf	Ax25_Send_Header@i,w
  3430  0236                     u1955:	
  3431  0236  1803               	btfsc	3,0
  3432  0237  2AA6               	goto	l2195
  3433                           
  3434                           ;ax25.c: 124: for (j = 0; j < 6; j++)
  3435  0238  0020               	movlb	0	; select bank0
  3436  0239  01B1               	clrf	Ax25_Send_Header@j
  3437  023A  01B2               	clrf	Ax25_Send_Header@j+1
  3438  023B  0832               	movf	Ax25_Send_Header@j+1,w
  3439  023C  3A80               	xorlw	128
  3440  023D  00AE               	movwf	??_Ax25_Send_Header
  3441  023E  3080               	movlw	128
  3442  023F  022E               	subwf	??_Ax25_Send_Header,w
  3443  0240  1D03               	skipz
  3444  0241  2A44               	goto	u1895
  3445  0242  3006               	movlw	6
  3446  0243  0231               	subwf	Ax25_Send_Header@j,w
  3447  0244                     u1895:	
  3448  0244  1803               	btfsc	3,0
  3449  0245  2A6B               	goto	l2185
  3450  0246                     l2179:	
  3451                           
  3452                           ;ax25.c: 125: Send_Byte(addresses[i].callsign[j] << 1);
  3453  0246  0020               	movlb	0	; select bank0
  3454  0247  0834               	movf	Ax25_Send_Header@i,w
  3455  0248  00AE               	movwf	??_Ax25_Send_Header
  3456  0249  3002               	movlw	2
  3457  024A                     u1905:	
  3458  024A  35AE               	lslf	??_Ax25_Send_Header,f
  3459  024B  3EFF               	addlw	-1
  3460  024C  1D03               	skipz
  3461  024D  2A4A               	goto	u1905
  3462  024E  352E               	lslf	??_Ax25_Send_Header,w
  3463  024F  0733               	addwf	Ax25_Send_Header@addresses,w
  3464  0250  00AF               	movwf	??_Ax25_Send_Header+1
  3465  0251  0831               	movf	Ax25_Send_Header@j,w
  3466  0252  072F               	addwf	??_Ax25_Send_Header+1,w
  3467  0253  00B0               	movwf	??_Ax25_Send_Header+2
  3468  0254  0830               	movf	??_Ax25_Send_Header+2,w
  3469  0255  0086               	movwf	6
  3470  0256  0187               	clrf	7
  3471  0257  3501               	lslf	1,w
  3472  0258  3185  257B  3181   	fcall	_Send_Byte
  3473  025B  3001               	movlw	1
  3474  025C  0020               	movlb	0	; select bank0
  3475  025D  07B1               	addwf	Ax25_Send_Header@j,f
  3476  025E  3000               	movlw	0
  3477  025F  3DB2               	addwfc	Ax25_Send_Header@j+1,f
  3478  0260  0832               	movf	Ax25_Send_Header@j+1,w
  3479  0261  3A80               	xorlw	128
  3480  0262  00AE               	movwf	??_Ax25_Send_Header
  3481  0263  3080               	movlw	128
  3482  0264  022E               	subwf	??_Ax25_Send_Header,w
  3483  0265  1D03               	skipz
  3484  0266  2A69               	goto	u1915
  3485  0267  3006               	movlw	6
  3486  0268  0231               	subwf	Ax25_Send_Header@j,w
  3487  0269                     u1915:	
  3488  0269  1C03               	skipc
  3489  026A  2A46               	goto	l2179
  3490  026B                     l2185:	
  3491                           
  3492                           ;ax25.c: 128: if (i == num_addresses - 1){
  3493  026B  0020               	movlb	0	; select bank0
  3494  026C  082C               	movf	Ax25_Send_Header@num_addresses,w
  3495  026D  3EFF               	addlw	255
  3496  026E  00AE               	movwf	??_Ax25_Send_Header
  3497  026F  30FF               	movlw	255
  3498  0270  3D2D               	addwfc	Ax25_Send_Header@num_addresses+1,w
  3499  0271  00AF               	movwf	??_Ax25_Send_Header+1
  3500  0272  0835               	movf	Ax25_Send_Header@i+1,w
  3501  0273  062F               	xorwf	??_Ax25_Send_Header+1,w
  3502  0274  1D03               	skipz
  3503  0275  2A78               	goto	u1925
  3504  0276  0834               	movf	Ax25_Send_Header@i,w
  3505  0277  062E               	xorwf	??_Ax25_Send_Header,w
  3506  0278                     u1925:	
  3507  0278  1D03               	skipz
  3508  0279  2A8C               	goto	l2189
  3509                           
  3510                           ;ax25.c: 129: Send_Byte((('0' + addresses[i].ssid) << 1) | 0x01);
  3511  027A  0834               	movf	Ax25_Send_Header@i,w
  3512  027B  00AE               	movwf	??_Ax25_Send_Header
  3513  027C  3002               	movlw	2
  3514  027D                     u1935:	
  3515  027D  35AE               	lslf	??_Ax25_Send_Header,f
  3516  027E  3EFF               	addlw	-1
  3517  027F  1D03               	skipz
  3518  0280  2A7D               	goto	u1935
  3519  0281  352E               	lslf	??_Ax25_Send_Header,w
  3520  0282  0733               	addwf	Ax25_Send_Header@addresses,w
  3521  0283  00AF               	movwf	??_Ax25_Send_Header+1
  3522  0284  082F               	movf	??_Ax25_Send_Header+1,w
  3523  0285  3E07               	addlw	7
  3524  0286  0086               	movwf	6
  3525  0287  0187               	clrf	7
  3526  0288  3501               	lslf	1,w
  3527  0289  3E60               	addlw	96
  3528  028A  3801               	iorlw	1
  3529  028B  2A9D               	goto	L1
  3530  028C                     l2189:	
  3531                           ;ax25.c: 131: }
  3532                           
  3533                           
  3534                           ;ax25.c: 132: else
  3535                           ;ax25.c: 133: Send_Byte(('0' + addresses[i].ssid) << 1);
  3536  028C  0020               	movlb	0	; select bank0
  3537  028D  0834               	movf	Ax25_Send_Header@i,w
  3538  028E  00AE               	movwf	??_Ax25_Send_Header
  3539  028F  3002               	movlw	2
  3540  0290                     u1945:	
  3541  0290  35AE               	lslf	??_Ax25_Send_Header,f
  3542  0291  3EFF               	addlw	-1
  3543  0292  1D03               	skipz
  3544  0293  2A90               	goto	u1945
  3545  0294  352E               	lslf	??_Ax25_Send_Header,w
  3546  0295  0733               	addwf	Ax25_Send_Header@addresses,w
  3547  0296  00AF               	movwf	??_Ax25_Send_Header+1
  3548  0297  082F               	movf	??_Ax25_Send_Header+1,w
  3549  0298  3E07               	addlw	7
  3550  0299  0086               	movwf	6
  3551  029A  0187               	clrf	7
  3552  029B  3501               	lslf	1,w
  3553  029C  3E60               	addlw	96
  3554  029D                     L1:	
  3555  029D  3185  257B  3181   	fcall	_Send_Byte
  3556  02A0  3001               	movlw	1
  3557  02A1  0020               	movlb	0	; select bank0
  3558  02A2  07B4               	addwf	Ax25_Send_Header@i,f
  3559  02A3  3000               	movlw	0
  3560  02A4  3DB5               	addwfc	Ax25_Send_Header@i+1,f
  3561  02A5  2A2C               	goto	l2193
  3562  02A6                     l2195:	
  3563                           
  3564                           ;ax25.c: 134: }
  3565                           ;ax25.c: 137: Send_Byte(0x03);
  3566  02A6  3003               	movlw	3
  3567  02A7  3185  257B  3181   	fcall	_Send_Byte
  3568                           
  3569                           ;ax25.c: 140: Send_Byte(0xf0);
  3570  02AA  30F0               	movlw	240
  3571  02AB  3185  257B         	fcall	_Send_Byte
  3572  02AD  0008               	return
  3573  02AE                     __end_of_Ax25_Send_Header:	
  3574                           
  3575                           	psect	text20
  3576  0375                     __ptext20:	
  3577 ;; *************** function _Ax25_Send_Sync *****************
  3578 ;; Defined at:
  3579 ;;		line 66 in file "ax25.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  i               2    7[BANK0 ] int 
  3584 ;;  byte            1    6[BANK0 ] unsigned char 
  3585 ;; Return value:  Size  Location     Type
  3586 ;;		None               void
  3587 ;; Registers used:
  3588 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3596 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3597 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3598 ;;Total ram usage:        9 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    3
  3601 ;; This function calls:
  3602 ;;		Nothing
  3603 ;; This function is called by:
  3604 ;;		_Ax25_Send_Header
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           
  3609                           ;psect for function _Ax25_Send_Sync
  3610  0375                     _Ax25_Send_Sync:	
  3611                           
  3612                           ;ax25.c: 68: uint8_t byte = 0x00;
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _Ax25_Send_Sync: [wreg+fsr1l+fsr1h+status,2+status,0]
  3616  0375  0020               	movlb	0	; select bank0
  3617  0376  01A6               	clrf	Ax25_Send_Sync@byte
  3618                           
  3619                           ;ax25.c: 69: int i;
  3620                           ;ax25.c: 70: for (i = 0; i < 8; i++, modem_packet_size++) {
  3621  0377  01A7               	clrf	Ax25_Send_Sync@i
  3622  0378  01A8               	clrf	Ax25_Send_Sync@i+1
  3623  0379                     L2:	
  3624  0379  0828               	movf	Ax25_Send_Sync@i+1,w
  3625  037A  3A80               	xorlw	128
  3626  037B  00A0               	movwf	??_Ax25_Send_Sync
  3627  037C  3080               	movlw	128
  3628  037D  0220               	subwf	??_Ax25_Send_Sync,w
  3629  037E  3008               	movlw	8
  3630  037F  1903               	btfsc	3,2
  3631  0380  0227               	subwf	Ax25_Send_Sync@i,w
  3632  0381  1803               	btfsc	3,0
  3633  0382  0008               	return
  3634                           
  3635                           ;ax25.c: 71: if (modem_packet_size >= 64 * 8)
  3636  0383  3000               	movlw	0
  3637  0384  027C               	subwf	_modem_packet_size+3,w
  3638  0385  1D03               	skipz
  3639  0386  2B91               	goto	u1595
  3640  0387  3000               	movlw	0
  3641  0388  027B               	subwf	_modem_packet_size+2,w
  3642  0389  1D03               	skipz
  3643  038A  2B91               	goto	u1595
  3644  038B  3002               	movlw	2
  3645  038C  027A               	subwf	_modem_packet_size+1,w
  3646  038D  1D03               	skipz
  3647  038E  2B91               	goto	u1595
  3648  038F  3000               	movlw	0
  3649  0390  0279               	subwf	_modem_packet_size,w
  3650  0391                     u1595:	
  3651  0391  1803               	btfsc	3,0
  3652  0392  0008               	return
  3653                           
  3654                           ;ax25.c: 73: if ((byte >> i) & 1)
  3655                           
  3656                           ;ax25.c: 72: return;
  3657  0393  0020               	movlb	0	; select bank0
  3658  0394  0826               	movf	Ax25_Send_Sync@byte,w
  3659  0395  00A0               	movwf	??_Ax25_Send_Sync
  3660  0396  0A27               	incf	Ax25_Send_Sync@i,w
  3661  0397  2B99               	goto	u1604
  3662  0398                     u1605:	
  3663  0398  36A0               	lsrf	??_Ax25_Send_Sync,f
  3664  0399                     u1604:	
  3665  0399  0B89               	decfsz	9,f
  3666  039A  2B98               	goto	u1605
  3667  039B  1C20               	btfss	??_Ax25_Send_Sync,0
  3668  039C  2BBF               	goto	l1975
  3669                           
  3670                           ;ax25.c: 74: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  3671  039D  3001               	movlw	1
  3672  039E  00A0               	movwf	??_Ax25_Send_Sync
  3673  039F  0879               	movf	_modem_packet_size,w
  3674  03A0  3907               	andlw	7
  3675  03A1  0A89               	incf	9,f
  3676  03A2  2BA4               	goto	u1624
  3677  03A3                     u1625:	
  3678  03A3  35A0               	lslf	??_Ax25_Send_Sync,f
  3679  03A4                     u1624:	
  3680  03A4  0B89               	decfsz	9,f
  3681  03A5  2BA3               	goto	u1625
  3682  03A6  0820               	movf	??_Ax25_Send_Sync,w
  3683  03A7  00A1               	movwf	??_Ax25_Send_Sync+1
  3684  03A8  0879               	movf	_modem_packet_size,w
  3685  03A9  00A2               	movwf	??_Ax25_Send_Sync+2
  3686  03AA  087A               	movf	_modem_packet_size+1,w
  3687  03AB  00A3               	movwf	??_Ax25_Send_Sync+3
  3688  03AC  087B               	movf	_modem_packet_size+2,w
  3689  03AD  00A4               	movwf	??_Ax25_Send_Sync+4
  3690  03AE  087C               	movf	_modem_packet_size+3,w
  3691  03AF  00A5               	movwf	??_Ax25_Send_Sync+5
  3692  03B0  3003               	movlw	3
  3693  03B1                     u1635:	
  3694  03B1  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  3695  03B2  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  3696  03B3  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  3697  03B4  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  3698  03B5  0B89               	decfsz	9,f
  3699  03B6  2BB1               	goto	u1635
  3700  03B7  0822               	movf	??_Ax25_Send_Sync+2,w
  3701  03B8  3EA0               	addlw	_modem_packet& (0+255)
  3702  03B9  0086               	movwf	6
  3703  03BA  3001               	movlw	1	; select bank3/4
  3704  03BB  0087               	movwf	7
  3705  03BC  0821               	movf	??_Ax25_Send_Sync+1,w
  3706  03BD  0481               	iorwf	1,f
  3707  03BE  2BE1               	goto	l1977
  3708  03BF                     l1975:	
  3709                           
  3710                           ;ax25.c: 75: else
  3711                           ;ax25.c: 76: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  3712  03BF  3001               	movlw	1
  3713  03C0  00A0               	movwf	??_Ax25_Send_Sync
  3714  03C1  0879               	movf	_modem_packet_size,w
  3715  03C2  3907               	andlw	7
  3716  03C3  0A89               	incf	9,f
  3717  03C4  2BC6               	goto	u1644
  3718  03C5                     u1645:	
  3719  03C5  35A0               	lslf	??_Ax25_Send_Sync,f
  3720  03C6                     u1644:	
  3721  03C6  0B89               	decfsz	9,f
  3722  03C7  2BC5               	goto	u1645
  3723  03C8  0820               	movf	??_Ax25_Send_Sync,w
  3724  03C9  3AFF               	xorlw	255
  3725  03CA  00A1               	movwf	??_Ax25_Send_Sync+1
  3726  03CB  0879               	movf	_modem_packet_size,w
  3727  03CC  00A2               	movwf	??_Ax25_Send_Sync+2
  3728  03CD  087A               	movf	_modem_packet_size+1,w
  3729  03CE  00A3               	movwf	??_Ax25_Send_Sync+3
  3730  03CF  087B               	movf	_modem_packet_size+2,w
  3731  03D0  00A4               	movwf	??_Ax25_Send_Sync+4
  3732  03D1  087C               	movf	_modem_packet_size+3,w
  3733  03D2  00A5               	movwf	??_Ax25_Send_Sync+5
  3734  03D3  3003               	movlw	3
  3735  03D4                     u1655:	
  3736  03D4  36A5               	lsrf	??_Ax25_Send_Sync+5,f
  3737  03D5  0CA4               	rrf	??_Ax25_Send_Sync+4,f
  3738  03D6  0CA3               	rrf	??_Ax25_Send_Sync+3,f
  3739  03D7  0CA2               	rrf	??_Ax25_Send_Sync+2,f
  3740  03D8  0B89               	decfsz	9,f
  3741  03D9  2BD4               	goto	u1655
  3742  03DA  0822               	movf	??_Ax25_Send_Sync+2,w
  3743  03DB  3EA0               	addlw	_modem_packet& (0+255)
  3744  03DC  0086               	movwf	6
  3745  03DD  3001               	movlw	1	; select bank3/4
  3746  03DE  0087               	movwf	7
  3747  03DF  0821               	movf	??_Ax25_Send_Sync+1,w
  3748  03E0  0581               	andwf	1,f
  3749  03E1                     l1977:	
  3750  03E1  3001               	movlw	1
  3751  03E2  07A7               	addwf	Ax25_Send_Sync@i,f
  3752  03E3  3000               	movlw	0
  3753  03E4  3DA8               	addwfc	Ax25_Send_Sync@i+1,f
  3754  03E5  3001               	movlw	1
  3755  03E6  07F9               	addwf	_modem_packet_size,f
  3756  03E7  3000               	movlw	0
  3757  03E8  3DFA               	addwfc	_modem_packet_size+1,f
  3758  03E9  3000               	movlw	0
  3759  03EA  3DFB               	addwfc	_modem_packet_size+2,f
  3760  03EB  3000               	movlw	0
  3761  03EC  3DFC               	addwfc	_modem_packet_size+3,f
  3762  03ED  2B79               	goto	L2
  3763  03EE                     __end_of_Ax25_Send_Sync:	
  3764                           
  3765                           	psect	text21
  3766  0D0C                     __ptext21:	
  3767 ;; *************** function _Ax25_Send_Footer *****************
  3768 ;; Defined at:
  3769 ;;		line 144 in file "ax25.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;		None
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  final_crc       2   12[BANK0 ] unsigned int 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;		None               void
  3776 ;; Registers used:
  3777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3786 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;Total ram usage:        2 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    5
  3790 ;; This function calls:
  3791 ;;		_Ax25_Send_Flag
  3792 ;;		_Send_Byte
  3793 ;; This function is called by:
  3794 ;;		_main
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           
  3798                           
  3799                           ;psect for function _Ax25_Send_Footer
  3800  0D0C                     _Ax25_Send_Footer:	
  3801                           
  3802                           ;ax25.c: 147: uint16_t final_crc = crc;
  3803                           
  3804                           ;incstack = 0
  3805                           ; Regs used in _Ax25_Send_Footer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3806  0D0C  0021               	movlb	1	; select bank1
  3807  0D0D  0848               	movf	(_crc+1)^(0+128),w
  3808  0D0E  0020               	movlb	0	; select bank0
  3809  0D0F  01AD               	clrf	Ax25_Send_Footer@final_crc+1
  3810  0D10  07AD               	addwf	Ax25_Send_Footer@final_crc+1,f
  3811  0D11  0021               	movlb	1	; select bank1
  3812  0D12  0847               	movf	_crc^(0+128),w
  3813  0D13  0020               	movlb	0	; select bank0
  3814  0D14  01AC               	clrf	Ax25_Send_Footer@final_crc
  3815  0D15  07AC               	addwf	Ax25_Send_Footer@final_crc,f
  3816                           
  3817                           ;ax25.c: 150: Send_Byte(~(final_crc & 0xff));
  3818  0D16  092C               	comf	Ax25_Send_Footer@final_crc,w
  3819  0D17  3185  257B  318D   	fcall	_Send_Byte
  3820                           
  3821                           ;ax25.c: 151: final_crc >>= 8;
  3822  0D1A  3008               	movlw	8
  3823  0D1B  0020               	movlb	0	; select bank0
  3824  0D1C                     u1975:	
  3825  0D1C  36AD               	lsrf	Ax25_Send_Footer@final_crc+1,f
  3826  0D1D  0CAC               	rrf	Ax25_Send_Footer@final_crc,f
  3827  0D1E  0B89               	decfsz	9,f
  3828  0D1F  2D1C               	goto	u1975
  3829                           
  3830                           ;ax25.c: 152: Send_Byte(~(final_crc & 0xff));
  3831  0D20  092C               	comf	Ax25_Send_Footer@final_crc,w
  3832  0D21  3185  257B  318D   	fcall	_Send_Byte
  3833                           
  3834                           ;ax25.c: 155: Ax25_Send_Flag();
  3835  0D24  3187  2758         	fcall	_Ax25_Send_Flag
  3836  0D26  0008               	return
  3837  0D27                     __end_of_Ax25_Send_Footer:	
  3838                           
  3839                           	psect	text22
  3840  057B                     __ptext22:	
  3841 ;; *************** function _Send_Byte *****************
  3842 ;; Defined at:
  3843 ;;		line 33 in file "ax25.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  byte            1    wreg     unsigned char 
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;  byte            1    9[BANK0 ] unsigned char 
  3848 ;;  i               2   10[BANK0 ] int 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;		None               void
  3851 ;; Registers used:
  3852 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3860 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3861 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3862 ;;Total ram usage:        9 bytes
  3863 ;; Hardware stack levels used:    1
  3864 ;; Hardware stack levels required when called:    4
  3865 ;; This function calls:
  3866 ;;		_Update_Crc
  3867 ;; This function is called by:
  3868 ;;		_Ax25_Send_Byte
  3869 ;;		_Ax25_Send_Header
  3870 ;;		_Ax25_Send_Footer
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _Send_Byte
  3876  057B                     _Send_Byte:	
  3877                           
  3878                           ;incstack = 0
  3879                           ; Regs used in _Send_Byte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3880                           ;Send_Byte@byte stored from wreg
  3881  057B  0020               	movlb	0	; select bank0
  3882  057C  00A9               	movwf	Send_Byte@byte
  3883                           
  3884                           ;ax25.c: 35: int i;
  3885                           ;ax25.c: 36: for (i = 0; i < 8; i++) {
  3886  057D  01AA               	clrf	Send_Byte@i
  3887  057E  01AB               	clrf	Send_Byte@i+1
  3888  057F                     L3:	
  3889  057F  082B               	movf	Send_Byte@i+1,w
  3890  0580  3A80               	xorlw	128
  3891  0581  00A3               	movwf	??_Send_Byte
  3892  0582  3080               	movlw	128
  3893  0583  0223               	subwf	??_Send_Byte,w
  3894  0584  3008               	movlw	8
  3895  0585  1903               	btfsc	3,2
  3896  0586  022A               	subwf	Send_Byte@i,w
  3897  0587  1803               	btfsc	3,0
  3898  0588  0008               	return
  3899                           
  3900                           ;ax25.c: 37: Update_Crc((byte >> i) & 1);
  3901  0589  0020               	movlb	0	; select bank0
  3902  058A  0829               	movf	Send_Byte@byte,w
  3903  058B  00A3               	movwf	??_Send_Byte
  3904  058C  0A2A               	incf	Send_Byte@i,w
  3905  058D  2D8F               	goto	u1464
  3906  058E                     u1465:	
  3907  058E  36A3               	lsrf	??_Send_Byte,f
  3908  058F                     u1464:	
  3909  058F  0B89               	decfsz	9,f
  3910  0590  2D8E               	goto	u1465
  3911  0591  0823               	movf	??_Send_Byte,w
  3912  0592  3901               	andlw	1
  3913  0593  318D  25FF  3185   	fcall	_Update_Crc
  3914                           
  3915                           ;ax25.c: 38: if ((byte >> i) & 1) {
  3916  0596  0020               	movlb	0	; select bank0
  3917  0597  0829               	movf	Send_Byte@byte,w
  3918  0598  00A3               	movwf	??_Send_Byte
  3919  0599  0A2A               	incf	Send_Byte@i,w
  3920  059A  2D9C               	goto	u1474
  3921  059B                     u1475:	
  3922  059B  36A3               	lsrf	??_Send_Byte,f
  3923  059C                     u1474:	
  3924  059C  0B89               	decfsz	9,f
  3925  059D  2D9B               	goto	u1475
  3926  059E  1C23               	btfss	??_Send_Byte,0
  3927  059F  2DEB               	goto	l1895
  3928                           
  3929                           ;ax25.c: 40: if (modem_packet_size >= (64 * 8))
  3930  05A0  3000               	movlw	0
  3931  05A1  027C               	subwf	_modem_packet_size+3,w
  3932  05A2  1D03               	skipz
  3933  05A3  2DAE               	goto	u1495
  3934  05A4  3000               	movlw	0
  3935  05A5  027B               	subwf	_modem_packet_size+2,w
  3936  05A6  1D03               	skipz
  3937  05A7  2DAE               	goto	u1495
  3938  05A8  3002               	movlw	2
  3939  05A9  027A               	subwf	_modem_packet_size+1,w
  3940  05AA  1D03               	skipz
  3941  05AB  2DAE               	goto	u1495
  3942  05AC  3000               	movlw	0
  3943  05AD  0279               	subwf	_modem_packet_size,w
  3944  05AE                     u1495:	
  3945  05AE  1803               	btfsc	3,0
  3946  05AF  0008               	return
  3947                           
  3948                           ;ax25.c: 43: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  3949                           
  3950                           ;ax25.c: 41: return;
  3951  05B0  3001               	movlw	1
  3952  05B1  00A3               	movwf	??_Send_Byte
  3953  05B2  0879               	movf	_modem_packet_size,w
  3954  05B3  3907               	andlw	7
  3955  05B4  0A89               	incf	9,f
  3956  05B5  2DB7               	goto	u1504
  3957  05B6                     u1505:	
  3958  05B6  35A3               	lslf	??_Send_Byte,f
  3959  05B7                     u1504:	
  3960  05B7  0B89               	decfsz	9,f
  3961  05B8  2DB6               	goto	u1505
  3962  05B9  0823               	movf	??_Send_Byte,w
  3963  05BA  00A4               	movwf	??_Send_Byte+1
  3964  05BB  0879               	movf	_modem_packet_size,w
  3965  05BC  00A5               	movwf	??_Send_Byte+2
  3966  05BD  087A               	movf	_modem_packet_size+1,w
  3967  05BE  00A6               	movwf	??_Send_Byte+3
  3968  05BF  087B               	movf	_modem_packet_size+2,w
  3969  05C0  00A7               	movwf	??_Send_Byte+4
  3970  05C1  087C               	movf	_modem_packet_size+3,w
  3971  05C2  00A8               	movwf	??_Send_Byte+5
  3972  05C3  3003               	movlw	3
  3973  05C4                     u1515:	
  3974  05C4  36A8               	lsrf	??_Send_Byte+5,f
  3975  05C5  0CA7               	rrf	??_Send_Byte+4,f
  3976  05C6  0CA6               	rrf	??_Send_Byte+3,f
  3977  05C7  0CA5               	rrf	??_Send_Byte+2,f
  3978  05C8  0B89               	decfsz	9,f
  3979  05C9  2DC4               	goto	u1515
  3980  05CA  0825               	movf	??_Send_Byte+2,w
  3981  05CB  3EA0               	addlw	_modem_packet& (0+255)
  3982  05CC  0086               	movwf	6
  3983  05CD  3001               	movlw	1	; select bank3/4
  3984  05CE  0087               	movwf	7
  3985  05CF  0824               	movf	??_Send_Byte+1,w
  3986  05D0  0481               	iorwf	1,f
  3987                           
  3988                           ;ax25.c: 45: modem_packet_size++;
  3989  05D1  3001               	movlw	1
  3990  05D2  07F9               	addwf	_modem_packet_size,f
  3991  05D3  3000               	movlw	0
  3992  05D4  3DFA               	addwfc	_modem_packet_size+1,f
  3993  05D5  3000               	movlw	0
  3994  05D6  3DFB               	addwfc	_modem_packet_size+2,f
  3995  05D7  3000               	movlw	0
  3996  05D8  3DFC               	addwfc	_modem_packet_size+3,f
  3997                           
  3998                           ;ax25.c: 46: if (++ones_in_a_row < 5) continue;
  3999  05D9  3001               	movlw	1
  4000  05DA  0021               	movlb	1	; select bank1
  4001  05DB  07C9               	addwf	_ones_in_a_row^(0+128),f
  4002  05DC  3000               	movlw	0
  4003  05DD  3DCA               	addwfc	(_ones_in_a_row+1)^(0+128),f
  4004  05DE  084A               	movf	(_ones_in_a_row+1)^(0+128),w
  4005  05DF  3A80               	xorlw	128
  4006  05E0  0020               	movlb	0	; select bank0
  4007  05E1  00A3               	movwf	??_Send_Byte
  4008  05E2  3080               	movlw	128
  4009  05E3  0223               	subwf	??_Send_Byte,w
  4010  05E4  1D03               	skipz
  4011  05E5  2DE9               	goto	u1525
  4012  05E6  3005               	movlw	5
  4013  05E7  0021               	movlb	1	; select bank1
  4014  05E8  0249               	subwf	_ones_in_a_row^(0+128),w
  4015  05E9                     u1525:	
  4016  05E9  1C03               	btfss	3,0
  4017  05EA  2E29               	goto	l1905
  4018  05EB                     l1895:	
  4019                           
  4020                           ;ax25.c: 47: }
  4021                           ;ax25.c: 49: if (modem_packet_size >= (64 * 8))
  4022  05EB  3000               	movlw	0
  4023  05EC  027C               	subwf	_modem_packet_size+3,w
  4024  05ED  1D03               	skipz
  4025  05EE  2DF9               	goto	u1535
  4026  05EF  3000               	movlw	0
  4027  05F0  027B               	subwf	_modem_packet_size+2,w
  4028  05F1  1D03               	skipz
  4029  05F2  2DF9               	goto	u1535
  4030  05F3  3002               	movlw	2
  4031  05F4  027A               	subwf	_modem_packet_size+1,w
  4032  05F5  1D03               	skipz
  4033  05F6  2DF9               	goto	u1535
  4034  05F7  3000               	movlw	0
  4035  05F8  0279               	subwf	_modem_packet_size,w
  4036  05F9                     u1535:	
  4037  05F9  1803               	btfsc	3,0
  4038  05FA  0008               	return
  4039                           
  4040                           ;ax25.c: 51: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4041                           
  4042                           ;ax25.c: 50: return;
  4043  05FB  3001               	movlw	1
  4044  05FC  0020               	movlb	0	; select bank0
  4045  05FD  00A3               	movwf	??_Send_Byte
  4046  05FE  0879               	movf	_modem_packet_size,w
  4047  05FF  3907               	andlw	7
  4048  0600  0A89               	incf	9,f
  4049  0601  2E03               	goto	u1544
  4050  0602                     u1545:	
  4051  0602  35A3               	lslf	??_Send_Byte,f
  4052  0603                     u1544:	
  4053  0603  0B89               	decfsz	9,f
  4054  0604  2E02               	goto	u1545
  4055  0605  0823               	movf	??_Send_Byte,w
  4056  0606  3AFF               	xorlw	255
  4057  0607  00A4               	movwf	??_Send_Byte+1
  4058  0608  0879               	movf	_modem_packet_size,w
  4059  0609  00A5               	movwf	??_Send_Byte+2
  4060  060A  087A               	movf	_modem_packet_size+1,w
  4061  060B  00A6               	movwf	??_Send_Byte+3
  4062  060C  087B               	movf	_modem_packet_size+2,w
  4063  060D  00A7               	movwf	??_Send_Byte+4
  4064  060E  087C               	movf	_modem_packet_size+3,w
  4065  060F  00A8               	movwf	??_Send_Byte+5
  4066  0610  3003               	movlw	3
  4067  0611                     u1555:	
  4068  0611  36A8               	lsrf	??_Send_Byte+5,f
  4069  0612  0CA7               	rrf	??_Send_Byte+4,f
  4070  0613  0CA6               	rrf	??_Send_Byte+3,f
  4071  0614  0CA5               	rrf	??_Send_Byte+2,f
  4072  0615  0B89               	decfsz	9,f
  4073  0616  2E11               	goto	u1555
  4074  0617  0825               	movf	??_Send_Byte+2,w
  4075  0618  3EA0               	addlw	_modem_packet& (0+255)
  4076  0619  0086               	movwf	6
  4077  061A  3001               	movlw	1	; select bank3/4
  4078  061B  0087               	movwf	7
  4079  061C  0824               	movf	??_Send_Byte+1,w
  4080  061D  0581               	andwf	1,f
  4081                           
  4082                           ;ax25.c: 53: modem_packet_size++;
  4083  061E  3001               	movlw	1
  4084  061F  07F9               	addwf	_modem_packet_size,f
  4085  0620  3000               	movlw	0
  4086  0621  3DFA               	addwfc	_modem_packet_size+1,f
  4087  0622  3000               	movlw	0
  4088  0623  3DFB               	addwfc	_modem_packet_size+2,f
  4089  0624  3000               	movlw	0
  4090  0625  3DFC               	addwfc	_modem_packet_size+3,f
  4091                           
  4092                           ;ax25.c: 54: ones_in_a_row = 0;
  4093  0626  0021               	movlb	1	; select bank1
  4094  0627  01C9               	clrf	_ones_in_a_row^(0+128)
  4095  0628  01CA               	clrf	(_ones_in_a_row+1)^(0+128)
  4096  0629                     l1905:	
  4097  0629  3001               	movlw	1
  4098  062A  0020               	movlb	0	; select bank0
  4099  062B  07AA               	addwf	Send_Byte@i,f
  4100  062C  3000               	movlw	0
  4101  062D  3DAB               	addwfc	Send_Byte@i+1,f
  4102  062E  2D7F               	goto	L3
  4103  062F                     __end_of_Send_Byte:	
  4104                           
  4105                           	psect	text23
  4106  0DFF                     __ptext23:	
  4107 ;; *************** function _Update_Crc *****************
  4108 ;; Defined at:
  4109 ;;		line 24 in file "ax25.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  input_bit       1    wreg     unsigned char 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  input_bit       1    2[BANK0 ] unsigned char 
  4114 ;; Return value:  Size  Location     Type
  4115 ;;		None               void
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4125 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4126 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4127 ;;Total ram usage:        3 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    3
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_Send_Byte
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           
  4138                           ;psect for function _Update_Crc
  4139  0DFF                     _Update_Crc:	
  4140                           
  4141                           ;incstack = 0
  4142                           ; Regs used in _Update_Crc: [wreg+status,2+status,0]
  4143                           ;Update_Crc@input_bit stored from wreg
  4144  0DFF  0020               	movlb	0	; select bank0
  4145  0E00  00A2               	movwf	Update_Crc@input_bit
  4146                           
  4147                           ;ax25.c: 26: crc ^= input_bit;
  4148  0E01  0822               	movf	Update_Crc@input_bit,w
  4149  0E02  00A0               	movwf	??_Update_Crc
  4150  0E03  01A1               	clrf	??_Update_Crc+1
  4151  0E04  0820               	movf	??_Update_Crc,w
  4152  0E05  0021               	movlb	1	; select bank1
  4153  0E06  06C7               	xorwf	_crc^(0+128),f
  4154  0E07  0020               	movlb	0	; select bank0
  4155  0E08  0821               	movf	??_Update_Crc+1,w
  4156  0E09  0021               	movlb	1	; select bank1
  4157  0E0A  06C8               	xorwf	(_crc+1)^(0+128),f
  4158                           
  4159                           ;ax25.c: 27: if (crc & 1)
  4160  0E0B  1C47               	btfss	_crc^(0+128),0
  4161  0E0C  2E20               	goto	l1853
  4162                           
  4163                           ;ax25.c: 28: crc = (crc >> 1) ^ 0x8408;
  4164  0E0D  0848               	movf	(_crc+1)^(0+128),w
  4165  0E0E  0020               	movlb	0	; select bank0
  4166  0E0F  00A1               	movwf	??_Update_Crc+1
  4167  0E10  0021               	movlb	1	; select bank1
  4168  0E11  0847               	movf	_crc^(0+128),w
  4169  0E12  0020               	movlb	0	; select bank0
  4170  0E13  00A0               	movwf	??_Update_Crc
  4171  0E14  36A1               	lsrf	??_Update_Crc+1,f
  4172  0E15  0CA0               	rrf	??_Update_Crc,f
  4173  0E16  3008               	movlw	8
  4174  0E17  0620               	xorwf	??_Update_Crc,w
  4175  0E18  0021               	movlb	1	; select bank1
  4176  0E19  00C7               	movwf	_crc^(0+128)
  4177  0E1A  3084               	movlw	132
  4178  0E1B  0020               	movlb	0	; select bank0
  4179  0E1C  0621               	xorwf	??_Update_Crc+1,w
  4180  0E1D  0021               	movlb	1	; select bank1
  4181  0E1E  00C8               	movwf	(_crc+1)^(0+128)
  4182  0E1F  0008               	return
  4183  0E20                     l1853:	
  4184                           
  4185                           ;ax25.c: 29: else
  4186                           ;ax25.c: 30: crc = crc >> 1;
  4187  0E20  0848               	movf	(_crc+1)^(0+128),w
  4188  0E21  0020               	movlb	0	; select bank0
  4189  0E22  00A1               	movwf	??_Update_Crc+1
  4190  0E23  0021               	movlb	1	; select bank1
  4191  0E24  0847               	movf	_crc^(0+128),w
  4192  0E25  0020               	movlb	0	; select bank0
  4193  0E26  00A0               	movwf	??_Update_Crc
  4194  0E27  36A1               	lsrf	??_Update_Crc+1,f
  4195  0E28  0CA0               	rrf	??_Update_Crc,f
  4196  0E29  0820               	movf	??_Update_Crc,w
  4197  0E2A  0021               	movlb	1	; select bank1
  4198  0E2B  00C7               	movwf	_crc^(0+128)
  4199  0E2C  0020               	movlb	0	; select bank0
  4200  0E2D  0821               	movf	??_Update_Crc+1,w
  4201  0E2E  0021               	movlb	1	; select bank1
  4202  0E2F  00C8               	movwf	(_crc+1)^(0+128)
  4203  0E30  0008               	return
  4204  0E31                     __end_of_Update_Crc:	
  4205                           
  4206                           	psect	text24
  4207  0758                     __ptext24:	
  4208 ;; *************** function _Ax25_Send_Flag *****************
  4209 ;; Defined at:
  4210 ;;		line 80 in file "ax25.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  i               2    7[BANK0 ] int 
  4215 ;;  byte            1    6[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;		None               void
  4218 ;; Registers used:
  4219 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4227 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;Total ram usage:        9 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    3
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_Ax25_Send_Header
  4236 ;;		_Ax25_Send_Footer
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           
  4241                           ;psect for function _Ax25_Send_Flag
  4242  0758                     _Ax25_Send_Flag:	
  4243                           
  4244                           ;ax25.c: 82: uint8_t byte = 0x7e;
  4245                           
  4246                           ;incstack = 0
  4247                           ; Regs used in _Ax25_Send_Flag: [wreg+fsr1l+fsr1h+status,2+status,0]
  4248  0758  307E               	movlw	126
  4249  0759  0020               	movlb	0	; select bank0
  4250  075A  00A0               	movwf	??_Ax25_Send_Flag
  4251  075B  0820               	movf	??_Ax25_Send_Flag,w
  4252  075C  00A6               	movwf	Ax25_Send_Flag@byte
  4253                           
  4254                           ;ax25.c: 83: int i;
  4255                           ;ax25.c: 84: for (i = 0; i < 8; i++, modem_packet_size++) {
  4256  075D  01A7               	clrf	Ax25_Send_Flag@i
  4257  075E  01A8               	clrf	Ax25_Send_Flag@i+1
  4258  075F                     L4:	
  4259  075F  0828               	movf	Ax25_Send_Flag@i+1,w
  4260  0760  3A80               	xorlw	128
  4261  0761  00A0               	movwf	??_Ax25_Send_Flag
  4262  0762  3080               	movlw	128
  4263  0763  0220               	subwf	??_Ax25_Send_Flag,w
  4264  0764  3008               	movlw	8
  4265  0765  1903               	btfsc	3,2
  4266  0766  0227               	subwf	Ax25_Send_Flag@i,w
  4267  0767  1803               	btfsc	3,0
  4268  0768  0008               	return
  4269                           
  4270                           ;ax25.c: 85: if (modem_packet_size >= 64 * 8)
  4271  0769  3000               	movlw	0
  4272  076A  027C               	subwf	_modem_packet_size+3,w
  4273  076B  1D03               	skipz
  4274  076C  2F77               	goto	u1685
  4275  076D  3000               	movlw	0
  4276  076E  027B               	subwf	_modem_packet_size+2,w
  4277  076F  1D03               	skipz
  4278  0770  2F77               	goto	u1685
  4279  0771  3002               	movlw	2
  4280  0772  027A               	subwf	_modem_packet_size+1,w
  4281  0773  1D03               	skipz
  4282  0774  2F77               	goto	u1685
  4283  0775  3000               	movlw	0
  4284  0776  0279               	subwf	_modem_packet_size,w
  4285  0777                     u1685:	
  4286  0777  1803               	btfsc	3,0
  4287  0778  0008               	return
  4288                           
  4289                           ;ax25.c: 87: if ((byte >> i) & 1)
  4290                           
  4291                           ;ax25.c: 86: return;
  4292  0779  0020               	movlb	0	; select bank0
  4293  077A  0826               	movf	Ax25_Send_Flag@byte,w
  4294  077B  00A0               	movwf	??_Ax25_Send_Flag
  4295  077C  0A27               	incf	Ax25_Send_Flag@i,w
  4296  077D  2F7F               	goto	u1694
  4297  077E                     u1695:	
  4298  077E  36A0               	lsrf	??_Ax25_Send_Flag,f
  4299  077F                     u1694:	
  4300  077F  0B89               	decfsz	9,f
  4301  0780  2F7E               	goto	u1695
  4302  0781  1C20               	btfss	??_Ax25_Send_Flag,0
  4303  0782  2FA5               	goto	l1999
  4304                           
  4305                           ;ax25.c: 88: modem_packet[modem_packet_size >> 3] |= (1 << (modem_packet_size & 7));
  4306  0783  3001               	movlw	1
  4307  0784  00A0               	movwf	??_Ax25_Send_Flag
  4308  0785  0879               	movf	_modem_packet_size,w
  4309  0786  3907               	andlw	7
  4310  0787  0A89               	incf	9,f
  4311  0788  2F8A               	goto	u1714
  4312  0789                     u1715:	
  4313  0789  35A0               	lslf	??_Ax25_Send_Flag,f
  4314  078A                     u1714:	
  4315  078A  0B89               	decfsz	9,f
  4316  078B  2F89               	goto	u1715
  4317  078C  0820               	movf	??_Ax25_Send_Flag,w
  4318  078D  00A1               	movwf	??_Ax25_Send_Flag+1
  4319  078E  0879               	movf	_modem_packet_size,w
  4320  078F  00A2               	movwf	??_Ax25_Send_Flag+2
  4321  0790  087A               	movf	_modem_packet_size+1,w
  4322  0791  00A3               	movwf	??_Ax25_Send_Flag+3
  4323  0792  087B               	movf	_modem_packet_size+2,w
  4324  0793  00A4               	movwf	??_Ax25_Send_Flag+4
  4325  0794  087C               	movf	_modem_packet_size+3,w
  4326  0795  00A5               	movwf	??_Ax25_Send_Flag+5
  4327  0796  3003               	movlw	3
  4328  0797                     u1725:	
  4329  0797  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4330  0798  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4331  0799  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4332  079A  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4333  079B  0B89               	decfsz	9,f
  4334  079C  2F97               	goto	u1725
  4335  079D  0822               	movf	??_Ax25_Send_Flag+2,w
  4336  079E  3EA0               	addlw	_modem_packet& (0+255)
  4337  079F  0086               	movwf	6
  4338  07A0  3001               	movlw	1	; select bank3/4
  4339  07A1  0087               	movwf	7
  4340  07A2  0821               	movf	??_Ax25_Send_Flag+1,w
  4341  07A3  0481               	iorwf	1,f
  4342  07A4  2FC7               	goto	l2001
  4343  07A5                     l1999:	
  4344                           
  4345                           ;ax25.c: 89: else
  4346                           ;ax25.c: 90: modem_packet[modem_packet_size >> 3] &= ~(1 << (modem_packet_size & 7));
  4347  07A5  3001               	movlw	1
  4348  07A6  00A0               	movwf	??_Ax25_Send_Flag
  4349  07A7  0879               	movf	_modem_packet_size,w
  4350  07A8  3907               	andlw	7
  4351  07A9  0A89               	incf	9,f
  4352  07AA  2FAC               	goto	u1734
  4353  07AB                     u1735:	
  4354  07AB  35A0               	lslf	??_Ax25_Send_Flag,f
  4355  07AC                     u1734:	
  4356  07AC  0B89               	decfsz	9,f
  4357  07AD  2FAB               	goto	u1735
  4358  07AE  0820               	movf	??_Ax25_Send_Flag,w
  4359  07AF  3AFF               	xorlw	255
  4360  07B0  00A1               	movwf	??_Ax25_Send_Flag+1
  4361  07B1  0879               	movf	_modem_packet_size,w
  4362  07B2  00A2               	movwf	??_Ax25_Send_Flag+2
  4363  07B3  087A               	movf	_modem_packet_size+1,w
  4364  07B4  00A3               	movwf	??_Ax25_Send_Flag+3
  4365  07B5  087B               	movf	_modem_packet_size+2,w
  4366  07B6  00A4               	movwf	??_Ax25_Send_Flag+4
  4367  07B7  087C               	movf	_modem_packet_size+3,w
  4368  07B8  00A5               	movwf	??_Ax25_Send_Flag+5
  4369  07B9  3003               	movlw	3
  4370  07BA                     u1745:	
  4371  07BA  36A5               	lsrf	??_Ax25_Send_Flag+5,f
  4372  07BB  0CA4               	rrf	??_Ax25_Send_Flag+4,f
  4373  07BC  0CA3               	rrf	??_Ax25_Send_Flag+3,f
  4374  07BD  0CA2               	rrf	??_Ax25_Send_Flag+2,f
  4375  07BE  0B89               	decfsz	9,f
  4376  07BF  2FBA               	goto	u1745
  4377  07C0  0822               	movf	??_Ax25_Send_Flag+2,w
  4378  07C1  3EA0               	addlw	_modem_packet& (0+255)
  4379  07C2  0086               	movwf	6
  4380  07C3  3001               	movlw	1	; select bank3/4
  4381  07C4  0087               	movwf	7
  4382  07C5  0821               	movf	??_Ax25_Send_Flag+1,w
  4383  07C6  0581               	andwf	1,f
  4384  07C7                     l2001:	
  4385  07C7  3001               	movlw	1
  4386  07C8  07A7               	addwf	Ax25_Send_Flag@i,f
  4387  07C9  3000               	movlw	0
  4388  07CA  3DA8               	addwfc	Ax25_Send_Flag@i+1,f
  4389  07CB  3001               	movlw	1
  4390  07CC  07F9               	addwf	_modem_packet_size,f
  4391  07CD  3000               	movlw	0
  4392  07CE  3DFA               	addwfc	_modem_packet_size+1,f
  4393  07CF  3000               	movlw	0
  4394  07D0  3DFB               	addwfc	_modem_packet_size+2,f
  4395  07D1  3000               	movlw	0
  4396  07D2  3DFC               	addwfc	_modem_packet_size+3,f
  4397  07D3  2F5F               	goto	L4
  4398  07D4                     __end_of_Ax25_Send_Flag:	
  4399                           
  4400                           	psect	text25
  4401  0F8B                     __ptext25:	
  4402 ;; *************** function _Adf_Lock *****************
  4403 ;; Defined at:
  4404 ;;		line 233 in file "adf7012.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;		None
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  bias            2   10[BANK1 ] int 
  4409 ;;  adj             2    8[BANK1 ] int 
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      unsigned char 
  4412 ;; Registers used:
  4413 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4422 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4423 ;;Total ram usage:        6 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    9
  4426 ;; This function calls:
  4427 ;;		_Adf_Locked
  4428 ;;		_Adf_Write_Config
  4429 ;;		_Delay_ms
  4430 ;; This function is called by:
  4431 ;;		_main
  4432 ;; This function uses a non-reentrant model
  4433 ;;
  4434                           
  4435                           
  4436                           ;psect for function _Adf_Lock
  4437  0F8B                     _Adf_Lock:	
  4438                           
  4439                           ;adf7012.c: 236: Delay_ms(200);
  4440                           
  4441                           ;incstack = 0
  4442                           ; Regs used in _Adf_Lock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4443  0F8B  30C8               	movlw	200
  4444  0F8C  0020               	movlb	0	; select bank0
  4445  0F8D  00A0               	movwf	Delay_ms@time_to_delay
  4446  0F8E  3000               	movlw	0
  4447  0F8F  00A1               	movwf	Delay_ms@time_to_delay+1
  4448  0F90  318D  25AD  318F   	fcall	_Delay_ms
  4449                           
  4450                           ;adf7012.c: 237: int adj = adf_config.r0.vco_adjust;
  4451  0F93  0021               	movlb	1	; select bank1
  4452  0F94  0828               	movf	(_adf_config^(0+128)+8),w
  4453  0F95  0020               	movlb	0	; select bank0
  4454  0F96  00EB               	movwf	??_Adf_Lock
  4455  0F97  01EC               	clrf	??_Adf_Lock+1
  4456  0F98  086B               	movf	??_Adf_Lock,w
  4457  0F99  0021               	movlb	1	; select bank1
  4458  0F9A  00DC               	movwf	Adf_Lock@adj^(0+128)
  4459  0F9B  0020               	movlb	0	; select bank0
  4460  0F9C  086C               	movf	??_Adf_Lock+1,w
  4461  0F9D  0021               	movlb	1	; select bank1
  4462  0F9E  00DD               	movwf	(Adf_Lock@adj+1)^(0+128)
  4463                           
  4464                           ;adf7012.c: 238: int bias = adf_config.r3.vco_bias;
  4465  0F9F  0843               	movf	(_adf_config^(0+128)+35),w
  4466  0FA0  0020               	movlb	0	; select bank0
  4467  0FA1  00EB               	movwf	??_Adf_Lock
  4468  0FA2  01EC               	clrf	??_Adf_Lock+1
  4469  0FA3  086B               	movf	??_Adf_Lock,w
  4470  0FA4  0021               	movlb	1	; select bank1
  4471  0FA5  00DE               	movwf	Adf_Lock@bias^(0+128)
  4472  0FA6  0020               	movlb	0	; select bank0
  4473  0FA7  086C               	movf	??_Adf_Lock+1,w
  4474  0FA8  0021               	movlb	1	; select bank1
  4475  0FA9  00DF               	movwf	(Adf_Lock@bias+1)^(0+128)
  4476                           
  4477                           ;adf7012.c: 240: adf_config.r3.pll_enable = 1;
  4478  0FAA  01B9               	clrf	(_adf_config^(0+128)+25)
  4479  0FAB  0AB9               	incf	(_adf_config^(0+128)+25),f
  4480                           
  4481                           ;adf7012.c: 242: adf_config.r3.muxout = 5;
  4482  0FAC  3005               	movlw	5
  4483  0FAD  0020               	movlb	0	; select bank0
  4484  0FAE  00EB               	movwf	??_Adf_Lock
  4485  0FAF  086B               	movf	??_Adf_Lock,w
  4486  0FB0  0021               	movlb	1	; select bank1
  4487  0FB1  00C1               	movwf	(_adf_config^(0+128)+33)
  4488                           
  4489                           ;adf7012.c: 244: Adf_Write_Config();
  4490  0FB2  318C  2456  318F   	fcall	_Adf_Write_Config
  4491                           
  4492                           ;adf7012.c: 245: Delay_ms(5);
  4493  0FB5  3005               	movlw	5
  4494  0FB6  0020               	movlb	0	; select bank0
  4495  0FB7  00A0               	movwf	Delay_ms@time_to_delay
  4496  0FB8  3000               	movlw	0
  4497  0FB9  00A1               	movwf	Delay_ms@time_to_delay+1
  4498  0FBA  318D  25AD  318F   	fcall	_Delay_ms
  4499  0FBD                     l2245:	
  4500                           ;adf7012.c: 247: while(!Adf_Locked()) {
  4501                           
  4502  0FBD  318C  2422  318F   	fcall	_Adf_Locked
  4503  0FC0  3A00               	xorlw	0
  4504  0FC1  1D03               	btfss	3,2
  4505  0FC2  0008               	return
  4506                           
  4507                           ;adf7012.c: 249: adf_config.r0.vco_adjust = adj;
  4508  0FC3  0021               	movlb	1	; select bank1
  4509  0FC4  085C               	movf	Adf_Lock@adj^(0+128),w
  4510  0FC5  0020               	movlb	0	; select bank0
  4511  0FC6  00EB               	movwf	??_Adf_Lock
  4512  0FC7  086B               	movf	??_Adf_Lock,w
  4513  0FC8  0021               	movlb	1	; select bank1
  4514  0FC9  00A8               	movwf	(_adf_config^(0+128)+8)
  4515                           
  4516                           ;adf7012.c: 250: adf_config.r3.vco_bias = bias;
  4517  0FCA  085E               	movf	Adf_Lock@bias^(0+128),w
  4518  0FCB  0020               	movlb	0	; select bank0
  4519  0FCC  00EB               	movwf	??_Adf_Lock
  4520  0FCD  086B               	movf	??_Adf_Lock,w
  4521  0FCE  0021               	movlb	1	; select bank1
  4522  0FCF  00C3               	movwf	(_adf_config^(0+128)+35)
  4523                           
  4524                           ;adf7012.c: 252: adf_config.r3.muxout = 5;
  4525  0FD0  3005               	movlw	5
  4526  0FD1  0020               	movlb	0	; select bank0
  4527  0FD2  00EB               	movwf	??_Adf_Lock
  4528  0FD3  086B               	movf	??_Adf_Lock,w
  4529  0FD4  0021               	movlb	1	; select bank1
  4530  0FD5  00C1               	movwf	(_adf_config^(0+128)+33)
  4531                           
  4532                           ;adf7012.c: 253: Adf_Write_Config();
  4533  0FD6  318C  2456  318F   	fcall	_Adf_Write_Config
  4534                           
  4535                           ;adf7012.c: 254: Delay_ms(5);
  4536  0FD9  3005               	movlw	5
  4537  0FDA  0020               	movlb	0	; select bank0
  4538  0FDB  00A0               	movwf	Delay_ms@time_to_delay
  4539  0FDC  3000               	movlw	0
  4540  0FDD  00A1               	movwf	Delay_ms@time_to_delay+1
  4541  0FDE  318D  25AD  318F   	fcall	_Delay_ms
  4542                           
  4543                           ;adf7012.c: 255: if(++bias == 14) {
  4544  0FE1  3001               	movlw	1
  4545  0FE2  0021               	movlb	1	; select bank1
  4546  0FE3  07DE               	addwf	Adf_Lock@bias^(0+128),f
  4547  0FE4  3000               	movlw	0
  4548  0FE5  3DDF               	addwfc	(Adf_Lock@bias+1)^(0+128),f
  4549  0FE6  300E               	movlw	14
  4550  0FE7  065E               	xorwf	Adf_Lock@bias^(0+128),w
  4551  0FE8  045F               	iorwf	(Adf_Lock@bias+1)^(0+128),w
  4552  0FE9  1D03               	skipz
  4553  0FEA  2FBD               	goto	l2245
  4554                           
  4555                           ;adf7012.c: 256: bias = 1;
  4556  0FEB  3001               	movlw	1
  4557  0FEC  00DE               	movwf	Adf_Lock@bias^(0+128)
  4558  0FED  3000               	movlw	0
  4559  0FEE  00DF               	movwf	(Adf_Lock@bias^(0+128)+1)
  4560                           
  4561                           ;adf7012.c: 257: if(++adj == 4) {
  4562  0FEF  3001               	movlw	1
  4563  0FF0  07DC               	addwf	Adf_Lock@adj^(0+128),f
  4564  0FF1  3000               	movlw	0
  4565  0FF2  3DDD               	addwfc	(Adf_Lock@adj+1)^(0+128),f
  4566  0FF3  3004               	movlw	4
  4567  0FF4  065C               	xorwf	Adf_Lock@adj^(0+128),w
  4568  0FF5  045D               	iorwf	(Adf_Lock@adj+1)^(0+128),w
  4569  0FF6  1D03               	skipz
  4570  0FF7  2FBD               	goto	l2245
  4571                           
  4572                           ;adf7012.c: 260: adf_config.r0.vco_adjust = 0;
  4573  0FF8  01A8               	clrf	(_adf_config^(0+128)+8)
  4574                           
  4575                           ;adf7012.c: 261: adf_config.r3.vco_bias = 5;
  4576  0FF9  3005               	movlw	5
  4577  0FFA  0020               	movlb	0	; select bank0
  4578  0FFB  00EB               	movwf	??_Adf_Lock
  4579  0FFC  086B               	movf	??_Adf_Lock,w
  4580  0FFD  0021               	movlb	1	; select bank1
  4581  0FFE  00C3               	movwf	(_adf_config^(0+128)+35)
  4582                           
  4583                           ;adf7012.c: 263: return 0;
  4584                           ;	Return value of _Adf_Lock is never used
  4585  0FFF  0008               	return
  4586  1000                     __end_of_Adf_Lock:	
  4587                           ;adf7012.c: 264: }
  4588                           ;adf7012.c: 265: }
  4589                           ;adf7012.c: 266: }
  4590                           ;adf7012.c: 270: return 1;
  4591                           ;	Return value of _Adf_Lock is never used
  4592                           
  4593                           
  4594                           	psect	text26
  4595  0C56                     __ptext26:	
  4596 ;; *************** function _Adf_Write_Config *****************
  4597 ;; Defined at:
  4598 ;;		line 152 in file "adf7012.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;		None               void
  4605 ;; Registers used:
  4606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    8
  4619 ;; This function calls:
  4620 ;;		_Adf_Write_Register_One
  4621 ;;		_Adf_Write_Register_Three
  4622 ;;		_Adf_Write_Register_Two
  4623 ;;		_Adf_Write_Register_Zero
  4624 ;; This function is called by:
  4625 ;;		_Adf_Lock
  4626 ;;		_Radio_Setup
  4627 ;;		_Ptt_On
  4628 ;;		_Ptt_Off
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           
  4633                           ;psect for function _Adf_Write_Config
  4634  0C56                     _Adf_Write_Config:	
  4635                           
  4636                           ;adf7012.c: 153: Adf_Write_Register_Zero();
  4637                           
  4638                           ;incstack = 0
  4639                           ; Regs used in _Adf_Write_Config: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4640  0C56  3182  22AE  318C   	fcall	_Adf_Write_Register_Zero
  4641                           
  4642                           ;adf7012.c: 154: Adf_Write_Register_One();
  4643  0C59  318F  271A  318C   	fcall	_Adf_Write_Register_One
  4644                           
  4645                           ;adf7012.c: 155: Adf_Write_Register_Two();
  4646  0C5C  3184  24C4  318C   	fcall	_Adf_Write_Register_Two
  4647                           
  4648                           ;adf7012.c: 156: Adf_Write_Register_Three();
  4649  0C5F  3180  206A         	fcall	_Adf_Write_Register_Three
  4650  0C61  0008               	return
  4651  0C62                     __end_of_Adf_Write_Config:	
  4652                           
  4653                           	psect	text27
  4654  02AE                     __ptext27:	
  4655 ;; *************** function _Adf_Write_Register_Zero *****************
  4656 ;; Defined at:
  4657 ;;		line 159 in file "adf7012.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;  reg_ptr         4   47[BANK0 ] unsigned char [4]
  4662 ;;  reg             4   51[BANK0 ] unsigned long 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;		None               void
  4665 ;; Registers used:
  4666 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4673 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4674 ;;      Temps:          0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4675 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4676 ;;Total ram usage:       36 bytes
  4677 ;; Hardware stack levels used:    1
  4678 ;; Hardware stack levels required when called:    7
  4679 ;; This function calls:
  4680 ;;		_Reverse_Array
  4681 ;;		_Write_Adf7012_Reg
  4682 ;;		_memcpy
  4683 ;; This function is called by:
  4684 ;;		_Adf_Write_Config
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           
  4689                           ;psect for function _Adf_Write_Register_Zero
  4690  02AE                     _Adf_Write_Register_Zero:	
  4691                           
  4692                           ;adf7012.c: 161: uint32_t reg =
  4693                           ;adf7012.c: 162: (0) |
  4694                           ;adf7012.c: 163: ((uint32_t)(adf_config.r0.frequency_error_correction & 0x7FF) << 2U) |
  4695                           ;adf7012.c: 164: ((uint32_t)(adf_config.r0.r_divider & 0xF ) << 13U) |
  4696                           ;adf7012.c: 165: ((uint32_t)(adf_config.r0.crystal_doubler & 0x1 ) << 17U) |
  4697                           ;adf7012.c: 166: ((uint32_t)(adf_config.r0.crystal_oscillator_disable & 0x1 ) << 18U) |
  4698                           ;adf7012.c: 167: ((uint32_t)(adf_config.r0.clock_out_divider & 0xF ) << 19U) |
  4699                           ;adf7012.c: 168: ((uint32_t)(adf_config.r0.vco_adjust & 0x3 ) << 23U) |
  4700                           
  4701                           ;incstack = 0
  4702                           ; Regs used in _Adf_Write_Register_Zero: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  4703  02AE  0021               	movlb	1	; select bank1
  4704  02AF  0829               	movf	(_adf_config^(0+128)+9),w
  4705  02B0  3903               	andlw	3
  4706  02B1  0020               	movlb	0	; select bank0
  4707  02B2  00B3               	movwf	??_Adf_Write_Register_Zero
  4708  02B3  01B4               	clrf	??_Adf_Write_Register_Zero+1
  4709  02B4  01B5               	clrf	??_Adf_Write_Register_Zero+2
  4710  02B5  01B6               	clrf	??_Adf_Write_Register_Zero+3
  4711  02B6  3019               	movlw	25
  4712  02B7                     u1135:	
  4713  02B7  35B3               	lslf	??_Adf_Write_Register_Zero,f
  4714  02B8  0DB4               	rlf	??_Adf_Write_Register_Zero+1,f
  4715  02B9  0DB5               	rlf	??_Adf_Write_Register_Zero+2,f
  4716  02BA  0DB6               	rlf	??_Adf_Write_Register_Zero+3,f
  4717  02BB  0B89               	decfsz	9,f
  4718  02BC  2AB7               	goto	u1135
  4719  02BD  0021               	movlb	1	; select bank1
  4720  02BE  0828               	movf	(_adf_config^(0+128)+8),w
  4721  02BF  3903               	andlw	3
  4722  02C0  0020               	movlb	0	; select bank0
  4723  02C1  00B7               	movwf	??_Adf_Write_Register_Zero+4
  4724  02C2  01B8               	clrf	??_Adf_Write_Register_Zero+5
  4725  02C3  01B9               	clrf	??_Adf_Write_Register_Zero+6
  4726  02C4  01BA               	clrf	??_Adf_Write_Register_Zero+7
  4727  02C5  3017               	movlw	23
  4728  02C6                     u1145:	
  4729  02C6  35B7               	lslf	??_Adf_Write_Register_Zero+4,f
  4730  02C7  0DB8               	rlf	??_Adf_Write_Register_Zero+5,f
  4731  02C8  0DB9               	rlf	??_Adf_Write_Register_Zero+6,f
  4732  02C9  0DBA               	rlf	??_Adf_Write_Register_Zero+7,f
  4733  02CA  0B89               	decfsz	9,f
  4734  02CB  2AC6               	goto	u1145
  4735  02CC  0021               	movlb	1	; select bank1
  4736  02CD  0827               	movf	(_adf_config^(0+128)+7),w
  4737  02CE  390F               	andlw	15
  4738  02CF  0020               	movlb	0	; select bank0
  4739  02D0  00BB               	movwf	??_Adf_Write_Register_Zero+8
  4740  02D1  01BC               	clrf	??_Adf_Write_Register_Zero+9
  4741  02D2  01BD               	clrf	??_Adf_Write_Register_Zero+10
  4742  02D3  01BE               	clrf	??_Adf_Write_Register_Zero+11
  4743  02D4  3013               	movlw	19
  4744  02D5                     u1155:	
  4745  02D5  35BB               	lslf	??_Adf_Write_Register_Zero+8,f
  4746  02D6  0DBC               	rlf	??_Adf_Write_Register_Zero+9,f
  4747  02D7  0DBD               	rlf	??_Adf_Write_Register_Zero+10,f
  4748  02D8  0DBE               	rlf	??_Adf_Write_Register_Zero+11,f
  4749  02D9  0B89               	decfsz	9,f
  4750  02DA  2AD5               	goto	u1155
  4751  02DB  0021               	movlb	1	; select bank1
  4752  02DC  0826               	movf	(_adf_config^(0+128)+6),w
  4753  02DD  3901               	andlw	1
  4754  02DE  0020               	movlb	0	; select bank0
  4755  02DF  00BF               	movwf	??_Adf_Write_Register_Zero+12
  4756  02E0  01C0               	clrf	??_Adf_Write_Register_Zero+13
  4757  02E1  01C1               	clrf	??_Adf_Write_Register_Zero+14
  4758  02E2  01C2               	clrf	??_Adf_Write_Register_Zero+15
  4759  02E3  3012               	movlw	18
  4760  02E4                     u1165:	
  4761  02E4  35BF               	lslf	??_Adf_Write_Register_Zero+12,f
  4762  02E5  0DC0               	rlf	??_Adf_Write_Register_Zero+13,f
  4763  02E6  0DC1               	rlf	??_Adf_Write_Register_Zero+14,f
  4764  02E7  0DC2               	rlf	??_Adf_Write_Register_Zero+15,f
  4765  02E8  0B89               	decfsz	9,f
  4766  02E9  2AE4               	goto	u1165
  4767  02EA  0021               	movlb	1	; select bank1
  4768  02EB  0825               	movf	(_adf_config^(0+128)+5),w
  4769  02EC  3901               	andlw	1
  4770  02ED  0020               	movlb	0	; select bank0
  4771  02EE  00C3               	movwf	??_Adf_Write_Register_Zero+16
  4772  02EF  01C4               	clrf	??_Adf_Write_Register_Zero+17
  4773  02F0  01C5               	clrf	??_Adf_Write_Register_Zero+18
  4774  02F1  01C6               	clrf	??_Adf_Write_Register_Zero+19
  4775  02F2  3011               	movlw	17
  4776  02F3                     u1175:	
  4777  02F3  35C3               	lslf	??_Adf_Write_Register_Zero+16,f
  4778  02F4  0DC4               	rlf	??_Adf_Write_Register_Zero+17,f
  4779  02F5  0DC5               	rlf	??_Adf_Write_Register_Zero+18,f
  4780  02F6  0DC6               	rlf	??_Adf_Write_Register_Zero+19,f
  4781  02F7  0B89               	decfsz	9,f
  4782  02F8  2AF3               	goto	u1175
  4783  02F9  0021               	movlb	1	; select bank1
  4784  02FA  0824               	movf	(_adf_config^(0+128)+4),w
  4785  02FB  390F               	andlw	15
  4786  02FC  0020               	movlb	0	; select bank0
  4787  02FD  00C7               	movwf	??_Adf_Write_Register_Zero+20
  4788  02FE  01C8               	clrf	??_Adf_Write_Register_Zero+21
  4789  02FF  01C9               	clrf	??_Adf_Write_Register_Zero+22
  4790  0300  01CA               	clrf	??_Adf_Write_Register_Zero+23
  4791  0301  300D               	movlw	13
  4792  0302                     u1185:	
  4793  0302  35C7               	lslf	??_Adf_Write_Register_Zero+20,f
  4794  0303  0DC8               	rlf	??_Adf_Write_Register_Zero+21,f
  4795  0304  0DC9               	rlf	??_Adf_Write_Register_Zero+22,f
  4796  0305  0DCA               	rlf	??_Adf_Write_Register_Zero+23,f
  4797  0306  0B89               	decfsz	9,f
  4798  0307  2B02               	goto	u1185
  4799  0308  30FF               	movlw	255
  4800  0309  0021               	movlb	1	; select bank1
  4801  030A  0520               	andwf	_adf_config^(0+128),w
  4802  030B  0020               	movlb	0	; select bank0
  4803  030C  00CB               	movwf	??_Adf_Write_Register_Zero+24
  4804  030D  3007               	movlw	7
  4805  030E  0021               	movlb	1	; select bank1
  4806  030F  0521               	andwf	(_adf_config+1)^(0+128),w
  4807  0310  0020               	movlb	0	; select bank0
  4808  0311  00CC               	movwf	??_Adf_Write_Register_Zero+25
  4809  0312  3000               	movlw	0
  4810  0313  0021               	movlb	1	; select bank1
  4811  0314  0522               	andwf	(_adf_config+2)^(0+128),w
  4812  0315  0020               	movlb	0	; select bank0
  4813  0316  00CD               	movwf	??_Adf_Write_Register_Zero+26
  4814  0317  3000               	movlw	0
  4815  0318  0021               	movlb	1	; select bank1
  4816  0319  0523               	andwf	(_adf_config+3)^(0+128),w
  4817  031A  0020               	movlb	0	; select bank0
  4818  031B  00CE               	movwf	??_Adf_Write_Register_Zero+27
  4819  031C  3002               	movlw	2
  4820  031D                     u1195:	
  4821  031D  35CB               	lslf	??_Adf_Write_Register_Zero+24,f
  4822  031E  0DCC               	rlf	??_Adf_Write_Register_Zero+25,f
  4823  031F  0DCD               	rlf	??_Adf_Write_Register_Zero+26,f
  4824  0320  0DCE               	rlf	??_Adf_Write_Register_Zero+27,f
  4825  0321  0B89               	decfsz	9,f
  4826  0322  2B1D               	goto	u1195
  4827  0323  084B               	movf	??_Adf_Write_Register_Zero+24,w
  4828  0324  04C7               	iorwf	??_Adf_Write_Register_Zero+20,f
  4829  0325  084C               	movf	??_Adf_Write_Register_Zero+25,w
  4830  0326  04C8               	iorwf	??_Adf_Write_Register_Zero+21,f
  4831  0327  084D               	movf	??_Adf_Write_Register_Zero+26,w
  4832  0328  04C9               	iorwf	??_Adf_Write_Register_Zero+22,f
  4833  0329  084E               	movf	??_Adf_Write_Register_Zero+27,w
  4834  032A  04CA               	iorwf	??_Adf_Write_Register_Zero+23,f
  4835  032B  0847               	movf	??_Adf_Write_Register_Zero+20,w
  4836  032C  04C3               	iorwf	??_Adf_Write_Register_Zero+16,f
  4837  032D  0848               	movf	??_Adf_Write_Register_Zero+21,w
  4838  032E  04C4               	iorwf	??_Adf_Write_Register_Zero+17,f
  4839  032F  0849               	movf	??_Adf_Write_Register_Zero+22,w
  4840  0330  04C5               	iorwf	??_Adf_Write_Register_Zero+18,f
  4841  0331  084A               	movf	??_Adf_Write_Register_Zero+23,w
  4842  0332  04C6               	iorwf	??_Adf_Write_Register_Zero+19,f
  4843  0333  0843               	movf	??_Adf_Write_Register_Zero+16,w
  4844  0334  04BF               	iorwf	??_Adf_Write_Register_Zero+12,f
  4845  0335  0844               	movf	??_Adf_Write_Register_Zero+17,w
  4846  0336  04C0               	iorwf	??_Adf_Write_Register_Zero+13,f
  4847  0337  0845               	movf	??_Adf_Write_Register_Zero+18,w
  4848  0338  04C1               	iorwf	??_Adf_Write_Register_Zero+14,f
  4849  0339  0846               	movf	??_Adf_Write_Register_Zero+19,w
  4850  033A  04C2               	iorwf	??_Adf_Write_Register_Zero+15,f
  4851  033B  083F               	movf	??_Adf_Write_Register_Zero+12,w
  4852  033C  04BB               	iorwf	??_Adf_Write_Register_Zero+8,f
  4853  033D  0840               	movf	??_Adf_Write_Register_Zero+13,w
  4854  033E  04BC               	iorwf	??_Adf_Write_Register_Zero+9,f
  4855  033F  0841               	movf	??_Adf_Write_Register_Zero+14,w
  4856  0340  04BD               	iorwf	??_Adf_Write_Register_Zero+10,f
  4857  0341  0842               	movf	??_Adf_Write_Register_Zero+15,w
  4858  0342  04BE               	iorwf	??_Adf_Write_Register_Zero+11,f
  4859  0343  083B               	movf	??_Adf_Write_Register_Zero+8,w
  4860  0344  04B7               	iorwf	??_Adf_Write_Register_Zero+4,f
  4861  0345  083C               	movf	??_Adf_Write_Register_Zero+9,w
  4862  0346  04B8               	iorwf	??_Adf_Write_Register_Zero+5,f
  4863  0347  083D               	movf	??_Adf_Write_Register_Zero+10,w
  4864  0348  04B9               	iorwf	??_Adf_Write_Register_Zero+6,f
  4865  0349  083E               	movf	??_Adf_Write_Register_Zero+11,w
  4866  034A  04BA               	iorwf	??_Adf_Write_Register_Zero+7,f
  4867  034B  0833               	movf	??_Adf_Write_Register_Zero,w
  4868  034C  0437               	iorwf	??_Adf_Write_Register_Zero+4,w
  4869  034D  00D3               	movwf	Adf_Write_Register_Zero@reg
  4870  034E  0834               	movf	??_Adf_Write_Register_Zero+1,w
  4871  034F  0438               	iorwf	??_Adf_Write_Register_Zero+5,w
  4872  0350  00D4               	movwf	Adf_Write_Register_Zero@reg+1
  4873  0351  0835               	movf	??_Adf_Write_Register_Zero+2,w
  4874  0352  0439               	iorwf	??_Adf_Write_Register_Zero+6,w
  4875  0353  00D5               	movwf	Adf_Write_Register_Zero@reg+2
  4876  0354  0836               	movf	??_Adf_Write_Register_Zero+3,w
  4877  0355  043A               	iorwf	??_Adf_Write_Register_Zero+7,w
  4878  0356  00D6               	movwf	Adf_Write_Register_Zero@reg+3
  4879                           
  4880                           ;adf7012.c: 172: uint8_t reg_ptr[4];
  4881                           ;adf7012.c: 173: memcpy(reg_ptr, &reg, 4);
  4882  0357  3053               	movlw	Adf_Write_Register_Zero@reg& (0+255)
  4883  0358  00B3               	movwf	??_Adf_Write_Register_Zero
  4884  0359  0833               	movf	??_Adf_Write_Register_Zero,w
  4885  035A  00A0               	movwf	memcpy@s1
  4886  035B  3004               	movlw	4
  4887  035C  00A1               	movwf	memcpy@n
  4888  035D  3000               	movlw	0
  4889  035E  00A2               	movwf	memcpy@n+1
  4890  035F  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4891  0360  318D  25D6  3182   	fcall	_memcpy
  4892                           
  4893                           ;adf7012.c: 174: Reverse_Array(reg_ptr,4);
  4894  0363  3004               	movlw	4
  4895  0364  0020               	movlb	0	; select bank0
  4896  0365  00B3               	movwf	??_Adf_Write_Register_Zero
  4897  0366  0833               	movf	??_Adf_Write_Register_Zero,w
  4898  0367  00A7               	movwf	Reverse_Array@length
  4899  0368  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4900  0369  318E  26D6  3182   	fcall	_Reverse_Array
  4901                           
  4902                           ;adf7012.c: 175: Write_Adf7012_Reg(reg_ptr, 4);
  4903  036C  3004               	movlw	4
  4904  036D  0020               	movlb	0	; select bank0
  4905  036E  00B3               	movwf	??_Adf_Write_Register_Zero
  4906  036F  0833               	movf	??_Adf_Write_Register_Zero,w
  4907  0370  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  4908  0371  304F               	movlw	Adf_Write_Register_Zero@reg_ptr& (0+255)
  4909  0372  318E  269D         	fcall	_Write_Adf7012_Reg
  4910  0374  0008               	return
  4911  0375                     __end_of_Adf_Write_Register_Zero:	
  4912                           
  4913                           	psect	text28
  4914  04C4                     __ptext28:	
  4915 ;; *************** function _Adf_Write_Register_Two *****************
  4916 ;; Defined at:
  4917 ;;		line 191 in file "adf7012.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;  reg_ptr         4   43[BANK0 ] unsigned char [4]
  4922 ;;  reg             4   47[BANK0 ] unsigned long 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;		None               void
  4925 ;; Registers used:
  4926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4933 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4934 ;;      Temps:          0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4935 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4936 ;;Total ram usage:       32 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    7
  4939 ;; This function calls:
  4940 ;;		_Reverse_Array
  4941 ;;		_Write_Adf7012_Reg
  4942 ;;		_memcpy
  4943 ;; This function is called by:
  4944 ;;		_Adf_Write_Config
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           
  4949                           ;psect for function _Adf_Write_Register_Two
  4950  04C4                     _Adf_Write_Register_Two:	
  4951                           
  4952                           ;adf7012.c: 192: uint32_t reg =
  4953                           ;adf7012.c: 193: (2) |
  4954                           ;adf7012.c: 194: ((uint32_t)(adf_config.r2.mod_control & 0x3 ) << 2) |
  4955                           ;adf7012.c: 195: ((uint32_t)(adf_config.r2.gook & 0x1 ) << 4) |
  4956                           ;adf7012.c: 196: ((uint32_t)(adf_config.r2.power_amplifier_level & 0x3F ) << 5) |
  4957                           ;adf7012.c: 197: ((uint32_t)(adf_config.r2.modulation_deviation & 0x1FF) << 11) |
  4958                           ;adf7012.c: 198: ((uint32_t)(adf_config.r2.gfsk_modulation_control & 0x7 ) << 20) |
  4959                           ;adf7012.c: 199: ((uint32_t)(adf_config.r2.index_counter & 0x3 ) << 23);
  4960                           
  4961                           ;incstack = 0
  4962                           ; Regs used in _Adf_Write_Register_Two: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  4963  04C4  0021               	movlb	1	; select bank1
  4964  04C5  0838               	movf	(_adf_config^(0+128)+24),w
  4965  04C6  3903               	andlw	3
  4966  04C7  0020               	movlb	0	; select bank0
  4967  04C8  00B3               	movwf	??_Adf_Write_Register_Two
  4968  04C9  01B4               	clrf	??_Adf_Write_Register_Two+1
  4969  04CA  01B5               	clrf	??_Adf_Write_Register_Two+2
  4970  04CB  01B6               	clrf	??_Adf_Write_Register_Two+3
  4971  04CC  3017               	movlw	23
  4972  04CD                     u1235:	
  4973  04CD  35B3               	lslf	??_Adf_Write_Register_Two,f
  4974  04CE  0DB4               	rlf	??_Adf_Write_Register_Two+1,f
  4975  04CF  0DB5               	rlf	??_Adf_Write_Register_Two+2,f
  4976  04D0  0DB6               	rlf	??_Adf_Write_Register_Two+3,f
  4977  04D1  0B89               	decfsz	9,f
  4978  04D2  2CCD               	goto	u1235
  4979  04D3  0021               	movlb	1	; select bank1
  4980  04D4  0837               	movf	(_adf_config^(0+128)+23),w
  4981  04D5  3907               	andlw	7
  4982  04D6  0020               	movlb	0	; select bank0
  4983  04D7  00B7               	movwf	??_Adf_Write_Register_Two+4
  4984  04D8  01B8               	clrf	??_Adf_Write_Register_Two+5
  4985  04D9  01B9               	clrf	??_Adf_Write_Register_Two+6
  4986  04DA  01BA               	clrf	??_Adf_Write_Register_Two+7
  4987  04DB  3014               	movlw	20
  4988  04DC                     u1245:	
  4989  04DC  35B7               	lslf	??_Adf_Write_Register_Two+4,f
  4990  04DD  0DB8               	rlf	??_Adf_Write_Register_Two+5,f
  4991  04DE  0DB9               	rlf	??_Adf_Write_Register_Two+6,f
  4992  04DF  0DBA               	rlf	??_Adf_Write_Register_Two+7,f
  4993  04E0  0B89               	decfsz	9,f
  4994  04E1  2CDC               	goto	u1245
  4995  04E2  3013               	movlw	19
  4996  04E3  3EA0               	addlw	_adf_config& (0+255)
  4997  04E4  0086               	movwf	6
  4998  04E5  0187               	clrf	7
  4999  04E6  30FF               	movlw	255
  5000  04E7  0501               	andwf	1,w
  5001  04E8  00BB               	movwf	??_Adf_Write_Register_Two+8
  5002  04E9  3141               	addfsr 1,1
  5003  04EA  3001               	movlw	1
  5004  04EB  0501               	andwf	1,w
  5005  04EC  00BC               	movwf	??_Adf_Write_Register_Two+9
  5006  04ED  3141               	addfsr 1,1
  5007  04EE  3000               	movlw	0
  5008  04EF  0501               	andwf	1,w
  5009  04F0  00BD               	movwf	??_Adf_Write_Register_Two+10
  5010  04F1  3141               	addfsr 1,1
  5011  04F2  3000               	movlw	0
  5012  04F3  0501               	andwf	1,w
  5013  04F4  00BE               	movwf	??_Adf_Write_Register_Two+11
  5014  04F5  300B               	movlw	11
  5015  04F6                     u1255:	
  5016  04F6  35BB               	lslf	??_Adf_Write_Register_Two+8,f
  5017  04F7  0DBC               	rlf	??_Adf_Write_Register_Two+9,f
  5018  04F8  0DBD               	rlf	??_Adf_Write_Register_Two+10,f
  5019  04F9  0DBE               	rlf	??_Adf_Write_Register_Two+11,f
  5020  04FA  0B89               	decfsz	9,f
  5021  04FB  2CF6               	goto	u1255
  5022  04FC  0021               	movlb	1	; select bank1
  5023  04FD  0832               	movf	(_adf_config^(0+128)+18),w
  5024  04FE  393F               	andlw	63
  5025  04FF  0020               	movlb	0	; select bank0
  5026  0500  00BF               	movwf	??_Adf_Write_Register_Two+12
  5027  0501  01C0               	clrf	??_Adf_Write_Register_Two+13
  5028  0502  01C1               	clrf	??_Adf_Write_Register_Two+14
  5029  0503  01C2               	clrf	??_Adf_Write_Register_Two+15
  5030  0504  3005               	movlw	5
  5031  0505                     u1265:	
  5032  0505  35BF               	lslf	??_Adf_Write_Register_Two+12,f
  5033  0506  0DC0               	rlf	??_Adf_Write_Register_Two+13,f
  5034  0507  0DC1               	rlf	??_Adf_Write_Register_Two+14,f
  5035  0508  0DC2               	rlf	??_Adf_Write_Register_Two+15,f
  5036  0509  0B89               	decfsz	9,f
  5037  050A  2D05               	goto	u1265
  5038  050B  0021               	movlb	1	; select bank1
  5039  050C  0831               	movf	(_adf_config^(0+128)+17),w
  5040  050D  3901               	andlw	1
  5041  050E  0020               	movlb	0	; select bank0
  5042  050F  00C3               	movwf	??_Adf_Write_Register_Two+16
  5043  0510  01C4               	clrf	??_Adf_Write_Register_Two+17
  5044  0511  01C5               	clrf	??_Adf_Write_Register_Two+18
  5045  0512  01C6               	clrf	??_Adf_Write_Register_Two+19
  5046  0513  3004               	movlw	4
  5047  0514                     u1275:	
  5048  0514  35C3               	lslf	??_Adf_Write_Register_Two+16,f
  5049  0515  0DC4               	rlf	??_Adf_Write_Register_Two+17,f
  5050  0516  0DC5               	rlf	??_Adf_Write_Register_Two+18,f
  5051  0517  0DC6               	rlf	??_Adf_Write_Register_Two+19,f
  5052  0518  0B89               	decfsz	9,f
  5053  0519  2D14               	goto	u1275
  5054  051A  0021               	movlb	1	; select bank1
  5055  051B  0830               	movf	(_adf_config^(0+128)+16),w
  5056  051C  3903               	andlw	3
  5057  051D  0020               	movlb	0	; select bank0
  5058  051E  00C7               	movwf	??_Adf_Write_Register_Two+20
  5059  051F  01C8               	clrf	??_Adf_Write_Register_Two+21
  5060  0520  01C9               	clrf	??_Adf_Write_Register_Two+22
  5061  0521  01CA               	clrf	??_Adf_Write_Register_Two+23
  5062  0522  3002               	movlw	2
  5063  0523                     u1285:	
  5064  0523  35C7               	lslf	??_Adf_Write_Register_Two+20,f
  5065  0524  0DC8               	rlf	??_Adf_Write_Register_Two+21,f
  5066  0525  0DC9               	rlf	??_Adf_Write_Register_Two+22,f
  5067  0526  0DCA               	rlf	??_Adf_Write_Register_Two+23,f
  5068  0527  0B89               	decfsz	9,f
  5069  0528  2D23               	goto	u1285
  5070  0529  0847               	movf	??_Adf_Write_Register_Two+20,w
  5071  052A  04C3               	iorwf	??_Adf_Write_Register_Two+16,f
  5072  052B  0848               	movf	??_Adf_Write_Register_Two+21,w
  5073  052C  04C4               	iorwf	??_Adf_Write_Register_Two+17,f
  5074  052D  0849               	movf	??_Adf_Write_Register_Two+22,w
  5075  052E  04C5               	iorwf	??_Adf_Write_Register_Two+18,f
  5076  052F  084A               	movf	??_Adf_Write_Register_Two+23,w
  5077  0530  04C6               	iorwf	??_Adf_Write_Register_Two+19,f
  5078  0531  0843               	movf	??_Adf_Write_Register_Two+16,w
  5079  0532  04BF               	iorwf	??_Adf_Write_Register_Two+12,f
  5080  0533  0844               	movf	??_Adf_Write_Register_Two+17,w
  5081  0534  04C0               	iorwf	??_Adf_Write_Register_Two+13,f
  5082  0535  0845               	movf	??_Adf_Write_Register_Two+18,w
  5083  0536  04C1               	iorwf	??_Adf_Write_Register_Two+14,f
  5084  0537  0846               	movf	??_Adf_Write_Register_Two+19,w
  5085  0538  04C2               	iorwf	??_Adf_Write_Register_Two+15,f
  5086  0539  083F               	movf	??_Adf_Write_Register_Two+12,w
  5087  053A  04BB               	iorwf	??_Adf_Write_Register_Two+8,f
  5088  053B  0840               	movf	??_Adf_Write_Register_Two+13,w
  5089  053C  04BC               	iorwf	??_Adf_Write_Register_Two+9,f
  5090  053D  0841               	movf	??_Adf_Write_Register_Two+14,w
  5091  053E  04BD               	iorwf	??_Adf_Write_Register_Two+10,f
  5092  053F  0842               	movf	??_Adf_Write_Register_Two+15,w
  5093  0540  04BE               	iorwf	??_Adf_Write_Register_Two+11,f
  5094  0541  083B               	movf	??_Adf_Write_Register_Two+8,w
  5095  0542  04B7               	iorwf	??_Adf_Write_Register_Two+4,f
  5096  0543  083C               	movf	??_Adf_Write_Register_Two+9,w
  5097  0544  04B8               	iorwf	??_Adf_Write_Register_Two+5,f
  5098  0545  083D               	movf	??_Adf_Write_Register_Two+10,w
  5099  0546  04B9               	iorwf	??_Adf_Write_Register_Two+6,f
  5100  0547  083E               	movf	??_Adf_Write_Register_Two+11,w
  5101  0548  04BA               	iorwf	??_Adf_Write_Register_Two+7,f
  5102  0549  0837               	movf	??_Adf_Write_Register_Two+4,w
  5103  054A  04B3               	iorwf	??_Adf_Write_Register_Two,f
  5104  054B  0838               	movf	??_Adf_Write_Register_Two+5,w
  5105  054C  04B4               	iorwf	??_Adf_Write_Register_Two+1,f
  5106  054D  0839               	movf	??_Adf_Write_Register_Two+6,w
  5107  054E  04B5               	iorwf	??_Adf_Write_Register_Two+2,f
  5108  054F  083A               	movf	??_Adf_Write_Register_Two+7,w
  5109  0550  04B6               	iorwf	??_Adf_Write_Register_Two+3,f
  5110  0551  3002               	movlw	2
  5111  0552  0433               	iorwf	??_Adf_Write_Register_Two,w
  5112  0553  00CF               	movwf	Adf_Write_Register_Two@reg
  5113  0554  3000               	movlw	0
  5114  0555  0434               	iorwf	??_Adf_Write_Register_Two+1,w
  5115  0556  00D0               	movwf	Adf_Write_Register_Two@reg+1
  5116  0557  3000               	movlw	0
  5117  0558  0435               	iorwf	??_Adf_Write_Register_Two+2,w
  5118  0559  00D1               	movwf	Adf_Write_Register_Two@reg+2
  5119  055A  3000               	movlw	0
  5120  055B  0436               	iorwf	??_Adf_Write_Register_Two+3,w
  5121  055C  00D2               	movwf	Adf_Write_Register_Two@reg+3
  5122                           
  5123                           ;adf7012.c: 202: uint8_t reg_ptr[4];
  5124                           ;adf7012.c: 203: memcpy(reg_ptr, &reg, 4);
  5125  055D  304F               	movlw	Adf_Write_Register_Two@reg& (0+255)
  5126  055E  00B3               	movwf	??_Adf_Write_Register_Two
  5127  055F  0833               	movf	??_Adf_Write_Register_Two,w
  5128  0560  00A0               	movwf	memcpy@s1
  5129  0561  3004               	movlw	4
  5130  0562  00A1               	movwf	memcpy@n
  5131  0563  3000               	movlw	0
  5132  0564  00A2               	movwf	memcpy@n+1
  5133  0565  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5134  0566  318D  25D6  3184   	fcall	_memcpy
  5135                           
  5136                           ;adf7012.c: 204: Reverse_Array(reg_ptr,4);
  5137  0569  3004               	movlw	4
  5138  056A  0020               	movlb	0	; select bank0
  5139  056B  00B3               	movwf	??_Adf_Write_Register_Two
  5140  056C  0833               	movf	??_Adf_Write_Register_Two,w
  5141  056D  00A7               	movwf	Reverse_Array@length
  5142  056E  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5143  056F  318E  26D6  3184   	fcall	_Reverse_Array
  5144                           
  5145                           ;adf7012.c: 205: Write_Adf7012_Reg(reg_ptr, 4);
  5146  0572  3004               	movlw	4
  5147  0573  0020               	movlb	0	; select bank0
  5148  0574  00B3               	movwf	??_Adf_Write_Register_Two
  5149  0575  0833               	movf	??_Adf_Write_Register_Two,w
  5150  0576  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5151  0577  304B               	movlw	Adf_Write_Register_Two@reg_ptr& (0+255)
  5152  0578  318E  269D         	fcall	_Write_Adf7012_Reg
  5153  057A  0008               	return
  5154  057B                     __end_of_Adf_Write_Register_Two:	
  5155                           
  5156                           	psect	text29
  5157  006A                     __ptext29:	
  5158 ;; *************** function _Adf_Write_Register_Three *****************
  5159 ;; Defined at:
  5160 ;;		line 208 in file "adf7012.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  reg_ptr         4    0[BANK1 ] unsigned char [4]
  5165 ;;  reg             4    4[BANK1 ] unsigned long 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;		None               void
  5168 ;; Registers used:
  5169 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;      Temps:          0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5178 ;;      Totals:         0      56       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5179 ;;Total ram usage:       64 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    7
  5182 ;; This function calls:
  5183 ;;		_Reverse_Array
  5184 ;;		_Write_Adf7012_Reg
  5185 ;;		_memcpy
  5186 ;; This function is called by:
  5187 ;;		_Adf_Write_Config
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function _Adf_Write_Register_Three
  5193  006A                     _Adf_Write_Register_Three:	
  5194                           
  5195                           ;adf7012.c: 209: uint32_t reg =
  5196                           ;adf7012.c: 210: (3) |
  5197                           ;adf7012.c: 211: ((uint32_t)(adf_config.r3.pll_enable & 0x1 ) << 2) |
  5198                           ;adf7012.c: 212: ((uint32_t)(adf_config.r3.pa_enable & 0x1 ) << 3) |
  5199                           ;adf7012.c: 213: ((uint32_t)(adf_config.r3.clkout_enable & 0x1 ) << 4) |
  5200                           ;adf7012.c: 214: ((uint32_t)(adf_config.r3.data_invert & 0x1 ) << 5) |
  5201                           ;adf7012.c: 215: ((uint32_t)(adf_config.r3.charge_pump_current & 0x3 ) << 6) |
  5202                           ;adf7012.c: 216: ((uint32_t)(adf_config.r3.bleed_up & 0x1 ) << 8) |
  5203                           ;adf7012.c: 217: ((uint32_t)(adf_config.r3.bleed_down & 0x1 ) << 9) |
  5204                           
  5205                           ;incstack = 0
  5206                           ; Regs used in _Adf_Write_Register_Three: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  5207  006A  0021               	movlb	1	; select bank1
  5208  006B  0846               	movf	(_adf_config^(0+128)+38),w
  5209  006C  390F               	andlw	15
  5210  006D  0020               	movlb	0	; select bank0
  5211  006E  00B3               	movwf	??_Adf_Write_Register_Three
  5212  006F  01B4               	clrf	??_Adf_Write_Register_Three+1
  5213  0070  01B5               	clrf	??_Adf_Write_Register_Three+2
  5214  0071  01B6               	clrf	??_Adf_Write_Register_Three+3
  5215  0072  301C               	movlw	28
  5216  0073                     u1295:	
  5217  0073  35B3               	lslf	??_Adf_Write_Register_Three,f
  5218  0074  0DB4               	rlf	??_Adf_Write_Register_Three+1,f
  5219  0075  0DB5               	rlf	??_Adf_Write_Register_Three+2,f
  5220  0076  0DB6               	rlf	??_Adf_Write_Register_Three+3,f
  5221  0077  0B89               	decfsz	9,f
  5222  0078  2873               	goto	u1295
  5223  0079  0021               	movlb	1	; select bank1
  5224  007A  0845               	movf	(_adf_config^(0+128)+37),w
  5225  007B  391F               	andlw	31
  5226  007C  0020               	movlb	0	; select bank0
  5227  007D  00B7               	movwf	??_Adf_Write_Register_Three+4
  5228  007E  01B8               	clrf	??_Adf_Write_Register_Three+5
  5229  007F  01B9               	clrf	??_Adf_Write_Register_Three+6
  5230  0080  01BA               	clrf	??_Adf_Write_Register_Three+7
  5231  0081  3017               	movlw	23
  5232  0082                     u1305:	
  5233  0082  35B7               	lslf	??_Adf_Write_Register_Three+4,f
  5234  0083  0DB8               	rlf	??_Adf_Write_Register_Three+5,f
  5235  0084  0DB9               	rlf	??_Adf_Write_Register_Three+6,f
  5236  0085  0DBA               	rlf	??_Adf_Write_Register_Three+7,f
  5237  0086  0B89               	decfsz	9,f
  5238  0087  2882               	goto	u1305
  5239  0088  0021               	movlb	1	; select bank1
  5240  0089  0844               	movf	(_adf_config^(0+128)+36),w
  5241  008A  3907               	andlw	7
  5242  008B  0020               	movlb	0	; select bank0
  5243  008C  00BB               	movwf	??_Adf_Write_Register_Three+8
  5244  008D  01BC               	clrf	??_Adf_Write_Register_Three+9
  5245  008E  01BD               	clrf	??_Adf_Write_Register_Three+10
  5246  008F  01BE               	clrf	??_Adf_Write_Register_Three+11
  5247  0090  3014               	movlw	20
  5248  0091                     u1315:	
  5249  0091  35BB               	lslf	??_Adf_Write_Register_Three+8,f
  5250  0092  0DBC               	rlf	??_Adf_Write_Register_Three+9,f
  5251  0093  0DBD               	rlf	??_Adf_Write_Register_Three+10,f
  5252  0094  0DBE               	rlf	??_Adf_Write_Register_Three+11,f
  5253  0095  0B89               	decfsz	9,f
  5254  0096  2891               	goto	u1315
  5255  0097  0021               	movlb	1	; select bank1
  5256  0098  0843               	movf	(_adf_config^(0+128)+35),w
  5257  0099  390F               	andlw	15
  5258  009A  0020               	movlb	0	; select bank0
  5259  009B  00BF               	movwf	??_Adf_Write_Register_Three+12
  5260  009C  01C0               	clrf	??_Adf_Write_Register_Three+13
  5261  009D  01C1               	clrf	??_Adf_Write_Register_Three+14
  5262  009E  01C2               	clrf	??_Adf_Write_Register_Three+15
  5263  009F  3010               	movlw	16
  5264  00A0                     u1325:	
  5265  00A0  35BF               	lslf	??_Adf_Write_Register_Three+12,f
  5266  00A1  0DC0               	rlf	??_Adf_Write_Register_Three+13,f
  5267  00A2  0DC1               	rlf	??_Adf_Write_Register_Three+14,f
  5268  00A3  0DC2               	rlf	??_Adf_Write_Register_Three+15,f
  5269  00A4  0B89               	decfsz	9,f
  5270  00A5  28A0               	goto	u1325
  5271  00A6  0021               	movlb	1	; select bank1
  5272  00A7  0842               	movf	(_adf_config^(0+128)+34),w
  5273  00A8  3901               	andlw	1
  5274  00A9  0020               	movlb	0	; select bank0
  5275  00AA  00C3               	movwf	??_Adf_Write_Register_Three+16
  5276  00AB  01C4               	clrf	??_Adf_Write_Register_Three+17
  5277  00AC  01C5               	clrf	??_Adf_Write_Register_Three+18
  5278  00AD  01C6               	clrf	??_Adf_Write_Register_Three+19
  5279  00AE  300F               	movlw	15
  5280  00AF                     u1335:	
  5281  00AF  35C3               	lslf	??_Adf_Write_Register_Three+16,f
  5282  00B0  0DC4               	rlf	??_Adf_Write_Register_Three+17,f
  5283  00B1  0DC5               	rlf	??_Adf_Write_Register_Three+18,f
  5284  00B2  0DC6               	rlf	??_Adf_Write_Register_Three+19,f
  5285  00B3  0B89               	decfsz	9,f
  5286  00B4  28AF               	goto	u1335
  5287  00B5  0021               	movlb	1	; select bank1
  5288  00B6  0841               	movf	(_adf_config^(0+128)+33),w
  5289  00B7  390F               	andlw	15
  5290  00B8  0020               	movlb	0	; select bank0
  5291  00B9  00C7               	movwf	??_Adf_Write_Register_Three+20
  5292  00BA  01C8               	clrf	??_Adf_Write_Register_Three+21
  5293  00BB  01C9               	clrf	??_Adf_Write_Register_Three+22
  5294  00BC  01CA               	clrf	??_Adf_Write_Register_Three+23
  5295  00BD  300B               	movlw	11
  5296  00BE                     u1345:	
  5297  00BE  35C7               	lslf	??_Adf_Write_Register_Three+20,f
  5298  00BF  0DC8               	rlf	??_Adf_Write_Register_Three+21,f
  5299  00C0  0DC9               	rlf	??_Adf_Write_Register_Three+22,f
  5300  00C1  0DCA               	rlf	??_Adf_Write_Register_Three+23,f
  5301  00C2  0B89               	decfsz	9,f
  5302  00C3  28BE               	goto	u1345
  5303  00C4  0021               	movlb	1	; select bank1
  5304  00C5  0840               	movf	(_adf_config^(0+128)+32),w
  5305  00C6  3901               	andlw	1
  5306  00C7  0020               	movlb	0	; select bank0
  5307  00C8  00CB               	movwf	??_Adf_Write_Register_Three+24
  5308  00C9  01CC               	clrf	??_Adf_Write_Register_Three+25
  5309  00CA  01CD               	clrf	??_Adf_Write_Register_Three+26
  5310  00CB  01CE               	clrf	??_Adf_Write_Register_Three+27
  5311  00CC  300A               	movlw	10
  5312  00CD                     u1355:	
  5313  00CD  35CB               	lslf	??_Adf_Write_Register_Three+24,f
  5314  00CE  0DCC               	rlf	??_Adf_Write_Register_Three+25,f
  5315  00CF  0DCD               	rlf	??_Adf_Write_Register_Three+26,f
  5316  00D0  0DCE               	rlf	??_Adf_Write_Register_Three+27,f
  5317  00D1  0B89               	decfsz	9,f
  5318  00D2  28CD               	goto	u1355
  5319  00D3  0021               	movlb	1	; select bank1
  5320  00D4  083F               	movf	(_adf_config^(0+128)+31),w
  5321  00D5  3901               	andlw	1
  5322  00D6  0020               	movlb	0	; select bank0
  5323  00D7  00CF               	movwf	??_Adf_Write_Register_Three+28
  5324  00D8  01D0               	clrf	??_Adf_Write_Register_Three+29
  5325  00D9  01D1               	clrf	??_Adf_Write_Register_Three+30
  5326  00DA  01D2               	clrf	??_Adf_Write_Register_Three+31
  5327  00DB  3009               	movlw	9
  5328  00DC                     u1365:	
  5329  00DC  35CF               	lslf	??_Adf_Write_Register_Three+28,f
  5330  00DD  0DD0               	rlf	??_Adf_Write_Register_Three+29,f
  5331  00DE  0DD1               	rlf	??_Adf_Write_Register_Three+30,f
  5332  00DF  0DD2               	rlf	??_Adf_Write_Register_Three+31,f
  5333  00E0  0B89               	decfsz	9,f
  5334  00E1  28DC               	goto	u1365
  5335  00E2  0021               	movlb	1	; select bank1
  5336  00E3  083E               	movf	(_adf_config^(0+128)+30),w
  5337  00E4  3901               	andlw	1
  5338  00E5  0020               	movlb	0	; select bank0
  5339  00E6  00D3               	movwf	??_Adf_Write_Register_Three+32
  5340  00E7  01D4               	clrf	??_Adf_Write_Register_Three+33
  5341  00E8  01D5               	clrf	??_Adf_Write_Register_Three+34
  5342  00E9  01D6               	clrf	??_Adf_Write_Register_Three+35
  5343  00EA  3008               	movlw	8
  5344  00EB                     u1375:	
  5345  00EB  35D3               	lslf	??_Adf_Write_Register_Three+32,f
  5346  00EC  0DD4               	rlf	??_Adf_Write_Register_Three+33,f
  5347  00ED  0DD5               	rlf	??_Adf_Write_Register_Three+34,f
  5348  00EE  0DD6               	rlf	??_Adf_Write_Register_Three+35,f
  5349  00EF  0B89               	decfsz	9,f
  5350  00F0  28EB               	goto	u1375
  5351  00F1  0021               	movlb	1	; select bank1
  5352  00F2  083D               	movf	(_adf_config^(0+128)+29),w
  5353  00F3  3903               	andlw	3
  5354  00F4  0020               	movlb	0	; select bank0
  5355  00F5  00D7               	movwf	??_Adf_Write_Register_Three+36
  5356  00F6  01D8               	clrf	??_Adf_Write_Register_Three+37
  5357  00F7  01D9               	clrf	??_Adf_Write_Register_Three+38
  5358  00F8  01DA               	clrf	??_Adf_Write_Register_Three+39
  5359  00F9  3006               	movlw	6
  5360  00FA                     u1385:	
  5361  00FA  35D7               	lslf	??_Adf_Write_Register_Three+36,f
  5362  00FB  0DD8               	rlf	??_Adf_Write_Register_Three+37,f
  5363  00FC  0DD9               	rlf	??_Adf_Write_Register_Three+38,f
  5364  00FD  0DDA               	rlf	??_Adf_Write_Register_Three+39,f
  5365  00FE  0B89               	decfsz	9,f
  5366  00FF  28FA               	goto	u1385
  5367  0100  0021               	movlb	1	; select bank1
  5368  0101  083C               	movf	(_adf_config^(0+128)+28),w
  5369  0102  3901               	andlw	1
  5370  0103  0020               	movlb	0	; select bank0
  5371  0104  00DB               	movwf	??_Adf_Write_Register_Three+40
  5372  0105  01DC               	clrf	??_Adf_Write_Register_Three+41
  5373  0106  01DD               	clrf	??_Adf_Write_Register_Three+42
  5374  0107  01DE               	clrf	??_Adf_Write_Register_Three+43
  5375  0108  3005               	movlw	5
  5376  0109                     u1395:	
  5377  0109  35DB               	lslf	??_Adf_Write_Register_Three+40,f
  5378  010A  0DDC               	rlf	??_Adf_Write_Register_Three+41,f
  5379  010B  0DDD               	rlf	??_Adf_Write_Register_Three+42,f
  5380  010C  0DDE               	rlf	??_Adf_Write_Register_Three+43,f
  5381  010D  0B89               	decfsz	9,f
  5382  010E  2909               	goto	u1395
  5383  010F  0021               	movlb	1	; select bank1
  5384  0110  083B               	movf	(_adf_config^(0+128)+27),w
  5385  0111  3901               	andlw	1
  5386  0112  0020               	movlb	0	; select bank0
  5387  0113  00DF               	movwf	??_Adf_Write_Register_Three+44
  5388  0114  01E0               	clrf	??_Adf_Write_Register_Three+45
  5389  0115  01E1               	clrf	??_Adf_Write_Register_Three+46
  5390  0116  01E2               	clrf	??_Adf_Write_Register_Three+47
  5391  0117  3004               	movlw	4
  5392  0118                     u1405:	
  5393  0118  35DF               	lslf	??_Adf_Write_Register_Three+44,f
  5394  0119  0DE0               	rlf	??_Adf_Write_Register_Three+45,f
  5395  011A  0DE1               	rlf	??_Adf_Write_Register_Three+46,f
  5396  011B  0DE2               	rlf	??_Adf_Write_Register_Three+47,f
  5397  011C  0B89               	decfsz	9,f
  5398  011D  2918               	goto	u1405
  5399  011E  0021               	movlb	1	; select bank1
  5400  011F  083A               	movf	(_adf_config^(0+128)+26),w
  5401  0120  3901               	andlw	1
  5402  0121  0020               	movlb	0	; select bank0
  5403  0122  00E3               	movwf	??_Adf_Write_Register_Three+48
  5404  0123  01E4               	clrf	??_Adf_Write_Register_Three+49
  5405  0124  01E5               	clrf	??_Adf_Write_Register_Three+50
  5406  0125  01E6               	clrf	??_Adf_Write_Register_Three+51
  5407  0126  3003               	movlw	3
  5408  0127                     u1415:	
  5409  0127  35E3               	lslf	??_Adf_Write_Register_Three+48,f
  5410  0128  0DE4               	rlf	??_Adf_Write_Register_Three+49,f
  5411  0129  0DE5               	rlf	??_Adf_Write_Register_Three+50,f
  5412  012A  0DE6               	rlf	??_Adf_Write_Register_Three+51,f
  5413  012B  0B89               	decfsz	9,f
  5414  012C  2927               	goto	u1415
  5415  012D  0021               	movlb	1	; select bank1
  5416  012E  0839               	movf	(_adf_config^(0+128)+25),w
  5417  012F  3901               	andlw	1
  5418  0130  0020               	movlb	0	; select bank0
  5419  0131  00E7               	movwf	??_Adf_Write_Register_Three+52
  5420  0132  01E8               	clrf	??_Adf_Write_Register_Three+53
  5421  0133  01E9               	clrf	??_Adf_Write_Register_Three+54
  5422  0134  01EA               	clrf	??_Adf_Write_Register_Three+55
  5423  0135  3002               	movlw	2
  5424  0136                     u1425:	
  5425  0136  35E7               	lslf	??_Adf_Write_Register_Three+52,f
  5426  0137  0DE8               	rlf	??_Adf_Write_Register_Three+53,f
  5427  0138  0DE9               	rlf	??_Adf_Write_Register_Three+54,f
  5428  0139  0DEA               	rlf	??_Adf_Write_Register_Three+55,f
  5429  013A  0B89               	decfsz	9,f
  5430  013B  2936               	goto	u1425
  5431  013C  0867               	movf	??_Adf_Write_Register_Three+52,w
  5432  013D  04E3               	iorwf	??_Adf_Write_Register_Three+48,f
  5433  013E  0868               	movf	??_Adf_Write_Register_Three+53,w
  5434  013F  04E4               	iorwf	??_Adf_Write_Register_Three+49,f
  5435  0140  0869               	movf	??_Adf_Write_Register_Three+54,w
  5436  0141  04E5               	iorwf	??_Adf_Write_Register_Three+50,f
  5437  0142  086A               	movf	??_Adf_Write_Register_Three+55,w
  5438  0143  04E6               	iorwf	??_Adf_Write_Register_Three+51,f
  5439  0144  0863               	movf	??_Adf_Write_Register_Three+48,w
  5440  0145  04DF               	iorwf	??_Adf_Write_Register_Three+44,f
  5441  0146  0864               	movf	??_Adf_Write_Register_Three+49,w
  5442  0147  04E0               	iorwf	??_Adf_Write_Register_Three+45,f
  5443  0148  0865               	movf	??_Adf_Write_Register_Three+50,w
  5444  0149  04E1               	iorwf	??_Adf_Write_Register_Three+46,f
  5445  014A  0866               	movf	??_Adf_Write_Register_Three+51,w
  5446  014B  04E2               	iorwf	??_Adf_Write_Register_Three+47,f
  5447  014C  085F               	movf	??_Adf_Write_Register_Three+44,w
  5448  014D  04DB               	iorwf	??_Adf_Write_Register_Three+40,f
  5449  014E  0860               	movf	??_Adf_Write_Register_Three+45,w
  5450  014F  04DC               	iorwf	??_Adf_Write_Register_Three+41,f
  5451  0150  0861               	movf	??_Adf_Write_Register_Three+46,w
  5452  0151  04DD               	iorwf	??_Adf_Write_Register_Three+42,f
  5453  0152  0862               	movf	??_Adf_Write_Register_Three+47,w
  5454  0153  04DE               	iorwf	??_Adf_Write_Register_Three+43,f
  5455  0154  085B               	movf	??_Adf_Write_Register_Three+40,w
  5456  0155  04D7               	iorwf	??_Adf_Write_Register_Three+36,f
  5457  0156  085C               	movf	??_Adf_Write_Register_Three+41,w
  5458  0157  04D8               	iorwf	??_Adf_Write_Register_Three+37,f
  5459  0158  085D               	movf	??_Adf_Write_Register_Three+42,w
  5460  0159  04D9               	iorwf	??_Adf_Write_Register_Three+38,f
  5461  015A  085E               	movf	??_Adf_Write_Register_Three+43,w
  5462  015B  04DA               	iorwf	??_Adf_Write_Register_Three+39,f
  5463  015C  0857               	movf	??_Adf_Write_Register_Three+36,w
  5464  015D  04D3               	iorwf	??_Adf_Write_Register_Three+32,f
  5465  015E  0858               	movf	??_Adf_Write_Register_Three+37,w
  5466  015F  04D4               	iorwf	??_Adf_Write_Register_Three+33,f
  5467  0160  0859               	movf	??_Adf_Write_Register_Three+38,w
  5468  0161  04D5               	iorwf	??_Adf_Write_Register_Three+34,f
  5469  0162  085A               	movf	??_Adf_Write_Register_Three+39,w
  5470  0163  04D6               	iorwf	??_Adf_Write_Register_Three+35,f
  5471  0164  0853               	movf	??_Adf_Write_Register_Three+32,w
  5472  0165  04CF               	iorwf	??_Adf_Write_Register_Three+28,f
  5473  0166  0854               	movf	??_Adf_Write_Register_Three+33,w
  5474  0167  04D0               	iorwf	??_Adf_Write_Register_Three+29,f
  5475  0168  0855               	movf	??_Adf_Write_Register_Three+34,w
  5476  0169  04D1               	iorwf	??_Adf_Write_Register_Three+30,f
  5477  016A  0856               	movf	??_Adf_Write_Register_Three+35,w
  5478  016B  04D2               	iorwf	??_Adf_Write_Register_Three+31,f
  5479  016C  084F               	movf	??_Adf_Write_Register_Three+28,w
  5480  016D  04CB               	iorwf	??_Adf_Write_Register_Three+24,f
  5481  016E  0850               	movf	??_Adf_Write_Register_Three+29,w
  5482  016F  04CC               	iorwf	??_Adf_Write_Register_Three+25,f
  5483  0170  0851               	movf	??_Adf_Write_Register_Three+30,w
  5484  0171  04CD               	iorwf	??_Adf_Write_Register_Three+26,f
  5485  0172  0852               	movf	??_Adf_Write_Register_Three+31,w
  5486  0173  04CE               	iorwf	??_Adf_Write_Register_Three+27,f
  5487  0174  084B               	movf	??_Adf_Write_Register_Three+24,w
  5488  0175  04C7               	iorwf	??_Adf_Write_Register_Three+20,f
  5489  0176  084C               	movf	??_Adf_Write_Register_Three+25,w
  5490  0177  04C8               	iorwf	??_Adf_Write_Register_Three+21,f
  5491  0178  084D               	movf	??_Adf_Write_Register_Three+26,w
  5492  0179  04C9               	iorwf	??_Adf_Write_Register_Three+22,f
  5493  017A  084E               	movf	??_Adf_Write_Register_Three+27,w
  5494  017B  04CA               	iorwf	??_Adf_Write_Register_Three+23,f
  5495  017C  0847               	movf	??_Adf_Write_Register_Three+20,w
  5496  017D  04C3               	iorwf	??_Adf_Write_Register_Three+16,f
  5497  017E  0848               	movf	??_Adf_Write_Register_Three+21,w
  5498  017F  04C4               	iorwf	??_Adf_Write_Register_Three+17,f
  5499  0180  0849               	movf	??_Adf_Write_Register_Three+22,w
  5500  0181  04C5               	iorwf	??_Adf_Write_Register_Three+18,f
  5501  0182  084A               	movf	??_Adf_Write_Register_Three+23,w
  5502  0183  04C6               	iorwf	??_Adf_Write_Register_Three+19,f
  5503  0184  0843               	movf	??_Adf_Write_Register_Three+16,w
  5504  0185  04BF               	iorwf	??_Adf_Write_Register_Three+12,f
  5505  0186  0844               	movf	??_Adf_Write_Register_Three+17,w
  5506  0187  04C0               	iorwf	??_Adf_Write_Register_Three+13,f
  5507  0188  0845               	movf	??_Adf_Write_Register_Three+18,w
  5508  0189  04C1               	iorwf	??_Adf_Write_Register_Three+14,f
  5509  018A  0846               	movf	??_Adf_Write_Register_Three+19,w
  5510  018B  04C2               	iorwf	??_Adf_Write_Register_Three+15,f
  5511  018C  083F               	movf	??_Adf_Write_Register_Three+12,w
  5512  018D  04BB               	iorwf	??_Adf_Write_Register_Three+8,f
  5513  018E  0840               	movf	??_Adf_Write_Register_Three+13,w
  5514  018F  04BC               	iorwf	??_Adf_Write_Register_Three+9,f
  5515  0190  0841               	movf	??_Adf_Write_Register_Three+14,w
  5516  0191  04BD               	iorwf	??_Adf_Write_Register_Three+10,f
  5517  0192  0842               	movf	??_Adf_Write_Register_Three+15,w
  5518  0193  04BE               	iorwf	??_Adf_Write_Register_Three+11,f
  5519  0194  083B               	movf	??_Adf_Write_Register_Three+8,w
  5520  0195  04B7               	iorwf	??_Adf_Write_Register_Three+4,f
  5521  0196  083C               	movf	??_Adf_Write_Register_Three+9,w
  5522  0197  04B8               	iorwf	??_Adf_Write_Register_Three+5,f
  5523  0198  083D               	movf	??_Adf_Write_Register_Three+10,w
  5524  0199  04B9               	iorwf	??_Adf_Write_Register_Three+6,f
  5525  019A  083E               	movf	??_Adf_Write_Register_Three+11,w
  5526  019B  04BA               	iorwf	??_Adf_Write_Register_Three+7,f
  5527  019C  0837               	movf	??_Adf_Write_Register_Three+4,w
  5528  019D  04B3               	iorwf	??_Adf_Write_Register_Three,f
  5529  019E  0838               	movf	??_Adf_Write_Register_Three+5,w
  5530  019F  04B4               	iorwf	??_Adf_Write_Register_Three+1,f
  5531  01A0  0839               	movf	??_Adf_Write_Register_Three+6,w
  5532  01A1  04B5               	iorwf	??_Adf_Write_Register_Three+2,f
  5533  01A2  083A               	movf	??_Adf_Write_Register_Three+7,w
  5534  01A3  04B6               	iorwf	??_Adf_Write_Register_Three+3,f
  5535  01A4  3003               	movlw	3
  5536  01A5  0433               	iorwf	??_Adf_Write_Register_Three,w
  5537  01A6  0021               	movlb	1	; select bank1
  5538  01A7  00D8               	movwf	Adf_Write_Register_Three@reg^(0+128)
  5539  01A8  3000               	movlw	0
  5540  01A9  0020               	movlb	0	; select bank0
  5541  01AA  0434               	iorwf	??_Adf_Write_Register_Three+1,w
  5542  01AB  0021               	movlb	1	; select bank1
  5543  01AC  00D9               	movwf	(Adf_Write_Register_Three@reg+1)^(0+128)
  5544  01AD  3000               	movlw	0
  5545  01AE  0020               	movlb	0	; select bank0
  5546  01AF  0435               	iorwf	??_Adf_Write_Register_Three+2,w
  5547  01B0  0021               	movlb	1	; select bank1
  5548  01B1  00DA               	movwf	(Adf_Write_Register_Three@reg+2)^(0+128)
  5549  01B2  3000               	movlw	0
  5550  01B3  0020               	movlb	0	; select bank0
  5551  01B4  0436               	iorwf	??_Adf_Write_Register_Three+3,w
  5552  01B5  0021               	movlb	1	; select bank1
  5553  01B6  00DB               	movwf	(Adf_Write_Register_Three@reg+3)^(0+128)
  5554                           
  5555                           ;adf7012.c: 227: uint8_t reg_ptr[4];
  5556                           ;adf7012.c: 228: memcpy(reg_ptr, &reg, 4);
  5557  01B7  30D8               	movlw	Adf_Write_Register_Three@reg& (0+255)
  5558  01B8  0020               	movlb	0	; select bank0
  5559  01B9  00B3               	movwf	??_Adf_Write_Register_Three
  5560  01BA  0833               	movf	??_Adf_Write_Register_Three,w
  5561  01BB  00A0               	movwf	memcpy@s1
  5562  01BC  3004               	movlw	4
  5563  01BD  00A1               	movwf	memcpy@n
  5564  01BE  3000               	movlw	0
  5565  01BF  00A2               	movwf	memcpy@n+1
  5566  01C0  30D4               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5567  01C1  318D  25D6  3180   	fcall	_memcpy
  5568                           
  5569                           ;adf7012.c: 229: Reverse_Array(reg_ptr,4);
  5570  01C4  3004               	movlw	4
  5571  01C5  0020               	movlb	0	; select bank0
  5572  01C6  00B3               	movwf	??_Adf_Write_Register_Three
  5573  01C7  0833               	movf	??_Adf_Write_Register_Three,w
  5574  01C8  00A7               	movwf	Reverse_Array@length
  5575  01C9  30D4               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5576  01CA  318E  26D6  3180   	fcall	_Reverse_Array
  5577                           
  5578                           ;adf7012.c: 230: Write_Adf7012_Reg(reg_ptr, 4);
  5579  01CD  3004               	movlw	4
  5580  01CE  0020               	movlb	0	; select bank0
  5581  01CF  00B3               	movwf	??_Adf_Write_Register_Three
  5582  01D0  0833               	movf	??_Adf_Write_Register_Three,w
  5583  01D1  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5584  01D2  30D4               	movlw	Adf_Write_Register_Three@reg_ptr& (0+255)
  5585  01D3  318E  269D         	fcall	_Write_Adf7012_Reg
  5586  01D5  0008               	return
  5587  01D6                     __end_of_Adf_Write_Register_Three:	
  5588                           
  5589                           	psect	text30
  5590  0F1A                     __ptext30:	
  5591 ;; *************** function _Adf_Write_Register_One *****************
  5592 ;; Defined at:
  5593 ;;		line 178 in file "adf7012.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  reg             4   31[BANK0 ] unsigned long 
  5598 ;;  reg_ptr         3   35[BANK0 ] unsigned char [3]
  5599 ;; Return value:  Size  Location     Type
  5600 ;;		None               void
  5601 ;; Registers used:
  5602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5609 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5610 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5611 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5612 ;;Total ram usage:       19 bytes
  5613 ;; Hardware stack levels used:    1
  5614 ;; Hardware stack levels required when called:    7
  5615 ;; This function calls:
  5616 ;;		_Reverse_Array
  5617 ;;		_Write_Adf7012_Reg
  5618 ;;		_memcpy
  5619 ;; This function is called by:
  5620 ;;		_Adf_Write_Config
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           
  5625                           ;psect for function _Adf_Write_Register_One
  5626  0F1A                     _Adf_Write_Register_One:	
  5627                           
  5628                           ;adf7012.c: 179: uint32_t reg =
  5629                           ;adf7012.c: 180: (1) |
  5630                           ;adf7012.c: 181: ((uint32_t)(adf_config.r1.fractional_n & 0xFFF) << 2) |
  5631                           ;adf7012.c: 182: ((uint32_t)(adf_config.r1.integer_n & 0xFF ) << 14) |
  5632                           ;adf7012.c: 183: ((uint32_t)(adf_config.r1.prescaler & 0x1 ) << 22);
  5633                           
  5634                           ;incstack = 0
  5635                           ; Regs used in _Adf_Write_Register_One: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  5636  0F1A  0021               	movlb	1	; select bank1
  5637  0F1B  082F               	movf	(_adf_config^(0+128)+15),w
  5638  0F1C  3901               	andlw	1
  5639  0F1D  0020               	movlb	0	; select bank0
  5640  0F1E  00B3               	movwf	??_Adf_Write_Register_One
  5641  0F1F  01B4               	clrf	??_Adf_Write_Register_One+1
  5642  0F20  01B5               	clrf	??_Adf_Write_Register_One+2
  5643  0F21  01B6               	clrf	??_Adf_Write_Register_One+3
  5644  0F22  3016               	movlw	22
  5645  0F23                     u1205:	
  5646  0F23  35B3               	lslf	??_Adf_Write_Register_One,f
  5647  0F24  0DB4               	rlf	??_Adf_Write_Register_One+1,f
  5648  0F25  0DB5               	rlf	??_Adf_Write_Register_One+2,f
  5649  0F26  0DB6               	rlf	??_Adf_Write_Register_One+3,f
  5650  0F27  0B89               	decfsz	9,f
  5651  0F28  2F23               	goto	u1205
  5652  0F29  0021               	movlb	1	; select bank1
  5653  0F2A  082E               	movf	(_adf_config^(0+128)+14),w
  5654  0F2B  0020               	movlb	0	; select bank0
  5655  0F2C  00B7               	movwf	??_Adf_Write_Register_One+4
  5656  0F2D  01B8               	clrf	??_Adf_Write_Register_One+5
  5657  0F2E  01B9               	clrf	??_Adf_Write_Register_One+6
  5658  0F2F  01BA               	clrf	??_Adf_Write_Register_One+7
  5659  0F30  300E               	movlw	14
  5660  0F31                     u1215:	
  5661  0F31  35B7               	lslf	??_Adf_Write_Register_One+4,f
  5662  0F32  0DB8               	rlf	??_Adf_Write_Register_One+5,f
  5663  0F33  0DB9               	rlf	??_Adf_Write_Register_One+6,f
  5664  0F34  0DBA               	rlf	??_Adf_Write_Register_One+7,f
  5665  0F35  0B89               	decfsz	9,f
  5666  0F36  2F31               	goto	u1215
  5667  0F37  300A               	movlw	10
  5668  0F38  3EA0               	addlw	_adf_config& (0+255)
  5669  0F39  0086               	movwf	6
  5670  0F3A  0187               	clrf	7
  5671  0F3B  30FF               	movlw	255
  5672  0F3C  0501               	andwf	1,w
  5673  0F3D  00BB               	movwf	??_Adf_Write_Register_One+8
  5674  0F3E  3141               	addfsr 1,1
  5675  0F3F  300F               	movlw	15
  5676  0F40  0501               	andwf	1,w
  5677  0F41  00BC               	movwf	??_Adf_Write_Register_One+9
  5678  0F42  3141               	addfsr 1,1
  5679  0F43  3000               	movlw	0
  5680  0F44  0501               	andwf	1,w
  5681  0F45  00BD               	movwf	??_Adf_Write_Register_One+10
  5682  0F46  3141               	addfsr 1,1
  5683  0F47  3000               	movlw	0
  5684  0F48  0501               	andwf	1,w
  5685  0F49  00BE               	movwf	??_Adf_Write_Register_One+11
  5686  0F4A  3002               	movlw	2
  5687  0F4B                     u1225:	
  5688  0F4B  35BB               	lslf	??_Adf_Write_Register_One+8,f
  5689  0F4C  0DBC               	rlf	??_Adf_Write_Register_One+9,f
  5690  0F4D  0DBD               	rlf	??_Adf_Write_Register_One+10,f
  5691  0F4E  0DBE               	rlf	??_Adf_Write_Register_One+11,f
  5692  0F4F  0B89               	decfsz	9,f
  5693  0F50  2F4B               	goto	u1225
  5694  0F51  083B               	movf	??_Adf_Write_Register_One+8,w
  5695  0F52  04B7               	iorwf	??_Adf_Write_Register_One+4,f
  5696  0F53  083C               	movf	??_Adf_Write_Register_One+9,w
  5697  0F54  04B8               	iorwf	??_Adf_Write_Register_One+5,f
  5698  0F55  083D               	movf	??_Adf_Write_Register_One+10,w
  5699  0F56  04B9               	iorwf	??_Adf_Write_Register_One+6,f
  5700  0F57  083E               	movf	??_Adf_Write_Register_One+11,w
  5701  0F58  04BA               	iorwf	??_Adf_Write_Register_One+7,f
  5702  0F59  0837               	movf	??_Adf_Write_Register_One+4,w
  5703  0F5A  04B3               	iorwf	??_Adf_Write_Register_One,f
  5704  0F5B  0838               	movf	??_Adf_Write_Register_One+5,w
  5705  0F5C  04B4               	iorwf	??_Adf_Write_Register_One+1,f
  5706  0F5D  0839               	movf	??_Adf_Write_Register_One+6,w
  5707  0F5E  04B5               	iorwf	??_Adf_Write_Register_One+2,f
  5708  0F5F  083A               	movf	??_Adf_Write_Register_One+7,w
  5709  0F60  04B6               	iorwf	??_Adf_Write_Register_One+3,f
  5710  0F61  3001               	movlw	1
  5711  0F62  0433               	iorwf	??_Adf_Write_Register_One,w
  5712  0F63  00BF               	movwf	Adf_Write_Register_One@reg
  5713  0F64  3000               	movlw	0
  5714  0F65  0434               	iorwf	??_Adf_Write_Register_One+1,w
  5715  0F66  00C0               	movwf	Adf_Write_Register_One@reg+1
  5716  0F67  3000               	movlw	0
  5717  0F68  0435               	iorwf	??_Adf_Write_Register_One+2,w
  5718  0F69  00C1               	movwf	Adf_Write_Register_One@reg+2
  5719  0F6A  3000               	movlw	0
  5720  0F6B  0436               	iorwf	??_Adf_Write_Register_One+3,w
  5721  0F6C  00C2               	movwf	Adf_Write_Register_One@reg+3
  5722                           
  5723                           ;adf7012.c: 185: uint8_t reg_ptr[3];
  5724                           ;adf7012.c: 186: memcpy(reg_ptr, &reg, 3);
  5725  0F6D  303F               	movlw	Adf_Write_Register_One@reg& (0+255)
  5726  0F6E  00B3               	movwf	??_Adf_Write_Register_One
  5727  0F6F  0833               	movf	??_Adf_Write_Register_One,w
  5728  0F70  00A0               	movwf	memcpy@s1
  5729  0F71  3003               	movlw	3
  5730  0F72  00A1               	movwf	memcpy@n
  5731  0F73  3000               	movlw	0
  5732  0F74  00A2               	movwf	memcpy@n+1
  5733  0F75  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5734  0F76  318D  25D6  318F   	fcall	_memcpy
  5735                           
  5736                           ;adf7012.c: 187: Reverse_Array(reg_ptr,3);
  5737  0F79  3003               	movlw	3
  5738  0F7A  0020               	movlb	0	; select bank0
  5739  0F7B  00B3               	movwf	??_Adf_Write_Register_One
  5740  0F7C  0833               	movf	??_Adf_Write_Register_One,w
  5741  0F7D  00A7               	movwf	Reverse_Array@length
  5742  0F7E  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5743  0F7F  318E  26D6  318F   	fcall	_Reverse_Array
  5744                           
  5745                           ;adf7012.c: 188: Write_Adf7012_Reg(reg_ptr, 3);
  5746  0F82  3003               	movlw	3
  5747  0F83  0020               	movlb	0	; select bank0
  5748  0F84  00B3               	movwf	??_Adf_Write_Register_One
  5749  0F85  0833               	movf	??_Adf_Write_Register_One,w
  5750  0F86  00AA               	movwf	Write_Adf7012_Reg@size_of_reg
  5751  0F87  3043               	movlw	Adf_Write_Register_One@reg_ptr& (0+255)
  5752  0F88  318E  269D         	fcall	_Write_Adf7012_Reg
  5753  0F8A  0008               	return
  5754  0F8B                     __end_of_Adf_Write_Register_One:	
  5755                           
  5756                           	psect	text31
  5757  0E9D                     __ptext31:	
  5758 ;; *************** function _Write_Adf7012_Reg *****************
  5759 ;; Defined at:
  5760 ;;		line 88 in file "utility.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  reg_value       1    wreg     PTR unsigned char 
  5763 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5764 ;;  size_of_reg     1   10[BANK0 ] unsigned char 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  reg_value       1   12[BANK0 ] PTR unsigned char 
  5767 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5768 ;;  i               1   13[BANK0 ] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;                  1    wreg      unsigned char 
  5771 ;; Registers used:
  5772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5778 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5779 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5780 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5781 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5782 ;;Total ram usage:        4 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    6
  5785 ;; This function calls:
  5786 ;;		_Delay_ms
  5787 ;;		_Spi_Byte_Send
  5788 ;; This function is called by:
  5789 ;;		_Adf_Write_Register_Zero
  5790 ;;		_Adf_Write_Register_One
  5791 ;;		_Adf_Write_Register_Two
  5792 ;;		_Adf_Write_Register_Three
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           
  5797                           ;psect for function _Write_Adf7012_Reg
  5798  0E9D                     _Write_Adf7012_Reg:	
  5799                           
  5800                           ;incstack = 0
  5801                           ; Regs used in _Write_Adf7012_Reg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5802                           ;Write_Adf7012_Reg@reg_value stored from wreg
  5803  0E9D  0020               	movlb	0	; select bank0
  5804  0E9E  00AC               	movwf	Write_Adf7012_Reg@reg_value
  5805                           
  5806                           ;utility.c: 90: uint8_t i = 0;
  5807  0E9F  01AD               	clrf	Write_Adf7012_Reg@i
  5808                           
  5809                           ;utility.c: 91: Delay_ms(1);
  5810  0EA0  3001               	movlw	1
  5811  0EA1  00A0               	movwf	Delay_ms@time_to_delay
  5812  0EA2  3000               	movlw	0
  5813  0EA3  00A1               	movwf	Delay_ms@time_to_delay+1
  5814  0EA4  318D  25AD  318E   	fcall	_Delay_ms
  5815                           
  5816                           ;utility.c: 92: PORTAbits.RA4 = 0;;
  5817  0EA7  0020               	movlb	0	; select bank0
  5818  0EA8  120C               	bcf	12,4	;volatile
  5819                           
  5820                           ;utility.c: 93: Delay_ms(1);
  5821  0EA9  3001               	movlw	1
  5822  0EAA  00A0               	movwf	Delay_ms@time_to_delay
  5823  0EAB  3000               	movlw	0
  5824  0EAC  00A1               	movwf	Delay_ms@time_to_delay+1
  5825  0EAD  318D  25AD  318E   	fcall	_Delay_ms
  5826                           
  5827                           ;utility.c: 95: for (i = 0; i < size_of_reg; i++){
  5828  0EB0  0020               	movlb	0	; select bank0
  5829  0EB1  01AD               	clrf	Write_Adf7012_Reg@i
  5830  0EB2                     l1737:	
  5831  0EB2  082A               	movf	Write_Adf7012_Reg@size_of_reg,w
  5832  0EB3  022D               	subwf	Write_Adf7012_Reg@i,w
  5833  0EB4  1803               	btfsc	3,0
  5834  0EB5  2EC6               	goto	l1739
  5835                           
  5836                           ;utility.c: 96: Spi_Byte_Send(*(reg_value+i));
  5837  0EB6  082D               	movf	Write_Adf7012_Reg@i,w
  5838  0EB7  072C               	addwf	Write_Adf7012_Reg@reg_value,w
  5839  0EB8  00AB               	movwf	??_Write_Adf7012_Reg
  5840  0EB9  082B               	movf	??_Write_Adf7012_Reg,w
  5841  0EBA  0086               	movwf	6
  5842  0EBB  0187               	clrf	7
  5843  0EBC  0801               	movf	1,w
  5844  0EBD  3187  27D4  318E   	fcall	_Spi_Byte_Send
  5845  0EC0  3001               	movlw	1
  5846  0EC1  0020               	movlb	0	; select bank0
  5847  0EC2  00AB               	movwf	??_Write_Adf7012_Reg
  5848  0EC3  082B               	movf	??_Write_Adf7012_Reg,w
  5849  0EC4  07AD               	addwf	Write_Adf7012_Reg@i,f
  5850  0EC5  2EB2               	goto	l1737
  5851  0EC6                     l1739:	
  5852                           
  5853                           ;utility.c: 97: }
  5854                           ;utility.c: 99: Delay_ms(1);
  5855  0EC6  3001               	movlw	1
  5856  0EC7  00A0               	movwf	Delay_ms@time_to_delay
  5857  0EC8  3000               	movlw	0
  5858  0EC9  00A1               	movwf	Delay_ms@time_to_delay+1
  5859  0ECA  318D  25AD  318E   	fcall	_Delay_ms
  5860                           
  5861                           ;utility.c: 100: PORTAbits.RA4 = 1;;
  5862  0ECD  0020               	movlb	0	; select bank0
  5863  0ECE  160C               	bsf	12,4	;volatile
  5864                           
  5865                           ;utility.c: 102: Delay_ms(1);
  5866  0ECF  3001               	movlw	1
  5867  0ED0  00A0               	movwf	Delay_ms@time_to_delay
  5868  0ED1  3000               	movlw	0
  5869  0ED2  00A1               	movwf	Delay_ms@time_to_delay+1
  5870  0ED3  318D  25AD         	fcall	_Delay_ms
  5871  0ED5  0008               	return
  5872  0ED6                     __end_of_Write_Adf7012_Reg:	
  5873                           ;utility.c: 103: return 1;
  5874                           ;	Return value of _Write_Adf7012_Reg is never used
  5875                           
  5876                           
  5877                           	psect	text32
  5878  07D4                     __ptext32:	
  5879 ;; *************** function _Spi_Byte_Send *****************
  5880 ;; Defined at:
  5881 ;;		line 226 in file "utility.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  data            1    wreg     unsigned char 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  data            1    7[BANK0 ] unsigned char 
  5886 ;;  i               1    9[BANK0 ] unsigned char 
  5887 ;;  data_to_send    1    8[BANK0 ] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      unsigned char 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0, pclath, cstack
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5898 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5899 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5900 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5901 ;;Total ram usage:        4 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    5
  5904 ;; This function calls:
  5905 ;;		_Delay_ms
  5906 ;; This function is called by:
  5907 ;;		_Write_Adf7012_Reg
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function _Spi_Byte_Send
  5913  07D4                     _Spi_Byte_Send:	
  5914                           
  5915                           ;incstack = 0
  5916                           ; Regs used in _Spi_Byte_Send: [wreg+status,2+status,0+pclath+cstack]
  5917                           ;Spi_Byte_Send@data stored from wreg
  5918  07D4  0020               	movlb	0	; select bank0
  5919  07D5  00A7               	movwf	Spi_Byte_Send@data
  5920                           
  5921                           ;utility.c: 228: PORTAbits.RA2 = 0;
  5922  07D6  110C               	bcf	12,2	;volatile
  5923                           
  5924                           ;utility.c: 229: uint8_t i;
  5925                           ;utility.c: 230: uint8_t data_to_send;
  5926                           ;utility.c: 231: data_to_send = data;
  5927  07D7  0827               	movf	Spi_Byte_Send@data,w
  5928  07D8  00A6               	movwf	??_Spi_Byte_Send
  5929  07D9  0826               	movf	??_Spi_Byte_Send,w
  5930  07DA  00A8               	movwf	Spi_Byte_Send@data_to_send
  5931                           
  5932                           ;utility.c: 232: for(i = 0; i <8; i++){
  5933  07DB  01A9               	clrf	Spi_Byte_Send@i
  5934  07DC                     L5:	
  5935  07DC  3008               	movlw	8
  5936  07DD  0229               	subwf	Spi_Byte_Send@i,w
  5937  07DE  1803               	btfsc	3,0
  5938  07DF  0008               	return
  5939                           
  5940                           ;utility.c: 234: if(data_to_send & 0x80)
  5941  07E0  1FA8               	btfss	Spi_Byte_Send@data_to_send,7
  5942  07E1  2FE4               	goto	l228
  5943                           
  5944                           ;utility.c: 235: PORTCbits.RC2 = 1;
  5945  07E2  150E               	bsf	14,2	;volatile
  5946  07E3  2FE5               	goto	l1701
  5947  07E4                     l228:	
  5948                           
  5949                           ;utility.c: 236: else
  5950                           ;utility.c: 237: PORTCbits.RC2 = 0;
  5951  07E4  110E               	bcf	14,2	;volatile
  5952  07E5                     l1701:	
  5953                           
  5954                           ;utility.c: 239: data_to_send <<= 1;
  5955  07E5  1003               	clrc
  5956  07E6  0DA8               	rlf	Spi_Byte_Send@data_to_send,f
  5957                           
  5958                           ;utility.c: 241: PORTAbits.RA2 = 1;
  5959  07E7  150C               	bsf	12,2	;volatile
  5960                           
  5961                           ;utility.c: 242: Delay_ms(1);
  5962  07E8  3001               	movlw	1
  5963  07E9  00A0               	movwf	Delay_ms@time_to_delay
  5964  07EA  3000               	movlw	0
  5965  07EB  00A1               	movwf	Delay_ms@time_to_delay+1
  5966  07EC  318D  25AD  3187   	fcall	_Delay_ms
  5967                           
  5968                           ;utility.c: 243: PORTAbits.RA2 = 0;
  5969  07EF  0020               	movlb	0	; select bank0
  5970  07F0  110C               	bcf	12,2	;volatile
  5971                           
  5972                           ;utility.c: 244: Delay_ms(1);
  5973  07F1  3001               	movlw	1
  5974  07F2  00A0               	movwf	Delay_ms@time_to_delay
  5975  07F3  3000               	movlw	0
  5976  07F4  00A1               	movwf	Delay_ms@time_to_delay+1
  5977  07F5  318D  25AD  3187   	fcall	_Delay_ms
  5978  07F8  3001               	movlw	1
  5979  07F9  0020               	movlb	0	; select bank0
  5980  07FA  00A6               	movwf	??_Spi_Byte_Send
  5981  07FB  0826               	movf	??_Spi_Byte_Send,w
  5982  07FC  07A9               	addwf	Spi_Byte_Send@i,f
  5983  07FD  2FDC               	goto	L5
  5984  07FE                     __end_of_Spi_Byte_Send:	
  5985                           ;utility.c: 246: }
  5986                           ;utility.c: 247: return 1;
  5987                           ;	Return value of _Spi_Byte_Send is never used
  5988                           
  5989                           
  5990                           	psect	text33
  5991  0ED6                     __ptext33:	
  5992 ;; *************** function _Reverse_Array *****************
  5993 ;; Defined at:
  5994 ;;		line 204 in file "utility.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  input           1    wreg     PTR unsigned char 
  5997 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  5998 ;;  length          1    7[BANK0 ] unsigned char 
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;  input           1   17[BANK0 ] PTR unsigned char 
  6001 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6002 ;;  buffer_array    4   13[BANK0 ] unsigned char [4]
  6003 ;;  i               1   18[BANK0 ] unsigned char 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1    wreg      unsigned char 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6013 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6014 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6015 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6016 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6017 ;;Total ram usage:       12 bytes
  6018 ;; Hardware stack levels used:    1
  6019 ;; Hardware stack levels required when called:    4
  6020 ;; This function calls:
  6021 ;;		_memcpy
  6022 ;; This function is called by:
  6023 ;;		_Adf_Write_Register_Zero
  6024 ;;		_Adf_Write_Register_One
  6025 ;;		_Adf_Write_Register_Two
  6026 ;;		_Adf_Write_Register_Three
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           
  6031                           ;psect for function _Reverse_Array
  6032  0ED6                     _Reverse_Array:	
  6033                           
  6034                           ;incstack = 0
  6035                           ; Regs used in _Reverse_Array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6036                           ;Reverse_Array@input stored from wreg
  6037  0ED6  0020               	movlb	0	; select bank0
  6038  0ED7  00B1               	movwf	Reverse_Array@input
  6039                           
  6040                           ;utility.c: 205: uint8_t i = 0;
  6041  0ED8  01B2               	clrf	Reverse_Array@i
  6042                           
  6043                           ;utility.c: 206: uint8_t buffer_array[4] = {0};
  6044  0ED9  0022               	movlb	2	; select bank2
  6045  0EDA  0823               	movf	(Reverse_Array@F3148+3)^(0+256),w
  6046  0EDB  0020               	movlb	0	; select bank0
  6047  0EDC  00B0               	movwf	Reverse_Array@buffer_array+3
  6048  0EDD  0022               	movlb	2	; select bank2
  6049  0EDE  0822               	movf	(Reverse_Array@F3148+2)^(0+256),w
  6050  0EDF  0020               	movlb	0	; select bank0
  6051  0EE0  00AF               	movwf	Reverse_Array@buffer_array+2
  6052  0EE1  0022               	movlb	2	; select bank2
  6053  0EE2  0821               	movf	(Reverse_Array@F3148+1)^(0+256),w
  6054  0EE3  0020               	movlb	0	; select bank0
  6055  0EE4  00AE               	movwf	Reverse_Array@buffer_array+1
  6056  0EE5  0022               	movlb	2	; select bank2
  6057  0EE6  0820               	movf	Reverse_Array@F3148^(0+256),w
  6058  0EE7  0020               	movlb	0	; select bank0
  6059  0EE8  00AD               	movwf	Reverse_Array@buffer_array
  6060                           
  6061                           ;utility.c: 207: memcpy(buffer_array, input, length);
  6062  0EE9  0831               	movf	Reverse_Array@input,w
  6063  0EEA  00A8               	movwf	??_Reverse_Array
  6064  0EEB  0828               	movf	??_Reverse_Array,w
  6065  0EEC  00A0               	movwf	memcpy@s1
  6066  0EED  0827               	movf	Reverse_Array@length,w
  6067  0EEE  00A9               	movwf	??_Reverse_Array+1
  6068  0EEF  01AA               	clrf	??_Reverse_Array+2
  6069  0EF0  0829               	movf	??_Reverse_Array+1,w
  6070  0EF1  00A1               	movwf	memcpy@n
  6071  0EF2  082A               	movf	??_Reverse_Array+2,w
  6072  0EF3  00A2               	movwf	memcpy@n+1
  6073  0EF4  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6074  0EF5  318D  25D6  318E   	fcall	_memcpy
  6075                           
  6076                           ;utility.c: 209: for(i = 0; i<length; i++){
  6077  0EF8  0020               	movlb	0	; select bank0
  6078  0EF9  01B2               	clrf	Reverse_Array@i
  6079  0EFA                     l1757:	
  6080  0EFA  0827               	movf	Reverse_Array@length,w
  6081  0EFB  0232               	subwf	Reverse_Array@i,w
  6082  0EFC  1803               	btfsc	3,0
  6083  0EFD  0008               	return
  6084                           
  6085                           ;utility.c: 210: *(input+i) = *(buffer_array+(length-1)-i);
  6086  0EFE  30FF               	movlw	-1
  6087  0EFF  0727               	addwf	Reverse_Array@length,w
  6088  0F00  00A8               	movwf	??_Reverse_Array
  6089  0F01  302D               	movlw	Reverse_Array@buffer_array& (0+255)
  6090  0F02  0728               	addwf	??_Reverse_Array,w
  6091  0F03  00A9               	movwf	??_Reverse_Array+1
  6092  0F04  0332               	decf	Reverse_Array@i,w
  6093  0F05  3AFF               	xorlw	255
  6094  0F06  0729               	addwf	??_Reverse_Array+1,w
  6095  0F07  00AA               	movwf	??_Reverse_Array+2
  6096  0F08  082A               	movf	??_Reverse_Array+2,w
  6097  0F09  0086               	movwf	6
  6098  0F0A  0187               	clrf	7
  6099  0F0B  0801               	movf	1,w
  6100  0F0C  00AB               	movwf	??_Reverse_Array+3
  6101  0F0D  0832               	movf	Reverse_Array@i,w
  6102  0F0E  0731               	addwf	Reverse_Array@input,w
  6103  0F0F  00AC               	movwf	??_Reverse_Array+4
  6104  0F10  082C               	movf	??_Reverse_Array+4,w
  6105  0F11  0086               	movwf	6
  6106  0F12  0187               	clrf	7
  6107  0F13  082B               	movf	??_Reverse_Array+3,w
  6108  0F14  0081               	movwf	1
  6109  0F15  3001               	movlw	1
  6110  0F16  00A8               	movwf	??_Reverse_Array
  6111  0F17  0828               	movf	??_Reverse_Array,w
  6112  0F18  07B2               	addwf	Reverse_Array@i,f
  6113  0F19  2EFA               	goto	l1757
  6114  0F1A                     __end_of_Reverse_Array:	
  6115                           ;utility.c: 211: }
  6116                           ;utility.c: 215: return 1;
  6117                           ;	Return value of _Reverse_Array is never used
  6118                           
  6119                           
  6120                           	psect	text34
  6121  0DD6                     __ptext34:	
  6122 ;; *************** function _memcpy *****************
  6123 ;; Defined at:
  6124 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\memcpy.c"
  6125 ;; Parameters:    Size  Location     Type
  6126 ;;  d1              1    wreg     PTR void 
  6127 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6128 ;;		 -> Reverse_Array@buffer_array(4), 
  6129 ;;  s1              1    0[BANK0 ] PTR const void 
  6130 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6131 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6132 ;;  n               2    1[BANK0 ] unsigned int 
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  d1              1    6[BANK0 ] PTR void 
  6135 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6136 ;;		 -> Reverse_Array@buffer_array(4), 
  6137 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  6138 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Three@reg(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Wri
      +te_Register_Two@reg(4), 
  6139 ;;		 -> Adf_Write_Register_One@reg_ptr(3), Adf_Write_Register_One@reg(4), Adf_Write_Register_Zero@reg_ptr(4), Adf_Write_
      +Register_Zero@reg(4), 
  6140 ;;  d               1    4[BANK0 ] PTR unsigned char 
  6141 ;;		 -> Adf_Write_Register_Three@reg_ptr(4), Adf_Write_Register_Two@reg_ptr(4), Adf_Write_Register_One@reg_ptr(3), Adf_W
      +rite_Register_Zero@reg_ptr(4), 
  6142 ;;		 -> Reverse_Array@buffer_array(4), 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1    wreg      PTR void 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6152 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6156 ;;Total ram usage:        7 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    3
  6159 ;; This function calls:
  6160 ;;		Nothing
  6161 ;; This function is called by:
  6162 ;;		_Reverse_Array
  6163 ;;		_Adf_Write_Register_Zero
  6164 ;;		_Adf_Write_Register_One
  6165 ;;		_Adf_Write_Register_Two
  6166 ;;		_Adf_Write_Register_Three
  6167 ;; This function uses a non-reentrant model
  6168 ;;
  6169                           
  6170                           
  6171                           ;psect for function _memcpy
  6172  0DD6                     _memcpy:	
  6173                           
  6174                           ;incstack = 0
  6175                           ; Regs used in _memcpy: [wreg+fsr1l+fsr1h+status,2+status,0]
  6176                           ;memcpy@d1 stored from wreg
  6177  0DD6  0020               	movlb	0	; select bank0
  6178  0DD7  00A6               	movwf	memcpy@d1
  6179  0DD8  0820               	movf	memcpy@s1,w
  6180  0DD9  00A3               	movwf	??_memcpy
  6181  0DDA  0823               	movf	??_memcpy,w
  6182  0DDB  00A5               	movwf	memcpy@s
  6183  0DDC  0826               	movf	memcpy@d1,w
  6184  0DDD  00A3               	movwf	??_memcpy
  6185  0DDE  0823               	movf	??_memcpy,w
  6186  0DDF  00A4               	movwf	memcpy@d
  6187  0DE0                     l1723:	
  6188  0DE0  3001               	movlw	1
  6189  0DE1  02A1               	subwf	memcpy@n,f
  6190  0DE2  3000               	movlw	0
  6191  0DE3  3BA2               	subwfb	memcpy@n+1,f
  6192  0DE4  30FF               	movlw	255
  6193  0DE5  0622               	xorwf	memcpy@n+1,w
  6194  0DE6  1D03               	skipz
  6195  0DE7  2DEA               	goto	u1105
  6196  0DE8  30FF               	movlw	255
  6197  0DE9  0621               	xorwf	memcpy@n,w
  6198  0DEA                     u1105:	
  6199  0DEA  1903               	btfsc	3,2
  6200  0DEB  0008               	return
  6201  0DEC  0825               	movf	memcpy@s,w
  6202  0DED  0086               	movwf	6
  6203  0DEE  0187               	clrf	7
  6204  0DEF  0801               	movf	1,w
  6205  0DF0  00A3               	movwf	??_memcpy
  6206  0DF1  0824               	movf	memcpy@d,w
  6207  0DF2  0086               	movwf	6
  6208  0DF3  0187               	clrf	7
  6209  0DF4  0823               	movf	??_memcpy,w
  6210  0DF5  0081               	movwf	1
  6211  0DF6  3001               	movlw	1
  6212  0DF7  00A3               	movwf	??_memcpy
  6213  0DF8  0823               	movf	??_memcpy,w
  6214  0DF9  07A5               	addwf	memcpy@s,f
  6215  0DFA  3001               	movlw	1
  6216  0DFB  00A3               	movwf	??_memcpy
  6217  0DFC  0823               	movf	??_memcpy,w
  6218  0DFD  07A4               	addwf	memcpy@d,f
  6219  0DFE  2DE0               	goto	l1723
  6220  0DFF                     __end_of_memcpy:	
  6221                           ;	Return value of _memcpy is never used
  6222                           
  6223                           
  6224                           	psect	text35
  6225  0C22                     __ptext35:	
  6226 ;; *************** function _Adf_Locked *****************
  6227 ;; Defined at:
  6228 ;;		line 273 in file "adf7012.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;		None
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;		None
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      unsigned char 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0, pclath, cstack
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;Total ram usage:        0 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; Hardware stack levels required when called:    6
  6249 ;; This function calls:
  6250 ;;		_Read_Adf7012_Muxout
  6251 ;; This function is called by:
  6252 ;;		_Adf_Lock
  6253 ;; This function uses a non-reentrant model
  6254 ;;
  6255                           
  6256                           
  6257                           ;psect for function _Adf_Locked
  6258  0C22                     _Adf_Locked:	
  6259                           
  6260                           ;adf7012.c: 275: return Read_Adf7012_Muxout();
  6261                           
  6262                           ;incstack = 0
  6263                           ; Regs used in _Adf_Locked: [wreg+status,2+status,0+pclath+cstack]
  6264  0C22  318C  247E         	fcall	_Read_Adf7012_Muxout
  6265  0C24  0008               	return
  6266  0C25                     __end_of_Adf_Locked:	
  6267                           
  6268                           	psect	text36
  6269  0C7E                     __ptext36:	
  6270 ;; *************** function _Read_Adf7012_Muxout *****************
  6271 ;; Defined at:
  6272 ;;		line 68 in file "utility.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      unsigned char 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0, pclath, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used:    1
  6292 ;; Hardware stack levels required when called:    5
  6293 ;; This function calls:
  6294 ;;		_Delay_ms
  6295 ;; This function is called by:
  6296 ;;		_Adf_Locked
  6297 ;;		_Ptt_On
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           
  6302                           ;psect for function _Read_Adf7012_Muxout
  6303  0C7E                     _Read_Adf7012_Muxout:	
  6304                           
  6305                           ;utility.c: 70: Delay_ms(1);
  6306                           
  6307                           ;incstack = 0
  6308                           ; Regs used in _Read_Adf7012_Muxout: [wreg+status,2+status,0+pclath+cstack]
  6309  0C7E  3001               	movlw	1
  6310  0C7F  0020               	movlb	0	; select bank0
  6311  0C80  00A0               	movwf	Delay_ms@time_to_delay
  6312  0C81  3000               	movlw	0
  6313  0C82  00A1               	movwf	Delay_ms@time_to_delay+1
  6314  0C83  318D  25AD  318C   	fcall	_Delay_ms
  6315                           
  6316                           ;utility.c: 72: if(PORTCbits.RC5)
  6317  0C86  0020               	movlb	0	; select bank0
  6318  0C87  1E8E               	btfss	14,5	;volatile
  6319  0C88  2C8B               	goto	l1865
  6320                           
  6321                           ;utility.c: 73: return 1;
  6322  0C89  3001               	movlw	1
  6323  0C8A  0008               	return
  6324  0C8B                     l1865:	
  6325                           
  6326                           ;utility.c: 74: else
  6327                           ;utility.c: 75: return 0;
  6328  0C8B  3000               	movlw	0
  6329  0C8C  0008               	return
  6330  0C8D                     __end_of_Read_Adf7012_Muxout:	
  6331                           
  6332                           	psect	text37
  6333  0DAD                     __ptext37:	
  6334 ;; *************** function _Delay_ms *****************
  6335 ;; Defined at:
  6336 ;;		line 46 in file "utility.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  time_to_dela    2    0[BANK0 ] unsigned int 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  i               2    4[BANK0 ] unsigned int 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;		None               void
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0, pclath, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6350 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6351 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;Total ram usage:        6 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    4
  6357 ;; This function calls:
  6358 ;;		_Dac0_Start_Hold
  6359 ;; This function is called by:
  6360 ;;		_main
  6361 ;;		_Read_Adf7012_Muxout
  6362 ;;		_Write_Adf7012_Reg
  6363 ;;		_Spi_Byte_Send
  6364 ;;		_Adf_Reset
  6365 ;;		_Adf_Lock
  6366 ;;		_Radio_Setup
  6367 ;;		_Ptt_On
  6368 ;;		_Ptt_Off
  6369 ;;		_Modem_Flush_Frame
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           
  6374                           ;psect for function _Delay_ms
  6375  0DAD                     _Delay_ms:	
  6376                           
  6377                           ;utility.c: 48: uint16_t i=0;
  6378                           
  6379                           ;incstack = 0
  6380                           ; Regs used in _Delay_ms: [wreg+status,2+status,0+pclath+cstack]
  6381  0DAD  0020               	movlb	0	; select bank0
  6382  0DAE  01A4               	clrf	Delay_ms@i
  6383  0DAF  01A5               	clrf	Delay_ms@i+1
  6384                           
  6385                           ;utility.c: 50: INTCON &= ~0xC0;
  6386  0DB0  303F               	movlw	63
  6387  0DB1  00A2               	movwf	??_Delay_ms
  6388  0DB2  0822               	movf	??_Delay_ms,w
  6389  0DB3  058B               	andwf	11,f	;volatile
  6390                           
  6391                           ;utility.c: 51: Dac0_Start_Hold();
  6392  0DB4  318C  242E  318D   	fcall	_Dac0_Start_Hold
  6393                           
  6394                           ;utility.c: 52: for(i=0; i<time_to_delay; i++){
  6395  0DB7  0020               	movlb	0	; select bank0
  6396  0DB8  01A4               	clrf	Delay_ms@i
  6397  0DB9  01A5               	clrf	Delay_ms@i+1
  6398  0DBA                     l198:	
  6399  0DBA  0821               	movf	Delay_ms@time_to_delay+1,w
  6400  0DBB  0225               	subwf	Delay_ms@i+1,w
  6401  0DBC  1D03               	skipz
  6402  0DBD  2DC0               	goto	u1065
  6403  0DBE  0820               	movf	Delay_ms@time_to_delay,w
  6404  0DBF  0224               	subwf	Delay_ms@i,w
  6405  0DC0                     u1065:	
  6406  0DC0  1803               	btfsc	3,0
  6407  0DC1  2DD1               	goto	l1687
  6408                           
  6409                           ;utility.c: 53: _delay((unsigned long)((1)*(32000000/4000.0)));
  6410  0DC2  300B               	movlw	11
  6411  0DC3  00A3               	movwf	??_Delay_ms+1
  6412  0DC4  3062               	movlw	98
  6413  0DC5  00A2               	movwf	??_Delay_ms
  6414  0DC6                     u2957:	
  6415  0DC6  0BA2               	decfsz	??_Delay_ms,f
  6416  0DC7  2DC6               	goto	u2957
  6417  0DC8  0BA3               	decfsz	??_Delay_ms+1,f
  6418  0DC9  2DC6               	goto	u2957
  6419  0DCA  0000               	nop
  6420  0DCB  3001               	movlw	1
  6421  0DCC  0020               	movlb	0	; select bank0
  6422  0DCD  07A4               	addwf	Delay_ms@i,f
  6423  0DCE  3000               	movlw	0
  6424  0DCF  3DA5               	addwfc	Delay_ms@i+1,f
  6425  0DD0  2DBA               	goto	l198
  6426  0DD1                     l1687:	
  6427                           
  6428                           ;utility.c: 54: }
  6429                           ;utility.c: 55: INTCON |= 0xC0;
  6430  0DD1  30C0               	movlw	192
  6431  0DD2  00A2               	movwf	??_Delay_ms
  6432  0DD3  0822               	movf	??_Delay_ms,w
  6433  0DD4  048B               	iorwf	11,f	;volatile
  6434  0DD5  0008               	return
  6435  0DD6                     __end_of_Delay_ms:	
  6436                           
  6437                           	psect	text38
  6438  0C2E                     __ptext38:	
  6439 ;; *************** function _Dac0_Start_Hold *****************
  6440 ;; Defined at:
  6441 ;;		line 287 in file "utility.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;		None               void
  6448 ;; Registers used:
  6449 ;;		wreg
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;Total ram usage:        0 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    3
  6462 ;; This function calls:
  6463 ;;		Nothing
  6464 ;; This function is called by:
  6465 ;;		_main
  6466 ;;		_Delay_ms
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           
  6471                           ;psect for function _Dac0_Start_Hold
  6472  0C2E                     _Dac0_Start_Hold:	
  6473                           
  6474                           ;utility.c: 288: DACEN = 1;
  6475                           
  6476                           ;incstack = 0
  6477                           ; Regs used in _Dac0_Start_Hold: [wreg]
  6478  0C2E  0022               	movlb	2	; select bank2
  6479  0C2F  1798               	bsf	24,7	;volatile
  6480                           
  6481                           ;utility.c: 289: DACCON1 = 0x10;
  6482  0C30  3010               	movlw	16
  6483  0C31  0099               	movwf	25	;volatile
  6484  0C32  0008               	return
  6485  0C33                     __end_of_Dac0_Start_Hold:	
  6486                           
  6487                           	psect	text39
  6488  0C38                     __ptext39:	
  6489 ;; *************** function _Adc1_Start *****************
  6490 ;; Defined at:
  6491 ;;		line 298 in file "utility.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;		None               void
  6498 ;; Registers used:
  6499 ;;		None
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6509 ;;Total ram usage:        0 bytes
  6510 ;; Hardware stack levels used:    1
  6511 ;; Hardware stack levels required when called:    3
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_main
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           
  6520                           ;psect for function _Adc1_Start
  6521  0C38                     _Adc1_Start:	
  6522                           
  6523                           ;utility.c: 299: ADIF = 0;
  6524                           
  6525                           ;incstack = 0
  6526                           ; Regs used in _Adc1_Start: []
  6527  0C38  0020               	movlb	0	; select bank0
  6528  0C39  1311               	bcf	17,6	;volatile
  6529                           
  6530                           ;utility.c: 300: ADON = 1;
  6531  0C3A  0021               	movlb	1	; select bank1
  6532  0C3B  141D               	bsf	29,0	;volatile
  6533                           
  6534                           ;utility.c: 301: ADIE = 1;
  6535  0C3C  1711               	bsf	17,6	;volatile
  6536  0C3D  0008               	return
  6537  0C3E                     __end_of_Adc1_Start:	
  6538                           
  6539                           	psect	intentry
  6540  0004                     __pintentry:	
  6541 ;; *************** function _global_interrupt *****************
  6542 ;; Defined at:
  6543 ;;		line 47 in file "main.c"
  6544 ;; Parameters:    Size  Location     Type
  6545 ;;		None
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;		None
  6548 ;; Return value:  Size  Location     Type
  6549 ;;		None               void
  6550 ;; Registers used:
  6551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6552 ;; Tracked objects:
  6553 ;;		On entry : 0/0
  6554 ;;		On exit  : 0/0
  6555 ;;		Unchanged: 0/0
  6556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6561 ;;Total ram usage:        2 bytes
  6562 ;; Hardware stack levels used:    1
  6563 ;; Hardware stack levels required when called:    2
  6564 ;; This function calls:
  6565 ;;		_Sinus_Generator
  6566 ;; This function is called by:
  6567 ;;		Interrupt level 1
  6568 ;; This function uses a non-reentrant model
  6569 ;;
  6570                           
  6571  0004                     _global_interrupt:	
  6572                           
  6573                           ;incstack = 0
  6574                           ; Regs used in _global_interrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6575  0004  147E               	bsf	126,0	;set compiler interrupt flag
  6576  0005  3180               	pagesel	$
  6577  0006  0020               	movlb	0	; select bank0
  6578  0007  087F               	movf	127,w
  6579  0008  00F8               	movwf	??_global_interrupt+1
  6580                           
  6581                           ;main.c: 49: INTCON &= ~0x80;
  6582  0009  307F               	movlw	127
  6583  000A  00F7               	movwf	??_global_interrupt
  6584  000B  0877               	movf	??_global_interrupt,w
  6585  000C  058B               	andwf	11,f	;volatile
  6586                           
  6587                           ;main.c: 52: if(ADIF){
  6588  000D  1F11               	btfss	17,6	;volatile
  6589  000E  281B               	goto	i1l123
  6590                           
  6591                           ;main.c: 53: adc_sonuc_high = ADRESH;
  6592  000F  0021               	movlb	1	; select bank1
  6593  0010  081C               	movf	28,w	;volatile
  6594  0011  00F7               	movwf	??_global_interrupt
  6595  0012  0877               	movf	??_global_interrupt,w
  6596  0013  00CF               	movwf	_adc_sonuc_high^(0+128)
  6597                           
  6598                           ;main.c: 54: adc_sonuc_low = ADRESL;
  6599  0014  081B               	movf	27,w	;volatile
  6600  0015  00F7               	movwf	??_global_interrupt
  6601  0016  0877               	movf	??_global_interrupt,w
  6602  0017  00D0               	movwf	_adc_sonuc_low^(0+128)
  6603                           
  6604                           ;main.c: 56: ADIF = 0;
  6605  0018  0020               	movlb	0	; select bank0
  6606  0019  1311               	bcf	17,6	;volatile
  6607                           
  6608                           ;main.c: 57: return;
  6609  001A  2835               	goto	i1l124
  6610  001B                     i1l123:	
  6611                           
  6612                           ;main.c: 58: }
  6613                           ;main.c: 62: if(PIR1 & 0x04){
  6614  001B  1D11               	btfss	17,2	;volatile
  6615  001C  282A               	goto	i1l125
  6616                           
  6617                           ;main.c: 64: Systick_Counter += 1;
  6618  001D  3001               	movlw	1
  6619  001E  0022               	movlb	2	; select bank2
  6620  001F  07B4               	addwf	_Systick_Counter^(0+256),f
  6621  0020  3000               	movlw	0
  6622  0021  3DB5               	addwfc	(_Systick_Counter+1)^(0+256),f
  6623                           
  6624                           ;main.c: 68: TMR1H = 0x00;
  6625  0022  0020               	movlb	0	; select bank0
  6626  0023  0197               	clrf	23	;volatile
  6627                           
  6628                           ;main.c: 69: TMR1L = 0x00;
  6629  0024  0196               	clrf	22	;volatile
  6630                           
  6631                           ;main.c: 71: PIR1 &= ~0x04;
  6632  0025  30FB               	movlw	251
  6633  0026  00F7               	movwf	??_global_interrupt
  6634  0027  0877               	movf	??_global_interrupt,w
  6635  0028  0591               	andwf	17,f	;volatile
  6636                           
  6637                           ;main.c: 74: return;
  6638  0029  2835               	goto	i1l124
  6639  002A                     i1l125:	
  6640                           
  6641                           ;main.c: 75: }
  6642                           ;main.c: 79: if(INTCON & 0x04){
  6643  002A  1D0B               	btfss	11,2	;volatile
  6644  002B  2834               	goto	i1l126
  6645                           
  6646                           ;main.c: 81: Sinus_Generator();
  6647  002C  3186  262F  3180   	fcall	_Sinus_Generator
  6648                           
  6649                           ;main.c: 84: INTCON &= ~0x04;
  6650  002F  30FB               	movlw	251
  6651  0030  00F7               	movwf	??_global_interrupt
  6652  0031  0877               	movf	??_global_interrupt,w
  6653  0032  058B               	andwf	11,f	;volatile
  6654                           
  6655                           ;main.c: 85: return;
  6656  0033  2835               	goto	i1l124
  6657  0034                     i1l126:	
  6658                           
  6659                           ;main.c: 86: }
  6660                           ;main.c: 91: INTCON |= 0x80;
  6661  0034  178B               	bsf	11,7	;volatile
  6662  0035                     i1l124:	
  6663  0035  0878               	movf	??_global_interrupt+1,w
  6664  0036  0020               	movlb	0	; select bank0
  6665  0037  00FF               	movwf	127
  6666  0038  107E               	bcf	126,0	;clear compiler interrupt flag
  6667  0039  0009               	retfie
  6668  003A                     __end_of_global_interrupt:	
  6669                           
  6670                           	psect	text41
  6671  062F                     __ptext41:	
  6672 ;; *************** function _Sinus_Generator *****************
  6673 ;; Defined at:
  6674 ;;		line 88 in file "audio_tone.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;  Audio_Signal    1    6[COMMON] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;		None               void
  6681 ;; Registers used:
  6682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6692 ;;Total ram usage:        6 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; Hardware stack levels required when called:    1
  6695 ;; This function calls:
  6696 ;;		_Send_Vcxo_Signal
  6697 ;;		_Timer0_Stop
  6698 ;; This function is called by:
  6699 ;;		_global_interrupt
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           
  6704                           ;psect for function _Sinus_Generator
  6705  062F                     _Sinus_Generator:	
  6706                           
  6707                           ;audio_tone.c: 90: uint8_t Audio_Signal;
  6708                           ;audio_tone.c: 91: static uint8_t tone_index = 0;
  6709                           ;audio_tone.c: 92: if (MODEM_TRANSMITTING == 1) {
  6710                           
  6711                           ;incstack = 0
  6712                           ; Regs used in _Sinus_Generator: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6713  062F  0021               	movlb	1	; select bank1
  6714  0630  084C               	movf	_MODEM_TRANSMITTING^(0+128),w
  6715  0631  3A01               	xorlw	1
  6716  0632  1D03               	skipz
  6717  0633  0008               	return
  6718                           
  6719                           ;audio_tone.c: 95: if (packet_pos == modem_packet_size) {
  6720  0634  087C               	movf	_modem_packet_size+3,w
  6721  0635  0022               	movlb	2	; select bank2
  6722  0636  062F               	xorwf	(_packet_pos+3)^(0+256),w
  6723  0637  1D03               	skipz
  6724  0638  2E43               	goto	u177_25
  6725  0639  087B               	movf	_modem_packet_size+2,w
  6726  063A  062E               	xorwf	(_packet_pos+2)^(0+256),w
  6727  063B  1D03               	skipz
  6728  063C  2E43               	goto	u177_25
  6729  063D  087A               	movf	_modem_packet_size+1,w
  6730  063E  062D               	xorwf	(_packet_pos+1)^(0+256),w
  6731  063F  1D03               	skipz
  6732  0640  2E43               	goto	u177_25
  6733  0641  0879               	movf	_modem_packet_size,w
  6734  0642  062C               	xorwf	_packet_pos^(0+256),w
  6735  0643                     u177_25:	
  6736  0643  1D03               	skipz
  6737  0644  2E51               	goto	i1l2019
  6738                           
  6739                           ;audio_tone.c: 97: MODEM_TRANSMITTING = 0;
  6740  0645  0021               	movlb	1	; select bank1
  6741  0646  01CC               	clrf	_MODEM_TRANSMITTING^(0+128)
  6742                           
  6743                           ;audio_tone.c: 98: Timer0_Stop();
  6744  0647  318C  2425  3186   	fcall	_Timer0_Stop
  6745                           
  6746                           ;audio_tone.c: 100: Send_Vcxo_Signal(0x10);
  6747  064A  3010               	movlw	16
  6748  064B  318C  2429         	fcall	_Send_Vcxo_Signal
  6749                           
  6750                           ;audio_tone.c: 102: PTT_OFF = 1;
  6751  064D  0021               	movlb	1	; select bank1
  6752  064E  01CD               	clrf	_PTT_OFF^(0+128)
  6753  064F  0ACD               	incf	_PTT_OFF^(0+128),f
  6754                           
  6755                           ;audio_tone.c: 104: goto end_generator;
  6756  0650  0008               	return
  6757  0651                     i1l2019:	
  6758                           
  6759                           ;audio_tone.c: 105: }
  6760                           ;audio_tone.c: 108: if (current_sample_in_baud == 0) {
  6761  0651  0020               	movlb	0	; select bank0
  6762  0652  08EF               	movf	_current_sample_in_baud,f
  6763  0653  1D03               	skipz
  6764  0654  2E9C               	goto	i1l2039
  6765                           
  6766                           ;audio_tone.c: 109: if ((packet_pos & 7) == 0)
  6767  0655  3007               	movlw	7
  6768  0656  0022               	movlb	2	; select bank2
  6769  0657  052C               	andwf	_packet_pos^(0+256),w
  6770  0658  00F1               	movwf	??_Sinus_Generator
  6771  0659  3000               	movlw	0
  6772  065A  052D               	andwf	(_packet_pos+1)^(0+256),w
  6773  065B  00F2               	movwf	??_Sinus_Generator+1
  6774  065C  3000               	movlw	0
  6775  065D  052E               	andwf	(_packet_pos+2)^(0+256),w
  6776  065E  00F3               	movwf	??_Sinus_Generator+2
  6777  065F  3000               	movlw	0
  6778  0660  052F               	andwf	(_packet_pos+3)^(0+256),w
  6779  0661  00F4               	movwf	??_Sinus_Generator+3
  6780  0662  0874               	movf	??_Sinus_Generator+3,w
  6781  0663  0473               	iorwf	??_Sinus_Generator+2,w
  6782  0664  0472               	iorwf	??_Sinus_Generator+1,w
  6783  0665  0471               	iorwf	??_Sinus_Generator,w
  6784  0666  1D03               	skipz
  6785  0667  2E81               	goto	i1l2025
  6786                           
  6787                           ;audio_tone.c: 110: current_byte = modem_packet[packet_pos >> 3];
  6788  0668  082C               	movf	_packet_pos^(0+256),w
  6789  0669  00F1               	movwf	??_Sinus_Generator
  6790  066A  082D               	movf	(_packet_pos+1)^(0+256),w
  6791  066B  00F2               	movwf	??_Sinus_Generator+1
  6792  066C  082E               	movf	(_packet_pos+2)^(0+256),w
  6793  066D  00F3               	movwf	??_Sinus_Generator+2
  6794  066E  082F               	movf	(_packet_pos+3)^(0+256),w
  6795  066F  00F4               	movwf	??_Sinus_Generator+3
  6796  0670  3003               	movlw	3
  6797  0671                     u180_25:	
  6798  0671  36F4               	lsrf	??_Sinus_Generator+3,f
  6799  0672  0CF3               	rrf	??_Sinus_Generator+2,f
  6800  0673  0CF2               	rrf	??_Sinus_Generator+1,f
  6801  0674  0CF1               	rrf	??_Sinus_Generator,f
  6802  0675  0B89               	decfsz	9,f
  6803  0676  2E71               	goto	u180_25
  6804  0677  0871               	movf	??_Sinus_Generator,w
  6805  0678  3EA0               	addlw	_modem_packet& (0+255)
  6806  0679  0086               	movwf	6
  6807  067A  3001               	movlw	1	; select bank3/4
  6808  067B  0087               	movwf	7
  6809  067C  0801               	movf	1,w
  6810  067D  00F5               	movwf	??_Sinus_Generator+4
  6811  067E  0875               	movf	??_Sinus_Generator+4,w
  6812  067F  0020               	movlb	0	; select bank0
  6813  0680  2E85               	goto	L6
  6814  0681                     i1l2025:	
  6815                           
  6816                           ;audio_tone.c: 111: else
  6817                           ;audio_tone.c: 112: current_byte = current_byte >> 1 ;
  6818  0681  0020               	movlb	0	; select bank0
  6819  0682  366E               	lsrf	_current_byte,w
  6820  0683  00F1               	movwf	??_Sinus_Generator
  6821  0684  0871               	movf	??_Sinus_Generator,w
  6822  0685                     L6:	
  6823  0685  00EE               	movwf	_current_byte
  6824                           
  6825                           ;audio_tone.c: 113: if ((current_byte & 0x01) == 0) {
  6826  0686  186E               	btfsc	_current_byte,0
  6827  0687  2E9C               	goto	i1l2039
  6828                           
  6829                           ;audio_tone.c: 115: if(tone_index){
  6830  0688  0021               	movlb	1	; select bank1
  6831  0689  084B               	movf	Sinus_Generator@tone_index^(0+128),w
  6832  068A  1903               	btfsc	3,2
  6833  068B  2E94               	goto	i1l2035
  6834                           
  6835                           ;audio_tone.c: 116: phase_delta = PHASE_DELTA_1200;
  6836  068C  0022               	movlb	2	; select bank2
  6837  068D  0824               	movf	_PHASE_DELTA_1200^(0+256),w
  6838  068E  00F1               	movwf	??_Sinus_Generator
  6839  068F  0871               	movf	??_Sinus_Generator,w
  6840  0690  0021               	movlb	1	; select bank1
  6841  0691  00D1               	movwf	_phase_delta^(0+128)
  6842                           
  6843                           ;audio_tone.c: 117: tone_index = 0;
  6844  0692  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6845                           
  6846                           ;audio_tone.c: 118: }
  6847  0693  2E9C               	goto	i1l2039
  6848  0694                     i1l2035:	
  6849                           
  6850                           ;audio_tone.c: 119: else{
  6851                           ;audio_tone.c: 120: phase_delta = PHASE_DELTA_2200;
  6852  0694  0022               	movlb	2	; select bank2
  6853  0695  0828               	movf	_PHASE_DELTA_2200^(0+256),w
  6854  0696  00F1               	movwf	??_Sinus_Generator
  6855  0697  0871               	movf	??_Sinus_Generator,w
  6856  0698  0021               	movlb	1	; select bank1
  6857  0699  00D1               	movwf	_phase_delta^(0+128)
  6858                           
  6859                           ;audio_tone.c: 121: tone_index = 1;
  6860  069A  01CB               	clrf	Sinus_Generator@tone_index^(0+128)
  6861  069B  0ACB               	incf	Sinus_Generator@tone_index^(0+128),f
  6862  069C                     i1l2039:	
  6863                           
  6864                           ;audio_tone.c: 122: }
  6865                           ;audio_tone.c: 123: }
  6866                           ;audio_tone.c: 124: }
  6867                           ;audio_tone.c: 126: phase += phase_delta;
  6868  069C  0021               	movlb	1	; select bank1
  6869  069D  0851               	movf	_phase_delta^(0+128),w
  6870  069E  00F1               	movwf	??_Sinus_Generator
  6871  069F  0871               	movf	??_Sinus_Generator,w
  6872  06A0  07FD               	addwf	_phase,f
  6873                           
  6874                           ;audio_tone.c: 127: if(phase > 181)
  6875  06A1  30B6               	movlw	182
  6876  06A2  027D               	subwf	_phase,w
  6877  06A3  1C03               	skipc
  6878  06A4  2EAA               	goto	i1l2045
  6879                           
  6880                           ;audio_tone.c: 128: phase = phase - 182;
  6881  06A5  087D               	movf	_phase,w
  6882  06A6  3E4A               	addlw	74
  6883  06A7  00F1               	movwf	??_Sinus_Generator
  6884  06A8  0871               	movf	??_Sinus_Generator,w
  6885  06A9  00FD               	movwf	_phase
  6886  06AA                     i1l2045:	
  6887                           
  6888                           ;audio_tone.c: 131: Audio_Signal = *(sine_table2 + phase);
  6889  06AA  087D               	movf	_phase,w
  6890  06AB  3E00               	addlw	low (_sine_table2| (0+32768))
  6891  06AC  0084               	movwf	4
  6892  06AD  3084               	movlw	high (_sine_table2| (0+32768))
  6893  06AE  1803               	skipnc
  6894  06AF  3E01               	addlw	1
  6895  06B0  0085               	movwf	5
  6896  06B1  0800               	movf	0,w	;code access
  6897  06B2  00F1               	movwf	??_Sinus_Generator
  6898  06B3  0871               	movf	??_Sinus_Generator,w
  6899  06B4  00F6               	movwf	Sinus_Generator@Audio_Signal
  6900                           
  6901                           ;audio_tone.c: 132: Send_Vcxo_Signal(Audio_Signal);
  6902  06B5  0876               	movf	Sinus_Generator@Audio_Signal,w
  6903  06B6  318C  2429  3186   	fcall	_Send_Vcxo_Signal
  6904                           
  6905                           ;audio_tone.c: 134: if(++current_sample_in_baud == SAMPLES_PER_BAUD) {
  6906  06B9  3001               	movlw	1
  6907  06BA  00F1               	movwf	??_Sinus_Generator
  6908  06BB  0871               	movf	??_Sinus_Generator,w
  6909  06BC  0020               	movlb	0	; select bank0
  6910  06BD  07EF               	addwf	_current_sample_in_baud,f
  6911  06BE  086F               	movf	_current_sample_in_baud,w
  6912  06BF  0021               	movlb	1	; select bank1
  6913  06C0  064E               	xorwf	_SAMPLES_PER_BAUD^(0+128),w
  6914  06C1  1D03               	skipz
  6915  06C2  0008               	return
  6916                           
  6917                           ;audio_tone.c: 135: current_sample_in_baud = 0;
  6918  06C3  0020               	movlb	0	; select bank0
  6919  06C4  01EF               	clrf	_current_sample_in_baud
  6920                           
  6921                           ;audio_tone.c: 136: packet_pos++;
  6922  06C5  3001               	movlw	1
  6923  06C6  0022               	movlb	2	; select bank2
  6924  06C7  07AC               	addwf	_packet_pos^(0+256),f
  6925  06C8  3000               	movlw	0
  6926  06C9  3DAD               	addwfc	(_packet_pos+1)^(0+256),f
  6927  06CA  3000               	movlw	0
  6928  06CB  3DAE               	addwfc	(_packet_pos+2)^(0+256),f
  6929  06CC  3000               	movlw	0
  6930  06CD  3DAF               	addwfc	(_packet_pos+3)^(0+256),f
  6931                           
  6932                           ;audio_tone.c: 138: }
  6933                           ;audio_tone.c: 139: }
  6934                           ;audio_tone.c: 141: end_generator:
  6935  06CE  0008               	return
  6936  06CF                     __end_of_Sinus_Generator:	
  6937                           ;audio_tone.c: 143: return;
  6938                           
  6939                           
  6940                           	psect	text42
  6941  0C25                     __ptext42:	
  6942 ;; *************** function _Timer0_Stop *****************
  6943 ;; Defined at:
  6944 ;;		line 258 in file "utility.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;		None               void
  6951 ;; Registers used:
  6952 ;;		status,2
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6962 ;;Total ram usage:        0 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_Sinus_Generator
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           
  6972                           ;psect for function _Timer0_Stop
  6973  0C25                     _Timer0_Stop:	
  6974                           
  6975                           ;utility.c: 259: TMR0IE = 0;
  6976                           
  6977                           ;incstack = 0
  6978                           ; Regs used in _Timer0_Stop: [status,2]
  6979  0C25  128B               	bcf	11,5	;volatile
  6980                           
  6981                           ;utility.c: 260: TMR0 = 0x00;
  6982  0C26  0020               	movlb	0	; select bank0
  6983  0C27  0195               	clrf	21	;volatile
  6984  0C28  0008               	return
  6985  0C29                     __end_of_Timer0_Stop:	
  6986                           
  6987                           	psect	text43
  6988  0C29                     __ptext43:	
  6989 ;; *************** function _Send_Vcxo_Signal *****************
  6990 ;; Defined at:
  6991 ;;		line 114 in file "utility.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  value           1    wreg     unsigned char 
  6994 ;; Auto vars:     Size  Location     Type
  6995 ;;  value           1    0[COMMON] unsigned char 
  6996 ;; Return value:  Size  Location     Type
  6997 ;;                  1    wreg      unsigned char 
  6998 ;; Registers used:
  6999 ;;		wreg
  7000 ;; Tracked objects:
  7001 ;;		On entry : 0/0
  7002 ;;		On exit  : 0/0
  7003 ;;		Unchanged: 0/0
  7004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7009 ;;Total ram usage:        1 bytes
  7010 ;; Hardware stack levels used:    1
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		_Sinus_Generator
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _Send_Vcxo_Signal
  7020  0C29                     _Send_Vcxo_Signal:	
  7021                           
  7022                           ;incstack = 0
  7023                           ; Regs used in _Send_Vcxo_Signal: [wreg]
  7024                           ;Send_Vcxo_Signal@value stored from wreg
  7025  0C29  00F0               	movwf	Send_Vcxo_Signal@value
  7026                           
  7027                           ;utility.c: 116: DACCON1 = value;
  7028  0C2A  0870               	movf	Send_Vcxo_Signal@value,w
  7029  0C2B  0022               	movlb	2	; select bank2
  7030  0C2C  0099               	movwf	25	;volatile
  7031  0C2D  0008               	return
  7032  0C2E                     __end_of_Send_Vcxo_Signal:	
  7033                           ;utility.c: 117: return 1;
  7034                           ;	Return value of _Send_Vcxo_Signal is never used
  7035                           
  7036  007E                     btemp	set	126	;btemp
  7037  007E                     pic14e$flags	set	126
  7038  007E                     wtemp	set	126
  7039  007E                     wtemp0	set	126
  7040  0080                     wtemp1	set	128
  7041  0082                     wtemp2	set	130
  7042  0084                     wtemp3	set	132
  7043  0086                     wtemp4	set	134
  7044  0088                     wtemp5	set	136
  7045  007F                     wtemp6	set	127
  7046  007E                     ttemp	set	126
  7047  007E                     ttemp0	set	126
  7048  0081                     ttemp1	set	129
  7049  0084                     ttemp2	set	132
  7050  0087                     ttemp3	set	135
  7051  007F                     ttemp4	set	127
  7052  007E                     ltemp	set	126
  7053  007E                     ltemp0	set	126
  7054  0082                     ltemp1	set	130
  7055  0086                     ltemp2	set	134
  7056  0080                     ltemp3	set	128


Data Sizes:
    Strings     6
    Constant    190
    Data        16
    BSS         147
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     78      80
    BANK1            80     28      80
    BANK2            80      0      40
    BANK3            80      0      64
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    memcpy@s1	PTR const void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Three@reg(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_Two@reg(BANK0[4]), 
		 -> Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_One@reg(BANK0[4]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), Adf_Write_Register_Zero@reg(BANK0[4]), 

    Ax25_Send_Header@addresses	PTR struct . size(1) Largest target is 16
		 -> main@beacon_address(BANK1[16]), 

    Ax25_Send_String@string	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    sp__memcpy	PTR void  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 
		 -> Reverse_Array@buffer_array(BANK0[4]), 

    Reverse_Array@input	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 

    Write_Adf7012_Reg@reg_value	PTR unsigned char  size(1) Largest target is 4
		 -> Adf_Write_Register_Three@reg_ptr(BANK1[4]), Adf_Write_Register_Two@reg_ptr(BANK0[4]), Adf_Write_Register_One@reg_ptr(BANK0[3]), Adf_Write_Register_Zero@reg_ptr(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _global_interrupt in COMMON

    _global_interrupt->_Sinus_Generator
    _Sinus_Generator->_Send_Vcxo_Signal

Critical Paths under _main in BANK0

    _main->_Adf_Lock
    _main->_Modem_Flush_Frame
    _Adf_Reset->_Delay_ms
    _Modem_Flush_Frame->_Ptt_On
    _Ax25_Send_String->_Ax25_Send_Byte
    _Ax25_Send_Byte->_Send_Byte
    _Ax25_Send_Header->_Send_Byte
    _Ax25_Send_Footer->_Send_Byte
    _Send_Byte->_Update_Crc
    _Adf_Write_Config->_Adf_Write_Register_Three
    _Adf_Write_Register_Zero->_Reverse_Array
    _Adf_Write_Register_Two->_Reverse_Array
    _Adf_Write_Register_Three->_Reverse_Array
    _Adf_Write_Register_One->_Reverse_Array
    _Write_Adf7012_Reg->_Spi_Byte_Send
    _Spi_Byte_Send->_Delay_ms
    _Reverse_Array->_memcpy
    _Read_Adf7012_Muxout->_Delay_ms

Critical Paths under _global_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Adf_Lock
    _Adf_Write_Config->_Adf_Write_Register_Three

Critical Paths under _global_interrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _global_interrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _global_interrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _global_interrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _global_interrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _global_interrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _global_interrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _global_interrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _global_interrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _global_interrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _global_interrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _global_interrupt in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  125823
                                             77 BANK0      1     1      0
                                             12 BANK1     16    16      0
                         _Adc1_Start
                           _Adf_Lock
                   _Ax25_Send_Footer
                   _Ax25_Send_Header
                   _Ax25_Send_String
                    _Dac0_Start_Hold
                           _Delay_ms
                        _Gpio_Config
                  _Modem_Flush_Frame
                        _Modem_Setup
                            _Ptt_Off
                             _Ptt_On
                       _System_Start
                       _Timer1_Start
 ---------------------------------------------------------------------------------
 (1) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _System_Start                                         1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ptt_Off                                              0     0      0   23212
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (1) _Modem_Setup                                          0     0      0   24584
                         _Modem_Init
                        _Radio_Setup
 ---------------------------------------------------------------------------------
 (2) _Radio_Setup                                          0     0      0   24584
                   _Adf_Reset_Config
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Adf_Reset_Config                                     0     0      0    1372
                          _Adf_Reset
             _Adf_Reset_Register_One
           _Adf_Reset_Register_Three
             _Adf_Reset_Register_Two
            _Adf_Reset_Register_Zero
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Zero                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Two                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_Three                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset_Register_One                               1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Adf_Reset                                            0     0      0    1372
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Modem_Init                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Modem_Flush_Frame                                    1     1      0   25956
                                             76 BANK0      1     1      0
                           _Delay_ms
                             _Ptt_On
                       _Timer0_Start
 ---------------------------------------------------------------------------------
 (2) _Timer0_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Ptt_On                                               1     1      0   24584
                                             75 BANK0      1     1      0
                   _Adf_Write_Config
                           _Delay_ms
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (1) _Gpio_Config                                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_String                                     4     2      2     321
                                             13 BANK0      4     2      2
                     _Ax25_Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Byte                                       1     1      0     178
                                             12 BANK0      1     1      0
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Header                                    10     8      2     800
                                             12 BANK0     10     8      2
                     _Ax25_Send_Flag
                     _Ax25_Send_Sync
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Sync                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Ax25_Send_Footer                                     2     2      0     293
                                             12 BANK0      2     2      0
                     _Ax25_Send_Flag
                          _Send_Byte
 ---------------------------------------------------------------------------------
 (3) _Send_Byte                                            9     9      0     156
                                              3 BANK0      9     9      0
                         _Update_Crc
 ---------------------------------------------------------------------------------
 (4) _Update_Crc                                           3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Ax25_Send_Flag                                       9     9      0      91
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _Adf_Lock                                             6     6      0   24675
                                             75 BANK0      2     2      0
                                              8 BANK1      4     4      0
                         _Adf_Locked
                   _Adf_Write_Config
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (2) _Adf_Write_Config                                     0     0      0   21840
             _Adf_Write_Register_One
           _Adf_Write_Register_Three
             _Adf_Write_Register_Two
            _Adf_Write_Register_Zero
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Zero                             36    36      0    5460
                                             19 BANK0     36    36      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Two                              32    32      0    5460
                                             19 BANK0     32    32      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_Three                            64    64      0    5460
                                             19 BANK0     56    56      0
                                              0 BANK1      8     8      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _Adf_Write_Register_One                              19    19      0    5460
                                             19 BANK0     19    19      0
                      _Reverse_Array
                  _Write_Adf7012_Reg
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _Write_Adf7012_Reg                                    4     3      1    3247
                                             10 BANK0      4     3      1
                           _Delay_ms
                      _Spi_Byte_Send
 ---------------------------------------------------------------------------------
 (5) _Spi_Byte_Send                                        4     4      0    1464
                                              6 BANK0      4     4      0
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (4) _Reverse_Array                                       12    11      1    1332
                                              7 BANK0     12    11      1
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                               7     4      3     785
                                              0 BANK0      7     4      3
 ---------------------------------------------------------------------------------
 (2) _Adf_Locked                                           0     0      0    1372
                _Read_Adf7012_Muxout
 ---------------------------------------------------------------------------------
 (2) _Read_Adf7012_Muxout                                  0     0      0    1372
                           _Delay_ms
 ---------------------------------------------------------------------------------
 (3) _Delay_ms                                             6     4      2    1372
                                              0 BANK0      6     4      2
                    _Dac0_Start_Hold
 ---------------------------------------------------------------------------------
 (4) _Dac0_Start_Hold                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Adc1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _global_interrupt                                     2     2      0      45
                                              7 COMMON     2     2      0
                    _Sinus_Generator
 ---------------------------------------------------------------------------------
 (10) _Sinus_Generator                                     6     6      0      45
                                              1 COMMON     6     6      0
                   _Send_Vcxo_Signal
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (11) _Timer0_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _Send_Vcxo_Signal                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Adc1_Start
   _Adf_Lock
     _Adf_Locked
       _Read_Adf7012_Muxout
         _Delay_ms
           _Dac0_Start_Hold
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ax25_Send_Footer
     _Ax25_Send_Flag
     _Send_Byte
       _Update_Crc
   _Ax25_Send_Header
     _Ax25_Send_Flag
     _Ax25_Send_Sync
     _Send_Byte
       _Update_Crc
   _Ax25_Send_String
     _Ax25_Send_Byte
       _Send_Byte
         _Update_Crc
   _Dac0_Start_Hold
   _Delay_ms
     _Dac0_Start_Hold
   _Gpio_Config
   _Modem_Flush_Frame
     _Delay_ms
       _Dac0_Start_Hold
     _Ptt_On
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
       _Read_Adf7012_Muxout
         _Delay_ms
           _Dac0_Start_Hold
     _Timer0_Start
   _Modem_Setup
     _Modem_Init
     _Radio_Setup
       _Adf_Reset_Config
         _Adf_Reset
           _Delay_ms
             _Dac0_Start_Hold
         _Adf_Reset_Register_One
         _Adf_Reset_Register_Three
         _Adf_Reset_Register_Two
         _Adf_Reset_Register_Zero
       _Adf_Write_Config
         _Adf_Write_Register_One
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Three
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Two
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
         _Adf_Write_Register_Zero
           _Reverse_Array
             _memcpy
           _Write_Adf7012_Reg
             _Delay_ms
               _Dac0_Start_Hold
             _Spi_Byte_Send
               _Delay_ms
                 _Dac0_Start_Hold
           _memcpy
       _Delay_ms
         _Dac0_Start_Hold
   _Ptt_Off
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
   _Ptt_On
     _Adf_Write_Config
       _Adf_Write_Register_One
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Three
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Two
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
       _Adf_Write_Register_Zero
         _Reverse_Array
           _memcpy
         _Write_Adf7012_Reg
           _Delay_ms
             _Dac0_Start_Hold
           _Spi_Byte_Send
             _Delay_ms
               _Dac0_Start_Hold
         _memcpy
     _Delay_ms
       _Dac0_Start_Hold
     _Read_Adf7012_Muxout
       _Delay_ms
         _Dac0_Start_Hold
   _System_Start
   _Timer1_Start

 _global_interrupt (ROOT)
   _Sinus_Generator
     _Send_Vcxo_Signal
     _Timer0_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1C      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      28       9       50.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      40      11       80.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     116      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     116      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Sep 23 21:14:23 2014

                      __CFG_CP$OFF 0000            _Adf_Reset_Register_Zero 0D44  
                   Reverse_Array@i 0032                     Spi_Byte_Send@i 0029  
         __end_of_Adf_Reset_Config 0C9C                        __CFG_LVP$ON 0000  
         _Adf_Reset_Register_Three 0D87                                l132 06D2  
                              l228 07E4                                l198 0DBA  
                     __CFG_CPD$OFF 0000                                _PSA 04AB  
                              _crc 00C7                       __CFG_BORV$LO 0000  
                              wreg 0009          Ax25_Send_Header@addresses 0033  
                     __CFG_IESO$ON 0000                      ??_Gpio_Config 0020  
           _Adf_Write_Register_One 0F1A             _Adf_Write_Register_Two 04C4  
                             l2001 07C7                               l2203 0D2A  
                             l2153 01F5                               l2171 0229  
                             l1701 07E5                               l2245 0FBD  
                             l2165 0216                               l2159 0208  
                             l2185 026B                               l2193 022C  
                             l1723 0DE0                               l2195 02A6  
                             l2179 0246                               l2189 028C  
                             l1737 0EB2                               l1905 0629  
                             l2465 0748                               l1739 0EC6  
                             l2467 074B                               l2459 073F  
                             l1757 0EFA                               l1853 0E20  
                             l1687 0DD1                               l1865 0C8B  
                             l1895 05EB                               l1975 03BF  
                             l1977 03E1                               l1999 07A5  
                             _ADIE 048E                               _ADIF 008E  
                             _ADFM 04F7                               _ADON 04E8  
                             STR_1 04BE                               u1105 0DEA  
                             u1205 0F23                               u1215 0F31  
                             u1135 02B7                               u1065 0DC0  
                             u1225 0F4B                               u1305 0082  
                             u1145 02C6                               u1315 0091  
                             u1235 04CD                               u1155 02D5  
                             u1405 0118                               u1325 00A0  
                             u1245 04DC                               u1165 02E4  
                             u1415 0127                               u1335 00AF  
                             u1255 04F6                               u1175 02F3  
                             u1504 05B7                               u1425 0136  
                             u1345 00BE                               u1265 0505  
                             u1185 0302                               u1505 05B6  
                             u1355 00CD                               u1275 0514  
                             u1195 031D                               u1515 05C4  
                             u1604 0399                               u2420 070F  
                             u1365 00DC                               u1285 0523  
                             u1525 05E9                               u1605 0398  
                             u1375 00EB                               u1295 0073  
                             u1535 05F9                               u1544 0603  
                             u1464 058F                               u1624 03A4  
                             u1385 00FA                               u1545 0602  
                             u1465 058E                               u1625 03A3  
                             u1714 078A                               u1474 059C  
                             u1395 0109                               u1715 0789  
                             u1555 0611                               u1475 059B  
                             u1635 03B1                               u1644 03C6  
                             u1725 0797                               u1645 03C5  
                             u1734 07AC                               u1735 07AB  
                             u1495 05AE                               u1655 03D4  
                             u1745 07BA                               u1905 024A  
                             u1595 0391                               u1915 0269  
                             u1685 0777                               u1925 0278  
                             u1694 077F                               u1695 077E  
                             u1935 027D                               u1855 01F3  
                             u1945 0290                               u1865 0206  
                             u1955 0236                               u1875 0214  
                             u1885 0227                               u1975 0D1C  
                             u1895 0244                               u2957 0DC6  
                             _PIR1 0011                               _TMR0 0015  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
                             _main 06CF                               _test 00D2  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                      Send_Byte@byte 0029  
                    __CFG_BOREN$ON 0000                               ltemp 007E  
                             start 003A                               ttemp 007E  
                  _Sinus_Generator 062F                               wtemp 007E  
                    __CFG_MCLRE$ON 0000            _Adf_Write_Register_Zero 02AE  
                      ?_Adc1_Start 0070                       Adf_Lock@bias 00DE  
               main@beacon_address 00E0                      __CFG_PLLEN$ON 0000  
                  __end_of_Ptt_Off 0C7E                      ??_Radio_Setup 006B  
                            _ADCS0 04F4                              _ADCS1 04F5  
                            _ADCS2 04F6                              ?_main 0070  
                            _DACEN 08C7                              _DACOE 08C5  
                    __CFG_WDTE$OFF 0000                              _ANSA1 0C61  
                            i1l123 001B                              i1l124 0035  
                            i1l125 002A                              i1l126 0034  
                            _TMR1H 0017                              _TMR1L 0016  
                            _TRISA 008C                              _TRISC 008E  
       Write_Adf7012_Reg@reg_value 002C                              _phase 007D  
                            _test2 00D3                   __end_of_Adf_Lock 1000  
                    ??_Modem_Setup 006B                  __end_of_BAUD_RATE 04BC  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
               __size_of_Adf_Reset 0012                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                 _Adf_Write_Config 0C56                              wtemp6 007F  
              __end_of_Gpio_Config 0CBB                   __end_of_Delay_ms 0DD6  
                      ?_Adf_Locked 0070             _current_sample_in_baud 006F  
                Spi_Byte_Send@data 0027                         Send_Byte@i 002A  
                  __initialization 003C          ??_Adf_Reset_Register_Zero 0020  
        __size_of_Ax25_Send_Header 00D8              __size_of_System_Start 0036  
                     __end_of_main 0758          __size_of_Ax25_Send_Footer 001B  
        __size_of_Ax25_Send_String 001D              __end_of_Reverse_Array 0F1A  
         _Adf_Write_Register_Three 006A              __end_of_Spi_Byte_Send 07FE  
                           ??_main 006D          __size_of_Send_Vcxo_Signal 0005  
                       _Modem_Init 0CDC                __end_of_Radio_Setup 0C70  
     __size_of_Read_Adf7012_Muxout 000F                             _ADCON0 009D  
                           _CCP1M1 1499                             _CCP1M2 149A  
                           _CCP1M3 149B                             _CCP1IE 048A  
                           _CCP1IF 008A                             _DACNSS 08C0  
                           _ADNREF 04F2                             _ADRESH 009C  
                           _ADRESL 009B                             _CCPR1H 0292  
                           _CCPR1L 0291            __end_of_Sinus_Generator 06CF  
    Adf_Write_Register_One@reg_ptr 0043                             i1l2025 0681  
                           i1l2035 0694                             i1l2019 0651  
                           i1l2045 06AA                             i1l2039 069C  
                           _INTCON 000B                             u180_25 0671  
              __size_of_Adc1_Start 0006                             u177_25 0643  
               Reverse_Array@F3148 0120                             _OSCCON 0099  
         __size_of_Dac0_Start_Hold 0005                             _TMR1GE 00CF  
                           _TMR0IE 005D                             _TMR0IF 005A  
                           _TMR0CS 04AD                             _TMR1IE 0488  
                           _TMR1IF 0088                             _TMR1ON 00C0  
                     _System_Start 0E67                __end_of_Modem_Setup 0C4A  
                   __CFG_PWRTE$OFF 0000                      ??_Timer0_Stop 0070  
        ??_Adf_Write_Register_Zero 0033                             _Ptt_On 0E31  
                        ??_Ptt_Off 006B                 __size_of_Send_Byte 00B4  
               Reverse_Array@input 0031                     __CFG_STVREN$ON 0000  
                 ??_Ax25_Send_Flag 0020                   ??_Ax25_Send_Byte 002C  
                           _memcpy 0DD6                   ??_Ax25_Send_Sync 0020  
                __end_of_Adf_Reset 0400                         _Update_Crc 0DFF  
              __size_of_Adf_Locked 0003                        _Gpio_Config 0CAB  
          __end_of__initialization 0066                      _adc_sonuc_low 00D0  
        __size_of_global_interrupt 0036                 Write_Adf7012_Reg@i 002D  
       ??_Adf_Reset_Register_Three 0020                     __pcstackCOMMON 0070  
         ??_Adf_Reset_Register_One 0020                       __pidataBANK2 0CBB  
         ??_Adf_Reset_Register_Two 0020                         _adf_config 00A0  
              __end_of_Timer0_Stop 0C29                      _PLAYBACK_RATE 04B6  
                        ?_Adf_Lock 0070                        ?_Modem_Init 0070  
                ?_Adf_Reset_Config 0070                        _Radio_Setup 0C62  
          ?_Adf_Write_Register_One 0070            ?_Adf_Write_Register_Two 0070  
        Spi_Byte_Send@data_to_send 0028                 ??_Adf_Reset_Config 0026  
                        ?_Delay_ms 0020                  __end_of_Send_Byte 062F  
                 _PHASE_DELTA_1200 0124                   _PHASE_DELTA_2200 0128  
                      _Modem_Setup 0C44                         __pbssBANK0 006E  
                       __pbssBANK1 00A0                         __pbssBANK2 0120  
                       __pbssBANK3 01A0                   ?_Sinus_Generator 0070  
               Ax25_Send_Flag@byte 0026                      ?_Timer0_Start 0070  
      Adf_Write_Register_Three@reg 00D8                      ?_Timer1_Start 0070  
                       __pmaintext 06CF                   _Ax25_Send_Header 01D6  
                          ?_Ptt_On 0070                  ??_Dac0_Start_Hold 0020  
               __end_of_TABLE_SIZE 04BE                   _Ax25_Send_Footer 0D0C  
                       __pintentry 0004                       ??_Adc1_Start 0020  
                          _DACCON1 0119                 Ax25_Send_Byte@byte 002C  
                          _DACPSS0 08C2                            _DACPSS1 08C3  
                          ?_memcpy 0020                   _Ax25_Send_String 0D27  
                          _ADPREF0 04F0                            _ADPREF1 04F1  
                       ??_Adf_Lock 006B     __end_of_Adf_Write_Register_One 0F8B  
   __end_of_Adf_Write_Register_Two 057B                            _T1CKPS0 00C4  
                          _T1CKPS1 00C5                   _Send_Vcxo_Signal 0C29  
         __end_of_Adf_Write_Config 0C62                        ?_Update_Crc 0070  
                       ??_Delay_ms 0022                            _OSCSTAT 009A  
                          _OSCTUNE 0098                            _TMR1CS0 00C6  
                          _TMR1CS1 00C7                            _PTT_OFF 00CD  
              Update_Crc@input_bit 0022      Adf_Write_Register_Two@reg_ptr 004B  
   Adf_Write_Register_Zero@reg_ptr 004F                 __end_of_Adc1_Start 0C3E  
                   ??_Timer0_Start 0020                __size_of_Modem_Init 0018  
                   ??_Timer1_Start 0020                          _BAUD_RATE 04BA  
                     ??_Adf_Locked 0026         ??_Adf_Write_Register_Three 0033  
                      _Timer0_Stop 0C25                         _packet_pos 012C  
                          _Ptt_Off 0C70                    __size_of_Ptt_On 0036  
              _Read_Adf7012_Muxout 0C7E    __size_of_Adf_Reset_Register_One 0011  
  __size_of_Adf_Reset_Register_Two 0018                 Ax25_Send_Sync@byte 0026  
              Reverse_Array@length 0027                    Ax25_Send_Flag@i 0027  
                  __size_of_memcpy 0029                            __ptext1 0C9C  
                          __ptext2 0E67                            __ptext3 0C70  
                          __ptext4 0C44                            __ptext5 0C62  
                          __ptext6 0C8D                            __ptext7 0D44  
                          __ptext8 0CF4                            __ptext9 0D87  
            Delay_ms@time_to_delay 0020          Adf_Write_Register_One@reg 003F  
                  Ax25_Send_Sync@i 0027                 __end_of_Adf_Locked 0C25  
             ?_Read_Adf7012_Muxout 0070          Adf_Write_Register_Two@reg 004F  
                          clrloop0 0C51    Adf_Write_Register_Three@reg_ptr 00D4  
             end_of_initialization 0066                            memcpy@d 0024  
                          memcpy@n 0021                            memcpy@s 0025  
                        Delay_ms@i 0024                            init_ram 0C4A  
                          initloop 0C4B                   _global_interrupt 0004  
              __size_of_Update_Crc 0032                       __pstringtext 0400  
                        _PORTAbits 000C                          _PORTCbits 000E  
                 __CFG_FOSC$INTOSC 0000                    _Systick_Counter 0134  
                        _Adf_Reset 03EE                     _adc_sonuc_high 00CF  
            ??_Read_Adf7012_Muxout 0026                         _powerlevel 0130  
                 _SAMPLES_PER_BAUD 00CE                       ?_Gpio_Config 0070  
           _Adf_Reset_Register_One 0CCB       Write_Adf7012_Reg@size_of_reg 002A  
           _Adf_Reset_Register_Two 0CF4          Sinus_Generator@tone_index 00CB  
           __size_of_Reverse_Array 0044             __size_of_Spi_Byte_Send 002A  
         ?_Adf_Reset_Register_Zero 0070                        Adf_Lock@adj 00DC  
                   __end_of_Ptt_On 0E67                     __end_of_memcpy 0DFF  
                     ??_Modem_Init 0020                       ?_Radio_Setup 0070  
                __size_of_Adf_Lock 0075               __end_of_Timer0_Start 0C38  
             __end_of_Timer1_Start 0CAB                start_initialization 003C  
                       ?_Adf_Reset 0070           __end_of_Ax25_Send_Header 02AE  
         __end_of_Ax25_Send_Footer 0D27                  __size_of_Delay_ms 0029  
                     ?_Modem_Setup 0070                    _Dac0_Start_Hold 0C2E  
         __end_of_Ax25_Send_String 0D44          __size_of_Adf_Reset_Config 000F  
         ?_Adf_Write_Register_Zero 0070                          _Send_Byte 057B  
         __end_of_Send_Vcxo_Signal 0C2E                 __end_of_Modem_Init 0CF4  
                         ??_Ptt_On 006B                        __pdataBANK2 0138  
                         ??_memcpy 0023                      _Reverse_Array 0ED6  
                    _Spi_Byte_Send 07D4                  ?_Adf_Write_Config 0070  
                     ??_Update_Crc 0020                        __pbssCOMMON 0079  
                        ___latbits 0002  __size_of_Adf_Reset_Register_Three 0026  
                    _ones_in_a_row 00C9                      __pcstackBANK0 0020  
                    __pcstackBANK1 00D4                 ??_Adf_Write_Config 006B  
        ?_Adf_Reset_Register_Three 0070                __end_of__stringdata 04C4  
          __size_of_Ax25_Send_Flag 007C            __size_of_Ax25_Send_Byte 0006  
          __size_of_Ax25_Send_Sync 0079    __end_of_Adf_Reset_Register_Zero 0D63  
    Ax25_Send_Header@num_addresses 002C                         ?_Send_Byte 0070  
                _Write_Adf7012_Reg 0E9D                       _current_byte 006E  
                Ax25_Send_Header@i 0034                  Ax25_Send_Header@j 0031  
               ?_Write_Adf7012_Reg 002A                       ?_Timer0_Stop 0070  
         __size_of_Sinus_Generator 00A0          Ax25_Send_Footer@final_crc 002C  
           Ax25_Send_String@string 002D                           ?_Ptt_Off 0070  
               __end_of_Update_Crc 0E31                ??_Write_Adf7012_Reg 002B  
                   ?_Reverse_Array 0027                     ?_Spi_Byte_Send 0070  
         __end_of_global_interrupt 003A            __end_of_Dac0_Start_Hold 0C33  
                      ??_Adf_Reset 0026    __end_of_Adf_Write_Register_Zero 0375  
                Ax25_Send_String@i 002F          __end_of_Write_Adf7012_Reg 0ED6  
             __size_of_Gpio_Config 0010                      ?_System_Start 0070  
                     _modem_packet 01A0                          clear_ram0 0C50  
                        main@F3178 0138              __size_of_Timer0_Start 0005  
                         _Adf_Lock 0F8B              __size_of_Timer1_Start 000F  
        Reverse_Array@buffer_array 002D                        __stringdata 04BE  
__size_of_Adf_Write_Register_Three 016C            ?_Adf_Reset_Register_One 0070  
        ?_Adf_Write_Register_Three 0070            ?_Adf_Reset_Register_Two 0070  
             __size_of_Radio_Setup 000E                           _Delay_ms 0DAD  
            Send_Vcxo_Signal@value 0070                     ??_System_Start 0020  
                 _Adf_Reset_Config 0C8D                        ??_Send_Byte 0023  
             __size_of_Modem_Setup 0006                  _Modem_Flush_Frame 0D63  
               ?_Modem_Flush_Frame 0070                       _Timer0_Start 0C33  
                     _Timer1_Start 0C9C           ??_Adf_Write_Register_One 0033  
         ??_Adf_Write_Register_Two 0033                   __size_of_Ptt_Off 000E  
                  ??_Reverse_Array 0028                    ??_Spi_Byte_Send 0026  
            __end_of_PLAYBACK_RATE 04BA                ??_Modem_Flush_Frame 006C  
                ??_Sinus_Generator 0071   __size_of_Adf_Reset_Register_Zero 001F  
      __end_of_Read_Adf7012_Muxout 0C8D     __end_of_Adf_Reset_Register_One 0CDC  
                         _dac_flag 0136     __end_of_Adf_Reset_Register_Two 0D0C  
              __end_of_sine_table2 04B6                   ?_Dac0_Start_Hold 0070  
                   _Ax25_Send_Flag 0758                     _Ax25_Send_Byte 0C3E  
                   _Ax25_Send_Sync 0375                           __ptext10 0CCB  
                         __ptext11 03EE                           __ptext20 0375  
                         __ptext12 0CDC                           __ptext21 0D0C  
                         __ptext13 0D63                           __ptext30 0F1A  
                         __ptext22 057B                           __ptext14 0C33  
                         __ptext31 0E9D                           __ptext23 0DFF  
                         __ptext15 0E31                           __ptext32 07D4  
                         __ptext24 0758                           __ptext16 0CAB  
                         __ptext41 062F                           __ptext33 0ED6  
                         __ptext25 0F8B                           __ptext17 0D27  
                         __ptext42 0C25                           __ptext34 0DD6  
                         __ptext26 0C56                           __ptext18 0C3E  
                         __ptext43 0C29                           __ptext35 0C22  
                         __ptext27 02AE                           __ptext19 01D6  
                         __ptext36 0C7E                           __ptext28 04C4  
                         __ptext37 0DAD                           __ptext29 006A  
                         __ptext38 0C2E                           __ptext39 0C38  
                ?_Ax25_Send_Header 002C                  ?_Ax25_Send_Footer 0070  
               ??_Ax25_Send_Header 002E          __end_of_Modem_Flush_Frame 0D87  
       __size_of_Write_Adf7012_Reg 0039                  ?_Ax25_Send_String 002D  
               ??_Ax25_Send_Footer 002C                      __size_of_main 0089  
                      _phase_delta 00D1                  ?_Send_Vcxo_Signal 0070  
               ??_Ax25_Send_String 002F                 ??_Send_Vcxo_Signal 0070  
 __end_of_Adf_Reset_Register_Three 0DAD               __size_of_Timer0_Stop 0004  
       Adf_Write_Register_Zero@reg 0053   __size_of_Adf_Write_Register_Zero 00C7  
           __end_of_Ax25_Send_Flag 07D4             __end_of_Ax25_Send_Byte 0C44  
           __end_of_Ax25_Send_Sync 03EE                         _TABLE_SIZE 04BC  
                         memcpy@d1 0026                           memcpy@s1 0020  
                      pic14e$flags 007E                           intlevel1 0000  
        __size_of_Adf_Write_Config 000C                  __CFG_CLKOUTEN$OFF 0000  
               _MODEM_TRANSMITTING 00CC    __size_of_Adf_Write_Register_One 0071  
  __size_of_Adf_Write_Register_Two 00B7                         _Adc1_Start 0C38  
                      _sine_table2 0400               __end_of_System_Start 0E9D  
                  ?_Ax25_Send_Flag 0070                    ?_Ax25_Send_Byte 0070  
                  ?_Ax25_Send_Sync 0070                  ?_global_interrupt 0070  
      Sinus_Generator@Audio_Signal 0076                 ??_global_interrupt 0077  
       __size_of_Modem_Flush_Frame 0024                         _Adf_Locked 0C22  
                _modem_packet_size 0079   __end_of_Adf_Write_Register_Three 01D6  
